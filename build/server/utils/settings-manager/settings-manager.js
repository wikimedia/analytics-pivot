"use strict";Object.defineProperty(exports,"__esModule",{value:true});var immutable_class_1=require("immutable-class");var plywood_1=require("plywood");var Q=require("q");var models_1=require("../../../common/models");var time_monitor_1=require("../../../common/utils/time-monitor/time-monitor");var cluster_manager_1=require("../cluster-manager/cluster-manager");var file_manager_1=require("../file-manager/file-manager");var SettingsManager=function(){function e(e,t){var r=this;var n=t.logger;this.logger=n;this.verbose=Boolean(t.verbose);this.anchorPath=t.anchorPath;this.timeMonitor=new time_monitor_1.TimeMonitor(n);this.executors={};this.settingsStore=e;this.fileManagers=[];this.clusterManagers=[];this.initialLoadTimeout=t.initialLoadTimeout||3e4;this.appSettings=models_1.AppSettings.BLANK;e.on("update",function(e){n.log("Synchronizing settings from update");r.synchronizeSettings(e)});this.currentWork=e.readSettings().catch(function(e){if(t.onInitialReadFail)t.onInitialReadFail(e);throw e}).then(function(e){return r.synchronizeSettings(e)});if(this.settingsStore.needsAutoLoader){n.log("Adding auto loader");this.settingsStore.autoLoader=this.autoLoadDataCubes.bind(this);this.currentWork=this.currentWork.then(function(){return e.readSettings()}).then(function(e){return r.synchronizeSettings(e)})}this.currentWork=this.currentWork.catch(function(e){n.error("Fatal settings load error: "+e.message);n.error(e.stack);throw e})}e.prototype.isStateful=function(){return Boolean(this.settingsStore.writeSettings)};e.prototype.getClusterManagerFor=function(e){return immutable_class_1.SimpleArray.find(this.clusterManagers,function(t){return t.cluster.name===e})};e.prototype.getFileManagerFor=function(e){return immutable_class_1.SimpleArray.find(this.fileManagers,function(t){return t.uri===e})};e.prototype.getFullSettings=function(e){var t=this;if(e===void 0){e={}}var r=e.expectedVersion;var n=this.settingsStore;var o=this.currentWork;if(n.hasUpdateOnLoad){o=o.then(function(){return n.hasUpdateOnLoad().then(function(e){if(!e)return null;return n.readSettings().then(function(e){return t.synchronizeSettings(e)})})})}var a=e.timeout||this.initialLoadTimeout;if(a!==0){o=o.timeout(a).catch(function(e){t.logger.error("Settings load timeout hit, continuing")})}return o.then(function(){if(r&&r>t.appSettings.getVersion()){return n.readSettings().then(function(e){return t.synchronizeSettings(e)})}else{return null}}).then(function(){return{appSettings:t.appSettings,timekeeper:t.timeMonitor.timekeeper,executors:t.executors}})};e.prototype.synchronizeSettings=function(e){var t=[this.synchronizeClusters(e),this.synchronizeDataCubes(e)];this.appSettings=e;return Q.all(t)};e.prototype.addClusterManager=function(e){var t=this,r=t.verbose,n=t.logger,o=t.anchorPath;var a=new cluster_manager_1.ClusterManager(e,{logger:n,verbose:r,anchorPath:o});this.clusterManagers.push(a);return a.establishInitialConnection()};e.prototype.removeClusterManager=function(e){this.clusterManagers=this.clusterManagers.filter(function(t){if(t.cluster.name!==e.name)return true;t.destroy();return false})};e.prototype.synchronizeClusters=function(e){var t=this;var r=this,n=r.verbose,o=r.logger;var a=this.appSettings;var i=[];var s=function(r){var n=r.cluster.name;var a=e.getDataCubesByCluster(n);if(a.length){o.log("Updating managers for data cubes dependant on '"+n+"': "+a.map(function(e){return e.name}).join(", "));return Q.all(a.map(function(e){t.removeClusterCube(e);return t.addClusterCube(e)}))}return Q(null)};immutable_class_1.NamedArray.synchronize(a.clusters,e.clusters,{onExit:function(e){o.log("Removing cluster manager for '"+e.name+"'");t.removeClusterManager(e)},onUpdate:function(e,r){o.log("Updating cluster manager for '"+e.name+"'");t.removeClusterManager(r);i.push(t.addClusterManager(e).then(s).timeout(1e3,"moving on").catch(function(){o.error("Error in establishing cluster connection on update: "+e.name)}))},onEnter:function(e){o.log("Adding cluster manager for '"+e.name+"'");i.push(t.addClusterManager(e).then(s).timeout(1e3,"moving on").catch(function(){o.error("Error in establishing cluster connection on update: "+e.name)}))}});return Q.all(i)};e.prototype.addExecutor=function(e,t){this.executors[e.name]=t};e.prototype.removeExecutor=function(e){delete this.executors[e.name]};e.prototype.addTimeCheckIfNeeded=function(e){if(!e.getRefreshRule().isQuery())return Q(null);var t=this.executors[e.name];if(!t)return Q(null);var r=e.getMaxTimeQuery();if(r){return Q(this.timeMonitor.addCheck(e.name,function(){return t(r).then(models_1.DataCube.processMaxTimeQuery)}))}else{var n=e.getRefreshRule();if(n.isFixed()){this.timeMonitor.addStatic(e.name,n.time)}return Q(null)}};e.prototype.removeTimeCheck=function(e){this.timeMonitor.removeCheck(e.name)};e.prototype.addNativeCube=function(e){var t=this;if(e.clusterName!=="native")throw new Error("data cube '"+e.name+"' must be native to have a file manager");var r=this,n=r.verbose,o=r.logger,a=r.anchorPath;var i=new file_manager_1.FileManager({logger:o,verbose:n,anchorPath:a,uri:e.source,subsetExpression:e.subsetExpression});this.fileManagers.push(i);return i.loadDataset().then(function(r){var n=plywood_1.basicExecutorFactory({datasets:{main:r}});t.addExecutor(e,n);return t.addTimeCheckIfNeeded(e)})};e.prototype.removeNativeCube=function(e){if(e.clusterName!=="native")throw new Error("data cube '"+e.name+"' must be native to have a file manager");this.fileManagers=this.fileManagers.filter(function(t){if(t.uri!==e.source)return true;t.destroy();return false});this.removeExecutor(e);this.removeTimeCheck(e)};e.prototype.addClusterCube=function(e){var t=this.getClusterManagerFor(e.clusterName);if(t&&t.initialConnectionEstablished){var r=e.toExternal(t.cluster,t.requester);if(r.needsIntrospect())throw new Error("must be introspected at this point, something went very wrong");var n=plywood_1.basicExecutorFactory({datasets:{main:r}});this.addExecutor(e,n);return this.addTimeCheckIfNeeded(e)}return Q(null)};e.prototype.removeClusterCube=function(e){this.removeExecutor(e);this.removeTimeCheck(e)};e.prototype.synchronizeDataCubes=function(e){var t=this;var r=this,n=r.verbose,o=r.logger;var a=this.appSettings;var i=[];immutable_class_1.NamedArray.synchronize(a.dataCubes,e.dataCubes,{onExit:function(e){o.log("Removing data cube manager for '"+e.name+"'");if(e.clusterName==="native"){t.removeNativeCube(e)}else{t.removeClusterCube(e)}},onUpdate:function(e,r){if(e.clusterName==="native"&&r.clusterName==="native"&&e.source===r.source)return;o.log("Updating data cube manager for '"+e.name+"'");if(r.clusterName==="native"){t.removeNativeCube(r);i.push(t.addNativeCube(e))}else{t.removeClusterCube(r);i.push(t.addClusterCube(e))}},onEnter:function(e){o.log("Adding data cube manager for '"+e.name+"'");if(e.clusterName==="native"){i.push(t.addNativeCube(e))}else{i.push(t.addClusterCube(e))}}});return Q.all(i)};e.prototype.updateSettings=function(e){var t=this;if(!this.settingsStore.writeSettings)return Q.reject(new Error("must be writable"));return this.currentWork.then(function(){if(e.getVersion()!==t.appSettings.getVersion()+1){if(e.getVersion()<t.appSettings.getVersion()+1){throw new Error("your settings are too old")}else{throw new Error("your settings are ahead of their time")}}return t.settingsStore.writeSettings(e)}).then(function(){return t.synchronizeSettings(e)}).then(function(){return{appSettings:t.appSettings,timekeeper:t.timeMonitor.timekeeper,executors:t.executors}})};e.prototype.checkClusterConnectionInfo=function(e){var t=this,r=t.verbose,n=t.logger,o=t.anchorPath;var a=new cluster_manager_1.ClusterManager(e,{logger:n,verbose:r,anchorPath:o});return a.establishInitialConnection(0).then(function(){return a.getSources()},function(e){throw new Error("Unable to connect to cluster")}).then(function(e){return{cluster:a.cluster,sources:e}})};e.prototype.getAllClusterSources=function(){var e=this.logger;var t=this.clusterManagers.map(function(t){if(!t.initialConnectionEstablished)return null;var r=t.cluster,n=r.name,o=r.title;return t.getSources().then(function(e){return e.map(function(e){return{clusterName:n,clusterTitle:o,source:e}})}).timeout(1e3,"not waiting for source").catch(function(t){e.log("could not get dataSources for cluster "+o+" ["+n+"] because: "+t.message);return[]})}).filter(Boolean);return Q.all(t).then(function(e){return[].concat.apply([],e)})};e.prototype.getAllAttributes=function(e,t,r){var n=this;if(r===void 0){r=null}var o=this,a=o.verbose,i=o.logger,s=o.anchorPath;var u=typeof t==="string"?t:t.name;if(t==="native"){i.log("Getting attributes for native source '"+e+"'");return Q(null).then(function(){var t=n.getFileManagerFor(e);if(t)return t.dataset.attributes;t=new file_manager_1.FileManager({logger:i,verbose:a,anchorPath:s,uri:e});return t.loadDataset().then(function(e){return e.attributes})})}else{i.log("Getting attributes for source '"+e+"' in cluster '"+u+"'");return Q.fcall(function(){if(typeof t==="string"){var e=n.getClusterManagerFor(t);if(!e)throw new Error("no cluster manager for "+t);return e}else{var r=new cluster_manager_1.ClusterManager(t,{logger:i,verbose:a,anchorPath:s});return r.establishInitialConnection().then(function(){return r})}}).then(function(t){return(r||models_1.DataCube.fromClusterAndSource("test_cube",t.cluster,e)).toExternal(t.cluster,t.requester).introspect().then(function(e){return e.attributes})})}};e.prototype.autoLoadDataCubes=function(e){var t=this;var r=this,n=r.verbose,o=r.logger;o.log("Auto loading");return this.getAllClusterSources().then(function(r){var a=[];var i=[];var s=[];e.getDataCubesByCluster("native").forEach(function(e){a.push(t.getAllAttributes(e.source,"native").then(function(t){i.push(e.fillAllFromAttributes(t))},function(){}))});r.forEach(function(r,u){var c=r.clusterName,l=r.source;var g=e.getDataCubesByClusterSource(c,l);var h=g.length===0;if(h){var f=c+"-"+l+"-"+u;if(n)o.log("Adding data cube '"+f+"'");var m=e.getCluster(c);if(m.getSourceListScan()==="auto"){g=[models_1.DataCube.fromClusterAndSource(f,m,l)]}}g.forEach(function(e){a.push(t.getAllAttributes(l,c,e).then(function(t){o.log("Got attributes for '"+e.name+"'");var r=e.fillAllFromAttributes(t);if(h){s.push(r)}else{i.push(r)}},function(t){o.error("Couldn't get attributes for '"+e.name+"' because: "+t.message)}))})});return Q.all(a).then(function(){return e.changeDataCubes(i.concat(s))})})};return e}();exports.SettingsManager=SettingsManager;