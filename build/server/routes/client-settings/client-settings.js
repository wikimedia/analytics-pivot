"use strict";var nike_hercules_1=require("@implydata/nike-hercules");var models_1=require("../../../common/models");var config_1=require("../../config");var data_cube_diff_1=require("../../../common/models/data-cube-diff/data-cube-diff");var collection_diff_1=require("../../../common/models/collection-diff/collection-diff");var router=nike_hercules_1.HerculesServer.makeRouter();router.post("/",function(e,r){var o=e.body.settingsVersion;if(config_1.LICENSE_MANAGER.isExpired()){r.status(501).send({error:"evaluation expired"});return}e.getFullSettings({expectedVersion:o}).then(function(e){var o=e.appSettings;r.send({clientSettings:o.toClientSettings()})},function(e){console.log("error:",e.message);if(e.hasOwnProperty("stack")){console.log(e.stack)}r.status(500).send({error:"could not compute",message:e.message})}).done()});router.post("/change",function(e,r){var o=e.body,t=o.dataCubeDiffs,n=o.collectionDiffs,s=o.settingsVersion;if(!Array.isArray(t)){r.status(400).send({error:"bad dataCubeDiffs",message:"dataCubeDiffs not an array"});return}if(!Array.isArray(n)){r.status(400).send({error:"bad collectionDiffs",message:"collectionDiffs not an array"});return}e.getFullSettings({expectedVersion:s}).then(function(e){var r=e.appSettings;for(var o=0,s=t;o<s.length;o++){var i=s[o];var a=data_cube_diff_1.DataCubeDiff.fromJS(i);var f=r.applyDataCubeDiff(a);if(f){r=f}else{if(a.before){var c=r.getDataCube(a.before.name);console.error("Diff not accepted:");if(c){console.error("Existing: "+JSON.stringify(c));console.error("DfBefore: "+JSON.stringify(a.before))}else{console.error("Before does not exist ("+a.before.name+")")}}throw new Error("can not apply data cube diff "+a.getName())}}var l={dataCubes:r.dataCubes,visualizations:models_1.MANIFESTS};for(var u=0,d=n;u<d.length;u++){var g=d[u];var m=collection_diff_1.CollectionDiff.fromJS(g,l);var f=r.applyCollectionDiff(m);if(f){r=f}else{if(m.before){var p=r.getCollection(m.before.name);console.error("Diff not accepted:");if(p){console.error("Existing: "+JSON.stringify(p));console.error("DfBefore: "+JSON.stringify(m.before))}else{console.error("Before does not exist ("+m.before.name+")")}}throw new Error("can not apply collection diff "+m.getName())}}return r.incrementVersion()}).then(function(e){return config_1.SETTINGS_MANAGER.updateSettings(e).then(function(e){r.send({clientSettings:e.appSettings.toClientSettings()})},function(e){console.log("error:",e.message);if(e.hasOwnProperty("stack")){console.log(e.stack)}r.status(500).send({error:"could not process",message:e.message})})}).catch(function(e){r.status(409).send({error:"conflict",message:e.message,action:"update"})}).done()});module.exports=router;