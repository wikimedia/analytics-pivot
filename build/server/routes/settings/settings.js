"use strict";var nike_hercules_1=require("@implydata/nike-hercules");var models_1=require("../../../common/models");var config_1=require("../../config");var views_1=require("../../views");var router=nike_hercules_1.HerculesServer.makeRouter();router.get("/",function(e,t,s){e.getFullSettings().then(function(s){var r=s.appSettings,o=s.timekeeper;var n=r.toClientSettings();t.send(views_1.settingsLayout({version:e.version,title:r.customization.getTitleWithVersion(e.version),user:e.user,appSettings:n,timekeeper:o,stateful:e.stateful,userMode:e.userMode}))}).done()});router.post("/load",function(e,t){var s=e.body.settingsVersion;config_1.SETTINGS_MANAGER.getFullSettings({expectedVersion:s}).then(function(e){t.send({appSettings:e.appSettings})},function(e){console.log("error:",e.message);if(e.hasOwnProperty("stack")){console.log(e.stack)}t.status(500).send({error:"could not compute",message:e.message})}).done()});router.post("/set",function(e,t){var s=e.body.appSettings;var r;try{r=models_1.AppSettings.fromJS(s,{visualizations:models_1.MANIFESTS})}catch(e){t.status(400).send({error:"bad settings",message:e.message});return}if(e.userMode==="native-users"&&e.user&&!r.getUserAuth(e.user.name,config_1.SERVER_SETTINGS.getDefaultAdminPass())){t.status(403).send({error:"user not in new settings"});return}config_1.SETTINGS_MANAGER.updateSettings(r).then(function(e){t.send({status:"ok",timekeeper:e.timekeeper})},function(e){console.log("error:",e.message);if(e.hasOwnProperty("stack")){console.log(e.stack)}t.status(500).send({error:"could not update",message:e.message})}).done()});router.post("/cluster-connection",function(e,t){var s=e.body.cluster;if(typeof s==="undefined"){t.status(400).send({error:"must have a cluster"});return}var r;try{r=models_1.Cluster.fromJS(s)}catch(e){t.status(400).send({error:"invalid cluster",message:e.message});return}config_1.SETTINGS_MANAGER.checkClusterConnectionInfo(r).then(function(e){t.send(e)},function(e){console.log("error:",e.message);if(e.hasOwnProperty("stack")){console.log(e.stack)}t.status(500).send({error:"could not compute",message:e.message})}).done()});router.get("/cluster-sources",function(e,t){config_1.SETTINGS_MANAGER.getAllClusterSources().then(function(e){t.send({clusterSources:e})},function(e){console.log("error:",e.message);if(e.hasOwnProperty("stack")){console.log(e.stack)}t.status(500).send({error:"could not compute",message:e.message})}).done()});router.post("/attributes",function(e,t){var s=e.body,r=s.source,o=s.cluster,n=s.clusterName;if(typeof r!=="string"){t.status(400).send({error:"must have a source"});return}var u=null;if(typeof n!=="string"){if(typeof o==="undefined"){t.status(400).send({error:"must have a clusterName or cluster"});return}try{u=models_1.Cluster.fromJS(o)}catch(e){t.status(400).send({error:"invalid cluster",message:e.message});return}}config_1.SETTINGS_MANAGER.getAllAttributes(r,u||n).then(function(e){t.send({attributes:e})},function(e){console.log("error:",e.message);if(e.hasOwnProperty("stack")){console.log(e.stack)}t.status(500).send({error:"could not compute",message:e.message})}).done()});router.post("/check-version",function(e,t){var s=e.body.settingsVersion;e.getFullSettings({expectedVersion:s}).then(function(e){var r=e.appSettings;var o=false;if(s<r.getVersion()){o=true}var n={};if(o)n.action="update";t.json(n)}).done()});module.exports=router;