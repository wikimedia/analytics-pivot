"use strict";Object.defineProperty(exports,"__esModule",{value:true});var tslib_1=require("tslib");var beltful_1=require("@implydata/beltful");var immutable_class_1=require("immutable-class");function ensureNotNative(e){if(e==="native"){throw new Error("can not be 'native'")}}var Cluster=function(e){tslib_1.__extends(t,e);function t(t){var l=e.call(this,t)||this;if(!l.title)l.title=l.name;switch(l.type){case"druid":l.database=null;l.user=null;l.password=null;break;case"mysql":case"postgres":l.introspectionStrategy=null;l.requestDecorator=null;l.decoratorOptions=null;l.socksHost=null;l.socksUsername=null;l.socksPassword=null;break}return l}t.isCluster=function(e){return e instanceof t};t.fromJS=function(e){if(!e.host&&(e.druidHost||e.brokerHost)){e.host=e.druidHost||e.brokerHost}if(typeof e.timeout==="string"){e.timeout=parseInt(e.timeout,10)}return new t(immutable_class_1.BaseImmutable.jsToValue(t.PROPERTIES,e))};t.prototype.toClientCluster=function(){return new t({name:this.name,type:this.type})};t.prototype.shouldScanSources=function(){return this.getSourceListScan()==="auto"};t.prototype.guessName=function(){return beltful_1.StringUtils.makeUrlSafeName(this.type+"-cluster")};t.prototype.guessTitle=function(){return"My "+this.type+" cluster"};return t}(immutable_class_1.BaseImmutable);Cluster.TYPE_VALUES=["druid","druidsql","mysql","postgres"];Cluster.DEFAULT_TIMEOUT=4e4;Cluster.DEFAULT_SOURCE_LIST_SCAN="auto";Cluster.SOURCE_LIST_SCAN_VALUES=["disable","auto"];Cluster.DEFAULT_INTROSPECTION_STRATEGY="segment-metadata-fallback";Cluster.PROPERTIES=[{name:"name",validate:[beltful_1.StringUtils.verifyUrlSafeName,ensureNotNative]},{name:"type",possibleValues:Cluster.TYPE_VALUES},{name:"host",defaultValue:null},{name:"title",defaultValue:""},{name:"version",defaultValue:null},{name:"timeout",defaultValue:Cluster.DEFAULT_TIMEOUT},{name:"sourceListScan",defaultValue:Cluster.DEFAULT_SOURCE_LIST_SCAN,possibleValues:Cluster.SOURCE_LIST_SCAN_VALUES},{name:"introspectionStrategy",defaultValue:Cluster.DEFAULT_INTROSPECTION_STRATEGY},{name:"requestDecorator",defaultValue:null},{name:"decoratorOptions",defaultValue:null},{name:"socksHost",defaultValue:null},{name:"socksUsername",defaultValue:null},{name:"socksPassword",defaultValue:null},{name:"database",defaultValue:null},{name:"user",defaultValue:null},{name:"password",defaultValue:null}];exports.Cluster=Cluster;immutable_class_1.BaseImmutable.finalize(Cluster);