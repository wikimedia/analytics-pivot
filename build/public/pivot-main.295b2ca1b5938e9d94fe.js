webpackJsonp([1],Array(191).concat([
/* 191 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', { value: true });

	var walltimeRepack = __webpack_require__(192);
	var immutableClass = __webpack_require__(193);

	var Timezone = (function () {
	    function Timezone(timezone) {
	        if (typeof timezone !== 'string') {
	            throw new TypeError("timezone description must be a string");
	        }
	        if (timezone !== 'Etc/UTC') {
	            walltimeRepack.WallTime.UTCToWallTime(new Date(0), timezone);
	        }
	        this.timezone = timezone;
	    }
	    Timezone.isTimezone = function (candidate) {
	        return immutableClass.isInstanceOf(candidate, Timezone);
	    };
	    Timezone.fromJS = function (spec) {
	        return new Timezone(spec);
	    };
	    Timezone.prototype.valueOf = function () {
	        return this.timezone;
	    };
	    Timezone.prototype.toJS = function () {
	        return this.timezone;
	    };
	    Timezone.prototype.toJSON = function () {
	        return this.timezone;
	    };
	    Timezone.prototype.toString = function () {
	        return this.timezone;
	    };
	    Timezone.prototype.equals = function (other) {
	        return Timezone.isTimezone(other) &&
	            this.timezone === other.timezone;
	    };
	    Timezone.prototype.isUTC = function () {
	        return this.timezone === 'Etc/UTC';
	    };
	    Timezone.UTC = new Timezone('Etc/UTC');
	    return Timezone;
	}());

	function adjustDay(day) {
	    return (day + 6) % 7;
	}
	function floorTo(n, roundTo) {
	    return Math.floor(n / roundTo) * roundTo;
	}
	function timeShifterFiller(tm) {
	    var floor = tm.floor, shift = tm.shift;
	    tm.ceil = function (dt, tz) {
	        var floored = floor(dt, tz);
	        if (floored.valueOf() === dt.valueOf())
	            return dt;
	        return shift(floored, tz, 1);
	    };
	    tm.move = tm.shift;
	    return tm;
	}
	var second = timeShifterFiller({
	    canonicalLength: 1000,
	    siblings: 60,
	    floor: function (dt, tz) {
	        dt = new Date(dt.valueOf());
	        dt.setUTCMilliseconds(0);
	        return dt;
	    },
	    round: function (dt, roundTo, tz) {
	        var cur = dt.getUTCSeconds();
	        var adj = floorTo(cur, roundTo);
	        if (cur !== adj)
	            dt.setUTCSeconds(adj);
	        return dt;
	    },
	    shift: function (dt, tz, step) {
	        dt = new Date(dt.valueOf());
	        dt.setUTCSeconds(dt.getUTCSeconds() + step);
	        return dt;
	    }
	});
	var minute = timeShifterFiller({
	    canonicalLength: 60000,
	    siblings: 60,
	    floor: function (dt, tz) {
	        dt = new Date(dt.valueOf());
	        dt.setUTCSeconds(0, 0);
	        return dt;
	    },
	    round: function (dt, roundTo, tz) {
	        var cur = dt.getUTCMinutes();
	        var adj = floorTo(cur, roundTo);
	        if (cur !== adj)
	            dt.setUTCMinutes(adj);
	        return dt;
	    },
	    shift: function (dt, tz, step) {
	        dt = new Date(dt.valueOf());
	        dt.setUTCMinutes(dt.getUTCMinutes() + step);
	        return dt;
	    }
	});
	function hourMove(dt, tz, step) {
	    if (tz.isUTC()) {
	        dt = new Date(dt.valueOf());
	        dt.setUTCHours(dt.getUTCHours() + step);
	    }
	    else {
	        var wt = walltimeRepack.WallTime.UTCToWallTime(dt, tz.toString());
	        dt = walltimeRepack.WallTime.WallTimeToUTC(tz.toString(), wt.getFullYear(), wt.getMonth(), wt.getDate(), wt.getHours() + step, wt.getMinutes(), wt.getSeconds(), wt.getMilliseconds());
	    }
	    return dt;
	}
	var hour = timeShifterFiller({
	    canonicalLength: 3600000,
	    siblings: 24,
	    floor: function (dt, tz) {
	        if (tz.isUTC()) {
	            dt = new Date(dt.valueOf());
	            dt.setUTCMinutes(0, 0, 0);
	        }
	        else {
	            var wt = walltimeRepack.WallTime.UTCToWallTime(dt, tz.toString());
	            dt = walltimeRepack.WallTime.WallTimeToUTC(tz.toString(), wt.getFullYear(), wt.getMonth(), wt.getDate(), wt.getHours(), 0, 0, 0);
	        }
	        return dt;
	    },
	    round: function (dt, roundTo, tz) {
	        if (tz.isUTC()) {
	            var cur = dt.getUTCHours();
	            var adj = floorTo(cur, roundTo);
	            if (cur !== adj)
	                dt.setUTCHours(adj);
	        }
	        else {
	            var wt = walltimeRepack.WallTime.UTCToWallTime(dt, tz.toString());
	            var cur = wt.getHours();
	            var adj = floorTo(cur, roundTo);
	            if (cur !== adj)
	                return hourMove(dt, tz, adj - cur);
	        }
	        return dt;
	    },
	    shift: hourMove
	});
	var day = timeShifterFiller({
	    canonicalLength: 24 * 3600000,
	    floor: function (dt, tz) {
	        if (tz.isUTC()) {
	            dt = new Date(dt.valueOf());
	            dt.setUTCHours(0, 0, 0, 0);
	        }
	        else {
	            var wt = walltimeRepack.WallTime.UTCToWallTime(dt, tz.toString());
	            dt = walltimeRepack.WallTime.WallTimeToUTC(tz.toString(), wt.getFullYear(), wt.getMonth(), wt.getDate(), 0, 0, 0, 0);
	        }
	        return dt;
	    },
	    shift: function (dt, tz, step) {
	        if (tz.isUTC()) {
	            dt = new Date(dt.valueOf());
	            dt.setUTCDate(dt.getUTCDate() + step);
	        }
	        else {
	            var wt = walltimeRepack.WallTime.UTCToWallTime(dt, tz.toString());
	            dt = walltimeRepack.WallTime.WallTimeToUTC(tz.toString(), wt.getFullYear(), wt.getMonth(), wt.getDate() + step, wt.getHours(), wt.getMinutes(), wt.getSeconds(), wt.getMilliseconds());
	        }
	        return dt;
	    }
	});
	var week = timeShifterFiller({
	    canonicalLength: 7 * 24 * 3600000,
	    floor: function (dt, tz) {
	        if (tz.isUTC()) {
	            dt = new Date(dt.valueOf());
	            dt.setUTCHours(0, 0, 0, 0);
	            dt.setUTCDate(dt.getUTCDate() - adjustDay(dt.getUTCDay()));
	        }
	        else {
	            var wt = walltimeRepack.WallTime.UTCToWallTime(dt, tz.toString());
	            dt = walltimeRepack.WallTime.WallTimeToUTC(tz.toString(), wt.getFullYear(), wt.getMonth(), wt.getDate() - adjustDay(wt.getDay()), 0, 0, 0, 0);
	        }
	        return dt;
	    },
	    shift: function (dt, tz, step) {
	        if (tz.isUTC()) {
	            dt = new Date(dt.valueOf());
	            dt.setUTCDate(dt.getUTCDate() + step * 7);
	        }
	        else {
	            var wt = walltimeRepack.WallTime.UTCToWallTime(dt, tz.toString());
	            dt = walltimeRepack.WallTime.WallTimeToUTC(tz.toString(), wt.getFullYear(), wt.getMonth(), wt.getDate() + step * 7, wt.getHours(), wt.getMinutes(), wt.getSeconds(), wt.getMilliseconds());
	        }
	        return dt;
	    }
	});
	function monthShift(dt, tz, step) {
	    if (tz.isUTC()) {
	        dt = new Date(dt.valueOf());
	        dt.setUTCMonth(dt.getUTCMonth() + step);
	    }
	    else {
	        var wt = walltimeRepack.WallTime.UTCToWallTime(dt, tz.toString());
	        dt = walltimeRepack.WallTime.WallTimeToUTC(tz.toString(), wt.getFullYear(), wt.getMonth() + step, wt.getDate(), wt.getHours(), wt.getMinutes(), wt.getSeconds(), wt.getMilliseconds());
	    }
	    return dt;
	}
	var month = timeShifterFiller({
	    canonicalLength: 30 * 24 * 3600000,
	    siblings: 12,
	    floor: function (dt, tz) {
	        if (tz.isUTC()) {
	            dt = new Date(dt.valueOf());
	            dt.setUTCHours(0, 0, 0, 0);
	            dt.setUTCDate(1);
	        }
	        else {
	            var wt = walltimeRepack.WallTime.UTCToWallTime(dt, tz.toString());
	            dt = walltimeRepack.WallTime.WallTimeToUTC(tz.toString(), wt.getFullYear(), wt.getMonth(), 1, 0, 0, 0, 0);
	        }
	        return dt;
	    },
	    round: function (dt, roundTo, tz) {
	        if (tz.isUTC()) {
	            var cur = dt.getUTCMonth();
	            var adj = floorTo(cur, roundTo);
	            if (cur !== adj)
	                dt.setUTCMonth(adj);
	        }
	        else {
	            var cur = dt.getMonth();
	            var adj = floorTo(cur, roundTo);
	            if (cur !== adj)
	                return monthShift(dt, tz, adj - cur);
	        }
	        return dt;
	    },
	    shift: monthShift
	});
	function yearShift(dt, tz, step) {
	    if (tz.isUTC()) {
	        dt = new Date(dt.valueOf());
	        dt.setUTCFullYear(dt.getUTCFullYear() + step);
	    }
	    else {
	        var wt = walltimeRepack.WallTime.UTCToWallTime(dt, tz.toString());
	        dt = walltimeRepack.WallTime.WallTimeToUTC(tz.toString(), wt.getFullYear() + step, wt.getMonth(), wt.getDate(), wt.getHours(), wt.getMinutes(), wt.getSeconds(), wt.getMilliseconds());
	    }
	    return dt;
	}
	var year = timeShifterFiller({
	    canonicalLength: 365 * 24 * 3600000,
	    siblings: 1000,
	    floor: function (dt, tz) {
	        if (tz.isUTC()) {
	            dt = new Date(dt.valueOf());
	            dt.setUTCHours(0, 0, 0, 0);
	            dt.setUTCMonth(0, 1);
	        }
	        else {
	            var wt = walltimeRepack.WallTime.UTCToWallTime(dt, tz.toString());
	            dt = walltimeRepack.WallTime.WallTimeToUTC(tz.toString(), wt.getFullYear(), 0, 1, 0, 0, 0, 0);
	        }
	        return dt;
	    },
	    round: function (dt, roundTo, tz) {
	        if (tz.isUTC()) {
	            var cur = dt.getUTCFullYear();
	            var adj = floorTo(cur, roundTo);
	            if (cur !== adj)
	                dt.setUTCFullYear(adj);
	        }
	        else {
	            var cur = dt.getFullYear();
	            var adj = floorTo(cur, roundTo);
	            if (cur !== adj)
	                return yearShift(dt, tz, adj - cur);
	        }
	        return dt;
	    },
	    shift: yearShift
	});
	var shifters = {
	    second: second,
	    minute: minute,
	    hour: hour,
	    day: day,
	    week: week,
	    month: month,
	    year: year
	};

	var spansWithWeek = ["year", "month", "week", "day", "hour", "minute", "second"];
	var spansWithoutWeek = ["year", "month", "day", "hour", "minute", "second"];
	function capitalizeFirst(str) {
	    if (!str.length)
	        return str;
	    return str[0].toUpperCase() + str.substr(1);
	}
	var periodWeekRegExp = /^P(\d+)W$/;
	var periodRegExp = /^P(?:(\d+)Y)?(?:(\d+)M)?(?:(\d+)D)?(?:T(?:(\d+)H)?(?:(\d+)M)?(?:(\d+)S)?)?$/;
	function getSpansFromString(durationStr) {
	    var spans = {};
	    var matches;
	    if (matches = periodWeekRegExp.exec(durationStr)) {
	        spans.week = Number(matches[1]);
	        if (!spans.week)
	            throw new Error("Duration can not be empty");
	    }
	    else if (matches = periodRegExp.exec(durationStr)) {
	        var nums = matches.map(Number);
	        for (var i = 0; i < spansWithoutWeek.length; i++) {
	            var span = spansWithoutWeek[i];
	            var value = nums[i + 1];
	            if (value)
	                spans[span] = value;
	        }
	    }
	    else {
	        throw new Error("Can not parse duration '" + durationStr + "'");
	    }
	    return spans;
	}
	function getSpansFromStartEnd(start, end, timezone) {
	    start = second.floor(start, timezone);
	    end = second.floor(end, timezone);
	    if (end <= start)
	        throw new Error("start must come before end");
	    var spans = {};
	    var iterator = start;
	    for (var i = 0; i < spansWithoutWeek.length; i++) {
	        var span = spansWithoutWeek[i];
	        var spanCount = 0;
	        var length = end.valueOf() - iterator.valueOf();
	        var canonicalLength = shifters[span].canonicalLength;
	        if (length < canonicalLength / 4)
	            continue;
	        var numberToFit = Math.min(0, Math.floor(length / canonicalLength) - 1);
	        var iteratorMove;
	        if (numberToFit > 0) {
	            iteratorMove = shifters[span].shift(iterator, timezone, numberToFit);
	            if (iteratorMove <= end) {
	                spanCount += numberToFit;
	                iterator = iteratorMove;
	            }
	        }
	        while (true) {
	            iteratorMove = shifters[span].shift(iterator, timezone, 1);
	            if (iteratorMove <= end) {
	                iterator = iteratorMove;
	                spanCount++;
	            }
	            else {
	                break;
	            }
	        }
	        if (spanCount) {
	            spans[span] = spanCount;
	        }
	    }
	    return spans;
	}
	function removeZeros(spans) {
	    var newSpans = {};
	    for (var i = 0; i < spansWithWeek.length; i++) {
	        var span = spansWithWeek[i];
	        if (spans[span] > 0) {
	            newSpans[span] = spans[span];
	        }
	    }
	    return newSpans;
	}
	var Duration = (function () {
	    function Duration(spans, end, timezone) {
	        if (spans && end && timezone) {
	            spans = getSpansFromStartEnd(spans, end, timezone);
	        }
	        else if (typeof spans === 'object') {
	            spans = removeZeros(spans);
	        }
	        else {
	            throw new Error("new Duration called with bad argument");
	        }
	        var usedSpans = Object.keys(spans);
	        if (!usedSpans.length)
	            throw new Error("Duration can not be empty");
	        if (usedSpans.length === 1) {
	            this.singleSpan = usedSpans[0];
	        }
	        else if (spans.week) {
	            throw new Error("Can not mix 'week' and other spans");
	        }
	        this.spans = spans;
	    }
	    Duration.fromJS = function (durationStr) {
	        if (typeof durationStr !== 'string')
	            throw new TypeError("Duration JS must be a string");
	        return new Duration(getSpansFromString(durationStr));
	    };
	    Duration.fromCanonicalLength = function (length) {
	        var spans = {};
	        for (var i = 0; i < spansWithWeek.length; i++) {
	            var span = spansWithWeek[i];
	            var spanLength = shifters[span].canonicalLength;
	            var count = Math.floor(length / spanLength);
	            length -= spanLength * count;
	            spans[span] = count;
	        }
	        return new Duration(spans);
	    };
	    Duration.isDuration = function (candidate) {
	        return immutableClass.isInstanceOf(candidate, Duration);
	    };
	    Duration.prototype.toString = function () {
	        var strArr = ["P"];
	        var spans = this.spans;
	        if (spans.week) {
	            strArr.push(String(spans.week), 'W');
	        }
	        else {
	            var addedT = false;
	            for (var i = 0; i < spansWithoutWeek.length; i++) {
	                var span = spansWithoutWeek[i];
	                var value = spans[span];
	                if (!value)
	                    continue;
	                if (!addedT && i >= 3) {
	                    strArr.push("T");
	                    addedT = true;
	                }
	                strArr.push(String(value), span[0].toUpperCase());
	            }
	        }
	        return strArr.join("");
	    };
	    Duration.prototype.add = function (duration) {
	        return Duration.fromCanonicalLength(this.getCanonicalLength() + duration.getCanonicalLength());
	    };
	    Duration.prototype.subtract = function (duration) {
	        var newCanonicalDuration = this.getCanonicalLength() - duration.getCanonicalLength();
	        if (newCanonicalDuration < 0)
	            throw new Error("A duration can not be negative.");
	        return Duration.fromCanonicalLength(newCanonicalDuration);
	    };
	    Duration.prototype.valueOf = function () {
	        return this.spans;
	    };
	    Duration.prototype.toJS = function () {
	        return this.toString();
	    };
	    Duration.prototype.toJSON = function () {
	        return this.toString();
	    };
	    Duration.prototype.equals = function (other) {
	        return Boolean(other) &&
	            this.toString() === other.toString();
	    };
	    Duration.prototype.isSimple = function () {
	        var singleSpan = this.singleSpan;
	        if (!singleSpan)
	            return false;
	        return this.spans[singleSpan] === 1;
	    };
	    Duration.prototype.isFloorable = function () {
	        var singleSpan = this.singleSpan;
	        if (!singleSpan)
	            return false;
	        var span = this.spans[singleSpan];
	        if (span === 1)
	            return true;
	        var siblings = shifters[singleSpan].siblings;
	        if (!siblings)
	            return false;
	        return siblings % span === 0;
	    };
	    Duration.prototype.floor = function (date, timezone) {
	        var singleSpan = this.singleSpan;
	        if (!singleSpan)
	            throw new Error("Can not floor on a complex duration");
	        var span = this.spans[singleSpan];
	        var mover = shifters[singleSpan];
	        var dt = mover.floor(date, timezone);
	        if (span !== 1) {
	            if (!mover.siblings)
	                throw new Error("Can not floor on a " + singleSpan + " duration that is not 1");
	            if (mover.siblings % span !== 0)
	                throw new Error("Can not floor on a " + singleSpan + " duration that does not divide into " + mover.siblings);
	            dt = mover.round(dt, span, timezone);
	        }
	        return dt;
	    };
	    Duration.prototype.shift = function (date, timezone, step) {
	        if (step === void 0) { step = 1; }
	        var spans = this.spans;
	        for (var _i = 0, spansWithWeek_1 = spansWithWeek; _i < spansWithWeek_1.length; _i++) {
	            var span = spansWithWeek_1[_i];
	            var value = spans[span];
	            if (value)
	                date = shifters[span].shift(date, timezone, step * value);
	        }
	        return date;
	    };
	    Duration.prototype.materialize = function (start, end, timezone, step) {
	        if (step === void 0) { step = 1; }
	        var values = [];
	        var iter = this.floor(start, timezone);
	        while (iter <= end) {
	            values.push(iter);
	            iter = this.shift(iter, timezone, step);
	        }
	        return values;
	    };
	    Duration.prototype.isAligned = function (date, timezone) {
	        return this.floor(date, timezone).valueOf() === date.valueOf();
	    };
	    Duration.prototype.dividesBy = function (smaller) {
	        var myCanonicalLength = this.getCanonicalLength();
	        var smallerCanonicalLength = smaller.getCanonicalLength();
	        return myCanonicalLength % smallerCanonicalLength === 0 && this.isFloorable() && smaller.isFloorable();
	    };
	    Duration.prototype.getCanonicalLength = function () {
	        var spans = this.spans;
	        var length = 0;
	        for (var _i = 0, spansWithWeek_2 = spansWithWeek; _i < spansWithWeek_2.length; _i++) {
	            var span = spansWithWeek_2[_i];
	            var value = spans[span];
	            if (value)
	                length += value * shifters[span].canonicalLength;
	        }
	        return length;
	    };
	    Duration.prototype.getDescription = function (capitalize) {
	        var spans = this.spans;
	        var description = [];
	        for (var _i = 0, spansWithWeek_3 = spansWithWeek; _i < spansWithWeek_3.length; _i++) {
	            var span = spansWithWeek_3[_i];
	            var value = spans[span];
	            var spanTitle = capitalize ? capitalizeFirst(span) : span;
	            if (value) {
	                if (value === 1) {
	                    description.push(spanTitle);
	                }
	                else {
	                    description.push(String(value) + ' ' + spanTitle + 's');
	                }
	            }
	        }
	        return description.join(', ');
	    };
	    Duration.prototype.getSingleSpan = function () {
	        return this.singleSpan || null;
	    };
	    Duration.prototype.getSingleSpanValue = function () {
	        if (!this.singleSpan)
	            return null;
	        return this.spans[this.singleSpan] || null;
	    };
	    return Duration;
	}());

	function parseYear(v) {
	    if (v.length === 2) {
	        var vn = parseInt(v, 10);
	        return (vn < 70 ? 2000 : 1900) + vn;
	    }
	    else if (v.length === 4) {
	        return parseInt(v, 10);
	    }
	    else {
	        throw new Error('Invalid year in date');
	    }
	}
	function parseMonth(v) {
	    var vn = parseInt(v, 10);
	    if (vn <= 0 || 12 < vn)
	        throw new Error('Invalid month in date');
	    return vn - 1;
	}
	function parseDay(v) {
	    var vn = parseInt(v, 10);
	    if (vn <= 0 || 31 < vn)
	        throw new Error('Invalid day in date');
	    return vn;
	}
	function parseHour(v) {
	    var vn = parseInt(v, 10);
	    if (vn < 0 || 24 < vn)
	        throw new Error('Invalid hour in date');
	    return vn;
	}
	function parseMinute(v) {
	    var vn = parseInt(v, 10);
	    if (vn < 0 || 60 < vn)
	        throw new Error('Invalid minute in date');
	    return vn;
	}
	function parseSecond(v) {
	    var vn = parseInt(v, 10);
	    if (vn < 0 || 60 < vn)
	        throw new Error('Invalid second in date');
	    return vn;
	}
	function parseMillisecond(v) {
	    if (!v)
	        return 0;
	    return parseInt(v.substr(0, 3), 10);
	}
	function parseSQLDate(type, v) {
	    if (type === 't')
	        throw new Error('time literals are not supported');
	    var m;
	    var d;
	    if (type === 'ts') {
	        if (m = v.match(/^(\d{2}(?:\d{2})?)(\d{2})(\d{2})(\d{2})(\d{2})(\d{2})$/)) {
	            d = Date.UTC(parseYear(m[1]), parseMonth(m[2]), parseDay(m[3]), parseHour(m[4]), parseMinute(m[5]), parseSecond(m[6]));
	        }
	        else if (m = v.match(/^(\d{2}(?:\d{2})?)[~!@#$%^&*()_+=:.\-\/](\d{1,2})[~!@#$%^&*()_+=:.\-\/](\d{1,2})[T ](\d{1,2})[~!@#$%^&*()_+=:.\-\/](\d{1,2})[~!@#$%^&*()_+=:.\-\/](\d{1,2})(?:\.(\d{1,6}))?$/)) {
	            d = Date.UTC(parseYear(m[1]), parseMonth(m[2]), parseDay(m[3]), parseHour(m[4]), parseMinute(m[5]), parseSecond(m[6]), parseMillisecond(m[7]));
	        }
	        else {
	            throw new Error('Invalid timestamp');
	        }
	    }
	    else {
	        if (m = v.match(/^(\d{2}(?:\d{2})?)(\d{2})(\d{2})$/)) {
	            d = Date.UTC(parseYear(m[1]), parseMonth(m[2]), parseDay(m[3]));
	        }
	        else if (m = v.match(/^(\d{2}(?:\d{2})?)[~!@#$%^&*()_+=:.\-\/](\d{1,2})[~!@#$%^&*()_+=:.\-\/](\d{1,2})$/)) {
	            d = Date.UTC(parseYear(m[1]), parseMonth(m[2]), parseDay(m[3]));
	        }
	        else {
	            throw new Error('Invalid date');
	        }
	    }
	    return new Date(d);
	}
	var numericKeys = [1, 4, 5, 6, 10, 11];
	function parseISODate(date, timezone) {
	    if (timezone === void 0) { timezone = Timezone.UTC; }
	    var struct;
	    var minutesOffset = 0;
	    if ((struct = /^(\d{4}|[+\-]\d{6})(?:-?(\d{2})(?:-?(\d{2}))?)?(?:[ T]?(\d{2})(?::?(\d{2})(?::?(\d{2})(?:[,\.](\d{1,}))?)?)?)?(?:(Z)|([+\-])(\d{2})(?::?(\d{2}))?)?$/.exec(date))) {
	        for (var i = 0, k; (k = numericKeys[i]); ++i) {
	            struct[k] = +struct[k] || 0;
	        }
	        struct[2] = (+struct[2] || 1) - 1;
	        struct[3] = +struct[3] || 1;
	        struct[7] = struct[7] ? +(struct[7] + "00").substr(0, 3) : 0;
	        if ((struct[8] === undefined || struct[8] === '') && (struct[9] === undefined || struct[9] === '') && !Timezone.UTC.equals(timezone)) {
	            if (timezone === null) {
	                return new Date(struct[1], struct[2], struct[3], struct[4], struct[5], struct[6], struct[7]);
	            }
	            else {
	                return walltimeRepack.WallTime.WallTimeToUTC(timezone.toString(), struct[1], struct[2], struct[3], struct[4], struct[5], struct[6], struct[7]);
	            }
	        }
	        else {
	            if (struct[8] !== 'Z' && struct[9] !== undefined) {
	                minutesOffset = struct[10] * 60 + struct[11];
	                if (struct[9] === '+') {
	                    minutesOffset = 0 - minutesOffset;
	                }
	            }
	            return new Date(Date.UTC(struct[1], struct[2], struct[3], struct[4], struct[5] + minutesOffset, struct[6], struct[7]));
	        }
	    }
	    else {
	        return null;
	    }
	}
	function parseInterval(str, timezone, now) {
	    if (timezone === void 0) { timezone = Timezone.UTC; }
	    if (now === void 0) { now = new Date(); }
	    var parts = str.split('/');
	    if (parts.length > 2)
	        throw new Error("Can not parse string " + str);
	    var start = null;
	    var end = null;
	    var duration = null;
	    var p0 = parts[0];
	    if (parts.length === 1) {
	        duration = Duration.fromJS(p0);
	    }
	    else {
	        var p1 = parts[1];
	        if (p0[0] === 'P') {
	            duration = Duration.fromJS(p0);
	            end = parseISODate(p1, timezone);
	            if (!end)
	                throw new Error("can not parse '" + p1 + "' as ISO date");
	        }
	        else if (p1[0] === 'P') {
	            start = parseISODate(p0, timezone);
	            if (!start)
	                throw new Error("can not parse '" + p0 + "' as ISO date");
	            duration = Duration.fromJS(p1);
	        }
	        else {
	            start = parseISODate(p0, timezone);
	            if (!start)
	                throw new Error("can not parse '" + p0 + "' as ISO date");
	            end = parseISODate(p1, timezone);
	            if (!end)
	                throw new Error("can not parse '" + p1 + "' as ISO date");
	            if (end < start) {
	                throw new Error("start must be <= end in '" + str + "'");
	            }
	        }
	    }
	    var computedStart;
	    var computedEnd;
	    if (start) {
	        computedStart = start;
	        if (duration) {
	            computedEnd = duration.shift(computedStart, timezone, 1);
	        }
	        else {
	            computedEnd = end;
	        }
	    }
	    else {
	        computedEnd = end || now;
	        computedStart = duration.shift(computedEnd, timezone, -1);
	    }
	    return {
	        computedStart: computedStart,
	        computedEnd: computedEnd,
	        start: start,
	        end: end,
	        duration: duration
	    };
	}

	function isDate(d) {
	    return !!(d && d.toISOString);
	}

	var WallTime$1 = walltimeRepack.WallTime;

	exports.WallTime = WallTime$1;
	exports.parseSQLDate = parseSQLDate;
	exports.parseISODate = parseISODate;
	exports.parseInterval = parseInterval;
	exports.second = second;
	exports.minute = minute;
	exports.hour = hour;
	exports.day = day;
	exports.week = week;
	exports.month = month;
	exports.year = year;
	exports.shifters = shifters;
	exports.Timezone = Timezone;
	exports.Duration = Duration;
	exports.isDate = isDate;

/***/ },
/* 192 */
/***/ function(module, exports) {

	/*
	 *  WallTime 0.1.2
	 *  Copyright (c) 2013 Sprout Social, Inc.
	 *  Available under the MIT License (http://bit.ly/walltime-license)
	 */

	(function() {
	  var Days, Milliseconds, Months, Time, helpers, _base;

	  (_base = Array.prototype).indexOf || (_base.indexOf = function(item) {
	    var i, x, _i, _len;
	    for (i = _i = 0, _len = this.length; _i < _len; i = ++_i) {
	      x = this[i];
	      if (x === item) {
	        return i;
	      }
	    }
	    return -1;
	  });

	  Days = {
	    DayShortNames: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
	    DayIndex: function(name) {
	      return this.DayShortNames.indexOf(name);
	    },
	    DayNameFromIndex: function(dayIdx) {
	      return this.DayShortNames[dayIdx];
	    },
	    AddToDate: function(dt, days) {
	      return Time.MakeDateFromTimeStamp(dt.getTime() + (days * Milliseconds.inDay));
	    }
	  };

	  Months = {
	    MonthsShortNames: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
	    CompareRuleMatch: new RegExp("([a-zA-Z]*)([\\<\\>]?=)([0-9]*)"),
	    MonthIndex: function(shortName) {
	      return this.MonthsShortNames.indexOf(shortName.slice(0, 3));
	    },
	    IsDayOfMonthRule: function(str) {
	      return str.indexOf(">") > -1 || str.indexOf("<") > -1 || str.indexOf("=") > -1;
	    },
	    IsLastDayOfMonthRule: function(str) {
	      return str.slice(0, 4) === "last";
	    },
	    DayOfMonthByRule: function(str, year, month) {
	      var compareFunc, compares, dateIndex, dayIndex, dayName, ruleParse, testDate, testPart, _ref;
	      ruleParse = this.CompareRuleMatch.exec(str);
	      if (!ruleParse) {
	        throw new Error("Unable to parse the 'on' rule for " + str);
	      }
	      _ref = ruleParse.slice(1, 4), dayName = _ref[0], testPart = _ref[1], dateIndex = _ref[2];
	      dateIndex = parseInt(dateIndex, 10);
	      if (dateIndex === NaN) {
	        throw new Error("Unable to parse the dateIndex of the 'on' rule for " + str);
	      }
	      dayIndex = helpers.Days.DayIndex(dayName);
	      compares = {
	        ">=": function(a, b) {
	          return a >= b;
	        },
	        "<=": function(a, b) {
	          return a <= b;
	        },
	        ">": function(a, b) {
	          return a > b;
	        },
	        "<": function(a, b) {
	          return a < b;
	        },
	        "=": function(a, b) {
	          return a === b;
	        }
	      };
	      compareFunc = compares[testPart];
	      if (!compareFunc) {
	        throw new Error("Unable to parse the conditional for " + testPart);
	      }
	      testDate = helpers.Time.MakeDateFromParts(year, month);
	      while (!(dayIndex === testDate.getUTCDay() && compareFunc(testDate.getUTCDate(), dateIndex))) {
	        testDate = helpers.Days.AddToDate(testDate, 1);
	      }
	      return testDate.getUTCDate();
	    },
	    LastDayOfMonthRule: function(str, year, month) {
	      var dayIndex, dayName, lastDay;
	      dayName = str.slice(4);
	      dayIndex = helpers.Days.DayIndex(dayName);
	      if (month < 11) {
	        lastDay = helpers.Time.MakeDateFromParts(year, month + 1);
	      } else {
	        lastDay = helpers.Time.MakeDateFromParts(year + 1, 0);
	      }
	      lastDay = helpers.Days.AddToDate(lastDay, -1);
	      while (lastDay.getUTCDay() !== dayIndex) {
	        lastDay = helpers.Days.AddToDate(lastDay, -1);
	      }
	      return lastDay.getUTCDate();
	    }
	  };

	  Milliseconds = {
	    inDay: 86400000,
	    inHour: 3600000,
	    inMinute: 60000,
	    inSecond: 1000
	  };

	  Time = {
	    Add: function(dt, hours, mins, secs) {
	      var newTs;
	      if (hours == null) {
	        hours = 0;
	      }
	      if (mins == null) {
	        mins = 0;
	      }
	      if (secs == null) {
	        secs = 0;
	      }
	      newTs = dt.getTime() + (hours * Milliseconds.inHour) + (mins * Milliseconds.inMinute) + (secs * Milliseconds.inSecond);
	      return this.MakeDateFromTimeStamp(newTs);
	    },
	    ParseGMTOffset: function(str) {
	      var isNeg, match, matches, reg, result;
	      reg = new RegExp("(-)?([0-9]*):([0-9]*):?([0-9]*)?");
	      matches = reg.exec(str);
	      result = matches ? (function() {
	        var _i, _len, _ref, _results;
	        _ref = matches.slice(2);
	        _results = [];
	        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
	          match = _ref[_i];
	          _results.push(parseInt(match, 10));
	        }
	        return _results;
	      })() : [0, 0, 0];
	      isNeg = matches && matches[1] === "-";
	      result.splice(0, 0, isNeg);
	      return result;
	    },
	    ParseTime: function(str) {
	      var match, matches, qual, reg, timeParts;
	      reg = new RegExp("(\\d*)\\:(\\d*)([wsugz]?)");
	      matches = reg.exec(str);
	      if (!matches) {
	        return [0, 0, ''];
	      }
	      timeParts = (function() {
	        var _i, _len, _ref, _results;
	        _ref = matches.slice(1, 3);
	        _results = [];
	        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
	          match = _ref[_i];
	          _results.push(parseInt(match, 10));
	        }
	        return _results;
	      })();
	      qual = matches[3] ? matches[3] : '';
	      timeParts.push(qual);
	      return timeParts;
	    },
	    ApplyOffset: function(dt, offset, reverse) {
	      var offset_ms;
	      offset_ms = (Milliseconds.inHour * offset.hours) + (Milliseconds.inMinute * offset.mins) + (Milliseconds.inSecond * offset.secs);
	      if (!offset.negative) {
	        offset_ms = offset_ms * -1;
	      }
	      if (reverse) {
	        offset_ms = offset_ms * -1;
	      }
	      return this.MakeDateFromTimeStamp(dt.getTime() + offset_ms);
	    },
	    ApplySave: function(dt, save, reverse) {
	      if (reverse !== true) {
	        reverse = false;
	      }
	      return this.ApplyOffset(dt, {
	        negative: true,
	        hours: save.hours,
	        mins: save.mins,
	        secs: 0
	      }, reverse);
	    },
	    UTCToWallTime: function(dt, offset, save) {
	      var endTime;
	      endTime = this.UTCToStandardTime(dt, offset);
	      return this.ApplySave(endTime, save);
	    },
	    UTCToStandardTime: function(dt, offset) {
	      return this.ApplyOffset(dt, offset, true);
	    },
	    UTCToQualifiedTime: function(dt, qualifier, offset, getSave) {
	      var endTime;
	      endTime = dt;
	      switch (qualifier) {
	        case "w":
	          endTime = this.UTCToWallTime(endTime, offset, getSave());
	          break;
	        case "s":
	          endTime = this.UTCToStandardTime(endTime, offset);
	          break;
	      }
	      return endTime;
	    },
	    QualifiedTimeToUTC: function(dt, qualifier, offset, getSave) {
	      var endTime;
	      endTime = dt;
	      switch (qualifier) {
	        case "w":
	          endTime = this.WallTimeToUTC(offset, getSave(), endTime);
	          break;
	        case "s":
	          endTime = this.StandardTimeToUTC(offset, endTime);
	          break;
	      }
	      return endTime;
	    },
	    StandardTimeToUTC: function(offset, y, m, d, h, mi, s, ms) {
	      var dt;
	      if (m == null) {
	        m = 0;
	      }
	      if (d == null) {
	        d = 1;
	      }
	      if (h == null) {
	        h = 0;
	      }
	      if (mi == null) {
	        mi = 0;
	      }
	      if (s == null) {
	        s = 0;
	      }
	      if (ms == null) {
	        ms = 0;
	      }
	      dt = typeof y === "number" ? this.MakeDateFromParts(y, m, d, h, mi, s, ms) : y;
	      return this.ApplyOffset(dt, offset);
	    },
	    WallTimeToUTC: function(offset, save, y, m, d, h, mi, s, ms) {
	      var dt;
	      if (m == null) {
	        m = 0;
	      }
	      if (d == null) {
	        d = 1;
	      }
	      if (h == null) {
	        h = 0;
	      }
	      if (mi == null) {
	        mi = 0;
	      }
	      if (s == null) {
	        s = 0;
	      }
	      if (ms == null) {
	        ms = 0;
	      }
	      dt = this.StandardTimeToUTC(offset, y, m, d, h, mi, s, ms);
	      return this.ApplySave(dt, save, true);
	    },
	    MakeDateFromParts: function(y, m, d, h, mi, s, ms) {
	      var dt;
	      if (m == null) {
	        m = 0;
	      }
	      if (d == null) {
	        d = 1;
	      }
	      if (h == null) {
	        h = 0;
	      }
	      if (mi == null) {
	        mi = 0;
	      }
	      if (s == null) {
	        s = 0;
	      }
	      if (ms == null) {
	        ms = 0;
	      }
	      if (Date.UTC) {
	        return new Date(Date.UTC(y, m, d, h, mi, s, ms));
	      }
	      dt = new Date;
	      dt.setUTCFullYear(y);
	      dt.setUTCMonth(m);
	      dt.setUTCDate(d);
	      dt.setUTCHours(h);
	      dt.setUTCMinutes(mi);
	      dt.setUTCSeconds(s);
	      dt.setUTCMilliseconds(ms);
	      return dt;
	    },
	    LocalDate: function(offset, save, y, m, d, h, mi, s, ms) {
	      if (m == null) {
	        m = 0;
	      }
	      if (d == null) {
	        d = 1;
	      }
	      if (h == null) {
	        h = 0;
	      }
	      if (mi == null) {
	        mi = 0;
	      }
	      if (s == null) {
	        s = 0;
	      }
	      if (ms == null) {
	        ms = 0;
	      }
	      return this.WallTimeToUTC(offset, save, y, m, d, h, mi, s, ms);
	    },
	    MakeDateFromTimeStamp: function(ts) {
	      return new Date(ts);
	    },
	    MaxDate: function() {
	      return this.MakeDateFromTimeStamp(10000000 * 86400000);
	    },
	    MinDate: function() {
	      return this.MakeDateFromTimeStamp(-10000000 * 86400000);
	    }
	  };

	  helpers = {
	    Days: Days,
	    Months: Months,
	    Milliseconds: Milliseconds,
	    Time: Time,
	    noSave: {
	      hours: 0,
	      mins: 0
	    },
	    noZone: {
	      offset: {
	        negative: false,
	        hours: 0,
	        mins: 0,
	        secs: 0
	      },
	      name: "UTC"
	    }
	  };

	  this.WallTime || (this.WallTime = {});
	  this.WallTime.helpers = helpers;

	}).call(this);

	(function() {
	  var init, req_helpers;

	  init = function(helpers) {
	    var TimeZoneTime;
	    TimeZoneTime = (function() {
	      function TimeZoneTime(utc, zone, save) {
	        this.utc = utc;
	        this.zone = zone;
	        this.save = save;
	        this.offset = this.zone.offset;
	        this.wallTime = helpers.Time.UTCToWallTime(this.utc, this.offset, this.save);
	      }

	      TimeZoneTime.prototype.getFullYear = function() {
	        return this.wallTime.getUTCFullYear();
	      };

	      TimeZoneTime.prototype.getMonth = function() {
	        return this.wallTime.getUTCMonth();
	      };

	      TimeZoneTime.prototype.getDate = function() {
	        return this.wallTime.getUTCDate();
	      };

	      TimeZoneTime.prototype.getDay = function() {
	        return this.wallTime.getUTCDay();
	      };

	      TimeZoneTime.prototype.getHours = function() {
	        return this.wallTime.getUTCHours();
	      };

	      TimeZoneTime.prototype.getMinutes = function() {
	        return this.wallTime.getUTCMinutes();
	      };

	      TimeZoneTime.prototype.getSeconds = function() {
	        return this.wallTime.getUTCSeconds();
	      };

	      TimeZoneTime.prototype.getMilliseconds = function() {
	        return this.wallTime.getUTCMilliseconds();
	      };

	      TimeZoneTime.prototype.getUTCFullYear = function() {
	        return this.utc.getUTCFullYear();
	      };

	      TimeZoneTime.prototype.getUTCMonth = function() {
	        return this.utc.getUTCMonth();
	      };

	      TimeZoneTime.prototype.getUTCDate = function() {
	        return this.utc.getUTCDate();
	      };

	      TimeZoneTime.prototype.getUTCDay = function() {
	        return this.utc.getUTCDay();
	      };

	      TimeZoneTime.prototype.getUTCHours = function() {
	        return this.utc.getUTCHours();
	      };

	      TimeZoneTime.prototype.getUTCMinutes = function() {
	        return this.utc.getUTCMinutes();
	      };

	      TimeZoneTime.prototype.getUTCSeconds = function() {
	        return this.utc.getUTCSeconds();
	      };

	      TimeZoneTime.prototype.getUTCMilliseconds = function() {
	        return this.utc.getUTCMilliseconds();
	      };

	      TimeZoneTime.prototype.getTime = function() {
	        return this.utc.getTime();
	      };

	      TimeZoneTime.prototype.getTimezoneOffset = function() {
	        var base, dst;
	        base = (this.offset.hours * 60) + this.offset.mins;
	        dst = (this.save.hours * 60) + this.save.mins;
	        if (!this.offset.negative) {
	          base = -base;
	        }
	        return base - dst;
	      };

	      TimeZoneTime.prototype.toISOString = function() {
	        return this.utc.toISOString();
	      };

	      TimeZoneTime.prototype.toUTCString = function() {
	        return this.wallTime.toUTCString();
	      };

	      TimeZoneTime.prototype.toDateString = function() {
	        var caps, utcStr;
	        utcStr = this.wallTime.toUTCString();
	        caps = utcStr.match("([a-zA-Z]*), ([0-9]+) ([a-zA-Z]*) ([0-9]+)");
	        return [caps[1], caps[3], caps[2], caps[4]].join(" ");
	      };

	      TimeZoneTime.prototype.toFormattedTime = function(use24HourTime) {
	        var hour, meridiem, min, origHour;
	        if (use24HourTime == null) {
	          use24HourTime = false;
	        }
	        hour = origHour = this.getHours();
	        if (hour > 12 && !use24HourTime) {
	          hour -= 12;
	        }
	        if (hour === 0) {
	          hour = 12;
	        }
	        min = this.getMinutes();
	        if (min < 10) {
	          min = "0" + min;
	        }
	        meridiem = origHour > 11 ? ' PM' : ' AM';
	        if (use24HourTime) {
	          meridiem = '';
	        }
	        return "" + hour + ":" + min + meridiem;
	      };

	      TimeZoneTime.prototype.setTime = function(ms) {
	        this.wallTime = helpers.Time.UTCToWallTime(new Date(ms), this.zone.offset, this.save);
	        return this._updateUTC();
	      };

	      TimeZoneTime.prototype.setFullYear = function(y) {
	        this.wallTime.setUTCFullYear(y);
	        return this._updateUTC();
	      };

	      TimeZoneTime.prototype.setMonth = function(m) {
	        this.wallTime.setUTCMonth(m);
	        return this._updateUTC();
	      };

	      TimeZoneTime.prototype.setDate = function(utcDate) {
	        this.wallTime.setUTCDate(utcDate);
	        return this._updateUTC();
	      };

	      TimeZoneTime.prototype.setHours = function(hours) {
	        this.wallTime.setUTCHours(hours);
	        return this._updateUTC();
	      };

	      TimeZoneTime.prototype.setMinutes = function(m) {
	        this.wallTime.setUTCMinutes(m);
	        return this._updateUTC();
	      };

	      TimeZoneTime.prototype.setSeconds = function(s) {
	        this.wallTime.setUTCSeconds(s);
	        return this._updateUTC();
	      };

	      TimeZoneTime.prototype.setMilliseconds = function(ms) {
	        this.wallTime.setUTCMilliseconds(ms);
	        return this._updateUTC();
	      };

	      TimeZoneTime.prototype._updateUTC = function() {
	        this.utc = helpers.Time.WallTimeToUTC(this.offset, this.save, this.getFullYear(), this.getMonth(), this.getDate(), this.getHours(), this.getMinutes(), this.getSeconds(), this.getMilliseconds());
	        return this.utc.getTime();
	      };

	      return TimeZoneTime;

	    })();
	    return TimeZoneTime;
	  };

	  this.WallTime || (this.WallTime = {});
	  this.WallTime.TimeZoneTime = init(this.WallTime.helpers);

	}).call(this);

	(function() {
	  var init, req_TimeZoneTime, req_helpers,
	    __hasProp = {}.hasOwnProperty;

	  init = function(helpers, TimeZoneTime) {
	    var CompareOnFieldHandler, LastOnFieldHandler, NumberOnFieldHandler, Rule, RuleSet, lib;
	    NumberOnFieldHandler = (function() {
	      function NumberOnFieldHandler() {}

	      NumberOnFieldHandler.prototype.applies = function(str) {
	        return !isNaN(parseInt(str, 10));
	      };

	      NumberOnFieldHandler.prototype.parseDate = function(str) {
	        return parseInt(str, 10);
	      };

	      return NumberOnFieldHandler;

	    })();
	    LastOnFieldHandler = (function() {
	      function LastOnFieldHandler() {}

	      LastOnFieldHandler.prototype.applies = helpers.Months.IsLastDayOfMonthRule;

	      LastOnFieldHandler.prototype.parseDate = function(str, year, month, qualifier, gmtOffset, daylightOffset) {
	        return helpers.Months.LastDayOfMonthRule(str, year, month);
	      };

	      return LastOnFieldHandler;

	    })();
	    CompareOnFieldHandler = (function() {
	      function CompareOnFieldHandler() {}

	      CompareOnFieldHandler.prototype.applies = helpers.Months.IsDayOfMonthRule;

	      CompareOnFieldHandler.prototype.parseDate = function(str, year, month) {
	        return helpers.Months.DayOfMonthByRule(str, year, month);
	      };

	      return CompareOnFieldHandler;

	    })();
	    Rule = (function() {
	      function Rule(name, _from, _to, type, _in, on, at, _save, letter) {
	        var saveHour, saveMinute, toYear, _ref;
	        this.name = name;
	        this._from = _from;
	        this._to = _to;
	        this.type = type;
	        this["in"] = _in;
	        this.on = on;
	        this.at = at;
	        this._save = _save;
	        this.letter = letter;
	        this.from = parseInt(this._from, 10);
	        this.isMax = false;
	        toYear = this.from;
	        switch (this._to) {
	          case "max":
	            toYear = (helpers.Time.MaxDate()).getUTCFullYear();
	            this.isMax = true;
	            break;
	          case "only":
	            toYear = this.from;
	            break;
	          default:
	            toYear = parseInt(this._to, 10);
	        }
	        this.to = toYear;
	        _ref = this._parseTime(this._save), saveHour = _ref[0], saveMinute = _ref[1];
	        this.save = {
	          hours: saveHour,
	          mins: saveMinute
	        };
	      }

	      Rule.prototype.forZone = function(offset) {
	        this.offset = offset;
	        this.fromUTC = helpers.Time.MakeDateFromParts(this.from, 0, 1, 0, 0, 0);
	        this.fromUTC = helpers.Time.ApplyOffset(this.fromUTC, offset);
	        this.toUTC = helpers.Time.MakeDateFromParts(this.to, 11, 31, 23, 59, 59, 999);
	        return this.toUTC = helpers.Time.ApplyOffset(this.toUTC, offset);
	      };

	      Rule.prototype.setOnUTC = function(year, offset, getPrevSave) {
	        var atQualifier, onParsed, toDay, toHour, toMinute, toMonth, _ref,
	          _this = this;
	        toMonth = helpers.Months.MonthIndex(this["in"]);
	        onParsed = parseInt(this.on, 10);
	        toDay = !isNaN(onParsed) ? onParsed : this._parseOnDay(this.on, year, toMonth);
	        _ref = this._parseTime(this.at), toHour = _ref[0], toMinute = _ref[1], atQualifier = _ref[2];
	        this.onUTC = helpers.Time.MakeDateFromParts(year, toMonth, toDay, toHour, toMinute);
	        this.onUTC.setUTCMilliseconds(this.onUTC.getUTCMilliseconds() - 1);
	        this.atQualifier = atQualifier !== '' ? atQualifier : "w";
	        this.onUTC = helpers.Time.QualifiedTimeToUTC(this.onUTC, this.atQualifier, offset, function() {
	          return getPrevSave(_this);
	        });
	        return this.onSort = "" + toMonth + "-" + toDay + "-" + (this.onUTC.getUTCHours()) + "-" + (this.onUTC.getUTCMinutes());
	      };

	      Rule.prototype.appliesToUTC = function(dt) {
	        return (this.fromUTC <= dt && dt <= this.toUTC);
	      };

	      Rule.prototype._parseOnDay = function(onStr, year, month) {
	        var handler, handlers, _i, _len;
	        handlers = [new NumberOnFieldHandler, new LastOnFieldHandler, new CompareOnFieldHandler];
	        for (_i = 0, _len = handlers.length; _i < _len; _i++) {
	          handler = handlers[_i];
	          if (!handler.applies(onStr)) {
	            continue;
	          }
	          return handler.parseDate(onStr, year, month);
	        }
	        throw new Error("Unable to parse 'on' field for " + this.name + "|" + this._from + "|" + this._to + "|" + onStr);
	      };

	      Rule.prototype._parseTime = function(atStr) {
	        return helpers.Time.ParseTime(atStr);
	      };

	      return Rule;

	    })();
	    RuleSet = (function() {
	      function RuleSet(rules, timeZone) {
	        var beginYears, commonUpdateYearEnds, endYears, max, min, rule, _i, _len, _ref,
	          _this = this;
	        this.rules = rules != null ? rules : [];
	        this.timeZone = timeZone;
	        min = null;
	        max = null;
	        endYears = {};
	        beginYears = {};
	        _ref = this.rules;
	        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
	          rule = _ref[_i];
	          rule.forZone(this.timeZone.offset, function() {
	            return helpers.noSave;
	          });
	          if (min === null || rule.from < min) {
	            min = rule.from;
	          }
	          if (max === null || rule.to > max) {
	            max = rule.to;
	          }
	          endYears[rule.to] = endYears[rule.to] || [];
	          endYears[rule.to].push(rule);
	          beginYears[rule.from] = beginYears[rule.from] || [];
	          beginYears[rule.from].push(rule);
	        }
	        this.minYear = min;
	        this.maxYear = max;
	        commonUpdateYearEnds = function(end, years) {
	          var lastRule, year, yearRules, _results;
	          if (end == null) {
	            end = "toUTC";
	          }
	          if (years == null) {
	            years = endYears;
	          }
	          _results = [];
	          for (year in years) {
	            if (!__hasProp.call(years, year)) continue;
	            rules = years[year];
	            yearRules = _this.allThatAppliesTo(rules[0][end]);
	            if (yearRules.length < 1) {
	              continue;
	            }
	            rules = _this._sortRulesByOnTime(rules);
	            lastRule = yearRules.slice(-1)[0];
	            if (lastRule.save.hours === 0 && lastRule.save.mins === 0) {
	              continue;
	            }
	            _results.push((function() {
	              var _j, _len1, _results1;
	              _results1 = [];
	              for (_j = 0, _len1 = rules.length; _j < _len1; _j++) {
	                rule = rules[_j];
	                _results1.push(rule[end] = helpers.Time.ApplySave(rule[end], lastRule.save));
	              }
	              return _results1;
	            })());
	          }
	          return _results;
	        };
	        commonUpdateYearEnds("toUTC", endYears);
	        commonUpdateYearEnds("fromUTC", beginYears);
	      }

	      RuleSet.prototype.allThatAppliesTo = function(dt) {
	        var rule, _i, _len, _ref, _results;
	        _ref = this.rules;
	        _results = [];
	        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
	          rule = _ref[_i];
	          if (rule.appliesToUTC(dt)) {
	            _results.push(rule);
	          }
	        }
	        return _results;
	      };

	      RuleSet.prototype.getWallTimeForUTC = function(dt) {
	        var appliedRules, getPrevRuleSave, lastSave, rule, rules, _i, _len;
	        rules = this.allThatAppliesTo(dt);
	        if (rules.length < 1) {
	          return new TimeZoneTime(dt, this.timeZone, helpers.noSave);
	        }
	        rules = this._sortRulesByOnTime(rules);
	        getPrevRuleSave = function(r) {
	          var idx;
	          idx = rules.indexOf(r);
	          if (idx < 1) {
	            if (rules.length < 1) {
	              return helpers.noSave;
	            }
	            return rules.slice(-1)[0].save;
	          }
	          return rules[idx - 1].save;
	        };
	        for (_i = 0, _len = rules.length; _i < _len; _i++) {
	          rule = rules[_i];
	          rule.setOnUTC(dt.getUTCFullYear(), this.timeZone.offset, getPrevRuleSave);
	        }
	        appliedRules = (function() {
	          var _j, _len1, _results;
	          _results = [];
	          for (_j = 0, _len1 = rules.length; _j < _len1; _j++) {
	            rule = rules[_j];
	            if (rule.onUTC.getTime() < dt.getTime()) {
	              _results.push(rule);
	            }
	          }
	          return _results;
	        })();
	        lastSave = rules.length < 1 ? helpers.noSave : rules.slice(-1)[0].save;
	        if (appliedRules.length > 0) {
	          lastSave = appliedRules.slice(-1)[0].save;
	        }
	        return new TimeZoneTime(dt, this.timeZone, lastSave);
	      };

	      RuleSet.prototype.getUTCForWallTime = function(dt) {
	        var appliedRules, getPrevRuleSave, lastSave, rule, rules, utcStd, _i, _len;
	        utcStd = helpers.Time.StandardTimeToUTC(this.timeZone.offset, dt);
	        rules = (function() {
	          var _i, _len, _ref, _results;
	          _ref = this.rules;
	          _results = [];
	          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
	            rule = _ref[_i];
	            if (rule.appliesToUTC(utcStd)) {
	              _results.push(rule);
	            }
	          }
	          return _results;
	        }).call(this);
	        if (rules.length < 1) {
	          return utcStd;
	        }
	        rules = this._sortRulesByOnTime(rules);
	        getPrevRuleSave = function(r) {
	          var idx;
	          idx = rules.indexOf(r);
	          if (idx < 1) {
	            if (rules.length < 1) {
	              return helpers.noSave;
	            }
	            return rules.slice(-1)[0].save;
	          }
	          return rules[idx - 1].save;
	        };
	        for (_i = 0, _len = rules.length; _i < _len; _i++) {
	          rule = rules[_i];
	          rule.setOnUTC(utcStd.getUTCFullYear(), this.timeZone.offset, getPrevRuleSave);
	        }
	        appliedRules = (function() {
	          var _j, _len1, _results;
	          _results = [];
	          for (_j = 0, _len1 = rules.length; _j < _len1; _j++) {
	            rule = rules[_j];
	            if (rule.onUTC.getTime() < utcStd.getTime()) {
	              _results.push(rule);
	            }
	          }
	          return _results;
	        })();
	        lastSave = rules.length < 1 ? helpers.noSave : rules.slice(-1)[0].save;
	        if (appliedRules.length > 0) {
	          lastSave = appliedRules.slice(-1)[0].save;
	        }
	        return helpers.Time.WallTimeToUTC(this.timeZone.offset, lastSave, dt);
	      };

	      RuleSet.prototype.getYearEndDST = function(dt) {
	        var appliedRules, getPrevRuleSave, lastSave, rule, rules, utcStd, year, _i, _len;
	        year = typeof dt === number ? dt : dt.getUTCFullYear();
	        utcStd = helpers.Time.StandardTimeToUTC(this.timeZone.offset, year, 11, 31, 23, 59, 59);
	        rules = (function() {
	          var _i, _len, _ref, _results;
	          _ref = this.rules;
	          _results = [];
	          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
	            rule = _ref[_i];
	            if (rule.appliesToUTC(utcStd)) {
	              _results.push(rule);
	            }
	          }
	          return _results;
	        }).call(this);
	        if (rules.length < 1) {
	          return helpers.noSave;
	        }
	        rules = this._sortRulesByOnTime(rules);
	        getPrevRuleSave = function(r) {
	          var idx;
	          idx = rules.indexOf(r);
	          if (idx < 1) {
	            return helpers.noSave;
	          }
	          return rules[idx - 1].save;
	        };
	        for (_i = 0, _len = rules.length; _i < _len; _i++) {
	          rule = rules[_i];
	          rule.setOnUTC(utcStd.getUTCFullYear(), this.timeZone.offset, getPrevRuleSave);
	        }
	        appliedRules = (function() {
	          var _j, _len1, _results;
	          _results = [];
	          for (_j = 0, _len1 = rules.length; _j < _len1; _j++) {
	            rule = rules[_j];
	            if (rule.onUTC.getTime() < utcStd.getTime()) {
	              _results.push(rule);
	            }
	          }
	          return _results;
	        })();
	        lastSave = helpers.noSave;
	        if (appliedRules.length > 0) {
	          lastSave = appliedRules.slice(-1)[0].save;
	        }
	        return lastSave;
	      };

	      RuleSet.prototype.isAmbiguous = function(dt) {
	        var appliedRules, getPrevRuleSave, lastRule, makeAmbigRange, minsOff, prevSave, range, rule, rules, springForward, totalMinutes, utcStd, _i, _len;
	        utcStd = helpers.Time.StandardTimeToUTC(this.timeZone.offset, dt);
	        rules = (function() {
	          var _i, _len, _ref, _results;
	          _ref = this.rules;
	          _results = [];
	          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
	            rule = _ref[_i];
	            if (rule.appliesToUTC(utcStd)) {
	              _results.push(rule);
	            }
	          }
	          return _results;
	        }).call(this);
	        if (rules.length < 1) {
	          return false;
	        }
	        rules = this._sortRulesByOnTime(rules);
	        getPrevRuleSave = function(r) {
	          var idx;
	          idx = rules.indexOf(r);
	          if (idx < 1) {
	            return helpers.noSave;
	          }
	          return rules[idx - 1].save;
	        };
	        for (_i = 0, _len = rules.length; _i < _len; _i++) {
	          rule = rules[_i];
	          rule.setOnUTC(utcStd.getUTCFullYear(), this.timeZone.offset, getPrevRuleSave);
	        }
	        appliedRules = (function() {
	          var _j, _len1, _results;
	          _results = [];
	          for (_j = 0, _len1 = rules.length; _j < _len1; _j++) {
	            rule = rules[_j];
	            if (rule.onUTC.getTime() <= utcStd.getTime() - 1) {
	              _results.push(rule);
	            }
	          }
	          return _results;
	        })();
	        if (appliedRules.length < 1) {
	          return false;
	        }
	        lastRule = appliedRules.slice(-1)[0];
	        prevSave = getPrevRuleSave(lastRule);
	        totalMinutes = {
	          prev: (prevSave.hours * 60) + prevSave.mins,
	          last: (lastRule.save.hours * 60) + lastRule.save.mins
	        };
	        if (totalMinutes.prev === totalMinutes.last) {
	          return false;
	        }
	        springForward = totalMinutes.prev < totalMinutes.last;
	        makeAmbigRange = function(begin, minutesOff) {
	          var ambigRange, tmp;
	          ambigRange = {
	            begin: helpers.Time.MakeDateFromTimeStamp(begin.getTime() + 1)
	          };
	          ambigRange.end = helpers.Time.Add(ambigRange.begin, 0, minutesOff);
	          if (ambigRange.begin.getTime() > ambigRange.end.getTime()) {
	            tmp = ambigRange.begin;
	            ambigRange.begin = ambigRange.end;
	            ambigRange.end = tmp;
	          }
	          return ambigRange;
	        };
	        minsOff = springForward ? totalMinutes.last : -totalMinutes.prev;
	        range = makeAmbigRange(lastRule.onUTC, minsOff);
	        utcStd = helpers.Time.WallTimeToUTC(this.timeZone.offset, prevSave, dt);
	        return (range.begin <= utcStd && utcStd <= range.end);
	      };

	      RuleSet.prototype._sortRulesByOnTime = function(rules) {
	        return rules.sort(function(a, b) {
	          return (helpers.Months.MonthIndex(a["in"])) - (helpers.Months.MonthIndex(b["in"]));
	        });
	      };

	      return RuleSet;

	    })();
	    lib = {
	      Rule: Rule,
	      RuleSet: RuleSet,
	      OnFieldHandlers: {
	        NumberHandler: NumberOnFieldHandler,
	        LastHandler: LastOnFieldHandler,
	        CompareHandler: CompareOnFieldHandler
	      }
	    };
	    return lib;
	  };

	  this.WallTime || (this.WallTime = {});
	  this.WallTime.rule = init(this.WallTime.helpers, this.WallTime.TimeZoneTime);

	}).call(this);

	(function() {
	  var init, req_TimeZoneTime, req_helpers, req_rule;

	  init = function(helpers, rule, TimeZoneTime) {
	    var Zone, ZoneSet, lib;
	    Zone = (function() {
	      function Zone(name, _offset, _rule, format, _until, currZone) {
	        var begin, isNegative, offsetHours, offsetMins, offsetSecs, _ref;
	        this.name = name;
	        this._offset = _offset;
	        this._rule = _rule;
	        this.format = format;
	        this._until = _until;
	        _ref = helpers.Time.ParseGMTOffset(this._offset), isNegative = _ref[0], offsetHours = _ref[1], offsetMins = _ref[2], offsetSecs = _ref[3];
	        this.offset = {
	          negative: isNegative,
	          hours: offsetHours,
	          mins: offsetMins,
	          secs: isNaN(offsetSecs) ? 0 : offsetSecs
	        };
	        begin = currZone ? helpers.Time.MakeDateFromTimeStamp(currZone.range.end.getTime() + 1) : helpers.Time.MinDate();
	        this.range = {
	          begin: begin,
	          end: this._parseUntilDate(this._until)
	        };
	      }

	      Zone.prototype._parseUntilDate = function(til) {
	        var day, endTime, h, mi, month, monthName, neg, s, standardTime, time, year, _ref, _ref1;
	        _ref = til.split(" "), year = _ref[0], monthName = _ref[1], day = _ref[2], time = _ref[3];
	        _ref1 = time ? helpers.Time.ParseGMTOffset(time) : [false, 0, 0, 0], neg = _ref1[0], h = _ref1[1], mi = _ref1[2], s = _ref1[3];
	        s = isNaN(s) ? 0 : s;
	        if (!year || year === "") {
	          return helpers.Time.MaxDate();
	        }
	        year = parseInt(year, 10);
	        month = monthName ? helpers.Months.MonthIndex(monthName) : 0;
	        day || (day = "1");
	        if (helpers.Months.IsDayOfMonthRule(day)) {
	          day = helpers.Months.DayOfMonthByRule(day, year, month);
	        } else if (helpers.Months.IsLastDayOfMonthRule(day)) {
	          day = helpers.Months.LastDayOfMonthRule(day, year, month);
	        } else {
	          day = parseInt(day, 10);
	        }
	        standardTime = helpers.Time.StandardTimeToUTC(this.offset, year, month, day, h, mi, s);
	        endTime = helpers.Time.MakeDateFromTimeStamp(standardTime.getTime() - 1);
	        return endTime;
	      };

	      Zone.prototype.updateEndForRules = function(getRulesNamed) {
	        var endSave, hours, mins, rules, _ref;
	        if (this._rule === "-" || this._rule === "") {
	          return;
	        }
	        if (this._rule.indexOf(":") >= 0) {
	          _ref = helpers.Time.ParseTime(this._rule), hours = _ref[0], mins = _ref[1];
	          this.range.end = helpers.Time.ApplySave(this.range.end, {
	            hours: hours,
	            mins: mins
	          });
	        }
	        rules = new rule.RuleSet(getRulesNamed(this._rule), this);
	        endSave = rules.getYearEndDST(this.range.end);
	        return this.range.end = helpers.Time.ApplySave(this.range.end, endSave);
	      };

	      Zone.prototype.UTCToWallTime = function(dt, getRulesNamed) {
	        var hours, mins, rules, _ref;
	        if (this._rule === "-" || this._rule === "") {
	          return new TimeZoneTime(dt, this, helpers.noSave);
	        }
	        if (this._rule.indexOf(":") >= 0) {
	          _ref = helpers.Time.ParseTime(this._rule), hours = _ref[0], mins = _ref[1];
	          return new TimeZoneTime(dt, this, {
	            hours: hours,
	            mins: mins
	          });
	        }
	        rules = new rule.RuleSet(getRulesNamed(this._rule), this);
	        return rules.getWallTimeForUTC(dt);
	      };

	      Zone.prototype.WallTimeToUTC = function(dt, getRulesNamed) {
	        var hours, mins, rules, _ref;
	        if (this._rule === "-" || this._rule === "") {
	          return helpers.Time.StandardTimeToUTC(this.offset, dt);
	        }
	        if (this._rule.indexOf(":") >= 0) {
	          _ref = helpers.Time.ParseTime(this._rule), hours = _ref[0], mins = _ref[1];
	          return helpers.Time.WallTimeToUTC(this.offset, {
	            hours: hours,
	            mins: mins
	          }, dt);
	        }
	        rules = new rule.RuleSet(getRulesNamed(this._rule), this);
	        return rules.getUTCForWallTime(dt, this.offset);
	      };

	      Zone.prototype.IsAmbiguous = function(dt, getRulesNamed) {
	        var ambigCheck, hours, makeAmbigZone, mins, rules, utcDt, _ref, _ref1, _ref2;
	        if (this._rule === "-" || this._rule === "") {
	          return false;
	        }
	        if (this._rule.indexOf(":") >= 0) {
	          utcDt = helpers.Time.StandardTimeToUTC(this.offset, dt);
	          _ref = helpers.Time.ParseTime(this._rule), hours = _ref[0], mins = _ref[1];
	          makeAmbigZone = function(begin) {
	            var ambigZone, tmp;
	            ambigZone = {
	              begin: this.range.begin,
	              end: helpers.Time.ApplySave(this.range.begin, {
	                hours: hours,
	                mins: mins
	              })
	            };
	            if (ambigZone.end.getTime() < ambigZone.begin.getTime()) {
	              tmp = ambigZone.begin;
	              ambigZone.begin = ambigZone.end;
	              ambigZone.end = tmp;
	            }
	            return ambigZone;
	          };
	          ambigCheck = makeAmbigZone(this.range.begin);
	          if ((ambigCheck.begin.getTime() <= (_ref1 = utcDt.getTime()) && _ref1 < ambigCheck.end.getTime())) {
	            return true;
	          }
	          ambigCheck = makeAmbigZone(this.range.end);
	          (ambigCheck.begin.getTime() <= (_ref2 = utcDt.getTime()) && _ref2 < ambigCheck.end.getTime());
	        }
	        rules = new rule.RuleSet(getRulesNamed(this._rule), this);
	        return rules.isAmbiguous(dt, this.offset);
	      };

	      return Zone;

	    })();
	    ZoneSet = (function() {
	      function ZoneSet(zones, getRulesNamed) {
	        var zone, _i, _len, _ref;
	        this.zones = zones != null ? zones : [];
	        this.getRulesNamed = getRulesNamed;
	        if (this.zones.length > 0) {
	          this.name = this.zones[0].name;
	        } else {
	          this.name = "";
	        }
	        _ref = this.zones;
	        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
	          zone = _ref[_i];
	          zone.updateEndForRules;
	        }
	      }

	      ZoneSet.prototype.add = function(zone) {
	        if (this.zones.length === 0 && this.name === "") {
	          this.name = zone.name;
	        }
	        if (this.name !== zone.name) {
	          throw new Error("Cannot add different named zones to a ZoneSet");
	        }
	        return this.zones.push(zone);
	      };

	      ZoneSet.prototype.findApplicable = function(dt, useOffset) {
	        var findOffsetRange, found, range, ts, zone, _i, _len, _ref;
	        if (useOffset == null) {
	          useOffset = false;
	        }
	        ts = dt.getTime();
	        findOffsetRange = function(zone) {
	          return {
	            begin: helpers.Time.UTCToStandardTime(zone.range.begin, zone.offset),
	            end: helpers.Time.UTCToStandardTime(zone.range.end, zone.offset)
	          };
	        };
	        found = null;
	        _ref = this.zones;
	        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
	          zone = _ref[_i];
	          range = !useOffset ? zone.range : findOffsetRange(zone);
	          if ((range.begin.getTime() <= ts && ts <= range.end.getTime())) {
	            found = zone;
	            break;
	          }
	        }
	        return found;
	      };

	      ZoneSet.prototype.getWallTimeForUTC = function(dt) {
	        var applicable;
	        applicable = this.findApplicable(dt);
	        if (!applicable) {
	          return new TimeZoneTime(dt, helpers.noZone, helpers.noSave);
	        }
	        return applicable.UTCToWallTime(dt, this.getRulesNamed);
	      };

	      ZoneSet.prototype.getUTCForWallTime = function(dt) {
	        var applicable;
	        applicable = this.findApplicable(dt, true);
	        if (!applicable) {
	          return dt;
	        }
	        return applicable.WallTimeToUTC(dt, this.getRulesNamed);
	      };

	      ZoneSet.prototype.isAmbiguous = function(dt) {
	        var applicable;
	        applicable = this.findApplicable(dt, true);
	        if (!applicable) {
	          return false;
	        }
	        return applicable.IsAmbiguous(dt, this.getRulesNamed);
	      };

	      return ZoneSet;

	    })();
	    return lib = {
	      Zone: Zone,
	      ZoneSet: ZoneSet
	    };
	  };

	  this.WallTime || (this.WallTime = {});
	  this.WallTime.zone = init(this.WallTime.helpers, this.WallTime.rule, this.WallTime.TimeZoneTime);

	}).call(this);

	(function() {
	  var api, init, key, req_help, req_rule, req_zone, val, _ref, _ref1, _ref2,
	    __hasProp = {}.hasOwnProperty;

	  init = function(helpers, rule, zone) {
	    var WallTime;
	    WallTime = (function() {
	      function WallTime() {}

	      WallTime.prototype.init = function(rules, zones) {
	        if (rules == null) {
	          rules = {};
	        }
	        if (zones == null) {
	          zones = {};
	        }
	        this.zones = {};
	        this.rules = {};
	        this.addRulesZones(rules, zones);
	        this.zoneSet = null;
	        this.timeZoneName = null;
	        return this.doneInit = true;
	      };

	      WallTime.prototype.addRulesZones = function(rules, zones) {
	        var currZone, newRules, newZone, newZones, r, ruleName, ruleVals, z, zoneName, zoneVals, _i, _len, _results;
	        if (rules == null) {
	          rules = {};
	        }
	        if (zones == null) {
	          zones = {};
	        }
	        currZone = null;
	        for (zoneName in zones) {
	          if (!__hasProp.call(zones, zoneName)) continue;
	          zoneVals = zones[zoneName];
	          newZones = [];
	          currZone = null;
	          for (_i = 0, _len = zoneVals.length; _i < _len; _i++) {
	            z = zoneVals[_i];
	            newZone = new zone.Zone(z.name, z._offset, z._rule, z.format, z._until, currZone);
	            newZones.push(newZone);
	            currZone = newZone;
	          }
	          this.zones[zoneName] = newZones;
	        }
	        _results = [];
	        for (ruleName in rules) {
	          if (!__hasProp.call(rules, ruleName)) continue;
	          ruleVals = rules[ruleName];
	          newRules = (function() {
	            var _j, _len1, _results1;
	            _results1 = [];
	            for (_j = 0, _len1 = ruleVals.length; _j < _len1; _j++) {
	              r = ruleVals[_j];
	              _results1.push(new rule.Rule(r.name, r._from, r._to, r.type, r["in"], r.on, r.at, r._save, r.letter));
	            }
	            return _results1;
	          })();
	          _results.push(this.rules[ruleName] = newRules);
	        }
	        return _results;
	      };

	      WallTime.prototype.setTimeZone = function(name) {
	        var matches,
	          _this = this;
	        if (!this.doneInit) {
	          throw new Error("Must call init with rules and zones before setting time zone");
	        }
	        if (!this.zones[name]) {
	          throw new Error("Unable to find time zone named " + (name || '<blank>'));
	        }
	        matches = this.zones[name];
	        this.zoneSet = new zone.ZoneSet(matches, function(ruleName) {
	          return _this.rules[ruleName];
	        });
	        return this.timeZoneName = name;
	      };

	      WallTime.prototype.Date = function(y, m, d, h, mi, s, ms) {
	        if (m == null) {
	          m = 0;
	        }
	        if (d == null) {
	          d = 1;
	        }
	        if (h == null) {
	          h = 0;
	        }
	        if (mi == null) {
	          mi = 0;
	        }
	        if (s == null) {
	          s = 0;
	        }
	        if (ms == null) {
	          ms = 0;
	        }
	        y || (y = new Date().getUTCFullYear());
	        return helpers.Time.MakeDateFromParts(y, m, d, h, mi, s, ms);
	      };

	      WallTime.prototype.UTCToWallTime = function(dt, zoneName) {
	        if (zoneName == null) {
	          zoneName = this.timeZoneName;
	        }
	        if (typeof dt === "number") {
	          dt = new Date(dt);
	        }
	        if (zoneName !== this.timeZoneName) {
	          this.setTimeZone(zoneName);
	        }
	        if (!this.zoneSet) {
	          throw new Error("Must set the time zone before converting times");
	        }
	        return this.zoneSet.getWallTimeForUTC(dt);
	      };

	      WallTime.prototype.WallTimeToUTC = function(zoneName, y, m, d, h, mi, s, ms) {
	        var wallTime;
	        if (zoneName == null) {
	          zoneName = this.timeZoneName;
	        }
	        if (m == null) {
	          m = 0;
	        }
	        if (d == null) {
	          d = 1;
	        }
	        if (h == null) {
	          h = 0;
	        }
	        if (mi == null) {
	          mi = 0;
	        }
	        if (s == null) {
	          s = 0;
	        }
	        if (ms == null) {
	          ms = 0;
	        }
	        if (zoneName !== this.timeZoneName) {
	          this.setTimeZone(zoneName);
	        }
	        wallTime = typeof y === "number" ? helpers.Time.MakeDateFromParts(y, m, d, h, mi, s, ms) : y;
	        return this.zoneSet.getUTCForWallTime(wallTime);
	      };

	      WallTime.prototype.IsAmbiguous = function(zoneName, y, m, d, h, mi) {
	        var wallTime;
	        if (zoneName == null) {
	          zoneName = this.timeZoneName;
	        }
	        if (mi == null) {
	          mi = 0;
	        }
	        if (zoneName !== this.timeZoneName) {
	          this.setTimeZone(zoneName);
	        }
	        wallTime = typeof y === "number" ? helpers.Time.MakeDateFromParts(y, m, d, h, mi) : y;
	        return this.zoneSet.isAmbiguous(wallTime);
	      };

	      return WallTime;

	    })();
	    return new WallTime;
	  };

	  this.WallTime || (this.WallTime = {});
	  api = init(this.WallTime.helpers, this.WallTime.rule, this.WallTime.zone);
	  _ref = this.WallTime;
	  for (key in _ref) {
	    if (!__hasProp.call(_ref, key)) continue;
	    val = _ref[key];
	    api[key] = val;
	  }
	  this.WallTime = api;
	  if (this.WallTime.autoinit && ((_ref1 = this.WallTime.data) != null ? _ref1.rules : void 0) && ((_ref2 = this.WallTime.data) != null ? _ref2.zones : void 0)) {
	    this.WallTime.init(this.WallTime.data.rules, this.WallTime.data.zones);
	  }

	}).call(this);

	exports.WallTime = this.WallTime;


/***/ },
/* 193 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	function __export(m) {
	    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
	}
	__export(__webpack_require__(194));
	__export(__webpack_require__(195));
	__export(__webpack_require__(196));


/***/ },
/* 194 */
/***/ function(module, exports) {

	"use strict";
	function isInstanceOf(thing, constructor) {
	    if (typeof constructor !== 'function')
	        throw new TypeError("constructor must be a function");
	    if (thing instanceof constructor)
	        return true;
	    if (thing == null)
	        return false;
	    var constructorName = constructor.name;
	    if (!constructorName)
	        return false;
	    var thingProto = thing.__proto__;
	    while (thingProto && thingProto.constructor) {
	        if (thingProto.constructor.name === constructorName)
	            return true;
	        thingProto = thingProto.__proto__;
	    }
	    return false;
	}
	exports.isInstanceOf = isInstanceOf;
	function isArrayOf(things, constructor) {
	    if (!Array.isArray(things))
	        return false;
	    for (var i = 0, length = things.length; i < length; i++) {
	        if (!isInstanceOf(things[i], constructor))
	            return false;
	    }
	    return true;
	}
	exports.isArrayOf = isArrayOf;
	function isImmutableClass(thing) {
	    if (!thing || typeof thing !== 'object')
	        return false;
	    var ClassFn = thing.constructor;
	    return typeof ClassFn.fromJS === 'function' &&
	        typeof thing.toJS === 'function' &&
	        typeof thing.equals === 'function';
	}
	exports.isImmutableClass = isImmutableClass;


/***/ },
/* 195 */
/***/ function(module, exports) {

	"use strict";
	function generalEqual(a, b) {
	    if (a === b)
	        return true;
	    if (a && b) {
	        if (typeof a.toISOString === 'function' && typeof b.toISOString === 'function') {
	            return a.valueOf() === b.valueOf();
	        }
	        if (Array.isArray(a) && Array.isArray(b)) {
	            return generalArraysEqual(a, b);
	        }
	        if (typeof a.equals === 'function') {
	            return a.equals(b);
	        }
	    }
	    return false;
	}
	exports.generalEqual = generalEqual;
	function immutableEqual(a, b) {
	    if (a === b)
	        return true;
	    return Boolean(a) && a.equals(b);
	}
	exports.immutableEqual = immutableEqual;
	function generalArraysEqual(arrayA, arrayB) {
	    if (arrayA === arrayB)
	        return true;
	    if (!arrayA !== !arrayB)
	        return false;
	    var length = arrayA.length;
	    if (length !== arrayB.length)
	        return false;
	    for (var i = 0; i < length; i++) {
	        if (!generalEqual(arrayA[i], arrayB[i]))
	            return false;
	    }
	    return true;
	}
	exports.generalArraysEqual = generalArraysEqual;
	function immutableArraysEqual(arrayA, arrayB) {
	    if (arrayA === arrayB)
	        return true;
	    if (!arrayA !== !arrayB)
	        return false;
	    var length = arrayA.length;
	    if (length !== arrayB.length)
	        return false;
	    for (var i = 0; i < length; i++) {
	        if (!immutableEqual(arrayA[i], arrayB[i]))
	            return false;
	    }
	    return true;
	}
	exports.immutableArraysEqual = immutableArraysEqual;
	function generalLookupsEqual(lookupA, lookupB) {
	    if (lookupA === lookupB)
	        return true;
	    if (!lookupA !== !lookupB)
	        return false;
	    var keysA = Object.keys(lookupA);
	    var keysB = Object.keys(lookupB);
	    if (keysA.length !== keysB.length)
	        return false;
	    for (var _i = 0, keysA_1 = keysA; _i < keysA_1.length; _i++) {
	        var k = keysA_1[_i];
	        if (!generalEqual(lookupA[k], lookupB[k]))
	            return false;
	    }
	    return true;
	}
	exports.generalLookupsEqual = generalLookupsEqual;
	function immutableLookupsEqual(lookupA, lookupB) {
	    if (lookupA === lookupB)
	        return true;
	    if (!lookupA !== !lookupB)
	        return false;
	    var keysA = Object.keys(lookupA);
	    var keysB = Object.keys(lookupB);
	    if (keysA.length !== keysB.length)
	        return false;
	    for (var _i = 0, keysA_2 = keysA; _i < keysA_2.length; _i++) {
	        var k = keysA_2[_i];
	        if (!immutableEqual(lookupA[k], lookupB[k]))
	            return false;
	    }
	    return true;
	}
	exports.immutableLookupsEqual = immutableLookupsEqual;


/***/ },
/* 196 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var utils_1 = __webpack_require__(194);
	var equality_1 = __webpack_require__(195);
	function firstUp(name) {
	    return name[0].toUpperCase() + name.substr(1);
	}
	var BaseImmutable = (function () {
	    function BaseImmutable(value) {
	        var properties = this.ownProperties();
	        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {
	            var property = properties_1[_i];
	            var propertyName = property.name;
	            var pv = value[propertyName];
	            if (pv == null) {
	                if (!property.hasOwnProperty('defaultValue')) {
	                    throw new Error(this.constructor.name + "." + propertyName + " must be defined");
	                }
	            }
	            else {
	                var possibleValues = property.possibleValues;
	                if (possibleValues && possibleValues.indexOf(pv) === -1) {
	                    throw new Error(this.constructor.name + "." + propertyName + " can not have value '" + pv + "' must be one of [" + possibleValues.join(', ') + "]");
	                }
	                if (property.isDate) {
	                    if (isNaN(pv)) {
	                        throw new Error(this.constructor.name + "." + propertyName + " must be a Date");
	                    }
	                }
	                var validate = property.validate;
	                if (validate) {
	                    var validators = Array.isArray(validate) ? validate : [validate];
	                    try {
	                        for (var _a = 0, validators_1 = validators; _a < validators_1.length; _a++) {
	                            var validator = validators_1[_a];
	                            validator(pv);
	                        }
	                    }
	                    catch (e) {
	                        throw new Error(this.constructor.name + "." + propertyName + " " + e.message);
	                    }
	                }
	            }
	            this[propertyName] = pv;
	        }
	    }
	    BaseImmutable.jsToValue = function (properties, js) {
	        var value = {};
	        for (var _i = 0, properties_2 = properties; _i < properties_2.length; _i++) {
	            var property = properties_2[_i];
	            var propertyName = property.name;
	            var pv = js[propertyName];
	            if (pv != null) {
	                if (property.isDate) {
	                    pv = new Date(pv);
	                }
	                else if (property.immutableClass) {
	                    pv = property.immutableClass.fromJS(pv);
	                }
	                else if (property.immutableClassArray) {
	                    if (!Array.isArray(pv))
	                        throw new Error("expected " + propertyName + " to be an array");
	                    var propertyImmutableClassArray = property.immutableClassArray;
	                    pv = pv.map(function (v) { return propertyImmutableClassArray.fromJS(v); });
	                }
	            }
	            value[propertyName] = pv;
	        }
	        return value;
	    };
	    BaseImmutable.finalize = function (ClassFn) {
	        var proto = ClassFn.prototype;
	        ClassFn.PROPERTIES.forEach(function (property) {
	            var propertyName = property.name;
	            var upped = firstUp(property.name);
	            var getUpped = 'get' + upped;
	            var changeUpped = 'change' + upped;
	            proto[getUpped] = proto[getUpped] || function () {
	                return this.get(propertyName);
	            };
	            proto[changeUpped] = proto[changeUpped] || function (newValue) {
	                return this.change(propertyName, newValue);
	            };
	        });
	    };
	    BaseImmutable.prototype.ownProperties = function () {
	        return this.constructor.PROPERTIES;
	    };
	    BaseImmutable.prototype.findOwnProperty = function (propName) {
	        var properties = this.ownProperties();
	        return properties.filter(function (p) { return p.name === propName; })[0] || null;
	    };
	    BaseImmutable.prototype.valueOf = function () {
	        var value = {};
	        var properties = this.ownProperties();
	        for (var _i = 0, properties_3 = properties; _i < properties_3.length; _i++) {
	            var property = properties_3[_i];
	            var propertyName = property.name;
	            value[propertyName] = this[propertyName];
	        }
	        return value;
	    };
	    BaseImmutable.prototype.toJS = function () {
	        var js = {};
	        var properties = this.ownProperties();
	        for (var _i = 0, properties_4 = properties; _i < properties_4.length; _i++) {
	            var property = properties_4[_i];
	            var propertyName = property.name;
	            var pv = this[propertyName];
	            if (pv != null) {
	                if (property.immutableClass) {
	                    pv = pv.toJS();
	                }
	                else if (property.immutableClassArray) {
	                    pv = pv.map(function (v) { return v.toJS(); });
	                }
	                js[propertyName] = pv;
	            }
	        }
	        return js;
	    };
	    BaseImmutable.prototype.toJSON = function () {
	        return this.toJS();
	    };
	    BaseImmutable.prototype.toString = function () {
	        var name = this.name;
	        var extra = name === 'string' ? ": " + name : '';
	        return "[ImmutableClass" + extra + "]";
	    };
	    BaseImmutable.prototype.equals = function (other) {
	        if (!other)
	            return false;
	        if (this === other)
	            return true;
	        if (!utils_1.isInstanceOf(other, this.constructor))
	            return false;
	        var properties = this.ownProperties();
	        for (var _i = 0, properties_5 = properties; _i < properties_5.length; _i++) {
	            var property = properties_5[_i];
	            var propertyName = property.name;
	            var equal = property.equal || equality_1.generalEqual;
	            if (!equal(this[propertyName], other[propertyName]))
	                return false;
	        }
	        return true;
	    };
	    BaseImmutable.prototype.get = function (propName) {
	        var properties = this.ownProperties();
	        for (var _i = 0, properties_6 = properties; _i < properties_6.length; _i++) {
	            var property = properties_6[_i];
	            if (property.name === propName) {
	                var pv = this[propName];
	                return pv != null ? pv : property.defaultValue;
	            }
	        }
	        throw new Error("can not find prop " + propName);
	    };
	    BaseImmutable.prototype.change = function (propName, newValue) {
	        var value = this.valueOf();
	        var property = this.findOwnProperty(propName);
	        if (!property) {
	            throw new Error("Unknown property: " + propName);
	        }
	        value[propName] = newValue;
	        return new this.constructor(value);
	    };
	    BaseImmutable.ensure = {
	        number: function (n) {
	            if (isNaN(n) || typeof n !== 'number')
	                throw new Error("must be a number");
	        }
	    };
	    return BaseImmutable;
	}());
	exports.BaseImmutable = BaseImmutable;


/***/ },
/* 197 */
/***/ function(module, exports, __webpack_require__) {

	/*
	 *  WallTime 0.2.0
	 *  Copyright (c) 2013 Sprout Social, Inc.
	 *  Available under the MIT License (http://bit.ly/walltime-license)
	 */
	"use strict";

	var tzData = {
	  rules: {"Algeria":[{"name":"Algeria","_from":"1916","_to":"only","type":"-","in":"Jun","on":"14","at":"23:00s","_save":"1:00","letter":"S"},{"name":"Algeria","_from":"1916","_to":"1919","type":"-","in":"Oct","on":"Sun>=1","at":"23:00s","_save":"0","letter":"-"},{"name":"Algeria","_from":"1917","_to":"only","type":"-","in":"Mar","on":"24","at":"23:00s","_save":"1:00","letter":"S"},{"name":"Algeria","_from":"1918","_to":"only","type":"-","in":"Mar","on":"9","at":"23:00s","_save":"1:00","letter":"S"},{"name":"Algeria","_from":"1919","_to":"only","type":"-","in":"Mar","on":"1","at":"23:00s","_save":"1:00","letter":"S"},{"name":"Algeria","_from":"1920","_to":"only","type":"-","in":"Feb","on":"14","at":"23:00s","_save":"1:00","letter":"S"},{"name":"Algeria","_from":"1920","_to":"only","type":"-","in":"Oct","on":"23","at":"23:00s","_save":"0","letter":"-"},{"name":"Algeria","_from":"1921","_to":"only","type":"-","in":"Mar","on":"14","at":"23:00s","_save":"1:00","letter":"S"},{"name":"Algeria","_from":"1921","_to":"only","type":"-","in":"Jun","on":"21","at":"23:00s","_save":"0","letter":"-"},{"name":"Algeria","_from":"1939","_to":"only","type":"-","in":"Sep","on":"11","at":"23:00s","_save":"1:00","letter":"S"},{"name":"Algeria","_from":"1939","_to":"only","type":"-","in":"Nov","on":"19","at":"1:00","_save":"0","letter":"-"},{"name":"Algeria","_from":"1944","_to":"1945","type":"-","in":"Apr","on":"Mon>=1","at":"2:00","_save":"1:00","letter":"S"},{"name":"Algeria","_from":"1944","_to":"only","type":"-","in":"Oct","on":"8","at":"2:00","_save":"0","letter":"-"},{"name":"Algeria","_from":"1945","_to":"only","type":"-","in":"Sep","on":"16","at":"1:00","_save":"0","letter":"-"},{"name":"Algeria","_from":"1971","_to":"only","type":"-","in":"Apr","on":"25","at":"23:00s","_save":"1:00","letter":"S"},{"name":"Algeria","_from":"1971","_to":"only","type":"-","in":"Sep","on":"26","at":"23:00s","_save":"0","letter":"-"},{"name":"Algeria","_from":"1977","_to":"only","type":"-","in":"May","on":"6","at":"0:00","_save":"1:00","letter":"S"},{"name":"Algeria","_from":"1977","_to":"only","type":"-","in":"Oct","on":"21","at":"0:00","_save":"0","letter":"-"},{"name":"Algeria","_from":"1978","_to":"only","type":"-","in":"Mar","on":"24","at":"1:00","_save":"1:00","letter":"S"},{"name":"Algeria","_from":"1978","_to":"only","type":"-","in":"Sep","on":"22","at":"3:00","_save":"0","letter":"-"},{"name":"Algeria","_from":"1980","_to":"only","type":"-","in":"Apr","on":"25","at":"0:00","_save":"1:00","letter":"S"},{"name":"Algeria","_from":"1980","_to":"only","type":"-","in":"Oct","on":"31","at":"2:00","_save":"0","letter":"-"}],"Egypt":[{"name":"Egypt","_from":"1940","_to":"only","type":"-","in":"Jul","on":"15","at":"0:00","_save":"1:00","letter":"S"},{"name":"Egypt","_from":"1940","_to":"only","type":"-","in":"Oct","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Egypt","_from":"1941","_to":"only","type":"-","in":"Apr","on":"15","at":"0:00","_save":"1:00","letter":"S"},{"name":"Egypt","_from":"1941","_to":"only","type":"-","in":"Sep","on":"16","at":"0:00","_save":"0","letter":"-"},{"name":"Egypt","_from":"1942","_to":"1944","type":"-","in":"Apr","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Egypt","_from":"1942","_to":"only","type":"-","in":"Oct","on":"27","at":"0:00","_save":"0","letter":"-"},{"name":"Egypt","_from":"1943","_to":"1945","type":"-","in":"Nov","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Egypt","_from":"1945","_to":"only","type":"-","in":"Apr","on":"16","at":"0:00","_save":"1:00","letter":"S"},{"name":"Egypt","_from":"1957","_to":"only","type":"-","in":"May","on":"10","at":"0:00","_save":"1:00","letter":"S"},{"name":"Egypt","_from":"1957","_to":"1958","type":"-","in":"Oct","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Egypt","_from":"1958","_to":"only","type":"-","in":"May","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Egypt","_from":"1959","_to":"1981","type":"-","in":"May","on":"1","at":"1:00","_save":"1:00","letter":"S"},{"name":"Egypt","_from":"1959","_to":"1965","type":"-","in":"Sep","on":"30","at":"3:00","_save":"0","letter":"-"},{"name":"Egypt","_from":"1966","_to":"1994","type":"-","in":"Oct","on":"1","at":"3:00","_save":"0","letter":"-"},{"name":"Egypt","_from":"1982","_to":"only","type":"-","in":"Jul","on":"25","at":"1:00","_save":"1:00","letter":"S"},{"name":"Egypt","_from":"1983","_to":"only","type":"-","in":"Jul","on":"12","at":"1:00","_save":"1:00","letter":"S"},{"name":"Egypt","_from":"1984","_to":"1988","type":"-","in":"May","on":"1","at":"1:00","_save":"1:00","letter":"S"},{"name":"Egypt","_from":"1989","_to":"only","type":"-","in":"May","on":"6","at":"1:00","_save":"1:00","letter":"S"},{"name":"Egypt","_from":"1990","_to":"1994","type":"-","in":"May","on":"1","at":"1:00","_save":"1:00","letter":"S"},{"name":"Egypt","_from":"1995","_to":"2010","type":"-","in":"Apr","on":"lastFri","at":"0:00s","_save":"1:00","letter":"S"},{"name":"Egypt","_from":"1995","_to":"2005","type":"-","in":"Sep","on":"lastThu","at":"23:00s","_save":"0","letter":"-"},{"name":"Egypt","_from":"2006","_to":"only","type":"-","in":"Sep","on":"21","at":"23:00s","_save":"0","letter":"-"},{"name":"Egypt","_from":"2007","_to":"only","type":"-","in":"Sep","on":"Thu>=1","at":"23:00s","_save":"0","letter":"-"},{"name":"Egypt","_from":"2008","_to":"only","type":"-","in":"Aug","on":"lastThu","at":"23:00s","_save":"0","letter":"-"},{"name":"Egypt","_from":"2009","_to":"only","type":"-","in":"Aug","on":"20","at":"23:00s","_save":"0","letter":"-"},{"name":"Egypt","_from":"2010","_to":"only","type":"-","in":"Aug","on":"11","at":"0:00","_save":"0","letter":"-"},{"name":"Egypt","_from":"2010","_to":"only","type":"-","in":"Sep","on":"10","at":"0:00","_save":"1:00","letter":"S"},{"name":"Egypt","_from":"2010","_to":"only","type":"-","in":"Sep","on":"lastThu","at":"23:00s","_save":"0","letter":"-"}],"Ghana":[{"name":"Ghana","_from":"1936","_to":"1942","type":"-","in":"Sep","on":"1","at":"0:00","_save":"0:20","letter":"GHST"},{"name":"Ghana","_from":"1936","_to":"1942","type":"-","in":"Dec","on":"31","at":"0:00","_save":"0","letter":"GMT"}],"Libya":[{"name":"Libya","_from":"1951","_to":"only","type":"-","in":"Oct","on":"14","at":"2:00","_save":"1:00","letter":"S"},{"name":"Libya","_from":"1952","_to":"only","type":"-","in":"Jan","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Libya","_from":"1953","_to":"only","type":"-","in":"Oct","on":"9","at":"2:00","_save":"1:00","letter":"S"},{"name":"Libya","_from":"1954","_to":"only","type":"-","in":"Jan","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Libya","_from":"1955","_to":"only","type":"-","in":"Sep","on":"30","at":"0:00","_save":"1:00","letter":"S"},{"name":"Libya","_from":"1956","_to":"only","type":"-","in":"Jan","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Libya","_from":"1982","_to":"1984","type":"-","in":"Apr","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Libya","_from":"1982","_to":"1985","type":"-","in":"Oct","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Libya","_from":"1985","_to":"only","type":"-","in":"Apr","on":"6","at":"0:00","_save":"1:00","letter":"S"},{"name":"Libya","_from":"1986","_to":"only","type":"-","in":"Apr","on":"4","at":"0:00","_save":"1:00","letter":"S"},{"name":"Libya","_from":"1986","_to":"only","type":"-","in":"Oct","on":"3","at":"0:00","_save":"0","letter":"-"},{"name":"Libya","_from":"1987","_to":"1989","type":"-","in":"Apr","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Libya","_from":"1987","_to":"1989","type":"-","in":"Oct","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Libya","_from":"1997","_to":"only","type":"-","in":"Apr","on":"4","at":"0:00","_save":"1:00","letter":"S"},{"name":"Libya","_from":"1997","_to":"only","type":"-","in":"Oct","on":"4","at":"0:00","_save":"0","letter":"-"},{"name":"Libya","_from":"2013","_to":"max","type":"-","in":"Mar","on":"lastFri","at":"1:00","_save":"1:00","letter":"S"},{"name":"Libya","_from":"2013","_to":"max","type":"-","in":"Oct","on":"lastFri","at":"2:00","_save":"0","letter":"-"}],"Mauritius":[{"name":"Mauritius","_from":"1982","_to":"only","type":"-","in":"Oct","on":"10","at":"0:00","_save":"1:00","letter":"S"},{"name":"Mauritius","_from":"1983","_to":"only","type":"-","in":"Mar","on":"21","at":"0:00","_save":"0","letter":"-"},{"name":"Mauritius","_from":"2008","_to":"only","type":"-","in":"Oct","on":"lastSun","at":"2:00","_save":"1:00","letter":"S"},{"name":"Mauritius","_from":"2009","_to":"only","type":"-","in":"Mar","on":"lastSun","at":"2:00","_save":"0","letter":"-"}],"Morocco":[{"name":"Morocco","_from":"1939","_to":"only","type":"-","in":"Sep","on":"12","at":"0:00","_save":"1:00","letter":"S"},{"name":"Morocco","_from":"1939","_to":"only","type":"-","in":"Nov","on":"19","at":"0:00","_save":"0","letter":"-"},{"name":"Morocco","_from":"1940","_to":"only","type":"-","in":"Feb","on":"25","at":"0:00","_save":"1:00","letter":"S"},{"name":"Morocco","_from":"1945","_to":"only","type":"-","in":"Nov","on":"18","at":"0:00","_save":"0","letter":"-"},{"name":"Morocco","_from":"1950","_to":"only","type":"-","in":"Jun","on":"11","at":"0:00","_save":"1:00","letter":"S"},{"name":"Morocco","_from":"1950","_to":"only","type":"-","in":"Oct","on":"29","at":"0:00","_save":"0","letter":"-"},{"name":"Morocco","_from":"1967","_to":"only","type":"-","in":"Jun","on":"3","at":"12:00","_save":"1:00","letter":"S"},{"name":"Morocco","_from":"1967","_to":"only","type":"-","in":"Oct","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Morocco","_from":"1974","_to":"only","type":"-","in":"Jun","on":"24","at":"0:00","_save":"1:00","letter":"S"},{"name":"Morocco","_from":"1974","_to":"only","type":"-","in":"Sep","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Morocco","_from":"1976","_to":"1977","type":"-","in":"May","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Morocco","_from":"1976","_to":"only","type":"-","in":"Aug","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Morocco","_from":"1977","_to":"only","type":"-","in":"Sep","on":"28","at":"0:00","_save":"0","letter":"-"},{"name":"Morocco","_from":"1978","_to":"only","type":"-","in":"Jun","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Morocco","_from":"1978","_to":"only","type":"-","in":"Aug","on":"4","at":"0:00","_save":"0","letter":"-"},{"name":"Morocco","_from":"2008","_to":"only","type":"-","in":"Jun","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Morocco","_from":"2008","_to":"only","type":"-","in":"Sep","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Morocco","_from":"2009","_to":"only","type":"-","in":"Jun","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Morocco","_from":"2009","_to":"only","type":"-","in":"Aug","on":"21","at":"0:00","_save":"0","letter":"-"},{"name":"Morocco","_from":"2010","_to":"only","type":"-","in":"May","on":"2","at":"0:00","_save":"1:00","letter":"S"},{"name":"Morocco","_from":"2010","_to":"only","type":"-","in":"Aug","on":"8","at":"0:00","_save":"0","letter":"-"},{"name":"Morocco","_from":"2011","_to":"only","type":"-","in":"Apr","on":"3","at":"0:00","_save":"1:00","letter":"S"},{"name":"Morocco","_from":"2011","_to":"only","type":"-","in":"Jul","on":"31","at":"0","_save":"0","letter":"-"},{"name":"Morocco","_from":"2012","_to":"2019","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"1:00","letter":"S"},{"name":"Morocco","_from":"2012","_to":"max","type":"-","in":"Sep","on":"lastSun","at":"3:00","_save":"0","letter":"-"},{"name":"Morocco","_from":"2012","_to":"only","type":"-","in":"Jul","on":"20","at":"3:00","_save":"0","letter":"-"},{"name":"Morocco","_from":"2012","_to":"only","type":"-","in":"Aug","on":"20","at":"2:00","_save":"1:00","letter":"S"},{"name":"Morocco","_from":"2013","_to":"only","type":"-","in":"Jul","on":"7","at":"3:00","_save":"0","letter":"-"},{"name":"Morocco","_from":"2013","_to":"only","type":"-","in":"Aug","on":"10","at":"2:00","_save":"1:00","letter":"S"},{"name":"Morocco","_from":"2014","_to":"only","type":"-","in":"Jun","on":"29","at":"3:00","_save":"0","letter":"-"},{"name":"Morocco","_from":"2014","_to":"only","type":"-","in":"Jul","on":"29","at":"2:00","_save":"1:00","letter":"S"},{"name":"Morocco","_from":"2015","_to":"only","type":"-","in":"Jun","on":"18","at":"3:00","_save":"0","letter":"-"},{"name":"Morocco","_from":"2015","_to":"only","type":"-","in":"Jul","on":"18","at":"2:00","_save":"1:00","letter":"S"},{"name":"Morocco","_from":"2016","_to":"only","type":"-","in":"Jun","on":"7","at":"3:00","_save":"0","letter":"-"},{"name":"Morocco","_from":"2016","_to":"only","type":"-","in":"Jul","on":"7","at":"2:00","_save":"1:00","letter":"S"},{"name":"Morocco","_from":"2017","_to":"only","type":"-","in":"May","on":"27","at":"3:00","_save":"0","letter":"-"},{"name":"Morocco","_from":"2017","_to":"only","type":"-","in":"Jun","on":"26","at":"2:00","_save":"1:00","letter":"S"},{"name":"Morocco","_from":"2018","_to":"only","type":"-","in":"May","on":"16","at":"3:00","_save":"0","letter":"-"},{"name":"Morocco","_from":"2018","_to":"only","type":"-","in":"Jun","on":"15","at":"2:00","_save":"1:00","letter":"S"},{"name":"Morocco","_from":"2019","_to":"only","type":"-","in":"May","on":"6","at":"3:00","_save":"0","letter":"-"},{"name":"Morocco","_from":"2019","_to":"only","type":"-","in":"Jun","on":"5","at":"2:00","_save":"1:00","letter":"S"},{"name":"Morocco","_from":"2020","_to":"only","type":"-","in":"May","on":"24","at":"2:00","_save":"1:00","letter":"S"},{"name":"Morocco","_from":"2021","_to":"only","type":"-","in":"May","on":"13","at":"2:00","_save":"1:00","letter":"S"},{"name":"Morocco","_from":"2022","_to":"only","type":"-","in":"May","on":"3","at":"2:00","_save":"1:00","letter":"S"},{"name":"Morocco","_from":"2023","_to":"max","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"1:00","letter":"S"}],"Namibia":[{"name":"Namibia","_from":"1994","_to":"max","type":"-","in":"Sep","on":"Sun>=1","at":"2:00","_save":"1:00","letter":"S"},{"name":"Namibia","_from":"1995","_to":"max","type":"-","in":"Apr","on":"Sun>=1","at":"2:00","_save":"0","letter":"-"}],"SL":[{"name":"SL","_from":"1935","_to":"1942","type":"-","in":"Jun","on":"1","at":"0:00","_save":"0:40","letter":"SLST"},{"name":"SL","_from":"1935","_to":"1942","type":"-","in":"Oct","on":"1","at":"0:00","_save":"0","letter":"WAT"},{"name":"SL","_from":"1957","_to":"1962","type":"-","in":"Jun","on":"1","at":"0:00","_save":"1:00","letter":"SLST"},{"name":"SL","_from":"1957","_to":"1962","type":"-","in":"Sep","on":"1","at":"0:00","_save":"0","letter":"GMT"}],"SA":[{"name":"SA","_from":"1942","_to":"1943","type":"-","in":"Sep","on":"Sun>=15","at":"2:00","_save":"1:00","letter":"-"},{"name":"SA","_from":"1943","_to":"1944","type":"-","in":"Mar","on":"Sun>=15","at":"2:00","_save":"0","letter":"-"}],"Sudan":[{"name":"Sudan","_from":"1970","_to":"only","type":"-","in":"May","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Sudan","_from":"1970","_to":"1985","type":"-","in":"Oct","on":"15","at":"0:00","_save":"0","letter":"-"},{"name":"Sudan","_from":"1971","_to":"only","type":"-","in":"Apr","on":"30","at":"0:00","_save":"1:00","letter":"S"},{"name":"Sudan","_from":"1972","_to":"1985","type":"-","in":"Apr","on":"lastSun","at":"0:00","_save":"1:00","letter":"S"}],"Tunisia":[{"name":"Tunisia","_from":"1939","_to":"only","type":"-","in":"Apr","on":"15","at":"23:00s","_save":"1:00","letter":"S"},{"name":"Tunisia","_from":"1939","_to":"only","type":"-","in":"Nov","on":"18","at":"23:00s","_save":"0","letter":"-"},{"name":"Tunisia","_from":"1940","_to":"only","type":"-","in":"Feb","on":"25","at":"23:00s","_save":"1:00","letter":"S"},{"name":"Tunisia","_from":"1941","_to":"only","type":"-","in":"Oct","on":"6","at":"0:00","_save":"0","letter":"-"},{"name":"Tunisia","_from":"1942","_to":"only","type":"-","in":"Mar","on":"9","at":"0:00","_save":"1:00","letter":"S"},{"name":"Tunisia","_from":"1942","_to":"only","type":"-","in":"Nov","on":"2","at":"3:00","_save":"0","letter":"-"},{"name":"Tunisia","_from":"1943","_to":"only","type":"-","in":"Mar","on":"29","at":"2:00","_save":"1:00","letter":"S"},{"name":"Tunisia","_from":"1943","_to":"only","type":"-","in":"Apr","on":"17","at":"2:00","_save":"0","letter":"-"},{"name":"Tunisia","_from":"1943","_to":"only","type":"-","in":"Apr","on":"25","at":"2:00","_save":"1:00","letter":"S"},{"name":"Tunisia","_from":"1943","_to":"only","type":"-","in":"Oct","on":"4","at":"2:00","_save":"0","letter":"-"},{"name":"Tunisia","_from":"1944","_to":"1945","type":"-","in":"Apr","on":"Mon>=1","at":"2:00","_save":"1:00","letter":"S"},{"name":"Tunisia","_from":"1944","_to":"only","type":"-","in":"Oct","on":"8","at":"0:00","_save":"0","letter":"-"},{"name":"Tunisia","_from":"1945","_to":"only","type":"-","in":"Sep","on":"16","at":"0:00","_save":"0","letter":"-"},{"name":"Tunisia","_from":"1977","_to":"only","type":"-","in":"Apr","on":"30","at":"0:00s","_save":"1:00","letter":"S"},{"name":"Tunisia","_from":"1977","_to":"only","type":"-","in":"Sep","on":"24","at":"0:00s","_save":"0","letter":"-"},{"name":"Tunisia","_from":"1978","_to":"only","type":"-","in":"May","on":"1","at":"0:00s","_save":"1:00","letter":"S"},{"name":"Tunisia","_from":"1978","_to":"only","type":"-","in":"Oct","on":"1","at":"0:00s","_save":"0","letter":"-"},{"name":"Tunisia","_from":"1988","_to":"only","type":"-","in":"Jun","on":"1","at":"0:00s","_save":"1:00","letter":"S"},{"name":"Tunisia","_from":"1988","_to":"1990","type":"-","in":"Sep","on":"lastSun","at":"0:00s","_save":"0","letter":"-"},{"name":"Tunisia","_from":"1989","_to":"only","type":"-","in":"Mar","on":"26","at":"0:00s","_save":"1:00","letter":"S"},{"name":"Tunisia","_from":"1990","_to":"only","type":"-","in":"May","on":"1","at":"0:00s","_save":"1:00","letter":"S"},{"name":"Tunisia","_from":"2005","_to":"only","type":"-","in":"May","on":"1","at":"0:00s","_save":"1:00","letter":"S"},{"name":"Tunisia","_from":"2005","_to":"only","type":"-","in":"Sep","on":"30","at":"1:00s","_save":"0","letter":"-"},{"name":"Tunisia","_from":"2006","_to":"2008","type":"-","in":"Mar","on":"lastSun","at":"2:00s","_save":"1:00","letter":"S"},{"name":"Tunisia","_from":"2006","_to":"2008","type":"-","in":"Oct","on":"lastSun","at":"2:00s","_save":"0","letter":"-"}],"ArgAQ":[{"name":"ArgAQ","_from":"1964","_to":"1966","type":"-","in":"Mar","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"ArgAQ","_from":"1964","_to":"1966","type":"-","in":"Oct","on":"15","at":"0:00","_save":"1:00","letter":"S"},{"name":"ArgAQ","_from":"1967","_to":"only","type":"-","in":"Apr","on":"2","at":"0:00","_save":"0","letter":"-"},{"name":"ArgAQ","_from":"1967","_to":"1968","type":"-","in":"Oct","on":"Sun>=1","at":"0:00","_save":"1:00","letter":"S"},{"name":"ArgAQ","_from":"1968","_to":"1969","type":"-","in":"Apr","on":"Sun>=1","at":"0:00","_save":"0","letter":"-"},{"name":"ArgAQ","_from":"1974","_to":"only","type":"-","in":"Jan","on":"23","at":"0:00","_save":"1:00","letter":"S"},{"name":"ArgAQ","_from":"1974","_to":"only","type":"-","in":"May","on":"1","at":"0:00","_save":"0","letter":"-"}],"ChileAQ":[{"name":"ChileAQ","_from":"1972","_to":"1986","type":"-","in":"Mar","on":"Sun>=9","at":"3:00u","_save":"0","letter":"-"},{"name":"ChileAQ","_from":"1974","_to":"1987","type":"-","in":"Oct","on":"Sun>=9","at":"4:00u","_save":"1:00","letter":"S"},{"name":"ChileAQ","_from":"1987","_to":"only","type":"-","in":"Apr","on":"12","at":"3:00u","_save":"0","letter":"-"},{"name":"ChileAQ","_from":"1988","_to":"1989","type":"-","in":"Mar","on":"Sun>=9","at":"3:00u","_save":"0","letter":"-"},{"name":"ChileAQ","_from":"1988","_to":"only","type":"-","in":"Oct","on":"Sun>=1","at":"4:00u","_save":"1:00","letter":"S"},{"name":"ChileAQ","_from":"1989","_to":"only","type":"-","in":"Oct","on":"Sun>=9","at":"4:00u","_save":"1:00","letter":"S"},{"name":"ChileAQ","_from":"1990","_to":"only","type":"-","in":"Mar","on":"18","at":"3:00u","_save":"0","letter":"-"},{"name":"ChileAQ","_from":"1990","_to":"only","type":"-","in":"Sep","on":"16","at":"4:00u","_save":"1:00","letter":"S"},{"name":"ChileAQ","_from":"1991","_to":"1996","type":"-","in":"Mar","on":"Sun>=9","at":"3:00u","_save":"0","letter":"-"},{"name":"ChileAQ","_from":"1991","_to":"1997","type":"-","in":"Oct","on":"Sun>=9","at":"4:00u","_save":"1:00","letter":"S"},{"name":"ChileAQ","_from":"1997","_to":"only","type":"-","in":"Mar","on":"30","at":"3:00u","_save":"0","letter":"-"},{"name":"ChileAQ","_from":"1998","_to":"only","type":"-","in":"Mar","on":"Sun>=9","at":"3:00u","_save":"0","letter":"-"},{"name":"ChileAQ","_from":"1998","_to":"only","type":"-","in":"Sep","on":"27","at":"4:00u","_save":"1:00","letter":"S"},{"name":"ChileAQ","_from":"1999","_to":"only","type":"-","in":"Apr","on":"4","at":"3:00u","_save":"0","letter":"-"},{"name":"ChileAQ","_from":"1999","_to":"2010","type":"-","in":"Oct","on":"Sun>=9","at":"4:00u","_save":"1:00","letter":"S"},{"name":"ChileAQ","_from":"2000","_to":"2007","type":"-","in":"Mar","on":"Sun>=9","at":"3:00u","_save":"0","letter":"-"},{"name":"ChileAQ","_from":"2008","_to":"only","type":"-","in":"Mar","on":"30","at":"3:00u","_save":"0","letter":"-"},{"name":"ChileAQ","_from":"2009","_to":"only","type":"-","in":"Mar","on":"Sun>=9","at":"3:00u","_save":"0","letter":"-"},{"name":"ChileAQ","_from":"2010","_to":"only","type":"-","in":"Apr","on":"Sun>=1","at":"3:00u","_save":"0","letter":"-"},{"name":"ChileAQ","_from":"2011","_to":"only","type":"-","in":"May","on":"Sun>=2","at":"3:00u","_save":"0","letter":"-"},{"name":"ChileAQ","_from":"2011","_to":"only","type":"-","in":"Aug","on":"Sun>=16","at":"4:00u","_save":"1:00","letter":"S"},{"name":"ChileAQ","_from":"2012","_to":"max","type":"-","in":"Apr","on":"Sun>=23","at":"3:00u","_save":"0","letter":"-"},{"name":"ChileAQ","_from":"2012","_to":"max","type":"-","in":"Sep","on":"Sun>=2","at":"4:00u","_save":"1:00","letter":"S"}],"NZAQ":[{"name":"NZAQ","_from":"1974","_to":"only","type":"-","in":"Nov","on":"3","at":"2:00s","_save":"1:00","letter":"D"},{"name":"NZAQ","_from":"1975","_to":"1988","type":"-","in":"Oct","on":"lastSun","at":"2:00s","_save":"1:00","letter":"D"},{"name":"NZAQ","_from":"1989","_to":"only","type":"-","in":"Oct","on":"8","at":"2:00s","_save":"1:00","letter":"D"},{"name":"NZAQ","_from":"1990","_to":"2006","type":"-","in":"Oct","on":"Sun>=1","at":"2:00s","_save":"1:00","letter":"D"},{"name":"NZAQ","_from":"1975","_to":"only","type":"-","in":"Feb","on":"23","at":"2:00s","_save":"0","letter":"S"},{"name":"NZAQ","_from":"1976","_to":"1989","type":"-","in":"Mar","on":"Sun>=1","at":"2:00s","_save":"0","letter":"S"},{"name":"NZAQ","_from":"1990","_to":"2007","type":"-","in":"Mar","on":"Sun>=15","at":"2:00s","_save":"0","letter":"S"},{"name":"NZAQ","_from":"2007","_to":"max","type":"-","in":"Sep","on":"lastSun","at":"2:00s","_save":"1:00","letter":"D"},{"name":"NZAQ","_from":"2008","_to":"max","type":"-","in":"Apr","on":"Sun>=1","at":"2:00s","_save":"0","letter":"S"}],"EUAsia":[{"name":"EUAsia","_from":"1981","_to":"max","type":"-","in":"Mar","on":"lastSun","at":"1:00u","_save":"1:00","letter":"S"},{"name":"EUAsia","_from":"1979","_to":"1995","type":"-","in":"Sep","on":"lastSun","at":"1:00u","_save":"0","letter":"-"},{"name":"EUAsia","_from":"1996","_to":"max","type":"-","in":"Oct","on":"lastSun","at":"1:00u","_save":"0","letter":"-"}],"E-EurAsia":[{"name":"E-EurAsia","_from":"1981","_to":"max","type":"-","in":"Mar","on":"lastSun","at":"0:00","_save":"1:00","letter":"S"},{"name":"E-EurAsia","_from":"1979","_to":"1995","type":"-","in":"Sep","on":"lastSun","at":"0:00","_save":"0","letter":"-"},{"name":"E-EurAsia","_from":"1996","_to":"max","type":"-","in":"Oct","on":"lastSun","at":"0:00","_save":"0","letter":"-"}],"RussiaAsia":[{"name":"RussiaAsia","_from":"1981","_to":"1984","type":"-","in":"Apr","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"RussiaAsia","_from":"1981","_to":"1983","type":"-","in":"Oct","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"RussiaAsia","_from":"1984","_to":"1991","type":"-","in":"Sep","on":"lastSun","at":"2:00s","_save":"0","letter":"-"},{"name":"RussiaAsia","_from":"1985","_to":"1991","type":"-","in":"Mar","on":"lastSun","at":"2:00s","_save":"1:00","letter":"S"},{"name":"RussiaAsia","_from":"1992","_to":"only","type":"-","in":"Mar","on":"lastSat","at":"23:00","_save":"1:00","letter":"S"},{"name":"RussiaAsia","_from":"1992","_to":"only","type":"-","in":"Sep","on":"lastSat","at":"23:00","_save":"0","letter":"-"},{"name":"RussiaAsia","_from":"1993","_to":"max","type":"-","in":"Mar","on":"lastSun","at":"2:00s","_save":"1:00","letter":"S"},{"name":"RussiaAsia","_from":"1993","_to":"1995","type":"-","in":"Sep","on":"lastSun","at":"2:00s","_save":"0","letter":"-"},{"name":"RussiaAsia","_from":"1996","_to":"max","type":"-","in":"Oct","on":"lastSun","at":"2:00s","_save":"0","letter":"-"}],"Azer":[{"name":"Azer","_from":"1997","_to":"max","type":"-","in":"Mar","on":"lastSun","at":"4:00","_save":"1:00","letter":"S"},{"name":"Azer","_from":"1997","_to":"max","type":"-","in":"Oct","on":"lastSun","at":"5:00","_save":"0","letter":"-"}],"Dhaka":[{"name":"Dhaka","_from":"2009","_to":"only","type":"-","in":"Jun","on":"19","at":"23:00","_save":"1:00","letter":"S"},{"name":"Dhaka","_from":"2009","_to":"only","type":"-","in":"Dec","on":"31","at":"23:59","_save":"0","letter":"-"}],"Shang":[{"name":"Shang","_from":"1940","_to":"only","type":"-","in":"Jun","on":"3","at":"0:00","_save":"1:00","letter":"D"},{"name":"Shang","_from":"1940","_to":"1941","type":"-","in":"Oct","on":"1","at":"0:00","_save":"0","letter":"S"},{"name":"Shang","_from":"1941","_to":"only","type":"-","in":"Mar","on":"16","at":"0:00","_save":"1:00","letter":"D"}],"PRC":[{"name":"PRC","_from":"1986","_to":"only","type":"-","in":"May","on":"4","at":"0:00","_save":"1:00","letter":"D"},{"name":"PRC","_from":"1986","_to":"1991","type":"-","in":"Sep","on":"Sun>=11","at":"0:00","_save":"0","letter":"S"},{"name":"PRC","_from":"1987","_to":"1991","type":"-","in":"Apr","on":"Sun>=10","at":"0:00","_save":"1:00","letter":"D"}],"HK":[{"name":"HK","_from":"1941","_to":"only","type":"-","in":"Apr","on":"1","at":"3:30","_save":"1:00","letter":"S"},{"name":"HK","_from":"1941","_to":"only","type":"-","in":"Sep","on":"30","at":"3:30","_save":"0","letter":"-"},{"name":"HK","_from":"1946","_to":"only","type":"-","in":"Apr","on":"20","at":"3:30","_save":"1:00","letter":"S"},{"name":"HK","_from":"1946","_to":"only","type":"-","in":"Dec","on":"1","at":"3:30","_save":"0","letter":"-"},{"name":"HK","_from":"1947","_to":"only","type":"-","in":"Apr","on":"13","at":"3:30","_save":"1:00","letter":"S"},{"name":"HK","_from":"1947","_to":"only","type":"-","in":"Dec","on":"30","at":"3:30","_save":"0","letter":"-"},{"name":"HK","_from":"1948","_to":"only","type":"-","in":"May","on":"2","at":"3:30","_save":"1:00","letter":"S"},{"name":"HK","_from":"1948","_to":"1951","type":"-","in":"Oct","on":"lastSun","at":"3:30","_save":"0","letter":"-"},{"name":"HK","_from":"1952","_to":"only","type":"-","in":"Oct","on":"25","at":"3:30","_save":"0","letter":"-"},{"name":"HK","_from":"1949","_to":"1953","type":"-","in":"Apr","on":"Sun>=1","at":"3:30","_save":"1:00","letter":"S"},{"name":"HK","_from":"1953","_to":"only","type":"-","in":"Nov","on":"1","at":"3:30","_save":"0","letter":"-"},{"name":"HK","_from":"1954","_to":"1964","type":"-","in":"Mar","on":"Sun>=18","at":"3:30","_save":"1:00","letter":"S"},{"name":"HK","_from":"1954","_to":"only","type":"-","in":"Oct","on":"31","at":"3:30","_save":"0","letter":"-"},{"name":"HK","_from":"1955","_to":"1964","type":"-","in":"Nov","on":"Sun>=1","at":"3:30","_save":"0","letter":"-"},{"name":"HK","_from":"1965","_to":"1976","type":"-","in":"Apr","on":"Sun>=16","at":"3:30","_save":"1:00","letter":"S"},{"name":"HK","_from":"1965","_to":"1976","type":"-","in":"Oct","on":"Sun>=16","at":"3:30","_save":"0","letter":"-"},{"name":"HK","_from":"1973","_to":"only","type":"-","in":"Dec","on":"30","at":"3:30","_save":"1:00","letter":"S"},{"name":"HK","_from":"1979","_to":"only","type":"-","in":"May","on":"Sun>=8","at":"3:30","_save":"1:00","letter":"S"},{"name":"HK","_from":"1979","_to":"only","type":"-","in":"Oct","on":"Sun>=16","at":"3:30","_save":"0","letter":"-"}],"Taiwan":[{"name":"Taiwan","_from":"1945","_to":"1951","type":"-","in":"May","on":"1","at":"0:00","_save":"1:00","letter":"D"},{"name":"Taiwan","_from":"1945","_to":"1951","type":"-","in":"Oct","on":"1","at":"0:00","_save":"0","letter":"S"},{"name":"Taiwan","_from":"1952","_to":"only","type":"-","in":"Mar","on":"1","at":"0:00","_save":"1:00","letter":"D"},{"name":"Taiwan","_from":"1952","_to":"1954","type":"-","in":"Nov","on":"1","at":"0:00","_save":"0","letter":"S"},{"name":"Taiwan","_from":"1953","_to":"1959","type":"-","in":"Apr","on":"1","at":"0:00","_save":"1:00","letter":"D"},{"name":"Taiwan","_from":"1955","_to":"1961","type":"-","in":"Oct","on":"1","at":"0:00","_save":"0","letter":"S"},{"name":"Taiwan","_from":"1960","_to":"1961","type":"-","in":"Jun","on":"1","at":"0:00","_save":"1:00","letter":"D"},{"name":"Taiwan","_from":"1974","_to":"1975","type":"-","in":"Apr","on":"1","at":"0:00","_save":"1:00","letter":"D"},{"name":"Taiwan","_from":"1974","_to":"1975","type":"-","in":"Oct","on":"1","at":"0:00","_save":"0","letter":"S"},{"name":"Taiwan","_from":"1979","_to":"only","type":"-","in":"Jun","on":"30","at":"0:00","_save":"1:00","letter":"D"},{"name":"Taiwan","_from":"1979","_to":"only","type":"-","in":"Sep","on":"30","at":"0:00","_save":"0","letter":"S"}],"Macau":[{"name":"Macau","_from":"1961","_to":"1962","type":"-","in":"Mar","on":"Sun>=16","at":"3:30","_save":"1:00","letter":"S"},{"name":"Macau","_from":"1961","_to":"1964","type":"-","in":"Nov","on":"Sun>=1","at":"3:30","_save":"0","letter":"-"},{"name":"Macau","_from":"1963","_to":"only","type":"-","in":"Mar","on":"Sun>=16","at":"0:00","_save":"1:00","letter":"S"},{"name":"Macau","_from":"1964","_to":"only","type":"-","in":"Mar","on":"Sun>=16","at":"3:30","_save":"1:00","letter":"S"},{"name":"Macau","_from":"1965","_to":"only","type":"-","in":"Mar","on":"Sun>=16","at":"0:00","_save":"1:00","letter":"S"},{"name":"Macau","_from":"1965","_to":"only","type":"-","in":"Oct","on":"31","at":"0:00","_save":"0","letter":"-"},{"name":"Macau","_from":"1966","_to":"1971","type":"-","in":"Apr","on":"Sun>=16","at":"3:30","_save":"1:00","letter":"S"},{"name":"Macau","_from":"1966","_to":"1971","type":"-","in":"Oct","on":"Sun>=16","at":"3:30","_save":"0","letter":"-"},{"name":"Macau","_from":"1972","_to":"1974","type":"-","in":"Apr","on":"Sun>=15","at":"0:00","_save":"1:00","letter":"S"},{"name":"Macau","_from":"1972","_to":"1973","type":"-","in":"Oct","on":"Sun>=15","at":"0:00","_save":"0","letter":"-"},{"name":"Macau","_from":"1974","_to":"1977","type":"-","in":"Oct","on":"Sun>=15","at":"3:30","_save":"0","letter":"-"},{"name":"Macau","_from":"1975","_to":"1977","type":"-","in":"Apr","on":"Sun>=15","at":"3:30","_save":"1:00","letter":"S"},{"name":"Macau","_from":"1978","_to":"1980","type":"-","in":"Apr","on":"Sun>=15","at":"0:00","_save":"1:00","letter":"S"},{"name":"Macau","_from":"1978","_to":"1980","type":"-","in":"Oct","on":"Sun>=15","at":"0:00","_save":"0","letter":"-"}],"Cyprus":[{"name":"Cyprus","_from":"1975","_to":"only","type":"-","in":"Apr","on":"13","at":"0:00","_save":"1:00","letter":"S"},{"name":"Cyprus","_from":"1975","_to":"only","type":"-","in":"Oct","on":"12","at":"0:00","_save":"0","letter":"-"},{"name":"Cyprus","_from":"1976","_to":"only","type":"-","in":"May","on":"15","at":"0:00","_save":"1:00","letter":"S"},{"name":"Cyprus","_from":"1976","_to":"only","type":"-","in":"Oct","on":"11","at":"0:00","_save":"0","letter":"-"},{"name":"Cyprus","_from":"1977","_to":"1980","type":"-","in":"Apr","on":"Sun>=1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Cyprus","_from":"1977","_to":"only","type":"-","in":"Sep","on":"25","at":"0:00","_save":"0","letter":"-"},{"name":"Cyprus","_from":"1978","_to":"only","type":"-","in":"Oct","on":"2","at":"0:00","_save":"0","letter":"-"},{"name":"Cyprus","_from":"1979","_to":"1997","type":"-","in":"Sep","on":"lastSun","at":"0:00","_save":"0","letter":"-"},{"name":"Cyprus","_from":"1981","_to":"1998","type":"-","in":"Mar","on":"lastSun","at":"0:00","_save":"1:00","letter":"S"}],"Iran":[{"name":"Iran","_from":"1978","_to":"1980","type":"-","in":"Mar","on":"21","at":"0:00","_save":"1:00","letter":"D"},{"name":"Iran","_from":"1978","_to":"only","type":"-","in":"Oct","on":"21","at":"0:00","_save":"0","letter":"S"},{"name":"Iran","_from":"1979","_to":"only","type":"-","in":"Sep","on":"19","at":"0:00","_save":"0","letter":"S"},{"name":"Iran","_from":"1980","_to":"only","type":"-","in":"Sep","on":"23","at":"0:00","_save":"0","letter":"S"},{"name":"Iran","_from":"1991","_to":"only","type":"-","in":"May","on":"3","at":"0:00","_save":"1:00","letter":"D"},{"name":"Iran","_from":"1992","_to":"1995","type":"-","in":"Mar","on":"22","at":"0:00","_save":"1:00","letter":"D"},{"name":"Iran","_from":"1991","_to":"1995","type":"-","in":"Sep","on":"22","at":"0:00","_save":"0","letter":"S"},{"name":"Iran","_from":"1996","_to":"only","type":"-","in":"Mar","on":"21","at":"0:00","_save":"1:00","letter":"D"},{"name":"Iran","_from":"1996","_to":"only","type":"-","in":"Sep","on":"21","at":"0:00","_save":"0","letter":"S"},{"name":"Iran","_from":"1997","_to":"1999","type":"-","in":"Mar","on":"22","at":"0:00","_save":"1:00","letter":"D"},{"name":"Iran","_from":"1997","_to":"1999","type":"-","in":"Sep","on":"22","at":"0:00","_save":"0","letter":"S"},{"name":"Iran","_from":"2000","_to":"only","type":"-","in":"Mar","on":"21","at":"0:00","_save":"1:00","letter":"D"},{"name":"Iran","_from":"2000","_to":"only","type":"-","in":"Sep","on":"21","at":"0:00","_save":"0","letter":"S"},{"name":"Iran","_from":"2001","_to":"2003","type":"-","in":"Mar","on":"22","at":"0:00","_save":"1:00","letter":"D"},{"name":"Iran","_from":"2001","_to":"2003","type":"-","in":"Sep","on":"22","at":"0:00","_save":"0","letter":"S"},{"name":"Iran","_from":"2004","_to":"only","type":"-","in":"Mar","on":"21","at":"0:00","_save":"1:00","letter":"D"},{"name":"Iran","_from":"2004","_to":"only","type":"-","in":"Sep","on":"21","at":"0:00","_save":"0","letter":"S"},{"name":"Iran","_from":"2005","_to":"only","type":"-","in":"Mar","on":"22","at":"0:00","_save":"1:00","letter":"D"},{"name":"Iran","_from":"2005","_to":"only","type":"-","in":"Sep","on":"22","at":"0:00","_save":"0","letter":"S"},{"name":"Iran","_from":"2008","_to":"only","type":"-","in":"Mar","on":"21","at":"0:00","_save":"1:00","letter":"D"},{"name":"Iran","_from":"2008","_to":"only","type":"-","in":"Sep","on":"21","at":"0:00","_save":"0","letter":"S"},{"name":"Iran","_from":"2009","_to":"2011","type":"-","in":"Mar","on":"22","at":"0:00","_save":"1:00","letter":"D"},{"name":"Iran","_from":"2009","_to":"2011","type":"-","in":"Sep","on":"22","at":"0:00","_save":"0","letter":"S"},{"name":"Iran","_from":"2012","_to":"only","type":"-","in":"Mar","on":"21","at":"0:00","_save":"1:00","letter":"D"},{"name":"Iran","_from":"2012","_to":"only","type":"-","in":"Sep","on":"21","at":"0:00","_save":"0","letter":"S"},{"name":"Iran","_from":"2013","_to":"2015","type":"-","in":"Mar","on":"22","at":"0:00","_save":"1:00","letter":"D"},{"name":"Iran","_from":"2013","_to":"2015","type":"-","in":"Sep","on":"22","at":"0:00","_save":"0","letter":"S"},{"name":"Iran","_from":"2016","_to":"only","type":"-","in":"Mar","on":"21","at":"0:00","_save":"1:00","letter":"D"},{"name":"Iran","_from":"2016","_to":"only","type":"-","in":"Sep","on":"21","at":"0:00","_save":"0","letter":"S"},{"name":"Iran","_from":"2017","_to":"2019","type":"-","in":"Mar","on":"22","at":"0:00","_save":"1:00","letter":"D"},{"name":"Iran","_from":"2017","_to":"2019","type":"-","in":"Sep","on":"22","at":"0:00","_save":"0","letter":"S"},{"name":"Iran","_from":"2020","_to":"only","type":"-","in":"Mar","on":"21","at":"0:00","_save":"1:00","letter":"D"},{"name":"Iran","_from":"2020","_to":"only","type":"-","in":"Sep","on":"21","at":"0:00","_save":"0","letter":"S"},{"name":"Iran","_from":"2021","_to":"2023","type":"-","in":"Mar","on":"22","at":"0:00","_save":"1:00","letter":"D"},{"name":"Iran","_from":"2021","_to":"2023","type":"-","in":"Sep","on":"22","at":"0:00","_save":"0","letter":"S"},{"name":"Iran","_from":"2024","_to":"only","type":"-","in":"Mar","on":"21","at":"0:00","_save":"1:00","letter":"D"},{"name":"Iran","_from":"2024","_to":"only","type":"-","in":"Sep","on":"21","at":"0:00","_save":"0","letter":"S"},{"name":"Iran","_from":"2025","_to":"2027","type":"-","in":"Mar","on":"22","at":"0:00","_save":"1:00","letter":"D"},{"name":"Iran","_from":"2025","_to":"2027","type":"-","in":"Sep","on":"22","at":"0:00","_save":"0","letter":"S"},{"name":"Iran","_from":"2028","_to":"2029","type":"-","in":"Mar","on":"21","at":"0:00","_save":"1:00","letter":"D"},{"name":"Iran","_from":"2028","_to":"2029","type":"-","in":"Sep","on":"21","at":"0:00","_save":"0","letter":"S"},{"name":"Iran","_from":"2030","_to":"2031","type":"-","in":"Mar","on":"22","at":"0:00","_save":"1:00","letter":"D"},{"name":"Iran","_from":"2030","_to":"2031","type":"-","in":"Sep","on":"22","at":"0:00","_save":"0","letter":"S"},{"name":"Iran","_from":"2032","_to":"2033","type":"-","in":"Mar","on":"21","at":"0:00","_save":"1:00","letter":"D"},{"name":"Iran","_from":"2032","_to":"2033","type":"-","in":"Sep","on":"21","at":"0:00","_save":"0","letter":"S"},{"name":"Iran","_from":"2034","_to":"2035","type":"-","in":"Mar","on":"22","at":"0:00","_save":"1:00","letter":"D"},{"name":"Iran","_from":"2034","_to":"2035","type":"-","in":"Sep","on":"22","at":"0:00","_save":"0","letter":"S"},{"name":"Iran","_from":"2036","_to":"2037","type":"-","in":"Mar","on":"21","at":"0:00","_save":"1:00","letter":"D"},{"name":"Iran","_from":"2036","_to":"2037","type":"-","in":"Sep","on":"21","at":"0:00","_save":"0","letter":"S"}],"Iraq":[{"name":"Iraq","_from":"1982","_to":"only","type":"-","in":"May","on":"1","at":"0:00","_save":"1:00","letter":"D"},{"name":"Iraq","_from":"1982","_to":"1984","type":"-","in":"Oct","on":"1","at":"0:00","_save":"0","letter":"S"},{"name":"Iraq","_from":"1983","_to":"only","type":"-","in":"Mar","on":"31","at":"0:00","_save":"1:00","letter":"D"},{"name":"Iraq","_from":"1984","_to":"1985","type":"-","in":"Apr","on":"1","at":"0:00","_save":"1:00","letter":"D"},{"name":"Iraq","_from":"1985","_to":"1990","type":"-","in":"Sep","on":"lastSun","at":"1:00s","_save":"0","letter":"S"},{"name":"Iraq","_from":"1986","_to":"1990","type":"-","in":"Mar","on":"lastSun","at":"1:00s","_save":"1:00","letter":"D"},{"name":"Iraq","_from":"1991","_to":"2007","type":"-","in":"Apr","on":"1","at":"3:00s","_save":"1:00","letter":"D"},{"name":"Iraq","_from":"1991","_to":"2007","type":"-","in":"Oct","on":"1","at":"3:00s","_save":"0","letter":"S"}],"Zion":[{"name":"Zion","_from":"1940","_to":"only","type":"-","in":"Jun","on":"1","at":"0:00","_save":"1:00","letter":"D"},{"name":"Zion","_from":"1942","_to":"1944","type":"-","in":"Nov","on":"1","at":"0:00","_save":"0","letter":"S"},{"name":"Zion","_from":"1943","_to":"only","type":"-","in":"Apr","on":"1","at":"2:00","_save":"1:00","letter":"D"},{"name":"Zion","_from":"1944","_to":"only","type":"-","in":"Apr","on":"1","at":"0:00","_save":"1:00","letter":"D"},{"name":"Zion","_from":"1945","_to":"only","type":"-","in":"Apr","on":"16","at":"0:00","_save":"1:00","letter":"D"},{"name":"Zion","_from":"1945","_to":"only","type":"-","in":"Nov","on":"1","at":"2:00","_save":"0","letter":"S"},{"name":"Zion","_from":"1946","_to":"only","type":"-","in":"Apr","on":"16","at":"2:00","_save":"1:00","letter":"D"},{"name":"Zion","_from":"1946","_to":"only","type":"-","in":"Nov","on":"1","at":"0:00","_save":"0","letter":"S"},{"name":"Zion","_from":"1948","_to":"only","type":"-","in":"May","on":"23","at":"0:00","_save":"2:00","letter":"DD"},{"name":"Zion","_from":"1948","_to":"only","type":"-","in":"Sep","on":"1","at":"0:00","_save":"1:00","letter":"D"},{"name":"Zion","_from":"1948","_to":"1949","type":"-","in":"Nov","on":"1","at":"2:00","_save":"0","letter":"S"},{"name":"Zion","_from":"1949","_to":"only","type":"-","in":"May","on":"1","at":"0:00","_save":"1:00","letter":"D"},{"name":"Zion","_from":"1950","_to":"only","type":"-","in":"Apr","on":"16","at":"0:00","_save":"1:00","letter":"D"},{"name":"Zion","_from":"1950","_to":"only","type":"-","in":"Sep","on":"15","at":"3:00","_save":"0","letter":"S"},{"name":"Zion","_from":"1951","_to":"only","type":"-","in":"Apr","on":"1","at":"0:00","_save":"1:00","letter":"D"},{"name":"Zion","_from":"1951","_to":"only","type":"-","in":"Nov","on":"11","at":"3:00","_save":"0","letter":"S"},{"name":"Zion","_from":"1952","_to":"only","type":"-","in":"Apr","on":"20","at":"2:00","_save":"1:00","letter":"D"},{"name":"Zion","_from":"1952","_to":"only","type":"-","in":"Oct","on":"19","at":"3:00","_save":"0","letter":"S"},{"name":"Zion","_from":"1953","_to":"only","type":"-","in":"Apr","on":"12","at":"2:00","_save":"1:00","letter":"D"},{"name":"Zion","_from":"1953","_to":"only","type":"-","in":"Sep","on":"13","at":"3:00","_save":"0","letter":"S"},{"name":"Zion","_from":"1954","_to":"only","type":"-","in":"Jun","on":"13","at":"0:00","_save":"1:00","letter":"D"},{"name":"Zion","_from":"1954","_to":"only","type":"-","in":"Sep","on":"12","at":"0:00","_save":"0","letter":"S"},{"name":"Zion","_from":"1955","_to":"only","type":"-","in":"Jun","on":"11","at":"2:00","_save":"1:00","letter":"D"},{"name":"Zion","_from":"1955","_to":"only","type":"-","in":"Sep","on":"11","at":"0:00","_save":"0","letter":"S"},{"name":"Zion","_from":"1956","_to":"only","type":"-","in":"Jun","on":"3","at":"0:00","_save":"1:00","letter":"D"},{"name":"Zion","_from":"1956","_to":"only","type":"-","in":"Sep","on":"30","at":"3:00","_save":"0","letter":"S"},{"name":"Zion","_from":"1957","_to":"only","type":"-","in":"Apr","on":"29","at":"2:00","_save":"1:00","letter":"D"},{"name":"Zion","_from":"1957","_to":"only","type":"-","in":"Sep","on":"22","at":"0:00","_save":"0","letter":"S"},{"name":"Zion","_from":"1974","_to":"only","type":"-","in":"Jul","on":"7","at":"0:00","_save":"1:00","letter":"D"},{"name":"Zion","_from":"1974","_to":"only","type":"-","in":"Oct","on":"13","at":"0:00","_save":"0","letter":"S"},{"name":"Zion","_from":"1975","_to":"only","type":"-","in":"Apr","on":"20","at":"0:00","_save":"1:00","letter":"D"},{"name":"Zion","_from":"1975","_to":"only","type":"-","in":"Aug","on":"31","at":"0:00","_save":"0","letter":"S"},{"name":"Zion","_from":"1985","_to":"only","type":"-","in":"Apr","on":"14","at":"0:00","_save":"1:00","letter":"D"},{"name":"Zion","_from":"1985","_to":"only","type":"-","in":"Sep","on":"15","at":"0:00","_save":"0","letter":"S"},{"name":"Zion","_from":"1986","_to":"only","type":"-","in":"May","on":"18","at":"0:00","_save":"1:00","letter":"D"},{"name":"Zion","_from":"1986","_to":"only","type":"-","in":"Sep","on":"7","at":"0:00","_save":"0","letter":"S"},{"name":"Zion","_from":"1987","_to":"only","type":"-","in":"Apr","on":"15","at":"0:00","_save":"1:00","letter":"D"},{"name":"Zion","_from":"1987","_to":"only","type":"-","in":"Sep","on":"13","at":"0:00","_save":"0","letter":"S"},{"name":"Zion","_from":"1988","_to":"only","type":"-","in":"Apr","on":"9","at":"0:00","_save":"1:00","letter":"D"},{"name":"Zion","_from":"1988","_to":"only","type":"-","in":"Sep","on":"3","at":"0:00","_save":"0","letter":"S"},{"name":"Zion","_from":"1989","_to":"only","type":"-","in":"Apr","on":"30","at":"0:00","_save":"1:00","letter":"D"},{"name":"Zion","_from":"1989","_to":"only","type":"-","in":"Sep","on":"3","at":"0:00","_save":"0","letter":"S"},{"name":"Zion","_from":"1990","_to":"only","type":"-","in":"Mar","on":"25","at":"0:00","_save":"1:00","letter":"D"},{"name":"Zion","_from":"1990","_to":"only","type":"-","in":"Aug","on":"26","at":"0:00","_save":"0","letter":"S"},{"name":"Zion","_from":"1991","_to":"only","type":"-","in":"Mar","on":"24","at":"0:00","_save":"1:00","letter":"D"},{"name":"Zion","_from":"1991","_to":"only","type":"-","in":"Sep","on":"1","at":"0:00","_save":"0","letter":"S"},{"name":"Zion","_from":"1992","_to":"only","type":"-","in":"Mar","on":"29","at":"0:00","_save":"1:00","letter":"D"},{"name":"Zion","_from":"1992","_to":"only","type":"-","in":"Sep","on":"6","at":"0:00","_save":"0","letter":"S"},{"name":"Zion","_from":"1993","_to":"only","type":"-","in":"Apr","on":"2","at":"0:00","_save":"1:00","letter":"D"},{"name":"Zion","_from":"1993","_to":"only","type":"-","in":"Sep","on":"5","at":"0:00","_save":"0","letter":"S"},{"name":"Zion","_from":"1994","_to":"only","type":"-","in":"Apr","on":"1","at":"0:00","_save":"1:00","letter":"D"},{"name":"Zion","_from":"1994","_to":"only","type":"-","in":"Aug","on":"28","at":"0:00","_save":"0","letter":"S"},{"name":"Zion","_from":"1995","_to":"only","type":"-","in":"Mar","on":"31","at":"0:00","_save":"1:00","letter":"D"},{"name":"Zion","_from":"1995","_to":"only","type":"-","in":"Sep","on":"3","at":"0:00","_save":"0","letter":"S"},{"name":"Zion","_from":"1996","_to":"only","type":"-","in":"Mar","on":"15","at":"0:00","_save":"1:00","letter":"D"},{"name":"Zion","_from":"1996","_to":"only","type":"-","in":"Sep","on":"16","at":"0:00","_save":"0","letter":"S"},{"name":"Zion","_from":"1997","_to":"only","type":"-","in":"Mar","on":"21","at":"0:00","_save":"1:00","letter":"D"},{"name":"Zion","_from":"1997","_to":"only","type":"-","in":"Sep","on":"14","at":"0:00","_save":"0","letter":"S"},{"name":"Zion","_from":"1998","_to":"only","type":"-","in":"Mar","on":"20","at":"0:00","_save":"1:00","letter":"D"},{"name":"Zion","_from":"1998","_to":"only","type":"-","in":"Sep","on":"6","at":"0:00","_save":"0","letter":"S"},{"name":"Zion","_from":"1999","_to":"only","type":"-","in":"Apr","on":"2","at":"2:00","_save":"1:00","letter":"D"},{"name":"Zion","_from":"1999","_to":"only","type":"-","in":"Sep","on":"3","at":"2:00","_save":"0","letter":"S"},{"name":"Zion","_from":"2000","_to":"only","type":"-","in":"Apr","on":"14","at":"2:00","_save":"1:00","letter":"D"},{"name":"Zion","_from":"2000","_to":"only","type":"-","in":"Oct","on":"6","at":"1:00","_save":"0","letter":"S"},{"name":"Zion","_from":"2001","_to":"only","type":"-","in":"Apr","on":"9","at":"1:00","_save":"1:00","letter":"D"},{"name":"Zion","_from":"2001","_to":"only","type":"-","in":"Sep","on":"24","at":"1:00","_save":"0","letter":"S"},{"name":"Zion","_from":"2002","_to":"only","type":"-","in":"Mar","on":"29","at":"1:00","_save":"1:00","letter":"D"},{"name":"Zion","_from":"2002","_to":"only","type":"-","in":"Oct","on":"7","at":"1:00","_save":"0","letter":"S"},{"name":"Zion","_from":"2003","_to":"only","type":"-","in":"Mar","on":"28","at":"1:00","_save":"1:00","letter":"D"},{"name":"Zion","_from":"2003","_to":"only","type":"-","in":"Oct","on":"3","at":"1:00","_save":"0","letter":"S"},{"name":"Zion","_from":"2004","_to":"only","type":"-","in":"Apr","on":"7","at":"1:00","_save":"1:00","letter":"D"},{"name":"Zion","_from":"2004","_to":"only","type":"-","in":"Sep","on":"22","at":"1:00","_save":"0","letter":"S"},{"name":"Zion","_from":"2005","_to":"only","type":"-","in":"Apr","on":"1","at":"2:00","_save":"1:00","letter":"D"},{"name":"Zion","_from":"2005","_to":"only","type":"-","in":"Oct","on":"9","at":"2:00","_save":"0","letter":"S"},{"name":"Zion","_from":"2006","_to":"2010","type":"-","in":"Mar","on":"Fri>=26","at":"2:00","_save":"1:00","letter":"D"},{"name":"Zion","_from":"2006","_to":"only","type":"-","in":"Oct","on":"1","at":"2:00","_save":"0","letter":"S"},{"name":"Zion","_from":"2007","_to":"only","type":"-","in":"Sep","on":"16","at":"2:00","_save":"0","letter":"S"},{"name":"Zion","_from":"2008","_to":"only","type":"-","in":"Oct","on":"5","at":"2:00","_save":"0","letter":"S"},{"name":"Zion","_from":"2009","_to":"only","type":"-","in":"Sep","on":"27","at":"2:00","_save":"0","letter":"S"},{"name":"Zion","_from":"2010","_to":"only","type":"-","in":"Sep","on":"12","at":"2:00","_save":"0","letter":"S"},{"name":"Zion","_from":"2011","_to":"only","type":"-","in":"Apr","on":"1","at":"2:00","_save":"1:00","letter":"D"},{"name":"Zion","_from":"2011","_to":"only","type":"-","in":"Oct","on":"2","at":"2:00","_save":"0","letter":"S"},{"name":"Zion","_from":"2012","_to":"only","type":"-","in":"Mar","on":"Fri>=26","at":"2:00","_save":"1:00","letter":"D"},{"name":"Zion","_from":"2012","_to":"only","type":"-","in":"Sep","on":"23","at":"2:00","_save":"0","letter":"S"},{"name":"Zion","_from":"2013","_to":"max","type":"-","in":"Mar","on":"Fri>=23","at":"2:00","_save":"1:00","letter":"D"},{"name":"Zion","_from":"2013","_to":"max","type":"-","in":"Oct","on":"lastSun","at":"2:00","_save":"0","letter":"S"}],"Japan":[{"name":"Japan","_from":"1948","_to":"only","type":"-","in":"May","on":"Sun>=1","at":"2:00","_save":"1:00","letter":"D"},{"name":"Japan","_from":"1948","_to":"1951","type":"-","in":"Sep","on":"Sat>=8","at":"2:00","_save":"0","letter":"S"},{"name":"Japan","_from":"1949","_to":"only","type":"-","in":"Apr","on":"Sun>=1","at":"2:00","_save":"1:00","letter":"D"},{"name":"Japan","_from":"1950","_to":"1951","type":"-","in":"May","on":"Sun>=1","at":"2:00","_save":"1:00","letter":"D"}],"Jordan":[{"name":"Jordan","_from":"1973","_to":"only","type":"-","in":"Jun","on":"6","at":"0:00","_save":"1:00","letter":"S"},{"name":"Jordan","_from":"1973","_to":"1975","type":"-","in":"Oct","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Jordan","_from":"1974","_to":"1977","type":"-","in":"May","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Jordan","_from":"1976","_to":"only","type":"-","in":"Nov","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Jordan","_from":"1977","_to":"only","type":"-","in":"Oct","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Jordan","_from":"1978","_to":"only","type":"-","in":"Apr","on":"30","at":"0:00","_save":"1:00","letter":"S"},{"name":"Jordan","_from":"1978","_to":"only","type":"-","in":"Sep","on":"30","at":"0:00","_save":"0","letter":"-"},{"name":"Jordan","_from":"1985","_to":"only","type":"-","in":"Apr","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Jordan","_from":"1985","_to":"only","type":"-","in":"Oct","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Jordan","_from":"1986","_to":"1988","type":"-","in":"Apr","on":"Fri>=1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Jordan","_from":"1986","_to":"1990","type":"-","in":"Oct","on":"Fri>=1","at":"0:00","_save":"0","letter":"-"},{"name":"Jordan","_from":"1989","_to":"only","type":"-","in":"May","on":"8","at":"0:00","_save":"1:00","letter":"S"},{"name":"Jordan","_from":"1990","_to":"only","type":"-","in":"Apr","on":"27","at":"0:00","_save":"1:00","letter":"S"},{"name":"Jordan","_from":"1991","_to":"only","type":"-","in":"Apr","on":"17","at":"0:00","_save":"1:00","letter":"S"},{"name":"Jordan","_from":"1991","_to":"only","type":"-","in":"Sep","on":"27","at":"0:00","_save":"0","letter":"-"},{"name":"Jordan","_from":"1992","_to":"only","type":"-","in":"Apr","on":"10","at":"0:00","_save":"1:00","letter":"S"},{"name":"Jordan","_from":"1992","_to":"1993","type":"-","in":"Oct","on":"Fri>=1","at":"0:00","_save":"0","letter":"-"},{"name":"Jordan","_from":"1993","_to":"1998","type":"-","in":"Apr","on":"Fri>=1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Jordan","_from":"1994","_to":"only","type":"-","in":"Sep","on":"Fri>=15","at":"0:00","_save":"0","letter":"-"},{"name":"Jordan","_from":"1995","_to":"1998","type":"-","in":"Sep","on":"Fri>=15","at":"0:00s","_save":"0","letter":"-"},{"name":"Jordan","_from":"1999","_to":"only","type":"-","in":"Jul","on":"1","at":"0:00s","_save":"1:00","letter":"S"},{"name":"Jordan","_from":"1999","_to":"2002","type":"-","in":"Sep","on":"lastFri","at":"0:00s","_save":"0","letter":"-"},{"name":"Jordan","_from":"2000","_to":"2001","type":"-","in":"Mar","on":"lastThu","at":"0:00s","_save":"1:00","letter":"S"},{"name":"Jordan","_from":"2002","_to":"max","type":"-","in":"Mar","on":"lastThu","at":"24:00","_save":"1:00","letter":"S"},{"name":"Jordan","_from":"2003","_to":"only","type":"-","in":"Oct","on":"24","at":"0:00s","_save":"0","letter":"-"},{"name":"Jordan","_from":"2004","_to":"only","type":"-","in":"Oct","on":"15","at":"0:00s","_save":"0","letter":"-"},{"name":"Jordan","_from":"2005","_to":"only","type":"-","in":"Sep","on":"lastFri","at":"0:00s","_save":"0","letter":"-"},{"name":"Jordan","_from":"2006","_to":"2011","type":"-","in":"Oct","on":"lastFri","at":"0:00s","_save":"0","letter":"-"},{"name":"Jordan","_from":"2013","_to":"max","type":"-","in":"Oct","on":"lastFri","at":"0:00s","_save":"0","letter":"-"}],"Kyrgyz":[{"name":"Kyrgyz","_from":"1992","_to":"1996","type":"-","in":"Apr","on":"Sun>=7","at":"0:00s","_save":"1:00","letter":"S"},{"name":"Kyrgyz","_from":"1992","_to":"1996","type":"-","in":"Sep","on":"lastSun","at":"0:00","_save":"0","letter":"-"},{"name":"Kyrgyz","_from":"1997","_to":"2005","type":"-","in":"Mar","on":"lastSun","at":"2:30","_save":"1:00","letter":"S"},{"name":"Kyrgyz","_from":"1997","_to":"2004","type":"-","in":"Oct","on":"lastSun","at":"2:30","_save":"0","letter":"-"}],"ROK":[{"name":"ROK","_from":"1960","_to":"only","type":"-","in":"May","on":"15","at":"0:00","_save":"1:00","letter":"D"},{"name":"ROK","_from":"1960","_to":"only","type":"-","in":"Sep","on":"13","at":"0:00","_save":"0","letter":"S"},{"name":"ROK","_from":"1987","_to":"1988","type":"-","in":"May","on":"Sun>=8","at":"0:00","_save":"1:00","letter":"D"},{"name":"ROK","_from":"1987","_to":"1988","type":"-","in":"Oct","on":"Sun>=8","at":"0:00","_save":"0","letter":"S"}],"Lebanon":[{"name":"Lebanon","_from":"1920","_to":"only","type":"-","in":"Mar","on":"28","at":"0:00","_save":"1:00","letter":"S"},{"name":"Lebanon","_from":"1920","_to":"only","type":"-","in":"Oct","on":"25","at":"0:00","_save":"0","letter":"-"},{"name":"Lebanon","_from":"1921","_to":"only","type":"-","in":"Apr","on":"3","at":"0:00","_save":"1:00","letter":"S"},{"name":"Lebanon","_from":"1921","_to":"only","type":"-","in":"Oct","on":"3","at":"0:00","_save":"0","letter":"-"},{"name":"Lebanon","_from":"1922","_to":"only","type":"-","in":"Mar","on":"26","at":"0:00","_save":"1:00","letter":"S"},{"name":"Lebanon","_from":"1922","_to":"only","type":"-","in":"Oct","on":"8","at":"0:00","_save":"0","letter":"-"},{"name":"Lebanon","_from":"1923","_to":"only","type":"-","in":"Apr","on":"22","at":"0:00","_save":"1:00","letter":"S"},{"name":"Lebanon","_from":"1923","_to":"only","type":"-","in":"Sep","on":"16","at":"0:00","_save":"0","letter":"-"},{"name":"Lebanon","_from":"1957","_to":"1961","type":"-","in":"May","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Lebanon","_from":"1957","_to":"1961","type":"-","in":"Oct","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Lebanon","_from":"1972","_to":"only","type":"-","in":"Jun","on":"22","at":"0:00","_save":"1:00","letter":"S"},{"name":"Lebanon","_from":"1972","_to":"1977","type":"-","in":"Oct","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Lebanon","_from":"1973","_to":"1977","type":"-","in":"May","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Lebanon","_from":"1978","_to":"only","type":"-","in":"Apr","on":"30","at":"0:00","_save":"1:00","letter":"S"},{"name":"Lebanon","_from":"1978","_to":"only","type":"-","in":"Sep","on":"30","at":"0:00","_save":"0","letter":"-"},{"name":"Lebanon","_from":"1984","_to":"1987","type":"-","in":"May","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Lebanon","_from":"1984","_to":"1991","type":"-","in":"Oct","on":"16","at":"0:00","_save":"0","letter":"-"},{"name":"Lebanon","_from":"1988","_to":"only","type":"-","in":"Jun","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Lebanon","_from":"1989","_to":"only","type":"-","in":"May","on":"10","at":"0:00","_save":"1:00","letter":"S"},{"name":"Lebanon","_from":"1990","_to":"1992","type":"-","in":"May","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Lebanon","_from":"1992","_to":"only","type":"-","in":"Oct","on":"4","at":"0:00","_save":"0","letter":"-"},{"name":"Lebanon","_from":"1993","_to":"max","type":"-","in":"Mar","on":"lastSun","at":"0:00","_save":"1:00","letter":"S"},{"name":"Lebanon","_from":"1993","_to":"1998","type":"-","in":"Sep","on":"lastSun","at":"0:00","_save":"0","letter":"-"},{"name":"Lebanon","_from":"1999","_to":"max","type":"-","in":"Oct","on":"lastSun","at":"0:00","_save":"0","letter":"-"}],"NBorneo":[{"name":"NBorneo","_from":"1935","_to":"1941","type":"-","in":"Sep","on":"14","at":"0:00","_save":"0:20","letter":"TS"},{"name":"NBorneo","_from":"1935","_to":"1941","type":"-","in":"Dec","on":"14","at":"0:00","_save":"0","letter":"-"}],"Mongol":[{"name":"Mongol","_from":"1983","_to":"1984","type":"-","in":"Apr","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Mongol","_from":"1983","_to":"only","type":"-","in":"Oct","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Mongol","_from":"1985","_to":"1998","type":"-","in":"Mar","on":"lastSun","at":"0:00","_save":"1:00","letter":"S"},{"name":"Mongol","_from":"1984","_to":"1998","type":"-","in":"Sep","on":"lastSun","at":"0:00","_save":"0","letter":"-"},{"name":"Mongol","_from":"2001","_to":"only","type":"-","in":"Apr","on":"lastSat","at":"2:00","_save":"1:00","letter":"S"},{"name":"Mongol","_from":"2001","_to":"2006","type":"-","in":"Sep","on":"lastSat","at":"2:00","_save":"0","letter":"-"},{"name":"Mongol","_from":"2002","_to":"2006","type":"-","in":"Mar","on":"lastSat","at":"2:00","_save":"1:00","letter":"S"}],"Pakistan":[{"name":"Pakistan","_from":"2002","_to":"only","type":"-","in":"Apr","on":"Sun>=2","at":"0:01","_save":"1:00","letter":"S"},{"name":"Pakistan","_from":"2002","_to":"only","type":"-","in":"Oct","on":"Sun>=2","at":"0:01","_save":"0","letter":"-"},{"name":"Pakistan","_from":"2008","_to":"only","type":"-","in":"Jun","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Pakistan","_from":"2008","_to":"only","type":"-","in":"Nov","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Pakistan","_from":"2009","_to":"only","type":"-","in":"Apr","on":"15","at":"0:00","_save":"1:00","letter":"S"},{"name":"Pakistan","_from":"2009","_to":"only","type":"-","in":"Nov","on":"1","at":"0:00","_save":"0","letter":"-"}],"EgyptAsia":[{"name":"EgyptAsia","_from":"1957","_to":"only","type":"-","in":"May","on":"10","at":"0:00","_save":"1:00","letter":"S"},{"name":"EgyptAsia","_from":"1957","_to":"1958","type":"-","in":"Oct","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"EgyptAsia","_from":"1958","_to":"only","type":"-","in":"May","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"EgyptAsia","_from":"1959","_to":"1967","type":"-","in":"May","on":"1","at":"1:00","_save":"1:00","letter":"S"},{"name":"EgyptAsia","_from":"1959","_to":"1965","type":"-","in":"Sep","on":"30","at":"3:00","_save":"0","letter":"-"},{"name":"EgyptAsia","_from":"1966","_to":"only","type":"-","in":"Oct","on":"1","at":"3:00","_save":"0","letter":"-"}],"Palestine":[{"name":"Palestine","_from":"1999","_to":"2005","type":"-","in":"Apr","on":"Fri>=15","at":"0:00","_save":"1:00","letter":"S"},{"name":"Palestine","_from":"1999","_to":"2003","type":"-","in":"Oct","on":"Fri>=15","at":"0:00","_save":"0","letter":"-"},{"name":"Palestine","_from":"2004","_to":"only","type":"-","in":"Oct","on":"1","at":"1:00","_save":"0","letter":"-"},{"name":"Palestine","_from":"2005","_to":"only","type":"-","in":"Oct","on":"4","at":"2:00","_save":"0","letter":"-"},{"name":"Palestine","_from":"2006","_to":"2007","type":"-","in":"Apr","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Palestine","_from":"2006","_to":"only","type":"-","in":"Sep","on":"22","at":"0:00","_save":"0","letter":"-"},{"name":"Palestine","_from":"2007","_to":"only","type":"-","in":"Sep","on":"Thu>=8","at":"2:00","_save":"0","letter":"-"},{"name":"Palestine","_from":"2008","_to":"2009","type":"-","in":"Mar","on":"lastFri","at":"0:00","_save":"1:00","letter":"S"},{"name":"Palestine","_from":"2008","_to":"only","type":"-","in":"Sep","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Palestine","_from":"2009","_to":"only","type":"-","in":"Sep","on":"Fri>=1","at":"1:00","_save":"0","letter":"-"},{"name":"Palestine","_from":"2010","_to":"only","type":"-","in":"Mar","on":"26","at":"0:00","_save":"1:00","letter":"S"},{"name":"Palestine","_from":"2010","_to":"only","type":"-","in":"Aug","on":"11","at":"0:00","_save":"0","letter":"-"},{"name":"Palestine","_from":"2011","_to":"only","type":"-","in":"Apr","on":"1","at":"0:01","_save":"1:00","letter":"S"},{"name":"Palestine","_from":"2011","_to":"only","type":"-","in":"Aug","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Palestine","_from":"2011","_to":"only","type":"-","in":"Aug","on":"30","at":"0:00","_save":"1:00","letter":"S"},{"name":"Palestine","_from":"2011","_to":"only","type":"-","in":"Sep","on":"30","at":"0:00","_save":"0","letter":"-"},{"name":"Palestine","_from":"2012","_to":"max","type":"-","in":"Mar","on":"lastThu","at":"24:00","_save":"1:00","letter":"S"},{"name":"Palestine","_from":"2012","_to":"max","type":"-","in":"Sep","on":"Fri>=21","at":"1:00","_save":"0","letter":"-"}],"Phil":[{"name":"Phil","_from":"1936","_to":"only","type":"-","in":"Nov","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Phil","_from":"1937","_to":"only","type":"-","in":"Feb","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Phil","_from":"1954","_to":"only","type":"-","in":"Apr","on":"12","at":"0:00","_save":"1:00","letter":"S"},{"name":"Phil","_from":"1954","_to":"only","type":"-","in":"Jul","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Phil","_from":"1978","_to":"only","type":"-","in":"Mar","on":"22","at":"0:00","_save":"1:00","letter":"S"},{"name":"Phil","_from":"1978","_to":"only","type":"-","in":"Sep","on":"21","at":"0:00","_save":"0","letter":"-"}],"Syria":[{"name":"Syria","_from":"1920","_to":"1923","type":"-","in":"Apr","on":"Sun>=15","at":"2:00","_save":"1:00","letter":"S"},{"name":"Syria","_from":"1920","_to":"1923","type":"-","in":"Oct","on":"Sun>=1","at":"2:00","_save":"0","letter":"-"},{"name":"Syria","_from":"1962","_to":"only","type":"-","in":"Apr","on":"29","at":"2:00","_save":"1:00","letter":"S"},{"name":"Syria","_from":"1962","_to":"only","type":"-","in":"Oct","on":"1","at":"2:00","_save":"0","letter":"-"},{"name":"Syria","_from":"1963","_to":"1965","type":"-","in":"May","on":"1","at":"2:00","_save":"1:00","letter":"S"},{"name":"Syria","_from":"1963","_to":"only","type":"-","in":"Sep","on":"30","at":"2:00","_save":"0","letter":"-"},{"name":"Syria","_from":"1964","_to":"only","type":"-","in":"Oct","on":"1","at":"2:00","_save":"0","letter":"-"},{"name":"Syria","_from":"1965","_to":"only","type":"-","in":"Sep","on":"30","at":"2:00","_save":"0","letter":"-"},{"name":"Syria","_from":"1966","_to":"only","type":"-","in":"Apr","on":"24","at":"2:00","_save":"1:00","letter":"S"},{"name":"Syria","_from":"1966","_to":"1976","type":"-","in":"Oct","on":"1","at":"2:00","_save":"0","letter":"-"},{"name":"Syria","_from":"1967","_to":"1978","type":"-","in":"May","on":"1","at":"2:00","_save":"1:00","letter":"S"},{"name":"Syria","_from":"1977","_to":"1978","type":"-","in":"Sep","on":"1","at":"2:00","_save":"0","letter":"-"},{"name":"Syria","_from":"1983","_to":"1984","type":"-","in":"Apr","on":"9","at":"2:00","_save":"1:00","letter":"S"},{"name":"Syria","_from":"1983","_to":"1984","type":"-","in":"Oct","on":"1","at":"2:00","_save":"0","letter":"-"},{"name":"Syria","_from":"1986","_to":"only","type":"-","in":"Feb","on":"16","at":"2:00","_save":"1:00","letter":"S"},{"name":"Syria","_from":"1986","_to":"only","type":"-","in":"Oct","on":"9","at":"2:00","_save":"0","letter":"-"},{"name":"Syria","_from":"1987","_to":"only","type":"-","in":"Mar","on":"1","at":"2:00","_save":"1:00","letter":"S"},{"name":"Syria","_from":"1987","_to":"1988","type":"-","in":"Oct","on":"31","at":"2:00","_save":"0","letter":"-"},{"name":"Syria","_from":"1988","_to":"only","type":"-","in":"Mar","on":"15","at":"2:00","_save":"1:00","letter":"S"},{"name":"Syria","_from":"1989","_to":"only","type":"-","in":"Mar","on":"31","at":"2:00","_save":"1:00","letter":"S"},{"name":"Syria","_from":"1989","_to":"only","type":"-","in":"Oct","on":"1","at":"2:00","_save":"0","letter":"-"},{"name":"Syria","_from":"1990","_to":"only","type":"-","in":"Apr","on":"1","at":"2:00","_save":"1:00","letter":"S"},{"name":"Syria","_from":"1990","_to":"only","type":"-","in":"Sep","on":"30","at":"2:00","_save":"0","letter":"-"},{"name":"Syria","_from":"1991","_to":"only","type":"-","in":"Apr","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Syria","_from":"1991","_to":"1992","type":"-","in":"Oct","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Syria","_from":"1992","_to":"only","type":"-","in":"Apr","on":"8","at":"0:00","_save":"1:00","letter":"S"},{"name":"Syria","_from":"1993","_to":"only","type":"-","in":"Mar","on":"26","at":"0:00","_save":"1:00","letter":"S"},{"name":"Syria","_from":"1993","_to":"only","type":"-","in":"Sep","on":"25","at":"0:00","_save":"0","letter":"-"},{"name":"Syria","_from":"1994","_to":"1996","type":"-","in":"Apr","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Syria","_from":"1994","_to":"2005","type":"-","in":"Oct","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Syria","_from":"1997","_to":"1998","type":"-","in":"Mar","on":"lastMon","at":"0:00","_save":"1:00","letter":"S"},{"name":"Syria","_from":"1999","_to":"2006","type":"-","in":"Apr","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Syria","_from":"2006","_to":"only","type":"-","in":"Sep","on":"22","at":"0:00","_save":"0","letter":"-"},{"name":"Syria","_from":"2007","_to":"only","type":"-","in":"Mar","on":"lastFri","at":"0:00","_save":"1:00","letter":"S"},{"name":"Syria","_from":"2007","_to":"only","type":"-","in":"Nov","on":"Fri>=1","at":"0:00","_save":"0","letter":"-"},{"name":"Syria","_from":"2008","_to":"only","type":"-","in":"Apr","on":"Fri>=1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Syria","_from":"2008","_to":"only","type":"-","in":"Nov","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Syria","_from":"2009","_to":"only","type":"-","in":"Mar","on":"lastFri","at":"0:00","_save":"1:00","letter":"S"},{"name":"Syria","_from":"2010","_to":"2011","type":"-","in":"Apr","on":"Fri>=1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Syria","_from":"2012","_to":"max","type":"-","in":"Mar","on":"lastFri","at":"0:00","_save":"1:00","letter":"S"},{"name":"Syria","_from":"2009","_to":"max","type":"-","in":"Oct","on":"lastFri","at":"0:00","_save":"0","letter":"-"}],"Aus":[{"name":"Aus","_from":"1917","_to":"only","type":"-","in":"Jan","on":"1","at":"0:01","_save":"1:00","letter":"-"},{"name":"Aus","_from":"1917","_to":"only","type":"-","in":"Mar","on":"25","at":"2:00","_save":"0","letter":"-"},{"name":"Aus","_from":"1942","_to":"only","type":"-","in":"Jan","on":"1","at":"2:00","_save":"1:00","letter":"-"},{"name":"Aus","_from":"1942","_to":"only","type":"-","in":"Mar","on":"29","at":"2:00","_save":"0","letter":"-"},{"name":"Aus","_from":"1942","_to":"only","type":"-","in":"Sep","on":"27","at":"2:00","_save":"1:00","letter":"-"},{"name":"Aus","_from":"1943","_to":"1944","type":"-","in":"Mar","on":"lastSun","at":"2:00","_save":"0","letter":"-"},{"name":"Aus","_from":"1943","_to":"only","type":"-","in":"Oct","on":"3","at":"2:00","_save":"1:00","letter":"-"}],"AW":[{"name":"AW","_from":"1974","_to":"only","type":"-","in":"Oct","on":"lastSun","at":"2:00s","_save":"1:00","letter":"-"},{"name":"AW","_from":"1975","_to":"only","type":"-","in":"Mar","on":"Sun>=1","at":"2:00s","_save":"0","letter":"-"},{"name":"AW","_from":"1983","_to":"only","type":"-","in":"Oct","on":"lastSun","at":"2:00s","_save":"1:00","letter":"-"},{"name":"AW","_from":"1984","_to":"only","type":"-","in":"Mar","on":"Sun>=1","at":"2:00s","_save":"0","letter":"-"},{"name":"AW","_from":"1991","_to":"only","type":"-","in":"Nov","on":"17","at":"2:00s","_save":"1:00","letter":"-"},{"name":"AW","_from":"1992","_to":"only","type":"-","in":"Mar","on":"Sun>=1","at":"2:00s","_save":"0","letter":"-"},{"name":"AW","_from":"2006","_to":"only","type":"-","in":"Dec","on":"3","at":"2:00s","_save":"1:00","letter":"-"},{"name":"AW","_from":"2007","_to":"2009","type":"-","in":"Mar","on":"lastSun","at":"2:00s","_save":"0","letter":"-"},{"name":"AW","_from":"2007","_to":"2008","type":"-","in":"Oct","on":"lastSun","at":"2:00s","_save":"1:00","letter":"-"}],"AQ":[{"name":"AQ","_from":"1971","_to":"only","type":"-","in":"Oct","on":"lastSun","at":"2:00s","_save":"1:00","letter":"-"},{"name":"AQ","_from":"1972","_to":"only","type":"-","in":"Feb","on":"lastSun","at":"2:00s","_save":"0","letter":"-"},{"name":"AQ","_from":"1989","_to":"1991","type":"-","in":"Oct","on":"lastSun","at":"2:00s","_save":"1:00","letter":"-"},{"name":"AQ","_from":"1990","_to":"1992","type":"-","in":"Mar","on":"Sun>=1","at":"2:00s","_save":"0","letter":"-"}],"Holiday":[{"name":"Holiday","_from":"1992","_to":"1993","type":"-","in":"Oct","on":"lastSun","at":"2:00s","_save":"1:00","letter":"-"},{"name":"Holiday","_from":"1993","_to":"1994","type":"-","in":"Mar","on":"Sun>=1","at":"2:00s","_save":"0","letter":"-"}],"AS":[{"name":"AS","_from":"1971","_to":"1985","type":"-","in":"Oct","on":"lastSun","at":"2:00s","_save":"1:00","letter":"-"},{"name":"AS","_from":"1986","_to":"only","type":"-","in":"Oct","on":"19","at":"2:00s","_save":"1:00","letter":"-"},{"name":"AS","_from":"1987","_to":"2007","type":"-","in":"Oct","on":"lastSun","at":"2:00s","_save":"1:00","letter":"-"},{"name":"AS","_from":"1972","_to":"only","type":"-","in":"Feb","on":"27","at":"2:00s","_save":"0","letter":"-"},{"name":"AS","_from":"1973","_to":"1985","type":"-","in":"Mar","on":"Sun>=1","at":"2:00s","_save":"0","letter":"-"},{"name":"AS","_from":"1986","_to":"1990","type":"-","in":"Mar","on":"Sun>=15","at":"2:00s","_save":"0","letter":"-"},{"name":"AS","_from":"1991","_to":"only","type":"-","in":"Mar","on":"3","at":"2:00s","_save":"0","letter":"-"},{"name":"AS","_from":"1992","_to":"only","type":"-","in":"Mar","on":"22","at":"2:00s","_save":"0","letter":"-"},{"name":"AS","_from":"1993","_to":"only","type":"-","in":"Mar","on":"7","at":"2:00s","_save":"0","letter":"-"},{"name":"AS","_from":"1994","_to":"only","type":"-","in":"Mar","on":"20","at":"2:00s","_save":"0","letter":"-"},{"name":"AS","_from":"1995","_to":"2005","type":"-","in":"Mar","on":"lastSun","at":"2:00s","_save":"0","letter":"-"},{"name":"AS","_from":"2006","_to":"only","type":"-","in":"Apr","on":"2","at":"2:00s","_save":"0","letter":"-"},{"name":"AS","_from":"2007","_to":"only","type":"-","in":"Mar","on":"lastSun","at":"2:00s","_save":"0","letter":"-"},{"name":"AS","_from":"2008","_to":"max","type":"-","in":"Apr","on":"Sun>=1","at":"2:00s","_save":"0","letter":"-"},{"name":"AS","_from":"2008","_to":"max","type":"-","in":"Oct","on":"Sun>=1","at":"2:00s","_save":"1:00","letter":"-"}],"AT":[{"name":"AT","_from":"1967","_to":"only","type":"-","in":"Oct","on":"Sun>=1","at":"2:00s","_save":"1:00","letter":"-"},{"name":"AT","_from":"1968","_to":"only","type":"-","in":"Mar","on":"lastSun","at":"2:00s","_save":"0","letter":"-"},{"name":"AT","_from":"1968","_to":"1985","type":"-","in":"Oct","on":"lastSun","at":"2:00s","_save":"1:00","letter":"-"},{"name":"AT","_from":"1969","_to":"1971","type":"-","in":"Mar","on":"Sun>=8","at":"2:00s","_save":"0","letter":"-"},{"name":"AT","_from":"1972","_to":"only","type":"-","in":"Feb","on":"lastSun","at":"2:00s","_save":"0","letter":"-"},{"name":"AT","_from":"1973","_to":"1981","type":"-","in":"Mar","on":"Sun>=1","at":"2:00s","_save":"0","letter":"-"},{"name":"AT","_from":"1982","_to":"1983","type":"-","in":"Mar","on":"lastSun","at":"2:00s","_save":"0","letter":"-"},{"name":"AT","_from":"1984","_to":"1986","type":"-","in":"Mar","on":"Sun>=1","at":"2:00s","_save":"0","letter":"-"},{"name":"AT","_from":"1986","_to":"only","type":"-","in":"Oct","on":"Sun>=15","at":"2:00s","_save":"1:00","letter":"-"},{"name":"AT","_from":"1987","_to":"1990","type":"-","in":"Mar","on":"Sun>=15","at":"2:00s","_save":"0","letter":"-"},{"name":"AT","_from":"1987","_to":"only","type":"-","in":"Oct","on":"Sun>=22","at":"2:00s","_save":"1:00","letter":"-"},{"name":"AT","_from":"1988","_to":"1990","type":"-","in":"Oct","on":"lastSun","at":"2:00s","_save":"1:00","letter":"-"},{"name":"AT","_from":"1991","_to":"1999","type":"-","in":"Oct","on":"Sun>=1","at":"2:00s","_save":"1:00","letter":"-"},{"name":"AT","_from":"1991","_to":"2005","type":"-","in":"Mar","on":"lastSun","at":"2:00s","_save":"0","letter":"-"},{"name":"AT","_from":"2000","_to":"only","type":"-","in":"Aug","on":"lastSun","at":"2:00s","_save":"1:00","letter":"-"},{"name":"AT","_from":"2001","_to":"max","type":"-","in":"Oct","on":"Sun>=1","at":"2:00s","_save":"1:00","letter":"-"},{"name":"AT","_from":"2006","_to":"only","type":"-","in":"Apr","on":"Sun>=1","at":"2:00s","_save":"0","letter":"-"},{"name":"AT","_from":"2007","_to":"only","type":"-","in":"Mar","on":"lastSun","at":"2:00s","_save":"0","letter":"-"},{"name":"AT","_from":"2008","_to":"max","type":"-","in":"Apr","on":"Sun>=1","at":"2:00s","_save":"0","letter":"-"}],"AV":[{"name":"AV","_from":"1971","_to":"1985","type":"-","in":"Oct","on":"lastSun","at":"2:00s","_save":"1:00","letter":"-"},{"name":"AV","_from":"1972","_to":"only","type":"-","in":"Feb","on":"lastSun","at":"2:00s","_save":"0","letter":"-"},{"name":"AV","_from":"1973","_to":"1985","type":"-","in":"Mar","on":"Sun>=1","at":"2:00s","_save":"0","letter":"-"},{"name":"AV","_from":"1986","_to":"1990","type":"-","in":"Mar","on":"Sun>=15","at":"2:00s","_save":"0","letter":"-"},{"name":"AV","_from":"1986","_to":"1987","type":"-","in":"Oct","on":"Sun>=15","at":"2:00s","_save":"1:00","letter":"-"},{"name":"AV","_from":"1988","_to":"1999","type":"-","in":"Oct","on":"lastSun","at":"2:00s","_save":"1:00","letter":"-"},{"name":"AV","_from":"1991","_to":"1994","type":"-","in":"Mar","on":"Sun>=1","at":"2:00s","_save":"0","letter":"-"},{"name":"AV","_from":"1995","_to":"2005","type":"-","in":"Mar","on":"lastSun","at":"2:00s","_save":"0","letter":"-"},{"name":"AV","_from":"2000","_to":"only","type":"-","in":"Aug","on":"lastSun","at":"2:00s","_save":"1:00","letter":"-"},{"name":"AV","_from":"2001","_to":"2007","type":"-","in":"Oct","on":"lastSun","at":"2:00s","_save":"1:00","letter":"-"},{"name":"AV","_from":"2006","_to":"only","type":"-","in":"Apr","on":"Sun>=1","at":"2:00s","_save":"0","letter":"-"},{"name":"AV","_from":"2007","_to":"only","type":"-","in":"Mar","on":"lastSun","at":"2:00s","_save":"0","letter":"-"},{"name":"AV","_from":"2008","_to":"max","type":"-","in":"Apr","on":"Sun>=1","at":"2:00s","_save":"0","letter":"-"},{"name":"AV","_from":"2008","_to":"max","type":"-","in":"Oct","on":"Sun>=1","at":"2:00s","_save":"1:00","letter":"-"}],"AN":[{"name":"AN","_from":"1971","_to":"1985","type":"-","in":"Oct","on":"lastSun","at":"2:00s","_save":"1:00","letter":"-"},{"name":"AN","_from":"1972","_to":"only","type":"-","in":"Feb","on":"27","at":"2:00s","_save":"0","letter":"-"},{"name":"AN","_from":"1973","_to":"1981","type":"-","in":"Mar","on":"Sun>=1","at":"2:00s","_save":"0","letter":"-"},{"name":"AN","_from":"1982","_to":"only","type":"-","in":"Apr","on":"Sun>=1","at":"2:00s","_save":"0","letter":"-"},{"name":"AN","_from":"1983","_to":"1985","type":"-","in":"Mar","on":"Sun>=1","at":"2:00s","_save":"0","letter":"-"},{"name":"AN","_from":"1986","_to":"1989","type":"-","in":"Mar","on":"Sun>=15","at":"2:00s","_save":"0","letter":"-"},{"name":"AN","_from":"1986","_to":"only","type":"-","in":"Oct","on":"19","at":"2:00s","_save":"1:00","letter":"-"},{"name":"AN","_from":"1987","_to":"1999","type":"-","in":"Oct","on":"lastSun","at":"2:00s","_save":"1:00","letter":"-"},{"name":"AN","_from":"1990","_to":"1995","type":"-","in":"Mar","on":"Sun>=1","at":"2:00s","_save":"0","letter":"-"},{"name":"AN","_from":"1996","_to":"2005","type":"-","in":"Mar","on":"lastSun","at":"2:00s","_save":"0","letter":"-"},{"name":"AN","_from":"2000","_to":"only","type":"-","in":"Aug","on":"lastSun","at":"2:00s","_save":"1:00","letter":"-"},{"name":"AN","_from":"2001","_to":"2007","type":"-","in":"Oct","on":"lastSun","at":"2:00s","_save":"1:00","letter":"-"},{"name":"AN","_from":"2006","_to":"only","type":"-","in":"Apr","on":"Sun>=1","at":"2:00s","_save":"0","letter":"-"},{"name":"AN","_from":"2007","_to":"only","type":"-","in":"Mar","on":"lastSun","at":"2:00s","_save":"0","letter":"-"},{"name":"AN","_from":"2008","_to":"max","type":"-","in":"Apr","on":"Sun>=1","at":"2:00s","_save":"0","letter":"-"},{"name":"AN","_from":"2008","_to":"max","type":"-","in":"Oct","on":"Sun>=1","at":"2:00s","_save":"1:00","letter":"-"}],"LH":[{"name":"LH","_from":"1981","_to":"1984","type":"-","in":"Oct","on":"lastSun","at":"2:00","_save":"1:00","letter":"-"},{"name":"LH","_from":"1982","_to":"1985","type":"-","in":"Mar","on":"Sun>=1","at":"2:00","_save":"0","letter":"-"},{"name":"LH","_from":"1985","_to":"only","type":"-","in":"Oct","on":"lastSun","at":"2:00","_save":"0:30","letter":"-"},{"name":"LH","_from":"1986","_to":"1989","type":"-","in":"Mar","on":"Sun>=15","at":"2:00","_save":"0","letter":"-"},{"name":"LH","_from":"1986","_to":"only","type":"-","in":"Oct","on":"19","at":"2:00","_save":"0:30","letter":"-"},{"name":"LH","_from":"1987","_to":"1999","type":"-","in":"Oct","on":"lastSun","at":"2:00","_save":"0:30","letter":"-"},{"name":"LH","_from":"1990","_to":"1995","type":"-","in":"Mar","on":"Sun>=1","at":"2:00","_save":"0","letter":"-"},{"name":"LH","_from":"1996","_to":"2005","type":"-","in":"Mar","on":"lastSun","at":"2:00","_save":"0","letter":"-"},{"name":"LH","_from":"2000","_to":"only","type":"-","in":"Aug","on":"lastSun","at":"2:00","_save":"0:30","letter":"-"},{"name":"LH","_from":"2001","_to":"2007","type":"-","in":"Oct","on":"lastSun","at":"2:00","_save":"0:30","letter":"-"},{"name":"LH","_from":"2006","_to":"only","type":"-","in":"Apr","on":"Sun>=1","at":"2:00","_save":"0","letter":"-"},{"name":"LH","_from":"2007","_to":"only","type":"-","in":"Mar","on":"lastSun","at":"2:00","_save":"0","letter":"-"},{"name":"LH","_from":"2008","_to":"max","type":"-","in":"Apr","on":"Sun>=1","at":"2:00","_save":"0","letter":"-"},{"name":"LH","_from":"2008","_to":"max","type":"-","in":"Oct","on":"Sun>=1","at":"2:00","_save":"0:30","letter":"-"}],"Cook":[{"name":"Cook","_from":"1978","_to":"only","type":"-","in":"Nov","on":"12","at":"0:00","_save":"0:30","letter":"HS"},{"name":"Cook","_from":"1979","_to":"1991","type":"-","in":"Mar","on":"Sun>=1","at":"0:00","_save":"0","letter":"-"},{"name":"Cook","_from":"1979","_to":"1990","type":"-","in":"Oct","on":"lastSun","at":"0:00","_save":"0:30","letter":"HS"}],"Fiji":[{"name":"Fiji","_from":"1998","_to":"1999","type":"-","in":"Nov","on":"Sun>=1","at":"2:00","_save":"1:00","letter":"S"},{"name":"Fiji","_from":"1999","_to":"2000","type":"-","in":"Feb","on":"lastSun","at":"3:00","_save":"0","letter":"-"},{"name":"Fiji","_from":"2009","_to":"only","type":"-","in":"Nov","on":"29","at":"2:00","_save":"1:00","letter":"S"},{"name":"Fiji","_from":"2010","_to":"only","type":"-","in":"Mar","on":"lastSun","at":"3:00","_save":"0","letter":"-"},{"name":"Fiji","_from":"2010","_to":"max","type":"-","in":"Oct","on":"Sun>=18","at":"2:00","_save":"1:00","letter":"S"},{"name":"Fiji","_from":"2011","_to":"only","type":"-","in":"Mar","on":"Sun>=1","at":"3:00","_save":"0","letter":"-"},{"name":"Fiji","_from":"2012","_to":"max","type":"-","in":"Jan","on":"Sun>=18","at":"3:00","_save":"0","letter":"-"}],"NC":[{"name":"NC","_from":"1977","_to":"1978","type":"-","in":"Dec","on":"Sun>=1","at":"0:00","_save":"1:00","letter":"S"},{"name":"NC","_from":"1978","_to":"1979","type":"-","in":"Feb","on":"27","at":"0:00","_save":"0","letter":"-"},{"name":"NC","_from":"1996","_to":"only","type":"-","in":"Dec","on":"1","at":"2:00s","_save":"1:00","letter":"S"},{"name":"NC","_from":"1997","_to":"only","type":"-","in":"Mar","on":"2","at":"2:00s","_save":"0","letter":"-"}],"NZ":[{"name":"NZ","_from":"1927","_to":"only","type":"-","in":"Nov","on":"6","at":"2:00","_save":"1:00","letter":"S"},{"name":"NZ","_from":"1928","_to":"only","type":"-","in":"Mar","on":"4","at":"2:00","_save":"0","letter":"M"},{"name":"NZ","_from":"1928","_to":"1933","type":"-","in":"Oct","on":"Sun>=8","at":"2:00","_save":"0:30","letter":"S"},{"name":"NZ","_from":"1929","_to":"1933","type":"-","in":"Mar","on":"Sun>=15","at":"2:00","_save":"0","letter":"M"},{"name":"NZ","_from":"1934","_to":"1940","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"0","letter":"M"},{"name":"NZ","_from":"1934","_to":"1940","type":"-","in":"Sep","on":"lastSun","at":"2:00","_save":"0:30","letter":"S"},{"name":"NZ","_from":"1946","_to":"only","type":"-","in":"Jan","on":"1","at":"0:00","_save":"0","letter":"S"},{"name":"NZ","_from":"1974","_to":"only","type":"-","in":"Nov","on":"Sun>=1","at":"2:00s","_save":"1:00","letter":"D"},{"name":"NZ","_from":"1975","_to":"only","type":"-","in":"Feb","on":"lastSun","at":"2:00s","_save":"0","letter":"S"},{"name":"NZ","_from":"1975","_to":"1988","type":"-","in":"Oct","on":"lastSun","at":"2:00s","_save":"1:00","letter":"D"},{"name":"NZ","_from":"1976","_to":"1989","type":"-","in":"Mar","on":"Sun>=1","at":"2:00s","_save":"0","letter":"S"},{"name":"NZ","_from":"1989","_to":"only","type":"-","in":"Oct","on":"Sun>=8","at":"2:00s","_save":"1:00","letter":"D"},{"name":"NZ","_from":"1990","_to":"2006","type":"-","in":"Oct","on":"Sun>=1","at":"2:00s","_save":"1:00","letter":"D"},{"name":"NZ","_from":"1990","_to":"2007","type":"-","in":"Mar","on":"Sun>=15","at":"2:00s","_save":"0","letter":"S"},{"name":"NZ","_from":"2007","_to":"max","type":"-","in":"Sep","on":"lastSun","at":"2:00s","_save":"1:00","letter":"D"},{"name":"NZ","_from":"2008","_to":"max","type":"-","in":"Apr","on":"Sun>=1","at":"2:00s","_save":"0","letter":"S"}],"Chatham":[{"name":"Chatham","_from":"1974","_to":"only","type":"-","in":"Nov","on":"Sun>=1","at":"2:45s","_save":"1:00","letter":"D"},{"name":"Chatham","_from":"1975","_to":"only","type":"-","in":"Feb","on":"lastSun","at":"2:45s","_save":"0","letter":"S"},{"name":"Chatham","_from":"1975","_to":"1988","type":"-","in":"Oct","on":"lastSun","at":"2:45s","_save":"1:00","letter":"D"},{"name":"Chatham","_from":"1976","_to":"1989","type":"-","in":"Mar","on":"Sun>=1","at":"2:45s","_save":"0","letter":"S"},{"name":"Chatham","_from":"1989","_to":"only","type":"-","in":"Oct","on":"Sun>=8","at":"2:45s","_save":"1:00","letter":"D"},{"name":"Chatham","_from":"1990","_to":"2006","type":"-","in":"Oct","on":"Sun>=1","at":"2:45s","_save":"1:00","letter":"D"},{"name":"Chatham","_from":"1990","_to":"2007","type":"-","in":"Mar","on":"Sun>=15","at":"2:45s","_save":"0","letter":"S"},{"name":"Chatham","_from":"2007","_to":"max","type":"-","in":"Sep","on":"lastSun","at":"2:45s","_save":"1:00","letter":"D"},{"name":"Chatham","_from":"2008","_to":"max","type":"-","in":"Apr","on":"Sun>=1","at":"2:45s","_save":"0","letter":"S"}],"WS":[{"name":"WS","_from":"2012","_to":"max","type":"-","in":"Sep","on":"lastSun","at":"3:00","_save":"1","letter":"D"},{"name":"WS","_from":"2012","_to":"max","type":"-","in":"Apr","on":"Sun>=1","at":"4:00","_save":"0","letter":"-"}],"Tonga":[{"name":"Tonga","_from":"1999","_to":"only","type":"-","in":"Oct","on":"7","at":"2:00s","_save":"1:00","letter":"S"},{"name":"Tonga","_from":"2000","_to":"only","type":"-","in":"Mar","on":"19","at":"2:00s","_save":"0","letter":"-"},{"name":"Tonga","_from":"2000","_to":"2001","type":"-","in":"Nov","on":"Sun>=1","at":"2:00","_save":"1:00","letter":"S"},{"name":"Tonga","_from":"2001","_to":"2002","type":"-","in":"Jan","on":"lastSun","at":"2:00","_save":"0","letter":"-"}],"Vanuatu":[{"name":"Vanuatu","_from":"1983","_to":"only","type":"-","in":"Sep","on":"25","at":"0:00","_save":"1:00","letter":"S"},{"name":"Vanuatu","_from":"1984","_to":"1991","type":"-","in":"Mar","on":"Sun>=23","at":"0:00","_save":"0","letter":"-"},{"name":"Vanuatu","_from":"1984","_to":"only","type":"-","in":"Oct","on":"23","at":"0:00","_save":"1:00","letter":"S"},{"name":"Vanuatu","_from":"1985","_to":"1991","type":"-","in":"Sep","on":"Sun>=23","at":"0:00","_save":"1:00","letter":"S"},{"name":"Vanuatu","_from":"1992","_to":"1993","type":"-","in":"Jan","on":"Sun>=23","at":"0:00","_save":"0","letter":"-"},{"name":"Vanuatu","_from":"1992","_to":"only","type":"-","in":"Oct","on":"Sun>=23","at":"0:00","_save":"1:00","letter":"S"}],"GB-Eire":[{"name":"GB-Eire","_from":"1916","_to":"only","type":"-","in":"May","on":"21","at":"2:00s","_save":"1:00","letter":"BST"},{"name":"GB-Eire","_from":"1916","_to":"only","type":"-","in":"Oct","on":"1","at":"2:00s","_save":"0","letter":"GMT"},{"name":"GB-Eire","_from":"1917","_to":"only","type":"-","in":"Apr","on":"8","at":"2:00s","_save":"1:00","letter":"BST"},{"name":"GB-Eire","_from":"1917","_to":"only","type":"-","in":"Sep","on":"17","at":"2:00s","_save":"0","letter":"GMT"},{"name":"GB-Eire","_from":"1918","_to":"only","type":"-","in":"Mar","on":"24","at":"2:00s","_save":"1:00","letter":"BST"},{"name":"GB-Eire","_from":"1918","_to":"only","type":"-","in":"Sep","on":"30","at":"2:00s","_save":"0","letter":"GMT"},{"name":"GB-Eire","_from":"1919","_to":"only","type":"-","in":"Mar","on":"30","at":"2:00s","_save":"1:00","letter":"BST"},{"name":"GB-Eire","_from":"1919","_to":"only","type":"-","in":"Sep","on":"29","at":"2:00s","_save":"0","letter":"GMT"},{"name":"GB-Eire","_from":"1920","_to":"only","type":"-","in":"Mar","on":"28","at":"2:00s","_save":"1:00","letter":"BST"},{"name":"GB-Eire","_from":"1920","_to":"only","type":"-","in":"Oct","on":"25","at":"2:00s","_save":"0","letter":"GMT"},{"name":"GB-Eire","_from":"1921","_to":"only","type":"-","in":"Apr","on":"3","at":"2:00s","_save":"1:00","letter":"BST"},{"name":"GB-Eire","_from":"1921","_to":"only","type":"-","in":"Oct","on":"3","at":"2:00s","_save":"0","letter":"GMT"},{"name":"GB-Eire","_from":"1922","_to":"only","type":"-","in":"Mar","on":"26","at":"2:00s","_save":"1:00","letter":"BST"},{"name":"GB-Eire","_from":"1922","_to":"only","type":"-","in":"Oct","on":"8","at":"2:00s","_save":"0","letter":"GMT"},{"name":"GB-Eire","_from":"1923","_to":"only","type":"-","in":"Apr","on":"Sun>=16","at":"2:00s","_save":"1:00","letter":"BST"},{"name":"GB-Eire","_from":"1923","_to":"1924","type":"-","in":"Sep","on":"Sun>=16","at":"2:00s","_save":"0","letter":"GMT"},{"name":"GB-Eire","_from":"1924","_to":"only","type":"-","in":"Apr","on":"Sun>=9","at":"2:00s","_save":"1:00","letter":"BST"},{"name":"GB-Eire","_from":"1925","_to":"1926","type":"-","in":"Apr","on":"Sun>=16","at":"2:00s","_save":"1:00","letter":"BST"},{"name":"GB-Eire","_from":"1925","_to":"1938","type":"-","in":"Oct","on":"Sun>=2","at":"2:00s","_save":"0","letter":"GMT"},{"name":"GB-Eire","_from":"1927","_to":"only","type":"-","in":"Apr","on":"Sun>=9","at":"2:00s","_save":"1:00","letter":"BST"},{"name":"GB-Eire","_from":"1928","_to":"1929","type":"-","in":"Apr","on":"Sun>=16","at":"2:00s","_save":"1:00","letter":"BST"},{"name":"GB-Eire","_from":"1930","_to":"only","type":"-","in":"Apr","on":"Sun>=9","at":"2:00s","_save":"1:00","letter":"BST"},{"name":"GB-Eire","_from":"1931","_to":"1932","type":"-","in":"Apr","on":"Sun>=16","at":"2:00s","_save":"1:00","letter":"BST"},{"name":"GB-Eire","_from":"1933","_to":"only","type":"-","in":"Apr","on":"Sun>=9","at":"2:00s","_save":"1:00","letter":"BST"},{"name":"GB-Eire","_from":"1934","_to":"only","type":"-","in":"Apr","on":"Sun>=16","at":"2:00s","_save":"1:00","letter":"BST"},{"name":"GB-Eire","_from":"1935","_to":"only","type":"-","in":"Apr","on":"Sun>=9","at":"2:00s","_save":"1:00","letter":"BST"},{"name":"GB-Eire","_from":"1936","_to":"1937","type":"-","in":"Apr","on":"Sun>=16","at":"2:00s","_save":"1:00","letter":"BST"},{"name":"GB-Eire","_from":"1938","_to":"only","type":"-","in":"Apr","on":"Sun>=9","at":"2:00s","_save":"1:00","letter":"BST"},{"name":"GB-Eire","_from":"1939","_to":"only","type":"-","in":"Apr","on":"Sun>=16","at":"2:00s","_save":"1:00","letter":"BST"},{"name":"GB-Eire","_from":"1939","_to":"only","type":"-","in":"Nov","on":"Sun>=16","at":"2:00s","_save":"0","letter":"GMT"},{"name":"GB-Eire","_from":"1940","_to":"only","type":"-","in":"Feb","on":"Sun>=23","at":"2:00s","_save":"1:00","letter":"BST"},{"name":"GB-Eire","_from":"1941","_to":"only","type":"-","in":"May","on":"Sun>=2","at":"1:00s","_save":"2:00","letter":"BDST"},{"name":"GB-Eire","_from":"1941","_to":"1943","type":"-","in":"Aug","on":"Sun>=9","at":"1:00s","_save":"1:00","letter":"BST"},{"name":"GB-Eire","_from":"1942","_to":"1944","type":"-","in":"Apr","on":"Sun>=2","at":"1:00s","_save":"2:00","letter":"BDST"},{"name":"GB-Eire","_from":"1944","_to":"only","type":"-","in":"Sep","on":"Sun>=16","at":"1:00s","_save":"1:00","letter":"BST"},{"name":"GB-Eire","_from":"1945","_to":"only","type":"-","in":"Apr","on":"Mon>=2","at":"1:00s","_save":"2:00","letter":"BDST"},{"name":"GB-Eire","_from":"1945","_to":"only","type":"-","in":"Jul","on":"Sun>=9","at":"1:00s","_save":"1:00","letter":"BST"},{"name":"GB-Eire","_from":"1945","_to":"1946","type":"-","in":"Oct","on":"Sun>=2","at":"2:00s","_save":"0","letter":"GMT"},{"name":"GB-Eire","_from":"1946","_to":"only","type":"-","in":"Apr","on":"Sun>=9","at":"2:00s","_save":"1:00","letter":"BST"},{"name":"GB-Eire","_from":"1947","_to":"only","type":"-","in":"Mar","on":"16","at":"2:00s","_save":"1:00","letter":"BST"},{"name":"GB-Eire","_from":"1947","_to":"only","type":"-","in":"Apr","on":"13","at":"1:00s","_save":"2:00","letter":"BDST"},{"name":"GB-Eire","_from":"1947","_to":"only","type":"-","in":"Aug","on":"10","at":"1:00s","_save":"1:00","letter":"BST"},{"name":"GB-Eire","_from":"1947","_to":"only","type":"-","in":"Nov","on":"2","at":"2:00s","_save":"0","letter":"GMT"},{"name":"GB-Eire","_from":"1948","_to":"only","type":"-","in":"Mar","on":"14","at":"2:00s","_save":"1:00","letter":"BST"},{"name":"GB-Eire","_from":"1948","_to":"only","type":"-","in":"Oct","on":"31","at":"2:00s","_save":"0","letter":"GMT"},{"name":"GB-Eire","_from":"1949","_to":"only","type":"-","in":"Apr","on":"3","at":"2:00s","_save":"1:00","letter":"BST"},{"name":"GB-Eire","_from":"1949","_to":"only","type":"-","in":"Oct","on":"30","at":"2:00s","_save":"0","letter":"GMT"},{"name":"GB-Eire","_from":"1950","_to":"1952","type":"-","in":"Apr","on":"Sun>=14","at":"2:00s","_save":"1:00","letter":"BST"},{"name":"GB-Eire","_from":"1950","_to":"1952","type":"-","in":"Oct","on":"Sun>=21","at":"2:00s","_save":"0","letter":"GMT"},{"name":"GB-Eire","_from":"1953","_to":"only","type":"-","in":"Apr","on":"Sun>=16","at":"2:00s","_save":"1:00","letter":"BST"},{"name":"GB-Eire","_from":"1953","_to":"1960","type":"-","in":"Oct","on":"Sun>=2","at":"2:00s","_save":"0","letter":"GMT"},{"name":"GB-Eire","_from":"1954","_to":"only","type":"-","in":"Apr","on":"Sun>=9","at":"2:00s","_save":"1:00","letter":"BST"},{"name":"GB-Eire","_from":"1955","_to":"1956","type":"-","in":"Apr","on":"Sun>=16","at":"2:00s","_save":"1:00","letter":"BST"},{"name":"GB-Eire","_from":"1957","_to":"only","type":"-","in":"Apr","on":"Sun>=9","at":"2:00s","_save":"1:00","letter":"BST"},{"name":"GB-Eire","_from":"1958","_to":"1959","type":"-","in":"Apr","on":"Sun>=16","at":"2:00s","_save":"1:00","letter":"BST"},{"name":"GB-Eire","_from":"1960","_to":"only","type":"-","in":"Apr","on":"Sun>=9","at":"2:00s","_save":"1:00","letter":"BST"},{"name":"GB-Eire","_from":"1961","_to":"1963","type":"-","in":"Mar","on":"lastSun","at":"2:00s","_save":"1:00","letter":"BST"},{"name":"GB-Eire","_from":"1961","_to":"1968","type":"-","in":"Oct","on":"Sun>=23","at":"2:00s","_save":"0","letter":"GMT"},{"name":"GB-Eire","_from":"1964","_to":"1967","type":"-","in":"Mar","on":"Sun>=19","at":"2:00s","_save":"1:00","letter":"BST"},{"name":"GB-Eire","_from":"1968","_to":"only","type":"-","in":"Feb","on":"18","at":"2:00s","_save":"1:00","letter":"BST"},{"name":"GB-Eire","_from":"1972","_to":"1980","type":"-","in":"Mar","on":"Sun>=16","at":"2:00s","_save":"1:00","letter":"BST"},{"name":"GB-Eire","_from":"1972","_to":"1980","type":"-","in":"Oct","on":"Sun>=23","at":"2:00s","_save":"0","letter":"GMT"},{"name":"GB-Eire","_from":"1981","_to":"1995","type":"-","in":"Mar","on":"lastSun","at":"1:00u","_save":"1:00","letter":"BST"},{"name":"GB-Eire","_from":"1981","_to":"1989","type":"-","in":"Oct","on":"Sun>=23","at":"1:00u","_save":"0","letter":"GMT"},{"name":"GB-Eire","_from":"1990","_to":"1995","type":"-","in":"Oct","on":"Sun>=22","at":"1:00u","_save":"0","letter":"GMT"}],"EU":[{"name":"EU","_from":"1977","_to":"1980","type":"-","in":"Apr","on":"Sun>=1","at":"1:00u","_save":"1:00","letter":"S"},{"name":"EU","_from":"1977","_to":"only","type":"-","in":"Sep","on":"lastSun","at":"1:00u","_save":"0","letter":"-"},{"name":"EU","_from":"1978","_to":"only","type":"-","in":"Oct","on":"1","at":"1:00u","_save":"0","letter":"-"},{"name":"EU","_from":"1979","_to":"1995","type":"-","in":"Sep","on":"lastSun","at":"1:00u","_save":"0","letter":"-"},{"name":"EU","_from":"1981","_to":"max","type":"-","in":"Mar","on":"lastSun","at":"1:00u","_save":"1:00","letter":"S"},{"name":"EU","_from":"1996","_to":"max","type":"-","in":"Oct","on":"lastSun","at":"1:00u","_save":"0","letter":"-"}],"W-Eur":[{"name":"W-Eur","_from":"1977","_to":"1980","type":"-","in":"Apr","on":"Sun>=1","at":"1:00s","_save":"1:00","letter":"S"},{"name":"W-Eur","_from":"1977","_to":"only","type":"-","in":"Sep","on":"lastSun","at":"1:00s","_save":"0","letter":"-"},{"name":"W-Eur","_from":"1978","_to":"only","type":"-","in":"Oct","on":"1","at":"1:00s","_save":"0","letter":"-"},{"name":"W-Eur","_from":"1979","_to":"1995","type":"-","in":"Sep","on":"lastSun","at":"1:00s","_save":"0","letter":"-"},{"name":"W-Eur","_from":"1981","_to":"max","type":"-","in":"Mar","on":"lastSun","at":"1:00s","_save":"1:00","letter":"S"},{"name":"W-Eur","_from":"1996","_to":"max","type":"-","in":"Oct","on":"lastSun","at":"1:00s","_save":"0","letter":"-"}],"C-Eur":[{"name":"C-Eur","_from":"1916","_to":"only","type":"-","in":"Apr","on":"30","at":"23:00","_save":"1:00","letter":"S"},{"name":"C-Eur","_from":"1916","_to":"only","type":"-","in":"Oct","on":"1","at":"1:00","_save":"0","letter":"-"},{"name":"C-Eur","_from":"1917","_to":"1918","type":"-","in":"Apr","on":"Mon>=15","at":"2:00s","_save":"1:00","letter":"S"},{"name":"C-Eur","_from":"1917","_to":"1918","type":"-","in":"Sep","on":"Mon>=15","at":"2:00s","_save":"0","letter":"-"},{"name":"C-Eur","_from":"1940","_to":"only","type":"-","in":"Apr","on":"1","at":"2:00s","_save":"1:00","letter":"S"},{"name":"C-Eur","_from":"1942","_to":"only","type":"-","in":"Nov","on":"2","at":"2:00s","_save":"0","letter":"-"},{"name":"C-Eur","_from":"1943","_to":"only","type":"-","in":"Mar","on":"29","at":"2:00s","_save":"1:00","letter":"S"},{"name":"C-Eur","_from":"1943","_to":"only","type":"-","in":"Oct","on":"4","at":"2:00s","_save":"0","letter":"-"},{"name":"C-Eur","_from":"1944","_to":"1945","type":"-","in":"Apr","on":"Mon>=1","at":"2:00s","_save":"1:00","letter":"S"},{"name":"C-Eur","_from":"1944","_to":"only","type":"-","in":"Oct","on":"2","at":"2:00s","_save":"0","letter":"-"},{"name":"C-Eur","_from":"1945","_to":"only","type":"-","in":"Sep","on":"16","at":"2:00s","_save":"0","letter":"-"},{"name":"C-Eur","_from":"1977","_to":"1980","type":"-","in":"Apr","on":"Sun>=1","at":"2:00s","_save":"1:00","letter":"S"},{"name":"C-Eur","_from":"1977","_to":"only","type":"-","in":"Sep","on":"lastSun","at":"2:00s","_save":"0","letter":"-"},{"name":"C-Eur","_from":"1978","_to":"only","type":"-","in":"Oct","on":"1","at":"2:00s","_save":"0","letter":"-"},{"name":"C-Eur","_from":"1979","_to":"1995","type":"-","in":"Sep","on":"lastSun","at":"2:00s","_save":"0","letter":"-"},{"name":"C-Eur","_from":"1981","_to":"max","type":"-","in":"Mar","on":"lastSun","at":"2:00s","_save":"1:00","letter":"S"},{"name":"C-Eur","_from":"1996","_to":"max","type":"-","in":"Oct","on":"lastSun","at":"2:00s","_save":"0","letter":"-"}],"E-Eur":[{"name":"E-Eur","_from":"1977","_to":"1980","type":"-","in":"Apr","on":"Sun>=1","at":"0:00","_save":"1:00","letter":"S"},{"name":"E-Eur","_from":"1977","_to":"only","type":"-","in":"Sep","on":"lastSun","at":"0:00","_save":"0","letter":"-"},{"name":"E-Eur","_from":"1978","_to":"only","type":"-","in":"Oct","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"E-Eur","_from":"1979","_to":"1995","type":"-","in":"Sep","on":"lastSun","at":"0:00","_save":"0","letter":"-"},{"name":"E-Eur","_from":"1981","_to":"max","type":"-","in":"Mar","on":"lastSun","at":"0:00","_save":"1:00","letter":"S"},{"name":"E-Eur","_from":"1996","_to":"max","type":"-","in":"Oct","on":"lastSun","at":"0:00","_save":"0","letter":"-"}],"Russia":[{"name":"Russia","_from":"1917","_to":"only","type":"-","in":"Jul","on":"1","at":"23:00","_save":"1:00","letter":"MST"},{"name":"Russia","_from":"1917","_to":"only","type":"-","in":"Dec","on":"28","at":"0:00","_save":"0","letter":"MMT"},{"name":"Russia","_from":"1918","_to":"only","type":"-","in":"May","on":"31","at":"22:00","_save":"2:00","letter":"MDST"},{"name":"Russia","_from":"1918","_to":"only","type":"-","in":"Sep","on":"16","at":"1:00","_save":"1:00","letter":"MST"},{"name":"Russia","_from":"1919","_to":"only","type":"-","in":"May","on":"31","at":"23:00","_save":"2:00","letter":"MDST"},{"name":"Russia","_from":"1919","_to":"only","type":"-","in":"Jul","on":"1","at":"2:00","_save":"1:00","letter":"S"},{"name":"Russia","_from":"1919","_to":"only","type":"-","in":"Aug","on":"16","at":"0:00","_save":"0","letter":"-"},{"name":"Russia","_from":"1921","_to":"only","type":"-","in":"Feb","on":"14","at":"23:00","_save":"1:00","letter":"S"},{"name":"Russia","_from":"1921","_to":"only","type":"-","in":"Mar","on":"20","at":"23:00","_save":"2:00","letter":"M"},{"name":"Russia","_from":"1921","_to":"only","type":"-","in":"Sep","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Russia","_from":"1921","_to":"only","type":"-","in":"Oct","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Russia","_from":"1981","_to":"1984","type":"-","in":"Apr","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Russia","_from":"1981","_to":"1983","type":"-","in":"Oct","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Russia","_from":"1984","_to":"1991","type":"-","in":"Sep","on":"lastSun","at":"2:00s","_save":"0","letter":"-"},{"name":"Russia","_from":"1985","_to":"1991","type":"-","in":"Mar","on":"lastSun","at":"2:00s","_save":"1:00","letter":"S"},{"name":"Russia","_from":"1992","_to":"only","type":"-","in":"Mar","on":"lastSat","at":"23:00","_save":"1:00","letter":"S"},{"name":"Russia","_from":"1992","_to":"only","type":"-","in":"Sep","on":"lastSat","at":"23:00","_save":"0","letter":"-"},{"name":"Russia","_from":"1993","_to":"2010","type":"-","in":"Mar","on":"lastSun","at":"2:00s","_save":"1:00","letter":"S"},{"name":"Russia","_from":"1993","_to":"1995","type":"-","in":"Sep","on":"lastSun","at":"2:00s","_save":"0","letter":"-"},{"name":"Russia","_from":"1996","_to":"2010","type":"-","in":"Oct","on":"lastSun","at":"2:00s","_save":"0","letter":"-"}],"Albania":[{"name":"Albania","_from":"1940","_to":"only","type":"-","in":"Jun","on":"16","at":"0:00","_save":"1:00","letter":"S"},{"name":"Albania","_from":"1942","_to":"only","type":"-","in":"Nov","on":"2","at":"3:00","_save":"0","letter":"-"},{"name":"Albania","_from":"1943","_to":"only","type":"-","in":"Mar","on":"29","at":"2:00","_save":"1:00","letter":"S"},{"name":"Albania","_from":"1943","_to":"only","type":"-","in":"Apr","on":"10","at":"3:00","_save":"0","letter":"-"},{"name":"Albania","_from":"1974","_to":"only","type":"-","in":"May","on":"4","at":"0:00","_save":"1:00","letter":"S"},{"name":"Albania","_from":"1974","_to":"only","type":"-","in":"Oct","on":"2","at":"0:00","_save":"0","letter":"-"},{"name":"Albania","_from":"1975","_to":"only","type":"-","in":"May","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Albania","_from":"1975","_to":"only","type":"-","in":"Oct","on":"2","at":"0:00","_save":"0","letter":"-"},{"name":"Albania","_from":"1976","_to":"only","type":"-","in":"May","on":"2","at":"0:00","_save":"1:00","letter":"S"},{"name":"Albania","_from":"1976","_to":"only","type":"-","in":"Oct","on":"3","at":"0:00","_save":"0","letter":"-"},{"name":"Albania","_from":"1977","_to":"only","type":"-","in":"May","on":"8","at":"0:00","_save":"1:00","letter":"S"},{"name":"Albania","_from":"1977","_to":"only","type":"-","in":"Oct","on":"2","at":"0:00","_save":"0","letter":"-"},{"name":"Albania","_from":"1978","_to":"only","type":"-","in":"May","on":"6","at":"0:00","_save":"1:00","letter":"S"},{"name":"Albania","_from":"1978","_to":"only","type":"-","in":"Oct","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Albania","_from":"1979","_to":"only","type":"-","in":"May","on":"5","at":"0:00","_save":"1:00","letter":"S"},{"name":"Albania","_from":"1979","_to":"only","type":"-","in":"Sep","on":"30","at":"0:00","_save":"0","letter":"-"},{"name":"Albania","_from":"1980","_to":"only","type":"-","in":"May","on":"3","at":"0:00","_save":"1:00","letter":"S"},{"name":"Albania","_from":"1980","_to":"only","type":"-","in":"Oct","on":"4","at":"0:00","_save":"0","letter":"-"},{"name":"Albania","_from":"1981","_to":"only","type":"-","in":"Apr","on":"26","at":"0:00","_save":"1:00","letter":"S"},{"name":"Albania","_from":"1981","_to":"only","type":"-","in":"Sep","on":"27","at":"0:00","_save":"0","letter":"-"},{"name":"Albania","_from":"1982","_to":"only","type":"-","in":"May","on":"2","at":"0:00","_save":"1:00","letter":"S"},{"name":"Albania","_from":"1982","_to":"only","type":"-","in":"Oct","on":"3","at":"0:00","_save":"0","letter":"-"},{"name":"Albania","_from":"1983","_to":"only","type":"-","in":"Apr","on":"18","at":"0:00","_save":"1:00","letter":"S"},{"name":"Albania","_from":"1983","_to":"only","type":"-","in":"Oct","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Albania","_from":"1984","_to":"only","type":"-","in":"Apr","on":"1","at":"0:00","_save":"1:00","letter":"S"}],"Austria":[{"name":"Austria","_from":"1920","_to":"only","type":"-","in":"Apr","on":"5","at":"2:00s","_save":"1:00","letter":"S"},{"name":"Austria","_from":"1920","_to":"only","type":"-","in":"Sep","on":"13","at":"2:00s","_save":"0","letter":"-"},{"name":"Austria","_from":"1946","_to":"only","type":"-","in":"Apr","on":"14","at":"2:00s","_save":"1:00","letter":"S"},{"name":"Austria","_from":"1946","_to":"1948","type":"-","in":"Oct","on":"Sun>=1","at":"2:00s","_save":"0","letter":"-"},{"name":"Austria","_from":"1947","_to":"only","type":"-","in":"Apr","on":"6","at":"2:00s","_save":"1:00","letter":"S"},{"name":"Austria","_from":"1948","_to":"only","type":"-","in":"Apr","on":"18","at":"2:00s","_save":"1:00","letter":"S"},{"name":"Austria","_from":"1980","_to":"only","type":"-","in":"Apr","on":"6","at":"0:00","_save":"1:00","letter":"S"},{"name":"Austria","_from":"1980","_to":"only","type":"-","in":"Sep","on":"28","at":"0:00","_save":"0","letter":"-"}],"Belgium":[{"name":"Belgium","_from":"1918","_to":"only","type":"-","in":"Mar","on":"9","at":"0:00s","_save":"1:00","letter":"S"},{"name":"Belgium","_from":"1918","_to":"1919","type":"-","in":"Oct","on":"Sat>=1","at":"23:00s","_save":"0","letter":"-"},{"name":"Belgium","_from":"1919","_to":"only","type":"-","in":"Mar","on":"1","at":"23:00s","_save":"1:00","letter":"S"},{"name":"Belgium","_from":"1920","_to":"only","type":"-","in":"Feb","on":"14","at":"23:00s","_save":"1:00","letter":"S"},{"name":"Belgium","_from":"1920","_to":"only","type":"-","in":"Oct","on":"23","at":"23:00s","_save":"0","letter":"-"},{"name":"Belgium","_from":"1921","_to":"only","type":"-","in":"Mar","on":"14","at":"23:00s","_save":"1:00","letter":"S"},{"name":"Belgium","_from":"1921","_to":"only","type":"-","in":"Oct","on":"25","at":"23:00s","_save":"0","letter":"-"},{"name":"Belgium","_from":"1922","_to":"only","type":"-","in":"Mar","on":"25","at":"23:00s","_save":"1:00","letter":"S"},{"name":"Belgium","_from":"1922","_to":"1927","type":"-","in":"Oct","on":"Sat>=1","at":"23:00s","_save":"0","letter":"-"},{"name":"Belgium","_from":"1923","_to":"only","type":"-","in":"Apr","on":"21","at":"23:00s","_save":"1:00","letter":"S"},{"name":"Belgium","_from":"1924","_to":"only","type":"-","in":"Mar","on":"29","at":"23:00s","_save":"1:00","letter":"S"},{"name":"Belgium","_from":"1925","_to":"only","type":"-","in":"Apr","on":"4","at":"23:00s","_save":"1:00","letter":"S"},{"name":"Belgium","_from":"1926","_to":"only","type":"-","in":"Apr","on":"17","at":"23:00s","_save":"1:00","letter":"S"},{"name":"Belgium","_from":"1927","_to":"only","type":"-","in":"Apr","on":"9","at":"23:00s","_save":"1:00","letter":"S"},{"name":"Belgium","_from":"1928","_to":"only","type":"-","in":"Apr","on":"14","at":"23:00s","_save":"1:00","letter":"S"},{"name":"Belgium","_from":"1928","_to":"1938","type":"-","in":"Oct","on":"Sun>=2","at":"2:00s","_save":"0","letter":"-"},{"name":"Belgium","_from":"1929","_to":"only","type":"-","in":"Apr","on":"21","at":"2:00s","_save":"1:00","letter":"S"},{"name":"Belgium","_from":"1930","_to":"only","type":"-","in":"Apr","on":"13","at":"2:00s","_save":"1:00","letter":"S"},{"name":"Belgium","_from":"1931","_to":"only","type":"-","in":"Apr","on":"19","at":"2:00s","_save":"1:00","letter":"S"},{"name":"Belgium","_from":"1932","_to":"only","type":"-","in":"Apr","on":"3","at":"2:00s","_save":"1:00","letter":"S"},{"name":"Belgium","_from":"1933","_to":"only","type":"-","in":"Mar","on":"26","at":"2:00s","_save":"1:00","letter":"S"},{"name":"Belgium","_from":"1934","_to":"only","type":"-","in":"Apr","on":"8","at":"2:00s","_save":"1:00","letter":"S"},{"name":"Belgium","_from":"1935","_to":"only","type":"-","in":"Mar","on":"31","at":"2:00s","_save":"1:00","letter":"S"},{"name":"Belgium","_from":"1936","_to":"only","type":"-","in":"Apr","on":"19","at":"2:00s","_save":"1:00","letter":"S"},{"name":"Belgium","_from":"1937","_to":"only","type":"-","in":"Apr","on":"4","at":"2:00s","_save":"1:00","letter":"S"},{"name":"Belgium","_from":"1938","_to":"only","type":"-","in":"Mar","on":"27","at":"2:00s","_save":"1:00","letter":"S"},{"name":"Belgium","_from":"1939","_to":"only","type":"-","in":"Apr","on":"16","at":"2:00s","_save":"1:00","letter":"S"},{"name":"Belgium","_from":"1939","_to":"only","type":"-","in":"Nov","on":"19","at":"2:00s","_save":"0","letter":"-"},{"name":"Belgium","_from":"1940","_to":"only","type":"-","in":"Feb","on":"25","at":"2:00s","_save":"1:00","letter":"S"},{"name":"Belgium","_from":"1944","_to":"only","type":"-","in":"Sep","on":"17","at":"2:00s","_save":"0","letter":"-"},{"name":"Belgium","_from":"1945","_to":"only","type":"-","in":"Apr","on":"2","at":"2:00s","_save":"1:00","letter":"S"},{"name":"Belgium","_from":"1945","_to":"only","type":"-","in":"Sep","on":"16","at":"2:00s","_save":"0","letter":"-"},{"name":"Belgium","_from":"1946","_to":"only","type":"-","in":"May","on":"19","at":"2:00s","_save":"1:00","letter":"S"},{"name":"Belgium","_from":"1946","_to":"only","type":"-","in":"Oct","on":"7","at":"2:00s","_save":"0","letter":"-"}],"Bulg":[{"name":"Bulg","_from":"1979","_to":"only","type":"-","in":"Mar","on":"31","at":"23:00","_save":"1:00","letter":"S"},{"name":"Bulg","_from":"1979","_to":"only","type":"-","in":"Oct","on":"1","at":"1:00","_save":"0","letter":"-"},{"name":"Bulg","_from":"1980","_to":"1982","type":"-","in":"Apr","on":"Sat>=1","at":"23:00","_save":"1:00","letter":"S"},{"name":"Bulg","_from":"1980","_to":"only","type":"-","in":"Sep","on":"29","at":"1:00","_save":"0","letter":"-"},{"name":"Bulg","_from":"1981","_to":"only","type":"-","in":"Sep","on":"27","at":"2:00","_save":"0","letter":"-"}],"Czech":[{"name":"Czech","_from":"1945","_to":"only","type":"-","in":"Apr","on":"8","at":"2:00s","_save":"1:00","letter":"S"},{"name":"Czech","_from":"1945","_to":"only","type":"-","in":"Nov","on":"18","at":"2:00s","_save":"0","letter":"-"},{"name":"Czech","_from":"1946","_to":"only","type":"-","in":"May","on":"6","at":"2:00s","_save":"1:00","letter":"S"},{"name":"Czech","_from":"1946","_to":"1949","type":"-","in":"Oct","on":"Sun>=1","at":"2:00s","_save":"0","letter":"-"},{"name":"Czech","_from":"1947","_to":"only","type":"-","in":"Apr","on":"20","at":"2:00s","_save":"1:00","letter":"S"},{"name":"Czech","_from":"1948","_to":"only","type":"-","in":"Apr","on":"18","at":"2:00s","_save":"1:00","letter":"S"},{"name":"Czech","_from":"1949","_to":"only","type":"-","in":"Apr","on":"9","at":"2:00s","_save":"1:00","letter":"S"}],"Denmark":[{"name":"Denmark","_from":"1916","_to":"only","type":"-","in":"May","on":"14","at":"23:00","_save":"1:00","letter":"S"},{"name":"Denmark","_from":"1916","_to":"only","type":"-","in":"Sep","on":"30","at":"23:00","_save":"0","letter":"-"},{"name":"Denmark","_from":"1940","_to":"only","type":"-","in":"May","on":"15","at":"0:00","_save":"1:00","letter":"S"},{"name":"Denmark","_from":"1945","_to":"only","type":"-","in":"Apr","on":"2","at":"2:00s","_save":"1:00","letter":"S"},{"name":"Denmark","_from":"1945","_to":"only","type":"-","in":"Aug","on":"15","at":"2:00s","_save":"0","letter":"-"},{"name":"Denmark","_from":"1946","_to":"only","type":"-","in":"May","on":"1","at":"2:00s","_save":"1:00","letter":"S"},{"name":"Denmark","_from":"1946","_to":"only","type":"-","in":"Sep","on":"1","at":"2:00s","_save":"0","letter":"-"},{"name":"Denmark","_from":"1947","_to":"only","type":"-","in":"May","on":"4","at":"2:00s","_save":"1:00","letter":"S"},{"name":"Denmark","_from":"1947","_to":"only","type":"-","in":"Aug","on":"10","at":"2:00s","_save":"0","letter":"-"},{"name":"Denmark","_from":"1948","_to":"only","type":"-","in":"May","on":"9","at":"2:00s","_save":"1:00","letter":"S"},{"name":"Denmark","_from":"1948","_to":"only","type":"-","in":"Aug","on":"8","at":"2:00s","_save":"0","letter":"-"}],"Thule":[{"name":"Thule","_from":"1991","_to":"1992","type":"-","in":"Mar","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"Thule","_from":"1991","_to":"1992","type":"-","in":"Sep","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Thule","_from":"1993","_to":"2006","type":"-","in":"Apr","on":"Sun>=1","at":"2:00","_save":"1:00","letter":"D"},{"name":"Thule","_from":"1993","_to":"2006","type":"-","in":"Oct","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Thule","_from":"2007","_to":"max","type":"-","in":"Mar","on":"Sun>=8","at":"2:00","_save":"1:00","letter":"D"},{"name":"Thule","_from":"2007","_to":"max","type":"-","in":"Nov","on":"Sun>=1","at":"2:00","_save":"0","letter":"S"}],"Finland":[{"name":"Finland","_from":"1942","_to":"only","type":"-","in":"Apr","on":"3","at":"0:00","_save":"1:00","letter":"S"},{"name":"Finland","_from":"1942","_to":"only","type":"-","in":"Oct","on":"3","at":"0:00","_save":"0","letter":"-"},{"name":"Finland","_from":"1981","_to":"1982","type":"-","in":"Mar","on":"lastSun","at":"2:00","_save":"1:00","letter":"S"},{"name":"Finland","_from":"1981","_to":"1982","type":"-","in":"Sep","on":"lastSun","at":"3:00","_save":"0","letter":"-"}],"France":[{"name":"France","_from":"1916","_to":"only","type":"-","in":"Jun","on":"14","at":"23:00s","_save":"1:00","letter":"S"},{"name":"France","_from":"1916","_to":"1919","type":"-","in":"Oct","on":"Sun>=1","at":"23:00s","_save":"0","letter":"-"},{"name":"France","_from":"1917","_to":"only","type":"-","in":"Mar","on":"24","at":"23:00s","_save":"1:00","letter":"S"},{"name":"France","_from":"1918","_to":"only","type":"-","in":"Mar","on":"9","at":"23:00s","_save":"1:00","letter":"S"},{"name":"France","_from":"1919","_to":"only","type":"-","in":"Mar","on":"1","at":"23:00s","_save":"1:00","letter":"S"},{"name":"France","_from":"1920","_to":"only","type":"-","in":"Feb","on":"14","at":"23:00s","_save":"1:00","letter":"S"},{"name":"France","_from":"1920","_to":"only","type":"-","in":"Oct","on":"23","at":"23:00s","_save":"0","letter":"-"},{"name":"France","_from":"1921","_to":"only","type":"-","in":"Mar","on":"14","at":"23:00s","_save":"1:00","letter":"S"},{"name":"France","_from":"1921","_to":"only","type":"-","in":"Oct","on":"25","at":"23:00s","_save":"0","letter":"-"},{"name":"France","_from":"1922","_to":"only","type":"-","in":"Mar","on":"25","at":"23:00s","_save":"1:00","letter":"S"},{"name":"France","_from":"1922","_to":"1938","type":"-","in":"Oct","on":"Sat>=1","at":"23:00s","_save":"0","letter":"-"},{"name":"France","_from":"1923","_to":"only","type":"-","in":"May","on":"26","at":"23:00s","_save":"1:00","letter":"S"},{"name":"France","_from":"1924","_to":"only","type":"-","in":"Mar","on":"29","at":"23:00s","_save":"1:00","letter":"S"},{"name":"France","_from":"1925","_to":"only","type":"-","in":"Apr","on":"4","at":"23:00s","_save":"1:00","letter":"S"},{"name":"France","_from":"1926","_to":"only","type":"-","in":"Apr","on":"17","at":"23:00s","_save":"1:00","letter":"S"},{"name":"France","_from":"1927","_to":"only","type":"-","in":"Apr","on":"9","at":"23:00s","_save":"1:00","letter":"S"},{"name":"France","_from":"1928","_to":"only","type":"-","in":"Apr","on":"14","at":"23:00s","_save":"1:00","letter":"S"},{"name":"France","_from":"1929","_to":"only","type":"-","in":"Apr","on":"20","at":"23:00s","_save":"1:00","letter":"S"},{"name":"France","_from":"1930","_to":"only","type":"-","in":"Apr","on":"12","at":"23:00s","_save":"1:00","letter":"S"},{"name":"France","_from":"1931","_to":"only","type":"-","in":"Apr","on":"18","at":"23:00s","_save":"1:00","letter":"S"},{"name":"France","_from":"1932","_to":"only","type":"-","in":"Apr","on":"2","at":"23:00s","_save":"1:00","letter":"S"},{"name":"France","_from":"1933","_to":"only","type":"-","in":"Mar","on":"25","at":"23:00s","_save":"1:00","letter":"S"},{"name":"France","_from":"1934","_to":"only","type":"-","in":"Apr","on":"7","at":"23:00s","_save":"1:00","letter":"S"},{"name":"France","_from":"1935","_to":"only","type":"-","in":"Mar","on":"30","at":"23:00s","_save":"1:00","letter":"S"},{"name":"France","_from":"1936","_to":"only","type":"-","in":"Apr","on":"18","at":"23:00s","_save":"1:00","letter":"S"},{"name":"France","_from":"1937","_to":"only","type":"-","in":"Apr","on":"3","at":"23:00s","_save":"1:00","letter":"S"},{"name":"France","_from":"1938","_to":"only","type":"-","in":"Mar","on":"26","at":"23:00s","_save":"1:00","letter":"S"},{"name":"France","_from":"1939","_to":"only","type":"-","in":"Apr","on":"15","at":"23:00s","_save":"1:00","letter":"S"},{"name":"France","_from":"1939","_to":"only","type":"-","in":"Nov","on":"18","at":"23:00s","_save":"0","letter":"-"},{"name":"France","_from":"1940","_to":"only","type":"-","in":"Feb","on":"25","at":"2:00","_save":"1:00","letter":"S"},{"name":"France","_from":"1941","_to":"only","type":"-","in":"May","on":"5","at":"0:00","_save":"2:00","letter":"M"},{"name":"France","_from":"1941","_to":"only","type":"-","in":"Oct","on":"6","at":"0:00","_save":"1:00","letter":"S"},{"name":"France","_from":"1942","_to":"only","type":"-","in":"Mar","on":"9","at":"0:00","_save":"2:00","letter":"M"},{"name":"France","_from":"1942","_to":"only","type":"-","in":"Nov","on":"2","at":"3:00","_save":"1:00","letter":"S"},{"name":"France","_from":"1943","_to":"only","type":"-","in":"Mar","on":"29","at":"2:00","_save":"2:00","letter":"M"},{"name":"France","_from":"1943","_to":"only","type":"-","in":"Oct","on":"4","at":"3:00","_save":"1:00","letter":"S"},{"name":"France","_from":"1944","_to":"only","type":"-","in":"Apr","on":"3","at":"2:00","_save":"2:00","letter":"M"},{"name":"France","_from":"1944","_to":"only","type":"-","in":"Oct","on":"8","at":"1:00","_save":"1:00","letter":"S"},{"name":"France","_from":"1945","_to":"only","type":"-","in":"Apr","on":"2","at":"2:00","_save":"2:00","letter":"M"},{"name":"France","_from":"1945","_to":"only","type":"-","in":"Sep","on":"16","at":"3:00","_save":"0","letter":"-"},{"name":"France","_from":"1976","_to":"only","type":"-","in":"Mar","on":"28","at":"1:00","_save":"1:00","letter":"S"},{"name":"France","_from":"1976","_to":"only","type":"-","in":"Sep","on":"26","at":"1:00","_save":"0","letter":"-"}],"Germany":[{"name":"Germany","_from":"1946","_to":"only","type":"-","in":"Apr","on":"14","at":"2:00s","_save":"1:00","letter":"S"},{"name":"Germany","_from":"1946","_to":"only","type":"-","in":"Oct","on":"7","at":"2:00s","_save":"0","letter":"-"},{"name":"Germany","_from":"1947","_to":"1949","type":"-","in":"Oct","on":"Sun>=1","at":"2:00s","_save":"0","letter":"-"},{"name":"Germany","_from":"1947","_to":"only","type":"-","in":"Apr","on":"6","at":"3:00s","_save":"1:00","letter":"S"},{"name":"Germany","_from":"1947","_to":"only","type":"-","in":"May","on":"11","at":"2:00s","_save":"2:00","letter":"M"},{"name":"Germany","_from":"1947","_to":"only","type":"-","in":"Jun","on":"29","at":"3:00","_save":"1:00","letter":"S"},{"name":"Germany","_from":"1948","_to":"only","type":"-","in":"Apr","on":"18","at":"2:00s","_save":"1:00","letter":"S"},{"name":"Germany","_from":"1949","_to":"only","type":"-","in":"Apr","on":"10","at":"2:00s","_save":"1:00","letter":"S"}],"SovietZone":[{"name":"SovietZone","_from":"1945","_to":"only","type":"-","in":"May","on":"24","at":"2:00","_save":"2:00","letter":"M"},{"name":"SovietZone","_from":"1945","_to":"only","type":"-","in":"Sep","on":"24","at":"3:00","_save":"1:00","letter":"S"},{"name":"SovietZone","_from":"1945","_to":"only","type":"-","in":"Nov","on":"18","at":"2:00s","_save":"0","letter":"-"}],"Greece":[{"name":"Greece","_from":"1932","_to":"only","type":"-","in":"Jul","on":"7","at":"0:00","_save":"1:00","letter":"S"},{"name":"Greece","_from":"1932","_to":"only","type":"-","in":"Sep","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Greece","_from":"1941","_to":"only","type":"-","in":"Apr","on":"7","at":"0:00","_save":"1:00","letter":"S"},{"name":"Greece","_from":"1942","_to":"only","type":"-","in":"Nov","on":"2","at":"3:00","_save":"0","letter":"-"},{"name":"Greece","_from":"1943","_to":"only","type":"-","in":"Mar","on":"30","at":"0:00","_save":"1:00","letter":"S"},{"name":"Greece","_from":"1943","_to":"only","type":"-","in":"Oct","on":"4","at":"0:00","_save":"0","letter":"-"},{"name":"Greece","_from":"1952","_to":"only","type":"-","in":"Jul","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Greece","_from":"1952","_to":"only","type":"-","in":"Nov","on":"2","at":"0:00","_save":"0","letter":"-"},{"name":"Greece","_from":"1975","_to":"only","type":"-","in":"Apr","on":"12","at":"0:00s","_save":"1:00","letter":"S"},{"name":"Greece","_from":"1975","_to":"only","type":"-","in":"Nov","on":"26","at":"0:00s","_save":"0","letter":"-"},{"name":"Greece","_from":"1976","_to":"only","type":"-","in":"Apr","on":"11","at":"2:00s","_save":"1:00","letter":"S"},{"name":"Greece","_from":"1976","_to":"only","type":"-","in":"Oct","on":"10","at":"2:00s","_save":"0","letter":"-"},{"name":"Greece","_from":"1977","_to":"1978","type":"-","in":"Apr","on":"Sun>=1","at":"2:00s","_save":"1:00","letter":"S"},{"name":"Greece","_from":"1977","_to":"only","type":"-","in":"Sep","on":"26","at":"2:00s","_save":"0","letter":"-"},{"name":"Greece","_from":"1978","_to":"only","type":"-","in":"Sep","on":"24","at":"4:00","_save":"0","letter":"-"},{"name":"Greece","_from":"1979","_to":"only","type":"-","in":"Apr","on":"1","at":"9:00","_save":"1:00","letter":"S"},{"name":"Greece","_from":"1979","_to":"only","type":"-","in":"Sep","on":"29","at":"2:00","_save":"0","letter":"-"},{"name":"Greece","_from":"1980","_to":"only","type":"-","in":"Apr","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Greece","_from":"1980","_to":"only","type":"-","in":"Sep","on":"28","at":"0:00","_save":"0","letter":"-"}],"Hungary":[{"name":"Hungary","_from":"1918","_to":"only","type":"-","in":"Apr","on":"1","at":"3:00","_save":"1:00","letter":"S"},{"name":"Hungary","_from":"1918","_to":"only","type":"-","in":"Sep","on":"29","at":"3:00","_save":"0","letter":"-"},{"name":"Hungary","_from":"1919","_to":"only","type":"-","in":"Apr","on":"15","at":"3:00","_save":"1:00","letter":"S"},{"name":"Hungary","_from":"1919","_to":"only","type":"-","in":"Sep","on":"15","at":"3:00","_save":"0","letter":"-"},{"name":"Hungary","_from":"1920","_to":"only","type":"-","in":"Apr","on":"5","at":"3:00","_save":"1:00","letter":"S"},{"name":"Hungary","_from":"1920","_to":"only","type":"-","in":"Sep","on":"30","at":"3:00","_save":"0","letter":"-"},{"name":"Hungary","_from":"1945","_to":"only","type":"-","in":"May","on":"1","at":"23:00","_save":"1:00","letter":"S"},{"name":"Hungary","_from":"1945","_to":"only","type":"-","in":"Nov","on":"3","at":"0:00","_save":"0","letter":"-"},{"name":"Hungary","_from":"1946","_to":"only","type":"-","in":"Mar","on":"31","at":"2:00s","_save":"1:00","letter":"S"},{"name":"Hungary","_from":"1946","_to":"1949","type":"-","in":"Oct","on":"Sun>=1","at":"2:00s","_save":"0","letter":"-"},{"name":"Hungary","_from":"1947","_to":"1949","type":"-","in":"Apr","on":"Sun>=4","at":"2:00s","_save":"1:00","letter":"S"},{"name":"Hungary","_from":"1950","_to":"only","type":"-","in":"Apr","on":"17","at":"2:00s","_save":"1:00","letter":"S"},{"name":"Hungary","_from":"1950","_to":"only","type":"-","in":"Oct","on":"23","at":"2:00s","_save":"0","letter":"-"},{"name":"Hungary","_from":"1954","_to":"1955","type":"-","in":"May","on":"23","at":"0:00","_save":"1:00","letter":"S"},{"name":"Hungary","_from":"1954","_to":"1955","type":"-","in":"Oct","on":"3","at":"0:00","_save":"0","letter":"-"},{"name":"Hungary","_from":"1956","_to":"only","type":"-","in":"Jun","on":"Sun>=1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Hungary","_from":"1956","_to":"only","type":"-","in":"Sep","on":"lastSun","at":"0:00","_save":"0","letter":"-"},{"name":"Hungary","_from":"1957","_to":"only","type":"-","in":"Jun","on":"Sun>=1","at":"1:00","_save":"1:00","letter":"S"},{"name":"Hungary","_from":"1957","_to":"only","type":"-","in":"Sep","on":"lastSun","at":"3:00","_save":"0","letter":"-"},{"name":"Hungary","_from":"1980","_to":"only","type":"-","in":"Apr","on":"6","at":"1:00","_save":"1:00","letter":"S"}],"Iceland":[{"name":"Iceland","_from":"1917","_to":"1918","type":"-","in":"Feb","on":"19","at":"23:00","_save":"1:00","letter":"S"},{"name":"Iceland","_from":"1917","_to":"only","type":"-","in":"Oct","on":"21","at":"1:00","_save":"0","letter":"-"},{"name":"Iceland","_from":"1918","_to":"only","type":"-","in":"Nov","on":"16","at":"1:00","_save":"0","letter":"-"},{"name":"Iceland","_from":"1939","_to":"only","type":"-","in":"Apr","on":"29","at":"23:00","_save":"1:00","letter":"S"},{"name":"Iceland","_from":"1939","_to":"only","type":"-","in":"Nov","on":"29","at":"2:00","_save":"0","letter":"-"},{"name":"Iceland","_from":"1940","_to":"only","type":"-","in":"Feb","on":"25","at":"2:00","_save":"1:00","letter":"S"},{"name":"Iceland","_from":"1940","_to":"only","type":"-","in":"Nov","on":"3","at":"2:00","_save":"0","letter":"-"},{"name":"Iceland","_from":"1941","_to":"only","type":"-","in":"Mar","on":"2","at":"1:00s","_save":"1:00","letter":"S"},{"name":"Iceland","_from":"1941","_to":"only","type":"-","in":"Nov","on":"2","at":"1:00s","_save":"0","letter":"-"},{"name":"Iceland","_from":"1942","_to":"only","type":"-","in":"Mar","on":"8","at":"1:00s","_save":"1:00","letter":"S"},{"name":"Iceland","_from":"1942","_to":"only","type":"-","in":"Oct","on":"25","at":"1:00s","_save":"0","letter":"-"},{"name":"Iceland","_from":"1943","_to":"1946","type":"-","in":"Mar","on":"Sun>=1","at":"1:00s","_save":"1:00","letter":"S"},{"name":"Iceland","_from":"1943","_to":"1948","type":"-","in":"Oct","on":"Sun>=22","at":"1:00s","_save":"0","letter":"-"},{"name":"Iceland","_from":"1947","_to":"1967","type":"-","in":"Apr","on":"Sun>=1","at":"1:00s","_save":"1:00","letter":"S"},{"name":"Iceland","_from":"1949","_to":"only","type":"-","in":"Oct","on":"30","at":"1:00s","_save":"0","letter":"-"},{"name":"Iceland","_from":"1950","_to":"1966","type":"-","in":"Oct","on":"Sun>=22","at":"1:00s","_save":"0","letter":"-"},{"name":"Iceland","_from":"1967","_to":"only","type":"-","in":"Oct","on":"29","at":"1:00s","_save":"0","letter":"-"}],"Italy":[{"name":"Italy","_from":"1916","_to":"only","type":"-","in":"Jun","on":"3","at":"0:00s","_save":"1:00","letter":"S"},{"name":"Italy","_from":"1916","_to":"only","type":"-","in":"Oct","on":"1","at":"0:00s","_save":"0","letter":"-"},{"name":"Italy","_from":"1917","_to":"only","type":"-","in":"Apr","on":"1","at":"0:00s","_save":"1:00","letter":"S"},{"name":"Italy","_from":"1917","_to":"only","type":"-","in":"Sep","on":"30","at":"0:00s","_save":"0","letter":"-"},{"name":"Italy","_from":"1918","_to":"only","type":"-","in":"Mar","on":"10","at":"0:00s","_save":"1:00","letter":"S"},{"name":"Italy","_from":"1918","_to":"1919","type":"-","in":"Oct","on":"Sun>=1","at":"0:00s","_save":"0","letter":"-"},{"name":"Italy","_from":"1919","_to":"only","type":"-","in":"Mar","on":"2","at":"0:00s","_save":"1:00","letter":"S"},{"name":"Italy","_from":"1920","_to":"only","type":"-","in":"Mar","on":"21","at":"0:00s","_save":"1:00","letter":"S"},{"name":"Italy","_from":"1920","_to":"only","type":"-","in":"Sep","on":"19","at":"0:00s","_save":"0","letter":"-"},{"name":"Italy","_from":"1940","_to":"only","type":"-","in":"Jun","on":"15","at":"0:00s","_save":"1:00","letter":"S"},{"name":"Italy","_from":"1944","_to":"only","type":"-","in":"Sep","on":"17","at":"0:00s","_save":"0","letter":"-"},{"name":"Italy","_from":"1945","_to":"only","type":"-","in":"Apr","on":"2","at":"2:00","_save":"1:00","letter":"S"},{"name":"Italy","_from":"1945","_to":"only","type":"-","in":"Sep","on":"15","at":"0:00s","_save":"0","letter":"-"},{"name":"Italy","_from":"1946","_to":"only","type":"-","in":"Mar","on":"17","at":"2:00s","_save":"1:00","letter":"S"},{"name":"Italy","_from":"1946","_to":"only","type":"-","in":"Oct","on":"6","at":"2:00s","_save":"0","letter":"-"},{"name":"Italy","_from":"1947","_to":"only","type":"-","in":"Mar","on":"16","at":"0:00s","_save":"1:00","letter":"S"},{"name":"Italy","_from":"1947","_to":"only","type":"-","in":"Oct","on":"5","at":"0:00s","_save":"0","letter":"-"},{"name":"Italy","_from":"1948","_to":"only","type":"-","in":"Feb","on":"29","at":"2:00s","_save":"1:00","letter":"S"},{"name":"Italy","_from":"1948","_to":"only","type":"-","in":"Oct","on":"3","at":"2:00s","_save":"0","letter":"-"},{"name":"Italy","_from":"1966","_to":"1968","type":"-","in":"May","on":"Sun>=22","at":"0:00","_save":"1:00","letter":"S"},{"name":"Italy","_from":"1966","_to":"1969","type":"-","in":"Sep","on":"Sun>=22","at":"0:00","_save":"0","letter":"-"},{"name":"Italy","_from":"1969","_to":"only","type":"-","in":"Jun","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Italy","_from":"1970","_to":"only","type":"-","in":"May","on":"31","at":"0:00","_save":"1:00","letter":"S"},{"name":"Italy","_from":"1970","_to":"only","type":"-","in":"Sep","on":"lastSun","at":"0:00","_save":"0","letter":"-"},{"name":"Italy","_from":"1971","_to":"1972","type":"-","in":"May","on":"Sun>=22","at":"0:00","_save":"1:00","letter":"S"},{"name":"Italy","_from":"1971","_to":"only","type":"-","in":"Sep","on":"lastSun","at":"1:00","_save":"0","letter":"-"},{"name":"Italy","_from":"1972","_to":"only","type":"-","in":"Oct","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Italy","_from":"1973","_to":"only","type":"-","in":"Jun","on":"3","at":"0:00","_save":"1:00","letter":"S"},{"name":"Italy","_from":"1973","_to":"1974","type":"-","in":"Sep","on":"lastSun","at":"0:00","_save":"0","letter":"-"},{"name":"Italy","_from":"1974","_to":"only","type":"-","in":"May","on":"26","at":"0:00","_save":"1:00","letter":"S"},{"name":"Italy","_from":"1975","_to":"only","type":"-","in":"Jun","on":"1","at":"0:00s","_save":"1:00","letter":"S"},{"name":"Italy","_from":"1975","_to":"1977","type":"-","in":"Sep","on":"lastSun","at":"0:00s","_save":"0","letter":"-"},{"name":"Italy","_from":"1976","_to":"only","type":"-","in":"May","on":"30","at":"0:00s","_save":"1:00","letter":"S"},{"name":"Italy","_from":"1977","_to":"1979","type":"-","in":"May","on":"Sun>=22","at":"0:00s","_save":"1:00","letter":"S"},{"name":"Italy","_from":"1978","_to":"only","type":"-","in":"Oct","on":"1","at":"0:00s","_save":"0","letter":"-"},{"name":"Italy","_from":"1979","_to":"only","type":"-","in":"Sep","on":"30","at":"0:00s","_save":"0","letter":"-"}],"Latvia":[{"name":"Latvia","_from":"1989","_to":"1996","type":"-","in":"Mar","on":"lastSun","at":"2:00s","_save":"1:00","letter":"S"},{"name":"Latvia","_from":"1989","_to":"1996","type":"-","in":"Sep","on":"lastSun","at":"2:00s","_save":"0","letter":"-"}],"Lux":[{"name":"Lux","_from":"1916","_to":"only","type":"-","in":"May","on":"14","at":"23:00","_save":"1:00","letter":"S"},{"name":"Lux","_from":"1916","_to":"only","type":"-","in":"Oct","on":"1","at":"1:00","_save":"0","letter":"-"},{"name":"Lux","_from":"1917","_to":"only","type":"-","in":"Apr","on":"28","at":"23:00","_save":"1:00","letter":"S"},{"name":"Lux","_from":"1917","_to":"only","type":"-","in":"Sep","on":"17","at":"1:00","_save":"0","letter":"-"},{"name":"Lux","_from":"1918","_to":"only","type":"-","in":"Apr","on":"Mon>=15","at":"2:00s","_save":"1:00","letter":"S"},{"name":"Lux","_from":"1918","_to":"only","type":"-","in":"Sep","on":"Mon>=15","at":"2:00s","_save":"0","letter":"-"},{"name":"Lux","_from":"1919","_to":"only","type":"-","in":"Mar","on":"1","at":"23:00","_save":"1:00","letter":"S"},{"name":"Lux","_from":"1919","_to":"only","type":"-","in":"Oct","on":"5","at":"3:00","_save":"0","letter":"-"},{"name":"Lux","_from":"1920","_to":"only","type":"-","in":"Feb","on":"14","at":"23:00","_save":"1:00","letter":"S"},{"name":"Lux","_from":"1920","_to":"only","type":"-","in":"Oct","on":"24","at":"2:00","_save":"0","letter":"-"},{"name":"Lux","_from":"1921","_to":"only","type":"-","in":"Mar","on":"14","at":"23:00","_save":"1:00","letter":"S"},{"name":"Lux","_from":"1921","_to":"only","type":"-","in":"Oct","on":"26","at":"2:00","_save":"0","letter":"-"},{"name":"Lux","_from":"1922","_to":"only","type":"-","in":"Mar","on":"25","at":"23:00","_save":"1:00","letter":"S"},{"name":"Lux","_from":"1922","_to":"only","type":"-","in":"Oct","on":"Sun>=2","at":"1:00","_save":"0","letter":"-"},{"name":"Lux","_from":"1923","_to":"only","type":"-","in":"Apr","on":"21","at":"23:00","_save":"1:00","letter":"S"},{"name":"Lux","_from":"1923","_to":"only","type":"-","in":"Oct","on":"Sun>=2","at":"2:00","_save":"0","letter":"-"},{"name":"Lux","_from":"1924","_to":"only","type":"-","in":"Mar","on":"29","at":"23:00","_save":"1:00","letter":"S"},{"name":"Lux","_from":"1924","_to":"1928","type":"-","in":"Oct","on":"Sun>=2","at":"1:00","_save":"0","letter":"-"},{"name":"Lux","_from":"1925","_to":"only","type":"-","in":"Apr","on":"5","at":"23:00","_save":"1:00","letter":"S"},{"name":"Lux","_from":"1926","_to":"only","type":"-","in":"Apr","on":"17","at":"23:00","_save":"1:00","letter":"S"},{"name":"Lux","_from":"1927","_to":"only","type":"-","in":"Apr","on":"9","at":"23:00","_save":"1:00","letter":"S"},{"name":"Lux","_from":"1928","_to":"only","type":"-","in":"Apr","on":"14","at":"23:00","_save":"1:00","letter":"S"},{"name":"Lux","_from":"1929","_to":"only","type":"-","in":"Apr","on":"20","at":"23:00","_save":"1:00","letter":"S"}],"Malta":[{"name":"Malta","_from":"1973","_to":"only","type":"-","in":"Mar","on":"31","at":"0:00s","_save":"1:00","letter":"S"},{"name":"Malta","_from":"1973","_to":"only","type":"-","in":"Sep","on":"29","at":"0:00s","_save":"0","letter":"-"},{"name":"Malta","_from":"1974","_to":"only","type":"-","in":"Apr","on":"21","at":"0:00s","_save":"1:00","letter":"S"},{"name":"Malta","_from":"1974","_to":"only","type":"-","in":"Sep","on":"16","at":"0:00s","_save":"0","letter":"-"},{"name":"Malta","_from":"1975","_to":"1979","type":"-","in":"Apr","on":"Sun>=15","at":"2:00","_save":"1:00","letter":"S"},{"name":"Malta","_from":"1975","_to":"1980","type":"-","in":"Sep","on":"Sun>=15","at":"2:00","_save":"0","letter":"-"},{"name":"Malta","_from":"1980","_to":"only","type":"-","in":"Mar","on":"31","at":"2:00","_save":"1:00","letter":"S"}],"Neth":[{"name":"Neth","_from":"1916","_to":"only","type":"-","in":"May","on":"1","at":"0:00","_save":"1:00","letter":"NST"},{"name":"Neth","_from":"1916","_to":"only","type":"-","in":"Oct","on":"1","at":"0:00","_save":"0","letter":"AMT"},{"name":"Neth","_from":"1917","_to":"only","type":"-","in":"Apr","on":"16","at":"2:00s","_save":"1:00","letter":"NST"},{"name":"Neth","_from":"1917","_to":"only","type":"-","in":"Sep","on":"17","at":"2:00s","_save":"0","letter":"AMT"},{"name":"Neth","_from":"1918","_to":"1921","type":"-","in":"Apr","on":"Mon>=1","at":"2:00s","_save":"1:00","letter":"NST"},{"name":"Neth","_from":"1918","_to":"1921","type":"-","in":"Sep","on":"lastMon","at":"2:00s","_save":"0","letter":"AMT"},{"name":"Neth","_from":"1922","_to":"only","type":"-","in":"Mar","on":"lastSun","at":"2:00s","_save":"1:00","letter":"NST"},{"name":"Neth","_from":"1922","_to":"1936","type":"-","in":"Oct","on":"Sun>=2","at":"2:00s","_save":"0","letter":"AMT"},{"name":"Neth","_from":"1923","_to":"only","type":"-","in":"Jun","on":"Fri>=1","at":"2:00s","_save":"1:00","letter":"NST"},{"name":"Neth","_from":"1924","_to":"only","type":"-","in":"Mar","on":"lastSun","at":"2:00s","_save":"1:00","letter":"NST"},{"name":"Neth","_from":"1925","_to":"only","type":"-","in":"Jun","on":"Fri>=1","at":"2:00s","_save":"1:00","letter":"NST"},{"name":"Neth","_from":"1926","_to":"1931","type":"-","in":"May","on":"15","at":"2:00s","_save":"1:00","letter":"NST"},{"name":"Neth","_from":"1932","_to":"only","type":"-","in":"May","on":"22","at":"2:00s","_save":"1:00","letter":"NST"},{"name":"Neth","_from":"1933","_to":"1936","type":"-","in":"May","on":"15","at":"2:00s","_save":"1:00","letter":"NST"},{"name":"Neth","_from":"1937","_to":"only","type":"-","in":"May","on":"22","at":"2:00s","_save":"1:00","letter":"NST"},{"name":"Neth","_from":"1937","_to":"only","type":"-","in":"Jul","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Neth","_from":"1937","_to":"1939","type":"-","in":"Oct","on":"Sun>=2","at":"2:00s","_save":"0","letter":"-"},{"name":"Neth","_from":"1938","_to":"1939","type":"-","in":"May","on":"15","at":"2:00s","_save":"1:00","letter":"S"},{"name":"Neth","_from":"1945","_to":"only","type":"-","in":"Apr","on":"2","at":"2:00s","_save":"1:00","letter":"S"},{"name":"Neth","_from":"1945","_to":"only","type":"-","in":"Sep","on":"16","at":"2:00s","_save":"0","letter":"-"}],"Norway":[{"name":"Norway","_from":"1916","_to":"only","type":"-","in":"May","on":"22","at":"1:00","_save":"1:00","letter":"S"},{"name":"Norway","_from":"1916","_to":"only","type":"-","in":"Sep","on":"30","at":"0:00","_save":"0","letter":"-"},{"name":"Norway","_from":"1945","_to":"only","type":"-","in":"Apr","on":"2","at":"2:00s","_save":"1:00","letter":"S"},{"name":"Norway","_from":"1945","_to":"only","type":"-","in":"Oct","on":"1","at":"2:00s","_save":"0","letter":"-"},{"name":"Norway","_from":"1959","_to":"1964","type":"-","in":"Mar","on":"Sun>=15","at":"2:00s","_save":"1:00","letter":"S"},{"name":"Norway","_from":"1959","_to":"1965","type":"-","in":"Sep","on":"Sun>=15","at":"2:00s","_save":"0","letter":"-"},{"name":"Norway","_from":"1965","_to":"only","type":"-","in":"Apr","on":"25","at":"2:00s","_save":"1:00","letter":"S"}],"Poland":[{"name":"Poland","_from":"1918","_to":"1919","type":"-","in":"Sep","on":"16","at":"2:00s","_save":"0","letter":"-"},{"name":"Poland","_from":"1919","_to":"only","type":"-","in":"Apr","on":"15","at":"2:00s","_save":"1:00","letter":"S"},{"name":"Poland","_from":"1944","_to":"only","type":"-","in":"Apr","on":"3","at":"2:00s","_save":"1:00","letter":"S"},{"name":"Poland","_from":"1944","_to":"only","type":"-","in":"Oct","on":"4","at":"2:00","_save":"0","letter":"-"},{"name":"Poland","_from":"1945","_to":"only","type":"-","in":"Apr","on":"29","at":"0:00","_save":"1:00","letter":"S"},{"name":"Poland","_from":"1945","_to":"only","type":"-","in":"Nov","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Poland","_from":"1946","_to":"only","type":"-","in":"Apr","on":"14","at":"0:00s","_save":"1:00","letter":"S"},{"name":"Poland","_from":"1946","_to":"only","type":"-","in":"Oct","on":"7","at":"2:00s","_save":"0","letter":"-"},{"name":"Poland","_from":"1947","_to":"only","type":"-","in":"May","on":"4","at":"2:00s","_save":"1:00","letter":"S"},{"name":"Poland","_from":"1947","_to":"1949","type":"-","in":"Oct","on":"Sun>=1","at":"2:00s","_save":"0","letter":"-"},{"name":"Poland","_from":"1948","_to":"only","type":"-","in":"Apr","on":"18","at":"2:00s","_save":"1:00","letter":"S"},{"name":"Poland","_from":"1949","_to":"only","type":"-","in":"Apr","on":"10","at":"2:00s","_save":"1:00","letter":"S"},{"name":"Poland","_from":"1957","_to":"only","type":"-","in":"Jun","on":"2","at":"1:00s","_save":"1:00","letter":"S"},{"name":"Poland","_from":"1957","_to":"1958","type":"-","in":"Sep","on":"lastSun","at":"1:00s","_save":"0","letter":"-"},{"name":"Poland","_from":"1958","_to":"only","type":"-","in":"Mar","on":"30","at":"1:00s","_save":"1:00","letter":"S"},{"name":"Poland","_from":"1959","_to":"only","type":"-","in":"May","on":"31","at":"1:00s","_save":"1:00","letter":"S"},{"name":"Poland","_from":"1959","_to":"1961","type":"-","in":"Oct","on":"Sun>=1","at":"1:00s","_save":"0","letter":"-"},{"name":"Poland","_from":"1960","_to":"only","type":"-","in":"Apr","on":"3","at":"1:00s","_save":"1:00","letter":"S"},{"name":"Poland","_from":"1961","_to":"1964","type":"-","in":"May","on":"lastSun","at":"1:00s","_save":"1:00","letter":"S"},{"name":"Poland","_from":"1962","_to":"1964","type":"-","in":"Sep","on":"lastSun","at":"1:00s","_save":"0","letter":"-"}],"Port":[{"name":"Port","_from":"1916","_to":"only","type":"-","in":"Jun","on":"17","at":"23:00","_save":"1:00","letter":"S"},{"name":"Port","_from":"1916","_to":"only","type":"-","in":"Nov","on":"1","at":"1:00","_save":"0","letter":"-"},{"name":"Port","_from":"1917","_to":"only","type":"-","in":"Feb","on":"28","at":"23:00s","_save":"1:00","letter":"S"},{"name":"Port","_from":"1917","_to":"1921","type":"-","in":"Oct","on":"14","at":"23:00s","_save":"0","letter":"-"},{"name":"Port","_from":"1918","_to":"only","type":"-","in":"Mar","on":"1","at":"23:00s","_save":"1:00","letter":"S"},{"name":"Port","_from":"1919","_to":"only","type":"-","in":"Feb","on":"28","at":"23:00s","_save":"1:00","letter":"S"},{"name":"Port","_from":"1920","_to":"only","type":"-","in":"Feb","on":"29","at":"23:00s","_save":"1:00","letter":"S"},{"name":"Port","_from":"1921","_to":"only","type":"-","in":"Feb","on":"28","at":"23:00s","_save":"1:00","letter":"S"},{"name":"Port","_from":"1924","_to":"only","type":"-","in":"Apr","on":"16","at":"23:00s","_save":"1:00","letter":"S"},{"name":"Port","_from":"1924","_to":"only","type":"-","in":"Oct","on":"14","at":"23:00s","_save":"0","letter":"-"},{"name":"Port","_from":"1926","_to":"only","type":"-","in":"Apr","on":"17","at":"23:00s","_save":"1:00","letter":"S"},{"name":"Port","_from":"1926","_to":"1929","type":"-","in":"Oct","on":"Sat>=1","at":"23:00s","_save":"0","letter":"-"},{"name":"Port","_from":"1927","_to":"only","type":"-","in":"Apr","on":"9","at":"23:00s","_save":"1:00","letter":"S"},{"name":"Port","_from":"1928","_to":"only","type":"-","in":"Apr","on":"14","at":"23:00s","_save":"1:00","letter":"S"},{"name":"Port","_from":"1929","_to":"only","type":"-","in":"Apr","on":"20","at":"23:00s","_save":"1:00","letter":"S"},{"name":"Port","_from":"1931","_to":"only","type":"-","in":"Apr","on":"18","at":"23:00s","_save":"1:00","letter":"S"},{"name":"Port","_from":"1931","_to":"1932","type":"-","in":"Oct","on":"Sat>=1","at":"23:00s","_save":"0","letter":"-"},{"name":"Port","_from":"1932","_to":"only","type":"-","in":"Apr","on":"2","at":"23:00s","_save":"1:00","letter":"S"},{"name":"Port","_from":"1934","_to":"only","type":"-","in":"Apr","on":"7","at":"23:00s","_save":"1:00","letter":"S"},{"name":"Port","_from":"1934","_to":"1938","type":"-","in":"Oct","on":"Sat>=1","at":"23:00s","_save":"0","letter":"-"},{"name":"Port","_from":"1935","_to":"only","type":"-","in":"Mar","on":"30","at":"23:00s","_save":"1:00","letter":"S"},{"name":"Port","_from":"1936","_to":"only","type":"-","in":"Apr","on":"18","at":"23:00s","_save":"1:00","letter":"S"},{"name":"Port","_from":"1937","_to":"only","type":"-","in":"Apr","on":"3","at":"23:00s","_save":"1:00","letter":"S"},{"name":"Port","_from":"1938","_to":"only","type":"-","in":"Mar","on":"26","at":"23:00s","_save":"1:00","letter":"S"},{"name":"Port","_from":"1939","_to":"only","type":"-","in":"Apr","on":"15","at":"23:00s","_save":"1:00","letter":"S"},{"name":"Port","_from":"1939","_to":"only","type":"-","in":"Nov","on":"18","at":"23:00s","_save":"0","letter":"-"},{"name":"Port","_from":"1940","_to":"only","type":"-","in":"Feb","on":"24","at":"23:00s","_save":"1:00","letter":"S"},{"name":"Port","_from":"1940","_to":"1941","type":"-","in":"Oct","on":"5","at":"23:00s","_save":"0","letter":"-"},{"name":"Port","_from":"1941","_to":"only","type":"-","in":"Apr","on":"5","at":"23:00s","_save":"1:00","letter":"S"},{"name":"Port","_from":"1942","_to":"1945","type":"-","in":"Mar","on":"Sat>=8","at":"23:00s","_save":"1:00","letter":"S"},{"name":"Port","_from":"1942","_to":"only","type":"-","in":"Apr","on":"25","at":"22:00s","_save":"2:00","letter":"M"},{"name":"Port","_from":"1942","_to":"only","type":"-","in":"Aug","on":"15","at":"22:00s","_save":"1:00","letter":"S"},{"name":"Port","_from":"1942","_to":"1945","type":"-","in":"Oct","on":"Sat>=24","at":"23:00s","_save":"0","letter":"-"},{"name":"Port","_from":"1943","_to":"only","type":"-","in":"Apr","on":"17","at":"22:00s","_save":"2:00","letter":"M"},{"name":"Port","_from":"1943","_to":"1945","type":"-","in":"Aug","on":"Sat>=25","at":"22:00s","_save":"1:00","letter":"S"},{"name":"Port","_from":"1944","_to":"1945","type":"-","in":"Apr","on":"Sat>=21","at":"22:00s","_save":"2:00","letter":"M"},{"name":"Port","_from":"1946","_to":"only","type":"-","in":"Apr","on":"Sat>=1","at":"23:00s","_save":"1:00","letter":"S"},{"name":"Port","_from":"1946","_to":"only","type":"-","in":"Oct","on":"Sat>=1","at":"23:00s","_save":"0","letter":"-"},{"name":"Port","_from":"1947","_to":"1949","type":"-","in":"Apr","on":"Sun>=1","at":"2:00s","_save":"1:00","letter":"S"},{"name":"Port","_from":"1947","_to":"1949","type":"-","in":"Oct","on":"Sun>=1","at":"2:00s","_save":"0","letter":"-"},{"name":"Port","_from":"1951","_to":"1965","type":"-","in":"Apr","on":"Sun>=1","at":"2:00s","_save":"1:00","letter":"S"},{"name":"Port","_from":"1951","_to":"1965","type":"-","in":"Oct","on":"Sun>=1","at":"2:00s","_save":"0","letter":"-"},{"name":"Port","_from":"1977","_to":"only","type":"-","in":"Mar","on":"27","at":"0:00s","_save":"1:00","letter":"S"},{"name":"Port","_from":"1977","_to":"only","type":"-","in":"Sep","on":"25","at":"0:00s","_save":"0","letter":"-"},{"name":"Port","_from":"1978","_to":"1979","type":"-","in":"Apr","on":"Sun>=1","at":"0:00s","_save":"1:00","letter":"S"},{"name":"Port","_from":"1978","_to":"only","type":"-","in":"Oct","on":"1","at":"0:00s","_save":"0","letter":"-"},{"name":"Port","_from":"1979","_to":"1982","type":"-","in":"Sep","on":"lastSun","at":"1:00s","_save":"0","letter":"-"},{"name":"Port","_from":"1980","_to":"only","type":"-","in":"Mar","on":"lastSun","at":"0:00s","_save":"1:00","letter":"S"},{"name":"Port","_from":"1981","_to":"1982","type":"-","in":"Mar","on":"lastSun","at":"1:00s","_save":"1:00","letter":"S"},{"name":"Port","_from":"1983","_to":"only","type":"-","in":"Mar","on":"lastSun","at":"2:00s","_save":"1:00","letter":"S"}],"Romania":[{"name":"Romania","_from":"1932","_to":"only","type":"-","in":"May","on":"21","at":"0:00s","_save":"1:00","letter":"S"},{"name":"Romania","_from":"1932","_to":"1939","type":"-","in":"Oct","on":"Sun>=1","at":"0:00s","_save":"0","letter":"-"},{"name":"Romania","_from":"1933","_to":"1939","type":"-","in":"Apr","on":"Sun>=2","at":"0:00s","_save":"1:00","letter":"S"},{"name":"Romania","_from":"1979","_to":"only","type":"-","in":"May","on":"27","at":"0:00","_save":"1:00","letter":"S"},{"name":"Romania","_from":"1979","_to":"only","type":"-","in":"Sep","on":"lastSun","at":"0:00","_save":"0","letter":"-"},{"name":"Romania","_from":"1980","_to":"only","type":"-","in":"Apr","on":"5","at":"23:00","_save":"1:00","letter":"S"},{"name":"Romania","_from":"1980","_to":"only","type":"-","in":"Sep","on":"lastSun","at":"1:00","_save":"0","letter":"-"},{"name":"Romania","_from":"1991","_to":"1993","type":"-","in":"Mar","on":"lastSun","at":"0:00s","_save":"1:00","letter":"S"},{"name":"Romania","_from":"1991","_to":"1993","type":"-","in":"Sep","on":"lastSun","at":"0:00s","_save":"0","letter":"-"}],"Spain":[{"name":"Spain","_from":"1917","_to":"only","type":"-","in":"May","on":"5","at":"23:00s","_save":"1:00","letter":"S"},{"name":"Spain","_from":"1917","_to":"1919","type":"-","in":"Oct","on":"6","at":"23:00s","_save":"0","letter":"-"},{"name":"Spain","_from":"1918","_to":"only","type":"-","in":"Apr","on":"15","at":"23:00s","_save":"1:00","letter":"S"},{"name":"Spain","_from":"1919","_to":"only","type":"-","in":"Apr","on":"5","at":"23:00s","_save":"1:00","letter":"S"},{"name":"Spain","_from":"1924","_to":"only","type":"-","in":"Apr","on":"16","at":"23:00s","_save":"1:00","letter":"S"},{"name":"Spain","_from":"1924","_to":"only","type":"-","in":"Oct","on":"4","at":"23:00s","_save":"0","letter":"-"},{"name":"Spain","_from":"1926","_to":"only","type":"-","in":"Apr","on":"17","at":"23:00s","_save":"1:00","letter":"S"},{"name":"Spain","_from":"1926","_to":"1929","type":"-","in":"Oct","on":"Sat>=1","at":"23:00s","_save":"0","letter":"-"},{"name":"Spain","_from":"1927","_to":"only","type":"-","in":"Apr","on":"9","at":"23:00s","_save":"1:00","letter":"S"},{"name":"Spain","_from":"1928","_to":"only","type":"-","in":"Apr","on":"14","at":"23:00s","_save":"1:00","letter":"S"},{"name":"Spain","_from":"1929","_to":"only","type":"-","in":"Apr","on":"20","at":"23:00s","_save":"1:00","letter":"S"},{"name":"Spain","_from":"1937","_to":"only","type":"-","in":"May","on":"22","at":"23:00s","_save":"1:00","letter":"S"},{"name":"Spain","_from":"1937","_to":"1939","type":"-","in":"Oct","on":"Sat>=1","at":"23:00s","_save":"0","letter":"-"},{"name":"Spain","_from":"1938","_to":"only","type":"-","in":"Mar","on":"22","at":"23:00s","_save":"1:00","letter":"S"},{"name":"Spain","_from":"1939","_to":"only","type":"-","in":"Apr","on":"15","at":"23:00s","_save":"1:00","letter":"S"},{"name":"Spain","_from":"1940","_to":"only","type":"-","in":"Mar","on":"16","at":"23:00s","_save":"1:00","letter":"S"},{"name":"Spain","_from":"1942","_to":"only","type":"-","in":"May","on":"2","at":"22:00s","_save":"2:00","letter":"M"},{"name":"Spain","_from":"1942","_to":"only","type":"-","in":"Sep","on":"1","at":"22:00s","_save":"1:00","letter":"S"},{"name":"Spain","_from":"1943","_to":"1946","type":"-","in":"Apr","on":"Sat>=13","at":"22:00s","_save":"2:00","letter":"M"},{"name":"Spain","_from":"1943","_to":"only","type":"-","in":"Oct","on":"3","at":"22:00s","_save":"1:00","letter":"S"},{"name":"Spain","_from":"1944","_to":"only","type":"-","in":"Oct","on":"10","at":"22:00s","_save":"1:00","letter":"S"},{"name":"Spain","_from":"1945","_to":"only","type":"-","in":"Sep","on":"30","at":"1:00","_save":"1:00","letter":"S"},{"name":"Spain","_from":"1946","_to":"only","type":"-","in":"Sep","on":"30","at":"0:00","_save":"0","letter":"-"},{"name":"Spain","_from":"1949","_to":"only","type":"-","in":"Apr","on":"30","at":"23:00","_save":"1:00","letter":"S"},{"name":"Spain","_from":"1949","_to":"only","type":"-","in":"Sep","on":"30","at":"1:00","_save":"0","letter":"-"},{"name":"Spain","_from":"1974","_to":"1975","type":"-","in":"Apr","on":"Sat>=13","at":"23:00","_save":"1:00","letter":"S"},{"name":"Spain","_from":"1974","_to":"1975","type":"-","in":"Oct","on":"Sun>=1","at":"1:00","_save":"0","letter":"-"},{"name":"Spain","_from":"1976","_to":"only","type":"-","in":"Mar","on":"27","at":"23:00","_save":"1:00","letter":"S"},{"name":"Spain","_from":"1976","_to":"1977","type":"-","in":"Sep","on":"lastSun","at":"1:00","_save":"0","letter":"-"},{"name":"Spain","_from":"1977","_to":"1978","type":"-","in":"Apr","on":"2","at":"23:00","_save":"1:00","letter":"S"},{"name":"Spain","_from":"1978","_to":"only","type":"-","in":"Oct","on":"1","at":"1:00","_save":"0","letter":"-"}],"SpainAfrica":[{"name":"SpainAfrica","_from":"1967","_to":"only","type":"-","in":"Jun","on":"3","at":"12:00","_save":"1:00","letter":"S"},{"name":"SpainAfrica","_from":"1967","_to":"only","type":"-","in":"Oct","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"SpainAfrica","_from":"1974","_to":"only","type":"-","in":"Jun","on":"24","at":"0:00","_save":"1:00","letter":"S"},{"name":"SpainAfrica","_from":"1974","_to":"only","type":"-","in":"Sep","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"SpainAfrica","_from":"1976","_to":"1977","type":"-","in":"May","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"SpainAfrica","_from":"1976","_to":"only","type":"-","in":"Aug","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"SpainAfrica","_from":"1977","_to":"only","type":"-","in":"Sep","on":"28","at":"0:00","_save":"0","letter":"-"},{"name":"SpainAfrica","_from":"1978","_to":"only","type":"-","in":"Jun","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"SpainAfrica","_from":"1978","_to":"only","type":"-","in":"Aug","on":"4","at":"0:00","_save":"0","letter":"-"}],"Swiss":[{"name":"Swiss","_from":"1941","_to":"1942","type":"-","in":"May","on":"Mon>=1","at":"1:00","_save":"1:00","letter":"S"},{"name":"Swiss","_from":"1941","_to":"1942","type":"-","in":"Oct","on":"Mon>=1","at":"2:00","_save":"0","letter":"-"}],"Turkey":[{"name":"Turkey","_from":"1916","_to":"only","type":"-","in":"May","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Turkey","_from":"1916","_to":"only","type":"-","in":"Oct","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Turkey","_from":"1920","_to":"only","type":"-","in":"Mar","on":"28","at":"0:00","_save":"1:00","letter":"S"},{"name":"Turkey","_from":"1920","_to":"only","type":"-","in":"Oct","on":"25","at":"0:00","_save":"0","letter":"-"},{"name":"Turkey","_from":"1921","_to":"only","type":"-","in":"Apr","on":"3","at":"0:00","_save":"1:00","letter":"S"},{"name":"Turkey","_from":"1921","_to":"only","type":"-","in":"Oct","on":"3","at":"0:00","_save":"0","letter":"-"},{"name":"Turkey","_from":"1922","_to":"only","type":"-","in":"Mar","on":"26","at":"0:00","_save":"1:00","letter":"S"},{"name":"Turkey","_from":"1922","_to":"only","type":"-","in":"Oct","on":"8","at":"0:00","_save":"0","letter":"-"},{"name":"Turkey","_from":"1924","_to":"only","type":"-","in":"May","on":"13","at":"0:00","_save":"1:00","letter":"S"},{"name":"Turkey","_from":"1924","_to":"1925","type":"-","in":"Oct","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Turkey","_from":"1925","_to":"only","type":"-","in":"May","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Turkey","_from":"1940","_to":"only","type":"-","in":"Jun","on":"30","at":"0:00","_save":"1:00","letter":"S"},{"name":"Turkey","_from":"1940","_to":"only","type":"-","in":"Oct","on":"5","at":"0:00","_save":"0","letter":"-"},{"name":"Turkey","_from":"1940","_to":"only","type":"-","in":"Dec","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Turkey","_from":"1941","_to":"only","type":"-","in":"Sep","on":"21","at":"0:00","_save":"0","letter":"-"},{"name":"Turkey","_from":"1942","_to":"only","type":"-","in":"Apr","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Turkey","_from":"1942","_to":"only","type":"-","in":"Nov","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Turkey","_from":"1945","_to":"only","type":"-","in":"Apr","on":"2","at":"0:00","_save":"1:00","letter":"S"},{"name":"Turkey","_from":"1945","_to":"only","type":"-","in":"Oct","on":"8","at":"0:00","_save":"0","letter":"-"},{"name":"Turkey","_from":"1946","_to":"only","type":"-","in":"Jun","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Turkey","_from":"1946","_to":"only","type":"-","in":"Oct","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Turkey","_from":"1947","_to":"1948","type":"-","in":"Apr","on":"Sun>=16","at":"0:00","_save":"1:00","letter":"S"},{"name":"Turkey","_from":"1947","_to":"1950","type":"-","in":"Oct","on":"Sun>=2","at":"0:00","_save":"0","letter":"-"},{"name":"Turkey","_from":"1949","_to":"only","type":"-","in":"Apr","on":"10","at":"0:00","_save":"1:00","letter":"S"},{"name":"Turkey","_from":"1950","_to":"only","type":"-","in":"Apr","on":"19","at":"0:00","_save":"1:00","letter":"S"},{"name":"Turkey","_from":"1951","_to":"only","type":"-","in":"Apr","on":"22","at":"0:00","_save":"1:00","letter":"S"},{"name":"Turkey","_from":"1951","_to":"only","type":"-","in":"Oct","on":"8","at":"0:00","_save":"0","letter":"-"},{"name":"Turkey","_from":"1962","_to":"only","type":"-","in":"Jul","on":"15","at":"0:00","_save":"1:00","letter":"S"},{"name":"Turkey","_from":"1962","_to":"only","type":"-","in":"Oct","on":"8","at":"0:00","_save":"0","letter":"-"},{"name":"Turkey","_from":"1964","_to":"only","type":"-","in":"May","on":"15","at":"0:00","_save":"1:00","letter":"S"},{"name":"Turkey","_from":"1964","_to":"only","type":"-","in":"Oct","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Turkey","_from":"1970","_to":"1972","type":"-","in":"May","on":"Sun>=2","at":"0:00","_save":"1:00","letter":"S"},{"name":"Turkey","_from":"1970","_to":"1972","type":"-","in":"Oct","on":"Sun>=2","at":"0:00","_save":"0","letter":"-"},{"name":"Turkey","_from":"1973","_to":"only","type":"-","in":"Jun","on":"3","at":"1:00","_save":"1:00","letter":"S"},{"name":"Turkey","_from":"1973","_to":"only","type":"-","in":"Nov","on":"4","at":"3:00","_save":"0","letter":"-"},{"name":"Turkey","_from":"1974","_to":"only","type":"-","in":"Mar","on":"31","at":"2:00","_save":"1:00","letter":"S"},{"name":"Turkey","_from":"1974","_to":"only","type":"-","in":"Nov","on":"3","at":"5:00","_save":"0","letter":"-"},{"name":"Turkey","_from":"1975","_to":"only","type":"-","in":"Mar","on":"30","at":"0:00","_save":"1:00","letter":"S"},{"name":"Turkey","_from":"1975","_to":"1976","type":"-","in":"Oct","on":"lastSun","at":"0:00","_save":"0","letter":"-"},{"name":"Turkey","_from":"1976","_to":"only","type":"-","in":"Jun","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Turkey","_from":"1977","_to":"1978","type":"-","in":"Apr","on":"Sun>=1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Turkey","_from":"1977","_to":"only","type":"-","in":"Oct","on":"16","at":"0:00","_save":"0","letter":"-"},{"name":"Turkey","_from":"1979","_to":"1980","type":"-","in":"Apr","on":"Sun>=1","at":"3:00","_save":"1:00","letter":"S"},{"name":"Turkey","_from":"1979","_to":"1982","type":"-","in":"Oct","on":"Mon>=11","at":"0:00","_save":"0","letter":"-"},{"name":"Turkey","_from":"1981","_to":"1982","type":"-","in":"Mar","on":"lastSun","at":"3:00","_save":"1:00","letter":"S"},{"name":"Turkey","_from":"1983","_to":"only","type":"-","in":"Jul","on":"31","at":"0:00","_save":"1:00","letter":"S"},{"name":"Turkey","_from":"1983","_to":"only","type":"-","in":"Oct","on":"2","at":"0:00","_save":"0","letter":"-"},{"name":"Turkey","_from":"1985","_to":"only","type":"-","in":"Apr","on":"20","at":"0:00","_save":"1:00","letter":"S"},{"name":"Turkey","_from":"1985","_to":"only","type":"-","in":"Sep","on":"28","at":"0:00","_save":"0","letter":"-"},{"name":"Turkey","_from":"1986","_to":"1990","type":"-","in":"Mar","on":"lastSun","at":"2:00s","_save":"1:00","letter":"S"},{"name":"Turkey","_from":"1986","_to":"1990","type":"-","in":"Sep","on":"lastSun","at":"2:00s","_save":"0","letter":"-"},{"name":"Turkey","_from":"1991","_to":"2006","type":"-","in":"Mar","on":"lastSun","at":"1:00s","_save":"1:00","letter":"S"},{"name":"Turkey","_from":"1991","_to":"1995","type":"-","in":"Sep","on":"lastSun","at":"1:00s","_save":"0","letter":"-"},{"name":"Turkey","_from":"1996","_to":"2006","type":"-","in":"Oct","on":"lastSun","at":"1:00s","_save":"0","letter":"-"}],"US":[{"name":"US","_from":"1918","_to":"1919","type":"-","in":"Mar","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"US","_from":"1918","_to":"1919","type":"-","in":"Oct","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"US","_from":"1942","_to":"only","type":"-","in":"Feb","on":"9","at":"2:00","_save":"1:00","letter":"W"},{"name":"US","_from":"1945","_to":"only","type":"-","in":"Aug","on":"14","at":"23:00u","_save":"1:00","letter":"P"},{"name":"US","_from":"1945","_to":"only","type":"-","in":"Sep","on":"30","at":"2:00","_save":"0","letter":"S"},{"name":"US","_from":"1967","_to":"2006","type":"-","in":"Oct","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"US","_from":"1967","_to":"1973","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"US","_from":"1974","_to":"only","type":"-","in":"Jan","on":"6","at":"2:00","_save":"1:00","letter":"D"},{"name":"US","_from":"1975","_to":"only","type":"-","in":"Feb","on":"23","at":"2:00","_save":"1:00","letter":"D"},{"name":"US","_from":"1976","_to":"1986","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"US","_from":"1987","_to":"2006","type":"-","in":"Apr","on":"Sun>=1","at":"2:00","_save":"1:00","letter":"D"},{"name":"US","_from":"2007","_to":"max","type":"-","in":"Mar","on":"Sun>=8","at":"2:00","_save":"1:00","letter":"D"},{"name":"US","_from":"2007","_to":"max","type":"-","in":"Nov","on":"Sun>=1","at":"2:00","_save":"0","letter":"S"}],"NYC":[{"name":"NYC","_from":"1920","_to":"only","type":"-","in":"Mar","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"NYC","_from":"1920","_to":"only","type":"-","in":"Oct","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"NYC","_from":"1921","_to":"1966","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"NYC","_from":"1921","_to":"1954","type":"-","in":"Sep","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"NYC","_from":"1955","_to":"1966","type":"-","in":"Oct","on":"lastSun","at":"2:00","_save":"0","letter":"S"}],"Chicago":[{"name":"Chicago","_from":"1920","_to":"only","type":"-","in":"Jun","on":"13","at":"2:00","_save":"1:00","letter":"D"},{"name":"Chicago","_from":"1920","_to":"1921","type":"-","in":"Oct","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Chicago","_from":"1921","_to":"only","type":"-","in":"Mar","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"Chicago","_from":"1922","_to":"1966","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"Chicago","_from":"1922","_to":"1954","type":"-","in":"Sep","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Chicago","_from":"1955","_to":"1966","type":"-","in":"Oct","on":"lastSun","at":"2:00","_save":"0","letter":"S"}],"Denver":[{"name":"Denver","_from":"1920","_to":"1921","type":"-","in":"Mar","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"Denver","_from":"1920","_to":"only","type":"-","in":"Oct","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Denver","_from":"1921","_to":"only","type":"-","in":"May","on":"22","at":"2:00","_save":"0","letter":"S"},{"name":"Denver","_from":"1965","_to":"1966","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"Denver","_from":"1965","_to":"1966","type":"-","in":"Oct","on":"lastSun","at":"2:00","_save":"0","letter":"S"}],"CA":[{"name":"CA","_from":"1948","_to":"only","type":"-","in":"Mar","on":"14","at":"2:00","_save":"1:00","letter":"D"},{"name":"CA","_from":"1949","_to":"only","type":"-","in":"Jan","on":"1","at":"2:00","_save":"0","letter":"S"},{"name":"CA","_from":"1950","_to":"1966","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"CA","_from":"1950","_to":"1961","type":"-","in":"Sep","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"CA","_from":"1962","_to":"1966","type":"-","in":"Oct","on":"lastSun","at":"2:00","_save":"0","letter":"S"}],"Indianapolis":[{"name":"Indianapolis","_from":"1941","_to":"only","type":"-","in":"Jun","on":"22","at":"2:00","_save":"1:00","letter":"D"},{"name":"Indianapolis","_from":"1941","_to":"1954","type":"-","in":"Sep","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Indianapolis","_from":"1946","_to":"1954","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"}],"Marengo":[{"name":"Marengo","_from":"1951","_to":"only","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"Marengo","_from":"1951","_to":"only","type":"-","in":"Sep","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Marengo","_from":"1954","_to":"1960","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"Marengo","_from":"1954","_to":"1960","type":"-","in":"Sep","on":"lastSun","at":"2:00","_save":"0","letter":"S"}],"Vincennes":[{"name":"Vincennes","_from":"1946","_to":"only","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"Vincennes","_from":"1946","_to":"only","type":"-","in":"Sep","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Vincennes","_from":"1953","_to":"1954","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"Vincennes","_from":"1953","_to":"1959","type":"-","in":"Sep","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Vincennes","_from":"1955","_to":"only","type":"-","in":"May","on":"1","at":"0:00","_save":"1:00","letter":"D"},{"name":"Vincennes","_from":"1956","_to":"1963","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"Vincennes","_from":"1960","_to":"only","type":"-","in":"Oct","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Vincennes","_from":"1961","_to":"only","type":"-","in":"Sep","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Vincennes","_from":"1962","_to":"1963","type":"-","in":"Oct","on":"lastSun","at":"2:00","_save":"0","letter":"S"}],"Perry":[{"name":"Perry","_from":"1946","_to":"only","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"Perry","_from":"1946","_to":"only","type":"-","in":"Sep","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Perry","_from":"1953","_to":"1954","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"Perry","_from":"1953","_to":"1959","type":"-","in":"Sep","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Perry","_from":"1955","_to":"only","type":"-","in":"May","on":"1","at":"0:00","_save":"1:00","letter":"D"},{"name":"Perry","_from":"1956","_to":"1963","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"Perry","_from":"1960","_to":"only","type":"-","in":"Oct","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Perry","_from":"1961","_to":"only","type":"-","in":"Sep","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Perry","_from":"1962","_to":"1963","type":"-","in":"Oct","on":"lastSun","at":"2:00","_save":"0","letter":"S"}],"Pike":[{"name":"Pike","_from":"1955","_to":"only","type":"-","in":"May","on":"1","at":"0:00","_save":"1:00","letter":"D"},{"name":"Pike","_from":"1955","_to":"1960","type":"-","in":"Sep","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Pike","_from":"1956","_to":"1964","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"Pike","_from":"1961","_to":"1964","type":"-","in":"Oct","on":"lastSun","at":"2:00","_save":"0","letter":"S"}],"Starke":[{"name":"Starke","_from":"1947","_to":"1961","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"Starke","_from":"1947","_to":"1954","type":"-","in":"Sep","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Starke","_from":"1955","_to":"1956","type":"-","in":"Oct","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Starke","_from":"1957","_to":"1958","type":"-","in":"Sep","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Starke","_from":"1959","_to":"1961","type":"-","in":"Oct","on":"lastSun","at":"2:00","_save":"0","letter":"S"}],"Pulaski":[{"name":"Pulaski","_from":"1946","_to":"1960","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"Pulaski","_from":"1946","_to":"1954","type":"-","in":"Sep","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Pulaski","_from":"1955","_to":"1956","type":"-","in":"Oct","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Pulaski","_from":"1957","_to":"1960","type":"-","in":"Sep","on":"lastSun","at":"2:00","_save":"0","letter":"S"}],"Louisville":[{"name":"Louisville","_from":"1921","_to":"only","type":"-","in":"May","on":"1","at":"2:00","_save":"1:00","letter":"D"},{"name":"Louisville","_from":"1921","_to":"only","type":"-","in":"Sep","on":"1","at":"2:00","_save":"0","letter":"S"},{"name":"Louisville","_from":"1941","_to":"1961","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"Louisville","_from":"1941","_to":"only","type":"-","in":"Sep","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Louisville","_from":"1946","_to":"only","type":"-","in":"Jun","on":"2","at":"2:00","_save":"0","letter":"S"},{"name":"Louisville","_from":"1950","_to":"1955","type":"-","in":"Sep","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Louisville","_from":"1956","_to":"1960","type":"-","in":"Oct","on":"lastSun","at":"2:00","_save":"0","letter":"S"}],"Detroit":[{"name":"Detroit","_from":"1948","_to":"only","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"Detroit","_from":"1948","_to":"only","type":"-","in":"Sep","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Detroit","_from":"1967","_to":"only","type":"-","in":"Jun","on":"14","at":"2:00","_save":"1:00","letter":"D"},{"name":"Detroit","_from":"1967","_to":"only","type":"-","in":"Oct","on":"lastSun","at":"2:00","_save":"0","letter":"S"}],"Menominee":[{"name":"Menominee","_from":"1946","_to":"only","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"Menominee","_from":"1946","_to":"only","type":"-","in":"Sep","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Menominee","_from":"1966","_to":"only","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"Menominee","_from":"1966","_to":"only","type":"-","in":"Oct","on":"lastSun","at":"2:00","_save":"0","letter":"S"}],"Canada":[{"name":"Canada","_from":"1918","_to":"only","type":"-","in":"Apr","on":"14","at":"2:00","_save":"1:00","letter":"D"},{"name":"Canada","_from":"1918","_to":"only","type":"-","in":"Oct","on":"27","at":"2:00","_save":"0","letter":"S"},{"name":"Canada","_from":"1942","_to":"only","type":"-","in":"Feb","on":"9","at":"2:00","_save":"1:00","letter":"W"},{"name":"Canada","_from":"1945","_to":"only","type":"-","in":"Aug","on":"14","at":"23:00u","_save":"1:00","letter":"P"},{"name":"Canada","_from":"1945","_to":"only","type":"-","in":"Sep","on":"30","at":"2:00","_save":"0","letter":"S"},{"name":"Canada","_from":"1974","_to":"1986","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"Canada","_from":"1974","_to":"2006","type":"-","in":"Oct","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Canada","_from":"1987","_to":"2006","type":"-","in":"Apr","on":"Sun>=1","at":"2:00","_save":"1:00","letter":"D"},{"name":"Canada","_from":"2007","_to":"max","type":"-","in":"Mar","on":"Sun>=8","at":"2:00","_save":"1:00","letter":"D"},{"name":"Canada","_from":"2007","_to":"max","type":"-","in":"Nov","on":"Sun>=1","at":"2:00","_save":"0","letter":"S"}],"StJohns":[{"name":"StJohns","_from":"1917","_to":"only","type":"-","in":"Apr","on":"8","at":"2:00","_save":"1:00","letter":"D"},{"name":"StJohns","_from":"1917","_to":"only","type":"-","in":"Sep","on":"17","at":"2:00","_save":"0","letter":"S"},{"name":"StJohns","_from":"1919","_to":"only","type":"-","in":"May","on":"5","at":"23:00","_save":"1:00","letter":"D"},{"name":"StJohns","_from":"1919","_to":"only","type":"-","in":"Aug","on":"12","at":"23:00","_save":"0","letter":"S"},{"name":"StJohns","_from":"1920","_to":"1935","type":"-","in":"May","on":"Sun>=1","at":"23:00","_save":"1:00","letter":"D"},{"name":"StJohns","_from":"1920","_to":"1935","type":"-","in":"Oct","on":"lastSun","at":"23:00","_save":"0","letter":"S"},{"name":"StJohns","_from":"1936","_to":"1941","type":"-","in":"May","on":"Mon>=9","at":"0:00","_save":"1:00","letter":"D"},{"name":"StJohns","_from":"1936","_to":"1941","type":"-","in":"Oct","on":"Mon>=2","at":"0:00","_save":"0","letter":"S"},{"name":"StJohns","_from":"1946","_to":"1950","type":"-","in":"May","on":"Sun>=8","at":"2:00","_save":"1:00","letter":"D"},{"name":"StJohns","_from":"1946","_to":"1950","type":"-","in":"Oct","on":"Sun>=2","at":"2:00","_save":"0","letter":"S"},{"name":"StJohns","_from":"1951","_to":"1986","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"StJohns","_from":"1951","_to":"1959","type":"-","in":"Sep","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"StJohns","_from":"1960","_to":"1986","type":"-","in":"Oct","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"StJohns","_from":"1987","_to":"only","type":"-","in":"Apr","on":"Sun>=1","at":"0:01","_save":"1:00","letter":"D"},{"name":"StJohns","_from":"1987","_to":"2006","type":"-","in":"Oct","on":"lastSun","at":"0:01","_save":"0","letter":"S"},{"name":"StJohns","_from":"1988","_to":"only","type":"-","in":"Apr","on":"Sun>=1","at":"0:01","_save":"2:00","letter":"DD"},{"name":"StJohns","_from":"1989","_to":"2006","type":"-","in":"Apr","on":"Sun>=1","at":"0:01","_save":"1:00","letter":"D"},{"name":"StJohns","_from":"2007","_to":"2011","type":"-","in":"Mar","on":"Sun>=8","at":"0:01","_save":"1:00","letter":"D"},{"name":"StJohns","_from":"2007","_to":"2010","type":"-","in":"Nov","on":"Sun>=1","at":"0:01","_save":"0","letter":"S"}],"Halifax":[{"name":"Halifax","_from":"1916","_to":"only","type":"-","in":"Apr","on":"1","at":"0:00","_save":"1:00","letter":"D"},{"name":"Halifax","_from":"1916","_to":"only","type":"-","in":"Oct","on":"1","at":"0:00","_save":"0","letter":"S"},{"name":"Halifax","_from":"1920","_to":"only","type":"-","in":"May","on":"9","at":"0:00","_save":"1:00","letter":"D"},{"name":"Halifax","_from":"1920","_to":"only","type":"-","in":"Aug","on":"29","at":"0:00","_save":"0","letter":"S"},{"name":"Halifax","_from":"1921","_to":"only","type":"-","in":"May","on":"6","at":"0:00","_save":"1:00","letter":"D"},{"name":"Halifax","_from":"1921","_to":"1922","type":"-","in":"Sep","on":"5","at":"0:00","_save":"0","letter":"S"},{"name":"Halifax","_from":"1922","_to":"only","type":"-","in":"Apr","on":"30","at":"0:00","_save":"1:00","letter":"D"},{"name":"Halifax","_from":"1923","_to":"1925","type":"-","in":"May","on":"Sun>=1","at":"0:00","_save":"1:00","letter":"D"},{"name":"Halifax","_from":"1923","_to":"only","type":"-","in":"Sep","on":"4","at":"0:00","_save":"0","letter":"S"},{"name":"Halifax","_from":"1924","_to":"only","type":"-","in":"Sep","on":"15","at":"0:00","_save":"0","letter":"S"},{"name":"Halifax","_from":"1925","_to":"only","type":"-","in":"Sep","on":"28","at":"0:00","_save":"0","letter":"S"},{"name":"Halifax","_from":"1926","_to":"only","type":"-","in":"May","on":"16","at":"0:00","_save":"1:00","letter":"D"},{"name":"Halifax","_from":"1926","_to":"only","type":"-","in":"Sep","on":"13","at":"0:00","_save":"0","letter":"S"},{"name":"Halifax","_from":"1927","_to":"only","type":"-","in":"May","on":"1","at":"0:00","_save":"1:00","letter":"D"},{"name":"Halifax","_from":"1927","_to":"only","type":"-","in":"Sep","on":"26","at":"0:00","_save":"0","letter":"S"},{"name":"Halifax","_from":"1928","_to":"1931","type":"-","in":"May","on":"Sun>=8","at":"0:00","_save":"1:00","letter":"D"},{"name":"Halifax","_from":"1928","_to":"only","type":"-","in":"Sep","on":"9","at":"0:00","_save":"0","letter":"S"},{"name":"Halifax","_from":"1929","_to":"only","type":"-","in":"Sep","on":"3","at":"0:00","_save":"0","letter":"S"},{"name":"Halifax","_from":"1930","_to":"only","type":"-","in":"Sep","on":"15","at":"0:00","_save":"0","letter":"S"},{"name":"Halifax","_from":"1931","_to":"1932","type":"-","in":"Sep","on":"Mon>=24","at":"0:00","_save":"0","letter":"S"},{"name":"Halifax","_from":"1932","_to":"only","type":"-","in":"May","on":"1","at":"0:00","_save":"1:00","letter":"D"},{"name":"Halifax","_from":"1933","_to":"only","type":"-","in":"Apr","on":"30","at":"0:00","_save":"1:00","letter":"D"},{"name":"Halifax","_from":"1933","_to":"only","type":"-","in":"Oct","on":"2","at":"0:00","_save":"0","letter":"S"},{"name":"Halifax","_from":"1934","_to":"only","type":"-","in":"May","on":"20","at":"0:00","_save":"1:00","letter":"D"},{"name":"Halifax","_from":"1934","_to":"only","type":"-","in":"Sep","on":"16","at":"0:00","_save":"0","letter":"S"},{"name":"Halifax","_from":"1935","_to":"only","type":"-","in":"Jun","on":"2","at":"0:00","_save":"1:00","letter":"D"},{"name":"Halifax","_from":"1935","_to":"only","type":"-","in":"Sep","on":"30","at":"0:00","_save":"0","letter":"S"},{"name":"Halifax","_from":"1936","_to":"only","type":"-","in":"Jun","on":"1","at":"0:00","_save":"1:00","letter":"D"},{"name":"Halifax","_from":"1936","_to":"only","type":"-","in":"Sep","on":"14","at":"0:00","_save":"0","letter":"S"},{"name":"Halifax","_from":"1937","_to":"1938","type":"-","in":"May","on":"Sun>=1","at":"0:00","_save":"1:00","letter":"D"},{"name":"Halifax","_from":"1937","_to":"1941","type":"-","in":"Sep","on":"Mon>=24","at":"0:00","_save":"0","letter":"S"},{"name":"Halifax","_from":"1939","_to":"only","type":"-","in":"May","on":"28","at":"0:00","_save":"1:00","letter":"D"},{"name":"Halifax","_from":"1940","_to":"1941","type":"-","in":"May","on":"Sun>=1","at":"0:00","_save":"1:00","letter":"D"},{"name":"Halifax","_from":"1946","_to":"1949","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"Halifax","_from":"1946","_to":"1949","type":"-","in":"Sep","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Halifax","_from":"1951","_to":"1954","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"Halifax","_from":"1951","_to":"1954","type":"-","in":"Sep","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Halifax","_from":"1956","_to":"1959","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"Halifax","_from":"1956","_to":"1959","type":"-","in":"Sep","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Halifax","_from":"1962","_to":"1973","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"Halifax","_from":"1962","_to":"1973","type":"-","in":"Oct","on":"lastSun","at":"2:00","_save":"0","letter":"S"}],"Moncton":[{"name":"Moncton","_from":"1933","_to":"1935","type":"-","in":"Jun","on":"Sun>=8","at":"1:00","_save":"1:00","letter":"D"},{"name":"Moncton","_from":"1933","_to":"1935","type":"-","in":"Sep","on":"Sun>=8","at":"1:00","_save":"0","letter":"S"},{"name":"Moncton","_from":"1936","_to":"1938","type":"-","in":"Jun","on":"Sun>=1","at":"1:00","_save":"1:00","letter":"D"},{"name":"Moncton","_from":"1936","_to":"1938","type":"-","in":"Sep","on":"Sun>=1","at":"1:00","_save":"0","letter":"S"},{"name":"Moncton","_from":"1939","_to":"only","type":"-","in":"May","on":"27","at":"1:00","_save":"1:00","letter":"D"},{"name":"Moncton","_from":"1939","_to":"1941","type":"-","in":"Sep","on":"Sat>=21","at":"1:00","_save":"0","letter":"S"},{"name":"Moncton","_from":"1940","_to":"only","type":"-","in":"May","on":"19","at":"1:00","_save":"1:00","letter":"D"},{"name":"Moncton","_from":"1941","_to":"only","type":"-","in":"May","on":"4","at":"1:00","_save":"1:00","letter":"D"},{"name":"Moncton","_from":"1946","_to":"1972","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"Moncton","_from":"1946","_to":"1956","type":"-","in":"Sep","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Moncton","_from":"1957","_to":"1972","type":"-","in":"Oct","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Moncton","_from":"1993","_to":"2006","type":"-","in":"Apr","on":"Sun>=1","at":"0:01","_save":"1:00","letter":"D"},{"name":"Moncton","_from":"1993","_to":"2006","type":"-","in":"Oct","on":"lastSun","at":"0:01","_save":"0","letter":"S"}],"Mont":[{"name":"Mont","_from":"1917","_to":"only","type":"-","in":"Mar","on":"25","at":"2:00","_save":"1:00","letter":"D"},{"name":"Mont","_from":"1917","_to":"only","type":"-","in":"Apr","on":"24","at":"0:00","_save":"0","letter":"S"},{"name":"Mont","_from":"1919","_to":"only","type":"-","in":"Mar","on":"31","at":"2:30","_save":"1:00","letter":"D"},{"name":"Mont","_from":"1919","_to":"only","type":"-","in":"Oct","on":"25","at":"2:30","_save":"0","letter":"S"},{"name":"Mont","_from":"1920","_to":"only","type":"-","in":"May","on":"2","at":"2:30","_save":"1:00","letter":"D"},{"name":"Mont","_from":"1920","_to":"1922","type":"-","in":"Oct","on":"Sun>=1","at":"2:30","_save":"0","letter":"S"},{"name":"Mont","_from":"1921","_to":"only","type":"-","in":"May","on":"1","at":"2:00","_save":"1:00","letter":"D"},{"name":"Mont","_from":"1922","_to":"only","type":"-","in":"Apr","on":"30","at":"2:00","_save":"1:00","letter":"D"},{"name":"Mont","_from":"1924","_to":"only","type":"-","in":"May","on":"17","at":"2:00","_save":"1:00","letter":"D"},{"name":"Mont","_from":"1924","_to":"1926","type":"-","in":"Sep","on":"lastSun","at":"2:30","_save":"0","letter":"S"},{"name":"Mont","_from":"1925","_to":"1926","type":"-","in":"May","on":"Sun>=1","at":"2:00","_save":"1:00","letter":"D"},{"name":"Mont","_from":"1927","_to":"only","type":"-","in":"May","on":"1","at":"0:00","_save":"1:00","letter":"D"},{"name":"Mont","_from":"1927","_to":"1932","type":"-","in":"Sep","on":"lastSun","at":"0:00","_save":"0","letter":"S"},{"name":"Mont","_from":"1928","_to":"1931","type":"-","in":"Apr","on":"lastSun","at":"0:00","_save":"1:00","letter":"D"},{"name":"Mont","_from":"1932","_to":"only","type":"-","in":"May","on":"1","at":"0:00","_save":"1:00","letter":"D"},{"name":"Mont","_from":"1933","_to":"1940","type":"-","in":"Apr","on":"lastSun","at":"0:00","_save":"1:00","letter":"D"},{"name":"Mont","_from":"1933","_to":"only","type":"-","in":"Oct","on":"1","at":"0:00","_save":"0","letter":"S"},{"name":"Mont","_from":"1934","_to":"1939","type":"-","in":"Sep","on":"lastSun","at":"0:00","_save":"0","letter":"S"},{"name":"Mont","_from":"1946","_to":"1973","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"Mont","_from":"1945","_to":"1948","type":"-","in":"Sep","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Mont","_from":"1949","_to":"1950","type":"-","in":"Oct","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Mont","_from":"1951","_to":"1956","type":"-","in":"Sep","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Mont","_from":"1957","_to":"1973","type":"-","in":"Oct","on":"lastSun","at":"2:00","_save":"0","letter":"S"}],"Toronto":[{"name":"Toronto","_from":"1919","_to":"only","type":"-","in":"Mar","on":"30","at":"23:30","_save":"1:00","letter":"D"},{"name":"Toronto","_from":"1919","_to":"only","type":"-","in":"Oct","on":"26","at":"0:00","_save":"0","letter":"S"},{"name":"Toronto","_from":"1920","_to":"only","type":"-","in":"May","on":"2","at":"2:00","_save":"1:00","letter":"D"},{"name":"Toronto","_from":"1920","_to":"only","type":"-","in":"Sep","on":"26","at":"0:00","_save":"0","letter":"S"},{"name":"Toronto","_from":"1921","_to":"only","type":"-","in":"May","on":"15","at":"2:00","_save":"1:00","letter":"D"},{"name":"Toronto","_from":"1921","_to":"only","type":"-","in":"Sep","on":"15","at":"2:00","_save":"0","letter":"S"},{"name":"Toronto","_from":"1922","_to":"1923","type":"-","in":"May","on":"Sun>=8","at":"2:00","_save":"1:00","letter":"D"},{"name":"Toronto","_from":"1922","_to":"1926","type":"-","in":"Sep","on":"Sun>=15","at":"2:00","_save":"0","letter":"S"},{"name":"Toronto","_from":"1924","_to":"1927","type":"-","in":"May","on":"Sun>=1","at":"2:00","_save":"1:00","letter":"D"},{"name":"Toronto","_from":"1927","_to":"1932","type":"-","in":"Sep","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Toronto","_from":"1928","_to":"1931","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"Toronto","_from":"1932","_to":"only","type":"-","in":"May","on":"1","at":"2:00","_save":"1:00","letter":"D"},{"name":"Toronto","_from":"1933","_to":"1940","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"Toronto","_from":"1933","_to":"only","type":"-","in":"Oct","on":"1","at":"2:00","_save":"0","letter":"S"},{"name":"Toronto","_from":"1934","_to":"1939","type":"-","in":"Sep","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Toronto","_from":"1945","_to":"1946","type":"-","in":"Sep","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Toronto","_from":"1946","_to":"only","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"Toronto","_from":"1947","_to":"1949","type":"-","in":"Apr","on":"lastSun","at":"0:00","_save":"1:00","letter":"D"},{"name":"Toronto","_from":"1947","_to":"1948","type":"-","in":"Sep","on":"lastSun","at":"0:00","_save":"0","letter":"S"},{"name":"Toronto","_from":"1949","_to":"only","type":"-","in":"Nov","on":"lastSun","at":"0:00","_save":"0","letter":"S"},{"name":"Toronto","_from":"1950","_to":"1973","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"Toronto","_from":"1950","_to":"only","type":"-","in":"Nov","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Toronto","_from":"1951","_to":"1956","type":"-","in":"Sep","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Toronto","_from":"1957","_to":"1973","type":"-","in":"Oct","on":"lastSun","at":"2:00","_save":"0","letter":"S"}],"Winn":[{"name":"Winn","_from":"1916","_to":"only","type":"-","in":"Apr","on":"23","at":"0:00","_save":"1:00","letter":"D"},{"name":"Winn","_from":"1916","_to":"only","type":"-","in":"Sep","on":"17","at":"0:00","_save":"0","letter":"S"},{"name":"Winn","_from":"1918","_to":"only","type":"-","in":"Apr","on":"14","at":"2:00","_save":"1:00","letter":"D"},{"name":"Winn","_from":"1918","_to":"only","type":"-","in":"Oct","on":"27","at":"2:00","_save":"0","letter":"S"},{"name":"Winn","_from":"1937","_to":"only","type":"-","in":"May","on":"16","at":"2:00","_save":"1:00","letter":"D"},{"name":"Winn","_from":"1937","_to":"only","type":"-","in":"Sep","on":"26","at":"2:00","_save":"0","letter":"S"},{"name":"Winn","_from":"1942","_to":"only","type":"-","in":"Feb","on":"9","at":"2:00","_save":"1:00","letter":"W"},{"name":"Winn","_from":"1945","_to":"only","type":"-","in":"Aug","on":"14","at":"23:00u","_save":"1:00","letter":"P"},{"name":"Winn","_from":"1945","_to":"only","type":"-","in":"Sep","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Winn","_from":"1946","_to":"only","type":"-","in":"May","on":"12","at":"2:00","_save":"1:00","letter":"D"},{"name":"Winn","_from":"1946","_to":"only","type":"-","in":"Oct","on":"13","at":"2:00","_save":"0","letter":"S"},{"name":"Winn","_from":"1947","_to":"1949","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"Winn","_from":"1947","_to":"1949","type":"-","in":"Sep","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Winn","_from":"1950","_to":"only","type":"-","in":"May","on":"1","at":"2:00","_save":"1:00","letter":"D"},{"name":"Winn","_from":"1950","_to":"only","type":"-","in":"Sep","on":"30","at":"2:00","_save":"0","letter":"S"},{"name":"Winn","_from":"1951","_to":"1960","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"Winn","_from":"1951","_to":"1958","type":"-","in":"Sep","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Winn","_from":"1959","_to":"only","type":"-","in":"Oct","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Winn","_from":"1960","_to":"only","type":"-","in":"Sep","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Winn","_from":"1963","_to":"only","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"Winn","_from":"1963","_to":"only","type":"-","in":"Sep","on":"22","at":"2:00","_save":"0","letter":"S"},{"name":"Winn","_from":"1966","_to":"1986","type":"-","in":"Apr","on":"lastSun","at":"2:00s","_save":"1:00","letter":"D"},{"name":"Winn","_from":"1966","_to":"2005","type":"-","in":"Oct","on":"lastSun","at":"2:00s","_save":"0","letter":"S"},{"name":"Winn","_from":"1987","_to":"2005","type":"-","in":"Apr","on":"Sun>=1","at":"2:00s","_save":"1:00","letter":"D"}],"Regina":[{"name":"Regina","_from":"1918","_to":"only","type":"-","in":"Apr","on":"14","at":"2:00","_save":"1:00","letter":"D"},{"name":"Regina","_from":"1918","_to":"only","type":"-","in":"Oct","on":"27","at":"2:00","_save":"0","letter":"S"},{"name":"Regina","_from":"1930","_to":"1934","type":"-","in":"May","on":"Sun>=1","at":"0:00","_save":"1:00","letter":"D"},{"name":"Regina","_from":"1930","_to":"1934","type":"-","in":"Oct","on":"Sun>=1","at":"0:00","_save":"0","letter":"S"},{"name":"Regina","_from":"1937","_to":"1941","type":"-","in":"Apr","on":"Sun>=8","at":"0:00","_save":"1:00","letter":"D"},{"name":"Regina","_from":"1937","_to":"only","type":"-","in":"Oct","on":"Sun>=8","at":"0:00","_save":"0","letter":"S"},{"name":"Regina","_from":"1938","_to":"only","type":"-","in":"Oct","on":"Sun>=1","at":"0:00","_save":"0","letter":"S"},{"name":"Regina","_from":"1939","_to":"1941","type":"-","in":"Oct","on":"Sun>=8","at":"0:00","_save":"0","letter":"S"},{"name":"Regina","_from":"1942","_to":"only","type":"-","in":"Feb","on":"9","at":"2:00","_save":"1:00","letter":"W"},{"name":"Regina","_from":"1945","_to":"only","type":"-","in":"Aug","on":"14","at":"23:00u","_save":"1:00","letter":"P"},{"name":"Regina","_from":"1945","_to":"only","type":"-","in":"Sep","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Regina","_from":"1946","_to":"only","type":"-","in":"Apr","on":"Sun>=8","at":"2:00","_save":"1:00","letter":"D"},{"name":"Regina","_from":"1946","_to":"only","type":"-","in":"Oct","on":"Sun>=8","at":"2:00","_save":"0","letter":"S"},{"name":"Regina","_from":"1947","_to":"1957","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"Regina","_from":"1947","_to":"1957","type":"-","in":"Sep","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Regina","_from":"1959","_to":"only","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"Regina","_from":"1959","_to":"only","type":"-","in":"Oct","on":"lastSun","at":"2:00","_save":"0","letter":"S"}],"Swift":[{"name":"Swift","_from":"1957","_to":"only","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"Swift","_from":"1957","_to":"only","type":"-","in":"Oct","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Swift","_from":"1959","_to":"1961","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"Swift","_from":"1959","_to":"only","type":"-","in":"Oct","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Swift","_from":"1960","_to":"1961","type":"-","in":"Sep","on":"lastSun","at":"2:00","_save":"0","letter":"S"}],"Edm":[{"name":"Edm","_from":"1918","_to":"1919","type":"-","in":"Apr","on":"Sun>=8","at":"2:00","_save":"1:00","letter":"D"},{"name":"Edm","_from":"1918","_to":"only","type":"-","in":"Oct","on":"27","at":"2:00","_save":"0","letter":"S"},{"name":"Edm","_from":"1919","_to":"only","type":"-","in":"May","on":"27","at":"2:00","_save":"0","letter":"S"},{"name":"Edm","_from":"1920","_to":"1923","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"Edm","_from":"1920","_to":"only","type":"-","in":"Oct","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Edm","_from":"1921","_to":"1923","type":"-","in":"Sep","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Edm","_from":"1942","_to":"only","type":"-","in":"Feb","on":"9","at":"2:00","_save":"1:00","letter":"W"},{"name":"Edm","_from":"1945","_to":"only","type":"-","in":"Aug","on":"14","at":"23:00u","_save":"1:00","letter":"P"},{"name":"Edm","_from":"1945","_to":"only","type":"-","in":"Sep","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Edm","_from":"1947","_to":"only","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"Edm","_from":"1947","_to":"only","type":"-","in":"Sep","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Edm","_from":"1967","_to":"only","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"Edm","_from":"1967","_to":"only","type":"-","in":"Oct","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Edm","_from":"1969","_to":"only","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"Edm","_from":"1969","_to":"only","type":"-","in":"Oct","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Edm","_from":"1972","_to":"1986","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"Edm","_from":"1972","_to":"2006","type":"-","in":"Oct","on":"lastSun","at":"2:00","_save":"0","letter":"S"}],"Vanc":[{"name":"Vanc","_from":"1918","_to":"only","type":"-","in":"Apr","on":"14","at":"2:00","_save":"1:00","letter":"D"},{"name":"Vanc","_from":"1918","_to":"only","type":"-","in":"Oct","on":"27","at":"2:00","_save":"0","letter":"S"},{"name":"Vanc","_from":"1942","_to":"only","type":"-","in":"Feb","on":"9","at":"2:00","_save":"1:00","letter":"W"},{"name":"Vanc","_from":"1945","_to":"only","type":"-","in":"Aug","on":"14","at":"23:00u","_save":"1:00","letter":"P"},{"name":"Vanc","_from":"1945","_to":"only","type":"-","in":"Sep","on":"30","at":"2:00","_save":"0","letter":"S"},{"name":"Vanc","_from":"1946","_to":"1986","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"Vanc","_from":"1946","_to":"only","type":"-","in":"Oct","on":"13","at":"2:00","_save":"0","letter":"S"},{"name":"Vanc","_from":"1947","_to":"1961","type":"-","in":"Sep","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Vanc","_from":"1962","_to":"2006","type":"-","in":"Oct","on":"lastSun","at":"2:00","_save":"0","letter":"S"}],"NT_YK":[{"name":"NT_YK","_from":"1918","_to":"only","type":"-","in":"Apr","on":"14","at":"2:00","_save":"1:00","letter":"D"},{"name":"NT_YK","_from":"1918","_to":"only","type":"-","in":"Oct","on":"27","at":"2:00","_save":"0","letter":"S"},{"name":"NT_YK","_from":"1919","_to":"only","type":"-","in":"May","on":"25","at":"2:00","_save":"1:00","letter":"D"},{"name":"NT_YK","_from":"1919","_to":"only","type":"-","in":"Nov","on":"1","at":"0:00","_save":"0","letter":"S"},{"name":"NT_YK","_from":"1942","_to":"only","type":"-","in":"Feb","on":"9","at":"2:00","_save":"1:00","letter":"W"},{"name":"NT_YK","_from":"1945","_to":"only","type":"-","in":"Aug","on":"14","at":"23:00u","_save":"1:00","letter":"P"},{"name":"NT_YK","_from":"1945","_to":"only","type":"-","in":"Sep","on":"30","at":"2:00","_save":"0","letter":"S"},{"name":"NT_YK","_from":"1965","_to":"only","type":"-","in":"Apr","on":"lastSun","at":"0:00","_save":"2:00","letter":"DD"},{"name":"NT_YK","_from":"1965","_to":"only","type":"-","in":"Oct","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"NT_YK","_from":"1980","_to":"1986","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"NT_YK","_from":"1980","_to":"2006","type":"-","in":"Oct","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"NT_YK","_from":"1987","_to":"2006","type":"-","in":"Apr","on":"Sun>=1","at":"2:00","_save":"1:00","letter":"D"}],"Mexico":[{"name":"Mexico","_from":"1939","_to":"only","type":"-","in":"Feb","on":"5","at":"0:00","_save":"1:00","letter":"D"},{"name":"Mexico","_from":"1939","_to":"only","type":"-","in":"Jun","on":"25","at":"0:00","_save":"0","letter":"S"},{"name":"Mexico","_from":"1940","_to":"only","type":"-","in":"Dec","on":"9","at":"0:00","_save":"1:00","letter":"D"},{"name":"Mexico","_from":"1941","_to":"only","type":"-","in":"Apr","on":"1","at":"0:00","_save":"0","letter":"S"},{"name":"Mexico","_from":"1943","_to":"only","type":"-","in":"Dec","on":"16","at":"0:00","_save":"1:00","letter":"W"},{"name":"Mexico","_from":"1944","_to":"only","type":"-","in":"May","on":"1","at":"0:00","_save":"0","letter":"S"},{"name":"Mexico","_from":"1950","_to":"only","type":"-","in":"Feb","on":"12","at":"0:00","_save":"1:00","letter":"D"},{"name":"Mexico","_from":"1950","_to":"only","type":"-","in":"Jul","on":"30","at":"0:00","_save":"0","letter":"S"},{"name":"Mexico","_from":"1996","_to":"2000","type":"-","in":"Apr","on":"Sun>=1","at":"2:00","_save":"1:00","letter":"D"},{"name":"Mexico","_from":"1996","_to":"2000","type":"-","in":"Oct","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Mexico","_from":"2001","_to":"only","type":"-","in":"May","on":"Sun>=1","at":"2:00","_save":"1:00","letter":"D"},{"name":"Mexico","_from":"2001","_to":"only","type":"-","in":"Sep","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Mexico","_from":"2002","_to":"max","type":"-","in":"Apr","on":"Sun>=1","at":"2:00","_save":"1:00","letter":"D"},{"name":"Mexico","_from":"2002","_to":"max","type":"-","in":"Oct","on":"lastSun","at":"2:00","_save":"0","letter":"S"}],"Bahamas":[{"name":"Bahamas","_from":"1964","_to":"1975","type":"-","in":"Oct","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"Bahamas","_from":"1964","_to":"1975","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"}],"Barb":[{"name":"Barb","_from":"1977","_to":"only","type":"-","in":"Jun","on":"12","at":"2:00","_save":"1:00","letter":"D"},{"name":"Barb","_from":"1977","_to":"1978","type":"-","in":"Oct","on":"Sun>=1","at":"2:00","_save":"0","letter":"S"},{"name":"Barb","_from":"1978","_to":"1980","type":"-","in":"Apr","on":"Sun>=15","at":"2:00","_save":"1:00","letter":"D"},{"name":"Barb","_from":"1979","_to":"only","type":"-","in":"Sep","on":"30","at":"2:00","_save":"0","letter":"S"},{"name":"Barb","_from":"1980","_to":"only","type":"-","in":"Sep","on":"25","at":"2:00","_save":"0","letter":"S"}],"Belize":[{"name":"Belize","_from":"1918","_to":"1942","type":"-","in":"Oct","on":"Sun>=2","at":"0:00","_save":"0:30","letter":"HD"},{"name":"Belize","_from":"1919","_to":"1943","type":"-","in":"Feb","on":"Sun>=9","at":"0:00","_save":"0","letter":"S"},{"name":"Belize","_from":"1973","_to":"only","type":"-","in":"Dec","on":"5","at":"0:00","_save":"1:00","letter":"D"},{"name":"Belize","_from":"1974","_to":"only","type":"-","in":"Feb","on":"9","at":"0:00","_save":"0","letter":"S"},{"name":"Belize","_from":"1982","_to":"only","type":"-","in":"Dec","on":"18","at":"0:00","_save":"1:00","letter":"D"},{"name":"Belize","_from":"1983","_to":"only","type":"-","in":"Feb","on":"12","at":"0:00","_save":"0","letter":"S"}],"CR":[{"name":"CR","_from":"1979","_to":"1980","type":"-","in":"Feb","on":"lastSun","at":"0:00","_save":"1:00","letter":"D"},{"name":"CR","_from":"1979","_to":"1980","type":"-","in":"Jun","on":"Sun>=1","at":"0:00","_save":"0","letter":"S"},{"name":"CR","_from":"1991","_to":"1992","type":"-","in":"Jan","on":"Sat>=15","at":"0:00","_save":"1:00","letter":"D"},{"name":"CR","_from":"1991","_to":"only","type":"-","in":"Jul","on":"1","at":"0:00","_save":"0","letter":"S"},{"name":"CR","_from":"1992","_to":"only","type":"-","in":"Mar","on":"15","at":"0:00","_save":"0","letter":"S"}],"Cuba":[{"name":"Cuba","_from":"1928","_to":"only","type":"-","in":"Jun","on":"10","at":"0:00","_save":"1:00","letter":"D"},{"name":"Cuba","_from":"1928","_to":"only","type":"-","in":"Oct","on":"10","at":"0:00","_save":"0","letter":"S"},{"name":"Cuba","_from":"1940","_to":"1942","type":"-","in":"Jun","on":"Sun>=1","at":"0:00","_save":"1:00","letter":"D"},{"name":"Cuba","_from":"1940","_to":"1942","type":"-","in":"Sep","on":"Sun>=1","at":"0:00","_save":"0","letter":"S"},{"name":"Cuba","_from":"1945","_to":"1946","type":"-","in":"Jun","on":"Sun>=1","at":"0:00","_save":"1:00","letter":"D"},{"name":"Cuba","_from":"1945","_to":"1946","type":"-","in":"Sep","on":"Sun>=1","at":"0:00","_save":"0","letter":"S"},{"name":"Cuba","_from":"1965","_to":"only","type":"-","in":"Jun","on":"1","at":"0:00","_save":"1:00","letter":"D"},{"name":"Cuba","_from":"1965","_to":"only","type":"-","in":"Sep","on":"30","at":"0:00","_save":"0","letter":"S"},{"name":"Cuba","_from":"1966","_to":"only","type":"-","in":"May","on":"29","at":"0:00","_save":"1:00","letter":"D"},{"name":"Cuba","_from":"1966","_to":"only","type":"-","in":"Oct","on":"2","at":"0:00","_save":"0","letter":"S"},{"name":"Cuba","_from":"1967","_to":"only","type":"-","in":"Apr","on":"8","at":"0:00","_save":"1:00","letter":"D"},{"name":"Cuba","_from":"1967","_to":"1968","type":"-","in":"Sep","on":"Sun>=8","at":"0:00","_save":"0","letter":"S"},{"name":"Cuba","_from":"1968","_to":"only","type":"-","in":"Apr","on":"14","at":"0:00","_save":"1:00","letter":"D"},{"name":"Cuba","_from":"1969","_to":"1977","type":"-","in":"Apr","on":"lastSun","at":"0:00","_save":"1:00","letter":"D"},{"name":"Cuba","_from":"1969","_to":"1971","type":"-","in":"Oct","on":"lastSun","at":"0:00","_save":"0","letter":"S"},{"name":"Cuba","_from":"1972","_to":"1974","type":"-","in":"Oct","on":"8","at":"0:00","_save":"0","letter":"S"},{"name":"Cuba","_from":"1975","_to":"1977","type":"-","in":"Oct","on":"lastSun","at":"0:00","_save":"0","letter":"S"},{"name":"Cuba","_from":"1978","_to":"only","type":"-","in":"May","on":"7","at":"0:00","_save":"1:00","letter":"D"},{"name":"Cuba","_from":"1978","_to":"1990","type":"-","in":"Oct","on":"Sun>=8","at":"0:00","_save":"0","letter":"S"},{"name":"Cuba","_from":"1979","_to":"1980","type":"-","in":"Mar","on":"Sun>=15","at":"0:00","_save":"1:00","letter":"D"},{"name":"Cuba","_from":"1981","_to":"1985","type":"-","in":"May","on":"Sun>=5","at":"0:00","_save":"1:00","letter":"D"},{"name":"Cuba","_from":"1986","_to":"1989","type":"-","in":"Mar","on":"Sun>=14","at":"0:00","_save":"1:00","letter":"D"},{"name":"Cuba","_from":"1990","_to":"1997","type":"-","in":"Apr","on":"Sun>=1","at":"0:00","_save":"1:00","letter":"D"},{"name":"Cuba","_from":"1991","_to":"1995","type":"-","in":"Oct","on":"Sun>=8","at":"0:00s","_save":"0","letter":"S"},{"name":"Cuba","_from":"1996","_to":"only","type":"-","in":"Oct","on":"6","at":"0:00s","_save":"0","letter":"S"},{"name":"Cuba","_from":"1997","_to":"only","type":"-","in":"Oct","on":"12","at":"0:00s","_save":"0","letter":"S"},{"name":"Cuba","_from":"1998","_to":"1999","type":"-","in":"Mar","on":"lastSun","at":"0:00s","_save":"1:00","letter":"D"},{"name":"Cuba","_from":"1998","_to":"2003","type":"-","in":"Oct","on":"lastSun","at":"0:00s","_save":"0","letter":"S"},{"name":"Cuba","_from":"2000","_to":"2004","type":"-","in":"Apr","on":"Sun>=1","at":"0:00s","_save":"1:00","letter":"D"},{"name":"Cuba","_from":"2006","_to":"2010","type":"-","in":"Oct","on":"lastSun","at":"0:00s","_save":"0","letter":"S"},{"name":"Cuba","_from":"2007","_to":"only","type":"-","in":"Mar","on":"Sun>=8","at":"0:00s","_save":"1:00","letter":"D"},{"name":"Cuba","_from":"2008","_to":"only","type":"-","in":"Mar","on":"Sun>=15","at":"0:00s","_save":"1:00","letter":"D"},{"name":"Cuba","_from":"2009","_to":"2010","type":"-","in":"Mar","on":"Sun>=8","at":"0:00s","_save":"1:00","letter":"D"},{"name":"Cuba","_from":"2011","_to":"only","type":"-","in":"Mar","on":"Sun>=15","at":"0:00s","_save":"1:00","letter":"D"},{"name":"Cuba","_from":"2011","_to":"only","type":"-","in":"Nov","on":"13","at":"0:00s","_save":"0","letter":"S"},{"name":"Cuba","_from":"2012","_to":"only","type":"-","in":"Apr","on":"1","at":"0:00s","_save":"1:00","letter":"D"},{"name":"Cuba","_from":"2012","_to":"max","type":"-","in":"Nov","on":"Sun>=1","at":"0:00s","_save":"0","letter":"S"},{"name":"Cuba","_from":"2013","_to":"max","type":"-","in":"Mar","on":"Sun>=8","at":"0:00s","_save":"1:00","letter":"D"}],"DR":[{"name":"DR","_from":"1966","_to":"only","type":"-","in":"Oct","on":"30","at":"0:00","_save":"1:00","letter":"D"},{"name":"DR","_from":"1967","_to":"only","type":"-","in":"Feb","on":"28","at":"0:00","_save":"0","letter":"S"},{"name":"DR","_from":"1969","_to":"1973","type":"-","in":"Oct","on":"lastSun","at":"0:00","_save":"0:30","letter":"HD"},{"name":"DR","_from":"1970","_to":"only","type":"-","in":"Feb","on":"21","at":"0:00","_save":"0","letter":"S"},{"name":"DR","_from":"1971","_to":"only","type":"-","in":"Jan","on":"20","at":"0:00","_save":"0","letter":"S"},{"name":"DR","_from":"1972","_to":"1974","type":"-","in":"Jan","on":"21","at":"0:00","_save":"0","letter":"S"}],"Salv":[{"name":"Salv","_from":"1987","_to":"1988","type":"-","in":"May","on":"Sun>=1","at":"0:00","_save":"1:00","letter":"D"},{"name":"Salv","_from":"1987","_to":"1988","type":"-","in":"Sep","on":"lastSun","at":"0:00","_save":"0","letter":"S"}],"Guat":[{"name":"Guat","_from":"1973","_to":"only","type":"-","in":"Nov","on":"25","at":"0:00","_save":"1:00","letter":"D"},{"name":"Guat","_from":"1974","_to":"only","type":"-","in":"Feb","on":"24","at":"0:00","_save":"0","letter":"S"},{"name":"Guat","_from":"1983","_to":"only","type":"-","in":"May","on":"21","at":"0:00","_save":"1:00","letter":"D"},{"name":"Guat","_from":"1983","_to":"only","type":"-","in":"Sep","on":"22","at":"0:00","_save":"0","letter":"S"},{"name":"Guat","_from":"1991","_to":"only","type":"-","in":"Mar","on":"23","at":"0:00","_save":"1:00","letter":"D"},{"name":"Guat","_from":"1991","_to":"only","type":"-","in":"Sep","on":"7","at":"0:00","_save":"0","letter":"S"},{"name":"Guat","_from":"2006","_to":"only","type":"-","in":"Apr","on":"30","at":"0:00","_save":"1:00","letter":"D"},{"name":"Guat","_from":"2006","_to":"only","type":"-","in":"Oct","on":"1","at":"0:00","_save":"0","letter":"S"}],"Haiti":[{"name":"Haiti","_from":"1983","_to":"only","type":"-","in":"May","on":"8","at":"0:00","_save":"1:00","letter":"D"},{"name":"Haiti","_from":"1984","_to":"1987","type":"-","in":"Apr","on":"lastSun","at":"0:00","_save":"1:00","letter":"D"},{"name":"Haiti","_from":"1983","_to":"1987","type":"-","in":"Oct","on":"lastSun","at":"0:00","_save":"0","letter":"S"},{"name":"Haiti","_from":"1988","_to":"1997","type":"-","in":"Apr","on":"Sun>=1","at":"1:00s","_save":"1:00","letter":"D"},{"name":"Haiti","_from":"1988","_to":"1997","type":"-","in":"Oct","on":"lastSun","at":"1:00s","_save":"0","letter":"S"},{"name":"Haiti","_from":"2005","_to":"2006","type":"-","in":"Apr","on":"Sun>=1","at":"0:00","_save":"1:00","letter":"D"},{"name":"Haiti","_from":"2005","_to":"2006","type":"-","in":"Oct","on":"lastSun","at":"0:00","_save":"0","letter":"S"},{"name":"Haiti","_from":"2012","_to":"max","type":"-","in":"Mar","on":"Sun>=8","at":"2:00","_save":"1:00","letter":"D"},{"name":"Haiti","_from":"2012","_to":"max","type":"-","in":"Nov","on":"Sun>=1","at":"2:00","_save":"0","letter":"S"}],"Hond":[{"name":"Hond","_from":"1987","_to":"1988","type":"-","in":"May","on":"Sun>=1","at":"0:00","_save":"1:00","letter":"D"},{"name":"Hond","_from":"1987","_to":"1988","type":"-","in":"Sep","on":"lastSun","at":"0:00","_save":"0","letter":"S"},{"name":"Hond","_from":"2006","_to":"only","type":"-","in":"May","on":"Sun>=1","at":"0:00","_save":"1:00","letter":"D"},{"name":"Hond","_from":"2006","_to":"only","type":"-","in":"Aug","on":"Mon>=1","at":"0:00","_save":"0","letter":"S"}],"Nic":[{"name":"Nic","_from":"1979","_to":"1980","type":"-","in":"Mar","on":"Sun>=16","at":"0:00","_save":"1:00","letter":"D"},{"name":"Nic","_from":"1979","_to":"1980","type":"-","in":"Jun","on":"Mon>=23","at":"0:00","_save":"0","letter":"S"},{"name":"Nic","_from":"2005","_to":"only","type":"-","in":"Apr","on":"10","at":"0:00","_save":"1:00","letter":"D"},{"name":"Nic","_from":"2005","_to":"only","type":"-","in":"Oct","on":"Sun>=1","at":"0:00","_save":"0","letter":"S"},{"name":"Nic","_from":"2006","_to":"only","type":"-","in":"Apr","on":"30","at":"2:00","_save":"1:00","letter":"D"},{"name":"Nic","_from":"2006","_to":"only","type":"-","in":"Oct","on":"Sun>=1","at":"1:00","_save":"0","letter":"S"}],"TC":[{"name":"TC","_from":"1979","_to":"1986","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"TC","_from":"1979","_to":"2006","type":"-","in":"Oct","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"TC","_from":"1987","_to":"2006","type":"-","in":"Apr","on":"Sun>=1","at":"2:00","_save":"1:00","letter":"D"},{"name":"TC","_from":"2007","_to":"max","type":"-","in":"Mar","on":"Sun>=8","at":"2:00","_save":"1:00","letter":"D"},{"name":"TC","_from":"2007","_to":"max","type":"-","in":"Nov","on":"Sun>=1","at":"2:00","_save":"0","letter":"S"}],"sol87":[{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jan","on":"1","at":"12:03:20s","_save":"-0:03:20","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jan","on":"2","at":"12:03:50s","_save":"-0:03:50","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jan","on":"3","at":"12:04:15s","_save":"-0:04:15","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jan","on":"4","at":"12:04:45s","_save":"-0:04:45","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jan","on":"5","at":"12:05:10s","_save":"-0:05:10","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jan","on":"6","at":"12:05:40s","_save":"-0:05:40","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jan","on":"7","at":"12:06:05s","_save":"-0:06:05","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jan","on":"8","at":"12:06:30s","_save":"-0:06:30","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jan","on":"9","at":"12:06:55s","_save":"-0:06:55","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jan","on":"10","at":"12:07:20s","_save":"-0:07:20","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jan","on":"11","at":"12:07:45s","_save":"-0:07:45","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jan","on":"12","at":"12:08:10s","_save":"-0:08:10","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jan","on":"13","at":"12:08:30s","_save":"-0:08:30","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jan","on":"14","at":"12:08:55s","_save":"-0:08:55","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jan","on":"15","at":"12:09:15s","_save":"-0:09:15","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jan","on":"16","at":"12:09:35s","_save":"-0:09:35","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jan","on":"17","at":"12:09:55s","_save":"-0:09:55","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jan","on":"18","at":"12:10:15s","_save":"-0:10:15","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jan","on":"19","at":"12:10:35s","_save":"-0:10:35","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jan","on":"20","at":"12:10:55s","_save":"-0:10:55","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jan","on":"21","at":"12:11:10s","_save":"-0:11:10","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jan","on":"22","at":"12:11:30s","_save":"-0:11:30","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jan","on":"23","at":"12:11:45s","_save":"-0:11:45","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jan","on":"24","at":"12:12:00s","_save":"-0:12:00","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jan","on":"25","at":"12:12:15s","_save":"-0:12:15","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jan","on":"26","at":"12:12:30s","_save":"-0:12:30","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jan","on":"27","at":"12:12:40s","_save":"-0:12:40","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jan","on":"28","at":"12:12:55s","_save":"-0:12:55","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jan","on":"29","at":"12:13:05s","_save":"-0:13:05","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jan","on":"30","at":"12:13:15s","_save":"-0:13:15","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jan","on":"31","at":"12:13:25s","_save":"-0:13:25","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Feb","on":"1","at":"12:13:35s","_save":"-0:13:35","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Feb","on":"2","at":"12:13:40s","_save":"-0:13:40","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Feb","on":"3","at":"12:13:50s","_save":"-0:13:50","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Feb","on":"4","at":"12:13:55s","_save":"-0:13:55","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Feb","on":"5","at":"12:14:00s","_save":"-0:14:00","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Feb","on":"6","at":"12:14:05s","_save":"-0:14:05","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Feb","on":"7","at":"12:14:10s","_save":"-0:14:10","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Feb","on":"8","at":"12:14:10s","_save":"-0:14:10","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Feb","on":"9","at":"12:14:15s","_save":"-0:14:15","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Feb","on":"10","at":"12:14:15s","_save":"-0:14:15","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Feb","on":"11","at":"12:14:15s","_save":"-0:14:15","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Feb","on":"12","at":"12:14:15s","_save":"-0:14:15","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Feb","on":"13","at":"12:14:15s","_save":"-0:14:15","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Feb","on":"14","at":"12:14:15s","_save":"-0:14:15","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Feb","on":"15","at":"12:14:10s","_save":"-0:14:10","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Feb","on":"16","at":"12:14:10s","_save":"-0:14:10","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Feb","on":"17","at":"12:14:05s","_save":"-0:14:05","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Feb","on":"18","at":"12:14:00s","_save":"-0:14:00","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Feb","on":"19","at":"12:13:55s","_save":"-0:13:55","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Feb","on":"20","at":"12:13:50s","_save":"-0:13:50","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Feb","on":"21","at":"12:13:45s","_save":"-0:13:45","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Feb","on":"22","at":"12:13:35s","_save":"-0:13:35","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Feb","on":"23","at":"12:13:30s","_save":"-0:13:30","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Feb","on":"24","at":"12:13:20s","_save":"-0:13:20","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Feb","on":"25","at":"12:13:10s","_save":"-0:13:10","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Feb","on":"26","at":"12:13:00s","_save":"-0:13:00","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Feb","on":"27","at":"12:12:50s","_save":"-0:12:50","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Feb","on":"28","at":"12:12:40s","_save":"-0:12:40","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Mar","on":"1","at":"12:12:30s","_save":"-0:12:30","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Mar","on":"2","at":"12:12:20s","_save":"-0:12:20","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Mar","on":"3","at":"12:12:05s","_save":"-0:12:05","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Mar","on":"4","at":"12:11:55s","_save":"-0:11:55","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Mar","on":"5","at":"12:11:40s","_save":"-0:11:40","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Mar","on":"6","at":"12:11:25s","_save":"-0:11:25","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Mar","on":"7","at":"12:11:15s","_save":"-0:11:15","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Mar","on":"8","at":"12:11:00s","_save":"-0:11:00","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Mar","on":"9","at":"12:10:45s","_save":"-0:10:45","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Mar","on":"10","at":"12:10:30s","_save":"-0:10:30","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Mar","on":"11","at":"12:10:15s","_save":"-0:10:15","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Mar","on":"12","at":"12:09:55s","_save":"-0:09:55","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Mar","on":"13","at":"12:09:40s","_save":"-0:09:40","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Mar","on":"14","at":"12:09:25s","_save":"-0:09:25","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Mar","on":"15","at":"12:09:10s","_save":"-0:09:10","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Mar","on":"16","at":"12:08:50s","_save":"-0:08:50","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Mar","on":"17","at":"12:08:35s","_save":"-0:08:35","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Mar","on":"18","at":"12:08:15s","_save":"-0:08:15","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Mar","on":"19","at":"12:08:00s","_save":"-0:08:00","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Mar","on":"20","at":"12:07:40s","_save":"-0:07:40","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Mar","on":"21","at":"12:07:25s","_save":"-0:07:25","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Mar","on":"22","at":"12:07:05s","_save":"-0:07:05","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Mar","on":"23","at":"12:06:50s","_save":"-0:06:50","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Mar","on":"24","at":"12:06:30s","_save":"-0:06:30","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Mar","on":"25","at":"12:06:10s","_save":"-0:06:10","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Mar","on":"26","at":"12:05:55s","_save":"-0:05:55","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Mar","on":"27","at":"12:05:35s","_save":"-0:05:35","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Mar","on":"28","at":"12:05:15s","_save":"-0:05:15","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Mar","on":"29","at":"12:05:00s","_save":"-0:05:00","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Mar","on":"30","at":"12:04:40s","_save":"-0:04:40","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Mar","on":"31","at":"12:04:25s","_save":"-0:04:25","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Apr","on":"1","at":"12:04:05s","_save":"-0:04:05","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Apr","on":"2","at":"12:03:45s","_save":"-0:03:45","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Apr","on":"3","at":"12:03:30s","_save":"-0:03:30","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Apr","on":"4","at":"12:03:10s","_save":"-0:03:10","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Apr","on":"5","at":"12:02:55s","_save":"-0:02:55","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Apr","on":"6","at":"12:02:35s","_save":"-0:02:35","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Apr","on":"7","at":"12:02:20s","_save":"-0:02:20","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Apr","on":"8","at":"12:02:05s","_save":"-0:02:05","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Apr","on":"9","at":"12:01:45s","_save":"-0:01:45","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Apr","on":"10","at":"12:01:30s","_save":"-0:01:30","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Apr","on":"11","at":"12:01:15s","_save":"-0:01:15","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Apr","on":"12","at":"12:00:55s","_save":"-0:00:55","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Apr","on":"13","at":"12:00:40s","_save":"-0:00:40","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Apr","on":"14","at":"12:00:25s","_save":"-0:00:25","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Apr","on":"15","at":"12:00:10s","_save":"-0:00:10","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Apr","on":"16","at":"11:59:55s","_save":"0:00:05","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Apr","on":"17","at":"11:59:45s","_save":"0:00:15","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Apr","on":"18","at":"11:59:30s","_save":"0:00:30","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Apr","on":"19","at":"11:59:15s","_save":"0:00:45","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Apr","on":"20","at":"11:59:05s","_save":"0:00:55","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Apr","on":"21","at":"11:58:50s","_save":"0:01:10","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Apr","on":"22","at":"11:58:40s","_save":"0:01:20","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Apr","on":"23","at":"11:58:25s","_save":"0:01:35","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Apr","on":"24","at":"11:58:15s","_save":"0:01:45","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Apr","on":"25","at":"11:58:05s","_save":"0:01:55","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Apr","on":"26","at":"11:57:55s","_save":"0:02:05","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Apr","on":"27","at":"11:57:45s","_save":"0:02:15","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Apr","on":"28","at":"11:57:35s","_save":"0:02:25","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Apr","on":"29","at":"11:57:25s","_save":"0:02:35","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Apr","on":"30","at":"11:57:15s","_save":"0:02:45","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"May","on":"1","at":"11:57:10s","_save":"0:02:50","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"May","on":"2","at":"11:57:00s","_save":"0:03:00","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"May","on":"3","at":"11:56:55s","_save":"0:03:05","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"May","on":"4","at":"11:56:50s","_save":"0:03:10","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"May","on":"5","at":"11:56:45s","_save":"0:03:15","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"May","on":"6","at":"11:56:40s","_save":"0:03:20","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"May","on":"7","at":"11:56:35s","_save":"0:03:25","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"May","on":"8","at":"11:56:30s","_save":"0:03:30","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"May","on":"9","at":"11:56:25s","_save":"0:03:35","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"May","on":"10","at":"11:56:25s","_save":"0:03:35","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"May","on":"11","at":"11:56:20s","_save":"0:03:40","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"May","on":"12","at":"11:56:20s","_save":"0:03:40","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"May","on":"13","at":"11:56:20s","_save":"0:03:40","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"May","on":"14","at":"11:56:20s","_save":"0:03:40","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"May","on":"15","at":"11:56:20s","_save":"0:03:40","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"May","on":"16","at":"11:56:20s","_save":"0:03:40","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"May","on":"17","at":"11:56:20s","_save":"0:03:40","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"May","on":"18","at":"11:56:20s","_save":"0:03:40","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"May","on":"19","at":"11:56:25s","_save":"0:03:35","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"May","on":"20","at":"11:56:25s","_save":"0:03:35","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"May","on":"21","at":"11:56:30s","_save":"0:03:30","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"May","on":"22","at":"11:56:35s","_save":"0:03:25","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"May","on":"23","at":"11:56:40s","_save":"0:03:20","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"May","on":"24","at":"11:56:45s","_save":"0:03:15","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"May","on":"25","at":"11:56:50s","_save":"0:03:10","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"May","on":"26","at":"11:56:55s","_save":"0:03:05","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"May","on":"27","at":"11:57:00s","_save":"0:03:00","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"May","on":"28","at":"11:57:10s","_save":"0:02:50","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"May","on":"29","at":"11:57:15s","_save":"0:02:45","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"May","on":"30","at":"11:57:25s","_save":"0:02:35","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"May","on":"31","at":"11:57:30s","_save":"0:02:30","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jun","on":"1","at":"11:57:40s","_save":"0:02:20","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jun","on":"2","at":"11:57:50s","_save":"0:02:10","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jun","on":"3","at":"11:58:00s","_save":"0:02:00","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jun","on":"4","at":"11:58:10s","_save":"0:01:50","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jun","on":"5","at":"11:58:20s","_save":"0:01:40","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jun","on":"6","at":"11:58:30s","_save":"0:01:30","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jun","on":"7","at":"11:58:40s","_save":"0:01:20","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jun","on":"8","at":"11:58:50s","_save":"0:01:10","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jun","on":"9","at":"11:59:05s","_save":"0:00:55","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jun","on":"10","at":"11:59:15s","_save":"0:00:45","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jun","on":"11","at":"11:59:30s","_save":"0:00:30","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jun","on":"12","at":"11:59:40s","_save":"0:00:20","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jun","on":"13","at":"11:59:50s","_save":"0:00:10","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jun","on":"14","at":"12:00:05s","_save":"-0:00:05","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jun","on":"15","at":"12:00:15s","_save":"-0:00:15","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jun","on":"16","at":"12:00:30s","_save":"-0:00:30","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jun","on":"17","at":"12:00:45s","_save":"-0:00:45","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jun","on":"18","at":"12:00:55s","_save":"-0:00:55","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jun","on":"19","at":"12:01:10s","_save":"-0:01:10","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jun","on":"20","at":"12:01:20s","_save":"-0:01:20","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jun","on":"21","at":"12:01:35s","_save":"-0:01:35","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jun","on":"22","at":"12:01:50s","_save":"-0:01:50","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jun","on":"23","at":"12:02:00s","_save":"-0:02:00","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jun","on":"24","at":"12:02:15s","_save":"-0:02:15","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jun","on":"25","at":"12:02:25s","_save":"-0:02:25","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jun","on":"26","at":"12:02:40s","_save":"-0:02:40","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jun","on":"27","at":"12:02:50s","_save":"-0:02:50","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jun","on":"28","at":"12:03:05s","_save":"-0:03:05","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jun","on":"29","at":"12:03:15s","_save":"-0:03:15","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jun","on":"30","at":"12:03:30s","_save":"-0:03:30","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jul","on":"1","at":"12:03:40s","_save":"-0:03:40","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jul","on":"2","at":"12:03:50s","_save":"-0:03:50","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jul","on":"3","at":"12:04:05s","_save":"-0:04:05","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jul","on":"4","at":"12:04:15s","_save":"-0:04:15","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jul","on":"5","at":"12:04:25s","_save":"-0:04:25","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jul","on":"6","at":"12:04:35s","_save":"-0:04:35","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jul","on":"7","at":"12:04:45s","_save":"-0:04:45","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jul","on":"8","at":"12:04:55s","_save":"-0:04:55","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jul","on":"9","at":"12:05:05s","_save":"-0:05:05","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jul","on":"10","at":"12:05:15s","_save":"-0:05:15","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jul","on":"11","at":"12:05:20s","_save":"-0:05:20","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jul","on":"12","at":"12:05:30s","_save":"-0:05:30","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jul","on":"13","at":"12:05:40s","_save":"-0:05:40","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jul","on":"14","at":"12:05:45s","_save":"-0:05:45","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jul","on":"15","at":"12:05:50s","_save":"-0:05:50","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jul","on":"16","at":"12:06:00s","_save":"-0:06:00","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jul","on":"17","at":"12:06:05s","_save":"-0:06:05","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jul","on":"18","at":"12:06:10s","_save":"-0:06:10","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jul","on":"19","at":"12:06:15s","_save":"-0:06:15","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jul","on":"20","at":"12:06:15s","_save":"-0:06:15","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jul","on":"21","at":"12:06:20s","_save":"-0:06:20","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jul","on":"22","at":"12:06:25s","_save":"-0:06:25","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jul","on":"23","at":"12:06:25s","_save":"-0:06:25","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jul","on":"24","at":"12:06:25s","_save":"-0:06:25","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jul","on":"25","at":"12:06:30s","_save":"-0:06:30","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jul","on":"26","at":"12:06:30s","_save":"-0:06:30","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jul","on":"27","at":"12:06:30s","_save":"-0:06:30","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jul","on":"28","at":"12:06:30s","_save":"-0:06:30","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jul","on":"29","at":"12:06:25s","_save":"-0:06:25","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jul","on":"30","at":"12:06:25s","_save":"-0:06:25","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Jul","on":"31","at":"12:06:25s","_save":"-0:06:25","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Aug","on":"1","at":"12:06:20s","_save":"-0:06:20","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Aug","on":"2","at":"12:06:15s","_save":"-0:06:15","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Aug","on":"3","at":"12:06:10s","_save":"-0:06:10","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Aug","on":"4","at":"12:06:05s","_save":"-0:06:05","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Aug","on":"5","at":"12:06:00s","_save":"-0:06:00","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Aug","on":"6","at":"12:05:55s","_save":"-0:05:55","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Aug","on":"7","at":"12:05:50s","_save":"-0:05:50","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Aug","on":"8","at":"12:05:40s","_save":"-0:05:40","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Aug","on":"9","at":"12:05:35s","_save":"-0:05:35","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Aug","on":"10","at":"12:05:25s","_save":"-0:05:25","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Aug","on":"11","at":"12:05:15s","_save":"-0:05:15","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Aug","on":"12","at":"12:05:05s","_save":"-0:05:05","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Aug","on":"13","at":"12:04:55s","_save":"-0:04:55","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Aug","on":"14","at":"12:04:45s","_save":"-0:04:45","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Aug","on":"15","at":"12:04:35s","_save":"-0:04:35","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Aug","on":"16","at":"12:04:25s","_save":"-0:04:25","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Aug","on":"17","at":"12:04:10s","_save":"-0:04:10","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Aug","on":"18","at":"12:04:00s","_save":"-0:04:00","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Aug","on":"19","at":"12:03:45s","_save":"-0:03:45","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Aug","on":"20","at":"12:03:30s","_save":"-0:03:30","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Aug","on":"21","at":"12:03:15s","_save":"-0:03:15","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Aug","on":"22","at":"12:03:00s","_save":"-0:03:00","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Aug","on":"23","at":"12:02:45s","_save":"-0:02:45","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Aug","on":"24","at":"12:02:30s","_save":"-0:02:30","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Aug","on":"25","at":"12:02:15s","_save":"-0:02:15","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Aug","on":"26","at":"12:02:00s","_save":"-0:02:00","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Aug","on":"27","at":"12:01:40s","_save":"-0:01:40","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Aug","on":"28","at":"12:01:25s","_save":"-0:01:25","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Aug","on":"29","at":"12:01:05s","_save":"-0:01:05","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Aug","on":"30","at":"12:00:50s","_save":"-0:00:50","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Aug","on":"31","at":"12:00:30s","_save":"-0:00:30","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Sep","on":"1","at":"12:00:10s","_save":"-0:00:10","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Sep","on":"2","at":"11:59:50s","_save":"0:00:10","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Sep","on":"3","at":"11:59:35s","_save":"0:00:25","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Sep","on":"4","at":"11:59:15s","_save":"0:00:45","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Sep","on":"5","at":"11:58:55s","_save":"0:01:05","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Sep","on":"6","at":"11:58:35s","_save":"0:01:25","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Sep","on":"7","at":"11:58:15s","_save":"0:01:45","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Sep","on":"8","at":"11:57:55s","_save":"0:02:05","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Sep","on":"9","at":"11:57:30s","_save":"0:02:30","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Sep","on":"10","at":"11:57:10s","_save":"0:02:50","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Sep","on":"11","at":"11:56:50s","_save":"0:03:10","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Sep","on":"12","at":"11:56:30s","_save":"0:03:30","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Sep","on":"13","at":"11:56:10s","_save":"0:03:50","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Sep","on":"14","at":"11:55:45s","_save":"0:04:15","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Sep","on":"15","at":"11:55:25s","_save":"0:04:35","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Sep","on":"16","at":"11:55:05s","_save":"0:04:55","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Sep","on":"17","at":"11:54:45s","_save":"0:05:15","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Sep","on":"18","at":"11:54:20s","_save":"0:05:40","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Sep","on":"19","at":"11:54:00s","_save":"0:06:00","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Sep","on":"20","at":"11:53:40s","_save":"0:06:20","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Sep","on":"21","at":"11:53:15s","_save":"0:06:45","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Sep","on":"22","at":"11:52:55s","_save":"0:07:05","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Sep","on":"23","at":"11:52:35s","_save":"0:07:25","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Sep","on":"24","at":"11:52:15s","_save":"0:07:45","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Sep","on":"25","at":"11:51:55s","_save":"0:08:05","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Sep","on":"26","at":"11:51:35s","_save":"0:08:25","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Sep","on":"27","at":"11:51:10s","_save":"0:08:50","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Sep","on":"28","at":"11:50:50s","_save":"0:09:10","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Sep","on":"29","at":"11:50:30s","_save":"0:09:30","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Sep","on":"30","at":"11:50:10s","_save":"0:09:50","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Oct","on":"1","at":"11:49:50s","_save":"0:10:10","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Oct","on":"2","at":"11:49:35s","_save":"0:10:25","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Oct","on":"3","at":"11:49:15s","_save":"0:10:45","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Oct","on":"4","at":"11:48:55s","_save":"0:11:05","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Oct","on":"5","at":"11:48:35s","_save":"0:11:25","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Oct","on":"6","at":"11:48:20s","_save":"0:11:40","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Oct","on":"7","at":"11:48:00s","_save":"0:12:00","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Oct","on":"8","at":"11:47:45s","_save":"0:12:15","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Oct","on":"9","at":"11:47:25s","_save":"0:12:35","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Oct","on":"10","at":"11:47:10s","_save":"0:12:50","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Oct","on":"11","at":"11:46:55s","_save":"0:13:05","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Oct","on":"12","at":"11:46:40s","_save":"0:13:20","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Oct","on":"13","at":"11:46:25s","_save":"0:13:35","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Oct","on":"14","at":"11:46:10s","_save":"0:13:50","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Oct","on":"15","at":"11:45:55s","_save":"0:14:05","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Oct","on":"16","at":"11:45:45s","_save":"0:14:15","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Oct","on":"17","at":"11:45:30s","_save":"0:14:30","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Oct","on":"18","at":"11:45:20s","_save":"0:14:40","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Oct","on":"19","at":"11:45:05s","_save":"0:14:55","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Oct","on":"20","at":"11:44:55s","_save":"0:15:05","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Oct","on":"21","at":"11:44:45s","_save":"0:15:15","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Oct","on":"22","at":"11:44:35s","_save":"0:15:25","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Oct","on":"23","at":"11:44:25s","_save":"0:15:35","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Oct","on":"24","at":"11:44:20s","_save":"0:15:40","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Oct","on":"25","at":"11:44:10s","_save":"0:15:50","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Oct","on":"26","at":"11:44:05s","_save":"0:15:55","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Oct","on":"27","at":"11:43:55s","_save":"0:16:05","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Oct","on":"28","at":"11:43:50s","_save":"0:16:10","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Oct","on":"29","at":"11:43:45s","_save":"0:16:15","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Oct","on":"30","at":"11:43:45s","_save":"0:16:15","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Oct","on":"31","at":"11:43:40s","_save":"0:16:20","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Nov","on":"1","at":"11:43:40s","_save":"0:16:20","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Nov","on":"2","at":"11:43:35s","_save":"0:16:25","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Nov","on":"3","at":"11:43:35s","_save":"0:16:25","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Nov","on":"4","at":"11:43:35s","_save":"0:16:25","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Nov","on":"5","at":"11:43:35s","_save":"0:16:25","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Nov","on":"6","at":"11:43:40s","_save":"0:16:20","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Nov","on":"7","at":"11:43:40s","_save":"0:16:20","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Nov","on":"8","at":"11:43:45s","_save":"0:16:15","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Nov","on":"9","at":"11:43:50s","_save":"0:16:10","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Nov","on":"10","at":"11:43:55s","_save":"0:16:05","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Nov","on":"11","at":"11:44:00s","_save":"0:16:00","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Nov","on":"12","at":"11:44:05s","_save":"0:15:55","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Nov","on":"13","at":"11:44:15s","_save":"0:15:45","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Nov","on":"14","at":"11:44:20s","_save":"0:15:40","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Nov","on":"15","at":"11:44:30s","_save":"0:15:30","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Nov","on":"16","at":"11:44:40s","_save":"0:15:20","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Nov","on":"17","at":"11:44:50s","_save":"0:15:10","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Nov","on":"18","at":"11:45:05s","_save":"0:14:55","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Nov","on":"19","at":"11:45:15s","_save":"0:14:45","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Nov","on":"20","at":"11:45:30s","_save":"0:14:30","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Nov","on":"21","at":"11:45:45s","_save":"0:14:15","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Nov","on":"22","at":"11:46:00s","_save":"0:14:00","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Nov","on":"23","at":"11:46:15s","_save":"0:13:45","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Nov","on":"24","at":"11:46:30s","_save":"0:13:30","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Nov","on":"25","at":"11:46:50s","_save":"0:13:10","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Nov","on":"26","at":"11:47:10s","_save":"0:12:50","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Nov","on":"27","at":"11:47:25s","_save":"0:12:35","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Nov","on":"28","at":"11:47:45s","_save":"0:12:15","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Nov","on":"29","at":"11:48:05s","_save":"0:11:55","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Nov","on":"30","at":"11:48:30s","_save":"0:11:30","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Dec","on":"1","at":"11:48:50s","_save":"0:11:10","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Dec","on":"2","at":"11:49:10s","_save":"0:10:50","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Dec","on":"3","at":"11:49:35s","_save":"0:10:25","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Dec","on":"4","at":"11:50:00s","_save":"0:10:00","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Dec","on":"5","at":"11:50:25s","_save":"0:09:35","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Dec","on":"6","at":"11:50:50s","_save":"0:09:10","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Dec","on":"7","at":"11:51:15s","_save":"0:08:45","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Dec","on":"8","at":"11:51:40s","_save":"0:08:20","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Dec","on":"9","at":"11:52:05s","_save":"0:07:55","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Dec","on":"10","at":"11:52:30s","_save":"0:07:30","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Dec","on":"11","at":"11:53:00s","_save":"0:07:00","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Dec","on":"12","at":"11:53:25s","_save":"0:06:35","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Dec","on":"13","at":"11:53:55s","_save":"0:06:05","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Dec","on":"14","at":"11:54:25s","_save":"0:05:35","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Dec","on":"15","at":"11:54:50s","_save":"0:05:10","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Dec","on":"16","at":"11:55:20s","_save":"0:04:40","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Dec","on":"17","at":"11:55:50s","_save":"0:04:10","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Dec","on":"18","at":"11:56:20s","_save":"0:03:40","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Dec","on":"19","at":"11:56:50s","_save":"0:03:10","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Dec","on":"20","at":"11:57:20s","_save":"0:02:40","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Dec","on":"21","at":"11:57:50s","_save":"0:02:10","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Dec","on":"22","at":"11:58:20s","_save":"0:01:40","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Dec","on":"23","at":"11:58:50s","_save":"0:01:10","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Dec","on":"24","at":"11:59:20s","_save":"0:00:40","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Dec","on":"25","at":"11:59:50s","_save":"0:00:10","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Dec","on":"26","at":"12:00:20s","_save":"-0:00:20","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Dec","on":"27","at":"12:00:45s","_save":"-0:00:45","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Dec","on":"28","at":"12:01:15s","_save":"-0:01:15","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Dec","on":"29","at":"12:01:45s","_save":"-0:01:45","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Dec","on":"30","at":"12:02:15s","_save":"-0:02:15","letter":"-"},{"name":"sol87","_from":"1987","_to":"only","type":"-","in":"Dec","on":"31","at":"12:02:45s","_save":"-0:02:45","letter":"-"}],"sol88":[{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jan","on":"1","at":"12:03:15s","_save":"-0:03:15","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jan","on":"2","at":"12:03:40s","_save":"-0:03:40","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jan","on":"3","at":"12:04:10s","_save":"-0:04:10","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jan","on":"4","at":"12:04:40s","_save":"-0:04:40","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jan","on":"5","at":"12:05:05s","_save":"-0:05:05","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jan","on":"6","at":"12:05:30s","_save":"-0:05:30","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jan","on":"7","at":"12:06:00s","_save":"-0:06:00","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jan","on":"8","at":"12:06:25s","_save":"-0:06:25","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jan","on":"9","at":"12:06:50s","_save":"-0:06:50","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jan","on":"10","at":"12:07:15s","_save":"-0:07:15","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jan","on":"11","at":"12:07:40s","_save":"-0:07:40","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jan","on":"12","at":"12:08:05s","_save":"-0:08:05","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jan","on":"13","at":"12:08:25s","_save":"-0:08:25","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jan","on":"14","at":"12:08:50s","_save":"-0:08:50","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jan","on":"15","at":"12:09:10s","_save":"-0:09:10","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jan","on":"16","at":"12:09:30s","_save":"-0:09:30","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jan","on":"17","at":"12:09:50s","_save":"-0:09:50","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jan","on":"18","at":"12:10:10s","_save":"-0:10:10","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jan","on":"19","at":"12:10:30s","_save":"-0:10:30","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jan","on":"20","at":"12:10:50s","_save":"-0:10:50","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jan","on":"21","at":"12:11:05s","_save":"-0:11:05","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jan","on":"22","at":"12:11:25s","_save":"-0:11:25","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jan","on":"23","at":"12:11:40s","_save":"-0:11:40","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jan","on":"24","at":"12:11:55s","_save":"-0:11:55","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jan","on":"25","at":"12:12:10s","_save":"-0:12:10","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jan","on":"26","at":"12:12:25s","_save":"-0:12:25","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jan","on":"27","at":"12:12:40s","_save":"-0:12:40","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jan","on":"28","at":"12:12:50s","_save":"-0:12:50","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jan","on":"29","at":"12:13:00s","_save":"-0:13:00","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jan","on":"30","at":"12:13:10s","_save":"-0:13:10","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jan","on":"31","at":"12:13:20s","_save":"-0:13:20","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Feb","on":"1","at":"12:13:30s","_save":"-0:13:30","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Feb","on":"2","at":"12:13:40s","_save":"-0:13:40","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Feb","on":"3","at":"12:13:45s","_save":"-0:13:45","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Feb","on":"4","at":"12:13:55s","_save":"-0:13:55","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Feb","on":"5","at":"12:14:00s","_save":"-0:14:00","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Feb","on":"6","at":"12:14:05s","_save":"-0:14:05","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Feb","on":"7","at":"12:14:10s","_save":"-0:14:10","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Feb","on":"8","at":"12:14:10s","_save":"-0:14:10","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Feb","on":"9","at":"12:14:15s","_save":"-0:14:15","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Feb","on":"10","at":"12:14:15s","_save":"-0:14:15","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Feb","on":"11","at":"12:14:15s","_save":"-0:14:15","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Feb","on":"12","at":"12:14:15s","_save":"-0:14:15","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Feb","on":"13","at":"12:14:15s","_save":"-0:14:15","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Feb","on":"14","at":"12:14:15s","_save":"-0:14:15","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Feb","on":"15","at":"12:14:10s","_save":"-0:14:10","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Feb","on":"16","at":"12:14:10s","_save":"-0:14:10","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Feb","on":"17","at":"12:14:05s","_save":"-0:14:05","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Feb","on":"18","at":"12:14:00s","_save":"-0:14:00","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Feb","on":"19","at":"12:13:55s","_save":"-0:13:55","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Feb","on":"20","at":"12:13:50s","_save":"-0:13:50","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Feb","on":"21","at":"12:13:45s","_save":"-0:13:45","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Feb","on":"22","at":"12:13:40s","_save":"-0:13:40","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Feb","on":"23","at":"12:13:30s","_save":"-0:13:30","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Feb","on":"24","at":"12:13:20s","_save":"-0:13:20","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Feb","on":"25","at":"12:13:15s","_save":"-0:13:15","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Feb","on":"26","at":"12:13:05s","_save":"-0:13:05","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Feb","on":"27","at":"12:12:55s","_save":"-0:12:55","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Feb","on":"28","at":"12:12:45s","_save":"-0:12:45","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Feb","on":"29","at":"12:12:30s","_save":"-0:12:30","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Mar","on":"1","at":"12:12:20s","_save":"-0:12:20","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Mar","on":"2","at":"12:12:10s","_save":"-0:12:10","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Mar","on":"3","at":"12:11:55s","_save":"-0:11:55","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Mar","on":"4","at":"12:11:45s","_save":"-0:11:45","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Mar","on":"5","at":"12:11:30s","_save":"-0:11:30","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Mar","on":"6","at":"12:11:15s","_save":"-0:11:15","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Mar","on":"7","at":"12:11:00s","_save":"-0:11:00","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Mar","on":"8","at":"12:10:45s","_save":"-0:10:45","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Mar","on":"9","at":"12:10:30s","_save":"-0:10:30","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Mar","on":"10","at":"12:10:15s","_save":"-0:10:15","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Mar","on":"11","at":"12:10:00s","_save":"-0:10:00","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Mar","on":"12","at":"12:09:45s","_save":"-0:09:45","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Mar","on":"13","at":"12:09:30s","_save":"-0:09:30","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Mar","on":"14","at":"12:09:10s","_save":"-0:09:10","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Mar","on":"15","at":"12:08:55s","_save":"-0:08:55","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Mar","on":"16","at":"12:08:40s","_save":"-0:08:40","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Mar","on":"17","at":"12:08:20s","_save":"-0:08:20","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Mar","on":"18","at":"12:08:05s","_save":"-0:08:05","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Mar","on":"19","at":"12:07:45s","_save":"-0:07:45","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Mar","on":"20","at":"12:07:30s","_save":"-0:07:30","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Mar","on":"21","at":"12:07:10s","_save":"-0:07:10","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Mar","on":"22","at":"12:06:50s","_save":"-0:06:50","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Mar","on":"23","at":"12:06:35s","_save":"-0:06:35","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Mar","on":"24","at":"12:06:15s","_save":"-0:06:15","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Mar","on":"25","at":"12:06:00s","_save":"-0:06:00","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Mar","on":"26","at":"12:05:40s","_save":"-0:05:40","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Mar","on":"27","at":"12:05:20s","_save":"-0:05:20","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Mar","on":"28","at":"12:05:05s","_save":"-0:05:05","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Mar","on":"29","at":"12:04:45s","_save":"-0:04:45","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Mar","on":"30","at":"12:04:25s","_save":"-0:04:25","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Mar","on":"31","at":"12:04:10s","_save":"-0:04:10","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Apr","on":"1","at":"12:03:50s","_save":"-0:03:50","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Apr","on":"2","at":"12:03:35s","_save":"-0:03:35","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Apr","on":"3","at":"12:03:15s","_save":"-0:03:15","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Apr","on":"4","at":"12:03:00s","_save":"-0:03:00","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Apr","on":"5","at":"12:02:40s","_save":"-0:02:40","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Apr","on":"6","at":"12:02:25s","_save":"-0:02:25","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Apr","on":"7","at":"12:02:05s","_save":"-0:02:05","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Apr","on":"8","at":"12:01:50s","_save":"-0:01:50","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Apr","on":"9","at":"12:01:35s","_save":"-0:01:35","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Apr","on":"10","at":"12:01:15s","_save":"-0:01:15","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Apr","on":"11","at":"12:01:00s","_save":"-0:01:00","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Apr","on":"12","at":"12:00:45s","_save":"-0:00:45","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Apr","on":"13","at":"12:00:30s","_save":"-0:00:30","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Apr","on":"14","at":"12:00:15s","_save":"-0:00:15","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Apr","on":"15","at":"12:00:00s","_save":"0:00:00","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Apr","on":"16","at":"11:59:45s","_save":"0:00:15","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Apr","on":"17","at":"11:59:30s","_save":"0:00:30","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Apr","on":"18","at":"11:59:20s","_save":"0:00:40","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Apr","on":"19","at":"11:59:05s","_save":"0:00:55","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Apr","on":"20","at":"11:58:55s","_save":"0:01:05","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Apr","on":"21","at":"11:58:40s","_save":"0:01:20","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Apr","on":"22","at":"11:58:30s","_save":"0:01:30","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Apr","on":"23","at":"11:58:15s","_save":"0:01:45","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Apr","on":"24","at":"11:58:05s","_save":"0:01:55","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Apr","on":"25","at":"11:57:55s","_save":"0:02:05","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Apr","on":"26","at":"11:57:45s","_save":"0:02:15","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Apr","on":"27","at":"11:57:35s","_save":"0:02:25","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Apr","on":"28","at":"11:57:30s","_save":"0:02:30","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Apr","on":"29","at":"11:57:20s","_save":"0:02:40","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Apr","on":"30","at":"11:57:10s","_save":"0:02:50","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"May","on":"1","at":"11:57:05s","_save":"0:02:55","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"May","on":"2","at":"11:56:55s","_save":"0:03:05","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"May","on":"3","at":"11:56:50s","_save":"0:03:10","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"May","on":"4","at":"11:56:45s","_save":"0:03:15","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"May","on":"5","at":"11:56:40s","_save":"0:03:20","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"May","on":"6","at":"11:56:35s","_save":"0:03:25","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"May","on":"7","at":"11:56:30s","_save":"0:03:30","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"May","on":"8","at":"11:56:25s","_save":"0:03:35","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"May","on":"9","at":"11:56:25s","_save":"0:03:35","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"May","on":"10","at":"11:56:20s","_save":"0:03:40","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"May","on":"11","at":"11:56:20s","_save":"0:03:40","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"May","on":"12","at":"11:56:20s","_save":"0:03:40","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"May","on":"13","at":"11:56:20s","_save":"0:03:40","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"May","on":"14","at":"11:56:20s","_save":"0:03:40","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"May","on":"15","at":"11:56:20s","_save":"0:03:40","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"May","on":"16","at":"11:56:20s","_save":"0:03:40","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"May","on":"17","at":"11:56:20s","_save":"0:03:40","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"May","on":"18","at":"11:56:25s","_save":"0:03:35","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"May","on":"19","at":"11:56:25s","_save":"0:03:35","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"May","on":"20","at":"11:56:30s","_save":"0:03:30","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"May","on":"21","at":"11:56:35s","_save":"0:03:25","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"May","on":"22","at":"11:56:40s","_save":"0:03:20","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"May","on":"23","at":"11:56:45s","_save":"0:03:15","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"May","on":"24","at":"11:56:50s","_save":"0:03:10","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"May","on":"25","at":"11:56:55s","_save":"0:03:05","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"May","on":"26","at":"11:57:00s","_save":"0:03:00","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"May","on":"27","at":"11:57:05s","_save":"0:02:55","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"May","on":"28","at":"11:57:15s","_save":"0:02:45","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"May","on":"29","at":"11:57:20s","_save":"0:02:40","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"May","on":"30","at":"11:57:30s","_save":"0:02:30","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"May","on":"31","at":"11:57:40s","_save":"0:02:20","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jun","on":"1","at":"11:57:50s","_save":"0:02:10","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jun","on":"2","at":"11:57:55s","_save":"0:02:05","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jun","on":"3","at":"11:58:05s","_save":"0:01:55","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jun","on":"4","at":"11:58:15s","_save":"0:01:45","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jun","on":"5","at":"11:58:30s","_save":"0:01:30","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jun","on":"6","at":"11:58:40s","_save":"0:01:20","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jun","on":"7","at":"11:58:50s","_save":"0:01:10","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jun","on":"8","at":"11:59:00s","_save":"0:01:00","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jun","on":"9","at":"11:59:15s","_save":"0:00:45","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jun","on":"10","at":"11:59:25s","_save":"0:00:35","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jun","on":"11","at":"11:59:35s","_save":"0:00:25","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jun","on":"12","at":"11:59:50s","_save":"0:00:10","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jun","on":"13","at":"12:00:00s","_save":"0:00:00","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jun","on":"14","at":"12:00:15s","_save":"-0:00:15","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jun","on":"15","at":"12:00:25s","_save":"-0:00:25","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jun","on":"16","at":"12:00:40s","_save":"-0:00:40","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jun","on":"17","at":"12:00:55s","_save":"-0:00:55","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jun","on":"18","at":"12:01:05s","_save":"-0:01:05","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jun","on":"19","at":"12:01:20s","_save":"-0:01:20","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jun","on":"20","at":"12:01:30s","_save":"-0:01:30","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jun","on":"21","at":"12:01:45s","_save":"-0:01:45","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jun","on":"22","at":"12:02:00s","_save":"-0:02:00","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jun","on":"23","at":"12:02:10s","_save":"-0:02:10","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jun","on":"24","at":"12:02:25s","_save":"-0:02:25","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jun","on":"25","at":"12:02:35s","_save":"-0:02:35","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jun","on":"26","at":"12:02:50s","_save":"-0:02:50","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jun","on":"27","at":"12:03:00s","_save":"-0:03:00","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jun","on":"28","at":"12:03:15s","_save":"-0:03:15","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jun","on":"29","at":"12:03:25s","_save":"-0:03:25","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jun","on":"30","at":"12:03:40s","_save":"-0:03:40","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jul","on":"1","at":"12:03:50s","_save":"-0:03:50","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jul","on":"2","at":"12:04:00s","_save":"-0:04:00","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jul","on":"3","at":"12:04:10s","_save":"-0:04:10","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jul","on":"4","at":"12:04:25s","_save":"-0:04:25","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jul","on":"5","at":"12:04:35s","_save":"-0:04:35","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jul","on":"6","at":"12:04:45s","_save":"-0:04:45","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jul","on":"7","at":"12:04:55s","_save":"-0:04:55","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jul","on":"8","at":"12:05:05s","_save":"-0:05:05","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jul","on":"9","at":"12:05:10s","_save":"-0:05:10","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jul","on":"10","at":"12:05:20s","_save":"-0:05:20","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jul","on":"11","at":"12:05:30s","_save":"-0:05:30","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jul","on":"12","at":"12:05:35s","_save":"-0:05:35","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jul","on":"13","at":"12:05:45s","_save":"-0:05:45","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jul","on":"14","at":"12:05:50s","_save":"-0:05:50","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jul","on":"15","at":"12:05:55s","_save":"-0:05:55","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jul","on":"16","at":"12:06:00s","_save":"-0:06:00","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jul","on":"17","at":"12:06:05s","_save":"-0:06:05","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jul","on":"18","at":"12:06:10s","_save":"-0:06:10","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jul","on":"19","at":"12:06:15s","_save":"-0:06:15","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jul","on":"20","at":"12:06:20s","_save":"-0:06:20","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jul","on":"21","at":"12:06:25s","_save":"-0:06:25","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jul","on":"22","at":"12:06:25s","_save":"-0:06:25","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jul","on":"23","at":"12:06:25s","_save":"-0:06:25","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jul","on":"24","at":"12:06:30s","_save":"-0:06:30","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jul","on":"25","at":"12:06:30s","_save":"-0:06:30","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jul","on":"26","at":"12:06:30s","_save":"-0:06:30","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jul","on":"27","at":"12:06:30s","_save":"-0:06:30","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jul","on":"28","at":"12:06:30s","_save":"-0:06:30","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jul","on":"29","at":"12:06:25s","_save":"-0:06:25","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jul","on":"30","at":"12:06:25s","_save":"-0:06:25","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Jul","on":"31","at":"12:06:20s","_save":"-0:06:20","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Aug","on":"1","at":"12:06:15s","_save":"-0:06:15","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Aug","on":"2","at":"12:06:15s","_save":"-0:06:15","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Aug","on":"3","at":"12:06:10s","_save":"-0:06:10","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Aug","on":"4","at":"12:06:05s","_save":"-0:06:05","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Aug","on":"5","at":"12:05:55s","_save":"-0:05:55","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Aug","on":"6","at":"12:05:50s","_save":"-0:05:50","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Aug","on":"7","at":"12:05:45s","_save":"-0:05:45","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Aug","on":"8","at":"12:05:35s","_save":"-0:05:35","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Aug","on":"9","at":"12:05:25s","_save":"-0:05:25","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Aug","on":"10","at":"12:05:20s","_save":"-0:05:20","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Aug","on":"11","at":"12:05:10s","_save":"-0:05:10","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Aug","on":"12","at":"12:05:00s","_save":"-0:05:00","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Aug","on":"13","at":"12:04:50s","_save":"-0:04:50","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Aug","on":"14","at":"12:04:35s","_save":"-0:04:35","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Aug","on":"15","at":"12:04:25s","_save":"-0:04:25","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Aug","on":"16","at":"12:04:15s","_save":"-0:04:15","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Aug","on":"17","at":"12:04:00s","_save":"-0:04:00","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Aug","on":"18","at":"12:03:50s","_save":"-0:03:50","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Aug","on":"19","at":"12:03:35s","_save":"-0:03:35","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Aug","on":"20","at":"12:03:20s","_save":"-0:03:20","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Aug","on":"21","at":"12:03:05s","_save":"-0:03:05","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Aug","on":"22","at":"12:02:50s","_save":"-0:02:50","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Aug","on":"23","at":"12:02:35s","_save":"-0:02:35","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Aug","on":"24","at":"12:02:20s","_save":"-0:02:20","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Aug","on":"25","at":"12:02:00s","_save":"-0:02:00","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Aug","on":"26","at":"12:01:45s","_save":"-0:01:45","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Aug","on":"27","at":"12:01:30s","_save":"-0:01:30","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Aug","on":"28","at":"12:01:10s","_save":"-0:01:10","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Aug","on":"29","at":"12:00:50s","_save":"-0:00:50","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Aug","on":"30","at":"12:00:35s","_save":"-0:00:35","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Aug","on":"31","at":"12:00:15s","_save":"-0:00:15","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Sep","on":"1","at":"11:59:55s","_save":"0:00:05","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Sep","on":"2","at":"11:59:35s","_save":"0:00:25","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Sep","on":"3","at":"11:59:20s","_save":"0:00:40","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Sep","on":"4","at":"11:59:00s","_save":"0:01:00","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Sep","on":"5","at":"11:58:40s","_save":"0:01:20","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Sep","on":"6","at":"11:58:20s","_save":"0:01:40","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Sep","on":"7","at":"11:58:00s","_save":"0:02:00","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Sep","on":"8","at":"11:57:35s","_save":"0:02:25","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Sep","on":"9","at":"11:57:15s","_save":"0:02:45","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Sep","on":"10","at":"11:56:55s","_save":"0:03:05","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Sep","on":"11","at":"11:56:35s","_save":"0:03:25","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Sep","on":"12","at":"11:56:15s","_save":"0:03:45","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Sep","on":"13","at":"11:55:50s","_save":"0:04:10","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Sep","on":"14","at":"11:55:30s","_save":"0:04:30","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Sep","on":"15","at":"11:55:10s","_save":"0:04:50","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Sep","on":"16","at":"11:54:50s","_save":"0:05:10","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Sep","on":"17","at":"11:54:25s","_save":"0:05:35","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Sep","on":"18","at":"11:54:05s","_save":"0:05:55","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Sep","on":"19","at":"11:53:45s","_save":"0:06:15","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Sep","on":"20","at":"11:53:25s","_save":"0:06:35","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Sep","on":"21","at":"11:53:00s","_save":"0:07:00","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Sep","on":"22","at":"11:52:40s","_save":"0:07:20","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Sep","on":"23","at":"11:52:20s","_save":"0:07:40","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Sep","on":"24","at":"11:52:00s","_save":"0:08:00","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Sep","on":"25","at":"11:51:40s","_save":"0:08:20","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Sep","on":"26","at":"11:51:15s","_save":"0:08:45","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Sep","on":"27","at":"11:50:55s","_save":"0:09:05","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Sep","on":"28","at":"11:50:35s","_save":"0:09:25","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Sep","on":"29","at":"11:50:15s","_save":"0:09:45","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Sep","on":"30","at":"11:49:55s","_save":"0:10:05","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Oct","on":"1","at":"11:49:35s","_save":"0:10:25","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Oct","on":"2","at":"11:49:20s","_save":"0:10:40","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Oct","on":"3","at":"11:49:00s","_save":"0:11:00","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Oct","on":"4","at":"11:48:40s","_save":"0:11:20","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Oct","on":"5","at":"11:48:25s","_save":"0:11:35","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Oct","on":"6","at":"11:48:05s","_save":"0:11:55","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Oct","on":"7","at":"11:47:50s","_save":"0:12:10","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Oct","on":"8","at":"11:47:30s","_save":"0:12:30","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Oct","on":"9","at":"11:47:15s","_save":"0:12:45","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Oct","on":"10","at":"11:47:00s","_save":"0:13:00","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Oct","on":"11","at":"11:46:45s","_save":"0:13:15","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Oct","on":"12","at":"11:46:30s","_save":"0:13:30","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Oct","on":"13","at":"11:46:15s","_save":"0:13:45","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Oct","on":"14","at":"11:46:00s","_save":"0:14:00","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Oct","on":"15","at":"11:45:45s","_save":"0:14:15","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Oct","on":"16","at":"11:45:35s","_save":"0:14:25","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Oct","on":"17","at":"11:45:20s","_save":"0:14:40","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Oct","on":"18","at":"11:45:10s","_save":"0:14:50","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Oct","on":"19","at":"11:45:00s","_save":"0:15:00","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Oct","on":"20","at":"11:44:45s","_save":"0:15:15","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Oct","on":"21","at":"11:44:40s","_save":"0:15:20","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Oct","on":"22","at":"11:44:30s","_save":"0:15:30","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Oct","on":"23","at":"11:44:20s","_save":"0:15:40","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Oct","on":"24","at":"11:44:10s","_save":"0:15:50","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Oct","on":"25","at":"11:44:05s","_save":"0:15:55","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Oct","on":"26","at":"11:44:00s","_save":"0:16:00","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Oct","on":"27","at":"11:43:55s","_save":"0:16:05","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Oct","on":"28","at":"11:43:50s","_save":"0:16:10","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Oct","on":"29","at":"11:43:45s","_save":"0:16:15","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Oct","on":"30","at":"11:43:40s","_save":"0:16:20","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Oct","on":"31","at":"11:43:40s","_save":"0:16:20","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Nov","on":"1","at":"11:43:35s","_save":"0:16:25","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Nov","on":"2","at":"11:43:35s","_save":"0:16:25","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Nov","on":"3","at":"11:43:35s","_save":"0:16:25","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Nov","on":"4","at":"11:43:35s","_save":"0:16:25","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Nov","on":"5","at":"11:43:40s","_save":"0:16:20","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Nov","on":"6","at":"11:43:40s","_save":"0:16:20","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Nov","on":"7","at":"11:43:45s","_save":"0:16:15","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Nov","on":"8","at":"11:43:45s","_save":"0:16:15","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Nov","on":"9","at":"11:43:50s","_save":"0:16:10","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Nov","on":"10","at":"11:44:00s","_save":"0:16:00","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Nov","on":"11","at":"11:44:05s","_save":"0:15:55","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Nov","on":"12","at":"11:44:10s","_save":"0:15:50","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Nov","on":"13","at":"11:44:20s","_save":"0:15:40","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Nov","on":"14","at":"11:44:30s","_save":"0:15:30","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Nov","on":"15","at":"11:44:40s","_save":"0:15:20","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Nov","on":"16","at":"11:44:50s","_save":"0:15:10","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Nov","on":"17","at":"11:45:00s","_save":"0:15:00","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Nov","on":"18","at":"11:45:15s","_save":"0:14:45","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Nov","on":"19","at":"11:45:25s","_save":"0:14:35","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Nov","on":"20","at":"11:45:40s","_save":"0:14:20","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Nov","on":"21","at":"11:45:55s","_save":"0:14:05","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Nov","on":"22","at":"11:46:10s","_save":"0:13:50","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Nov","on":"23","at":"11:46:30s","_save":"0:13:30","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Nov","on":"24","at":"11:46:45s","_save":"0:13:15","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Nov","on":"25","at":"11:47:05s","_save":"0:12:55","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Nov","on":"26","at":"11:47:20s","_save":"0:12:40","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Nov","on":"27","at":"11:47:40s","_save":"0:12:20","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Nov","on":"28","at":"11:48:00s","_save":"0:12:00","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Nov","on":"29","at":"11:48:25s","_save":"0:11:35","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Nov","on":"30","at":"11:48:45s","_save":"0:11:15","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Dec","on":"1","at":"11:49:05s","_save":"0:10:55","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Dec","on":"2","at":"11:49:30s","_save":"0:10:30","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Dec","on":"3","at":"11:49:55s","_save":"0:10:05","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Dec","on":"4","at":"11:50:15s","_save":"0:09:45","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Dec","on":"5","at":"11:50:40s","_save":"0:09:20","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Dec","on":"6","at":"11:51:05s","_save":"0:08:55","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Dec","on":"7","at":"11:51:35s","_save":"0:08:25","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Dec","on":"8","at":"11:52:00s","_save":"0:08:00","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Dec","on":"9","at":"11:52:25s","_save":"0:07:35","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Dec","on":"10","at":"11:52:55s","_save":"0:07:05","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Dec","on":"11","at":"11:53:20s","_save":"0:06:40","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Dec","on":"12","at":"11:53:50s","_save":"0:06:10","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Dec","on":"13","at":"11:54:15s","_save":"0:05:45","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Dec","on":"14","at":"11:54:45s","_save":"0:05:15","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Dec","on":"15","at":"11:55:15s","_save":"0:04:45","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Dec","on":"16","at":"11:55:45s","_save":"0:04:15","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Dec","on":"17","at":"11:56:15s","_save":"0:03:45","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Dec","on":"18","at":"11:56:40s","_save":"0:03:20","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Dec","on":"19","at":"11:57:10s","_save":"0:02:50","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Dec","on":"20","at":"11:57:40s","_save":"0:02:20","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Dec","on":"21","at":"11:58:10s","_save":"0:01:50","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Dec","on":"22","at":"11:58:40s","_save":"0:01:20","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Dec","on":"23","at":"11:59:10s","_save":"0:00:50","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Dec","on":"24","at":"11:59:40s","_save":"0:00:20","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Dec","on":"25","at":"12:00:10s","_save":"-0:00:10","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Dec","on":"26","at":"12:00:40s","_save":"-0:00:40","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Dec","on":"27","at":"12:01:10s","_save":"-0:01:10","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Dec","on":"28","at":"12:01:40s","_save":"-0:01:40","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Dec","on":"29","at":"12:02:10s","_save":"-0:02:10","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Dec","on":"30","at":"12:02:35s","_save":"-0:02:35","letter":"-"},{"name":"sol88","_from":"1988","_to":"only","type":"-","in":"Dec","on":"31","at":"12:03:05s","_save":"-0:03:05","letter":"-"}],"sol89":[{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jan","on":"1","at":"12:03:35s","_save":"-0:03:35","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jan","on":"2","at":"12:04:05s","_save":"-0:04:05","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jan","on":"3","at":"12:04:30s","_save":"-0:04:30","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jan","on":"4","at":"12:05:00s","_save":"-0:05:00","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jan","on":"5","at":"12:05:25s","_save":"-0:05:25","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jan","on":"6","at":"12:05:50s","_save":"-0:05:50","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jan","on":"7","at":"12:06:15s","_save":"-0:06:15","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jan","on":"8","at":"12:06:45s","_save":"-0:06:45","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jan","on":"9","at":"12:07:10s","_save":"-0:07:10","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jan","on":"10","at":"12:07:35s","_save":"-0:07:35","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jan","on":"11","at":"12:07:55s","_save":"-0:07:55","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jan","on":"12","at":"12:08:20s","_save":"-0:08:20","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jan","on":"13","at":"12:08:45s","_save":"-0:08:45","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jan","on":"14","at":"12:09:05s","_save":"-0:09:05","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jan","on":"15","at":"12:09:25s","_save":"-0:09:25","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jan","on":"16","at":"12:09:45s","_save":"-0:09:45","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jan","on":"17","at":"12:10:05s","_save":"-0:10:05","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jan","on":"18","at":"12:10:25s","_save":"-0:10:25","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jan","on":"19","at":"12:10:45s","_save":"-0:10:45","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jan","on":"20","at":"12:11:05s","_save":"-0:11:05","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jan","on":"21","at":"12:11:20s","_save":"-0:11:20","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jan","on":"22","at":"12:11:35s","_save":"-0:11:35","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jan","on":"23","at":"12:11:55s","_save":"-0:11:55","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jan","on":"24","at":"12:12:10s","_save":"-0:12:10","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jan","on":"25","at":"12:12:20s","_save":"-0:12:20","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jan","on":"26","at":"12:12:35s","_save":"-0:12:35","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jan","on":"27","at":"12:12:50s","_save":"-0:12:50","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jan","on":"28","at":"12:13:00s","_save":"-0:13:00","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jan","on":"29","at":"12:13:10s","_save":"-0:13:10","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jan","on":"30","at":"12:13:20s","_save":"-0:13:20","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jan","on":"31","at":"12:13:30s","_save":"-0:13:30","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Feb","on":"1","at":"12:13:40s","_save":"-0:13:40","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Feb","on":"2","at":"12:13:45s","_save":"-0:13:45","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Feb","on":"3","at":"12:13:55s","_save":"-0:13:55","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Feb","on":"4","at":"12:14:00s","_save":"-0:14:00","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Feb","on":"5","at":"12:14:05s","_save":"-0:14:05","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Feb","on":"6","at":"12:14:10s","_save":"-0:14:10","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Feb","on":"7","at":"12:14:10s","_save":"-0:14:10","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Feb","on":"8","at":"12:14:15s","_save":"-0:14:15","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Feb","on":"9","at":"12:14:15s","_save":"-0:14:15","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Feb","on":"10","at":"12:14:20s","_save":"-0:14:20","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Feb","on":"11","at":"12:14:20s","_save":"-0:14:20","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Feb","on":"12","at":"12:14:20s","_save":"-0:14:20","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Feb","on":"13","at":"12:14:15s","_save":"-0:14:15","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Feb","on":"14","at":"12:14:15s","_save":"-0:14:15","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Feb","on":"15","at":"12:14:10s","_save":"-0:14:10","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Feb","on":"16","at":"12:14:10s","_save":"-0:14:10","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Feb","on":"17","at":"12:14:05s","_save":"-0:14:05","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Feb","on":"18","at":"12:14:00s","_save":"-0:14:00","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Feb","on":"19","at":"12:13:55s","_save":"-0:13:55","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Feb","on":"20","at":"12:13:50s","_save":"-0:13:50","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Feb","on":"21","at":"12:13:40s","_save":"-0:13:40","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Feb","on":"22","at":"12:13:35s","_save":"-0:13:35","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Feb","on":"23","at":"12:13:25s","_save":"-0:13:25","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Feb","on":"24","at":"12:13:15s","_save":"-0:13:15","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Feb","on":"25","at":"12:13:05s","_save":"-0:13:05","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Feb","on":"26","at":"12:12:55s","_save":"-0:12:55","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Feb","on":"27","at":"12:12:45s","_save":"-0:12:45","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Feb","on":"28","at":"12:12:35s","_save":"-0:12:35","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Mar","on":"1","at":"12:12:25s","_save":"-0:12:25","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Mar","on":"2","at":"12:12:10s","_save":"-0:12:10","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Mar","on":"3","at":"12:12:00s","_save":"-0:12:00","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Mar","on":"4","at":"12:11:45s","_save":"-0:11:45","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Mar","on":"5","at":"12:11:35s","_save":"-0:11:35","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Mar","on":"6","at":"12:11:20s","_save":"-0:11:20","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Mar","on":"7","at":"12:11:05s","_save":"-0:11:05","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Mar","on":"8","at":"12:10:50s","_save":"-0:10:50","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Mar","on":"9","at":"12:10:35s","_save":"-0:10:35","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Mar","on":"10","at":"12:10:20s","_save":"-0:10:20","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Mar","on":"11","at":"12:10:05s","_save":"-0:10:05","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Mar","on":"12","at":"12:09:50s","_save":"-0:09:50","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Mar","on":"13","at":"12:09:30s","_save":"-0:09:30","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Mar","on":"14","at":"12:09:15s","_save":"-0:09:15","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Mar","on":"15","at":"12:09:00s","_save":"-0:09:00","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Mar","on":"16","at":"12:08:40s","_save":"-0:08:40","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Mar","on":"17","at":"12:08:25s","_save":"-0:08:25","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Mar","on":"18","at":"12:08:05s","_save":"-0:08:05","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Mar","on":"19","at":"12:07:50s","_save":"-0:07:50","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Mar","on":"20","at":"12:07:30s","_save":"-0:07:30","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Mar","on":"21","at":"12:07:15s","_save":"-0:07:15","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Mar","on":"22","at":"12:06:55s","_save":"-0:06:55","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Mar","on":"23","at":"12:06:35s","_save":"-0:06:35","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Mar","on":"24","at":"12:06:20s","_save":"-0:06:20","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Mar","on":"25","at":"12:06:00s","_save":"-0:06:00","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Mar","on":"26","at":"12:05:40s","_save":"-0:05:40","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Mar","on":"27","at":"12:05:25s","_save":"-0:05:25","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Mar","on":"28","at":"12:05:05s","_save":"-0:05:05","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Mar","on":"29","at":"12:04:50s","_save":"-0:04:50","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Mar","on":"30","at":"12:04:30s","_save":"-0:04:30","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Mar","on":"31","at":"12:04:10s","_save":"-0:04:10","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Apr","on":"1","at":"12:03:55s","_save":"-0:03:55","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Apr","on":"2","at":"12:03:35s","_save":"-0:03:35","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Apr","on":"3","at":"12:03:20s","_save":"-0:03:20","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Apr","on":"4","at":"12:03:00s","_save":"-0:03:00","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Apr","on":"5","at":"12:02:45s","_save":"-0:02:45","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Apr","on":"6","at":"12:02:25s","_save":"-0:02:25","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Apr","on":"7","at":"12:02:10s","_save":"-0:02:10","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Apr","on":"8","at":"12:01:50s","_save":"-0:01:50","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Apr","on":"9","at":"12:01:35s","_save":"-0:01:35","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Apr","on":"10","at":"12:01:20s","_save":"-0:01:20","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Apr","on":"11","at":"12:01:05s","_save":"-0:01:05","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Apr","on":"12","at":"12:00:50s","_save":"-0:00:50","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Apr","on":"13","at":"12:00:35s","_save":"-0:00:35","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Apr","on":"14","at":"12:00:20s","_save":"-0:00:20","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Apr","on":"15","at":"12:00:05s","_save":"-0:00:05","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Apr","on":"16","at":"11:59:50s","_save":"0:00:10","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Apr","on":"17","at":"11:59:35s","_save":"0:00:25","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Apr","on":"18","at":"11:59:20s","_save":"0:00:40","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Apr","on":"19","at":"11:59:10s","_save":"0:00:50","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Apr","on":"20","at":"11:58:55s","_save":"0:01:05","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Apr","on":"21","at":"11:58:45s","_save":"0:01:15","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Apr","on":"22","at":"11:58:30s","_save":"0:01:30","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Apr","on":"23","at":"11:58:20s","_save":"0:01:40","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Apr","on":"24","at":"11:58:10s","_save":"0:01:50","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Apr","on":"25","at":"11:58:00s","_save":"0:02:00","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Apr","on":"26","at":"11:57:50s","_save":"0:02:10","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Apr","on":"27","at":"11:57:40s","_save":"0:02:20","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Apr","on":"28","at":"11:57:30s","_save":"0:02:30","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Apr","on":"29","at":"11:57:20s","_save":"0:02:40","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Apr","on":"30","at":"11:57:15s","_save":"0:02:45","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"May","on":"1","at":"11:57:05s","_save":"0:02:55","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"May","on":"2","at":"11:57:00s","_save":"0:03:00","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"May","on":"3","at":"11:56:50s","_save":"0:03:10","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"May","on":"4","at":"11:56:45s","_save":"0:03:15","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"May","on":"5","at":"11:56:40s","_save":"0:03:20","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"May","on":"6","at":"11:56:35s","_save":"0:03:25","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"May","on":"7","at":"11:56:30s","_save":"0:03:30","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"May","on":"8","at":"11:56:30s","_save":"0:03:30","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"May","on":"9","at":"11:56:25s","_save":"0:03:35","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"May","on":"10","at":"11:56:25s","_save":"0:03:35","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"May","on":"11","at":"11:56:20s","_save":"0:03:40","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"May","on":"12","at":"11:56:20s","_save":"0:03:40","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"May","on":"13","at":"11:56:20s","_save":"0:03:40","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"May","on":"14","at":"11:56:20s","_save":"0:03:40","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"May","on":"15","at":"11:56:20s","_save":"0:03:40","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"May","on":"16","at":"11:56:20s","_save":"0:03:40","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"May","on":"17","at":"11:56:20s","_save":"0:03:40","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"May","on":"18","at":"11:56:25s","_save":"0:03:35","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"May","on":"19","at":"11:56:25s","_save":"0:03:35","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"May","on":"20","at":"11:56:30s","_save":"0:03:30","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"May","on":"21","at":"11:56:35s","_save":"0:03:25","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"May","on":"22","at":"11:56:35s","_save":"0:03:25","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"May","on":"23","at":"11:56:40s","_save":"0:03:20","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"May","on":"24","at":"11:56:45s","_save":"0:03:15","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"May","on":"25","at":"11:56:55s","_save":"0:03:05","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"May","on":"26","at":"11:57:00s","_save":"0:03:00","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"May","on":"27","at":"11:57:05s","_save":"0:02:55","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"May","on":"28","at":"11:57:15s","_save":"0:02:45","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"May","on":"29","at":"11:57:20s","_save":"0:02:40","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"May","on":"30","at":"11:57:30s","_save":"0:02:30","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"May","on":"31","at":"11:57:35s","_save":"0:02:25","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jun","on":"1","at":"11:57:45s","_save":"0:02:15","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jun","on":"2","at":"11:57:55s","_save":"0:02:05","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jun","on":"3","at":"11:58:05s","_save":"0:01:55","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jun","on":"4","at":"11:58:15s","_save":"0:01:45","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jun","on":"5","at":"11:58:25s","_save":"0:01:35","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jun","on":"6","at":"11:58:35s","_save":"0:01:25","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jun","on":"7","at":"11:58:45s","_save":"0:01:15","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jun","on":"8","at":"11:59:00s","_save":"0:01:00","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jun","on":"9","at":"11:59:10s","_save":"0:00:50","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jun","on":"10","at":"11:59:20s","_save":"0:00:40","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jun","on":"11","at":"11:59:35s","_save":"0:00:25","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jun","on":"12","at":"11:59:45s","_save":"0:00:15","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jun","on":"13","at":"12:00:00s","_save":"0:00:00","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jun","on":"14","at":"12:00:10s","_save":"-0:00:10","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jun","on":"15","at":"12:00:25s","_save":"-0:00:25","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jun","on":"16","at":"12:00:35s","_save":"-0:00:35","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jun","on":"17","at":"12:00:50s","_save":"-0:00:50","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jun","on":"18","at":"12:01:05s","_save":"-0:01:05","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jun","on":"19","at":"12:01:15s","_save":"-0:01:15","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jun","on":"20","at":"12:01:30s","_save":"-0:01:30","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jun","on":"21","at":"12:01:40s","_save":"-0:01:40","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jun","on":"22","at":"12:01:55s","_save":"-0:01:55","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jun","on":"23","at":"12:02:10s","_save":"-0:02:10","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jun","on":"24","at":"12:02:20s","_save":"-0:02:20","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jun","on":"25","at":"12:02:35s","_save":"-0:02:35","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jun","on":"26","at":"12:02:45s","_save":"-0:02:45","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jun","on":"27","at":"12:03:00s","_save":"-0:03:00","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jun","on":"28","at":"12:03:10s","_save":"-0:03:10","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jun","on":"29","at":"12:03:25s","_save":"-0:03:25","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jun","on":"30","at":"12:03:35s","_save":"-0:03:35","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jul","on":"1","at":"12:03:45s","_save":"-0:03:45","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jul","on":"2","at":"12:04:00s","_save":"-0:04:00","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jul","on":"3","at":"12:04:10s","_save":"-0:04:10","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jul","on":"4","at":"12:04:20s","_save":"-0:04:20","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jul","on":"5","at":"12:04:30s","_save":"-0:04:30","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jul","on":"6","at":"12:04:40s","_save":"-0:04:40","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jul","on":"7","at":"12:04:50s","_save":"-0:04:50","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jul","on":"8","at":"12:05:00s","_save":"-0:05:00","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jul","on":"9","at":"12:05:10s","_save":"-0:05:10","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jul","on":"10","at":"12:05:20s","_save":"-0:05:20","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jul","on":"11","at":"12:05:25s","_save":"-0:05:25","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jul","on":"12","at":"12:05:35s","_save":"-0:05:35","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jul","on":"13","at":"12:05:40s","_save":"-0:05:40","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jul","on":"14","at":"12:05:50s","_save":"-0:05:50","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jul","on":"15","at":"12:05:55s","_save":"-0:05:55","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jul","on":"16","at":"12:06:00s","_save":"-0:06:00","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jul","on":"17","at":"12:06:05s","_save":"-0:06:05","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jul","on":"18","at":"12:06:10s","_save":"-0:06:10","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jul","on":"19","at":"12:06:15s","_save":"-0:06:15","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jul","on":"20","at":"12:06:20s","_save":"-0:06:20","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jul","on":"21","at":"12:06:20s","_save":"-0:06:20","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jul","on":"22","at":"12:06:25s","_save":"-0:06:25","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jul","on":"23","at":"12:06:25s","_save":"-0:06:25","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jul","on":"24","at":"12:06:30s","_save":"-0:06:30","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jul","on":"25","at":"12:06:30s","_save":"-0:06:30","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jul","on":"26","at":"12:06:30s","_save":"-0:06:30","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jul","on":"27","at":"12:06:30s","_save":"-0:06:30","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jul","on":"28","at":"12:06:30s","_save":"-0:06:30","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jul","on":"29","at":"12:06:25s","_save":"-0:06:25","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jul","on":"30","at":"12:06:25s","_save":"-0:06:25","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Jul","on":"31","at":"12:06:20s","_save":"-0:06:20","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Aug","on":"1","at":"12:06:20s","_save":"-0:06:20","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Aug","on":"2","at":"12:06:15s","_save":"-0:06:15","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Aug","on":"3","at":"12:06:10s","_save":"-0:06:10","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Aug","on":"4","at":"12:06:05s","_save":"-0:06:05","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Aug","on":"5","at":"12:06:00s","_save":"-0:06:00","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Aug","on":"6","at":"12:05:50s","_save":"-0:05:50","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Aug","on":"7","at":"12:05:45s","_save":"-0:05:45","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Aug","on":"8","at":"12:05:35s","_save":"-0:05:35","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Aug","on":"9","at":"12:05:30s","_save":"-0:05:30","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Aug","on":"10","at":"12:05:20s","_save":"-0:05:20","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Aug","on":"11","at":"12:05:10s","_save":"-0:05:10","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Aug","on":"12","at":"12:05:00s","_save":"-0:05:00","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Aug","on":"13","at":"12:04:50s","_save":"-0:04:50","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Aug","on":"14","at":"12:04:40s","_save":"-0:04:40","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Aug","on":"15","at":"12:04:30s","_save":"-0:04:30","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Aug","on":"16","at":"12:04:15s","_save":"-0:04:15","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Aug","on":"17","at":"12:04:05s","_save":"-0:04:05","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Aug","on":"18","at":"12:03:50s","_save":"-0:03:50","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Aug","on":"19","at":"12:03:35s","_save":"-0:03:35","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Aug","on":"20","at":"12:03:25s","_save":"-0:03:25","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Aug","on":"21","at":"12:03:10s","_save":"-0:03:10","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Aug","on":"22","at":"12:02:55s","_save":"-0:02:55","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Aug","on":"23","at":"12:02:40s","_save":"-0:02:40","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Aug","on":"24","at":"12:02:20s","_save":"-0:02:20","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Aug","on":"25","at":"12:02:05s","_save":"-0:02:05","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Aug","on":"26","at":"12:01:50s","_save":"-0:01:50","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Aug","on":"27","at":"12:01:30s","_save":"-0:01:30","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Aug","on":"28","at":"12:01:15s","_save":"-0:01:15","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Aug","on":"29","at":"12:00:55s","_save":"-0:00:55","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Aug","on":"30","at":"12:00:40s","_save":"-0:00:40","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Aug","on":"31","at":"12:00:20s","_save":"-0:00:20","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Sep","on":"1","at":"12:00:00s","_save":"0:00:00","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Sep","on":"2","at":"11:59:45s","_save":"0:00:15","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Sep","on":"3","at":"11:59:25s","_save":"0:00:35","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Sep","on":"4","at":"11:59:05s","_save":"0:00:55","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Sep","on":"5","at":"11:58:45s","_save":"0:01:15","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Sep","on":"6","at":"11:58:25s","_save":"0:01:35","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Sep","on":"7","at":"11:58:05s","_save":"0:01:55","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Sep","on":"8","at":"11:57:45s","_save":"0:02:15","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Sep","on":"9","at":"11:57:20s","_save":"0:02:40","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Sep","on":"10","at":"11:57:00s","_save":"0:03:00","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Sep","on":"11","at":"11:56:40s","_save":"0:03:20","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Sep","on":"12","at":"11:56:20s","_save":"0:03:40","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Sep","on":"13","at":"11:56:00s","_save":"0:04:00","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Sep","on":"14","at":"11:55:35s","_save":"0:04:25","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Sep","on":"15","at":"11:55:15s","_save":"0:04:45","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Sep","on":"16","at":"11:54:55s","_save":"0:05:05","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Sep","on":"17","at":"11:54:35s","_save":"0:05:25","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Sep","on":"18","at":"11:54:10s","_save":"0:05:50","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Sep","on":"19","at":"11:53:50s","_save":"0:06:10","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Sep","on":"20","at":"11:53:30s","_save":"0:06:30","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Sep","on":"21","at":"11:53:10s","_save":"0:06:50","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Sep","on":"22","at":"11:52:45s","_save":"0:07:15","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Sep","on":"23","at":"11:52:25s","_save":"0:07:35","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Sep","on":"24","at":"11:52:05s","_save":"0:07:55","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Sep","on":"25","at":"11:51:45s","_save":"0:08:15","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Sep","on":"26","at":"11:51:25s","_save":"0:08:35","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Sep","on":"27","at":"11:51:05s","_save":"0:08:55","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Sep","on":"28","at":"11:50:40s","_save":"0:09:20","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Sep","on":"29","at":"11:50:20s","_save":"0:09:40","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Sep","on":"30","at":"11:50:00s","_save":"0:10:00","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Oct","on":"1","at":"11:49:45s","_save":"0:10:15","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Oct","on":"2","at":"11:49:25s","_save":"0:10:35","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Oct","on":"3","at":"11:49:05s","_save":"0:10:55","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Oct","on":"4","at":"11:48:45s","_save":"0:11:15","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Oct","on":"5","at":"11:48:30s","_save":"0:11:30","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Oct","on":"6","at":"11:48:10s","_save":"0:11:50","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Oct","on":"7","at":"11:47:50s","_save":"0:12:10","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Oct","on":"8","at":"11:47:35s","_save":"0:12:25","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Oct","on":"9","at":"11:47:20s","_save":"0:12:40","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Oct","on":"10","at":"11:47:00s","_save":"0:13:00","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Oct","on":"11","at":"11:46:45s","_save":"0:13:15","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Oct","on":"12","at":"11:46:30s","_save":"0:13:30","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Oct","on":"13","at":"11:46:15s","_save":"0:13:45","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Oct","on":"14","at":"11:46:00s","_save":"0:14:00","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Oct","on":"15","at":"11:45:50s","_save":"0:14:10","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Oct","on":"16","at":"11:45:35s","_save":"0:14:25","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Oct","on":"17","at":"11:45:20s","_save":"0:14:40","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Oct","on":"18","at":"11:45:10s","_save":"0:14:50","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Oct","on":"19","at":"11:45:00s","_save":"0:15:00","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Oct","on":"20","at":"11:44:50s","_save":"0:15:10","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Oct","on":"21","at":"11:44:40s","_save":"0:15:20","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Oct","on":"22","at":"11:44:30s","_save":"0:15:30","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Oct","on":"23","at":"11:44:20s","_save":"0:15:40","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Oct","on":"24","at":"11:44:10s","_save":"0:15:50","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Oct","on":"25","at":"11:44:05s","_save":"0:15:55","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Oct","on":"26","at":"11:44:00s","_save":"0:16:00","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Oct","on":"27","at":"11:43:50s","_save":"0:16:10","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Oct","on":"28","at":"11:43:45s","_save":"0:16:15","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Oct","on":"29","at":"11:43:40s","_save":"0:16:20","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Oct","on":"30","at":"11:43:40s","_save":"0:16:20","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Oct","on":"31","at":"11:43:35s","_save":"0:16:25","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Nov","on":"1","at":"11:43:35s","_save":"0:16:25","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Nov","on":"2","at":"11:43:35s","_save":"0:16:25","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Nov","on":"3","at":"11:43:30s","_save":"0:16:30","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Nov","on":"4","at":"11:43:35s","_save":"0:16:25","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Nov","on":"5","at":"11:43:35s","_save":"0:16:25","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Nov","on":"6","at":"11:43:35s","_save":"0:16:25","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Nov","on":"7","at":"11:43:40s","_save":"0:16:20","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Nov","on":"8","at":"11:43:45s","_save":"0:16:15","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Nov","on":"9","at":"11:43:50s","_save":"0:16:10","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Nov","on":"10","at":"11:43:55s","_save":"0:16:05","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Nov","on":"11","at":"11:44:00s","_save":"0:16:00","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Nov","on":"12","at":"11:44:05s","_save":"0:15:55","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Nov","on":"13","at":"11:44:15s","_save":"0:15:45","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Nov","on":"14","at":"11:44:25s","_save":"0:15:35","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Nov","on":"15","at":"11:44:35s","_save":"0:15:25","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Nov","on":"16","at":"11:44:45s","_save":"0:15:15","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Nov","on":"17","at":"11:44:55s","_save":"0:15:05","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Nov","on":"18","at":"11:45:10s","_save":"0:14:50","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Nov","on":"19","at":"11:45:20s","_save":"0:14:40","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Nov","on":"20","at":"11:45:35s","_save":"0:14:25","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Nov","on":"21","at":"11:45:50s","_save":"0:14:10","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Nov","on":"22","at":"11:46:05s","_save":"0:13:55","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Nov","on":"23","at":"11:46:25s","_save":"0:13:35","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Nov","on":"24","at":"11:46:40s","_save":"0:13:20","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Nov","on":"25","at":"11:47:00s","_save":"0:13:00","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Nov","on":"26","at":"11:47:20s","_save":"0:12:40","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Nov","on":"27","at":"11:47:35s","_save":"0:12:25","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Nov","on":"28","at":"11:47:55s","_save":"0:12:05","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Nov","on":"29","at":"11:48:20s","_save":"0:11:40","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Nov","on":"30","at":"11:48:40s","_save":"0:11:20","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Dec","on":"1","at":"11:49:00s","_save":"0:11:00","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Dec","on":"2","at":"11:49:25s","_save":"0:10:35","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Dec","on":"3","at":"11:49:50s","_save":"0:10:10","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Dec","on":"4","at":"11:50:15s","_save":"0:09:45","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Dec","on":"5","at":"11:50:35s","_save":"0:09:25","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Dec","on":"6","at":"11:51:00s","_save":"0:09:00","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Dec","on":"7","at":"11:51:30s","_save":"0:08:30","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Dec","on":"8","at":"11:51:55s","_save":"0:08:05","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Dec","on":"9","at":"11:52:20s","_save":"0:07:40","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Dec","on":"10","at":"11:52:50s","_save":"0:07:10","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Dec","on":"11","at":"11:53:15s","_save":"0:06:45","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Dec","on":"12","at":"11:53:45s","_save":"0:06:15","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Dec","on":"13","at":"11:54:10s","_save":"0:05:50","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Dec","on":"14","at":"11:54:40s","_save":"0:05:20","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Dec","on":"15","at":"11:55:10s","_save":"0:04:50","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Dec","on":"16","at":"11:55:40s","_save":"0:04:20","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Dec","on":"17","at":"11:56:05s","_save":"0:03:55","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Dec","on":"18","at":"11:56:35s","_save":"0:03:25","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Dec","on":"19","at":"11:57:05s","_save":"0:02:55","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Dec","on":"20","at":"11:57:35s","_save":"0:02:25","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Dec","on":"21","at":"11:58:05s","_save":"0:01:55","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Dec","on":"22","at":"11:58:35s","_save":"0:01:25","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Dec","on":"23","at":"11:59:05s","_save":"0:00:55","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Dec","on":"24","at":"11:59:35s","_save":"0:00:25","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Dec","on":"25","at":"12:00:05s","_save":"-0:00:05","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Dec","on":"26","at":"12:00:35s","_save":"-0:00:35","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Dec","on":"27","at":"12:01:05s","_save":"-0:01:05","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Dec","on":"28","at":"12:01:35s","_save":"-0:01:35","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Dec","on":"29","at":"12:02:00s","_save":"-0:02:00","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Dec","on":"30","at":"12:02:30s","_save":"-0:02:30","letter":"-"},{"name":"sol89","_from":"1989","_to":"only","type":"-","in":"Dec","on":"31","at":"12:03:00s","_save":"-0:03:00","letter":"-"}],"Arg":[{"name":"Arg","_from":"1930","_to":"only","type":"-","in":"Dec","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Arg","_from":"1931","_to":"only","type":"-","in":"Apr","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Arg","_from":"1931","_to":"only","type":"-","in":"Oct","on":"15","at":"0:00","_save":"1:00","letter":"S"},{"name":"Arg","_from":"1932","_to":"1940","type":"-","in":"Mar","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Arg","_from":"1932","_to":"1939","type":"-","in":"Nov","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Arg","_from":"1940","_to":"only","type":"-","in":"Jul","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Arg","_from":"1941","_to":"only","type":"-","in":"Jun","on":"15","at":"0:00","_save":"0","letter":"-"},{"name":"Arg","_from":"1941","_to":"only","type":"-","in":"Oct","on":"15","at":"0:00","_save":"1:00","letter":"S"},{"name":"Arg","_from":"1943","_to":"only","type":"-","in":"Aug","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Arg","_from":"1943","_to":"only","type":"-","in":"Oct","on":"15","at":"0:00","_save":"1:00","letter":"S"},{"name":"Arg","_from":"1946","_to":"only","type":"-","in":"Mar","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Arg","_from":"1946","_to":"only","type":"-","in":"Oct","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Arg","_from":"1963","_to":"only","type":"-","in":"Oct","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Arg","_from":"1963","_to":"only","type":"-","in":"Dec","on":"15","at":"0:00","_save":"1:00","letter":"S"},{"name":"Arg","_from":"1964","_to":"1966","type":"-","in":"Mar","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Arg","_from":"1964","_to":"1966","type":"-","in":"Oct","on":"15","at":"0:00","_save":"1:00","letter":"S"},{"name":"Arg","_from":"1967","_to":"only","type":"-","in":"Apr","on":"2","at":"0:00","_save":"0","letter":"-"},{"name":"Arg","_from":"1967","_to":"1968","type":"-","in":"Oct","on":"Sun>=1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Arg","_from":"1968","_to":"1969","type":"-","in":"Apr","on":"Sun>=1","at":"0:00","_save":"0","letter":"-"},{"name":"Arg","_from":"1974","_to":"only","type":"-","in":"Jan","on":"23","at":"0:00","_save":"1:00","letter":"S"},{"name":"Arg","_from":"1974","_to":"only","type":"-","in":"May","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Arg","_from":"1988","_to":"only","type":"-","in":"Dec","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Arg","_from":"1989","_to":"1993","type":"-","in":"Mar","on":"Sun>=1","at":"0:00","_save":"0","letter":"-"},{"name":"Arg","_from":"1989","_to":"1992","type":"-","in":"Oct","on":"Sun>=15","at":"0:00","_save":"1:00","letter":"S"},{"name":"Arg","_from":"1999","_to":"only","type":"-","in":"Oct","on":"Sun>=1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Arg","_from":"2000","_to":"only","type":"-","in":"Mar","on":"3","at":"0:00","_save":"0","letter":"-"},{"name":"Arg","_from":"2007","_to":"only","type":"-","in":"Dec","on":"30","at":"0:00","_save":"1:00","letter":"S"},{"name":"Arg","_from":"2008","_to":"2009","type":"-","in":"Mar","on":"Sun>=15","at":"0:00","_save":"0","letter":"-"},{"name":"Arg","_from":"2008","_to":"only","type":"-","in":"Oct","on":"Sun>=15","at":"0:00","_save":"1:00","letter":"S"}],"SanLuis":[{"name":"SanLuis","_from":"2008","_to":"2009","type":"-","in":"Mar","on":"Sun>=8","at":"0:00","_save":"0","letter":"-"},{"name":"SanLuis","_from":"2007","_to":"2009","type":"-","in":"Oct","on":"Sun>=8","at":"0:00","_save":"1:00","letter":"S"}],"Brazil":[{"name":"Brazil","_from":"1931","_to":"only","type":"-","in":"Oct","on":"3","at":"11:00","_save":"1:00","letter":"S"},{"name":"Brazil","_from":"1932","_to":"1933","type":"-","in":"Apr","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Brazil","_from":"1932","_to":"only","type":"-","in":"Oct","on":"3","at":"0:00","_save":"1:00","letter":"S"},{"name":"Brazil","_from":"1949","_to":"1952","type":"-","in":"Dec","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Brazil","_from":"1950","_to":"only","type":"-","in":"Apr","on":"16","at":"1:00","_save":"0","letter":"-"},{"name":"Brazil","_from":"1951","_to":"1952","type":"-","in":"Apr","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Brazil","_from":"1953","_to":"only","type":"-","in":"Mar","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Brazil","_from":"1963","_to":"only","type":"-","in":"Dec","on":"9","at":"0:00","_save":"1:00","letter":"S"},{"name":"Brazil","_from":"1964","_to":"only","type":"-","in":"Mar","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Brazil","_from":"1965","_to":"only","type":"-","in":"Jan","on":"31","at":"0:00","_save":"1:00","letter":"S"},{"name":"Brazil","_from":"1965","_to":"only","type":"-","in":"Mar","on":"31","at":"0:00","_save":"0","letter":"-"},{"name":"Brazil","_from":"1965","_to":"only","type":"-","in":"Dec","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Brazil","_from":"1966","_to":"1968","type":"-","in":"Mar","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Brazil","_from":"1966","_to":"1967","type":"-","in":"Nov","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Brazil","_from":"1985","_to":"only","type":"-","in":"Nov","on":"2","at":"0:00","_save":"1:00","letter":"S"},{"name":"Brazil","_from":"1986","_to":"only","type":"-","in":"Mar","on":"15","at":"0:00","_save":"0","letter":"-"},{"name":"Brazil","_from":"1986","_to":"only","type":"-","in":"Oct","on":"25","at":"0:00","_save":"1:00","letter":"S"},{"name":"Brazil","_from":"1987","_to":"only","type":"-","in":"Feb","on":"14","at":"0:00","_save":"0","letter":"-"},{"name":"Brazil","_from":"1987","_to":"only","type":"-","in":"Oct","on":"25","at":"0:00","_save":"1:00","letter":"S"},{"name":"Brazil","_from":"1988","_to":"only","type":"-","in":"Feb","on":"7","at":"0:00","_save":"0","letter":"-"},{"name":"Brazil","_from":"1988","_to":"only","type":"-","in":"Oct","on":"16","at":"0:00","_save":"1:00","letter":"S"},{"name":"Brazil","_from":"1989","_to":"only","type":"-","in":"Jan","on":"29","at":"0:00","_save":"0","letter":"-"},{"name":"Brazil","_from":"1989","_to":"only","type":"-","in":"Oct","on":"15","at":"0:00","_save":"1:00","letter":"S"},{"name":"Brazil","_from":"1990","_to":"only","type":"-","in":"Feb","on":"11","at":"0:00","_save":"0","letter":"-"},{"name":"Brazil","_from":"1990","_to":"only","type":"-","in":"Oct","on":"21","at":"0:00","_save":"1:00","letter":"S"},{"name":"Brazil","_from":"1991","_to":"only","type":"-","in":"Feb","on":"17","at":"0:00","_save":"0","letter":"-"},{"name":"Brazil","_from":"1991","_to":"only","type":"-","in":"Oct","on":"20","at":"0:00","_save":"1:00","letter":"S"},{"name":"Brazil","_from":"1992","_to":"only","type":"-","in":"Feb","on":"9","at":"0:00","_save":"0","letter":"-"},{"name":"Brazil","_from":"1992","_to":"only","type":"-","in":"Oct","on":"25","at":"0:00","_save":"1:00","letter":"S"},{"name":"Brazil","_from":"1993","_to":"only","type":"-","in":"Jan","on":"31","at":"0:00","_save":"0","letter":"-"},{"name":"Brazil","_from":"1993","_to":"1995","type":"-","in":"Oct","on":"Sun>=11","at":"0:00","_save":"1:00","letter":"S"},{"name":"Brazil","_from":"1994","_to":"1995","type":"-","in":"Feb","on":"Sun>=15","at":"0:00","_save":"0","letter":"-"},{"name":"Brazil","_from":"1996","_to":"only","type":"-","in":"Feb","on":"11","at":"0:00","_save":"0","letter":"-"},{"name":"Brazil","_from":"1996","_to":"only","type":"-","in":"Oct","on":"6","at":"0:00","_save":"1:00","letter":"S"},{"name":"Brazil","_from":"1997","_to":"only","type":"-","in":"Feb","on":"16","at":"0:00","_save":"0","letter":"-"},{"name":"Brazil","_from":"1997","_to":"only","type":"-","in":"Oct","on":"6","at":"0:00","_save":"1:00","letter":"S"},{"name":"Brazil","_from":"1998","_to":"only","type":"-","in":"Mar","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Brazil","_from":"1998","_to":"only","type":"-","in":"Oct","on":"11","at":"0:00","_save":"1:00","letter":"S"},{"name":"Brazil","_from":"1999","_to":"only","type":"-","in":"Feb","on":"21","at":"0:00","_save":"0","letter":"-"},{"name":"Brazil","_from":"1999","_to":"only","type":"-","in":"Oct","on":"3","at":"0:00","_save":"1:00","letter":"S"},{"name":"Brazil","_from":"2000","_to":"only","type":"-","in":"Feb","on":"27","at":"0:00","_save":"0","letter":"-"},{"name":"Brazil","_from":"2000","_to":"2001","type":"-","in":"Oct","on":"Sun>=8","at":"0:00","_save":"1:00","letter":"S"},{"name":"Brazil","_from":"2001","_to":"2006","type":"-","in":"Feb","on":"Sun>=15","at":"0:00","_save":"0","letter":"-"},{"name":"Brazil","_from":"2002","_to":"only","type":"-","in":"Nov","on":"3","at":"0:00","_save":"1:00","letter":"S"},{"name":"Brazil","_from":"2003","_to":"only","type":"-","in":"Oct","on":"19","at":"0:00","_save":"1:00","letter":"S"},{"name":"Brazil","_from":"2004","_to":"only","type":"-","in":"Nov","on":"2","at":"0:00","_save":"1:00","letter":"S"},{"name":"Brazil","_from":"2005","_to":"only","type":"-","in":"Oct","on":"16","at":"0:00","_save":"1:00","letter":"S"},{"name":"Brazil","_from":"2006","_to":"only","type":"-","in":"Nov","on":"5","at":"0:00","_save":"1:00","letter":"S"},{"name":"Brazil","_from":"2007","_to":"only","type":"-","in":"Feb","on":"25","at":"0:00","_save":"0","letter":"-"},{"name":"Brazil","_from":"2007","_to":"only","type":"-","in":"Oct","on":"Sun>=8","at":"0:00","_save":"1:00","letter":"S"},{"name":"Brazil","_from":"2008","_to":"max","type":"-","in":"Oct","on":"Sun>=15","at":"0:00","_save":"1:00","letter":"S"},{"name":"Brazil","_from":"2008","_to":"2011","type":"-","in":"Feb","on":"Sun>=15","at":"0:00","_save":"0","letter":"-"},{"name":"Brazil","_from":"2012","_to":"only","type":"-","in":"Feb","on":"Sun>=22","at":"0:00","_save":"0","letter":"-"},{"name":"Brazil","_from":"2013","_to":"2014","type":"-","in":"Feb","on":"Sun>=15","at":"0:00","_save":"0","letter":"-"},{"name":"Brazil","_from":"2015","_to":"only","type":"-","in":"Feb","on":"Sun>=22","at":"0:00","_save":"0","letter":"-"},{"name":"Brazil","_from":"2016","_to":"2022","type":"-","in":"Feb","on":"Sun>=15","at":"0:00","_save":"0","letter":"-"},{"name":"Brazil","_from":"2023","_to":"only","type":"-","in":"Feb","on":"Sun>=22","at":"0:00","_save":"0","letter":"-"},{"name":"Brazil","_from":"2024","_to":"2025","type":"-","in":"Feb","on":"Sun>=15","at":"0:00","_save":"0","letter":"-"},{"name":"Brazil","_from":"2026","_to":"only","type":"-","in":"Feb","on":"Sun>=22","at":"0:00","_save":"0","letter":"-"},{"name":"Brazil","_from":"2027","_to":"2033","type":"-","in":"Feb","on":"Sun>=15","at":"0:00","_save":"0","letter":"-"},{"name":"Brazil","_from":"2034","_to":"only","type":"-","in":"Feb","on":"Sun>=22","at":"0:00","_save":"0","letter":"-"},{"name":"Brazil","_from":"2035","_to":"2036","type":"-","in":"Feb","on":"Sun>=15","at":"0:00","_save":"0","letter":"-"},{"name":"Brazil","_from":"2037","_to":"only","type":"-","in":"Feb","on":"Sun>=22","at":"0:00","_save":"0","letter":"-"},{"name":"Brazil","_from":"2038","_to":"max","type":"-","in":"Feb","on":"Sun>=15","at":"0:00","_save":"0","letter":"-"}],"Chile":[{"name":"Chile","_from":"1927","_to":"1932","type":"-","in":"Sep","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Chile","_from":"1928","_to":"1932","type":"-","in":"Apr","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Chile","_from":"1942","_to":"only","type":"-","in":"Jun","on":"1","at":"4:00u","_save":"0","letter":"-"},{"name":"Chile","_from":"1942","_to":"only","type":"-","in":"Aug","on":"1","at":"5:00u","_save":"1:00","letter":"S"},{"name":"Chile","_from":"1946","_to":"only","type":"-","in":"Jul","on":"15","at":"4:00u","_save":"1:00","letter":"S"},{"name":"Chile","_from":"1946","_to":"only","type":"-","in":"Sep","on":"1","at":"3:00u","_save":"0:00","letter":"-"},{"name":"Chile","_from":"1947","_to":"only","type":"-","in":"Apr","on":"1","at":"4:00u","_save":"0","letter":"-"},{"name":"Chile","_from":"1968","_to":"only","type":"-","in":"Nov","on":"3","at":"4:00u","_save":"1:00","letter":"S"},{"name":"Chile","_from":"1969","_to":"only","type":"-","in":"Mar","on":"30","at":"3:00u","_save":"0","letter":"-"},{"name":"Chile","_from":"1969","_to":"only","type":"-","in":"Nov","on":"23","at":"4:00u","_save":"1:00","letter":"S"},{"name":"Chile","_from":"1970","_to":"only","type":"-","in":"Mar","on":"29","at":"3:00u","_save":"0","letter":"-"},{"name":"Chile","_from":"1971","_to":"only","type":"-","in":"Mar","on":"14","at":"3:00u","_save":"0","letter":"-"},{"name":"Chile","_from":"1970","_to":"1972","type":"-","in":"Oct","on":"Sun>=9","at":"4:00u","_save":"1:00","letter":"S"},{"name":"Chile","_from":"1972","_to":"1986","type":"-","in":"Mar","on":"Sun>=9","at":"3:00u","_save":"0","letter":"-"},{"name":"Chile","_from":"1973","_to":"only","type":"-","in":"Sep","on":"30","at":"4:00u","_save":"1:00","letter":"S"},{"name":"Chile","_from":"1974","_to":"1987","type":"-","in":"Oct","on":"Sun>=9","at":"4:00u","_save":"1:00","letter":"S"},{"name":"Chile","_from":"1987","_to":"only","type":"-","in":"Apr","on":"12","at":"3:00u","_save":"0","letter":"-"},{"name":"Chile","_from":"1988","_to":"1989","type":"-","in":"Mar","on":"Sun>=9","at":"3:00u","_save":"0","letter":"-"},{"name":"Chile","_from":"1988","_to":"only","type":"-","in":"Oct","on":"Sun>=1","at":"4:00u","_save":"1:00","letter":"S"},{"name":"Chile","_from":"1989","_to":"only","type":"-","in":"Oct","on":"Sun>=9","at":"4:00u","_save":"1:00","letter":"S"},{"name":"Chile","_from":"1990","_to":"only","type":"-","in":"Mar","on":"18","at":"3:00u","_save":"0","letter":"-"},{"name":"Chile","_from":"1990","_to":"only","type":"-","in":"Sep","on":"16","at":"4:00u","_save":"1:00","letter":"S"},{"name":"Chile","_from":"1991","_to":"1996","type":"-","in":"Mar","on":"Sun>=9","at":"3:00u","_save":"0","letter":"-"},{"name":"Chile","_from":"1991","_to":"1997","type":"-","in":"Oct","on":"Sun>=9","at":"4:00u","_save":"1:00","letter":"S"},{"name":"Chile","_from":"1997","_to":"only","type":"-","in":"Mar","on":"30","at":"3:00u","_save":"0","letter":"-"},{"name":"Chile","_from":"1998","_to":"only","type":"-","in":"Mar","on":"Sun>=9","at":"3:00u","_save":"0","letter":"-"},{"name":"Chile","_from":"1998","_to":"only","type":"-","in":"Sep","on":"27","at":"4:00u","_save":"1:00","letter":"S"},{"name":"Chile","_from":"1999","_to":"only","type":"-","in":"Apr","on":"4","at":"3:00u","_save":"0","letter":"-"},{"name":"Chile","_from":"1999","_to":"2010","type":"-","in":"Oct","on":"Sun>=9","at":"4:00u","_save":"1:00","letter":"S"},{"name":"Chile","_from":"2000","_to":"2007","type":"-","in":"Mar","on":"Sun>=9","at":"3:00u","_save":"0","letter":"-"},{"name":"Chile","_from":"2008","_to":"only","type":"-","in":"Mar","on":"30","at":"3:00u","_save":"0","letter":"-"},{"name":"Chile","_from":"2009","_to":"only","type":"-","in":"Mar","on":"Sun>=9","at":"3:00u","_save":"0","letter":"-"},{"name":"Chile","_from":"2010","_to":"only","type":"-","in":"Apr","on":"Sun>=1","at":"3:00u","_save":"0","letter":"-"},{"name":"Chile","_from":"2011","_to":"only","type":"-","in":"May","on":"Sun>=2","at":"3:00u","_save":"0","letter":"-"},{"name":"Chile","_from":"2011","_to":"only","type":"-","in":"Aug","on":"Sun>=16","at":"4:00u","_save":"1:00","letter":"S"},{"name":"Chile","_from":"2012","_to":"max","type":"-","in":"Apr","on":"Sun>=23","at":"3:00u","_save":"0","letter":"-"},{"name":"Chile","_from":"2012","_to":"max","type":"-","in":"Sep","on":"Sun>=2","at":"4:00u","_save":"1:00","letter":"S"}],"CO":[{"name":"CO","_from":"1992","_to":"only","type":"-","in":"May","on":"3","at":"0:00","_save":"1:00","letter":"S"},{"name":"CO","_from":"1993","_to":"only","type":"-","in":"Apr","on":"4","at":"0:00","_save":"0","letter":"-"}],"Falk":[{"name":"Falk","_from":"1937","_to":"1938","type":"-","in":"Sep","on":"lastSun","at":"0:00","_save":"1:00","letter":"S"},{"name":"Falk","_from":"1938","_to":"1942","type":"-","in":"Mar","on":"Sun>=19","at":"0:00","_save":"0","letter":"-"},{"name":"Falk","_from":"1939","_to":"only","type":"-","in":"Oct","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Falk","_from":"1940","_to":"1942","type":"-","in":"Sep","on":"lastSun","at":"0:00","_save":"1:00","letter":"S"},{"name":"Falk","_from":"1943","_to":"only","type":"-","in":"Jan","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Falk","_from":"1983","_to":"only","type":"-","in":"Sep","on":"lastSun","at":"0:00","_save":"1:00","letter":"S"},{"name":"Falk","_from":"1984","_to":"1985","type":"-","in":"Apr","on":"lastSun","at":"0:00","_save":"0","letter":"-"},{"name":"Falk","_from":"1984","_to":"only","type":"-","in":"Sep","on":"16","at":"0:00","_save":"1:00","letter":"S"},{"name":"Falk","_from":"1985","_to":"2000","type":"-","in":"Sep","on":"Sun>=9","at":"0:00","_save":"1:00","letter":"S"},{"name":"Falk","_from":"1986","_to":"2000","type":"-","in":"Apr","on":"Sun>=16","at":"0:00","_save":"0","letter":"-"},{"name":"Falk","_from":"2001","_to":"2010","type":"-","in":"Apr","on":"Sun>=15","at":"2:00","_save":"0","letter":"-"},{"name":"Falk","_from":"2001","_to":"2010","type":"-","in":"Sep","on":"Sun>=1","at":"2:00","_save":"1:00","letter":"S"}],"Para":[{"name":"Para","_from":"1975","_to":"1988","type":"-","in":"Oct","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Para","_from":"1975","_to":"1978","type":"-","in":"Mar","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Para","_from":"1979","_to":"1991","type":"-","in":"Apr","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Para","_from":"1989","_to":"only","type":"-","in":"Oct","on":"22","at":"0:00","_save":"1:00","letter":"S"},{"name":"Para","_from":"1990","_to":"only","type":"-","in":"Oct","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Para","_from":"1991","_to":"only","type":"-","in":"Oct","on":"6","at":"0:00","_save":"1:00","letter":"S"},{"name":"Para","_from":"1992","_to":"only","type":"-","in":"Mar","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Para","_from":"1992","_to":"only","type":"-","in":"Oct","on":"5","at":"0:00","_save":"1:00","letter":"S"},{"name":"Para","_from":"1993","_to":"only","type":"-","in":"Mar","on":"31","at":"0:00","_save":"0","letter":"-"},{"name":"Para","_from":"1993","_to":"1995","type":"-","in":"Oct","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Para","_from":"1994","_to":"1995","type":"-","in":"Feb","on":"lastSun","at":"0:00","_save":"0","letter":"-"},{"name":"Para","_from":"1996","_to":"only","type":"-","in":"Mar","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Para","_from":"1996","_to":"2001","type":"-","in":"Oct","on":"Sun>=1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Para","_from":"1997","_to":"only","type":"-","in":"Feb","on":"lastSun","at":"0:00","_save":"0","letter":"-"},{"name":"Para","_from":"1998","_to":"2001","type":"-","in":"Mar","on":"Sun>=1","at":"0:00","_save":"0","letter":"-"},{"name":"Para","_from":"2002","_to":"2004","type":"-","in":"Apr","on":"Sun>=1","at":"0:00","_save":"0","letter":"-"},{"name":"Para","_from":"2002","_to":"2003","type":"-","in":"Sep","on":"Sun>=1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Para","_from":"2004","_to":"2009","type":"-","in":"Oct","on":"Sun>=15","at":"0:00","_save":"1:00","letter":"S"},{"name":"Para","_from":"2005","_to":"2009","type":"-","in":"Mar","on":"Sun>=8","at":"0:00","_save":"0","letter":"-"},{"name":"Para","_from":"2010","_to":"max","type":"-","in":"Oct","on":"Sun>=1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Para","_from":"2010","_to":"2012","type":"-","in":"Apr","on":"Sun>=8","at":"0:00","_save":"0","letter":"-"},{"name":"Para","_from":"2013","_to":"max","type":"-","in":"Mar","on":"Sun>=22","at":"0:00","_save":"0","letter":"-"}],"Peru":[{"name":"Peru","_from":"1938","_to":"only","type":"-","in":"Jan","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Peru","_from":"1938","_to":"only","type":"-","in":"Apr","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Peru","_from":"1938","_to":"1939","type":"-","in":"Sep","on":"lastSun","at":"0:00","_save":"1:00","letter":"S"},{"name":"Peru","_from":"1939","_to":"1940","type":"-","in":"Mar","on":"Sun>=24","at":"0:00","_save":"0","letter":"-"},{"name":"Peru","_from":"1986","_to":"1987","type":"-","in":"Jan","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Peru","_from":"1986","_to":"1987","type":"-","in":"Apr","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Peru","_from":"1990","_to":"only","type":"-","in":"Jan","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Peru","_from":"1990","_to":"only","type":"-","in":"Apr","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Peru","_from":"1994","_to":"only","type":"-","in":"Jan","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Peru","_from":"1994","_to":"only","type":"-","in":"Apr","on":"1","at":"0:00","_save":"0","letter":"-"}],"Uruguay":[{"name":"Uruguay","_from":"1923","_to":"only","type":"-","in":"Oct","on":"2","at":"0:00","_save":"0:30","letter":"HS"},{"name":"Uruguay","_from":"1924","_to":"1926","type":"-","in":"Apr","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Uruguay","_from":"1924","_to":"1925","type":"-","in":"Oct","on":"1","at":"0:00","_save":"0:30","letter":"HS"},{"name":"Uruguay","_from":"1933","_to":"1935","type":"-","in":"Oct","on":"lastSun","at":"0:00","_save":"0:30","letter":"HS"},{"name":"Uruguay","_from":"1934","_to":"1936","type":"-","in":"Mar","on":"Sat>=25","at":"23:30s","_save":"0","letter":"-"},{"name":"Uruguay","_from":"1936","_to":"only","type":"-","in":"Nov","on":"1","at":"0:00","_save":"0:30","letter":"HS"},{"name":"Uruguay","_from":"1937","_to":"1941","type":"-","in":"Mar","on":"lastSun","at":"0:00","_save":"0","letter":"-"},{"name":"Uruguay","_from":"1937","_to":"1940","type":"-","in":"Oct","on":"lastSun","at":"0:00","_save":"0:30","letter":"HS"},{"name":"Uruguay","_from":"1941","_to":"only","type":"-","in":"Aug","on":"1","at":"0:00","_save":"0:30","letter":"HS"},{"name":"Uruguay","_from":"1942","_to":"only","type":"-","in":"Jan","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Uruguay","_from":"1942","_to":"only","type":"-","in":"Dec","on":"14","at":"0:00","_save":"1:00","letter":"S"},{"name":"Uruguay","_from":"1943","_to":"only","type":"-","in":"Mar","on":"14","at":"0:00","_save":"0","letter":"-"},{"name":"Uruguay","_from":"1959","_to":"only","type":"-","in":"May","on":"24","at":"0:00","_save":"1:00","letter":"S"},{"name":"Uruguay","_from":"1959","_to":"only","type":"-","in":"Nov","on":"15","at":"0:00","_save":"0","letter":"-"},{"name":"Uruguay","_from":"1960","_to":"only","type":"-","in":"Jan","on":"17","at":"0:00","_save":"1:00","letter":"S"},{"name":"Uruguay","_from":"1960","_to":"only","type":"-","in":"Mar","on":"6","at":"0:00","_save":"0","letter":"-"},{"name":"Uruguay","_from":"1965","_to":"1967","type":"-","in":"Apr","on":"Sun>=1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Uruguay","_from":"1965","_to":"only","type":"-","in":"Sep","on":"26","at":"0:00","_save":"0","letter":"-"},{"name":"Uruguay","_from":"1966","_to":"1967","type":"-","in":"Oct","on":"31","at":"0:00","_save":"0","letter":"-"},{"name":"Uruguay","_from":"1968","_to":"1970","type":"-","in":"May","on":"27","at":"0:00","_save":"0:30","letter":"HS"},{"name":"Uruguay","_from":"1968","_to":"1970","type":"-","in":"Dec","on":"2","at":"0:00","_save":"0","letter":"-"},{"name":"Uruguay","_from":"1972","_to":"only","type":"-","in":"Apr","on":"24","at":"0:00","_save":"1:00","letter":"S"},{"name":"Uruguay","_from":"1972","_to":"only","type":"-","in":"Aug","on":"15","at":"0:00","_save":"0","letter":"-"},{"name":"Uruguay","_from":"1974","_to":"only","type":"-","in":"Mar","on":"10","at":"0:00","_save":"0:30","letter":"HS"},{"name":"Uruguay","_from":"1974","_to":"only","type":"-","in":"Dec","on":"22","at":"0:00","_save":"1:00","letter":"S"},{"name":"Uruguay","_from":"1976","_to":"only","type":"-","in":"Oct","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Uruguay","_from":"1977","_to":"only","type":"-","in":"Dec","on":"4","at":"0:00","_save":"1:00","letter":"S"},{"name":"Uruguay","_from":"1978","_to":"only","type":"-","in":"Apr","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Uruguay","_from":"1979","_to":"only","type":"-","in":"Oct","on":"1","at":"0:00","_save":"1:00","letter":"S"},{"name":"Uruguay","_from":"1980","_to":"only","type":"-","in":"May","on":"1","at":"0:00","_save":"0","letter":"-"},{"name":"Uruguay","_from":"1987","_to":"only","type":"-","in":"Dec","on":"14","at":"0:00","_save":"1:00","letter":"S"},{"name":"Uruguay","_from":"1988","_to":"only","type":"-","in":"Mar","on":"14","at":"0:00","_save":"0","letter":"-"},{"name":"Uruguay","_from":"1988","_to":"only","type":"-","in":"Dec","on":"11","at":"0:00","_save":"1:00","letter":"S"},{"name":"Uruguay","_from":"1989","_to":"only","type":"-","in":"Mar","on":"12","at":"0:00","_save":"0","letter":"-"},{"name":"Uruguay","_from":"1989","_to":"only","type":"-","in":"Oct","on":"29","at":"0:00","_save":"1:00","letter":"S"},{"name":"Uruguay","_from":"1990","_to":"1992","type":"-","in":"Mar","on":"Sun>=1","at":"0:00","_save":"0","letter":"-"},{"name":"Uruguay","_from":"1990","_to":"1991","type":"-","in":"Oct","on":"Sun>=21","at":"0:00","_save":"1:00","letter":"S"},{"name":"Uruguay","_from":"1992","_to":"only","type":"-","in":"Oct","on":"18","at":"0:00","_save":"1:00","letter":"S"},{"name":"Uruguay","_from":"1993","_to":"only","type":"-","in":"Feb","on":"28","at":"0:00","_save":"0","letter":"-"},{"name":"Uruguay","_from":"2004","_to":"only","type":"-","in":"Sep","on":"19","at":"0:00","_save":"1:00","letter":"S"},{"name":"Uruguay","_from":"2005","_to":"only","type":"-","in":"Mar","on":"27","at":"2:00","_save":"0","letter":"-"},{"name":"Uruguay","_from":"2005","_to":"only","type":"-","in":"Oct","on":"9","at":"2:00","_save":"1:00","letter":"S"},{"name":"Uruguay","_from":"2006","_to":"only","type":"-","in":"Mar","on":"12","at":"2:00","_save":"0","letter":"-"},{"name":"Uruguay","_from":"2006","_to":"max","type":"-","in":"Oct","on":"Sun>=1","at":"2:00","_save":"1:00","letter":"S"},{"name":"Uruguay","_from":"2007","_to":"max","type":"-","in":"Mar","on":"Sun>=8","at":"2:00","_save":"0","letter":"-"}],"SystemV":[{"name":"SystemV","_from":"min","_to":"1973","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"SystemV","_from":"min","_to":"1973","type":"-","in":"Oct","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"SystemV","_from":"1974","_to":"only","type":"-","in":"Jan","on":"6","at":"2:00","_save":"1:00","letter":"D"},{"name":"SystemV","_from":"1974","_to":"only","type":"-","in":"Nov","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"SystemV","_from":"1975","_to":"only","type":"-","in":"Feb","on":"23","at":"2:00","_save":"1:00","letter":"D"},{"name":"SystemV","_from":"1975","_to":"only","type":"-","in":"Oct","on":"lastSun","at":"2:00","_save":"0","letter":"S"},{"name":"SystemV","_from":"1976","_to":"max","type":"-","in":"Apr","on":"lastSun","at":"2:00","_save":"1:00","letter":"D"},{"name":"SystemV","_from":"1976","_to":"max","type":"-","in":"Oct","on":"lastSun","at":"2:00","_save":"0","letter":"S"}]},
	  zones: {"Africa/Algiers":[{"name":"Africa/Algiers","_offset":"0:12:12","_rule":"-","format":"LMT","_until":"1891 Mar 15 0:01"},{"name":"Africa/Algiers","_offset":"0:09:21","_rule":"-","format":"PMT","_until":"1911 Mar 11"},{"name":"Africa/Algiers","_offset":"0:00","_rule":"Algeria","format":"WE%sT","_until":"1940 Feb 25 2:00"},{"name":"Africa/Algiers","_offset":"1:00","_rule":"Algeria","format":"CE%sT","_until":"1946 Oct 7"},{"name":"Africa/Algiers","_offset":"0:00","_rule":"-","format":"WET","_until":"1956 Jan 29"},{"name":"Africa/Algiers","_offset":"1:00","_rule":"-","format":"CET","_until":"1963 Apr 14"},{"name":"Africa/Algiers","_offset":"0:00","_rule":"Algeria","format":"WE%sT","_until":"1977 Oct 21"},{"name":"Africa/Algiers","_offset":"1:00","_rule":"Algeria","format":"CE%sT","_until":"1979 Oct 26"},{"name":"Africa/Algiers","_offset":"0:00","_rule":"Algeria","format":"WE%sT","_until":"1981 May"},{"name":"Africa/Algiers","_offset":"1:00","_rule":"-","format":"CET","_until":""}],"Africa/Luanda":[{"name":"Africa/Luanda","_offset":"0:52:56","_rule":"-","format":"LMT","_until":"1892"},{"name":"Africa/Luanda","_offset":"0:52:04","_rule":"-","format":"AOT","_until":"1911 May 26"},{"name":"Africa/Luanda","_offset":"1:00","_rule":"-","format":"WAT","_until":""}],"Africa/Porto-Novo":[{"name":"Africa/Porto-Novo","_offset":"0:10:28","_rule":"-","format":"LMT","_until":"1912"},{"name":"Africa/Porto-Novo","_offset":"0:00","_rule":"-","format":"GMT","_until":"1934 Feb 26"},{"name":"Africa/Porto-Novo","_offset":"1:00","_rule":"-","format":"WAT","_until":""}],"Africa/Gaborone":[{"name":"Africa/Gaborone","_offset":"1:43:40","_rule":"-","format":"LMT","_until":"1885"},{"name":"Africa/Gaborone","_offset":"1:30","_rule":"-","format":"SAST","_until":"1903 Mar"},{"name":"Africa/Gaborone","_offset":"2:00","_rule":"-","format":"CAT","_until":"1943 Sep 19 2:00"},{"name":"Africa/Gaborone","_offset":"2:00","_rule":"1:00","format":"CAST","_until":"1944 Mar 19 2:00"},{"name":"Africa/Gaborone","_offset":"2:00","_rule":"-","format":"CAT","_until":""}],"Africa/Ouagadougou":[{"name":"Africa/Ouagadougou","_offset":"-0:06:04","_rule":"-","format":"LMT","_until":"1912"},{"name":"Africa/Ouagadougou","_offset":"0:00","_rule":"-","format":"GMT","_until":""}],"Africa/Bujumbura":[{"name":"Africa/Bujumbura","_offset":"1:57:28","_rule":"-","format":"LMT","_until":"1890"},{"name":"Africa/Bujumbura","_offset":"2:00","_rule":"-","format":"CAT","_until":""}],"Africa/Douala":[{"name":"Africa/Douala","_offset":"0:38:48","_rule":"-","format":"LMT","_until":"1912"},{"name":"Africa/Douala","_offset":"1:00","_rule":"-","format":"WAT","_until":""}],"Atlantic/Cape_Verde":[{"name":"Atlantic/Cape_Verde","_offset":"-1:34:04","_rule":"-","format":"LMT","_until":"1907"},{"name":"Atlantic/Cape_Verde","_offset":"-2:00","_rule":"-","format":"CVT","_until":"1942 Sep"},{"name":"Atlantic/Cape_Verde","_offset":"-2:00","_rule":"1:00","format":"CVST","_until":"1945 Oct 15"},{"name":"Atlantic/Cape_Verde","_offset":"-2:00","_rule":"-","format":"CVT","_until":"1975 Nov 25 2:00"},{"name":"Atlantic/Cape_Verde","_offset":"-1:00","_rule":"-","format":"CVT","_until":""}],"Africa/Bangui":[{"name":"Africa/Bangui","_offset":"1:14:20","_rule":"-","format":"LMT","_until":"1912"},{"name":"Africa/Bangui","_offset":"1:00","_rule":"-","format":"WAT","_until":""}],"Africa/Ndjamena":[{"name":"Africa/Ndjamena","_offset":"1:00:12","_rule":"-","format":"LMT","_until":"1912"},{"name":"Africa/Ndjamena","_offset":"1:00","_rule":"-","format":"WAT","_until":"1979 Oct 14"},{"name":"Africa/Ndjamena","_offset":"1:00","_rule":"1:00","format":"WAST","_until":"1980 Mar 8"},{"name":"Africa/Ndjamena","_offset":"1:00","_rule":"-","format":"WAT","_until":""}],"Indian/Comoro":[{"name":"Indian/Comoro","_offset":"2:53:04","_rule":"-","format":"LMT","_until":"1911 Jul"},{"name":"Indian/Comoro","_offset":"3:00","_rule":"-","format":"EAT","_until":""}],"Africa/Kinshasa":[{"name":"Africa/Kinshasa","_offset":"1:01:12","_rule":"-","format":"LMT","_until":"1897 Nov 9"},{"name":"Africa/Kinshasa","_offset":"1:00","_rule":"-","format":"WAT","_until":""}],"Africa/Lubumbashi":[{"name":"Africa/Lubumbashi","_offset":"1:49:52","_rule":"-","format":"LMT","_until":"1897 Nov 9"},{"name":"Africa/Lubumbashi","_offset":"2:00","_rule":"-","format":"CAT","_until":""}],"Africa/Brazzaville":[{"name":"Africa/Brazzaville","_offset":"1:01:08","_rule":"-","format":"LMT","_until":"1912"},{"name":"Africa/Brazzaville","_offset":"1:00","_rule":"-","format":"WAT","_until":""}],"Africa/Abidjan":[{"name":"Africa/Abidjan","_offset":"-0:16:08","_rule":"-","format":"LMT","_until":"1912"},{"name":"Africa/Abidjan","_offset":"0:00","_rule":"-","format":"GMT","_until":""}],"Africa/Djibouti":[{"name":"Africa/Djibouti","_offset":"2:52:36","_rule":"-","format":"LMT","_until":"1911 Jul"},{"name":"Africa/Djibouti","_offset":"3:00","_rule":"-","format":"EAT","_until":""}],"Africa/Cairo":[{"name":"Africa/Cairo","_offset":"2:05:09","_rule":"-","format":"LMT","_until":"1900 Oct"},{"name":"Africa/Cairo","_offset":"2:00","_rule":"Egypt","format":"EE%sT","_until":""}],"Africa/Malabo":[{"name":"Africa/Malabo","_offset":"0:35:08","_rule":"-","format":"LMT","_until":"1912"},{"name":"Africa/Malabo","_offset":"0:00","_rule":"-","format":"GMT","_until":"1963 Dec 15"},{"name":"Africa/Malabo","_offset":"1:00","_rule":"-","format":"WAT","_until":""}],"Africa/Asmara":[{"name":"Africa/Asmara","_offset":"2:35:32","_rule":"-","format":"LMT","_until":"1870"},{"name":"Africa/Asmara","_offset":"2:35:32","_rule":"-","format":"AMT","_until":"1890"},{"name":"Africa/Asmara","_offset":"2:35:20","_rule":"-","format":"ADMT","_until":"1936 May 5"},{"name":"Africa/Asmara","_offset":"3:00","_rule":"-","format":"EAT","_until":""}],"Africa/Addis_Ababa":[{"name":"Africa/Addis_Ababa","_offset":"2:34:48","_rule":"-","format":"LMT","_until":"1870"},{"name":"Africa/Addis_Ababa","_offset":"2:35:20","_rule":"-","format":"ADMT","_until":"1936 May 5"},{"name":"Africa/Addis_Ababa","_offset":"3:00","_rule":"-","format":"EAT","_until":""}],"Africa/Libreville":[{"name":"Africa/Libreville","_offset":"0:37:48","_rule":"-","format":"LMT","_until":"1912"},{"name":"Africa/Libreville","_offset":"1:00","_rule":"-","format":"WAT","_until":""}],"Africa/Banjul":[{"name":"Africa/Banjul","_offset":"-1:06:36","_rule":"-","format":"LMT","_until":"1912"},{"name":"Africa/Banjul","_offset":"-1:06:36","_rule":"-","format":"BMT","_until":"1935"},{"name":"Africa/Banjul","_offset":"-1:00","_rule":"-","format":"WAT","_until":"1964"},{"name":"Africa/Banjul","_offset":"0:00","_rule":"-","format":"GMT","_until":""}],"Africa/Accra":[{"name":"Africa/Accra","_offset":"-0:00:52","_rule":"-","format":"LMT","_until":"1918"},{"name":"Africa/Accra","_offset":"0:00","_rule":"Ghana","format":"%s","_until":""}],"Africa/Conakry":[{"name":"Africa/Conakry","_offset":"-0:54:52","_rule":"-","format":"LMT","_until":"1912"},{"name":"Africa/Conakry","_offset":"0:00","_rule":"-","format":"GMT","_until":"1934 Feb 26"},{"name":"Africa/Conakry","_offset":"-1:00","_rule":"-","format":"WAT","_until":"1960"},{"name":"Africa/Conakry","_offset":"0:00","_rule":"-","format":"GMT","_until":""}],"Africa/Bissau":[{"name":"Africa/Bissau","_offset":"-1:02:20","_rule":"-","format":"LMT","_until":"1911 May 26"},{"name":"Africa/Bissau","_offset":"-1:00","_rule":"-","format":"WAT","_until":"1975"},{"name":"Africa/Bissau","_offset":"0:00","_rule":"-","format":"GMT","_until":""}],"Africa/Nairobi":[{"name":"Africa/Nairobi","_offset":"2:27:16","_rule":"-","format":"LMT","_until":"1928 Jul"},{"name":"Africa/Nairobi","_offset":"3:00","_rule":"-","format":"EAT","_until":"1930"},{"name":"Africa/Nairobi","_offset":"2:30","_rule":"-","format":"BEAT","_until":"1940"},{"name":"Africa/Nairobi","_offset":"2:45","_rule":"-","format":"BEAUT","_until":"1960"},{"name":"Africa/Nairobi","_offset":"3:00","_rule":"-","format":"EAT","_until":""}],"Africa/Maseru":[{"name":"Africa/Maseru","_offset":"1:50:00","_rule":"-","format":"LMT","_until":"1903 Mar"},{"name":"Africa/Maseru","_offset":"2:00","_rule":"-","format":"SAST","_until":"1943 Sep 19 2:00"},{"name":"Africa/Maseru","_offset":"2:00","_rule":"1:00","format":"SAST","_until":"1944 Mar 19 2:00"},{"name":"Africa/Maseru","_offset":"2:00","_rule":"-","format":"SAST","_until":""}],"Africa/Monrovia":[{"name":"Africa/Monrovia","_offset":"-0:43:08","_rule":"-","format":"LMT","_until":"1882"},{"name":"Africa/Monrovia","_offset":"-0:43:08","_rule":"-","format":"MMT","_until":"1919 Mar"},{"name":"Africa/Monrovia","_offset":"-0:44:30","_rule":"-","format":"LRT","_until":"1972 May"},{"name":"Africa/Monrovia","_offset":"0:00","_rule":"-","format":"GMT","_until":""}],"Africa/Tripoli":[{"name":"Africa/Tripoli","_offset":"0:52:44","_rule":"-","format":"LMT","_until":"1920"},{"name":"Africa/Tripoli","_offset":"1:00","_rule":"Libya","format":"CE%sT","_until":"1959"},{"name":"Africa/Tripoli","_offset":"2:00","_rule":"-","format":"EET","_until":"1982"},{"name":"Africa/Tripoli","_offset":"1:00","_rule":"Libya","format":"CE%sT","_until":"1990 May 4"},{"name":"Africa/Tripoli","_offset":"2:00","_rule":"-","format":"EET","_until":"1996 Sep 30"},{"name":"Africa/Tripoli","_offset":"1:00","_rule":"Libya","format":"CE%sT","_until":"1997 Oct 4"},{"name":"Africa/Tripoli","_offset":"2:00","_rule":"-","format":"EET","_until":"2012 Nov 10 2:00"},{"name":"Africa/Tripoli","_offset":"1:00","_rule":"Libya","format":"CE%sT","_until":""}],"Indian/Antananarivo":[{"name":"Indian/Antananarivo","_offset":"3:10:04","_rule":"-","format":"LMT","_until":"1911 Jul"},{"name":"Indian/Antananarivo","_offset":"3:00","_rule":"-","format":"EAT","_until":"1954 Feb 27 23:00s"},{"name":"Indian/Antananarivo","_offset":"3:00","_rule":"1:00","format":"EAST","_until":"1954 May 29 23:00s"},{"name":"Indian/Antananarivo","_offset":"3:00","_rule":"-","format":"EAT","_until":""}],"Africa/Blantyre":[{"name":"Africa/Blantyre","_offset":"2:20:00","_rule":"-","format":"LMT","_until":"1903 Mar"},{"name":"Africa/Blantyre","_offset":"2:00","_rule":"-","format":"CAT","_until":""}],"Africa/Bamako":[{"name":"Africa/Bamako","_offset":"-0:32:00","_rule":"-","format":"LMT","_until":"1912"},{"name":"Africa/Bamako","_offset":"0:00","_rule":"-","format":"GMT","_until":"1934 Feb 26"},{"name":"Africa/Bamako","_offset":"-1:00","_rule":"-","format":"WAT","_until":"1960 Jun 20"},{"name":"Africa/Bamako","_offset":"0:00","_rule":"-","format":"GMT","_until":""}],"Africa/Nouakchott":[{"name":"Africa/Nouakchott","_offset":"-1:03:48","_rule":"-","format":"LMT","_until":"1912"},{"name":"Africa/Nouakchott","_offset":"0:00","_rule":"-","format":"GMT","_until":"1934 Feb 26"},{"name":"Africa/Nouakchott","_offset":"-1:00","_rule":"-","format":"WAT","_until":"1960 Nov 28"},{"name":"Africa/Nouakchott","_offset":"0:00","_rule":"-","format":"GMT","_until":""}],"Indian/Mauritius":[{"name":"Indian/Mauritius","_offset":"3:50:00","_rule":"-","format":"LMT","_until":"1907"},{"name":"Indian/Mauritius","_offset":"4:00","_rule":"Mauritius","format":"MU%sT","_until":""}],"Indian/Mayotte":[{"name":"Indian/Mayotte","_offset":"3:00:56","_rule":"-","format":"LMT","_until":"1911 Jul"},{"name":"Indian/Mayotte","_offset":"3:00","_rule":"-","format":"EAT","_until":""}],"Africa/Casablanca":[{"name":"Africa/Casablanca","_offset":"-0:30:20","_rule":"-","format":"LMT","_until":"1913 Oct 26"},{"name":"Africa/Casablanca","_offset":"0:00","_rule":"Morocco","format":"WE%sT","_until":"1984 Mar 16"},{"name":"Africa/Casablanca","_offset":"1:00","_rule":"-","format":"CET","_until":"1986"},{"name":"Africa/Casablanca","_offset":"0:00","_rule":"Morocco","format":"WE%sT","_until":""}],"Africa/El_Aaiun":[{"name":"Africa/El_Aaiun","_offset":"-0:52:48","_rule":"-","format":"LMT","_until":"1934 Jan"},{"name":"Africa/El_Aaiun","_offset":"-1:00","_rule":"-","format":"WAT","_until":"1976 Apr 14"},{"name":"Africa/El_Aaiun","_offset":"0:00","_rule":"-","format":"WET","_until":""}],"Africa/Maputo":[{"name":"Africa/Maputo","_offset":"2:10:20","_rule":"-","format":"LMT","_until":"1903 Mar"},{"name":"Africa/Maputo","_offset":"2:00","_rule":"-","format":"CAT","_until":""}],"Africa/Windhoek":[{"name":"Africa/Windhoek","_offset":"1:08:24","_rule":"-","format":"LMT","_until":"1892 Feb 8"},{"name":"Africa/Windhoek","_offset":"1:30","_rule":"-","format":"SWAT","_until":"1903 Mar"},{"name":"Africa/Windhoek","_offset":"2:00","_rule":"-","format":"SAST","_until":"1942 Sep 20 2:00"},{"name":"Africa/Windhoek","_offset":"2:00","_rule":"1:00","format":"SAST","_until":"1943 Mar 21 2:00"},{"name":"Africa/Windhoek","_offset":"2:00","_rule":"-","format":"SAST","_until":"1990 Mar 21"},{"name":"Africa/Windhoek","_offset":"2:00","_rule":"-","format":"CAT","_until":"1994 Apr 3"},{"name":"Africa/Windhoek","_offset":"1:00","_rule":"Namibia","format":"WA%sT","_until":""}],"Africa/Niamey":[{"name":"Africa/Niamey","_offset":"0:08:28","_rule":"-","format":"LMT","_until":"1912"},{"name":"Africa/Niamey","_offset":"-1:00","_rule":"-","format":"WAT","_until":"1934 Feb 26"},{"name":"Africa/Niamey","_offset":"0:00","_rule":"-","format":"GMT","_until":"1960"},{"name":"Africa/Niamey","_offset":"1:00","_rule":"-","format":"WAT","_until":""}],"Africa/Lagos":[{"name":"Africa/Lagos","_offset":"0:13:36","_rule":"-","format":"LMT","_until":"1919 Sep"},{"name":"Africa/Lagos","_offset":"1:00","_rule":"-","format":"WAT","_until":""}],"Indian/Reunion":[{"name":"Indian/Reunion","_offset":"3:41:52","_rule":"-","format":"LMT","_until":"1911 Jun"},{"name":"Indian/Reunion","_offset":"4:00","_rule":"-","format":"RET","_until":""}],"Africa/Kigali":[{"name":"Africa/Kigali","_offset":"2:00:16","_rule":"-","format":"LMT","_until":"1935 Jun"},{"name":"Africa/Kigali","_offset":"2:00","_rule":"-","format":"CAT","_until":""}],"Atlantic/St_Helena":[{"name":"Atlantic/St_Helena","_offset":"-0:22:48","_rule":"-","format":"LMT","_until":"1890"},{"name":"Atlantic/St_Helena","_offset":"-0:22:48","_rule":"-","format":"JMT","_until":"1951"},{"name":"Atlantic/St_Helena","_offset":"0:00","_rule":"-","format":"GMT","_until":""}],"Africa/Sao_Tome":[{"name":"Africa/Sao_Tome","_offset":"0:26:56","_rule":"-","format":"LMT","_until":"1884"},{"name":"Africa/Sao_Tome","_offset":"-0:36:32","_rule":"-","format":"LMT","_until":"1912"},{"name":"Africa/Sao_Tome","_offset":"0:00","_rule":"-","format":"GMT","_until":""}],"Africa/Dakar":[{"name":"Africa/Dakar","_offset":"-1:09:44","_rule":"-","format":"LMT","_until":"1912"},{"name":"Africa/Dakar","_offset":"-1:00","_rule":"-","format":"WAT","_until":"1941 Jun"},{"name":"Africa/Dakar","_offset":"0:00","_rule":"-","format":"GMT","_until":""}],"Indian/Mahe":[{"name":"Indian/Mahe","_offset":"3:41:48","_rule":"-","format":"LMT","_until":"1906 Jun"},{"name":"Indian/Mahe","_offset":"4:00","_rule":"-","format":"SCT","_until":""}],"Africa/Freetown":[{"name":"Africa/Freetown","_offset":"-0:53:00","_rule":"-","format":"LMT","_until":"1882"},{"name":"Africa/Freetown","_offset":"-0:53:00","_rule":"-","format":"FMT","_until":"1913 Jun"},{"name":"Africa/Freetown","_offset":"-1:00","_rule":"SL","format":"%s","_until":"1957"},{"name":"Africa/Freetown","_offset":"0:00","_rule":"SL","format":"%s","_until":""}],"Africa/Mogadishu":[{"name":"Africa/Mogadishu","_offset":"3:01:28","_rule":"-","format":"LMT","_until":"1893 Nov"},{"name":"Africa/Mogadishu","_offset":"3:00","_rule":"-","format":"EAT","_until":"1931"},{"name":"Africa/Mogadishu","_offset":"2:30","_rule":"-","format":"BEAT","_until":"1957"},{"name":"Africa/Mogadishu","_offset":"3:00","_rule":"-","format":"EAT","_until":""}],"Africa/Johannesburg":[{"name":"Africa/Johannesburg","_offset":"1:52:00","_rule":"-","format":"LMT","_until":"1892 Feb 8"},{"name":"Africa/Johannesburg","_offset":"1:30","_rule":"-","format":"SAST","_until":"1903 Mar"},{"name":"Africa/Johannesburg","_offset":"2:00","_rule":"SA","format":"SAST","_until":""}],"Africa/Khartoum":[{"name":"Africa/Khartoum","_offset":"2:10:08","_rule":"-","format":"LMT","_until":"1931"},{"name":"Africa/Khartoum","_offset":"2:00","_rule":"Sudan","format":"CA%sT","_until":"2000 Jan 15 12:00"},{"name":"Africa/Khartoum","_offset":"3:00","_rule":"-","format":"EAT","_until":""}],"Africa/Juba":[{"name":"Africa/Juba","_offset":"2:06:24","_rule":"-","format":"LMT","_until":"1931"},{"name":"Africa/Juba","_offset":"2:00","_rule":"Sudan","format":"CA%sT","_until":"2000 Jan 15 12:00"},{"name":"Africa/Juba","_offset":"3:00","_rule":"-","format":"EAT","_until":""}],"Africa/Mbabane":[{"name":"Africa/Mbabane","_offset":"2:04:24","_rule":"-","format":"LMT","_until":"1903 Mar"},{"name":"Africa/Mbabane","_offset":"2:00","_rule":"-","format":"SAST","_until":""}],"Africa/Dar_es_Salaam":[{"name":"Africa/Dar_es_Salaam","_offset":"2:37:08","_rule":"-","format":"LMT","_until":"1931"},{"name":"Africa/Dar_es_Salaam","_offset":"3:00","_rule":"-","format":"EAT","_until":"1948"},{"name":"Africa/Dar_es_Salaam","_offset":"2:45","_rule":"-","format":"BEAUT","_until":"1961"},{"name":"Africa/Dar_es_Salaam","_offset":"3:00","_rule":"-","format":"EAT","_until":""}],"Africa/Lome":[{"name":"Africa/Lome","_offset":"0:04:52","_rule":"-","format":"LMT","_until":"1893"},{"name":"Africa/Lome","_offset":"0:00","_rule":"-","format":"GMT","_until":""}],"Africa/Tunis":[{"name":"Africa/Tunis","_offset":"0:40:44","_rule":"-","format":"LMT","_until":"1881 May 12"},{"name":"Africa/Tunis","_offset":"0:09:21","_rule":"-","format":"PMT","_until":"1911 Mar 11"},{"name":"Africa/Tunis","_offset":"1:00","_rule":"Tunisia","format":"CE%sT","_until":""}],"Africa/Kampala":[{"name":"Africa/Kampala","_offset":"2:09:40","_rule":"-","format":"LMT","_until":"1928 Jul"},{"name":"Africa/Kampala","_offset":"3:00","_rule":"-","format":"EAT","_until":"1930"},{"name":"Africa/Kampala","_offset":"2:30","_rule":"-","format":"BEAT","_until":"1948"},{"name":"Africa/Kampala","_offset":"2:45","_rule":"-","format":"BEAUT","_until":"1957"},{"name":"Africa/Kampala","_offset":"3:00","_rule":"-","format":"EAT","_until":""}],"Africa/Lusaka":[{"name":"Africa/Lusaka","_offset":"1:53:08","_rule":"-","format":"LMT","_until":"1903 Mar"},{"name":"Africa/Lusaka","_offset":"2:00","_rule":"-","format":"CAT","_until":""}],"Africa/Harare":[{"name":"Africa/Harare","_offset":"2:04:12","_rule":"-","format":"LMT","_until":"1903 Mar"},{"name":"Africa/Harare","_offset":"2:00","_rule":"-","format":"CAT","_until":""}],"Antarctica/Casey":[{"name":"Antarctica/Casey","_offset":"0","_rule":"-","format":"zzz","_until":"1969"},{"name":"Antarctica/Casey","_offset":"8:00","_rule":"-","format":"WST","_until":"2009 Oct 18 2:00"},{"name":"Antarctica/Casey","_offset":"11:00","_rule":"-","format":"CAST","_until":"2010 Mar 5 2:00"},{"name":"Antarctica/Casey","_offset":"8:00","_rule":"-","format":"WST","_until":"2011 Oct 28 2:00"},{"name":"Antarctica/Casey","_offset":"11:00","_rule":"-","format":"CAST","_until":"2012 Feb 21 17:00u"},{"name":"Antarctica/Casey","_offset":"8:00","_rule":"-","format":"WST","_until":""}],"Antarctica/Davis":[{"name":"Antarctica/Davis","_offset":"0","_rule":"-","format":"zzz","_until":"1957 Jan 13"},{"name":"Antarctica/Davis","_offset":"7:00","_rule":"-","format":"DAVT","_until":"1964 Nov"},{"name":"Antarctica/Davis","_offset":"0","_rule":"-","format":"zzz","_until":"1969 Feb"},{"name":"Antarctica/Davis","_offset":"7:00","_rule":"-","format":"DAVT","_until":"2009 Oct 18 2:00"},{"name":"Antarctica/Davis","_offset":"5:00","_rule":"-","format":"DAVT","_until":"2010 Mar 10 20:00u"},{"name":"Antarctica/Davis","_offset":"7:00","_rule":"-","format":"DAVT","_until":"2011 Oct 28 2:00"},{"name":"Antarctica/Davis","_offset":"5:00","_rule":"-","format":"DAVT","_until":"2012 Feb 21 20:00u"},{"name":"Antarctica/Davis","_offset":"7:00","_rule":"-","format":"DAVT","_until":""}],"Antarctica/Mawson":[{"name":"Antarctica/Mawson","_offset":"0","_rule":"-","format":"zzz","_until":"1954 Feb 13"},{"name":"Antarctica/Mawson","_offset":"6:00","_rule":"-","format":"MAWT","_until":"2009 Oct 18 2:00"},{"name":"Antarctica/Mawson","_offset":"5:00","_rule":"-","format":"MAWT","_until":""}],"Indian/Kerguelen":[{"name":"Indian/Kerguelen","_offset":"0","_rule":"-","format":"zzz","_until":"1950"},{"name":"Indian/Kerguelen","_offset":"5:00","_rule":"-","format":"TFT","_until":""}],"Antarctica/DumontDUrville":[{"name":"Antarctica/DumontDUrville","_offset":"0","_rule":"-","format":"zzz","_until":"1947"},{"name":"Antarctica/DumontDUrville","_offset":"10:00","_rule":"-","format":"PMT","_until":"1952 Jan 14"},{"name":"Antarctica/DumontDUrville","_offset":"0","_rule":"-","format":"zzz","_until":"1956 Nov"},{"name":"Antarctica/DumontDUrville","_offset":"10:00","_rule":"-","format":"DDUT","_until":""}],"Antarctica/Syowa":[{"name":"Antarctica/Syowa","_offset":"0","_rule":"-","format":"zzz","_until":"1957 Jan 29"},{"name":"Antarctica/Syowa","_offset":"3:00","_rule":"-","format":"SYOT","_until":""}],"Antarctica/Vostok":[{"name":"Antarctica/Vostok","_offset":"0","_rule":"-","format":"zzz","_until":"1957 Dec 16"},{"name":"Antarctica/Vostok","_offset":"6:00","_rule":"-","format":"VOST","_until":""}],"Antarctica/Rothera":[{"name":"Antarctica/Rothera","_offset":"0","_rule":"-","format":"zzz","_until":"1976 Dec 1"},{"name":"Antarctica/Rothera","_offset":"-3:00","_rule":"-","format":"ROTT","_until":""}],"Antarctica/Palmer":[{"name":"Antarctica/Palmer","_offset":"0","_rule":"-","format":"zzz","_until":"1965"},{"name":"Antarctica/Palmer","_offset":"-4:00","_rule":"ArgAQ","format":"AR%sT","_until":"1969 Oct 5"},{"name":"Antarctica/Palmer","_offset":"-3:00","_rule":"ArgAQ","format":"AR%sT","_until":"1982 May"},{"name":"Antarctica/Palmer","_offset":"-4:00","_rule":"ChileAQ","format":"CL%sT","_until":""}],"Antarctica/McMurdo":[{"name":"Antarctica/McMurdo","_offset":"0","_rule":"-","format":"zzz","_until":"1956"},{"name":"Antarctica/McMurdo","_offset":"12:00","_rule":"NZAQ","format":"NZ%sT","_until":""}],"Asia/Kabul":[{"name":"Asia/Kabul","_offset":"4:36:48","_rule":"-","format":"LMT","_until":"1890"},{"name":"Asia/Kabul","_offset":"4:00","_rule":"-","format":"AFT","_until":"1945"},{"name":"Asia/Kabul","_offset":"4:30","_rule":"-","format":"AFT","_until":""}],"Asia/Yerevan":[{"name":"Asia/Yerevan","_offset":"2:58:00","_rule":"-","format":"LMT","_until":"1924 May 2"},{"name":"Asia/Yerevan","_offset":"3:00","_rule":"-","format":"YERT","_until":"1957 Mar"},{"name":"Asia/Yerevan","_offset":"4:00","_rule":"RussiaAsia","format":"YER%sT","_until":"1991 Mar 31 2:00s"},{"name":"Asia/Yerevan","_offset":"3:00","_rule":"1:00","format":"YERST","_until":"1991 Sep 23"},{"name":"Asia/Yerevan","_offset":"3:00","_rule":"RussiaAsia","format":"AM%sT","_until":"1995 Sep 24 2:00s"},{"name":"Asia/Yerevan","_offset":"4:00","_rule":"-","format":"AMT","_until":"1997"},{"name":"Asia/Yerevan","_offset":"4:00","_rule":"RussiaAsia","format":"AM%sT","_until":"2012 Mar 25 2:00s"},{"name":"Asia/Yerevan","_offset":"4:00","_rule":"-","format":"AMT","_until":""}],"Asia/Baku":[{"name":"Asia/Baku","_offset":"3:19:24","_rule":"-","format":"LMT","_until":"1924 May 2"},{"name":"Asia/Baku","_offset":"3:00","_rule":"-","format":"BAKT","_until":"1957 Mar"},{"name":"Asia/Baku","_offset":"4:00","_rule":"RussiaAsia","format":"BAK%sT","_until":"1991 Mar 31 2:00s"},{"name":"Asia/Baku","_offset":"3:00","_rule":"1:00","format":"BAKST","_until":"1991 Aug 30"},{"name":"Asia/Baku","_offset":"3:00","_rule":"RussiaAsia","format":"AZ%sT","_until":"1992 Sep lastSat 23:00"},{"name":"Asia/Baku","_offset":"4:00","_rule":"-","format":"AZT","_until":"1996"},{"name":"Asia/Baku","_offset":"4:00","_rule":"EUAsia","format":"AZ%sT","_until":"1997"},{"name":"Asia/Baku","_offset":"4:00","_rule":"Azer","format":"AZ%sT","_until":""}],"Asia/Bahrain":[{"name":"Asia/Bahrain","_offset":"3:22:20","_rule":"-","format":"LMT","_until":"1920"},{"name":"Asia/Bahrain","_offset":"4:00","_rule":"-","format":"GST","_until":"1972 Jun"},{"name":"Asia/Bahrain","_offset":"3:00","_rule":"-","format":"AST","_until":""}],"Asia/Dhaka":[{"name":"Asia/Dhaka","_offset":"6:01:40","_rule":"-","format":"LMT","_until":"1890"},{"name":"Asia/Dhaka","_offset":"5:53:20","_rule":"-","format":"HMT","_until":"1941 Oct"},{"name":"Asia/Dhaka","_offset":"6:30","_rule":"-","format":"BURT","_until":"1942 May 15"},{"name":"Asia/Dhaka","_offset":"5:30","_rule":"-","format":"IST","_until":"1942 Sep"},{"name":"Asia/Dhaka","_offset":"6:30","_rule":"-","format":"BURT","_until":"1951 Sep 30"},{"name":"Asia/Dhaka","_offset":"6:00","_rule":"-","format":"DACT","_until":"1971 Mar 26"},{"name":"Asia/Dhaka","_offset":"6:00","_rule":"-","format":"BDT","_until":"2009"},{"name":"Asia/Dhaka","_offset":"6:00","_rule":"Dhaka","format":"BD%sT","_until":""}],"Asia/Thimphu":[{"name":"Asia/Thimphu","_offset":"5:58:36","_rule":"-","format":"LMT","_until":"1947 Aug 15"},{"name":"Asia/Thimphu","_offset":"5:30","_rule":"-","format":"IST","_until":"1987 Oct"},{"name":"Asia/Thimphu","_offset":"6:00","_rule":"-","format":"BTT","_until":""}],"Indian/Chagos":[{"name":"Indian/Chagos","_offset":"4:49:40","_rule":"-","format":"LMT","_until":"1907"},{"name":"Indian/Chagos","_offset":"5:00","_rule":"-","format":"IOT","_until":"1996"},{"name":"Indian/Chagos","_offset":"6:00","_rule":"-","format":"IOT","_until":""}],"Asia/Brunei":[{"name":"Asia/Brunei","_offset":"7:39:40","_rule":"-","format":"LMT","_until":"1926 Mar"},{"name":"Asia/Brunei","_offset":"7:30","_rule":"-","format":"BNT","_until":"1933"},{"name":"Asia/Brunei","_offset":"8:00","_rule":"-","format":"BNT","_until":""}],"Asia/Rangoon":[{"name":"Asia/Rangoon","_offset":"6:24:40","_rule":"-","format":"LMT","_until":"1880"},{"name":"Asia/Rangoon","_offset":"6:24:40","_rule":"-","format":"RMT","_until":"1920"},{"name":"Asia/Rangoon","_offset":"6:30","_rule":"-","format":"BURT","_until":"1942 May"},{"name":"Asia/Rangoon","_offset":"9:00","_rule":"-","format":"JST","_until":"1945 May 3"},{"name":"Asia/Rangoon","_offset":"6:30","_rule":"-","format":"MMT","_until":""}],"Asia/Phnom_Penh":[{"name":"Asia/Phnom_Penh","_offset":"6:59:40","_rule":"-","format":"LMT","_until":"1906 Jun 9"},{"name":"Asia/Phnom_Penh","_offset":"7:06:20","_rule":"-","format":"SMT","_until":"1911 Mar 11 0:01"},{"name":"Asia/Phnom_Penh","_offset":"7:00","_rule":"-","format":"ICT","_until":"1912 May"},{"name":"Asia/Phnom_Penh","_offset":"8:00","_rule":"-","format":"ICT","_until":"1931 May"},{"name":"Asia/Phnom_Penh","_offset":"7:00","_rule":"-","format":"ICT","_until":""}],"Asia/Harbin":[{"name":"Asia/Harbin","_offset":"8:26:44","_rule":"-","format":"LMT","_until":"1928"},{"name":"Asia/Harbin","_offset":"8:30","_rule":"-","format":"CHAT","_until":"1932 Mar"},{"name":"Asia/Harbin","_offset":"8:00","_rule":"-","format":"CST","_until":"1940"},{"name":"Asia/Harbin","_offset":"9:00","_rule":"-","format":"CHAT","_until":"1966 May"},{"name":"Asia/Harbin","_offset":"8:30","_rule":"-","format":"CHAT","_until":"1980 May"},{"name":"Asia/Harbin","_offset":"8:00","_rule":"PRC","format":"C%sT","_until":""}],"Asia/Shanghai":[{"name":"Asia/Shanghai","_offset":"8:05:57","_rule":"-","format":"LMT","_until":"1928"},{"name":"Asia/Shanghai","_offset":"8:00","_rule":"Shang","format":"C%sT","_until":"1949"},{"name":"Asia/Shanghai","_offset":"8:00","_rule":"PRC","format":"C%sT","_until":""}],"Asia/Chongqing":[{"name":"Asia/Chongqing","_offset":"7:06:20","_rule":"-","format":"LMT","_until":"1928"},{"name":"Asia/Chongqing","_offset":"7:00","_rule":"-","format":"LONT","_until":"1980 May"},{"name":"Asia/Chongqing","_offset":"8:00","_rule":"PRC","format":"C%sT","_until":""}],"Asia/Urumqi":[{"name":"Asia/Urumqi","_offset":"5:50:20","_rule":"-","format":"LMT","_until":"1928"},{"name":"Asia/Urumqi","_offset":"6:00","_rule":"-","format":"URUT","_until":"1980 May"},{"name":"Asia/Urumqi","_offset":"8:00","_rule":"PRC","format":"C%sT","_until":""}],"Asia/Kashgar":[{"name":"Asia/Kashgar","_offset":"5:03:56","_rule":"-","format":"LMT","_until":"1928"},{"name":"Asia/Kashgar","_offset":"5:30","_rule":"-","format":"KAST","_until":"1940"},{"name":"Asia/Kashgar","_offset":"5:00","_rule":"-","format":"KAST","_until":"1980 May"},{"name":"Asia/Kashgar","_offset":"8:00","_rule":"PRC","format":"C%sT","_until":""}],"Asia/Hong_Kong":[{"name":"Asia/Hong_Kong","_offset":"7:36:42","_rule":"-","format":"LMT","_until":"1904 Oct 30"},{"name":"Asia/Hong_Kong","_offset":"8:00","_rule":"HK","format":"HK%sT","_until":"1941 Dec 25"},{"name":"Asia/Hong_Kong","_offset":"9:00","_rule":"-","format":"JST","_until":"1945 Sep 15"},{"name":"Asia/Hong_Kong","_offset":"8:00","_rule":"HK","format":"HK%sT","_until":""}],"Asia/Taipei":[{"name":"Asia/Taipei","_offset":"8:06:00","_rule":"-","format":"LMT","_until":"1896"},{"name":"Asia/Taipei","_offset":"8:00","_rule":"Taiwan","format":"C%sT","_until":""}],"Asia/Macau":[{"name":"Asia/Macau","_offset":"7:34:20","_rule":"-","format":"LMT","_until":"1912"},{"name":"Asia/Macau","_offset":"8:00","_rule":"Macau","format":"MO%sT","_until":"1999 Dec 20"},{"name":"Asia/Macau","_offset":"8:00","_rule":"PRC","format":"C%sT","_until":""}],"Asia/Nicosia":[{"name":"Asia/Nicosia","_offset":"2:13:28","_rule":"-","format":"LMT","_until":"1921 Nov 14"},{"name":"Asia/Nicosia","_offset":"2:00","_rule":"Cyprus","format":"EE%sT","_until":"1998 Sep"},{"name":"Asia/Nicosia","_offset":"2:00","_rule":"EUAsia","format":"EE%sT","_until":""}],"Asia/Tbilisi":[{"name":"Asia/Tbilisi","_offset":"2:59:16","_rule":"-","format":"LMT","_until":"1880"},{"name":"Asia/Tbilisi","_offset":"2:59:16","_rule":"-","format":"TBMT","_until":"1924 May 2"},{"name":"Asia/Tbilisi","_offset":"3:00","_rule":"-","format":"TBIT","_until":"1957 Mar"},{"name":"Asia/Tbilisi","_offset":"4:00","_rule":"RussiaAsia","format":"TBI%sT","_until":"1991 Mar 31 2:00s"},{"name":"Asia/Tbilisi","_offset":"3:00","_rule":"1:00","format":"TBIST","_until":"1991 Apr 9"},{"name":"Asia/Tbilisi","_offset":"3:00","_rule":"RussiaAsia","format":"GE%sT","_until":"1992"},{"name":"Asia/Tbilisi","_offset":"3:00","_rule":"E-EurAsia","format":"GE%sT","_until":"1994 Sep lastSun"},{"name":"Asia/Tbilisi","_offset":"4:00","_rule":"E-EurAsia","format":"GE%sT","_until":"1996 Oct lastSun"},{"name":"Asia/Tbilisi","_offset":"4:00","_rule":"1:00","format":"GEST","_until":"1997 Mar lastSun"},{"name":"Asia/Tbilisi","_offset":"4:00","_rule":"E-EurAsia","format":"GE%sT","_until":"2004 Jun 27"},{"name":"Asia/Tbilisi","_offset":"3:00","_rule":"RussiaAsia","format":"GE%sT","_until":"2005 Mar lastSun 2:00"},{"name":"Asia/Tbilisi","_offset":"4:00","_rule":"-","format":"GET","_until":""}],"Asia/Dili":[{"name":"Asia/Dili","_offset":"8:22:20","_rule":"-","format":"LMT","_until":"1912"},{"name":"Asia/Dili","_offset":"8:00","_rule":"-","format":"TLT","_until":"1942 Feb 21 23:00"},{"name":"Asia/Dili","_offset":"9:00","_rule":"-","format":"JST","_until":"1945 Sep 23"},{"name":"Asia/Dili","_offset":"9:00","_rule":"-","format":"TLT","_until":"1976 May 3"},{"name":"Asia/Dili","_offset":"8:00","_rule":"-","format":"CIT","_until":"2000 Sep 17 00:00"},{"name":"Asia/Dili","_offset":"9:00","_rule":"-","format":"TLT","_until":""}],"Asia/Kolkata":[{"name":"Asia/Kolkata","_offset":"5:53:28","_rule":"-","format":"LMT","_until":"1880"},{"name":"Asia/Kolkata","_offset":"5:53:20","_rule":"-","format":"HMT","_until":"1941 Oct"},{"name":"Asia/Kolkata","_offset":"6:30","_rule":"-","format":"BURT","_until":"1942 May 15"},{"name":"Asia/Kolkata","_offset":"5:30","_rule":"-","format":"IST","_until":"1942 Sep"},{"name":"Asia/Kolkata","_offset":"5:30","_rule":"1:00","format":"IST","_until":"1945 Oct 15"},{"name":"Asia/Kolkata","_offset":"5:30","_rule":"-","format":"IST","_until":""}],"Asia/Jakarta":[{"name":"Asia/Jakarta","_offset":"7:07:12","_rule":"-","format":"LMT","_until":"1867 Aug 10"},{"name":"Asia/Jakarta","_offset":"7:07:12","_rule":"-","format":"JMT","_until":"1923 Dec 31 23:47:12"},{"name":"Asia/Jakarta","_offset":"7:20","_rule":"-","format":"JAVT","_until":"1932 Nov"},{"name":"Asia/Jakarta","_offset":"7:30","_rule":"-","format":"WIT","_until":"1942 Mar 23"},{"name":"Asia/Jakarta","_offset":"9:00","_rule":"-","format":"JST","_until":"1945 Sep 23"},{"name":"Asia/Jakarta","_offset":"7:30","_rule":"-","format":"WIT","_until":"1948 May"},{"name":"Asia/Jakarta","_offset":"8:00","_rule":"-","format":"WIT","_until":"1950 May"},{"name":"Asia/Jakarta","_offset":"7:30","_rule":"-","format":"WIT","_until":"1964"},{"name":"Asia/Jakarta","_offset":"7:00","_rule":"-","format":"WIT","_until":""}],"Asia/Pontianak":[{"name":"Asia/Pontianak","_offset":"7:17:20","_rule":"-","format":"LMT","_until":"1908 May"},{"name":"Asia/Pontianak","_offset":"7:17:20","_rule":"-","format":"PMT","_until":"1932 Nov"},{"name":"Asia/Pontianak","_offset":"7:30","_rule":"-","format":"WIT","_until":"1942 Jan 29"},{"name":"Asia/Pontianak","_offset":"9:00","_rule":"-","format":"JST","_until":"1945 Sep 23"},{"name":"Asia/Pontianak","_offset":"7:30","_rule":"-","format":"WIT","_until":"1948 May"},{"name":"Asia/Pontianak","_offset":"8:00","_rule":"-","format":"WIT","_until":"1950 May"},{"name":"Asia/Pontianak","_offset":"7:30","_rule":"-","format":"WIT","_until":"1964"},{"name":"Asia/Pontianak","_offset":"8:00","_rule":"-","format":"CIT","_until":"1988 Jan 1"},{"name":"Asia/Pontianak","_offset":"7:00","_rule":"-","format":"WIT","_until":""}],"Asia/Makassar":[{"name":"Asia/Makassar","_offset":"7:57:36","_rule":"-","format":"LMT","_until":"1920"},{"name":"Asia/Makassar","_offset":"7:57:36","_rule":"-","format":"MMT","_until":"1932 Nov"},{"name":"Asia/Makassar","_offset":"8:00","_rule":"-","format":"CIT","_until":"1942 Feb 9"},{"name":"Asia/Makassar","_offset":"9:00","_rule":"-","format":"JST","_until":"1945 Sep 23"},{"name":"Asia/Makassar","_offset":"8:00","_rule":"-","format":"CIT","_until":""}],"Asia/Jayapura":[{"name":"Asia/Jayapura","_offset":"9:22:48","_rule":"-","format":"LMT","_until":"1932 Nov"},{"name":"Asia/Jayapura","_offset":"9:00","_rule":"-","format":"EIT","_until":"1944 Sep 1"},{"name":"Asia/Jayapura","_offset":"9:30","_rule":"-","format":"CST","_until":"1964"},{"name":"Asia/Jayapura","_offset":"9:00","_rule":"-","format":"EIT","_until":""}],"Asia/Tehran":[{"name":"Asia/Tehran","_offset":"3:25:44","_rule":"-","format":"LMT","_until":"1916"},{"name":"Asia/Tehran","_offset":"3:25:44","_rule":"-","format":"TMT","_until":"1946"},{"name":"Asia/Tehran","_offset":"3:30","_rule":"-","format":"IRST","_until":"1977 Nov"},{"name":"Asia/Tehran","_offset":"4:00","_rule":"Iran","format":"IR%sT","_until":"1979"},{"name":"Asia/Tehran","_offset":"3:30","_rule":"Iran","format":"IR%sT","_until":""}],"Asia/Baghdad":[{"name":"Asia/Baghdad","_offset":"2:57:40","_rule":"-","format":"LMT","_until":"1890"},{"name":"Asia/Baghdad","_offset":"2:57:36","_rule":"-","format":"BMT","_until":"1918"},{"name":"Asia/Baghdad","_offset":"3:00","_rule":"-","format":"AST","_until":"1982 May"},{"name":"Asia/Baghdad","_offset":"3:00","_rule":"Iraq","format":"A%sT","_until":""}],"Asia/Jerusalem":[{"name":"Asia/Jerusalem","_offset":"2:20:54","_rule":"-","format":"LMT","_until":"1880"},{"name":"Asia/Jerusalem","_offset":"2:20:40","_rule":"-","format":"JMT","_until":"1918"},{"name":"Asia/Jerusalem","_offset":"2:00","_rule":"Zion","format":"I%sT","_until":""}],"Asia/Tokyo":[{"name":"Asia/Tokyo","_offset":"9:18:59","_rule":"-","format":"LMT","_until":"1887 Dec 31 15:00u"},{"name":"Asia/Tokyo","_offset":"9:00","_rule":"-","format":"JST","_until":"1896"},{"name":"Asia/Tokyo","_offset":"9:00","_rule":"-","format":"CJT","_until":"1938"},{"name":"Asia/Tokyo","_offset":"9:00","_rule":"Japan","format":"J%sT","_until":""}],"Asia/Amman":[{"name":"Asia/Amman","_offset":"2:23:44","_rule":"-","format":"LMT","_until":"1931"},{"name":"Asia/Amman","_offset":"2:00","_rule":"Jordan","format":"EE%sT","_until":""}],"Asia/Almaty":[{"name":"Asia/Almaty","_offset":"5:07:48","_rule":"-","format":"LMT","_until":"1924 May 2"},{"name":"Asia/Almaty","_offset":"5:00","_rule":"-","format":"ALMT","_until":"1930 Jun 21"},{"name":"Asia/Almaty","_offset":"6:00","_rule":"RussiaAsia","format":"ALM%sT","_until":"1991"},{"name":"Asia/Almaty","_offset":"6:00","_rule":"-","format":"ALMT","_until":"1992"},{"name":"Asia/Almaty","_offset":"6:00","_rule":"RussiaAsia","format":"ALM%sT","_until":"2005 Mar 15"},{"name":"Asia/Almaty","_offset":"6:00","_rule":"-","format":"ALMT","_until":""}],"Asia/Qyzylorda":[{"name":"Asia/Qyzylorda","_offset":"4:21:52","_rule":"-","format":"LMT","_until":"1924 May 2"},{"name":"Asia/Qyzylorda","_offset":"4:00","_rule":"-","format":"KIZT","_until":"1930 Jun 21"},{"name":"Asia/Qyzylorda","_offset":"5:00","_rule":"-","format":"KIZT","_until":"1981 Apr 1"},{"name":"Asia/Qyzylorda","_offset":"5:00","_rule":"1:00","format":"KIZST","_until":"1981 Oct 1"},{"name":"Asia/Qyzylorda","_offset":"6:00","_rule":"-","format":"KIZT","_until":"1982 Apr 1"},{"name":"Asia/Qyzylorda","_offset":"5:00","_rule":"RussiaAsia","format":"KIZ%sT","_until":"1991"},{"name":"Asia/Qyzylorda","_offset":"5:00","_rule":"-","format":"KIZT","_until":"1991 Dec 16"},{"name":"Asia/Qyzylorda","_offset":"5:00","_rule":"-","format":"QYZT","_until":"1992 Jan 19 2:00"},{"name":"Asia/Qyzylorda","_offset":"6:00","_rule":"RussiaAsia","format":"QYZ%sT","_until":"2005 Mar 15"},{"name":"Asia/Qyzylorda","_offset":"6:00","_rule":"-","format":"QYZT","_until":""}],"Asia/Aqtobe":[{"name":"Asia/Aqtobe","_offset":"3:48:40","_rule":"-","format":"LMT","_until":"1924 May 2"},{"name":"Asia/Aqtobe","_offset":"4:00","_rule":"-","format":"AKTT","_until":"1930 Jun 21"},{"name":"Asia/Aqtobe","_offset":"5:00","_rule":"-","format":"AKTT","_until":"1981 Apr 1"},{"name":"Asia/Aqtobe","_offset":"5:00","_rule":"1:00","format":"AKTST","_until":"1981 Oct 1"},{"name":"Asia/Aqtobe","_offset":"6:00","_rule":"-","format":"AKTT","_until":"1982 Apr 1"},{"name":"Asia/Aqtobe","_offset":"5:00","_rule":"RussiaAsia","format":"AKT%sT","_until":"1991"},{"name":"Asia/Aqtobe","_offset":"5:00","_rule":"-","format":"AKTT","_until":"1991 Dec 16"},{"name":"Asia/Aqtobe","_offset":"5:00","_rule":"RussiaAsia","format":"AQT%sT","_until":"2005 Mar 15"},{"name":"Asia/Aqtobe","_offset":"5:00","_rule":"-","format":"AQTT","_until":""}],"Asia/Aqtau":[{"name":"Asia/Aqtau","_offset":"3:21:04","_rule":"-","format":"LMT","_until":"1924 May 2"},{"name":"Asia/Aqtau","_offset":"4:00","_rule":"-","format":"FORT","_until":"1930 Jun 21"},{"name":"Asia/Aqtau","_offset":"5:00","_rule":"-","format":"FORT","_until":"1963"},{"name":"Asia/Aqtau","_offset":"5:00","_rule":"-","format":"SHET","_until":"1981 Oct 1"},{"name":"Asia/Aqtau","_offset":"6:00","_rule":"-","format":"SHET","_until":"1982 Apr 1"},{"name":"Asia/Aqtau","_offset":"5:00","_rule":"RussiaAsia","format":"SHE%sT","_until":"1991"},{"name":"Asia/Aqtau","_offset":"5:00","_rule":"-","format":"SHET","_until":"1991 Dec 16"},{"name":"Asia/Aqtau","_offset":"5:00","_rule":"RussiaAsia","format":"AQT%sT","_until":"1995 Mar lastSun 2:00"},{"name":"Asia/Aqtau","_offset":"4:00","_rule":"RussiaAsia","format":"AQT%sT","_until":"2005 Mar 15"},{"name":"Asia/Aqtau","_offset":"5:00","_rule":"-","format":"AQTT","_until":""}],"Asia/Oral":[{"name":"Asia/Oral","_offset":"3:25:24","_rule":"-","format":"LMT","_until":"1924 May 2"},{"name":"Asia/Oral","_offset":"4:00","_rule":"-","format":"URAT","_until":"1930 Jun 21"},{"name":"Asia/Oral","_offset":"5:00","_rule":"-","format":"URAT","_until":"1981 Apr 1"},{"name":"Asia/Oral","_offset":"5:00","_rule":"1:00","format":"URAST","_until":"1981 Oct 1"},{"name":"Asia/Oral","_offset":"6:00","_rule":"-","format":"URAT","_until":"1982 Apr 1"},{"name":"Asia/Oral","_offset":"5:00","_rule":"RussiaAsia","format":"URA%sT","_until":"1989 Mar 26 2:00"},{"name":"Asia/Oral","_offset":"4:00","_rule":"RussiaAsia","format":"URA%sT","_until":"1991"},{"name":"Asia/Oral","_offset":"4:00","_rule":"-","format":"URAT","_until":"1991 Dec 16"},{"name":"Asia/Oral","_offset":"4:00","_rule":"RussiaAsia","format":"ORA%sT","_until":"2005 Mar 15"},{"name":"Asia/Oral","_offset":"5:00","_rule":"-","format":"ORAT","_until":""}],"Asia/Bishkek":[{"name":"Asia/Bishkek","_offset":"4:58:24","_rule":"-","format":"LMT","_until":"1924 May 2"},{"name":"Asia/Bishkek","_offset":"5:00","_rule":"-","format":"FRUT","_until":"1930 Jun 21"},{"name":"Asia/Bishkek","_offset":"6:00","_rule":"RussiaAsia","format":"FRU%sT","_until":"1991 Mar 31 2:00s"},{"name":"Asia/Bishkek","_offset":"5:00","_rule":"1:00","format":"FRUST","_until":"1991 Aug 31 2:00"},{"name":"Asia/Bishkek","_offset":"5:00","_rule":"Kyrgyz","format":"KG%sT","_until":"2005 Aug 12"},{"name":"Asia/Bishkek","_offset":"6:00","_rule":"-","format":"KGT","_until":""}],"Asia/Seoul":[{"name":"Asia/Seoul","_offset":"8:27:52","_rule":"-","format":"LMT","_until":"1890"},{"name":"Asia/Seoul","_offset":"8:30","_rule":"-","format":"KST","_until":"1904 Dec"},{"name":"Asia/Seoul","_offset":"9:00","_rule":"-","format":"KST","_until":"1928"},{"name":"Asia/Seoul","_offset":"8:30","_rule":"-","format":"KST","_until":"1932"},{"name":"Asia/Seoul","_offset":"9:00","_rule":"-","format":"KST","_until":"1954 Mar 21"},{"name":"Asia/Seoul","_offset":"8:00","_rule":"ROK","format":"K%sT","_until":"1961 Aug 10"},{"name":"Asia/Seoul","_offset":"8:30","_rule":"-","format":"KST","_until":"1968 Oct"},{"name":"Asia/Seoul","_offset":"9:00","_rule":"ROK","format":"K%sT","_until":""}],"Asia/Pyongyang":[{"name":"Asia/Pyongyang","_offset":"8:23:00","_rule":"-","format":"LMT","_until":"1890"},{"name":"Asia/Pyongyang","_offset":"8:30","_rule":"-","format":"KST","_until":"1904 Dec"},{"name":"Asia/Pyongyang","_offset":"9:00","_rule":"-","format":"KST","_until":"1928"},{"name":"Asia/Pyongyang","_offset":"8:30","_rule":"-","format":"KST","_until":"1932"},{"name":"Asia/Pyongyang","_offset":"9:00","_rule":"-","format":"KST","_until":"1954 Mar 21"},{"name":"Asia/Pyongyang","_offset":"8:00","_rule":"-","format":"KST","_until":"1961 Aug 10"},{"name":"Asia/Pyongyang","_offset":"9:00","_rule":"-","format":"KST","_until":""}],"Asia/Kuwait":[{"name":"Asia/Kuwait","_offset":"3:11:56","_rule":"-","format":"LMT","_until":"1950"},{"name":"Asia/Kuwait","_offset":"3:00","_rule":"-","format":"AST","_until":""}],"Asia/Vientiane":[{"name":"Asia/Vientiane","_offset":"6:50:24","_rule":"-","format":"LMT","_until":"1906 Jun 9"},{"name":"Asia/Vientiane","_offset":"7:06:20","_rule":"-","format":"SMT","_until":"1911 Mar 11 0:01"},{"name":"Asia/Vientiane","_offset":"7:00","_rule":"-","format":"ICT","_until":"1912 May"},{"name":"Asia/Vientiane","_offset":"8:00","_rule":"-","format":"ICT","_until":"1931 May"},{"name":"Asia/Vientiane","_offset":"7:00","_rule":"-","format":"ICT","_until":""}],"Asia/Beirut":[{"name":"Asia/Beirut","_offset":"2:22:00","_rule":"-","format":"LMT","_until":"1880"},{"name":"Asia/Beirut","_offset":"2:00","_rule":"Lebanon","format":"EE%sT","_until":""}],"Asia/Kuala_Lumpur":[{"name":"Asia/Kuala_Lumpur","_offset":"6:46:46","_rule":"-","format":"LMT","_until":"1901 Jan 1"},{"name":"Asia/Kuala_Lumpur","_offset":"6:55:25","_rule":"-","format":"SMT","_until":"1905 Jun 1"},{"name":"Asia/Kuala_Lumpur","_offset":"7:00","_rule":"-","format":"MALT","_until":"1933 Jan 1"},{"name":"Asia/Kuala_Lumpur","_offset":"7:00","_rule":"0:20","format":"MALST","_until":"1936 Jan 1"},{"name":"Asia/Kuala_Lumpur","_offset":"7:20","_rule":"-","format":"MALT","_until":"1941 Sep 1"},{"name":"Asia/Kuala_Lumpur","_offset":"7:30","_rule":"-","format":"MALT","_until":"1942 Feb 16"},{"name":"Asia/Kuala_Lumpur","_offset":"9:00","_rule":"-","format":"JST","_until":"1945 Sep 12"},{"name":"Asia/Kuala_Lumpur","_offset":"7:30","_rule":"-","format":"MALT","_until":"1982 Jan 1"},{"name":"Asia/Kuala_Lumpur","_offset":"8:00","_rule":"-","format":"MYT","_until":""}],"Asia/Kuching":[{"name":"Asia/Kuching","_offset":"7:21:20","_rule":"-","format":"LMT","_until":"1926 Mar"},{"name":"Asia/Kuching","_offset":"7:30","_rule":"-","format":"BORT","_until":"1933"},{"name":"Asia/Kuching","_offset":"8:00","_rule":"NBorneo","format":"BOR%sT","_until":"1942 Feb 16"},{"name":"Asia/Kuching","_offset":"9:00","_rule":"-","format":"JST","_until":"1945 Sep 12"},{"name":"Asia/Kuching","_offset":"8:00","_rule":"-","format":"BORT","_until":"1982 Jan 1"},{"name":"Asia/Kuching","_offset":"8:00","_rule":"-","format":"MYT","_until":""}],"Indian/Maldives":[{"name":"Indian/Maldives","_offset":"4:54:00","_rule":"-","format":"LMT","_until":"1880"},{"name":"Indian/Maldives","_offset":"4:54:00","_rule":"-","format":"MMT","_until":"1960"},{"name":"Indian/Maldives","_offset":"5:00","_rule":"-","format":"MVT","_until":""}],"Asia/Hovd":[{"name":"Asia/Hovd","_offset":"6:06:36","_rule":"-","format":"LMT","_until":"1905 Aug"},{"name":"Asia/Hovd","_offset":"6:00","_rule":"-","format":"HOVT","_until":"1978"},{"name":"Asia/Hovd","_offset":"7:00","_rule":"Mongol","format":"HOV%sT","_until":""}],"Asia/Ulaanbaatar":[{"name":"Asia/Ulaanbaatar","_offset":"7:07:32","_rule":"-","format":"LMT","_until":"1905 Aug"},{"name":"Asia/Ulaanbaatar","_offset":"7:00","_rule":"-","format":"ULAT","_until":"1978"},{"name":"Asia/Ulaanbaatar","_offset":"8:00","_rule":"Mongol","format":"ULA%sT","_until":""}],"Asia/Choibalsan":[{"name":"Asia/Choibalsan","_offset":"7:38:00","_rule":"-","format":"LMT","_until":"1905 Aug"},{"name":"Asia/Choibalsan","_offset":"7:00","_rule":"-","format":"ULAT","_until":"1978"},{"name":"Asia/Choibalsan","_offset":"8:00","_rule":"-","format":"ULAT","_until":"1983 Apr"},{"name":"Asia/Choibalsan","_offset":"9:00","_rule":"Mongol","format":"CHO%sT","_until":"2008 Mar 31"},{"name":"Asia/Choibalsan","_offset":"8:00","_rule":"Mongol","format":"CHO%sT","_until":""}],"Asia/Kathmandu":[{"name":"Asia/Kathmandu","_offset":"5:41:16","_rule":"-","format":"LMT","_until":"1920"},{"name":"Asia/Kathmandu","_offset":"5:30","_rule":"-","format":"IST","_until":"1986"},{"name":"Asia/Kathmandu","_offset":"5:45","_rule":"-","format":"NPT","_until":""}],"Asia/Muscat":[{"name":"Asia/Muscat","_offset":"3:54:24","_rule":"-","format":"LMT","_until":"1920"},{"name":"Asia/Muscat","_offset":"4:00","_rule":"-","format":"GST","_until":""}],"Asia/Karachi":[{"name":"Asia/Karachi","_offset":"4:28:12","_rule":"-","format":"LMT","_until":"1907"},{"name":"Asia/Karachi","_offset":"5:30","_rule":"-","format":"IST","_until":"1942 Sep"},{"name":"Asia/Karachi","_offset":"5:30","_rule":"1:00","format":"IST","_until":"1945 Oct 15"},{"name":"Asia/Karachi","_offset":"5:30","_rule":"-","format":"IST","_until":"1951 Sep 30"},{"name":"Asia/Karachi","_offset":"5:00","_rule":"-","format":"KART","_until":"1971 Mar 26"},{"name":"Asia/Karachi","_offset":"5:00","_rule":"Pakistan","format":"PK%sT","_until":""}],"Asia/Gaza":[{"name":"Asia/Gaza","_offset":"2:17:52","_rule":"-","format":"LMT","_until":"1900 Oct"},{"name":"Asia/Gaza","_offset":"2:00","_rule":"Zion","format":"EET","_until":"1948 May 15"},{"name":"Asia/Gaza","_offset":"2:00","_rule":"EgyptAsia","format":"EE%sT","_until":"1967 Jun 5"},{"name":"Asia/Gaza","_offset":"2:00","_rule":"Zion","format":"I%sT","_until":"1996"},{"name":"Asia/Gaza","_offset":"2:00","_rule":"Jordan","format":"EE%sT","_until":"1999"},{"name":"Asia/Gaza","_offset":"2:00","_rule":"Palestine","format":"EE%sT","_until":"2008 Aug 29 0:00"},{"name":"Asia/Gaza","_offset":"2:00","_rule":"-","format":"EET","_until":"2008 Sep"},{"name":"Asia/Gaza","_offset":"2:00","_rule":"Palestine","format":"EE%sT","_until":"2010"},{"name":"Asia/Gaza","_offset":"2:00","_rule":"-","format":"EET","_until":"2010 Mar 27 0:01"},{"name":"Asia/Gaza","_offset":"2:00","_rule":"Palestine","format":"EE%sT","_until":"2011 Aug 1"},{"name":"Asia/Gaza","_offset":"2:00","_rule":"-","format":"EET","_until":"2012"},{"name":"Asia/Gaza","_offset":"2:00","_rule":"Palestine","format":"EE%sT","_until":""}],"Asia/Hebron":[{"name":"Asia/Hebron","_offset":"2:20:23","_rule":"-","format":"LMT","_until":"1900 Oct"},{"name":"Asia/Hebron","_offset":"2:00","_rule":"Zion","format":"EET","_until":"1948 May 15"},{"name":"Asia/Hebron","_offset":"2:00","_rule":"EgyptAsia","format":"EE%sT","_until":"1967 Jun 5"},{"name":"Asia/Hebron","_offset":"2:00","_rule":"Zion","format":"I%sT","_until":"1996"},{"name":"Asia/Hebron","_offset":"2:00","_rule":"Jordan","format":"EE%sT","_until":"1999"},{"name":"Asia/Hebron","_offset":"2:00","_rule":"Palestine","format":"EE%sT","_until":""}],"Asia/Manila":[{"name":"Asia/Manila","_offset":"-15:56:00","_rule":"-","format":"LMT","_until":"1844 Dec 31"},{"name":"Asia/Manila","_offset":"8:04:00","_rule":"-","format":"LMT","_until":"1899 May 11"},{"name":"Asia/Manila","_offset":"8:00","_rule":"Phil","format":"PH%sT","_until":"1942 May"},{"name":"Asia/Manila","_offset":"9:00","_rule":"-","format":"JST","_until":"1944 Nov"},{"name":"Asia/Manila","_offset":"8:00","_rule":"Phil","format":"PH%sT","_until":""}],"Asia/Qatar":[{"name":"Asia/Qatar","_offset":"3:26:08","_rule":"-","format":"LMT","_until":"1920"},{"name":"Asia/Qatar","_offset":"4:00","_rule":"-","format":"GST","_until":"1972 Jun"},{"name":"Asia/Qatar","_offset":"3:00","_rule":"-","format":"AST","_until":""}],"Asia/Riyadh":[{"name":"Asia/Riyadh","_offset":"3:06:52","_rule":"-","format":"LMT","_until":"1950"},{"name":"Asia/Riyadh","_offset":"3:00","_rule":"-","format":"AST","_until":""}],"Asia/Singapore":[{"name":"Asia/Singapore","_offset":"6:55:25","_rule":"-","format":"LMT","_until":"1901 Jan 1"},{"name":"Asia/Singapore","_offset":"6:55:25","_rule":"-","format":"SMT","_until":"1905 Jun 1"},{"name":"Asia/Singapore","_offset":"7:00","_rule":"-","format":"MALT","_until":"1933 Jan 1"},{"name":"Asia/Singapore","_offset":"7:00","_rule":"0:20","format":"MALST","_until":"1936 Jan 1"},{"name":"Asia/Singapore","_offset":"7:20","_rule":"-","format":"MALT","_until":"1941 Sep 1"},{"name":"Asia/Singapore","_offset":"7:30","_rule":"-","format":"MALT","_until":"1942 Feb 16"},{"name":"Asia/Singapore","_offset":"9:00","_rule":"-","format":"JST","_until":"1945 Sep 12"},{"name":"Asia/Singapore","_offset":"7:30","_rule":"-","format":"MALT","_until":"1965 Aug 9"},{"name":"Asia/Singapore","_offset":"7:30","_rule":"-","format":"SGT","_until":"1982 Jan 1"},{"name":"Asia/Singapore","_offset":"8:00","_rule":"-","format":"SGT","_until":""}],"Asia/Colombo":[{"name":"Asia/Colombo","_offset":"5:19:24","_rule":"-","format":"LMT","_until":"1880"},{"name":"Asia/Colombo","_offset":"5:19:32","_rule":"-","format":"MMT","_until":"1906"},{"name":"Asia/Colombo","_offset":"5:30","_rule":"-","format":"IST","_until":"1942 Jan 5"},{"name":"Asia/Colombo","_offset":"5:30","_rule":"0:30","format":"IHST","_until":"1942 Sep"},{"name":"Asia/Colombo","_offset":"5:30","_rule":"1:00","format":"IST","_until":"1945 Oct 16 2:00"},{"name":"Asia/Colombo","_offset":"5:30","_rule":"-","format":"IST","_until":"1996 May 25 0:00"},{"name":"Asia/Colombo","_offset":"6:30","_rule":"-","format":"LKT","_until":"1996 Oct 26 0:30"},{"name":"Asia/Colombo","_offset":"6:00","_rule":"-","format":"LKT","_until":"2006 Apr 15 0:30"},{"name":"Asia/Colombo","_offset":"5:30","_rule":"-","format":"IST","_until":""}],"Asia/Damascus":[{"name":"Asia/Damascus","_offset":"2:25:12","_rule":"-","format":"LMT","_until":"1920"},{"name":"Asia/Damascus","_offset":"2:00","_rule":"Syria","format":"EE%sT","_until":""}],"Asia/Dushanbe":[{"name":"Asia/Dushanbe","_offset":"4:35:12","_rule":"-","format":"LMT","_until":"1924 May 2"},{"name":"Asia/Dushanbe","_offset":"5:00","_rule":"-","format":"DUST","_until":"1930 Jun 21"},{"name":"Asia/Dushanbe","_offset":"6:00","_rule":"RussiaAsia","format":"DUS%sT","_until":"1991 Mar 31 2:00s"},{"name":"Asia/Dushanbe","_offset":"5:00","_rule":"1:00","format":"DUSST","_until":"1991 Sep 9 2:00s"},{"name":"Asia/Dushanbe","_offset":"5:00","_rule":"-","format":"TJT","_until":""}],"Asia/Bangkok":[{"name":"Asia/Bangkok","_offset":"6:42:04","_rule":"-","format":"LMT","_until":"1880"},{"name":"Asia/Bangkok","_offset":"6:42:04","_rule":"-","format":"BMT","_until":"1920 Apr"},{"name":"Asia/Bangkok","_offset":"7:00","_rule":"-","format":"ICT","_until":""}],"Asia/Ashgabat":[{"name":"Asia/Ashgabat","_offset":"3:53:32","_rule":"-","format":"LMT","_until":"1924 May 2"},{"name":"Asia/Ashgabat","_offset":"4:00","_rule":"-","format":"ASHT","_until":"1930 Jun 21"},{"name":"Asia/Ashgabat","_offset":"5:00","_rule":"RussiaAsia","format":"ASH%sT","_until":"1991 Mar 31 2:00"},{"name":"Asia/Ashgabat","_offset":"4:00","_rule":"RussiaAsia","format":"ASH%sT","_until":"1991 Oct 27"},{"name":"Asia/Ashgabat","_offset":"4:00","_rule":"RussiaAsia","format":"TM%sT","_until":"1992 Jan 19 2:00"},{"name":"Asia/Ashgabat","_offset":"5:00","_rule":"-","format":"TMT","_until":""}],"Asia/Dubai":[{"name":"Asia/Dubai","_offset":"3:41:12","_rule":"-","format":"LMT","_until":"1920"},{"name":"Asia/Dubai","_offset":"4:00","_rule":"-","format":"GST","_until":""}],"Asia/Samarkand":[{"name":"Asia/Samarkand","_offset":"4:27:12","_rule":"-","format":"LMT","_until":"1924 May 2"},{"name":"Asia/Samarkand","_offset":"4:00","_rule":"-","format":"SAMT","_until":"1930 Jun 21"},{"name":"Asia/Samarkand","_offset":"5:00","_rule":"-","format":"SAMT","_until":"1981 Apr 1"},{"name":"Asia/Samarkand","_offset":"5:00","_rule":"1:00","format":"SAMST","_until":"1981 Oct 1"},{"name":"Asia/Samarkand","_offset":"6:00","_rule":"-","format":"TAST","_until":"1982 Apr 1"},{"name":"Asia/Samarkand","_offset":"5:00","_rule":"RussiaAsia","format":"SAM%sT","_until":"1991 Sep 1"},{"name":"Asia/Samarkand","_offset":"5:00","_rule":"RussiaAsia","format":"UZ%sT","_until":"1992"},{"name":"Asia/Samarkand","_offset":"5:00","_rule":"-","format":"UZT","_until":""}],"Asia/Tashkent":[{"name":"Asia/Tashkent","_offset":"4:37:12","_rule":"-","format":"LMT","_until":"1924 May 2"},{"name":"Asia/Tashkent","_offset":"5:00","_rule":"-","format":"TAST","_until":"1930 Jun 21"},{"name":"Asia/Tashkent","_offset":"6:00","_rule":"RussiaAsia","format":"TAS%sT","_until":"1991 Mar 31 2:00"},{"name":"Asia/Tashkent","_offset":"5:00","_rule":"RussiaAsia","format":"TAS%sT","_until":"1991 Sep 1"},{"name":"Asia/Tashkent","_offset":"5:00","_rule":"RussiaAsia","format":"UZ%sT","_until":"1992"},{"name":"Asia/Tashkent","_offset":"5:00","_rule":"-","format":"UZT","_until":""}],"Asia/Ho_Chi_Minh":[{"name":"Asia/Ho_Chi_Minh","_offset":"7:06:40","_rule":"-","format":"LMT","_until":"1906 Jun 9"},{"name":"Asia/Ho_Chi_Minh","_offset":"7:06:20","_rule":"-","format":"SMT","_until":"1911 Mar 11 0:01"},{"name":"Asia/Ho_Chi_Minh","_offset":"7:00","_rule":"-","format":"ICT","_until":"1912 May"},{"name":"Asia/Ho_Chi_Minh","_offset":"8:00","_rule":"-","format":"ICT","_until":"1931 May"},{"name":"Asia/Ho_Chi_Minh","_offset":"7:00","_rule":"-","format":"ICT","_until":""}],"Asia/Aden":[{"name":"Asia/Aden","_offset":"2:59:54","_rule":"-","format":"LMT","_until":"1950"},{"name":"Asia/Aden","_offset":"3:00","_rule":"-","format":"AST","_until":""}],"Australia/Darwin":[{"name":"Australia/Darwin","_offset":"8:43:20","_rule":"-","format":"LMT","_until":"1895 Feb"},{"name":"Australia/Darwin","_offset":"9:00","_rule":"-","format":"CST","_until":"1899 May"},{"name":"Australia/Darwin","_offset":"9:30","_rule":"Aus","format":"CST","_until":""}],"Australia/Perth":[{"name":"Australia/Perth","_offset":"7:43:24","_rule":"-","format":"LMT","_until":"1895 Dec"},{"name":"Australia/Perth","_offset":"8:00","_rule":"Aus","format":"WST","_until":"1943 Jul"},{"name":"Australia/Perth","_offset":"8:00","_rule":"AW","format":"WST","_until":""}],"Australia/Eucla":[{"name":"Australia/Eucla","_offset":"8:35:28","_rule":"-","format":"LMT","_until":"1895 Dec"},{"name":"Australia/Eucla","_offset":"8:45","_rule":"Aus","format":"CWST","_until":"1943 Jul"},{"name":"Australia/Eucla","_offset":"8:45","_rule":"AW","format":"CWST","_until":""}],"Australia/Brisbane":[{"name":"Australia/Brisbane","_offset":"10:12:08","_rule":"-","format":"LMT","_until":"1895"},{"name":"Australia/Brisbane","_offset":"10:00","_rule":"Aus","format":"EST","_until":"1971"},{"name":"Australia/Brisbane","_offset":"10:00","_rule":"AQ","format":"EST","_until":""}],"Australia/Lindeman":[{"name":"Australia/Lindeman","_offset":"9:55:56","_rule":"-","format":"LMT","_until":"1895"},{"name":"Australia/Lindeman","_offset":"10:00","_rule":"Aus","format":"EST","_until":"1971"},{"name":"Australia/Lindeman","_offset":"10:00","_rule":"AQ","format":"EST","_until":"1992 Jul"},{"name":"Australia/Lindeman","_offset":"10:00","_rule":"Holiday","format":"EST","_until":""}],"Australia/Adelaide":[{"name":"Australia/Adelaide","_offset":"9:14:20","_rule":"-","format":"LMT","_until":"1895 Feb"},{"name":"Australia/Adelaide","_offset":"9:00","_rule":"-","format":"CST","_until":"1899 May"},{"name":"Australia/Adelaide","_offset":"9:30","_rule":"Aus","format":"CST","_until":"1971"},{"name":"Australia/Adelaide","_offset":"9:30","_rule":"AS","format":"CST","_until":""}],"Australia/Hobart":[{"name":"Australia/Hobart","_offset":"9:49:16","_rule":"-","format":"LMT","_until":"1895 Sep"},{"name":"Australia/Hobart","_offset":"10:00","_rule":"-","format":"EST","_until":"1916 Oct 1 2:00"},{"name":"Australia/Hobart","_offset":"10:00","_rule":"1:00","format":"EST","_until":"1917 Feb"},{"name":"Australia/Hobart","_offset":"10:00","_rule":"Aus","format":"EST","_until":"1967"},{"name":"Australia/Hobart","_offset":"10:00","_rule":"AT","format":"EST","_until":""}],"Australia/Currie":[{"name":"Australia/Currie","_offset":"9:35:28","_rule":"-","format":"LMT","_until":"1895 Sep"},{"name":"Australia/Currie","_offset":"10:00","_rule":"-","format":"EST","_until":"1916 Oct 1 2:00"},{"name":"Australia/Currie","_offset":"10:00","_rule":"1:00","format":"EST","_until":"1917 Feb"},{"name":"Australia/Currie","_offset":"10:00","_rule":"Aus","format":"EST","_until":"1971 Jul"},{"name":"Australia/Currie","_offset":"10:00","_rule":"AT","format":"EST","_until":""}],"Australia/Melbourne":[{"name":"Australia/Melbourne","_offset":"9:39:52","_rule":"-","format":"LMT","_until":"1895 Feb"},{"name":"Australia/Melbourne","_offset":"10:00","_rule":"Aus","format":"EST","_until":"1971"},{"name":"Australia/Melbourne","_offset":"10:00","_rule":"AV","format":"EST","_until":""}],"Australia/Sydney":[{"name":"Australia/Sydney","_offset":"10:04:52","_rule":"-","format":"LMT","_until":"1895 Feb"},{"name":"Australia/Sydney","_offset":"10:00","_rule":"Aus","format":"EST","_until":"1971"},{"name":"Australia/Sydney","_offset":"10:00","_rule":"AN","format":"EST","_until":""}],"Australia/Broken_Hill":[{"name":"Australia/Broken_Hill","_offset":"9:25:48","_rule":"-","format":"LMT","_until":"1895 Feb"},{"name":"Australia/Broken_Hill","_offset":"10:00","_rule":"-","format":"EST","_until":"1896 Aug 23"},{"name":"Australia/Broken_Hill","_offset":"9:00","_rule":"-","format":"CST","_until":"1899 May"},{"name":"Australia/Broken_Hill","_offset":"9:30","_rule":"Aus","format":"CST","_until":"1971"},{"name":"Australia/Broken_Hill","_offset":"9:30","_rule":"AN","format":"CST","_until":"2000"},{"name":"Australia/Broken_Hill","_offset":"9:30","_rule":"AS","format":"CST","_until":""}],"Australia/Lord_Howe":[{"name":"Australia/Lord_Howe","_offset":"10:36:20","_rule":"-","format":"LMT","_until":"1895 Feb"},{"name":"Australia/Lord_Howe","_offset":"10:00","_rule":"-","format":"EST","_until":"1981 Mar"},{"name":"Australia/Lord_Howe","_offset":"10:30","_rule":"LH","format":"LHST","_until":""}],"Antarctica/Macquarie":[{"name":"Antarctica/Macquarie","_offset":"0","_rule":"-","format":"zzz","_until":"1899 Nov"},{"name":"Antarctica/Macquarie","_offset":"10:00","_rule":"-","format":"EST","_until":"1916 Oct 1 2:00"},{"name":"Antarctica/Macquarie","_offset":"10:00","_rule":"1:00","format":"EST","_until":"1917 Feb"},{"name":"Antarctica/Macquarie","_offset":"10:00","_rule":"Aus","format":"EST","_until":"1919 Apr 1 0:00s"},{"name":"Antarctica/Macquarie","_offset":"0","_rule":"-","format":"zzz","_until":"1948 Mar 25"},{"name":"Antarctica/Macquarie","_offset":"10:00","_rule":"Aus","format":"EST","_until":"1967"},{"name":"Antarctica/Macquarie","_offset":"10:00","_rule":"AT","format":"EST","_until":"2010 Apr 4 3:00"},{"name":"Antarctica/Macquarie","_offset":"11:00","_rule":"-","format":"MIST","_until":""}],"Indian/Christmas":[{"name":"Indian/Christmas","_offset":"7:02:52","_rule":"-","format":"LMT","_until":"1895 Feb"},{"name":"Indian/Christmas","_offset":"7:00","_rule":"-","format":"CXT","_until":""}],"Pacific/Rarotonga":[{"name":"Pacific/Rarotonga","_offset":"-10:39:04","_rule":"-","format":"LMT","_until":"1901"},{"name":"Pacific/Rarotonga","_offset":"-10:30","_rule":"-","format":"CKT","_until":"1978 Nov 12"},{"name":"Pacific/Rarotonga","_offset":"-10:00","_rule":"Cook","format":"CK%sT","_until":""}],"Indian/Cocos":[{"name":"Indian/Cocos","_offset":"6:27:40","_rule":"-","format":"LMT","_until":"1900"},{"name":"Indian/Cocos","_offset":"6:30","_rule":"-","format":"CCT","_until":""}],"Pacific/Fiji":[{"name":"Pacific/Fiji","_offset":"11:55:44","_rule":"-","format":"LMT","_until":"1915 Oct 26"},{"name":"Pacific/Fiji","_offset":"12:00","_rule":"Fiji","format":"FJ%sT","_until":""}],"Pacific/Gambier":[{"name":"Pacific/Gambier","_offset":"-8:59:48","_rule":"-","format":"LMT","_until":"1912 Oct"},{"name":"Pacific/Gambier","_offset":"-9:00","_rule":"-","format":"GAMT","_until":""}],"Pacific/Marquesas":[{"name":"Pacific/Marquesas","_offset":"-9:18:00","_rule":"-","format":"LMT","_until":"1912 Oct"},{"name":"Pacific/Marquesas","_offset":"-9:30","_rule":"-","format":"MART","_until":""}],"Pacific/Tahiti":[{"name":"Pacific/Tahiti","_offset":"-9:58:16","_rule":"-","format":"LMT","_until":"1912 Oct"},{"name":"Pacific/Tahiti","_offset":"-10:00","_rule":"-","format":"TAHT","_until":""}],"Pacific/Guam":[{"name":"Pacific/Guam","_offset":"-14:21:00","_rule":"-","format":"LMT","_until":"1844 Dec 31"},{"name":"Pacific/Guam","_offset":"9:39:00","_rule":"-","format":"LMT","_until":"1901"},{"name":"Pacific/Guam","_offset":"10:00","_rule":"-","format":"GST","_until":"2000 Dec 23"},{"name":"Pacific/Guam","_offset":"10:00","_rule":"-","format":"ChST","_until":""}],"Pacific/Tarawa":[{"name":"Pacific/Tarawa","_offset":"11:32:04","_rule":"-","format":"LMT","_until":"1901"},{"name":"Pacific/Tarawa","_offset":"12:00","_rule":"-","format":"GILT","_until":""}],"Pacific/Enderbury":[{"name":"Pacific/Enderbury","_offset":"-11:24:20","_rule":"-","format":"LMT","_until":"1901"},{"name":"Pacific/Enderbury","_offset":"-12:00","_rule":"-","format":"PHOT","_until":"1979 Oct"},{"name":"Pacific/Enderbury","_offset":"-11:00","_rule":"-","format":"PHOT","_until":"1995"},{"name":"Pacific/Enderbury","_offset":"13:00","_rule":"-","format":"PHOT","_until":""}],"Pacific/Kiritimati":[{"name":"Pacific/Kiritimati","_offset":"-10:29:20","_rule":"-","format":"LMT","_until":"1901"},{"name":"Pacific/Kiritimati","_offset":"-10:40","_rule":"-","format":"LINT","_until":"1979 Oct"},{"name":"Pacific/Kiritimati","_offset":"-10:00","_rule":"-","format":"LINT","_until":"1995"},{"name":"Pacific/Kiritimati","_offset":"14:00","_rule":"-","format":"LINT","_until":""}],"Pacific/Saipan":[{"name":"Pacific/Saipan","_offset":"-14:17:00","_rule":"-","format":"LMT","_until":"1844 Dec 31"},{"name":"Pacific/Saipan","_offset":"9:43:00","_rule":"-","format":"LMT","_until":"1901"},{"name":"Pacific/Saipan","_offset":"9:00","_rule":"-","format":"MPT","_until":"1969 Oct"},{"name":"Pacific/Saipan","_offset":"10:00","_rule":"-","format":"MPT","_until":"2000 Dec 23"},{"name":"Pacific/Saipan","_offset":"10:00","_rule":"-","format":"ChST","_until":""}],"Pacific/Majuro":[{"name":"Pacific/Majuro","_offset":"11:24:48","_rule":"-","format":"LMT","_until":"1901"},{"name":"Pacific/Majuro","_offset":"11:00","_rule":"-","format":"MHT","_until":"1969 Oct"},{"name":"Pacific/Majuro","_offset":"12:00","_rule":"-","format":"MHT","_until":""}],"Pacific/Kwajalein":[{"name":"Pacific/Kwajalein","_offset":"11:09:20","_rule":"-","format":"LMT","_until":"1901"},{"name":"Pacific/Kwajalein","_offset":"11:00","_rule":"-","format":"MHT","_until":"1969 Oct"},{"name":"Pacific/Kwajalein","_offset":"-12:00","_rule":"-","format":"KWAT","_until":"1993 Aug 20"},{"name":"Pacific/Kwajalein","_offset":"12:00","_rule":"-","format":"MHT","_until":""}],"Pacific/Chuuk":[{"name":"Pacific/Chuuk","_offset":"10:07:08","_rule":"-","format":"LMT","_until":"1901"},{"name":"Pacific/Chuuk","_offset":"10:00","_rule":"-","format":"CHUT","_until":""}],"Pacific/Pohnpei":[{"name":"Pacific/Pohnpei","_offset":"10:32:52","_rule":"-","format":"LMT","_until":"1901"},{"name":"Pacific/Pohnpei","_offset":"11:00","_rule":"-","format":"PONT","_until":""}],"Pacific/Kosrae":[{"name":"Pacific/Kosrae","_offset":"10:51:56","_rule":"-","format":"LMT","_until":"1901"},{"name":"Pacific/Kosrae","_offset":"11:00","_rule":"-","format":"KOST","_until":"1969 Oct"},{"name":"Pacific/Kosrae","_offset":"12:00","_rule":"-","format":"KOST","_until":"1999"},{"name":"Pacific/Kosrae","_offset":"11:00","_rule":"-","format":"KOST","_until":""}],"Pacific/Nauru":[{"name":"Pacific/Nauru","_offset":"11:07:40","_rule":"-","format":"LMT","_until":"1921 Jan 15"},{"name":"Pacific/Nauru","_offset":"11:30","_rule":"-","format":"NRT","_until":"1942 Mar 15"},{"name":"Pacific/Nauru","_offset":"9:00","_rule":"-","format":"JST","_until":"1944 Aug 15"},{"name":"Pacific/Nauru","_offset":"11:30","_rule":"-","format":"NRT","_until":"1979 May"},{"name":"Pacific/Nauru","_offset":"12:00","_rule":"-","format":"NRT","_until":""}],"Pacific/Noumea":[{"name":"Pacific/Noumea","_offset":"11:05:48","_rule":"-","format":"LMT","_until":"1912 Jan 13"},{"name":"Pacific/Noumea","_offset":"11:00","_rule":"NC","format":"NC%sT","_until":""}],"Pacific/Auckland":[{"name":"Pacific/Auckland","_offset":"11:39:04","_rule":"-","format":"LMT","_until":"1868 Nov 2"},{"name":"Pacific/Auckland","_offset":"11:30","_rule":"NZ","format":"NZ%sT","_until":"1946 Jan 1"},{"name":"Pacific/Auckland","_offset":"12:00","_rule":"NZ","format":"NZ%sT","_until":""}],"Pacific/Chatham":[{"name":"Pacific/Chatham","_offset":"12:13:48","_rule":"-","format":"LMT","_until":"1957 Jan 1"},{"name":"Pacific/Chatham","_offset":"12:45","_rule":"Chatham","format":"CHA%sT","_until":""}],"Pacific/Niue":[{"name":"Pacific/Niue","_offset":"-11:19:40","_rule":"-","format":"LMT","_until":"1901"},{"name":"Pacific/Niue","_offset":"-11:20","_rule":"-","format":"NUT","_until":"1951"},{"name":"Pacific/Niue","_offset":"-11:30","_rule":"-","format":"NUT","_until":"1978 Oct 1"},{"name":"Pacific/Niue","_offset":"-11:00","_rule":"-","format":"NUT","_until":""}],"Pacific/Norfolk":[{"name":"Pacific/Norfolk","_offset":"11:11:52","_rule":"-","format":"LMT","_until":"1901"},{"name":"Pacific/Norfolk","_offset":"11:12","_rule":"-","format":"NMT","_until":"1951"},{"name":"Pacific/Norfolk","_offset":"11:30","_rule":"-","format":"NFT","_until":""}],"Pacific/Palau":[{"name":"Pacific/Palau","_offset":"8:57:56","_rule":"-","format":"LMT","_until":"1901"},{"name":"Pacific/Palau","_offset":"9:00","_rule":"-","format":"PWT","_until":""}],"Pacific/Port_Moresby":[{"name":"Pacific/Port_Moresby","_offset":"9:48:40","_rule":"-","format":"LMT","_until":"1880"},{"name":"Pacific/Port_Moresby","_offset":"9:48:32","_rule":"-","format":"PMMT","_until":"1895"},{"name":"Pacific/Port_Moresby","_offset":"10:00","_rule":"-","format":"PGT","_until":""}],"Pacific/Pitcairn":[{"name":"Pacific/Pitcairn","_offset":"-8:40:20","_rule":"-","format":"LMT","_until":"1901"},{"name":"Pacific/Pitcairn","_offset":"-8:30","_rule":"-","format":"PNT","_until":"1998 Apr 27 00:00"},{"name":"Pacific/Pitcairn","_offset":"-8:00","_rule":"-","format":"PST","_until":""}],"Pacific/Pago_Pago":[{"name":"Pacific/Pago_Pago","_offset":"12:37:12","_rule":"-","format":"LMT","_until":"1879 Jul 5"},{"name":"Pacific/Pago_Pago","_offset":"-11:22:48","_rule":"-","format":"LMT","_until":"1911"},{"name":"Pacific/Pago_Pago","_offset":"-11:30","_rule":"-","format":"SAMT","_until":"1950"},{"name":"Pacific/Pago_Pago","_offset":"-11:00","_rule":"-","format":"NST","_until":"1967 Apr"},{"name":"Pacific/Pago_Pago","_offset":"-11:00","_rule":"-","format":"BST","_until":"1983 Nov 30"},{"name":"Pacific/Pago_Pago","_offset":"-11:00","_rule":"-","format":"SST","_until":""}],"Pacific/Apia":[{"name":"Pacific/Apia","_offset":"12:33:04","_rule":"-","format":"LMT","_until":"1879 Jul 5"},{"name":"Pacific/Apia","_offset":"-11:26:56","_rule":"-","format":"LMT","_until":"1911"},{"name":"Pacific/Apia","_offset":"-11:30","_rule":"-","format":"SAMT","_until":"1950"},{"name":"Pacific/Apia","_offset":"-11:00","_rule":"-","format":"WST","_until":"2010 Sep 26"},{"name":"Pacific/Apia","_offset":"-11:00","_rule":"1:00","format":"WSDT","_until":"2011 Apr 2 4:00"},{"name":"Pacific/Apia","_offset":"-11:00","_rule":"-","format":"WST","_until":"2011 Sep 24 3:00"},{"name":"Pacific/Apia","_offset":"-11:00","_rule":"1:00","format":"WSDT","_until":"2011 Dec 30"},{"name":"Pacific/Apia","_offset":"13:00","_rule":"1:00","format":"WSDT","_until":"2012 Apr Sun>=1 4:00"},{"name":"Pacific/Apia","_offset":"13:00","_rule":"WS","format":"WS%sT","_until":""}],"Pacific/Guadalcanal":[{"name":"Pacific/Guadalcanal","_offset":"10:39:48","_rule":"-","format":"LMT","_until":"1912 Oct"},{"name":"Pacific/Guadalcanal","_offset":"11:00","_rule":"-","format":"SBT","_until":""}],"Pacific/Fakaofo":[{"name":"Pacific/Fakaofo","_offset":"-11:24:56","_rule":"-","format":"LMT","_until":"1901"},{"name":"Pacific/Fakaofo","_offset":"-11:00","_rule":"-","format":"TKT","_until":"2011 Dec 30"},{"name":"Pacific/Fakaofo","_offset":"13:00","_rule":"-","format":"TKT","_until":""}],"Pacific/Tongatapu":[{"name":"Pacific/Tongatapu","_offset":"12:19:20","_rule":"-","format":"LMT","_until":"1901"},{"name":"Pacific/Tongatapu","_offset":"12:20","_rule":"-","format":"TOT","_until":"1941"},{"name":"Pacific/Tongatapu","_offset":"13:00","_rule":"-","format":"TOT","_until":"1999"},{"name":"Pacific/Tongatapu","_offset":"13:00","_rule":"Tonga","format":"TO%sT","_until":""}],"Pacific/Funafuti":[{"name":"Pacific/Funafuti","_offset":"11:56:52","_rule":"-","format":"LMT","_until":"1901"},{"name":"Pacific/Funafuti","_offset":"12:00","_rule":"-","format":"TVT","_until":""}],"Pacific/Johnston":[{"name":"Pacific/Johnston","_offset":"-10:00","_rule":"-","format":"HST","_until":""}],"Pacific/Midway":[{"name":"Pacific/Midway","_offset":"-11:49:28","_rule":"-","format":"LMT","_until":"1901"},{"name":"Pacific/Midway","_offset":"-11:00","_rule":"-","format":"NST","_until":"1956 Jun 3"},{"name":"Pacific/Midway","_offset":"-11:00","_rule":"1:00","format":"NDT","_until":"1956 Sep 2"},{"name":"Pacific/Midway","_offset":"-11:00","_rule":"-","format":"NST","_until":"1967 Apr"},{"name":"Pacific/Midway","_offset":"-11:00","_rule":"-","format":"BST","_until":"1983 Nov 30"},{"name":"Pacific/Midway","_offset":"-11:00","_rule":"-","format":"SST","_until":""}],"Pacific/Wake":[{"name":"Pacific/Wake","_offset":"11:06:28","_rule":"-","format":"LMT","_until":"1901"},{"name":"Pacific/Wake","_offset":"12:00","_rule":"-","format":"WAKT","_until":""}],"Pacific/Efate":[{"name":"Pacific/Efate","_offset":"11:13:16","_rule":"-","format":"LMT","_until":"1912 Jan 13"},{"name":"Pacific/Efate","_offset":"11:00","_rule":"Vanuatu","format":"VU%sT","_until":""}],"Pacific/Wallis":[{"name":"Pacific/Wallis","_offset":"12:15:20","_rule":"-","format":"LMT","_until":"1901"},{"name":"Pacific/Wallis","_offset":"12:00","_rule":"-","format":"WFT","_until":""}],"Etc/GMT":[{"name":"Etc/GMT","_offset":"0","_rule":"-","format":"GMT","_until":""}],"Etc/UTC":[{"name":"Etc/UTC","_offset":"0","_rule":"-","format":"UTC","_until":""}],"Etc/UCT":[{"name":"Etc/UCT","_offset":"0","_rule":"-","format":"UCT","_until":""}],"Etc/GMT-12":[{"name":"Etc/GMT-12","_offset":"-12:00","_rule":"-","format":"GMT-12","_until":""}],"Etc/GMT-11":[{"name":"Etc/GMT-11","_offset":"-11:00","_rule":"-","format":"GMT-11","_until":""}],"Etc/GMT-10":[{"name":"Etc/GMT-10","_offset":"-10:00","_rule":"-","format":"GMT-10","_until":""}],"Etc/GMT-9":[{"name":"Etc/GMT-9","_offset":"-9:00","_rule":"-","format":"GMT-9","_until":""}],"Etc/GMT-8":[{"name":"Etc/GMT-8","_offset":"-8:00","_rule":"-","format":"GMT-8","_until":""}],"Etc/GMT-7":[{"name":"Etc/GMT-7","_offset":"-7:00","_rule":"-","format":"GMT-7","_until":""}],"Etc/GMT-6":[{"name":"Etc/GMT-6","_offset":"-6:00","_rule":"-","format":"GMT-6","_until":""}],"Etc/GMT-5":[{"name":"Etc/GMT-5","_offset":"-5:00","_rule":"-","format":"GMT-5","_until":""}],"Etc/GMT-4":[{"name":"Etc/GMT-4","_offset":"-4:00","_rule":"-","format":"GMT-4","_until":""}],"Etc/GMT-3":[{"name":"Etc/GMT-3","_offset":"-3:00","_rule":"-","format":"GMT-3","_until":""}],"Etc/GMT-2":[{"name":"Etc/GMT-2","_offset":"-2:00","_rule":"-","format":"GMT-2","_until":""}],"Etc/GMT-1":[{"name":"Etc/GMT-1","_offset":"-1:00","_rule":"-","format":"GMT-1","_until":""}],"Etc/GMT+1":[{"name":"Etc/GMT+1","_offset":"1:00","_rule":"-","format":"GMT+1","_until":""}],"Etc/GMT+2":[{"name":"Etc/GMT+2","_offset":"2:00","_rule":"-","format":"GMT+2","_until":""}],"Etc/GMT+3":[{"name":"Etc/GMT+3","_offset":"3:00","_rule":"-","format":"GMT+3","_until":""}],"Etc/GMT+4":[{"name":"Etc/GMT+4","_offset":"4:00","_rule":"-","format":"GMT+4","_until":""}],"Etc/GMT+5":[{"name":"Etc/GMT+5","_offset":"5:00","_rule":"-","format":"GMT+5","_until":""}],"Etc/GMT+6":[{"name":"Etc/GMT+6","_offset":"6:00","_rule":"-","format":"GMT+6","_until":""}],"Etc/GMT+7":[{"name":"Etc/GMT+7","_offset":"7:00","_rule":"-","format":"GMT+7","_until":""}],"Etc/GMT+8":[{"name":"Etc/GMT+8","_offset":"8:00","_rule":"-","format":"GMT+8","_until":""}],"Etc/GMT+9":[{"name":"Etc/GMT+9","_offset":"9:00","_rule":"-","format":"GMT+9","_until":""}],"Etc/GMT+10":[{"name":"Etc/GMT+10","_offset":"10:00","_rule":"-","format":"GMT+10","_until":""}],"Etc/GMT+11":[{"name":"Etc/GMT+11","_offset":"11:00","_rule":"-","format":"GMT+11","_until":""}],"Etc/GMT+12":[{"name":"Etc/GMT+12","_offset":"12:00","_rule":"-","format":"GMT+12","_until":""}],"Etc/GMT+13":[{"name":"Etc/GMT+13","_offset":"13:00","_rule":"-","format":"GMT+13","_until":""}],"Etc/GMT+14":[{"name":"Etc/GMT+14","_offset":"14:00","_rule":"-","format":"GMT+14","_until":""}],"Europe/London":[{"name":"Europe/London","_offset":"-0:01:15","_rule":"-","format":"LMT","_until":"1847 Dec 1 0:00s"},{"name":"Europe/London","_offset":"0:00","_rule":"GB-Eire","format":"%s","_until":"1968 Oct 27"},{"name":"Europe/London","_offset":"1:00","_rule":"-","format":"BST","_until":"1971 Oct 31 2:00u"},{"name":"Europe/London","_offset":"0:00","_rule":"GB-Eire","format":"%s","_until":"1996"},{"name":"Europe/London","_offset":"0:00","_rule":"EU","format":"GMT/BST","_until":""}],"Europe/Dublin":[{"name":"Europe/Dublin","_offset":"-0:25:00","_rule":"-","format":"LMT","_until":"1880 Aug 2"},{"name":"Europe/Dublin","_offset":"-0:25:21","_rule":"-","format":"DMT","_until":"1916 May 21 2:00"},{"name":"Europe/Dublin","_offset":"-0:25:21","_rule":"1:00","format":"IST","_until":"1916 Oct 1 2:00s"},{"name":"Europe/Dublin","_offset":"0:00","_rule":"GB-Eire","format":"%s","_until":"1921 Dec 6"},{"name":"Europe/Dublin","_offset":"0:00","_rule":"GB-Eire","format":"GMT/IST","_until":"1940 Feb 25 2:00"},{"name":"Europe/Dublin","_offset":"0:00","_rule":"1:00","format":"IST","_until":"1946 Oct 6 2:00"},{"name":"Europe/Dublin","_offset":"0:00","_rule":"-","format":"GMT","_until":"1947 Mar 16 2:00"},{"name":"Europe/Dublin","_offset":"0:00","_rule":"1:00","format":"IST","_until":"1947 Nov 2 2:00"},{"name":"Europe/Dublin","_offset":"0:00","_rule":"-","format":"GMT","_until":"1948 Apr 18 2:00"},{"name":"Europe/Dublin","_offset":"0:00","_rule":"GB-Eire","format":"GMT/IST","_until":"1968 Oct 27"},{"name":"Europe/Dublin","_offset":"1:00","_rule":"-","format":"IST","_until":"1971 Oct 31 2:00u"},{"name":"Europe/Dublin","_offset":"0:00","_rule":"GB-Eire","format":"GMT/IST","_until":"1996"},{"name":"Europe/Dublin","_offset":"0:00","_rule":"EU","format":"GMT/IST","_until":""}],"WET":[{"name":"WET","_offset":"0:00","_rule":"EU","format":"WE%sT","_until":""}],"CET":[{"name":"CET","_offset":"1:00","_rule":"C-Eur","format":"CE%sT","_until":""}],"MET":[{"name":"MET","_offset":"1:00","_rule":"C-Eur","format":"ME%sT","_until":""}],"EET":[{"name":"EET","_offset":"2:00","_rule":"EU","format":"EE%sT","_until":""}],"Europe/Tirane":[{"name":"Europe/Tirane","_offset":"1:19:20","_rule":"-","format":"LMT","_until":"1914"},{"name":"Europe/Tirane","_offset":"1:00","_rule":"-","format":"CET","_until":"1940 Jun 16"},{"name":"Europe/Tirane","_offset":"1:00","_rule":"Albania","format":"CE%sT","_until":"1984 Jul"},{"name":"Europe/Tirane","_offset":"1:00","_rule":"EU","format":"CE%sT","_until":""}],"Europe/Andorra":[{"name":"Europe/Andorra","_offset":"0:06:04","_rule":"-","format":"LMT","_until":"1901"},{"name":"Europe/Andorra","_offset":"0:00","_rule":"-","format":"WET","_until":"1946 Sep 30"},{"name":"Europe/Andorra","_offset":"1:00","_rule":"-","format":"CET","_until":"1985 Mar 31 2:00"},{"name":"Europe/Andorra","_offset":"1:00","_rule":"EU","format":"CE%sT","_until":""}],"Europe/Vienna":[{"name":"Europe/Vienna","_offset":"1:05:21","_rule":"-","format":"LMT","_until":"1893 Apr"},{"name":"Europe/Vienna","_offset":"1:00","_rule":"C-Eur","format":"CE%sT","_until":"1920"},{"name":"Europe/Vienna","_offset":"1:00","_rule":"Austria","format":"CE%sT","_until":"1940 Apr 1 2:00s"},{"name":"Europe/Vienna","_offset":"1:00","_rule":"C-Eur","format":"CE%sT","_until":"1945 Apr 2 2:00s"},{"name":"Europe/Vienna","_offset":"1:00","_rule":"1:00","format":"CEST","_until":"1945 Apr 12 2:00s"},{"name":"Europe/Vienna","_offset":"1:00","_rule":"-","format":"CET","_until":"1946"},{"name":"Europe/Vienna","_offset":"1:00","_rule":"Austria","format":"CE%sT","_until":"1981"},{"name":"Europe/Vienna","_offset":"1:00","_rule":"EU","format":"CE%sT","_until":""}],"Europe/Minsk":[{"name":"Europe/Minsk","_offset":"1:50:16","_rule":"-","format":"LMT","_until":"1880"},{"name":"Europe/Minsk","_offset":"1:50","_rule":"-","format":"MMT","_until":"1924 May 2"},{"name":"Europe/Minsk","_offset":"2:00","_rule":"-","format":"EET","_until":"1930 Jun 21"},{"name":"Europe/Minsk","_offset":"3:00","_rule":"-","format":"MSK","_until":"1941 Jun 28"},{"name":"Europe/Minsk","_offset":"1:00","_rule":"C-Eur","format":"CE%sT","_until":"1944 Jul 3"},{"name":"Europe/Minsk","_offset":"3:00","_rule":"Russia","format":"MSK/MSD","_until":"1990"},{"name":"Europe/Minsk","_offset":"3:00","_rule":"-","format":"MSK","_until":"1991 Mar 31 2:00s"},{"name":"Europe/Minsk","_offset":"2:00","_rule":"1:00","format":"EEST","_until":"1991 Sep 29 2:00s"},{"name":"Europe/Minsk","_offset":"2:00","_rule":"-","format":"EET","_until":"1992 Mar 29 0:00s"},{"name":"Europe/Minsk","_offset":"2:00","_rule":"1:00","format":"EEST","_until":"1992 Sep 27 0:00s"},{"name":"Europe/Minsk","_offset":"2:00","_rule":"Russia","format":"EE%sT","_until":"2011 Mar 27 2:00s"},{"name":"Europe/Minsk","_offset":"3:00","_rule":"-","format":"FET","_until":""}],"Europe/Brussels":[{"name":"Europe/Brussels","_offset":"0:17:30","_rule":"-","format":"LMT","_until":"1880"},{"name":"Europe/Brussels","_offset":"0:17:30","_rule":"-","format":"BMT","_until":"1892 May 1 12:00"},{"name":"Europe/Brussels","_offset":"0:00","_rule":"-","format":"WET","_until":"1914 Nov 8"},{"name":"Europe/Brussels","_offset":"1:00","_rule":"-","format":"CET","_until":"1916 May 1 0:00"},{"name":"Europe/Brussels","_offset":"1:00","_rule":"C-Eur","format":"CE%sT","_until":"1918 Nov 11 11:00u"},{"name":"Europe/Brussels","_offset":"0:00","_rule":"Belgium","format":"WE%sT","_until":"1940 May 20 2:00s"},{"name":"Europe/Brussels","_offset":"1:00","_rule":"C-Eur","format":"CE%sT","_until":"1944 Sep 3"},{"name":"Europe/Brussels","_offset":"1:00","_rule":"Belgium","format":"CE%sT","_until":"1977"},{"name":"Europe/Brussels","_offset":"1:00","_rule":"EU","format":"CE%sT","_until":""}],"Europe/Sofia":[{"name":"Europe/Sofia","_offset":"1:33:16","_rule":"-","format":"LMT","_until":"1880"},{"name":"Europe/Sofia","_offset":"1:56:56","_rule":"-","format":"IMT","_until":"1894 Nov 30"},{"name":"Europe/Sofia","_offset":"2:00","_rule":"-","format":"EET","_until":"1942 Nov 2 3:00"},{"name":"Europe/Sofia","_offset":"1:00","_rule":"C-Eur","format":"CE%sT","_until":"1945"},{"name":"Europe/Sofia","_offset":"1:00","_rule":"-","format":"CET","_until":"1945 Apr 2 3:00"},{"name":"Europe/Sofia","_offset":"2:00","_rule":"-","format":"EET","_until":"1979 Mar 31 23:00"},{"name":"Europe/Sofia","_offset":"2:00","_rule":"Bulg","format":"EE%sT","_until":"1982 Sep 26 2:00"},{"name":"Europe/Sofia","_offset":"2:00","_rule":"C-Eur","format":"EE%sT","_until":"1991"},{"name":"Europe/Sofia","_offset":"2:00","_rule":"E-Eur","format":"EE%sT","_until":"1997"},{"name":"Europe/Sofia","_offset":"2:00","_rule":"EU","format":"EE%sT","_until":""}],"Europe/Prague":[{"name":"Europe/Prague","_offset":"0:57:44","_rule":"-","format":"LMT","_until":"1850"},{"name":"Europe/Prague","_offset":"0:57:44","_rule":"-","format":"PMT","_until":"1891 Oct"},{"name":"Europe/Prague","_offset":"1:00","_rule":"C-Eur","format":"CE%sT","_until":"1944 Sep 17 2:00s"},{"name":"Europe/Prague","_offset":"1:00","_rule":"Czech","format":"CE%sT","_until":"1979"},{"name":"Europe/Prague","_offset":"1:00","_rule":"EU","format":"CE%sT","_until":""}],"Europe/Copenhagen":[{"name":"Europe/Copenhagen","_offset":"0:50:20","_rule":"-","format":"LMT","_until":"1890"},{"name":"Europe/Copenhagen","_offset":"0:50:20","_rule":"-","format":"CMT","_until":"1894 Jan 1"},{"name":"Europe/Copenhagen","_offset":"1:00","_rule":"Denmark","format":"CE%sT","_until":"1942 Nov 2 2:00s"},{"name":"Europe/Copenhagen","_offset":"1:00","_rule":"C-Eur","format":"CE%sT","_until":"1945 Apr 2 2:00"},{"name":"Europe/Copenhagen","_offset":"1:00","_rule":"Denmark","format":"CE%sT","_until":"1980"},{"name":"Europe/Copenhagen","_offset":"1:00","_rule":"EU","format":"CE%sT","_until":""}],"Atlantic/Faroe":[{"name":"Atlantic/Faroe","_offset":"-0:27:04","_rule":"-","format":"LMT","_until":"1908 Jan 11"},{"name":"Atlantic/Faroe","_offset":"0:00","_rule":"-","format":"WET","_until":"1981"},{"name":"Atlantic/Faroe","_offset":"0:00","_rule":"EU","format":"WE%sT","_until":""}],"America/Danmarkshavn":[{"name":"America/Danmarkshavn","_offset":"-1:14:40","_rule":"-","format":"LMT","_until":"1916 Jul 28"},{"name":"America/Danmarkshavn","_offset":"-3:00","_rule":"-","format":"WGT","_until":"1980 Apr 6 2:00"},{"name":"America/Danmarkshavn","_offset":"-3:00","_rule":"EU","format":"WG%sT","_until":"1996"},{"name":"America/Danmarkshavn","_offset":"0:00","_rule":"-","format":"GMT","_until":""}],"America/Scoresbysund":[{"name":"America/Scoresbysund","_offset":"-1:27:52","_rule":"-","format":"LMT","_until":"1916 Jul 28"},{"name":"America/Scoresbysund","_offset":"-2:00","_rule":"-","format":"CGT","_until":"1980 Apr 6 2:00"},{"name":"America/Scoresbysund","_offset":"-2:00","_rule":"C-Eur","format":"CG%sT","_until":"1981 Mar 29"},{"name":"America/Scoresbysund","_offset":"-1:00","_rule":"EU","format":"EG%sT","_until":""}],"America/Godthab":[{"name":"America/Godthab","_offset":"-3:26:56","_rule":"-","format":"LMT","_until":"1916 Jul 28"},{"name":"America/Godthab","_offset":"-3:00","_rule":"-","format":"WGT","_until":"1980 Apr 6 2:00"},{"name":"America/Godthab","_offset":"-3:00","_rule":"EU","format":"WG%sT","_until":""}],"America/Thule":[{"name":"America/Thule","_offset":"-4:35:08","_rule":"-","format":"LMT","_until":"1916 Jul 28"},{"name":"America/Thule","_offset":"-4:00","_rule":"Thule","format":"A%sT","_until":""}],"Europe/Tallinn":[{"name":"Europe/Tallinn","_offset":"1:39:00","_rule":"-","format":"LMT","_until":"1880"},{"name":"Europe/Tallinn","_offset":"1:39:00","_rule":"-","format":"TMT","_until":"1918 Feb"},{"name":"Europe/Tallinn","_offset":"1:00","_rule":"C-Eur","format":"CE%sT","_until":"1919 Jul"},{"name":"Europe/Tallinn","_offset":"1:39:00","_rule":"-","format":"TMT","_until":"1921 May"},{"name":"Europe/Tallinn","_offset":"2:00","_rule":"-","format":"EET","_until":"1940 Aug 6"},{"name":"Europe/Tallinn","_offset":"3:00","_rule":"-","format":"MSK","_until":"1941 Sep 15"},{"name":"Europe/Tallinn","_offset":"1:00","_rule":"C-Eur","format":"CE%sT","_until":"1944 Sep 22"},{"name":"Europe/Tallinn","_offset":"3:00","_rule":"Russia","format":"MSK/MSD","_until":"1989 Mar 26 2:00s"},{"name":"Europe/Tallinn","_offset":"2:00","_rule":"1:00","format":"EEST","_until":"1989 Sep 24 2:00s"},{"name":"Europe/Tallinn","_offset":"2:00","_rule":"C-Eur","format":"EE%sT","_until":"1998 Sep 22"},{"name":"Europe/Tallinn","_offset":"2:00","_rule":"EU","format":"EE%sT","_until":"1999 Nov 1"},{"name":"Europe/Tallinn","_offset":"2:00","_rule":"-","format":"EET","_until":"2002 Feb 21"},{"name":"Europe/Tallinn","_offset":"2:00","_rule":"EU","format":"EE%sT","_until":""}],"Europe/Helsinki":[{"name":"Europe/Helsinki","_offset":"1:39:52","_rule":"-","format":"LMT","_until":"1878 May 31"},{"name":"Europe/Helsinki","_offset":"1:39:52","_rule":"-","format":"HMT","_until":"1921 May"},{"name":"Europe/Helsinki","_offset":"2:00","_rule":"Finland","format":"EE%sT","_until":"1983"},{"name":"Europe/Helsinki","_offset":"2:00","_rule":"EU","format":"EE%sT","_until":""}],"Europe/Paris":[{"name":"Europe/Paris","_offset":"0:09:21","_rule":"-","format":"LMT","_until":"1891 Mar 15 0:01"},{"name":"Europe/Paris","_offset":"0:09:21","_rule":"-","format":"PMT","_until":"1911 Mar 11 0:01"},{"name":"Europe/Paris","_offset":"0:00","_rule":"France","format":"WE%sT","_until":"1940 Jun 14 23:00"},{"name":"Europe/Paris","_offset":"1:00","_rule":"C-Eur","format":"CE%sT","_until":"1944 Aug 25"},{"name":"Europe/Paris","_offset":"0:00","_rule":"France","format":"WE%sT","_until":"1945 Sep 16 3:00"},{"name":"Europe/Paris","_offset":"1:00","_rule":"France","format":"CE%sT","_until":"1977"},{"name":"Europe/Paris","_offset":"1:00","_rule":"EU","format":"CE%sT","_until":""}],"Europe/Berlin":[{"name":"Europe/Berlin","_offset":"0:53:28","_rule":"-","format":"LMT","_until":"1893 Apr"},{"name":"Europe/Berlin","_offset":"1:00","_rule":"C-Eur","format":"CE%sT","_until":"1945 May 24 2:00"},{"name":"Europe/Berlin","_offset":"1:00","_rule":"SovietZone","format":"CE%sT","_until":"1946"},{"name":"Europe/Berlin","_offset":"1:00","_rule":"Germany","format":"CE%sT","_until":"1980"},{"name":"Europe/Berlin","_offset":"1:00","_rule":"EU","format":"CE%sT","_until":""}],"Europe/Gibraltar":[{"name":"Europe/Gibraltar","_offset":"-0:21:24","_rule":"-","format":"LMT","_until":"1880 Aug 2 0:00s"},{"name":"Europe/Gibraltar","_offset":"0:00","_rule":"GB-Eire","format":"%s","_until":"1957 Apr 14 2:00"},{"name":"Europe/Gibraltar","_offset":"1:00","_rule":"-","format":"CET","_until":"1982"},{"name":"Europe/Gibraltar","_offset":"1:00","_rule":"EU","format":"CE%sT","_until":""}],"Europe/Athens":[{"name":"Europe/Athens","_offset":"1:34:52","_rule":"-","format":"LMT","_until":"1895 Sep 14"},{"name":"Europe/Athens","_offset":"1:34:52","_rule":"-","format":"AMT","_until":"1916 Jul 28 0:01"},{"name":"Europe/Athens","_offset":"2:00","_rule":"Greece","format":"EE%sT","_until":"1941 Apr 30"},{"name":"Europe/Athens","_offset":"1:00","_rule":"Greece","format":"CE%sT","_until":"1944 Apr 4"},{"name":"Europe/Athens","_offset":"2:00","_rule":"Greece","format":"EE%sT","_until":"1981"},{"name":"Europe/Athens","_offset":"2:00","_rule":"EU","format":"EE%sT","_until":""}],"Europe/Budapest":[{"name":"Europe/Budapest","_offset":"1:16:20","_rule":"-","format":"LMT","_until":"1890 Oct"},{"name":"Europe/Budapest","_offset":"1:00","_rule":"C-Eur","format":"CE%sT","_until":"1918"},{"name":"Europe/Budapest","_offset":"1:00","_rule":"Hungary","format":"CE%sT","_until":"1941 Apr 6 2:00"},{"name":"Europe/Budapest","_offset":"1:00","_rule":"C-Eur","format":"CE%sT","_until":"1945"},{"name":"Europe/Budapest","_offset":"1:00","_rule":"Hungary","format":"CE%sT","_until":"1980 Sep 28 2:00s"},{"name":"Europe/Budapest","_offset":"1:00","_rule":"EU","format":"CE%sT","_until":""}],"Atlantic/Reykjavik":[{"name":"Atlantic/Reykjavik","_offset":"-1:27:24","_rule":"-","format":"LMT","_until":"1837"},{"name":"Atlantic/Reykjavik","_offset":"-1:27:48","_rule":"-","format":"RMT","_until":"1908"},{"name":"Atlantic/Reykjavik","_offset":"-1:00","_rule":"Iceland","format":"IS%sT","_until":"1968 Apr 7 1:00s"},{"name":"Atlantic/Reykjavik","_offset":"0:00","_rule":"-","format":"GMT","_until":""}],"Europe/Rome":[{"name":"Europe/Rome","_offset":"0:49:56","_rule":"-","format":"LMT","_until":"1866 Sep 22"},{"name":"Europe/Rome","_offset":"0:49:56","_rule":"-","format":"RMT","_until":"1893 Nov 1 0:00s"},{"name":"Europe/Rome","_offset":"1:00","_rule":"Italy","format":"CE%sT","_until":"1942 Nov 2 2:00s"},{"name":"Europe/Rome","_offset":"1:00","_rule":"C-Eur","format":"CE%sT","_until":"1944 Jul"},{"name":"Europe/Rome","_offset":"1:00","_rule":"Italy","format":"CE%sT","_until":"1980"},{"name":"Europe/Rome","_offset":"1:00","_rule":"EU","format":"CE%sT","_until":""}],"Europe/Riga":[{"name":"Europe/Riga","_offset":"1:36:24","_rule":"-","format":"LMT","_until":"1880"},{"name":"Europe/Riga","_offset":"1:36:24","_rule":"-","format":"RMT","_until":"1918 Apr 15 2:00"},{"name":"Europe/Riga","_offset":"1:36:24","_rule":"1:00","format":"LST","_until":"1918 Sep 16 3:00"},{"name":"Europe/Riga","_offset":"1:36:24","_rule":"-","format":"RMT","_until":"1919 Apr 1 2:00"},{"name":"Europe/Riga","_offset":"1:36:24","_rule":"1:00","format":"LST","_until":"1919 May 22 3:00"},{"name":"Europe/Riga","_offset":"1:36:24","_rule":"-","format":"RMT","_until":"1926 May 11"},{"name":"Europe/Riga","_offset":"2:00","_rule":"-","format":"EET","_until":"1940 Aug 5"},{"name":"Europe/Riga","_offset":"3:00","_rule":"-","format":"MSK","_until":"1941 Jul"},{"name":"Europe/Riga","_offset":"1:00","_rule":"C-Eur","format":"CE%sT","_until":"1944 Oct 13"},{"name":"Europe/Riga","_offset":"3:00","_rule":"Russia","format":"MSK/MSD","_until":"1989 Mar lastSun 2:00s"},{"name":"Europe/Riga","_offset":"2:00","_rule":"1:00","format":"EEST","_until":"1989 Sep lastSun 2:00s"},{"name":"Europe/Riga","_offset":"2:00","_rule":"Latvia","format":"EE%sT","_until":"1997 Jan 21"},{"name":"Europe/Riga","_offset":"2:00","_rule":"EU","format":"EE%sT","_until":"2000 Feb 29"},{"name":"Europe/Riga","_offset":"2:00","_rule":"-","format":"EET","_until":"2001 Jan 2"},{"name":"Europe/Riga","_offset":"2:00","_rule":"EU","format":"EE%sT","_until":""}],"Europe/Vaduz":[{"name":"Europe/Vaduz","_offset":"0:38:04","_rule":"-","format":"LMT","_until":"1894 Jun"},{"name":"Europe/Vaduz","_offset":"1:00","_rule":"-","format":"CET","_until":"1981"},{"name":"Europe/Vaduz","_offset":"1:00","_rule":"EU","format":"CE%sT","_until":""}],"Europe/Vilnius":[{"name":"Europe/Vilnius","_offset":"1:41:16","_rule":"-","format":"LMT","_until":"1880"},{"name":"Europe/Vilnius","_offset":"1:24:00","_rule":"-","format":"WMT","_until":"1917"},{"name":"Europe/Vilnius","_offset":"1:35:36","_rule":"-","format":"KMT","_until":"1919 Oct 10"},{"name":"Europe/Vilnius","_offset":"1:00","_rule":"-","format":"CET","_until":"1920 Jul 12"},{"name":"Europe/Vilnius","_offset":"2:00","_rule":"-","format":"EET","_until":"1920 Oct 9"},{"name":"Europe/Vilnius","_offset":"1:00","_rule":"-","format":"CET","_until":"1940 Aug 3"},{"name":"Europe/Vilnius","_offset":"3:00","_rule":"-","format":"MSK","_until":"1941 Jun 24"},{"name":"Europe/Vilnius","_offset":"1:00","_rule":"C-Eur","format":"CE%sT","_until":"1944 Aug"},{"name":"Europe/Vilnius","_offset":"3:00","_rule":"Russia","format":"MSK/MSD","_until":"1991 Mar 31 2:00s"},{"name":"Europe/Vilnius","_offset":"2:00","_rule":"1:00","format":"EEST","_until":"1991 Sep 29 2:00s"},{"name":"Europe/Vilnius","_offset":"2:00","_rule":"C-Eur","format":"EE%sT","_until":"1998"},{"name":"Europe/Vilnius","_offset":"2:00","_rule":"-","format":"EET","_until":"1998 Mar 29 1:00u"},{"name":"Europe/Vilnius","_offset":"1:00","_rule":"EU","format":"CE%sT","_until":"1999 Oct 31 1:00u"},{"name":"Europe/Vilnius","_offset":"2:00","_rule":"-","format":"EET","_until":"2003 Jan 1"},{"name":"Europe/Vilnius","_offset":"2:00","_rule":"EU","format":"EE%sT","_until":""}],"Europe/Luxembourg":[{"name":"Europe/Luxembourg","_offset":"0:24:36","_rule":"-","format":"LMT","_until":"1904 Jun"},{"name":"Europe/Luxembourg","_offset":"1:00","_rule":"Lux","format":"CE%sT","_until":"1918 Nov 25"},{"name":"Europe/Luxembourg","_offset":"0:00","_rule":"Lux","format":"WE%sT","_until":"1929 Oct 6 2:00s"},{"name":"Europe/Luxembourg","_offset":"0:00","_rule":"Belgium","format":"WE%sT","_until":"1940 May 14 3:00"},{"name":"Europe/Luxembourg","_offset":"1:00","_rule":"C-Eur","format":"WE%sT","_until":"1944 Sep 18 3:00"},{"name":"Europe/Luxembourg","_offset":"1:00","_rule":"Belgium","format":"CE%sT","_until":"1977"},{"name":"Europe/Luxembourg","_offset":"1:00","_rule":"EU","format":"CE%sT","_until":""}],"Europe/Malta":[{"name":"Europe/Malta","_offset":"0:58:04","_rule":"-","format":"LMT","_until":"1893 Nov 2 0:00s"},{"name":"Europe/Malta","_offset":"1:00","_rule":"Italy","format":"CE%sT","_until":"1942 Nov 2 2:00s"},{"name":"Europe/Malta","_offset":"1:00","_rule":"C-Eur","format":"CE%sT","_until":"1945 Apr 2 2:00s"},{"name":"Europe/Malta","_offset":"1:00","_rule":"Italy","format":"CE%sT","_until":"1973 Mar 31"},{"name":"Europe/Malta","_offset":"1:00","_rule":"Malta","format":"CE%sT","_until":"1981"},{"name":"Europe/Malta","_offset":"1:00","_rule":"EU","format":"CE%sT","_until":""}],"Europe/Chisinau":[{"name":"Europe/Chisinau","_offset":"1:55:20","_rule":"-","format":"LMT","_until":"1880"},{"name":"Europe/Chisinau","_offset":"1:55","_rule":"-","format":"CMT","_until":"1918 Feb 15"},{"name":"Europe/Chisinau","_offset":"1:44:24","_rule":"-","format":"BMT","_until":"1931 Jul 24"},{"name":"Europe/Chisinau","_offset":"2:00","_rule":"Romania","format":"EE%sT","_until":"1940 Aug 15"},{"name":"Europe/Chisinau","_offset":"2:00","_rule":"1:00","format":"EEST","_until":"1941 Jul 17"},{"name":"Europe/Chisinau","_offset":"1:00","_rule":"C-Eur","format":"CE%sT","_until":"1944 Aug 24"},{"name":"Europe/Chisinau","_offset":"3:00","_rule":"Russia","format":"MSK/MSD","_until":"1990"},{"name":"Europe/Chisinau","_offset":"3:00","_rule":"-","format":"MSK","_until":"1990 May 6"},{"name":"Europe/Chisinau","_offset":"2:00","_rule":"-","format":"EET","_until":"1991"},{"name":"Europe/Chisinau","_offset":"2:00","_rule":"Russia","format":"EE%sT","_until":"1992"},{"name":"Europe/Chisinau","_offset":"2:00","_rule":"E-Eur","format":"EE%sT","_until":"1997"},{"name":"Europe/Chisinau","_offset":"2:00","_rule":"EU","format":"EE%sT","_until":""}],"Europe/Monaco":[{"name":"Europe/Monaco","_offset":"0:29:32","_rule":"-","format":"LMT","_until":"1891 Mar 15"},{"name":"Europe/Monaco","_offset":"0:09:21","_rule":"-","format":"PMT","_until":"1911 Mar 11"},{"name":"Europe/Monaco","_offset":"0:00","_rule":"France","format":"WE%sT","_until":"1945 Sep 16 3:00"},{"name":"Europe/Monaco","_offset":"1:00","_rule":"France","format":"CE%sT","_until":"1977"},{"name":"Europe/Monaco","_offset":"1:00","_rule":"EU","format":"CE%sT","_until":""}],"Europe/Amsterdam":[{"name":"Europe/Amsterdam","_offset":"0:19:32","_rule":"-","format":"LMT","_until":"1835"},{"name":"Europe/Amsterdam","_offset":"0:19:32","_rule":"Neth","format":"%s","_until":"1937 Jul 1"},{"name":"Europe/Amsterdam","_offset":"0:20","_rule":"Neth","format":"NE%sT","_until":"1940 May 16 0:00"},{"name":"Europe/Amsterdam","_offset":"1:00","_rule":"C-Eur","format":"CE%sT","_until":"1945 Apr 2 2:00"},{"name":"Europe/Amsterdam","_offset":"1:00","_rule":"Neth","format":"CE%sT","_until":"1977"},{"name":"Europe/Amsterdam","_offset":"1:00","_rule":"EU","format":"CE%sT","_until":""}],"Europe/Oslo":[{"name":"Europe/Oslo","_offset":"0:43:00","_rule":"-","format":"LMT","_until":"1895 Jan 1"},{"name":"Europe/Oslo","_offset":"1:00","_rule":"Norway","format":"CE%sT","_until":"1940 Aug 10 23:00"},{"name":"Europe/Oslo","_offset":"1:00","_rule":"C-Eur","format":"CE%sT","_until":"1945 Apr 2 2:00"},{"name":"Europe/Oslo","_offset":"1:00","_rule":"Norway","format":"CE%sT","_until":"1980"},{"name":"Europe/Oslo","_offset":"1:00","_rule":"EU","format":"CE%sT","_until":""}],"Europe/Warsaw":[{"name":"Europe/Warsaw","_offset":"1:24:00","_rule":"-","format":"LMT","_until":"1880"},{"name":"Europe/Warsaw","_offset":"1:24:00","_rule":"-","format":"WMT","_until":"1915 Aug 5"},{"name":"Europe/Warsaw","_offset":"1:00","_rule":"C-Eur","format":"CE%sT","_until":"1918 Sep 16 3:00"},{"name":"Europe/Warsaw","_offset":"2:00","_rule":"Poland","format":"EE%sT","_until":"1922 Jun"},{"name":"Europe/Warsaw","_offset":"1:00","_rule":"Poland","format":"CE%sT","_until":"1940 Jun 23 2:00"},{"name":"Europe/Warsaw","_offset":"1:00","_rule":"C-Eur","format":"CE%sT","_until":"1944 Oct"},{"name":"Europe/Warsaw","_offset":"1:00","_rule":"Poland","format":"CE%sT","_until":"1977"},{"name":"Europe/Warsaw","_offset":"1:00","_rule":"W-Eur","format":"CE%sT","_until":"1988"},{"name":"Europe/Warsaw","_offset":"1:00","_rule":"EU","format":"CE%sT","_until":""}],"Europe/Lisbon":[{"name":"Europe/Lisbon","_offset":"-0:36:32","_rule":"-","format":"LMT","_until":"1884"},{"name":"Europe/Lisbon","_offset":"-0:36:32","_rule":"-","format":"LMT","_until":"1912 Jan 1"},{"name":"Europe/Lisbon","_offset":"0:00","_rule":"Port","format":"WE%sT","_until":"1966 Apr 3 2:00"},{"name":"Europe/Lisbon","_offset":"1:00","_rule":"-","format":"CET","_until":"1976 Sep 26 1:00"},{"name":"Europe/Lisbon","_offset":"0:00","_rule":"Port","format":"WE%sT","_until":"1983 Sep 25 1:00s"},{"name":"Europe/Lisbon","_offset":"0:00","_rule":"W-Eur","format":"WE%sT","_until":"1992 Sep 27 1:00s"},{"name":"Europe/Lisbon","_offset":"1:00","_rule":"EU","format":"CE%sT","_until":"1996 Mar 31 1:00u"},{"name":"Europe/Lisbon","_offset":"0:00","_rule":"EU","format":"WE%sT","_until":""}],"Atlantic/Azores":[{"name":"Atlantic/Azores","_offset":"-1:42:40","_rule":"-","format":"LMT","_until":"1884"},{"name":"Atlantic/Azores","_offset":"-1:54:32","_rule":"-","format":"HMT","_until":"1911 May 24"},{"name":"Atlantic/Azores","_offset":"-2:00","_rule":"Port","format":"AZO%sT","_until":"1966 Apr 3 2:00"},{"name":"Atlantic/Azores","_offset":"-1:00","_rule":"Port","format":"AZO%sT","_until":"1983 Sep 25 1:00s"},{"name":"Atlantic/Azores","_offset":"-1:00","_rule":"W-Eur","format":"AZO%sT","_until":"1992 Sep 27 1:00s"},{"name":"Atlantic/Azores","_offset":"0:00","_rule":"EU","format":"WE%sT","_until":"1993 Mar 28 1:00u"},{"name":"Atlantic/Azores","_offset":"-1:00","_rule":"EU","format":"AZO%sT","_until":""}],"Atlantic/Madeira":[{"name":"Atlantic/Madeira","_offset":"-1:07:36","_rule":"-","format":"LMT","_until":"1884"},{"name":"Atlantic/Madeira","_offset":"-1:07:36","_rule":"-","format":"FMT","_until":"1911 May 24"},{"name":"Atlantic/Madeira","_offset":"-1:00","_rule":"Port","format":"MAD%sT","_until":"1966 Apr 3 2:00"},{"name":"Atlantic/Madeira","_offset":"0:00","_rule":"Port","format":"WE%sT","_until":"1983 Sep 25 1:00s"},{"name":"Atlantic/Madeira","_offset":"0:00","_rule":"EU","format":"WE%sT","_until":""}],"Europe/Bucharest":[{"name":"Europe/Bucharest","_offset":"1:44:24","_rule":"-","format":"LMT","_until":"1891 Oct"},{"name":"Europe/Bucharest","_offset":"1:44:24","_rule":"-","format":"BMT","_until":"1931 Jul 24"},{"name":"Europe/Bucharest","_offset":"2:00","_rule":"Romania","format":"EE%sT","_until":"1981 Mar 29 2:00s"},{"name":"Europe/Bucharest","_offset":"2:00","_rule":"C-Eur","format":"EE%sT","_until":"1991"},{"name":"Europe/Bucharest","_offset":"2:00","_rule":"Romania","format":"EE%sT","_until":"1994"},{"name":"Europe/Bucharest","_offset":"2:00","_rule":"E-Eur","format":"EE%sT","_until":"1997"},{"name":"Europe/Bucharest","_offset":"2:00","_rule":"EU","format":"EE%sT","_until":""}],"Europe/Kaliningrad":[{"name":"Europe/Kaliningrad","_offset":"1:22:00","_rule":"-","format":"LMT","_until":"1893 Apr"},{"name":"Europe/Kaliningrad","_offset":"1:00","_rule":"C-Eur","format":"CE%sT","_until":"1945"},{"name":"Europe/Kaliningrad","_offset":"2:00","_rule":"Poland","format":"CE%sT","_until":"1946"},{"name":"Europe/Kaliningrad","_offset":"3:00","_rule":"Russia","format":"MSK/MSD","_until":"1991 Mar 31 2:00s"},{"name":"Europe/Kaliningrad","_offset":"2:00","_rule":"Russia","format":"EE%sT","_until":"2011 Mar 27 2:00s"},{"name":"Europe/Kaliningrad","_offset":"3:00","_rule":"-","format":"FET","_until":""}],"Europe/Moscow":[{"name":"Europe/Moscow","_offset":"2:30:20","_rule":"-","format":"LMT","_until":"1880"},{"name":"Europe/Moscow","_offset":"2:30","_rule":"-","format":"MMT","_until":"1916 Jul 3"},{"name":"Europe/Moscow","_offset":"2:30:48","_rule":"Russia","format":"%s","_until":"1919 Jul 1 2:00"},{"name":"Europe/Moscow","_offset":"3:00","_rule":"Russia","format":"MSK/MSD","_until":"1922 Oct"},{"name":"Europe/Moscow","_offset":"2:00","_rule":"-","format":"EET","_until":"1930 Jun 21"},{"name":"Europe/Moscow","_offset":"3:00","_rule":"Russia","format":"MSK/MSD","_until":"1991 Mar 31 2:00s"},{"name":"Europe/Moscow","_offset":"2:00","_rule":"Russia","format":"EE%sT","_until":"1992 Jan 19 2:00s"},{"name":"Europe/Moscow","_offset":"3:00","_rule":"Russia","format":"MSK/MSD","_until":"2011 Mar 27 2:00s"},{"name":"Europe/Moscow","_offset":"4:00","_rule":"-","format":"MSK","_until":""}],"Europe/Volgograd":[{"name":"Europe/Volgograd","_offset":"2:57:40","_rule":"-","format":"LMT","_until":"1920 Jan 3"},{"name":"Europe/Volgograd","_offset":"3:00","_rule":"-","format":"TSAT","_until":"1925 Apr 6"},{"name":"Europe/Volgograd","_offset":"3:00","_rule":"-","format":"STAT","_until":"1930 Jun 21"},{"name":"Europe/Volgograd","_offset":"4:00","_rule":"-","format":"STAT","_until":"1961 Nov 11"},{"name":"Europe/Volgograd","_offset":"4:00","_rule":"Russia","format":"VOL%sT","_until":"1989 Mar 26 2:00s"},{"name":"Europe/Volgograd","_offset":"3:00","_rule":"Russia","format":"VOL%sT","_until":"1991 Mar 31 2:00s"},{"name":"Europe/Volgograd","_offset":"4:00","_rule":"-","format":"VOLT","_until":"1992 Mar 29 2:00s"},{"name":"Europe/Volgograd","_offset":"3:00","_rule":"Russia","format":"VOL%sT","_until":"2011 Mar 27 2:00s"},{"name":"Europe/Volgograd","_offset":"4:00","_rule":"-","format":"VOLT","_until":""}],"Europe/Samara":[{"name":"Europe/Samara","_offset":"3:20:36","_rule":"-","format":"LMT","_until":"1919 Jul 1 2:00"},{"name":"Europe/Samara","_offset":"3:00","_rule":"-","format":"SAMT","_until":"1930 Jun 21"},{"name":"Europe/Samara","_offset":"4:00","_rule":"-","format":"SAMT","_until":"1935 Jan 27"},{"name":"Europe/Samara","_offset":"4:00","_rule":"Russia","format":"KUY%sT","_until":"1989 Mar 26 2:00s"},{"name":"Europe/Samara","_offset":"3:00","_rule":"Russia","format":"KUY%sT","_until":"1991 Mar 31 2:00s"},{"name":"Europe/Samara","_offset":"2:00","_rule":"Russia","format":"KUY%sT","_until":"1991 Sep 29 2:00s"},{"name":"Europe/Samara","_offset":"3:00","_rule":"-","format":"KUYT","_until":"1991 Oct 20 3:00"},{"name":"Europe/Samara","_offset":"4:00","_rule":"Russia","format":"SAM%sT","_until":"2010 Mar 28 2:00s"},{"name":"Europe/Samara","_offset":"3:00","_rule":"Russia","format":"SAM%sT","_until":"2011 Mar 27 2:00s"},{"name":"Europe/Samara","_offset":"4:00","_rule":"-","format":"SAMT","_until":""}],"Asia/Yekaterinburg":[{"name":"Asia/Yekaterinburg","_offset":"4:02:24","_rule":"-","format":"LMT","_until":"1919 Jul 15 4:00"},{"name":"Asia/Yekaterinburg","_offset":"4:00","_rule":"-","format":"SVET","_until":"1930 Jun 21"},{"name":"Asia/Yekaterinburg","_offset":"5:00","_rule":"Russia","format":"SVE%sT","_until":"1991 Mar 31 2:00s"},{"name":"Asia/Yekaterinburg","_offset":"4:00","_rule":"Russia","format":"SVE%sT","_until":"1992 Jan 19 2:00s"},{"name":"Asia/Yekaterinburg","_offset":"5:00","_rule":"Russia","format":"YEK%sT","_until":"2011 Mar 27 2:00s"},{"name":"Asia/Yekaterinburg","_offset":"6:00","_rule":"-","format":"YEKT","_until":""}],"Asia/Omsk":[{"name":"Asia/Omsk","_offset":"4:53:36","_rule":"-","format":"LMT","_until":"1919 Nov 14"},{"name":"Asia/Omsk","_offset":"5:00","_rule":"-","format":"OMST","_until":"1930 Jun 21"},{"name":"Asia/Omsk","_offset":"6:00","_rule":"Russia","format":"OMS%sT","_until":"1991 Mar 31 2:00s"},{"name":"Asia/Omsk","_offset":"5:00","_rule":"Russia","format":"OMS%sT","_until":"1992 Jan 19 2:00s"},{"name":"Asia/Omsk","_offset":"6:00","_rule":"Russia","format":"OMS%sT","_until":"2011 Mar 27 2:00s"},{"name":"Asia/Omsk","_offset":"7:00","_rule":"-","format":"OMST","_until":""}],"Asia/Novosibirsk":[{"name":"Asia/Novosibirsk","_offset":"5:31:40","_rule":"-","format":"LMT","_until":"1919 Dec 14 6:00"},{"name":"Asia/Novosibirsk","_offset":"6:00","_rule":"-","format":"NOVT","_until":"1930 Jun 21"},{"name":"Asia/Novosibirsk","_offset":"7:00","_rule":"Russia","format":"NOV%sT","_until":"1991 Mar 31 2:00s"},{"name":"Asia/Novosibirsk","_offset":"6:00","_rule":"Russia","format":"NOV%sT","_until":"1992 Jan 19 2:00s"},{"name":"Asia/Novosibirsk","_offset":"7:00","_rule":"Russia","format":"NOV%sT","_until":"1993 May 23"},{"name":"Asia/Novosibirsk","_offset":"6:00","_rule":"Russia","format":"NOV%sT","_until":"2011 Mar 27 2:00s"},{"name":"Asia/Novosibirsk","_offset":"7:00","_rule":"-","format":"NOVT","_until":""}],"Asia/Novokuznetsk":[{"name":"Asia/Novokuznetsk","_offset":"5:48:48","_rule":"-","format":"NMT","_until":"1920 Jan 6"},{"name":"Asia/Novokuznetsk","_offset":"6:00","_rule":"-","format":"KRAT","_until":"1930 Jun 21"},{"name":"Asia/Novokuznetsk","_offset":"7:00","_rule":"Russia","format":"KRA%sT","_until":"1991 Mar 31 2:00s"},{"name":"Asia/Novokuznetsk","_offset":"6:00","_rule":"Russia","format":"KRA%sT","_until":"1992 Jan 19 2:00s"},{"name":"Asia/Novokuznetsk","_offset":"7:00","_rule":"Russia","format":"KRA%sT","_until":"2010 Mar 28 2:00s"},{"name":"Asia/Novokuznetsk","_offset":"6:00","_rule":"Russia","format":"NOV%sT","_until":"2011 Mar 27 2:00s"},{"name":"Asia/Novokuznetsk","_offset":"7:00","_rule":"-","format":"NOVT","_until":""}],"Asia/Krasnoyarsk":[{"name":"Asia/Krasnoyarsk","_offset":"6:11:20","_rule":"-","format":"LMT","_until":"1920 Jan 6"},{"name":"Asia/Krasnoyarsk","_offset":"6:00","_rule":"-","format":"KRAT","_until":"1930 Jun 21"},{"name":"Asia/Krasnoyarsk","_offset":"7:00","_rule":"Russia","format":"KRA%sT","_until":"1991 Mar 31 2:00s"},{"name":"Asia/Krasnoyarsk","_offset":"6:00","_rule":"Russia","format":"KRA%sT","_until":"1992 Jan 19 2:00s"},{"name":"Asia/Krasnoyarsk","_offset":"7:00","_rule":"Russia","format":"KRA%sT","_until":"2011 Mar 27 2:00s"},{"name":"Asia/Krasnoyarsk","_offset":"8:00","_rule":"-","format":"KRAT","_until":""}],"Asia/Irkutsk":[{"name":"Asia/Irkutsk","_offset":"6:57:20","_rule":"-","format":"LMT","_until":"1880"},{"name":"Asia/Irkutsk","_offset":"6:57:20","_rule":"-","format":"IMT","_until":"1920 Jan 25"},{"name":"Asia/Irkutsk","_offset":"7:00","_rule":"-","format":"IRKT","_until":"1930 Jun 21"},{"name":"Asia/Irkutsk","_offset":"8:00","_rule":"Russia","format":"IRK%sT","_until":"1991 Mar 31 2:00s"},{"name":"Asia/Irkutsk","_offset":"7:00","_rule":"Russia","format":"IRK%sT","_until":"1992 Jan 19 2:00s"},{"name":"Asia/Irkutsk","_offset":"8:00","_rule":"Russia","format":"IRK%sT","_until":"2011 Mar 27 2:00s"},{"name":"Asia/Irkutsk","_offset":"9:00","_rule":"-","format":"IRKT","_until":""}],"Asia/Yakutsk":[{"name":"Asia/Yakutsk","_offset":"8:38:40","_rule":"-","format":"LMT","_until":"1919 Dec 15"},{"name":"Asia/Yakutsk","_offset":"8:00","_rule":"-","format":"YAKT","_until":"1930 Jun 21"},{"name":"Asia/Yakutsk","_offset":"9:00","_rule":"Russia","format":"YAK%sT","_until":"1991 Mar 31 2:00s"},{"name":"Asia/Yakutsk","_offset":"8:00","_rule":"Russia","format":"YAK%sT","_until":"1992 Jan 19 2:00s"},{"name":"Asia/Yakutsk","_offset":"9:00","_rule":"Russia","format":"YAK%sT","_until":"2011 Mar 27 2:00s"},{"name":"Asia/Yakutsk","_offset":"10:00","_rule":"-","format":"YAKT","_until":""}],"Asia/Vladivostok":[{"name":"Asia/Vladivostok","_offset":"8:47:44","_rule":"-","format":"LMT","_until":"1922 Nov 15"},{"name":"Asia/Vladivostok","_offset":"9:00","_rule":"-","format":"VLAT","_until":"1930 Jun 21"},{"name":"Asia/Vladivostok","_offset":"10:00","_rule":"Russia","format":"VLA%sT","_until":"1991 Mar 31 2:00s"},{"name":"Asia/Vladivostok","_offset":"9:00","_rule":"Russia","format":"VLA%sST","_until":"1992 Jan 19 2:00s"},{"name":"Asia/Vladivostok","_offset":"10:00","_rule":"Russia","format":"VLA%sT","_until":"2011 Mar 27 2:00s"},{"name":"Asia/Vladivostok","_offset":"11:00","_rule":"-","format":"VLAT","_until":""}],"Asia/Khandyga":[{"name":"Asia/Khandyga","_offset":"9:02:13","_rule":"-","format":"LMT","_until":"1919 Dec 15"},{"name":"Asia/Khandyga","_offset":"8:00","_rule":"-","format":"YAKT","_until":"1930 Jun 21"},{"name":"Asia/Khandyga","_offset":"9:00","_rule":"Russia","format":"YAK%sT","_until":"1991 Mar 31 2:00s"},{"name":"Asia/Khandyga","_offset":"8:00","_rule":"Russia","format":"YAK%sT","_until":"1992 Jan 19 2:00s"},{"name":"Asia/Khandyga","_offset":"9:00","_rule":"Russia","format":"YAK%sT","_until":"2004"},{"name":"Asia/Khandyga","_offset":"10:00","_rule":"Russia","format":"VLA%sT","_until":"2011 Mar 27 2:00s"},{"name":"Asia/Khandyga","_offset":"11:00","_rule":"-","format":"VLAT","_until":"2011 Sep 13 0:00s"},{"name":"Asia/Khandyga","_offset":"10:00","_rule":"-","format":"YAKT","_until":""}],"Asia/Sakhalin":[{"name":"Asia/Sakhalin","_offset":"9:30:48","_rule":"-","format":"LMT","_until":"1905 Aug 23"},{"name":"Asia/Sakhalin","_offset":"9:00","_rule":"-","format":"CJT","_until":"1938"},{"name":"Asia/Sakhalin","_offset":"9:00","_rule":"-","format":"JST","_until":"1945 Aug 25"},{"name":"Asia/Sakhalin","_offset":"11:00","_rule":"Russia","format":"SAK%sT","_until":"1991 Mar 31 2:00s"},{"name":"Asia/Sakhalin","_offset":"10:00","_rule":"Russia","format":"SAK%sT","_until":"1992 Jan 19 2:00s"},{"name":"Asia/Sakhalin","_offset":"11:00","_rule":"Russia","format":"SAK%sT","_until":"1997 Mar lastSun 2:00s"},{"name":"Asia/Sakhalin","_offset":"10:00","_rule":"Russia","format":"SAK%sT","_until":"2011 Mar 27 2:00s"},{"name":"Asia/Sakhalin","_offset":"11:00","_rule":"-","format":"SAKT","_until":""}],"Asia/Magadan":[{"name":"Asia/Magadan","_offset":"10:03:12","_rule":"-","format":"LMT","_until":"1924 May 2"},{"name":"Asia/Magadan","_offset":"10:00","_rule":"-","format":"MAGT","_until":"1930 Jun 21"},{"name":"Asia/Magadan","_offset":"11:00","_rule":"Russia","format":"MAG%sT","_until":"1991 Mar 31 2:00s"},{"name":"Asia/Magadan","_offset":"10:00","_rule":"Russia","format":"MAG%sT","_until":"1992 Jan 19 2:00s"},{"name":"Asia/Magadan","_offset":"11:00","_rule":"Russia","format":"MAG%sT","_until":"2011 Mar 27 2:00s"},{"name":"Asia/Magadan","_offset":"12:00","_rule":"-","format":"MAGT","_until":""}],"Asia/Ust-Nera":[{"name":"Asia/Ust-Nera","_offset":"9:32:54","_rule":"-","format":"LMT","_until":"1919 Dec 15"},{"name":"Asia/Ust-Nera","_offset":"8:00","_rule":"-","format":"YAKT","_until":"1930 Jun 21"},{"name":"Asia/Ust-Nera","_offset":"9:00","_rule":"Russia","format":"YAKT","_until":"1981 Apr 1"},{"name":"Asia/Ust-Nera","_offset":"11:00","_rule":"Russia","format":"MAG%sT","_until":"1991 Mar 31 2:00s"},{"name":"Asia/Ust-Nera","_offset":"10:00","_rule":"Russia","format":"MAG%sT","_until":"1992 Jan 19 2:00s"},{"name":"Asia/Ust-Nera","_offset":"11:00","_rule":"Russia","format":"MAG%sT","_until":"2011 Mar 27 2:00s"},{"name":"Asia/Ust-Nera","_offset":"12:00","_rule":"-","format":"MAGT","_until":"2011 Sep 13 0:00s"},{"name":"Asia/Ust-Nera","_offset":"11:00","_rule":"-","format":"VLAT","_until":""}],"Asia/Kamchatka":[{"name":"Asia/Kamchatka","_offset":"10:34:36","_rule":"-","format":"LMT","_until":"1922 Nov 10"},{"name":"Asia/Kamchatka","_offset":"11:00","_rule":"-","format":"PETT","_until":"1930 Jun 21"},{"name":"Asia/Kamchatka","_offset":"12:00","_rule":"Russia","format":"PET%sT","_until":"1991 Mar 31 2:00s"},{"name":"Asia/Kamchatka","_offset":"11:00","_rule":"Russia","format":"PET%sT","_until":"1992 Jan 19 2:00s"},{"name":"Asia/Kamchatka","_offset":"12:00","_rule":"Russia","format":"PET%sT","_until":"2010 Mar 28 2:00s"},{"name":"Asia/Kamchatka","_offset":"11:00","_rule":"Russia","format":"PET%sT","_until":"2011 Mar 27 2:00s"},{"name":"Asia/Kamchatka","_offset":"12:00","_rule":"-","format":"PETT","_until":""}],"Asia/Anadyr":[{"name":"Asia/Anadyr","_offset":"11:49:56","_rule":"-","format":"LMT","_until":"1924 May 2"},{"name":"Asia/Anadyr","_offset":"12:00","_rule":"-","format":"ANAT","_until":"1930 Jun 21"},{"name":"Asia/Anadyr","_offset":"13:00","_rule":"Russia","format":"ANA%sT","_until":"1982 Apr 1 0:00s"},{"name":"Asia/Anadyr","_offset":"12:00","_rule":"Russia","format":"ANA%sT","_until":"1991 Mar 31 2:00s"},{"name":"Asia/Anadyr","_offset":"11:00","_rule":"Russia","format":"ANA%sT","_until":"1992 Jan 19 2:00s"},{"name":"Asia/Anadyr","_offset":"12:00","_rule":"Russia","format":"ANA%sT","_until":"2010 Mar 28 2:00s"},{"name":"Asia/Anadyr","_offset":"11:00","_rule":"Russia","format":"ANA%sT","_until":"2011 Mar 27 2:00s"},{"name":"Asia/Anadyr","_offset":"12:00","_rule":"-","format":"ANAT","_until":""}],"Europe/Belgrade":[{"name":"Europe/Belgrade","_offset":"1:22:00","_rule":"-","format":"LMT","_until":"1884"},{"name":"Europe/Belgrade","_offset":"1:00","_rule":"-","format":"CET","_until":"1941 Apr 18 23:00"},{"name":"Europe/Belgrade","_offset":"1:00","_rule":"C-Eur","format":"CE%sT","_until":"1945"},{"name":"Europe/Belgrade","_offset":"1:00","_rule":"-","format":"CET","_until":"1945 May 8 2:00s"},{"name":"Europe/Belgrade","_offset":"1:00","_rule":"1:00","format":"CEST","_until":"1945 Sep 16 2:00s"},{"name":"Europe/Belgrade","_offset":"1:00","_rule":"-","format":"CET","_until":"1982 Nov 27"},{"name":"Europe/Belgrade","_offset":"1:00","_rule":"EU","format":"CE%sT","_until":""}],"Europe/Madrid":[{"name":"Europe/Madrid","_offset":"-0:14:44","_rule":"-","format":"LMT","_until":"1901 Jan 1 0:00s"},{"name":"Europe/Madrid","_offset":"0:00","_rule":"Spain","format":"WE%sT","_until":"1946 Sep 30"},{"name":"Europe/Madrid","_offset":"1:00","_rule":"Spain","format":"CE%sT","_until":"1979"},{"name":"Europe/Madrid","_offset":"1:00","_rule":"EU","format":"CE%sT","_until":""}],"Africa/Ceuta":[{"name":"Africa/Ceuta","_offset":"-0:21:16","_rule":"-","format":"LMT","_until":"1901"},{"name":"Africa/Ceuta","_offset":"0:00","_rule":"-","format":"WET","_until":"1918 May 6 23:00"},{"name":"Africa/Ceuta","_offset":"0:00","_rule":"1:00","format":"WEST","_until":"1918 Oct 7 23:00"},{"name":"Africa/Ceuta","_offset":"0:00","_rule":"-","format":"WET","_until":"1924"},{"name":"Africa/Ceuta","_offset":"0:00","_rule":"Spain","format":"WE%sT","_until":"1929"},{"name":"Africa/Ceuta","_offset":"0:00","_rule":"SpainAfrica","format":"WE%sT","_until":"1984 Mar 16"},{"name":"Africa/Ceuta","_offset":"1:00","_rule":"-","format":"CET","_until":"1986"},{"name":"Africa/Ceuta","_offset":"1:00","_rule":"EU","format":"CE%sT","_until":""}],"Atlantic/Canary":[{"name":"Atlantic/Canary","_offset":"-1:01:36","_rule":"-","format":"LMT","_until":"1922 Mar"},{"name":"Atlantic/Canary","_offset":"-1:00","_rule":"-","format":"CANT","_until":"1946 Sep 30 1:00"},{"name":"Atlantic/Canary","_offset":"0:00","_rule":"-","format":"WET","_until":"1980 Apr 6 0:00s"},{"name":"Atlantic/Canary","_offset":"0:00","_rule":"1:00","format":"WEST","_until":"1980 Sep 28 0:00s"},{"name":"Atlantic/Canary","_offset":"0:00","_rule":"EU","format":"WE%sT","_until":""}],"Europe/Stockholm":[{"name":"Europe/Stockholm","_offset":"1:12:12","_rule":"-","format":"LMT","_until":"1879 Jan 1"},{"name":"Europe/Stockholm","_offset":"1:00:14","_rule":"-","format":"SET","_until":"1900 Jan 1"},{"name":"Europe/Stockholm","_offset":"1:00","_rule":"-","format":"CET","_until":"1916 May 14 23:00"},{"name":"Europe/Stockholm","_offset":"1:00","_rule":"1:00","format":"CEST","_until":"1916 Oct 1 01:00"},{"name":"Europe/Stockholm","_offset":"1:00","_rule":"-","format":"CET","_until":"1980"},{"name":"Europe/Stockholm","_offset":"1:00","_rule":"EU","format":"CE%sT","_until":""}],"Europe/Zurich":[{"name":"Europe/Zurich","_offset":"0:34:08","_rule":"-","format":"LMT","_until":"1848 Sep 12"},{"name":"Europe/Zurich","_offset":"0:29:44","_rule":"-","format":"BMT","_until":"1894 Jun"},{"name":"Europe/Zurich","_offset":"1:00","_rule":"Swiss","format":"CE%sT","_until":"1981"},{"name":"Europe/Zurich","_offset":"1:00","_rule":"EU","format":"CE%sT","_until":""}],"Europe/Istanbul":[{"name":"Europe/Istanbul","_offset":"1:55:52","_rule":"-","format":"LMT","_until":"1880"},{"name":"Europe/Istanbul","_offset":"1:56:56","_rule":"-","format":"IMT","_until":"1910 Oct"},{"name":"Europe/Istanbul","_offset":"2:00","_rule":"Turkey","format":"EE%sT","_until":"1978 Oct 15"},{"name":"Europe/Istanbul","_offset":"3:00","_rule":"Turkey","format":"TR%sT","_until":"1985 Apr 20"},{"name":"Europe/Istanbul","_offset":"2:00","_rule":"Turkey","format":"EE%sT","_until":"2007"},{"name":"Europe/Istanbul","_offset":"2:00","_rule":"EU","format":"EE%sT","_until":"2011 Mar 27 1:00u"},{"name":"Europe/Istanbul","_offset":"2:00","_rule":"-","format":"EET","_until":"2011 Mar 28 1:00u"},{"name":"Europe/Istanbul","_offset":"2:00","_rule":"EU","format":"EE%sT","_until":""}],"Europe/Kiev":[{"name":"Europe/Kiev","_offset":"2:02:04","_rule":"-","format":"LMT","_until":"1880"},{"name":"Europe/Kiev","_offset":"2:02:04","_rule":"-","format":"KMT","_until":"1924 May 2"},{"name":"Europe/Kiev","_offset":"2:00","_rule":"-","format":"EET","_until":"1930 Jun 21"},{"name":"Europe/Kiev","_offset":"3:00","_rule":"-","format":"MSK","_until":"1941 Sep 20"},{"name":"Europe/Kiev","_offset":"1:00","_rule":"C-Eur","format":"CE%sT","_until":"1943 Nov 6"},{"name":"Europe/Kiev","_offset":"3:00","_rule":"Russia","format":"MSK/MSD","_until":"1990"},{"name":"Europe/Kiev","_offset":"3:00","_rule":"-","format":"MSK","_until":"1990 Jul 1 2:00"},{"name":"Europe/Kiev","_offset":"2:00","_rule":"-","format":"EET","_until":"1992"},{"name":"Europe/Kiev","_offset":"2:00","_rule":"E-Eur","format":"EE%sT","_until":"1995"},{"name":"Europe/Kiev","_offset":"2:00","_rule":"EU","format":"EE%sT","_until":""}],"Europe/Uzhgorod":[{"name":"Europe/Uzhgorod","_offset":"1:29:12","_rule":"-","format":"LMT","_until":"1890 Oct"},{"name":"Europe/Uzhgorod","_offset":"1:00","_rule":"-","format":"CET","_until":"1940"},{"name":"Europe/Uzhgorod","_offset":"1:00","_rule":"C-Eur","format":"CE%sT","_until":"1944 Oct"},{"name":"Europe/Uzhgorod","_offset":"1:00","_rule":"1:00","format":"CEST","_until":"1944 Oct 26"},{"name":"Europe/Uzhgorod","_offset":"1:00","_rule":"-","format":"CET","_until":"1945 Jun 29"},{"name":"Europe/Uzhgorod","_offset":"3:00","_rule":"Russia","format":"MSK/MSD","_until":"1990"},{"name":"Europe/Uzhgorod","_offset":"3:00","_rule":"-","format":"MSK","_until":"1990 Jul 1 2:00"},{"name":"Europe/Uzhgorod","_offset":"1:00","_rule":"-","format":"CET","_until":"1991 Mar 31 3:00"},{"name":"Europe/Uzhgorod","_offset":"2:00","_rule":"-","format":"EET","_until":"1992"},{"name":"Europe/Uzhgorod","_offset":"2:00","_rule":"E-Eur","format":"EE%sT","_until":"1995"},{"name":"Europe/Uzhgorod","_offset":"2:00","_rule":"EU","format":"EE%sT","_until":""}],"Europe/Zaporozhye":[{"name":"Europe/Zaporozhye","_offset":"2:20:40","_rule":"-","format":"LMT","_until":"1880"},{"name":"Europe/Zaporozhye","_offset":"2:20","_rule":"-","format":"CUT","_until":"1924 May 2"},{"name":"Europe/Zaporozhye","_offset":"2:00","_rule":"-","format":"EET","_until":"1930 Jun 21"},{"name":"Europe/Zaporozhye","_offset":"3:00","_rule":"-","format":"MSK","_until":"1941 Aug 25"},{"name":"Europe/Zaporozhye","_offset":"1:00","_rule":"C-Eur","format":"CE%sT","_until":"1943 Oct 25"},{"name":"Europe/Zaporozhye","_offset":"3:00","_rule":"Russia","format":"MSK/MSD","_until":"1991 Mar 31 2:00"},{"name":"Europe/Zaporozhye","_offset":"2:00","_rule":"E-Eur","format":"EE%sT","_until":"1995"},{"name":"Europe/Zaporozhye","_offset":"2:00","_rule":"EU","format":"EE%sT","_until":""}],"Europe/Simferopol":[{"name":"Europe/Simferopol","_offset":"2:16:24","_rule":"-","format":"LMT","_until":"1880"},{"name":"Europe/Simferopol","_offset":"2:16","_rule":"-","format":"SMT","_until":"1924 May 2"},{"name":"Europe/Simferopol","_offset":"2:00","_rule":"-","format":"EET","_until":"1930 Jun 21"},{"name":"Europe/Simferopol","_offset":"3:00","_rule":"-","format":"MSK","_until":"1941 Nov"},{"name":"Europe/Simferopol","_offset":"1:00","_rule":"C-Eur","format":"CE%sT","_until":"1944 Apr 13"},{"name":"Europe/Simferopol","_offset":"3:00","_rule":"Russia","format":"MSK/MSD","_until":"1990"},{"name":"Europe/Simferopol","_offset":"3:00","_rule":"-","format":"MSK","_until":"1990 Jul 1 2:00"},{"name":"Europe/Simferopol","_offset":"2:00","_rule":"-","format":"EET","_until":"1992"},{"name":"Europe/Simferopol","_offset":"2:00","_rule":"E-Eur","format":"EE%sT","_until":"1994 May"},{"name":"Europe/Simferopol","_offset":"3:00","_rule":"E-Eur","format":"MSK/MSD","_until":"1996 Mar 31 3:00s"},{"name":"Europe/Simferopol","_offset":"3:00","_rule":"1:00","format":"MSD","_until":"1996 Oct 27 3:00s"},{"name":"Europe/Simferopol","_offset":"3:00","_rule":"Russia","format":"MSK/MSD","_until":"1997"},{"name":"Europe/Simferopol","_offset":"3:00","_rule":"-","format":"MSK","_until":"1997 Mar lastSun 1:00u"},{"name":"Europe/Simferopol","_offset":"2:00","_rule":"EU","format":"EE%sT","_until":""}],"Factory":[],"EST":[{"name":"EST","_offset":"-5:00","_rule":"-","format":"EST","_until":""}],"MST":[{"name":"MST","_offset":"-7:00","_rule":"-","format":"MST","_until":""}],"HST":[{"name":"HST","_offset":"-10:00","_rule":"-","format":"HST","_until":""}],"EST5EDT":[{"name":"EST5EDT","_offset":"-5:00","_rule":"US","format":"E%sT","_until":""}],"CST6CDT":[{"name":"CST6CDT","_offset":"-6:00","_rule":"US","format":"C%sT","_until":""}],"MST7MDT":[{"name":"MST7MDT","_offset":"-7:00","_rule":"US","format":"M%sT","_until":""}],"PST8PDT":[{"name":"PST8PDT","_offset":"-8:00","_rule":"US","format":"P%sT","_until":""}],"America/New_York":[{"name":"America/New_York","_offset":"-4:56:02","_rule":"-","format":"LMT","_until":"1883 Nov 18 12:03:58"},{"name":"America/New_York","_offset":"-5:00","_rule":"US","format":"E%sT","_until":"1920"},{"name":"America/New_York","_offset":"-5:00","_rule":"NYC","format":"E%sT","_until":"1942"},{"name":"America/New_York","_offset":"-5:00","_rule":"US","format":"E%sT","_until":"1946"},{"name":"America/New_York","_offset":"-5:00","_rule":"NYC","format":"E%sT","_until":"1967"},{"name":"America/New_York","_offset":"-5:00","_rule":"US","format":"E%sT","_until":""}],"America/Chicago":[{"name":"America/Chicago","_offset":"-5:50:36","_rule":"-","format":"LMT","_until":"1883 Nov 18 12:09:24"},{"name":"America/Chicago","_offset":"-6:00","_rule":"US","format":"C%sT","_until":"1920"},{"name":"America/Chicago","_offset":"-6:00","_rule":"Chicago","format":"C%sT","_until":"1936 Mar 1 2:00"},{"name":"America/Chicago","_offset":"-5:00","_rule":"-","format":"EST","_until":"1936 Nov 15 2:00"},{"name":"America/Chicago","_offset":"-6:00","_rule":"Chicago","format":"C%sT","_until":"1942"},{"name":"America/Chicago","_offset":"-6:00","_rule":"US","format":"C%sT","_until":"1946"},{"name":"America/Chicago","_offset":"-6:00","_rule":"Chicago","format":"C%sT","_until":"1967"},{"name":"America/Chicago","_offset":"-6:00","_rule":"US","format":"C%sT","_until":""}],"America/North_Dakota/Center":[{"name":"America/North_Dakota/Center","_offset":"-6:45:12","_rule":"-","format":"LMT","_until":"1883 Nov 18 12:14:48"},{"name":"America/North_Dakota/Center","_offset":"-7:00","_rule":"US","format":"M%sT","_until":"1992 Oct 25 02:00"},{"name":"America/North_Dakota/Center","_offset":"-6:00","_rule":"US","format":"C%sT","_until":""}],"America/North_Dakota/New_Salem":[{"name":"America/North_Dakota/New_Salem","_offset":"-6:45:39","_rule":"-","format":"LMT","_until":"1883 Nov 18 12:14:21"},{"name":"America/North_Dakota/New_Salem","_offset":"-7:00","_rule":"US","format":"M%sT","_until":"2003 Oct 26 02:00"},{"name":"America/North_Dakota/New_Salem","_offset":"-6:00","_rule":"US","format":"C%sT","_until":""}],"America/North_Dakota/Beulah":[{"name":"America/North_Dakota/Beulah","_offset":"-6:47:07","_rule":"-","format":"LMT","_until":"1883 Nov 18 12:12:53"},{"name":"America/North_Dakota/Beulah","_offset":"-7:00","_rule":"US","format":"M%sT","_until":"2010 Nov 7 2:00"},{"name":"America/North_Dakota/Beulah","_offset":"-6:00","_rule":"US","format":"C%sT","_until":""}],"America/Denver":[{"name":"America/Denver","_offset":"-6:59:56","_rule":"-","format":"LMT","_until":"1883 Nov 18 12:00:04"},{"name":"America/Denver","_offset":"-7:00","_rule":"US","format":"M%sT","_until":"1920"},{"name":"America/Denver","_offset":"-7:00","_rule":"Denver","format":"M%sT","_until":"1942"},{"name":"America/Denver","_offset":"-7:00","_rule":"US","format":"M%sT","_until":"1946"},{"name":"America/Denver","_offset":"-7:00","_rule":"Denver","format":"M%sT","_until":"1967"},{"name":"America/Denver","_offset":"-7:00","_rule":"US","format":"M%sT","_until":""}],"America/Los_Angeles":[{"name":"America/Los_Angeles","_offset":"-7:52:58","_rule":"-","format":"LMT","_until":"1883 Nov 18 12:07:02"},{"name":"America/Los_Angeles","_offset":"-8:00","_rule":"US","format":"P%sT","_until":"1946"},{"name":"America/Los_Angeles","_offset":"-8:00","_rule":"CA","format":"P%sT","_until":"1967"},{"name":"America/Los_Angeles","_offset":"-8:00","_rule":"US","format":"P%sT","_until":""}],"America/Juneau":[{"name":"America/Juneau","_offset":"15:02:19","_rule":"-","format":"LMT","_until":"1867 Oct 18"},{"name":"America/Juneau","_offset":"-8:57:41","_rule":"-","format":"LMT","_until":"1900 Aug 20 12:00"},{"name":"America/Juneau","_offset":"-8:00","_rule":"-","format":"PST","_until":"1942"},{"name":"America/Juneau","_offset":"-8:00","_rule":"US","format":"P%sT","_until":"1946"},{"name":"America/Juneau","_offset":"-8:00","_rule":"-","format":"PST","_until":"1969"},{"name":"America/Juneau","_offset":"-8:00","_rule":"US","format":"P%sT","_until":"1980 Apr 27 2:00"},{"name":"America/Juneau","_offset":"-9:00","_rule":"US","format":"Y%sT","_until":"1980 Oct 26 2:00"},{"name":"America/Juneau","_offset":"-8:00","_rule":"US","format":"P%sT","_until":"1983 Oct 30 2:00"},{"name":"America/Juneau","_offset":"-9:00","_rule":"US","format":"Y%sT","_until":"1983 Nov 30"},{"name":"America/Juneau","_offset":"-9:00","_rule":"US","format":"AK%sT","_until":""}],"America/Sitka":[{"name":"America/Sitka","_offset":"14:58:47","_rule":"-","format":"LMT","_until":"1867 Oct 18"},{"name":"America/Sitka","_offset":"-9:01:13","_rule":"-","format":"LMT","_until":"1900 Aug 20 12:00"},{"name":"America/Sitka","_offset":"-8:00","_rule":"-","format":"PST","_until":"1942"},{"name":"America/Sitka","_offset":"-8:00","_rule":"US","format":"P%sT","_until":"1946"},{"name":"America/Sitka","_offset":"-8:00","_rule":"-","format":"PST","_until":"1969"},{"name":"America/Sitka","_offset":"-8:00","_rule":"US","format":"P%sT","_until":"1983 Oct 30 2:00"},{"name":"America/Sitka","_offset":"-9:00","_rule":"US","format":"Y%sT","_until":"1983 Nov 30"},{"name":"America/Sitka","_offset":"-9:00","_rule":"US","format":"AK%sT","_until":""}],"America/Metlakatla":[{"name":"America/Metlakatla","_offset":"15:13:42","_rule":"-","format":"LMT","_until":"1867 Oct 18"},{"name":"America/Metlakatla","_offset":"-8:46:18","_rule":"-","format":"LMT","_until":"1900 Aug 20 12:00"},{"name":"America/Metlakatla","_offset":"-8:00","_rule":"-","format":"PST","_until":"1942"},{"name":"America/Metlakatla","_offset":"-8:00","_rule":"US","format":"P%sT","_until":"1946"},{"name":"America/Metlakatla","_offset":"-8:00","_rule":"-","format":"PST","_until":"1969"},{"name":"America/Metlakatla","_offset":"-8:00","_rule":"US","format":"P%sT","_until":"1983 Oct 30 2:00"},{"name":"America/Metlakatla","_offset":"-8:00","_rule":"-","format":"MeST","_until":""}],"America/Yakutat":[{"name":"America/Yakutat","_offset":"14:41:05","_rule":"-","format":"LMT","_until":"1867 Oct 18"},{"name":"America/Yakutat","_offset":"-9:18:55","_rule":"-","format":"LMT","_until":"1900 Aug 20 12:00"},{"name":"America/Yakutat","_offset":"-9:00","_rule":"-","format":"YST","_until":"1942"},{"name":"America/Yakutat","_offset":"-9:00","_rule":"US","format":"Y%sT","_until":"1946"},{"name":"America/Yakutat","_offset":"-9:00","_rule":"-","format":"YST","_until":"1969"},{"name":"America/Yakutat","_offset":"-9:00","_rule":"US","format":"Y%sT","_until":"1983 Nov 30"},{"name":"America/Yakutat","_offset":"-9:00","_rule":"US","format":"AK%sT","_until":""}],"America/Anchorage":[{"name":"America/Anchorage","_offset":"14:00:24","_rule":"-","format":"LMT","_until":"1867 Oct 18"},{"name":"America/Anchorage","_offset":"-9:59:36","_rule":"-","format":"LMT","_until":"1900 Aug 20 12:00"},{"name":"America/Anchorage","_offset":"-10:00","_rule":"-","format":"CAT","_until":"1942"},{"name":"America/Anchorage","_offset":"-10:00","_rule":"US","format":"CAT/CAWT","_until":"1945 Aug 14 23:00u"},{"name":"America/Anchorage","_offset":"-10:00","_rule":"US","format":"CAT/CAPT","_until":"1946"},{"name":"America/Anchorage","_offset":"-10:00","_rule":"-","format":"CAT","_until":"1967 Apr"},{"name":"America/Anchorage","_offset":"-10:00","_rule":"-","format":"AHST","_until":"1969"},{"name":"America/Anchorage","_offset":"-10:00","_rule":"US","format":"AH%sT","_until":"1983 Oct 30 2:00"},{"name":"America/Anchorage","_offset":"-9:00","_rule":"US","format":"Y%sT","_until":"1983 Nov 30"},{"name":"America/Anchorage","_offset":"-9:00","_rule":"US","format":"AK%sT","_until":""}],"America/Nome":[{"name":"America/Nome","_offset":"12:58:21","_rule":"-","format":"LMT","_until":"1867 Oct 18"},{"name":"America/Nome","_offset":"-11:01:38","_rule":"-","format":"LMT","_until":"1900 Aug 20 12:00"},{"name":"America/Nome","_offset":"-11:00","_rule":"-","format":"NST","_until":"1942"},{"name":"America/Nome","_offset":"-11:00","_rule":"US","format":"N%sT","_until":"1946"},{"name":"America/Nome","_offset":"-11:00","_rule":"-","format":"NST","_until":"1967 Apr"},{"name":"America/Nome","_offset":"-11:00","_rule":"-","format":"BST","_until":"1969"},{"name":"America/Nome","_offset":"-11:00","_rule":"US","format":"B%sT","_until":"1983 Oct 30 2:00"},{"name":"America/Nome","_offset":"-9:00","_rule":"US","format":"Y%sT","_until":"1983 Nov 30"},{"name":"America/Nome","_offset":"-9:00","_rule":"US","format":"AK%sT","_until":""}],"America/Adak":[{"name":"America/Adak","_offset":"12:13:21","_rule":"-","format":"LMT","_until":"1867 Oct 18"},{"name":"America/Adak","_offset":"-11:46:38","_rule":"-","format":"LMT","_until":"1900 Aug 20 12:00"},{"name":"America/Adak","_offset":"-11:00","_rule":"-","format":"NST","_until":"1942"},{"name":"America/Adak","_offset":"-11:00","_rule":"US","format":"N%sT","_until":"1946"},{"name":"America/Adak","_offset":"-11:00","_rule":"-","format":"NST","_until":"1967 Apr"},{"name":"America/Adak","_offset":"-11:00","_rule":"-","format":"BST","_until":"1969"},{"name":"America/Adak","_offset":"-11:00","_rule":"US","format":"B%sT","_until":"1983 Oct 30 2:00"},{"name":"America/Adak","_offset":"-10:00","_rule":"US","format":"AH%sT","_until":"1983 Nov 30"},{"name":"America/Adak","_offset":"-10:00","_rule":"US","format":"HA%sT","_until":""}],"Pacific/Honolulu":[{"name":"Pacific/Honolulu","_offset":"-10:31:26","_rule":"-","format":"LMT","_until":"1896 Jan 13 12:00"},{"name":"Pacific/Honolulu","_offset":"-10:30","_rule":"-","format":"HST","_until":"1933 Apr 30 2:00"},{"name":"Pacific/Honolulu","_offset":"-10:30","_rule":"1:00","format":"HDT","_until":"1933 May 21 12:00"},{"name":"Pacific/Honolulu","_offset":"-10:30","_rule":"-","format":"HST","_until":"1942 Feb 09 2:00"},{"name":"Pacific/Honolulu","_offset":"-10:30","_rule":"1:00","format":"HDT","_until":"1945 Sep 30 2:00"},{"name":"Pacific/Honolulu","_offset":"-10:30","_rule":"-","format":"HST","_until":"1947 Jun 8 2:00"},{"name":"Pacific/Honolulu","_offset":"-10:00","_rule":"-","format":"HST","_until":""}],"America/Phoenix":[{"name":"America/Phoenix","_offset":"-7:28:18","_rule":"-","format":"LMT","_until":"1883 Nov 18 11:31:42"},{"name":"America/Phoenix","_offset":"-7:00","_rule":"US","format":"M%sT","_until":"1944 Jan 1 00:01"},{"name":"America/Phoenix","_offset":"-7:00","_rule":"-","format":"MST","_until":"1944 Apr 1 00:01"},{"name":"America/Phoenix","_offset":"-7:00","_rule":"US","format":"M%sT","_until":"1944 Oct 1 00:01"},{"name":"America/Phoenix","_offset":"-7:00","_rule":"-","format":"MST","_until":"1967"},{"name":"America/Phoenix","_offset":"-7:00","_rule":"US","format":"M%sT","_until":"1968 Mar 21"},{"name":"America/Phoenix","_offset":"-7:00","_rule":"-","format":"MST","_until":""}],"America/Boise":[{"name":"America/Boise","_offset":"-7:44:49","_rule":"-","format":"LMT","_until":"1883 Nov 18 12:15:11"},{"name":"America/Boise","_offset":"-8:00","_rule":"US","format":"P%sT","_until":"1923 May 13 2:00"},{"name":"America/Boise","_offset":"-7:00","_rule":"US","format":"M%sT","_until":"1974"},{"name":"America/Boise","_offset":"-7:00","_rule":"-","format":"MST","_until":"1974 Feb 3 2:00"},{"name":"America/Boise","_offset":"-7:00","_rule":"US","format":"M%sT","_until":""}],"America/Indiana/Indianapolis":[{"name":"America/Indiana/Indianapolis","_offset":"-5:44:38","_rule":"-","format":"LMT","_until":"1883 Nov 18 12:15:22"},{"name":"America/Indiana/Indianapolis","_offset":"-6:00","_rule":"US","format":"C%sT","_until":"1920"},{"name":"America/Indiana/Indianapolis","_offset":"-6:00","_rule":"Indianapolis","format":"C%sT","_until":"1942"},{"name":"America/Indiana/Indianapolis","_offset":"-6:00","_rule":"US","format":"C%sT","_until":"1946"},{"name":"America/Indiana/Indianapolis","_offset":"-6:00","_rule":"Indianapolis","format":"C%sT","_until":"1955 Apr 24 2:00"},{"name":"America/Indiana/Indianapolis","_offset":"-5:00","_rule":"-","format":"EST","_until":"1957 Sep 29 2:00"},{"name":"America/Indiana/Indianapolis","_offset":"-6:00","_rule":"-","format":"CST","_until":"1958 Apr 27 2:00"},{"name":"America/Indiana/Indianapolis","_offset":"-5:00","_rule":"-","format":"EST","_until":"1969"},{"name":"America/Indiana/Indianapolis","_offset":"-5:00","_rule":"US","format":"E%sT","_until":"1971"},{"name":"America/Indiana/Indianapolis","_offset":"-5:00","_rule":"-","format":"EST","_until":"2006"},{"name":"America/Indiana/Indianapolis","_offset":"-5:00","_rule":"US","format":"E%sT","_until":""}],"America/Indiana/Marengo":[{"name":"America/Indiana/Marengo","_offset":"-5:45:23","_rule":"-","format":"LMT","_until":"1883 Nov 18 12:14:37"},{"name":"America/Indiana/Marengo","_offset":"-6:00","_rule":"US","format":"C%sT","_until":"1951"},{"name":"America/Indiana/Marengo","_offset":"-6:00","_rule":"Marengo","format":"C%sT","_until":"1961 Apr 30 2:00"},{"name":"America/Indiana/Marengo","_offset":"-5:00","_rule":"-","format":"EST","_until":"1969"},{"name":"America/Indiana/Marengo","_offset":"-5:00","_rule":"US","format":"E%sT","_until":"1974 Jan 6 2:00"},{"name":"America/Indiana/Marengo","_offset":"-6:00","_rule":"1:00","format":"CDT","_until":"1974 Oct 27 2:00"},{"name":"America/Indiana/Marengo","_offset":"-5:00","_rule":"US","format":"E%sT","_until":"1976"},{"name":"America/Indiana/Marengo","_offset":"-5:00","_rule":"-","format":"EST","_until":"2006"},{"name":"America/Indiana/Marengo","_offset":"-5:00","_rule":"US","format":"E%sT","_until":""}],"America/Indiana/Vincennes":[{"name":"America/Indiana/Vincennes","_offset":"-5:50:07","_rule":"-","format":"LMT","_until":"1883 Nov 18 12:09:53"},{"name":"America/Indiana/Vincennes","_offset":"-6:00","_rule":"US","format":"C%sT","_until":"1946"},{"name":"America/Indiana/Vincennes","_offset":"-6:00","_rule":"Vincennes","format":"C%sT","_until":"1964 Apr 26 2:00"},{"name":"America/Indiana/Vincennes","_offset":"-5:00","_rule":"-","format":"EST","_until":"1969"},{"name":"America/Indiana/Vincennes","_offset":"-5:00","_rule":"US","format":"E%sT","_until":"1971"},{"name":"America/Indiana/Vincennes","_offset":"-5:00","_rule":"-","format":"EST","_until":"2006 Apr 2 2:00"},{"name":"America/Indiana/Vincennes","_offset":"-6:00","_rule":"US","format":"C%sT","_until":"2007 Nov 4 2:00"},{"name":"America/Indiana/Vincennes","_offset":"-5:00","_rule":"US","format":"E%sT","_until":""}],"America/Indiana/Tell_City":[{"name":"America/Indiana/Tell_City","_offset":"-5:47:03","_rule":"-","format":"LMT","_until":"1883 Nov 18 12:12:57"},{"name":"America/Indiana/Tell_City","_offset":"-6:00","_rule":"US","format":"C%sT","_until":"1946"},{"name":"America/Indiana/Tell_City","_offset":"-6:00","_rule":"Perry","format":"C%sT","_until":"1964 Apr 26 2:00"},{"name":"America/Indiana/Tell_City","_offset":"-5:00","_rule":"-","format":"EST","_until":"1969"},{"name":"America/Indiana/Tell_City","_offset":"-5:00","_rule":"US","format":"E%sT","_until":"1971"},{"name":"America/Indiana/Tell_City","_offset":"-5:00","_rule":"-","format":"EST","_until":"2006 Apr 2 2:00"},{"name":"America/Indiana/Tell_City","_offset":"-6:00","_rule":"US","format":"C%sT","_until":""}],"America/Indiana/Petersburg":[{"name":"America/Indiana/Petersburg","_offset":"-5:49:07","_rule":"-","format":"LMT","_until":"1883 Nov 18 12:10:53"},{"name":"America/Indiana/Petersburg","_offset":"-6:00","_rule":"US","format":"C%sT","_until":"1955"},{"name":"America/Indiana/Petersburg","_offset":"-6:00","_rule":"Pike","format":"C%sT","_until":"1965 Apr 25 2:00"},{"name":"America/Indiana/Petersburg","_offset":"-5:00","_rule":"-","format":"EST","_until":"1966 Oct 30 2:00"},{"name":"America/Indiana/Petersburg","_offset":"-6:00","_rule":"US","format":"C%sT","_until":"1977 Oct 30 2:00"},{"name":"America/Indiana/Petersburg","_offset":"-5:00","_rule":"-","format":"EST","_until":"2006 Apr 2 2:00"},{"name":"America/Indiana/Petersburg","_offset":"-6:00","_rule":"US","format":"C%sT","_until":"2007 Nov 4 2:00"},{"name":"America/Indiana/Petersburg","_offset":"-5:00","_rule":"US","format":"E%sT","_until":""}],"America/Indiana/Knox":[{"name":"America/Indiana/Knox","_offset":"-5:46:30","_rule":"-","format":"LMT","_until":"1883 Nov 18 12:13:30"},{"name":"America/Indiana/Knox","_offset":"-6:00","_rule":"US","format":"C%sT","_until":"1947"},{"name":"America/Indiana/Knox","_offset":"-6:00","_rule":"Starke","format":"C%sT","_until":"1962 Apr 29 2:00"},{"name":"America/Indiana/Knox","_offset":"-5:00","_rule":"-","format":"EST","_until":"1963 Oct 27 2:00"},{"name":"America/Indiana/Knox","_offset":"-6:00","_rule":"US","format":"C%sT","_until":"1991 Oct 27 2:00"},{"name":"America/Indiana/Knox","_offset":"-5:00","_rule":"-","format":"EST","_until":"2006 Apr 2 2:00"},{"name":"America/Indiana/Knox","_offset":"-6:00","_rule":"US","format":"C%sT","_until":""}],"America/Indiana/Winamac":[{"name":"America/Indiana/Winamac","_offset":"-5:46:25","_rule":"-","format":"LMT","_until":"1883 Nov 18 12:13:35"},{"name":"America/Indiana/Winamac","_offset":"-6:00","_rule":"US","format":"C%sT","_until":"1946"},{"name":"America/Indiana/Winamac","_offset":"-6:00","_rule":"Pulaski","format":"C%sT","_until":"1961 Apr 30 2:00"},{"name":"America/Indiana/Winamac","_offset":"-5:00","_rule":"-","format":"EST","_until":"1969"},{"name":"America/Indiana/Winamac","_offset":"-5:00","_rule":"US","format":"E%sT","_until":"1971"},{"name":"America/Indiana/Winamac","_offset":"-5:00","_rule":"-","format":"EST","_until":"2006 Apr 2 2:00"},{"name":"America/Indiana/Winamac","_offset":"-6:00","_rule":"US","format":"C%sT","_until":"2007 Mar 11 2:00"},{"name":"America/Indiana/Winamac","_offset":"-5:00","_rule":"US","format":"E%sT","_until":""}],"America/Indiana/Vevay":[{"name":"America/Indiana/Vevay","_offset":"-5:40:16","_rule":"-","format":"LMT","_until":"1883 Nov 18 12:19:44"},{"name":"America/Indiana/Vevay","_offset":"-6:00","_rule":"US","format":"C%sT","_until":"1954 Apr 25 2:00"},{"name":"America/Indiana/Vevay","_offset":"-5:00","_rule":"-","format":"EST","_until":"1969"},{"name":"America/Indiana/Vevay","_offset":"-5:00","_rule":"US","format":"E%sT","_until":"1973"},{"name":"America/Indiana/Vevay","_offset":"-5:00","_rule":"-","format":"EST","_until":"2006"},{"name":"America/Indiana/Vevay","_offset":"-5:00","_rule":"US","format":"E%sT","_until":""}],"America/Kentucky/Louisville":[{"name":"America/Kentucky/Louisville","_offset":"-5:43:02","_rule":"-","format":"LMT","_until":"1883 Nov 18 12:16:58"},{"name":"America/Kentucky/Louisville","_offset":"-6:00","_rule":"US","format":"C%sT","_until":"1921"},{"name":"America/Kentucky/Louisville","_offset":"-6:00","_rule":"Louisville","format":"C%sT","_until":"1942"},{"name":"America/Kentucky/Louisville","_offset":"-6:00","_rule":"US","format":"C%sT","_until":"1946"},{"name":"America/Kentucky/Louisville","_offset":"-6:00","_rule":"Louisville","format":"C%sT","_until":"1961 Jul 23 2:00"},{"name":"America/Kentucky/Louisville","_offset":"-5:00","_rule":"-","format":"EST","_until":"1968"},{"name":"America/Kentucky/Louisville","_offset":"-5:00","_rule":"US","format":"E%sT","_until":"1974 Jan 6 2:00"},{"name":"America/Kentucky/Louisville","_offset":"-6:00","_rule":"1:00","format":"CDT","_until":"1974 Oct 27 2:00"},{"name":"America/Kentucky/Louisville","_offset":"-5:00","_rule":"US","format":"E%sT","_until":""}],"America/Kentucky/Monticello":[{"name":"America/Kentucky/Monticello","_offset":"-5:39:24","_rule":"-","format":"LMT","_until":"1883 Nov 18 12:20:36"},{"name":"America/Kentucky/Monticello","_offset":"-6:00","_rule":"US","format":"C%sT","_until":"1946"},{"name":"America/Kentucky/Monticello","_offset":"-6:00","_rule":"-","format":"CST","_until":"1968"},{"name":"America/Kentucky/Monticello","_offset":"-6:00","_rule":"US","format":"C%sT","_until":"2000 Oct 29 2:00"},{"name":"America/Kentucky/Monticello","_offset":"-5:00","_rule":"US","format":"E%sT","_until":""}],"America/Detroit":[{"name":"America/Detroit","_offset":"-5:32:11","_rule":"-","format":"LMT","_until":"1905"},{"name":"America/Detroit","_offset":"-6:00","_rule":"-","format":"CST","_until":"1915 May 15 2:00"},{"name":"America/Detroit","_offset":"-5:00","_rule":"-","format":"EST","_until":"1942"},{"name":"America/Detroit","_offset":"-5:00","_rule":"US","format":"E%sT","_until":"1946"},{"name":"America/Detroit","_offset":"-5:00","_rule":"Detroit","format":"E%sT","_until":"1973"},{"name":"America/Detroit","_offset":"-5:00","_rule":"US","format":"E%sT","_until":"1975"},{"name":"America/Detroit","_offset":"-5:00","_rule":"-","format":"EST","_until":"1975 Apr 27 2:00"},{"name":"America/Detroit","_offset":"-5:00","_rule":"US","format":"E%sT","_until":""}],"America/Menominee":[{"name":"America/Menominee","_offset":"-5:50:27","_rule":"-","format":"LMT","_until":"1885 Sep 18 12:00"},{"name":"America/Menominee","_offset":"-6:00","_rule":"US","format":"C%sT","_until":"1946"},{"name":"America/Menominee","_offset":"-6:00","_rule":"Menominee","format":"C%sT","_until":"1969 Apr 27 2:00"},{"name":"America/Menominee","_offset":"-5:00","_rule":"-","format":"EST","_until":"1973 Apr 29 2:00"},{"name":"America/Menominee","_offset":"-6:00","_rule":"US","format":"C%sT","_until":""}],"America/St_Johns":[{"name":"America/St_Johns","_offset":"-3:30:52","_rule":"-","format":"LMT","_until":"1884"},{"name":"America/St_Johns","_offset":"-3:30:52","_rule":"StJohns","format":"N%sT","_until":"1918"},{"name":"America/St_Johns","_offset":"-3:30:52","_rule":"Canada","format":"N%sT","_until":"1919"},{"name":"America/St_Johns","_offset":"-3:30:52","_rule":"StJohns","format":"N%sT","_until":"1935 Mar 30"},{"name":"America/St_Johns","_offset":"-3:30","_rule":"StJohns","format":"N%sT","_until":"1942 May 11"},{"name":"America/St_Johns","_offset":"-3:30","_rule":"Canada","format":"N%sT","_until":"1946"},{"name":"America/St_Johns","_offset":"-3:30","_rule":"StJohns","format":"N%sT","_until":"2011 Nov"},{"name":"America/St_Johns","_offset":"-3:30","_rule":"Canada","format":"N%sT","_until":""}],"America/Goose_Bay":[{"name":"America/Goose_Bay","_offset":"-4:01:40","_rule":"-","format":"LMT","_until":"1884"},{"name":"America/Goose_Bay","_offset":"-3:30:52","_rule":"-","format":"NST","_until":"1918"},{"name":"America/Goose_Bay","_offset":"-3:30:52","_rule":"Canada","format":"N%sT","_until":"1919"},{"name":"America/Goose_Bay","_offset":"-3:30:52","_rule":"-","format":"NST","_until":"1935 Mar 30"},{"name":"America/Goose_Bay","_offset":"-3:30","_rule":"-","format":"NST","_until":"1936"},{"name":"America/Goose_Bay","_offset":"-3:30","_rule":"StJohns","format":"N%sT","_until":"1942 May 11"},{"name":"America/Goose_Bay","_offset":"-3:30","_rule":"Canada","format":"N%sT","_until":"1946"},{"name":"America/Goose_Bay","_offset":"-3:30","_rule":"StJohns","format":"N%sT","_until":"1966 Mar 15 2:00"},{"name":"America/Goose_Bay","_offset":"-4:00","_rule":"StJohns","format":"A%sT","_until":"2011 Nov"},{"name":"America/Goose_Bay","_offset":"-4:00","_rule":"Canada","format":"A%sT","_until":""}],"America/Halifax":[{"name":"America/Halifax","_offset":"-4:14:24","_rule":"-","format":"LMT","_until":"1902 Jun 15"},{"name":"America/Halifax","_offset":"-4:00","_rule":"Halifax","format":"A%sT","_until":"1918"},{"name":"America/Halifax","_offset":"-4:00","_rule":"Canada","format":"A%sT","_until":"1919"},{"name":"America/Halifax","_offset":"-4:00","_rule":"Halifax","format":"A%sT","_until":"1942 Feb 9 2:00s"},{"name":"America/Halifax","_offset":"-4:00","_rule":"Canada","format":"A%sT","_until":"1946"},{"name":"America/Halifax","_offset":"-4:00","_rule":"Halifax","format":"A%sT","_until":"1974"},{"name":"America/Halifax","_offset":"-4:00","_rule":"Canada","format":"A%sT","_until":""}],"America/Glace_Bay":[{"name":"America/Glace_Bay","_offset":"-3:59:48","_rule":"-","format":"LMT","_until":"1902 Jun 15"},{"name":"America/Glace_Bay","_offset":"-4:00","_rule":"Canada","format":"A%sT","_until":"1953"},{"name":"America/Glace_Bay","_offset":"-4:00","_rule":"Halifax","format":"A%sT","_until":"1954"},{"name":"America/Glace_Bay","_offset":"-4:00","_rule":"-","format":"AST","_until":"1972"},{"name":"America/Glace_Bay","_offset":"-4:00","_rule":"Halifax","format":"A%sT","_until":"1974"},{"name":"America/Glace_Bay","_offset":"-4:00","_rule":"Canada","format":"A%sT","_until":""}],"America/Moncton":[{"name":"America/Moncton","_offset":"-4:19:08","_rule":"-","format":"LMT","_until":"1883 Dec 9"},{"name":"America/Moncton","_offset":"-5:00","_rule":"-","format":"EST","_until":"1902 Jun 15"},{"name":"America/Moncton","_offset":"-4:00","_rule":"Canada","format":"A%sT","_until":"1933"},{"name":"America/Moncton","_offset":"-4:00","_rule":"Moncton","format":"A%sT","_until":"1942"},{"name":"America/Moncton","_offset":"-4:00","_rule":"Canada","format":"A%sT","_until":"1946"},{"name":"America/Moncton","_offset":"-4:00","_rule":"Moncton","format":"A%sT","_until":"1973"},{"name":"America/Moncton","_offset":"-4:00","_rule":"Canada","format":"A%sT","_until":"1993"},{"name":"America/Moncton","_offset":"-4:00","_rule":"Moncton","format":"A%sT","_until":"2007"},{"name":"America/Moncton","_offset":"-4:00","_rule":"Canada","format":"A%sT","_until":""}],"America/Blanc-Sablon":[{"name":"America/Blanc-Sablon","_offset":"-3:48:28","_rule":"-","format":"LMT","_until":"1884"},{"name":"America/Blanc-Sablon","_offset":"-4:00","_rule":"Canada","format":"A%sT","_until":"1970"},{"name":"America/Blanc-Sablon","_offset":"-4:00","_rule":"-","format":"AST","_until":""}],"America/Montreal":[{"name":"America/Montreal","_offset":"-4:54:16","_rule":"-","format":"LMT","_until":"1884"},{"name":"America/Montreal","_offset":"-5:00","_rule":"Mont","format":"E%sT","_until":"1918"},{"name":"America/Montreal","_offset":"-5:00","_rule":"Canada","format":"E%sT","_until":"1919"},{"name":"America/Montreal","_offset":"-5:00","_rule":"Mont","format":"E%sT","_until":"1942 Feb 9 2:00s"},{"name":"America/Montreal","_offset":"-5:00","_rule":"Canada","format":"E%sT","_until":"1946"},{"name":"America/Montreal","_offset":"-5:00","_rule":"Mont","format":"E%sT","_until":"1974"},{"name":"America/Montreal","_offset":"-5:00","_rule":"Canada","format":"E%sT","_until":""}],"America/Toronto":[{"name":"America/Toronto","_offset":"-5:17:32","_rule":"-","format":"LMT","_until":"1895"},{"name":"America/Toronto","_offset":"-5:00","_rule":"Canada","format":"E%sT","_until":"1919"},{"name":"America/Toronto","_offset":"-5:00","_rule":"Toronto","format":"E%sT","_until":"1942 Feb 9 2:00s"},{"name":"America/Toronto","_offset":"-5:00","_rule":"Canada","format":"E%sT","_until":"1946"},{"name":"America/Toronto","_offset":"-5:00","_rule":"Toronto","format":"E%sT","_until":"1974"},{"name":"America/Toronto","_offset":"-5:00","_rule":"Canada","format":"E%sT","_until":""}],"America/Thunder_Bay":[{"name":"America/Thunder_Bay","_offset":"-5:57:00","_rule":"-","format":"LMT","_until":"1895"},{"name":"America/Thunder_Bay","_offset":"-6:00","_rule":"-","format":"CST","_until":"1910"},{"name":"America/Thunder_Bay","_offset":"-5:00","_rule":"-","format":"EST","_until":"1942"},{"name":"America/Thunder_Bay","_offset":"-5:00","_rule":"Canada","format":"E%sT","_until":"1970"},{"name":"America/Thunder_Bay","_offset":"-5:00","_rule":"Mont","format":"E%sT","_until":"1973"},{"name":"America/Thunder_Bay","_offset":"-5:00","_rule":"-","format":"EST","_until":"1974"},{"name":"America/Thunder_Bay","_offset":"-5:00","_rule":"Canada","format":"E%sT","_until":""}],"America/Nipigon":[{"name":"America/Nipigon","_offset":"-5:53:04","_rule":"-","format":"LMT","_until":"1895"},{"name":"America/Nipigon","_offset":"-5:00","_rule":"Canada","format":"E%sT","_until":"1940 Sep 29"},{"name":"America/Nipigon","_offset":"-5:00","_rule":"1:00","format":"EDT","_until":"1942 Feb 9 2:00s"},{"name":"America/Nipigon","_offset":"-5:00","_rule":"Canada","format":"E%sT","_until":""}],"America/Rainy_River":[{"name":"America/Rainy_River","_offset":"-6:18:16","_rule":"-","format":"LMT","_until":"1895"},{"name":"America/Rainy_River","_offset":"-6:00","_rule":"Canada","format":"C%sT","_until":"1940 Sep 29"},{"name":"America/Rainy_River","_offset":"-6:00","_rule":"1:00","format":"CDT","_until":"1942 Feb 9 2:00s"},{"name":"America/Rainy_River","_offset":"-6:00","_rule":"Canada","format":"C%sT","_until":""}],"America/Atikokan":[{"name":"America/Atikokan","_offset":"-6:06:28","_rule":"-","format":"LMT","_until":"1895"},{"name":"America/Atikokan","_offset":"-6:00","_rule":"Canada","format":"C%sT","_until":"1940 Sep 29"},{"name":"America/Atikokan","_offset":"-6:00","_rule":"1:00","format":"CDT","_until":"1942 Feb 9 2:00s"},{"name":"America/Atikokan","_offset":"-6:00","_rule":"Canada","format":"C%sT","_until":"1945 Sep 30 2:00"},{"name":"America/Atikokan","_offset":"-5:00","_rule":"-","format":"EST","_until":""}],"America/Winnipeg":[{"name":"America/Winnipeg","_offset":"-6:28:36","_rule":"-","format":"LMT","_until":"1887 Jul 16"},{"name":"America/Winnipeg","_offset":"-6:00","_rule":"Winn","format":"C%sT","_until":"2006"},{"name":"America/Winnipeg","_offset":"-6:00","_rule":"Canada","format":"C%sT","_until":""}],"America/Regina":[{"name":"America/Regina","_offset":"-6:58:36","_rule":"-","format":"LMT","_until":"1905 Sep"},{"name":"America/Regina","_offset":"-7:00","_rule":"Regina","format":"M%sT","_until":"1960 Apr lastSun 2:00"},{"name":"America/Regina","_offset":"-6:00","_rule":"-","format":"CST","_until":""}],"America/Swift_Current":[{"name":"America/Swift_Current","_offset":"-7:11:20","_rule":"-","format":"LMT","_until":"1905 Sep"},{"name":"America/Swift_Current","_offset":"-7:00","_rule":"Canada","format":"M%sT","_until":"1946 Apr lastSun 2:00"},{"name":"America/Swift_Current","_offset":"-7:00","_rule":"Regina","format":"M%sT","_until":"1950"},{"name":"America/Swift_Current","_offset":"-7:00","_rule":"Swift","format":"M%sT","_until":"1972 Apr lastSun 2:00"},{"name":"America/Swift_Current","_offset":"-6:00","_rule":"-","format":"CST","_until":""}],"America/Edmonton":[{"name":"America/Edmonton","_offset":"-7:33:52","_rule":"-","format":"LMT","_until":"1906 Sep"},{"name":"America/Edmonton","_offset":"-7:00","_rule":"Edm","format":"M%sT","_until":"1987"},{"name":"America/Edmonton","_offset":"-7:00","_rule":"Canada","format":"M%sT","_until":""}],"America/Vancouver":[{"name":"America/Vancouver","_offset":"-8:12:28","_rule":"-","format":"LMT","_until":"1884"},{"name":"America/Vancouver","_offset":"-8:00","_rule":"Vanc","format":"P%sT","_until":"1987"},{"name":"America/Vancouver","_offset":"-8:00","_rule":"Canada","format":"P%sT","_until":""}],"America/Dawson_Creek":[{"name":"America/Dawson_Creek","_offset":"-8:00:56","_rule":"-","format":"LMT","_until":"1884"},{"name":"America/Dawson_Creek","_offset":"-8:00","_rule":"Canada","format":"P%sT","_until":"1947"},{"name":"America/Dawson_Creek","_offset":"-8:00","_rule":"Vanc","format":"P%sT","_until":"1972 Aug 30 2:00"},{"name":"America/Dawson_Creek","_offset":"-7:00","_rule":"-","format":"MST","_until":""}],"America/Creston":[{"name":"America/Creston","_offset":"-7:46:04","_rule":"-","format":"LMT","_until":"1884"},{"name":"America/Creston","_offset":"-7:00","_rule":"-","format":"MST","_until":"1916 Oct 1"},{"name":"America/Creston","_offset":"-8:00","_rule":"-","format":"PST","_until":"1918 Jun 2"},{"name":"America/Creston","_offset":"-7:00","_rule":"-","format":"MST","_until":""}],"America/Pangnirtung":[{"name":"America/Pangnirtung","_offset":"0","_rule":"-","format":"zzz","_until":"1921"},{"name":"America/Pangnirtung","_offset":"-4:00","_rule":"NT_YK","format":"A%sT","_until":"1995 Apr Sun>=1 2:00"},{"name":"America/Pangnirtung","_offset":"-5:00","_rule":"Canada","format":"E%sT","_until":"1999 Oct 31 2:00"},{"name":"America/Pangnirtung","_offset":"-6:00","_rule":"Canada","format":"C%sT","_until":"2000 Oct 29 2:00"},{"name":"America/Pangnirtung","_offset":"-5:00","_rule":"Canada","format":"E%sT","_until":""}],"America/Iqaluit":[{"name":"America/Iqaluit","_offset":"0","_rule":"-","format":"zzz","_until":"1942 Aug"},{"name":"America/Iqaluit","_offset":"-5:00","_rule":"NT_YK","format":"E%sT","_until":"1999 Oct 31 2:00"},{"name":"America/Iqaluit","_offset":"-6:00","_rule":"Canada","format":"C%sT","_until":"2000 Oct 29 2:00"},{"name":"America/Iqaluit","_offset":"-5:00","_rule":"Canada","format":"E%sT","_until":""}],"America/Resolute":[{"name":"America/Resolute","_offset":"0","_rule":"-","format":"zzz","_until":"1947 Aug 31"},{"name":"America/Resolute","_offset":"-6:00","_rule":"NT_YK","format":"C%sT","_until":"2000 Oct 29 2:00"},{"name":"America/Resolute","_offset":"-5:00","_rule":"-","format":"EST","_until":"2001 Apr 1 3:00"},{"name":"America/Resolute","_offset":"-6:00","_rule":"Canada","format":"C%sT","_until":"2006 Oct 29 2:00"},{"name":"America/Resolute","_offset":"-5:00","_rule":"-","format":"EST","_until":"2007 Mar 11 3:00"},{"name":"America/Resolute","_offset":"-6:00","_rule":"Canada","format":"C%sT","_until":""}],"America/Rankin_Inlet":[{"name":"America/Rankin_Inlet","_offset":"0","_rule":"-","format":"zzz","_until":"1957"},{"name":"America/Rankin_Inlet","_offset":"-6:00","_rule":"NT_YK","format":"C%sT","_until":"2000 Oct 29 2:00"},{"name":"America/Rankin_Inlet","_offset":"-5:00","_rule":"-","format":"EST","_until":"2001 Apr 1 3:00"},{"name":"America/Rankin_Inlet","_offset":"-6:00","_rule":"Canada","format":"C%sT","_until":""}],"America/Cambridge_Bay":[{"name":"America/Cambridge_Bay","_offset":"0","_rule":"-","format":"zzz","_until":"1920"},{"name":"America/Cambridge_Bay","_offset":"-7:00","_rule":"NT_YK","format":"M%sT","_until":"1999 Oct 31 2:00"},{"name":"America/Cambridge_Bay","_offset":"-6:00","_rule":"Canada","format":"C%sT","_until":"2000 Oct 29 2:00"},{"name":"America/Cambridge_Bay","_offset":"-5:00","_rule":"-","format":"EST","_until":"2000 Nov 5 0:00"},{"name":"America/Cambridge_Bay","_offset":"-6:00","_rule":"-","format":"CST","_until":"2001 Apr 1 3:00"},{"name":"America/Cambridge_Bay","_offset":"-7:00","_rule":"Canada","format":"M%sT","_until":""}],"America/Yellowknife":[{"name":"America/Yellowknife","_offset":"0","_rule":"-","format":"zzz","_until":"1935"},{"name":"America/Yellowknife","_offset":"-7:00","_rule":"NT_YK","format":"M%sT","_until":"1980"},{"name":"America/Yellowknife","_offset":"-7:00","_rule":"Canada","format":"M%sT","_until":""}],"America/Inuvik":[{"name":"America/Inuvik","_offset":"0","_rule":"-","format":"zzz","_until":"1953"},{"name":"America/Inuvik","_offset":"-8:00","_rule":"NT_YK","format":"P%sT","_until":"1979 Apr lastSun 2:00"},{"name":"America/Inuvik","_offset":"-7:00","_rule":"NT_YK","format":"M%sT","_until":"1980"},{"name":"America/Inuvik","_offset":"-7:00","_rule":"Canada","format":"M%sT","_until":""}],"America/Whitehorse":[{"name":"America/Whitehorse","_offset":"-9:00:12","_rule":"-","format":"LMT","_until":"1900 Aug 20"},{"name":"America/Whitehorse","_offset":"-9:00","_rule":"NT_YK","format":"Y%sT","_until":"1966 Jul 1 2:00"},{"name":"America/Whitehorse","_offset":"-8:00","_rule":"NT_YK","format":"P%sT","_until":"1980"},{"name":"America/Whitehorse","_offset":"-8:00","_rule":"Canada","format":"P%sT","_until":""}],"America/Dawson":[{"name":"America/Dawson","_offset":"-9:17:40","_rule":"-","format":"LMT","_until":"1900 Aug 20"},{"name":"America/Dawson","_offset":"-9:00","_rule":"NT_YK","format":"Y%sT","_until":"1973 Oct 28 0:00"},{"name":"America/Dawson","_offset":"-8:00","_rule":"NT_YK","format":"P%sT","_until":"1980"},{"name":"America/Dawson","_offset":"-8:00","_rule":"Canada","format":"P%sT","_until":""}],"America/Cancun":[{"name":"America/Cancun","_offset":"-5:47:04","_rule":"-","format":"LMT","_until":"1922 Jan 1 0:12:56"},{"name":"America/Cancun","_offset":"-6:00","_rule":"-","format":"CST","_until":"1981 Dec 23"},{"name":"America/Cancun","_offset":"-5:00","_rule":"Mexico","format":"E%sT","_until":"1998 Aug 2 2:00"},{"name":"America/Cancun","_offset":"-6:00","_rule":"Mexico","format":"C%sT","_until":""}],"America/Merida":[{"name":"America/Merida","_offset":"-5:58:28","_rule":"-","format":"LMT","_until":"1922 Jan 1 0:01:32"},{"name":"America/Merida","_offset":"-6:00","_rule":"-","format":"CST","_until":"1981 Dec 23"},{"name":"America/Merida","_offset":"-5:00","_rule":"-","format":"EST","_until":"1982 Dec 2"},{"name":"America/Merida","_offset":"-6:00","_rule":"Mexico","format":"C%sT","_until":""}],"America/Matamoros":[{"name":"America/Matamoros","_offset":"-6:40:00","_rule":"-","format":"LMT","_until":"1921 Dec 31 23:20:00"},{"name":"America/Matamoros","_offset":"-6:00","_rule":"-","format":"CST","_until":"1988"},{"name":"America/Matamoros","_offset":"-6:00","_rule":"US","format":"C%sT","_until":"1989"},{"name":"America/Matamoros","_offset":"-6:00","_rule":"Mexico","format":"C%sT","_until":"2010"},{"name":"America/Matamoros","_offset":"-6:00","_rule":"US","format":"C%sT","_until":""}],"America/Monterrey":[{"name":"America/Monterrey","_offset":"-6:41:16","_rule":"-","format":"LMT","_until":"1921 Dec 31 23:18:44"},{"name":"America/Monterrey","_offset":"-6:00","_rule":"-","format":"CST","_until":"1988"},{"name":"America/Monterrey","_offset":"-6:00","_rule":"US","format":"C%sT","_until":"1989"},{"name":"America/Monterrey","_offset":"-6:00","_rule":"Mexico","format":"C%sT","_until":""}],"America/Mexico_City":[{"name":"America/Mexico_City","_offset":"-6:36:36","_rule":"-","format":"LMT","_until":"1922 Jan 1 0:23:24"},{"name":"America/Mexico_City","_offset":"-7:00","_rule":"-","format":"MST","_until":"1927 Jun 10 23:00"},{"name":"America/Mexico_City","_offset":"-6:00","_rule":"-","format":"CST","_until":"1930 Nov 15"},{"name":"America/Mexico_City","_offset":"-7:00","_rule":"-","format":"MST","_until":"1931 May 1 23:00"},{"name":"America/Mexico_City","_offset":"-6:00","_rule":"-","format":"CST","_until":"1931 Oct"},{"name":"America/Mexico_City","_offset":"-7:00","_rule":"-","format":"MST","_until":"1932 Apr 1"},{"name":"America/Mexico_City","_offset":"-6:00","_rule":"Mexico","format":"C%sT","_until":"2001 Sep 30 02:00"},{"name":"America/Mexico_City","_offset":"-6:00","_rule":"-","format":"CST","_until":"2002 Feb 20"},{"name":"America/Mexico_City","_offset":"-6:00","_rule":"Mexico","format":"C%sT","_until":""}],"America/Ojinaga":[{"name":"America/Ojinaga","_offset":"-6:57:40","_rule":"-","format":"LMT","_until":"1922 Jan 1 0:02:20"},{"name":"America/Ojinaga","_offset":"-7:00","_rule":"-","format":"MST","_until":"1927 Jun 10 23:00"},{"name":"America/Ojinaga","_offset":"-6:00","_rule":"-","format":"CST","_until":"1930 Nov 15"},{"name":"America/Ojinaga","_offset":"-7:00","_rule":"-","format":"MST","_until":"1931 May 1 23:00"},{"name":"America/Ojinaga","_offset":"-6:00","_rule":"-","format":"CST","_until":"1931 Oct"},{"name":"America/Ojinaga","_offset":"-7:00","_rule":"-","format":"MST","_until":"1932 Apr 1"},{"name":"America/Ojinaga","_offset":"-6:00","_rule":"-","format":"CST","_until":"1996"},{"name":"America/Ojinaga","_offset":"-6:00","_rule":"Mexico","format":"C%sT","_until":"1998"},{"name":"America/Ojinaga","_offset":"-6:00","_rule":"-","format":"CST","_until":"1998 Apr Sun>=1 3:00"},{"name":"America/Ojinaga","_offset":"-7:00","_rule":"Mexico","format":"M%sT","_until":"2010"},{"name":"America/Ojinaga","_offset":"-7:00","_rule":"US","format":"M%sT","_until":""}],"America/Chihuahua":[{"name":"America/Chihuahua","_offset":"-7:04:20","_rule":"-","format":"LMT","_until":"1921 Dec 31 23:55:40"},{"name":"America/Chihuahua","_offset":"-7:00","_rule":"-","format":"MST","_until":"1927 Jun 10 23:00"},{"name":"America/Chihuahua","_offset":"-6:00","_rule":"-","format":"CST","_until":"1930 Nov 15"},{"name":"America/Chihuahua","_offset":"-7:00","_rule":"-","format":"MST","_until":"1931 May 1 23:00"},{"name":"America/Chihuahua","_offset":"-6:00","_rule":"-","format":"CST","_until":"1931 Oct"},{"name":"America/Chihuahua","_offset":"-7:00","_rule":"-","format":"MST","_until":"1932 Apr 1"},{"name":"America/Chihuahua","_offset":"-6:00","_rule":"-","format":"CST","_until":"1996"},{"name":"America/Chihuahua","_offset":"-6:00","_rule":"Mexico","format":"C%sT","_until":"1998"},{"name":"America/Chihuahua","_offset":"-6:00","_rule":"-","format":"CST","_until":"1998 Apr Sun>=1 3:00"},{"name":"America/Chihuahua","_offset":"-7:00","_rule":"Mexico","format":"M%sT","_until":""}],"America/Hermosillo":[{"name":"America/Hermosillo","_offset":"-7:23:52","_rule":"-","format":"LMT","_until":"1921 Dec 31 23:36:08"},{"name":"America/Hermosillo","_offset":"-7:00","_rule":"-","format":"MST","_until":"1927 Jun 10 23:00"},{"name":"America/Hermosillo","_offset":"-6:00","_rule":"-","format":"CST","_until":"1930 Nov 15"},{"name":"America/Hermosillo","_offset":"-7:00","_rule":"-","format":"MST","_until":"1931 May 1 23:00"},{"name":"America/Hermosillo","_offset":"-6:00","_rule":"-","format":"CST","_until":"1931 Oct"},{"name":"America/Hermosillo","_offset":"-7:00","_rule":"-","format":"MST","_until":"1932 Apr 1"},{"name":"America/Hermosillo","_offset":"-6:00","_rule":"-","format":"CST","_until":"1942 Apr 24"},{"name":"America/Hermosillo","_offset":"-7:00","_rule":"-","format":"MST","_until":"1949 Jan 14"},{"name":"America/Hermosillo","_offset":"-8:00","_rule":"-","format":"PST","_until":"1970"},{"name":"America/Hermosillo","_offset":"-7:00","_rule":"Mexico","format":"M%sT","_until":"1999"},{"name":"America/Hermosillo","_offset":"-7:00","_rule":"-","format":"MST","_until":""}],"America/Mazatlan":[{"name":"America/Mazatlan","_offset":"-7:05:40","_rule":"-","format":"LMT","_until":"1921 Dec 31 23:54:20"},{"name":"America/Mazatlan","_offset":"-7:00","_rule":"-","format":"MST","_until":"1927 Jun 10 23:00"},{"name":"America/Mazatlan","_offset":"-6:00","_rule":"-","format":"CST","_until":"1930 Nov 15"},{"name":"America/Mazatlan","_offset":"-7:00","_rule":"-","format":"MST","_until":"1931 May 1 23:00"},{"name":"America/Mazatlan","_offset":"-6:00","_rule":"-","format":"CST","_until":"1931 Oct"},{"name":"America/Mazatlan","_offset":"-7:00","_rule":"-","format":"MST","_until":"1932 Apr 1"},{"name":"America/Mazatlan","_offset":"-6:00","_rule":"-","format":"CST","_until":"1942 Apr 24"},{"name":"America/Mazatlan","_offset":"-7:00","_rule":"-","format":"MST","_until":"1949 Jan 14"},{"name":"America/Mazatlan","_offset":"-8:00","_rule":"-","format":"PST","_until":"1970"},{"name":"America/Mazatlan","_offset":"-7:00","_rule":"Mexico","format":"M%sT","_until":""}],"America/Bahia_Banderas":[{"name":"America/Bahia_Banderas","_offset":"-7:01:00","_rule":"-","format":"LMT","_until":"1921 Dec 31 23:59:00"},{"name":"America/Bahia_Banderas","_offset":"-7:00","_rule":"-","format":"MST","_until":"1927 Jun 10 23:00"},{"name":"America/Bahia_Banderas","_offset":"-6:00","_rule":"-","format":"CST","_until":"1930 Nov 15"},{"name":"America/Bahia_Banderas","_offset":"-7:00","_rule":"-","format":"MST","_until":"1931 May 1 23:00"},{"name":"America/Bahia_Banderas","_offset":"-6:00","_rule":"-","format":"CST","_until":"1931 Oct"},{"name":"America/Bahia_Banderas","_offset":"-7:00","_rule":"-","format":"MST","_until":"1932 Apr 1"},{"name":"America/Bahia_Banderas","_offset":"-6:00","_rule":"-","format":"CST","_until":"1942 Apr 24"},{"name":"America/Bahia_Banderas","_offset":"-7:00","_rule":"-","format":"MST","_until":"1949 Jan 14"},{"name":"America/Bahia_Banderas","_offset":"-8:00","_rule":"-","format":"PST","_until":"1970"},{"name":"America/Bahia_Banderas","_offset":"-7:00","_rule":"Mexico","format":"M%sT","_until":"2010 Apr 4 2:00"},{"name":"America/Bahia_Banderas","_offset":"-6:00","_rule":"Mexico","format":"C%sT","_until":""}],"America/Tijuana":[{"name":"America/Tijuana","_offset":"-7:48:04","_rule":"-","format":"LMT","_until":"1922 Jan 1 0:11:56"},{"name":"America/Tijuana","_offset":"-7:00","_rule":"-","format":"MST","_until":"1924"},{"name":"America/Tijuana","_offset":"-8:00","_rule":"-","format":"PST","_until":"1927 Jun 10 23:00"},{"name":"America/Tijuana","_offset":"-7:00","_rule":"-","format":"MST","_until":"1930 Nov 15"},{"name":"America/Tijuana","_offset":"-8:00","_rule":"-","format":"PST","_until":"1931 Apr 1"},{"name":"America/Tijuana","_offset":"-8:00","_rule":"1:00","format":"PDT","_until":"1931 Sep 30"},{"name":"America/Tijuana","_offset":"-8:00","_rule":"-","format":"PST","_until":"1942 Apr 24"},{"name":"America/Tijuana","_offset":"-8:00","_rule":"1:00","format":"PWT","_until":"1945 Aug 14 23:00u"},{"name":"America/Tijuana","_offset":"-8:00","_rule":"1:00","format":"PPT","_until":"1945 Nov 12"},{"name":"America/Tijuana","_offset":"-8:00","_rule":"-","format":"PST","_until":"1948 Apr 5"},{"name":"America/Tijuana","_offset":"-8:00","_rule":"1:00","format":"PDT","_until":"1949 Jan 14"},{"name":"America/Tijuana","_offset":"-8:00","_rule":"-","format":"PST","_until":"1954"},{"name":"America/Tijuana","_offset":"-8:00","_rule":"CA","format":"P%sT","_until":"1961"},{"name":"America/Tijuana","_offset":"-8:00","_rule":"-","format":"PST","_until":"1976"},{"name":"America/Tijuana","_offset":"-8:00","_rule":"US","format":"P%sT","_until":"1996"},{"name":"America/Tijuana","_offset":"-8:00","_rule":"Mexico","format":"P%sT","_until":"2001"},{"name":"America/Tijuana","_offset":"-8:00","_rule":"US","format":"P%sT","_until":"2002 Feb 20"},{"name":"America/Tijuana","_offset":"-8:00","_rule":"Mexico","format":"P%sT","_until":"2010"},{"name":"America/Tijuana","_offset":"-8:00","_rule":"US","format":"P%sT","_until":""}],"America/Santa_Isabel":[{"name":"America/Santa_Isabel","_offset":"-7:39:28","_rule":"-","format":"LMT","_until":"1922 Jan 1 0:20:32"},{"name":"America/Santa_Isabel","_offset":"-7:00","_rule":"-","format":"MST","_until":"1924"},{"name":"America/Santa_Isabel","_offset":"-8:00","_rule":"-","format":"PST","_until":"1927 Jun 10 23:00"},{"name":"America/Santa_Isabel","_offset":"-7:00","_rule":"-","format":"MST","_until":"1930 Nov 15"},{"name":"America/Santa_Isabel","_offset":"-8:00","_rule":"-","format":"PST","_until":"1931 Apr 1"},{"name":"America/Santa_Isabel","_offset":"-8:00","_rule":"1:00","format":"PDT","_until":"1931 Sep 30"},{"name":"America/Santa_Isabel","_offset":"-8:00","_rule":"-","format":"PST","_until":"1942 Apr 24"},{"name":"America/Santa_Isabel","_offset":"-8:00","_rule":"1:00","format":"PWT","_until":"1945 Aug 14 23:00u"},{"name":"America/Santa_Isabel","_offset":"-8:00","_rule":"1:00","format":"PPT","_until":"1945 Nov 12"},{"name":"America/Santa_Isabel","_offset":"-8:00","_rule":"-","format":"PST","_until":"1948 Apr 5"},{"name":"America/Santa_Isabel","_offset":"-8:00","_rule":"1:00","format":"PDT","_until":"1949 Jan 14"},{"name":"America/Santa_Isabel","_offset":"-8:00","_rule":"-","format":"PST","_until":"1954"},{"name":"America/Santa_Isabel","_offset":"-8:00","_rule":"CA","format":"P%sT","_until":"1961"},{"name":"America/Santa_Isabel","_offset":"-8:00","_rule":"-","format":"PST","_until":"1976"},{"name":"America/Santa_Isabel","_offset":"-8:00","_rule":"US","format":"P%sT","_until":"1996"},{"name":"America/Santa_Isabel","_offset":"-8:00","_rule":"Mexico","format":"P%sT","_until":"2001"},{"name":"America/Santa_Isabel","_offset":"-8:00","_rule":"US","format":"P%sT","_until":"2002 Feb 20"},{"name":"America/Santa_Isabel","_offset":"-8:00","_rule":"Mexico","format":"P%sT","_until":""}],"America/Anguilla":[{"name":"America/Anguilla","_offset":"-4:12:16","_rule":"-","format":"LMT","_until":"1912 Mar 2"},{"name":"America/Anguilla","_offset":"-4:00","_rule":"-","format":"AST","_until":""}],"America/Antigua":[{"name":"America/Antigua","_offset":"-4:07:12","_rule":"-","format":"LMT","_until":"1912 Mar 2"},{"name":"America/Antigua","_offset":"-5:00","_rule":"-","format":"EST","_until":"1951"},{"name":"America/Antigua","_offset":"-4:00","_rule":"-","format":"AST","_until":""}],"America/Nassau":[{"name":"America/Nassau","_offset":"-5:09:30","_rule":"-","format":"LMT","_until":"1912 Mar 2"},{"name":"America/Nassau","_offset":"-5:00","_rule":"Bahamas","format":"E%sT","_until":"1976"},{"name":"America/Nassau","_offset":"-5:00","_rule":"US","format":"E%sT","_until":""}],"America/Barbados":[{"name":"America/Barbados","_offset":"-3:58:29","_rule":"-","format":"LMT","_until":"1924"},{"name":"America/Barbados","_offset":"-3:58:29","_rule":"-","format":"BMT","_until":"1932"},{"name":"America/Barbados","_offset":"-4:00","_rule":"Barb","format":"A%sT","_until":""}],"America/Belize":[{"name":"America/Belize","_offset":"-5:52:48","_rule":"-","format":"LMT","_until":"1912 Apr"},{"name":"America/Belize","_offset":"-6:00","_rule":"Belize","format":"C%sT","_until":""}],"Atlantic/Bermuda":[{"name":"Atlantic/Bermuda","_offset":"-4:19:18","_rule":"-","format":"LMT","_until":"1930 Jan 1 2:00"},{"name":"Atlantic/Bermuda","_offset":"-4:00","_rule":"-","format":"AST","_until":"1974 Apr 28 2:00"},{"name":"Atlantic/Bermuda","_offset":"-4:00","_rule":"Bahamas","format":"A%sT","_until":"1976"},{"name":"Atlantic/Bermuda","_offset":"-4:00","_rule":"US","format":"A%sT","_until":""}],"America/Cayman":[{"name":"America/Cayman","_offset":"-5:25:32","_rule":"-","format":"LMT","_until":"1890"},{"name":"America/Cayman","_offset":"-5:07:12","_rule":"-","format":"KMT","_until":"1912 Feb"},{"name":"America/Cayman","_offset":"-5:00","_rule":"-","format":"EST","_until":""}],"America/Costa_Rica":[{"name":"America/Costa_Rica","_offset":"-5:36:13","_rule":"-","format":"LMT","_until":"1890"},{"name":"America/Costa_Rica","_offset":"-5:36:13","_rule":"-","format":"SJMT","_until":"1921 Jan 15"},{"name":"America/Costa_Rica","_offset":"-6:00","_rule":"CR","format":"C%sT","_until":""}],"America/Havana":[{"name":"America/Havana","_offset":"-5:29:28","_rule":"-","format":"LMT","_until":"1890"},{"name":"America/Havana","_offset":"-5:29:36","_rule":"-","format":"HMT","_until":"1925 Jul 19 12:00"},{"name":"America/Havana","_offset":"-5:00","_rule":"Cuba","format":"C%sT","_until":""}],"America/Dominica":[{"name":"America/Dominica","_offset":"-4:05:36","_rule":"-","format":"LMT","_until":"1911 Jul 1 0:01"},{"name":"America/Dominica","_offset":"-4:00","_rule":"-","format":"AST","_until":""}],"America/Santo_Domingo":[{"name":"America/Santo_Domingo","_offset":"-4:39:36","_rule":"-","format":"LMT","_until":"1890"},{"name":"America/Santo_Domingo","_offset":"-4:40","_rule":"-","format":"SDMT","_until":"1933 Apr 1 12:00"},{"name":"America/Santo_Domingo","_offset":"-5:00","_rule":"DR","format":"E%sT","_until":"1974 Oct 27"},{"name":"America/Santo_Domingo","_offset":"-4:00","_rule":"-","format":"AST","_until":"2000 Oct 29 02:00"},{"name":"America/Santo_Domingo","_offset":"-5:00","_rule":"US","format":"E%sT","_until":"2000 Dec 3 01:00"},{"name":"America/Santo_Domingo","_offset":"-4:00","_rule":"-","format":"AST","_until":""}],"America/El_Salvador":[{"name":"America/El_Salvador","_offset":"-5:56:48","_rule":"-","format":"LMT","_until":"1921"},{"name":"America/El_Salvador","_offset":"-6:00","_rule":"Salv","format":"C%sT","_until":""}],"America/Grenada":[{"name":"America/Grenada","_offset":"-4:07:00","_rule":"-","format":"LMT","_until":"1911 Jul"},{"name":"America/Grenada","_offset":"-4:00","_rule":"-","format":"AST","_until":""}],"America/Guadeloupe":[{"name":"America/Guadeloupe","_offset":"-4:06:08","_rule":"-","format":"LMT","_until":"1911 Jun 8"},{"name":"America/Guadeloupe","_offset":"-4:00","_rule":"-","format":"AST","_until":""}],"America/Guatemala":[{"name":"America/Guatemala","_offset":"-6:02:04","_rule":"-","format":"LMT","_until":"1918 Oct 5"},{"name":"America/Guatemala","_offset":"-6:00","_rule":"Guat","format":"C%sT","_until":""}],"America/Port-au-Prince":[{"name":"America/Port-au-Prince","_offset":"-4:49:20","_rule":"-","format":"LMT","_until":"1890"},{"name":"America/Port-au-Prince","_offset":"-4:49","_rule":"-","format":"PPMT","_until":"1917 Jan 24 12:00"},{"name":"America/Port-au-Prince","_offset":"-5:00","_rule":"Haiti","format":"E%sT","_until":""}],"America/Tegucigalpa":[{"name":"America/Tegucigalpa","_offset":"-5:48:52","_rule":"-","format":"LMT","_until":"1921 Apr"},{"name":"America/Tegucigalpa","_offset":"-6:00","_rule":"Hond","format":"C%sT","_until":""}],"America/Jamaica":[{"name":"America/Jamaica","_offset":"-5:07:12","_rule":"-","format":"LMT","_until":"1890"},{"name":"America/Jamaica","_offset":"-5:07:12","_rule":"-","format":"KMT","_until":"1912 Feb"},{"name":"America/Jamaica","_offset":"-5:00","_rule":"-","format":"EST","_until":"1974 Apr 28 2:00"},{"name":"America/Jamaica","_offset":"-5:00","_rule":"US","format":"E%sT","_until":"1984"},{"name":"America/Jamaica","_offset":"-5:00","_rule":"-","format":"EST","_until":""}],"America/Martinique":[{"name":"America/Martinique","_offset":"-4:04:20","_rule":"-","format":"LMT","_until":"1890"},{"name":"America/Martinique","_offset":"-4:04:20","_rule":"-","format":"FFMT","_until":"1911 May"},{"name":"America/Martinique","_offset":"-4:00","_rule":"-","format":"AST","_until":"1980 Apr 6"},{"name":"America/Martinique","_offset":"-4:00","_rule":"1:00","format":"ADT","_until":"1980 Sep 28"},{"name":"America/Martinique","_offset":"-4:00","_rule":"-","format":"AST","_until":""}],"America/Montserrat":[{"name":"America/Montserrat","_offset":"-4:08:52","_rule":"-","format":"LMT","_until":"1911 Jul 1 0:01"},{"name":"America/Montserrat","_offset":"-4:00","_rule":"-","format":"AST","_until":""}],"America/Managua":[{"name":"America/Managua","_offset":"-5:45:08","_rule":"-","format":"LMT","_until":"1890"},{"name":"America/Managua","_offset":"-5:45:12","_rule":"-","format":"MMT","_until":"1934 Jun 23"},{"name":"America/Managua","_offset":"-6:00","_rule":"-","format":"CST","_until":"1973 May"},{"name":"America/Managua","_offset":"-5:00","_rule":"-","format":"EST","_until":"1975 Feb 16"},{"name":"America/Managua","_offset":"-6:00","_rule":"Nic","format":"C%sT","_until":"1992 Jan 1 4:00"},{"name":"America/Managua","_offset":"-5:00","_rule":"-","format":"EST","_until":"1992 Sep 24"},{"name":"America/Managua","_offset":"-6:00","_rule":"-","format":"CST","_until":"1993"},{"name":"America/Managua","_offset":"-5:00","_rule":"-","format":"EST","_until":"1997"},{"name":"America/Managua","_offset":"-6:00","_rule":"Nic","format":"C%sT","_until":""}],"America/Panama":[{"name":"America/Panama","_offset":"-5:18:08","_rule":"-","format":"LMT","_until":"1890"},{"name":"America/Panama","_offset":"-5:19:36","_rule":"-","format":"CMT","_until":"1908 Apr 22"},{"name":"America/Panama","_offset":"-5:00","_rule":"-","format":"EST","_until":""}],"America/Puerto_Rico":[{"name":"America/Puerto_Rico","_offset":"-4:24:25","_rule":"-","format":"LMT","_until":"1899 Mar 28 12:00"},{"name":"America/Puerto_Rico","_offset":"-4:00","_rule":"-","format":"AST","_until":"1942 May 3"},{"name":"America/Puerto_Rico","_offset":"-4:00","_rule":"US","format":"A%sT","_until":"1946"},{"name":"America/Puerto_Rico","_offset":"-4:00","_rule":"-","format":"AST","_until":""}],"America/St_Kitts":[{"name":"America/St_Kitts","_offset":"-4:10:52","_rule":"-","format":"LMT","_until":"1912 Mar 2"},{"name":"America/St_Kitts","_offset":"-4:00","_rule":"-","format":"AST","_until":""}],"America/St_Lucia":[{"name":"America/St_Lucia","_offset":"-4:04:00","_rule":"-","format":"LMT","_until":"1890"},{"name":"America/St_Lucia","_offset":"-4:04:00","_rule":"-","format":"CMT","_until":"1912"},{"name":"America/St_Lucia","_offset":"-4:00","_rule":"-","format":"AST","_until":""}],"America/Miquelon":[{"name":"America/Miquelon","_offset":"-3:44:40","_rule":"-","format":"LMT","_until":"1911 May 15"},{"name":"America/Miquelon","_offset":"-4:00","_rule":"-","format":"AST","_until":"1980 May"},{"name":"America/Miquelon","_offset":"-3:00","_rule":"-","format":"PMST","_until":"1987"},{"name":"America/Miquelon","_offset":"-3:00","_rule":"Canada","format":"PM%sT","_until":""}],"America/St_Vincent":[{"name":"America/St_Vincent","_offset":"-4:04:56","_rule":"-","format":"LMT","_until":"1890"},{"name":"America/St_Vincent","_offset":"-4:04:56","_rule":"-","format":"KMT","_until":"1912"},{"name":"America/St_Vincent","_offset":"-4:00","_rule":"-","format":"AST","_until":""}],"America/Grand_Turk":[{"name":"America/Grand_Turk","_offset":"-4:44:32","_rule":"-","format":"LMT","_until":"1890"},{"name":"America/Grand_Turk","_offset":"-5:07:12","_rule":"-","format":"KMT","_until":"1912 Feb"},{"name":"America/Grand_Turk","_offset":"-5:00","_rule":"TC","format":"E%sT","_until":""}],"America/Tortola":[{"name":"America/Tortola","_offset":"-4:18:28","_rule":"-","format":"LMT","_until":"1911 Jul"},{"name":"America/Tortola","_offset":"-4:00","_rule":"-","format":"AST","_until":""}],"America/St_Thomas":[{"name":"America/St_Thomas","_offset":"-4:19:44","_rule":"-","format":"LMT","_until":"1911 Jul"},{"name":"America/St_Thomas","_offset":"-4:00","_rule":"-","format":"AST","_until":""}],"Asia/Riyadh87":[{"name":"Asia/Riyadh87","_offset":"3:07:04","_rule":"-","format":"zzz","_until":"1987"},{"name":"Asia/Riyadh87","_offset":"3:07:04","_rule":"sol87","format":"zzz","_until":"1988"},{"name":"Asia/Riyadh87","_offset":"3:07:04","_rule":"-","format":"zzz","_until":""}],"Asia/Riyadh88":[{"name":"Asia/Riyadh88","_offset":"3:07:04","_rule":"-","format":"zzz","_until":"1988"},{"name":"Asia/Riyadh88","_offset":"3:07:04","_rule":"sol88","format":"zzz","_until":"1989"},{"name":"Asia/Riyadh88","_offset":"3:07:04","_rule":"-","format":"zzz","_until":""}],"Asia/Riyadh89":[{"name":"Asia/Riyadh89","_offset":"3:07:04","_rule":"-","format":"zzz","_until":"1989"},{"name":"Asia/Riyadh89","_offset":"3:07:04","_rule":"sol89","format":"zzz","_until":"1990"},{"name":"Asia/Riyadh89","_offset":"3:07:04","_rule":"-","format":"zzz","_until":""}],"America/Argentina/Buenos_Aires":[{"name":"America/Argentina/Buenos_Aires","_offset":"-3:53:48","_rule":"-","format":"LMT","_until":"1894 Oct 31"},{"name":"America/Argentina/Buenos_Aires","_offset":"-4:16:48","_rule":"-","format":"CMT","_until":"1920 May"},{"name":"America/Argentina/Buenos_Aires","_offset":"-4:00","_rule":"-","format":"ART","_until":"1930 Dec"},{"name":"America/Argentina/Buenos_Aires","_offset":"-4:00","_rule":"Arg","format":"AR%sT","_until":"1969 Oct 5"},{"name":"America/Argentina/Buenos_Aires","_offset":"-3:00","_rule":"Arg","format":"AR%sT","_until":"1999 Oct 3"},{"name":"America/Argentina/Buenos_Aires","_offset":"-4:00","_rule":"Arg","format":"AR%sT","_until":"2000 Mar 3"},{"name":"America/Argentina/Buenos_Aires","_offset":"-3:00","_rule":"Arg","format":"AR%sT","_until":""}],"America/Argentina/Cordoba":[{"name":"America/Argentina/Cordoba","_offset":"-4:16:48","_rule":"-","format":"LMT","_until":"1894 Oct 31"},{"name":"America/Argentina/Cordoba","_offset":"-4:16:48","_rule":"-","format":"CMT","_until":"1920 May"},{"name":"America/Argentina/Cordoba","_offset":"-4:00","_rule":"-","format":"ART","_until":"1930 Dec"},{"name":"America/Argentina/Cordoba","_offset":"-4:00","_rule":"Arg","format":"AR%sT","_until":"1969 Oct 5"},{"name":"America/Argentina/Cordoba","_offset":"-3:00","_rule":"Arg","format":"AR%sT","_until":"1991 Mar 3"},{"name":"America/Argentina/Cordoba","_offset":"-4:00","_rule":"-","format":"WART","_until":"1991 Oct 20"},{"name":"America/Argentina/Cordoba","_offset":"-3:00","_rule":"Arg","format":"AR%sT","_until":"1999 Oct 3"},{"name":"America/Argentina/Cordoba","_offset":"-4:00","_rule":"Arg","format":"AR%sT","_until":"2000 Mar 3"},{"name":"America/Argentina/Cordoba","_offset":"-3:00","_rule":"Arg","format":"AR%sT","_until":""}],"America/Argentina/Salta":[{"name":"America/Argentina/Salta","_offset":"-4:21:40","_rule":"-","format":"LMT","_until":"1894 Oct 31"},{"name":"America/Argentina/Salta","_offset":"-4:16:48","_rule":"-","format":"CMT","_until":"1920 May"},{"name":"America/Argentina/Salta","_offset":"-4:00","_rule":"-","format":"ART","_until":"1930 Dec"},{"name":"America/Argentina/Salta","_offset":"-4:00","_rule":"Arg","format":"AR%sT","_until":"1969 Oct 5"},{"name":"America/Argentina/Salta","_offset":"-3:00","_rule":"Arg","format":"AR%sT","_until":"1991 Mar 3"},{"name":"America/Argentina/Salta","_offset":"-4:00","_rule":"-","format":"WART","_until":"1991 Oct 20"},{"name":"America/Argentina/Salta","_offset":"-3:00","_rule":"Arg","format":"AR%sT","_until":"1999 Oct 3"},{"name":"America/Argentina/Salta","_offset":"-4:00","_rule":"Arg","format":"AR%sT","_until":"2000 Mar 3"},{"name":"America/Argentina/Salta","_offset":"-3:00","_rule":"Arg","format":"AR%sT","_until":"2008 Oct 18"},{"name":"America/Argentina/Salta","_offset":"-3:00","_rule":"-","format":"ART","_until":""}],"America/Argentina/Tucuman":[{"name":"America/Argentina/Tucuman","_offset":"-4:20:52","_rule":"-","format":"LMT","_until":"1894 Oct 31"},{"name":"America/Argentina/Tucuman","_offset":"-4:16:48","_rule":"-","format":"CMT","_until":"1920 May"},{"name":"America/Argentina/Tucuman","_offset":"-4:00","_rule":"-","format":"ART","_until":"1930 Dec"},{"name":"America/Argentina/Tucuman","_offset":"-4:00","_rule":"Arg","format":"AR%sT","_until":"1969 Oct 5"},{"name":"America/Argentina/Tucuman","_offset":"-3:00","_rule":"Arg","format":"AR%sT","_until":"1991 Mar 3"},{"name":"America/Argentina/Tucuman","_offset":"-4:00","_rule":"-","format":"WART","_until":"1991 Oct 20"},{"name":"America/Argentina/Tucuman","_offset":"-3:00","_rule":"Arg","format":"AR%sT","_until":"1999 Oct 3"},{"name":"America/Argentina/Tucuman","_offset":"-4:00","_rule":"Arg","format":"AR%sT","_until":"2000 Mar 3"},{"name":"America/Argentina/Tucuman","_offset":"-3:00","_rule":"-","format":"ART","_until":"2004 Jun 1"},{"name":"America/Argentina/Tucuman","_offset":"-4:00","_rule":"-","format":"WART","_until":"2004 Jun 13"},{"name":"America/Argentina/Tucuman","_offset":"-3:00","_rule":"Arg","format":"AR%sT","_until":""}],"America/Argentina/La_Rioja":[{"name":"America/Argentina/La_Rioja","_offset":"-4:27:24","_rule":"-","format":"LMT","_until":"1894 Oct 31"},{"name":"America/Argentina/La_Rioja","_offset":"-4:16:48","_rule":"-","format":"CMT","_until":"1920 May"},{"name":"America/Argentina/La_Rioja","_offset":"-4:00","_rule":"-","format":"ART","_until":"1930 Dec"},{"name":"America/Argentina/La_Rioja","_offset":"-4:00","_rule":"Arg","format":"AR%sT","_until":"1969 Oct 5"},{"name":"America/Argentina/La_Rioja","_offset":"-3:00","_rule":"Arg","format":"AR%sT","_until":"1991 Mar 1"},{"name":"America/Argentina/La_Rioja","_offset":"-4:00","_rule":"-","format":"WART","_until":"1991 May 7"},{"name":"America/Argentina/La_Rioja","_offset":"-3:00","_rule":"Arg","format":"AR%sT","_until":"1999 Oct 3"},{"name":"America/Argentina/La_Rioja","_offset":"-4:00","_rule":"Arg","format":"AR%sT","_until":"2000 Mar 3"},{"name":"America/Argentina/La_Rioja","_offset":"-3:00","_rule":"-","format":"ART","_until":"2004 Jun 1"},{"name":"America/Argentina/La_Rioja","_offset":"-4:00","_rule":"-","format":"WART","_until":"2004 Jun 20"},{"name":"America/Argentina/La_Rioja","_offset":"-3:00","_rule":"Arg","format":"AR%sT","_until":"2008 Oct 18"},{"name":"America/Argentina/La_Rioja","_offset":"-3:00","_rule":"-","format":"ART","_until":""}],"America/Argentina/San_Juan":[{"name":"America/Argentina/San_Juan","_offset":"-4:34:04","_rule":"-","format":"LMT","_until":"1894 Oct 31"},{"name":"America/Argentina/San_Juan","_offset":"-4:16:48","_rule":"-","format":"CMT","_until":"1920 May"},{"name":"America/Argentina/San_Juan","_offset":"-4:00","_rule":"-","format":"ART","_until":"1930 Dec"},{"name":"America/Argentina/San_Juan","_offset":"-4:00","_rule":"Arg","format":"AR%sT","_until":"1969 Oct 5"},{"name":"America/Argentina/San_Juan","_offset":"-3:00","_rule":"Arg","format":"AR%sT","_until":"1991 Mar 1"},{"name":"America/Argentina/San_Juan","_offset":"-4:00","_rule":"-","format":"WART","_until":"1991 May 7"},{"name":"America/Argentina/San_Juan","_offset":"-3:00","_rule":"Arg","format":"AR%sT","_until":"1999 Oct 3"},{"name":"America/Argentina/San_Juan","_offset":"-4:00","_rule":"Arg","format":"AR%sT","_until":"2000 Mar 3"},{"name":"America/Argentina/San_Juan","_offset":"-3:00","_rule":"-","format":"ART","_until":"2004 May 31"},{"name":"America/Argentina/San_Juan","_offset":"-4:00","_rule":"-","format":"WART","_until":"2004 Jul 25"},{"name":"America/Argentina/San_Juan","_offset":"-3:00","_rule":"Arg","format":"AR%sT","_until":"2008 Oct 18"},{"name":"America/Argentina/San_Juan","_offset":"-3:00","_rule":"-","format":"ART","_until":""}],"America/Argentina/Jujuy":[{"name":"America/Argentina/Jujuy","_offset":"-4:21:12","_rule":"-","format":"LMT","_until":"1894 Oct 31"},{"name":"America/Argentina/Jujuy","_offset":"-4:16:48","_rule":"-","format":"CMT","_until":"1920 May"},{"name":"America/Argentina/Jujuy","_offset":"-4:00","_rule":"-","format":"ART","_until":"1930 Dec"},{"name":"America/Argentina/Jujuy","_offset":"-4:00","_rule":"Arg","format":"AR%sT","_until":"1969 Oct 5"},{"name":"America/Argentina/Jujuy","_offset":"-3:00","_rule":"Arg","format":"AR%sT","_until":"1990 Mar 4"},{"name":"America/Argentina/Jujuy","_offset":"-4:00","_rule":"-","format":"WART","_until":"1990 Oct 28"},{"name":"America/Argentina/Jujuy","_offset":"-4:00","_rule":"1:00","format":"WARST","_until":"1991 Mar 17"},{"name":"America/Argentina/Jujuy","_offset":"-4:00","_rule":"-","format":"WART","_until":"1991 Oct 6"},{"name":"America/Argentina/Jujuy","_offset":"-3:00","_rule":"1:00","format":"ARST","_until":"1992"},{"name":"America/Argentina/Jujuy","_offset":"-3:00","_rule":"Arg","format":"AR%sT","_until":"1999 Oct 3"},{"name":"America/Argentina/Jujuy","_offset":"-4:00","_rule":"Arg","format":"AR%sT","_until":"2000 Mar 3"},{"name":"America/Argentina/Jujuy","_offset":"-3:00","_rule":"Arg","format":"AR%sT","_until":"2008 Oct 18"},{"name":"America/Argentina/Jujuy","_offset":"-3:00","_rule":"-","format":"ART","_until":""}],"America/Argentina/Catamarca":[{"name":"America/Argentina/Catamarca","_offset":"-4:23:08","_rule":"-","format":"LMT","_until":"1894 Oct 31"},{"name":"America/Argentina/Catamarca","_offset":"-4:16:48","_rule":"-","format":"CMT","_until":"1920 May"},{"name":"America/Argentina/Catamarca","_offset":"-4:00","_rule":"-","format":"ART","_until":"1930 Dec"},{"name":"America/Argentina/Catamarca","_offset":"-4:00","_rule":"Arg","format":"AR%sT","_until":"1969 Oct 5"},{"name":"America/Argentina/Catamarca","_offset":"-3:00","_rule":"Arg","format":"AR%sT","_until":"1991 Mar 3"},{"name":"America/Argentina/Catamarca","_offset":"-4:00","_rule":"-","format":"WART","_until":"1991 Oct 20"},{"name":"America/Argentina/Catamarca","_offset":"-3:00","_rule":"Arg","format":"AR%sT","_until":"1999 Oct 3"},{"name":"America/Argentina/Catamarca","_offset":"-4:00","_rule":"Arg","format":"AR%sT","_until":"2000 Mar 3"},{"name":"America/Argentina/Catamarca","_offset":"-3:00","_rule":"-","format":"ART","_until":"2004 Jun 1"},{"name":"America/Argentina/Catamarca","_offset":"-4:00","_rule":"-","format":"WART","_until":"2004 Jun 20"},{"name":"America/Argentina/Catamarca","_offset":"-3:00","_rule":"Arg","format":"AR%sT","_until":"2008 Oct 18"},{"name":"America/Argentina/Catamarca","_offset":"-3:00","_rule":"-","format":"ART","_until":""}],"America/Argentina/Mendoza":[{"name":"America/Argentina/Mendoza","_offset":"-4:35:16","_rule":"-","format":"LMT","_until":"1894 Oct 31"},{"name":"America/Argentina/Mendoza","_offset":"-4:16:48","_rule":"-","format":"CMT","_until":"1920 May"},{"name":"America/Argentina/Mendoza","_offset":"-4:00","_rule":"-","format":"ART","_until":"1930 Dec"},{"name":"America/Argentina/Mendoza","_offset":"-4:00","_rule":"Arg","format":"AR%sT","_until":"1969 Oct 5"},{"name":"America/Argentina/Mendoza","_offset":"-3:00","_rule":"Arg","format":"AR%sT","_until":"1990 Mar 4"},{"name":"America/Argentina/Mendoza","_offset":"-4:00","_rule":"-","format":"WART","_until":"1990 Oct 15"},{"name":"America/Argentina/Mendoza","_offset":"-4:00","_rule":"1:00","format":"WARST","_until":"1991 Mar 1"},{"name":"America/Argentina/Mendoza","_offset":"-4:00","_rule":"-","format":"WART","_until":"1991 Oct 15"},{"name":"America/Argentina/Mendoza","_offset":"-4:00","_rule":"1:00","format":"WARST","_until":"1992 Mar 1"},{"name":"America/Argentina/Mendoza","_offset":"-4:00","_rule":"-","format":"WART","_until":"1992 Oct 18"},{"name":"America/Argentina/Mendoza","_offset":"-3:00","_rule":"Arg","format":"AR%sT","_until":"1999 Oct 3"},{"name":"America/Argentina/Mendoza","_offset":"-4:00","_rule":"Arg","format":"AR%sT","_until":"2000 Mar 3"},{"name":"America/Argentina/Mendoza","_offset":"-3:00","_rule":"-","format":"ART","_until":"2004 May 23"},{"name":"America/Argentina/Mendoza","_offset":"-4:00","_rule":"-","format":"WART","_until":"2004 Sep 26"},{"name":"America/Argentina/Mendoza","_offset":"-3:00","_rule":"Arg","format":"AR%sT","_until":"2008 Oct 18"},{"name":"America/Argentina/Mendoza","_offset":"-3:00","_rule":"-","format":"ART","_until":""}],"America/Argentina/San_Luis":[{"name":"America/Argentina/San_Luis","_offset":"-4:25:24","_rule":"-","format":"LMT","_until":"1894 Oct 31"},{"name":"America/Argentina/San_Luis","_offset":"-4:16:48","_rule":"-","format":"CMT","_until":"1920 May"},{"name":"America/Argentina/San_Luis","_offset":"-4:00","_rule":"-","format":"ART","_until":"1930 Dec"},{"name":"America/Argentina/San_Luis","_offset":"-4:00","_rule":"Arg","format":"AR%sT","_until":"1969 Oct 5"},{"name":"America/Argentina/San_Luis","_offset":"-3:00","_rule":"Arg","format":"AR%sT","_until":"1990"},{"name":"America/Argentina/San_Luis","_offset":"-3:00","_rule":"1:00","format":"ARST","_until":"1990 Mar 14"},{"name":"America/Argentina/San_Luis","_offset":"-4:00","_rule":"-","format":"WART","_until":"1990 Oct 15"},{"name":"America/Argentina/San_Luis","_offset":"-4:00","_rule":"1:00","format":"WARST","_until":"1991 Mar 1"},{"name":"America/Argentina/San_Luis","_offset":"-4:00","_rule":"-","format":"WART","_until":"1991 Jun 1"},{"name":"America/Argentina/San_Luis","_offset":"-3:00","_rule":"-","format":"ART","_until":"1999 Oct 3"},{"name":"America/Argentina/San_Luis","_offset":"-4:00","_rule":"1:00","format":"WARST","_until":"2000 Mar 3"},{"name":"America/Argentina/San_Luis","_offset":"-3:00","_rule":"-","format":"ART","_until":"2004 May 31"},{"name":"America/Argentina/San_Luis","_offset":"-4:00","_rule":"-","format":"WART","_until":"2004 Jul 25"},{"name":"America/Argentina/San_Luis","_offset":"-3:00","_rule":"Arg","format":"AR%sT","_until":"2008 Jan 21"},{"name":"America/Argentina/San_Luis","_offset":"-4:00","_rule":"SanLuis","format":"WAR%sT","_until":""}],"America/Argentina/Rio_Gallegos":[{"name":"America/Argentina/Rio_Gallegos","_offset":"-4:36:52","_rule":"-","format":"LMT","_until":"1894 Oct 31"},{"name":"America/Argentina/Rio_Gallegos","_offset":"-4:16:48","_rule":"-","format":"CMT","_until":"1920 May"},{"name":"America/Argentina/Rio_Gallegos","_offset":"-4:00","_rule":"-","format":"ART","_until":"1930 Dec"},{"name":"America/Argentina/Rio_Gallegos","_offset":"-4:00","_rule":"Arg","format":"AR%sT","_until":"1969 Oct 5"},{"name":"America/Argentina/Rio_Gallegos","_offset":"-3:00","_rule":"Arg","format":"AR%sT","_until":"1999 Oct 3"},{"name":"America/Argentina/Rio_Gallegos","_offset":"-4:00","_rule":"Arg","format":"AR%sT","_until":"2000 Mar 3"},{"name":"America/Argentina/Rio_Gallegos","_offset":"-3:00","_rule":"-","format":"ART","_until":"2004 Jun 1"},{"name":"America/Argentina/Rio_Gallegos","_offset":"-4:00","_rule":"-","format":"WART","_until":"2004 Jun 20"},{"name":"America/Argentina/Rio_Gallegos","_offset":"-3:00","_rule":"Arg","format":"AR%sT","_until":"2008 Oct 18"},{"name":"America/Argentina/Rio_Gallegos","_offset":"-3:00","_rule":"-","format":"ART","_until":""}],"America/Argentina/Ushuaia":[{"name":"America/Argentina/Ushuaia","_offset":"-4:33:12","_rule":"-","format":"LMT","_until":"1894 Oct 31"},{"name":"America/Argentina/Ushuaia","_offset":"-4:16:48","_rule":"-","format":"CMT","_until":"1920 May"},{"name":"America/Argentina/Ushuaia","_offset":"-4:00","_rule":"-","format":"ART","_until":"1930 Dec"},{"name":"America/Argentina/Ushuaia","_offset":"-4:00","_rule":"Arg","format":"AR%sT","_until":"1969 Oct 5"},{"name":"America/Argentina/Ushuaia","_offset":"-3:00","_rule":"Arg","format":"AR%sT","_until":"1999 Oct 3"},{"name":"America/Argentina/Ushuaia","_offset":"-4:00","_rule":"Arg","format":"AR%sT","_until":"2000 Mar 3"},{"name":"America/Argentina/Ushuaia","_offset":"-3:00","_rule":"-","format":"ART","_until":"2004 May 30"},{"name":"America/Argentina/Ushuaia","_offset":"-4:00","_rule":"-","format":"WART","_until":"2004 Jun 20"},{"name":"America/Argentina/Ushuaia","_offset":"-3:00","_rule":"Arg","format":"AR%sT","_until":"2008 Oct 18"},{"name":"America/Argentina/Ushuaia","_offset":"-3:00","_rule":"-","format":"ART","_until":""}],"America/Aruba":[{"name":"America/Aruba","_offset":"-4:40:24","_rule":"-","format":"LMT","_until":"1912 Feb 12"},{"name":"America/Aruba","_offset":"-4:30","_rule":"-","format":"ANT","_until":"1965"},{"name":"America/Aruba","_offset":"-4:00","_rule":"-","format":"AST","_until":""}],"America/La_Paz":[{"name":"America/La_Paz","_offset":"-4:32:36","_rule":"-","format":"LMT","_until":"1890"},{"name":"America/La_Paz","_offset":"-4:32:36","_rule":"-","format":"CMT","_until":"1931 Oct 15"},{"name":"America/La_Paz","_offset":"-4:32:36","_rule":"1:00","format":"BOST","_until":"1932 Mar 21"},{"name":"America/La_Paz","_offset":"-4:00","_rule":"-","format":"BOT","_until":""}],"America/Noronha":[{"name":"America/Noronha","_offset":"-2:09:40","_rule":"-","format":"LMT","_until":"1914"},{"name":"America/Noronha","_offset":"-2:00","_rule":"Brazil","format":"FN%sT","_until":"1990 Sep 17"},{"name":"America/Noronha","_offset":"-2:00","_rule":"-","format":"FNT","_until":"1999 Sep 30"},{"name":"America/Noronha","_offset":"-2:00","_rule":"Brazil","format":"FN%sT","_until":"2000 Oct 15"},{"name":"America/Noronha","_offset":"-2:00","_rule":"-","format":"FNT","_until":"2001 Sep 13"},{"name":"America/Noronha","_offset":"-2:00","_rule":"Brazil","format":"FN%sT","_until":"2002 Oct 1"},{"name":"America/Noronha","_offset":"-2:00","_rule":"-","format":"FNT","_until":""}],"America/Belem":[{"name":"America/Belem","_offset":"-3:13:56","_rule":"-","format":"LMT","_until":"1914"},{"name":"America/Belem","_offset":"-3:00","_rule":"Brazil","format":"BR%sT","_until":"1988 Sep 12"},{"name":"America/Belem","_offset":"-3:00","_rule":"-","format":"BRT","_until":""}],"America/Santarem":[{"name":"America/Santarem","_offset":"-3:38:48","_rule":"-","format":"LMT","_until":"1914"},{"name":"America/Santarem","_offset":"-4:00","_rule":"Brazil","format":"AM%sT","_until":"1988 Sep 12"},{"name":"America/Santarem","_offset":"-4:00","_rule":"-","format":"AMT","_until":"2008 Jun 24 00:00"},{"name":"America/Santarem","_offset":"-3:00","_rule":"-","format":"BRT","_until":""}],"America/Fortaleza":[{"name":"America/Fortaleza","_offset":"-2:34:00","_rule":"-","format":"LMT","_until":"1914"},{"name":"America/Fortaleza","_offset":"-3:00","_rule":"Brazil","format":"BR%sT","_until":"1990 Sep 17"},{"name":"America/Fortaleza","_offset":"-3:00","_rule":"-","format":"BRT","_until":"1999 Sep 30"},{"name":"America/Fortaleza","_offset":"-3:00","_rule":"Brazil","format":"BR%sT","_until":"2000 Oct 22"},{"name":"America/Fortaleza","_offset":"-3:00","_rule":"-","format":"BRT","_until":"2001 Sep 13"},{"name":"America/Fortaleza","_offset":"-3:00","_rule":"Brazil","format":"BR%sT","_until":"2002 Oct 1"},{"name":"America/Fortaleza","_offset":"-3:00","_rule":"-","format":"BRT","_until":""}],"America/Recife":[{"name":"America/Recife","_offset":"-2:19:36","_rule":"-","format":"LMT","_until":"1914"},{"name":"America/Recife","_offset":"-3:00","_rule":"Brazil","format":"BR%sT","_until":"1990 Sep 17"},{"name":"America/Recife","_offset":"-3:00","_rule":"-","format":"BRT","_until":"1999 Sep 30"},{"name":"America/Recife","_offset":"-3:00","_rule":"Brazil","format":"BR%sT","_until":"2000 Oct 15"},{"name":"America/Recife","_offset":"-3:00","_rule":"-","format":"BRT","_until":"2001 Sep 13"},{"name":"America/Recife","_offset":"-3:00","_rule":"Brazil","format":"BR%sT","_until":"2002 Oct 1"},{"name":"America/Recife","_offset":"-3:00","_rule":"-","format":"BRT","_until":""}],"America/Araguaina":[{"name":"America/Araguaina","_offset":"-3:12:48","_rule":"-","format":"LMT","_until":"1914"},{"name":"America/Araguaina","_offset":"-3:00","_rule":"Brazil","format":"BR%sT","_until":"1990 Sep 17"},{"name":"America/Araguaina","_offset":"-3:00","_rule":"-","format":"BRT","_until":"1995 Sep 14"},{"name":"America/Araguaina","_offset":"-3:00","_rule":"Brazil","format":"BR%sT","_until":"2003 Sep 24"},{"name":"America/Araguaina","_offset":"-3:00","_rule":"-","format":"BRT","_until":"2012 Oct 21"},{"name":"America/Araguaina","_offset":"-3:00","_rule":"Brazil","format":"BR%sT","_until":""}],"America/Maceio":[{"name":"America/Maceio","_offset":"-2:22:52","_rule":"-","format":"LMT","_until":"1914"},{"name":"America/Maceio","_offset":"-3:00","_rule":"Brazil","format":"BR%sT","_until":"1990 Sep 17"},{"name":"America/Maceio","_offset":"-3:00","_rule":"-","format":"BRT","_until":"1995 Oct 13"},{"name":"America/Maceio","_offset":"-3:00","_rule":"Brazil","format":"BR%sT","_until":"1996 Sep 4"},{"name":"America/Maceio","_offset":"-3:00","_rule":"-","format":"BRT","_until":"1999 Sep 30"},{"name":"America/Maceio","_offset":"-3:00","_rule":"Brazil","format":"BR%sT","_until":"2000 Oct 22"},{"name":"America/Maceio","_offset":"-3:00","_rule":"-","format":"BRT","_until":"2001 Sep 13"},{"name":"America/Maceio","_offset":"-3:00","_rule":"Brazil","format":"BR%sT","_until":"2002 Oct 1"},{"name":"America/Maceio","_offset":"-3:00","_rule":"-","format":"BRT","_until":""}],"America/Bahia":[{"name":"America/Bahia","_offset":"-2:34:04","_rule":"-","format":"LMT","_until":"1914"},{"name":"America/Bahia","_offset":"-3:00","_rule":"Brazil","format":"BR%sT","_until":"2003 Sep 24"},{"name":"America/Bahia","_offset":"-3:00","_rule":"-","format":"BRT","_until":"2011 Oct 16"},{"name":"America/Bahia","_offset":"-3:00","_rule":"Brazil","format":"BR%sT","_until":"2012 Oct 21"},{"name":"America/Bahia","_offset":"-3:00","_rule":"-","format":"BRT","_until":""}],"America/Sao_Paulo":[{"name":"America/Sao_Paulo","_offset":"-3:06:28","_rule":"-","format":"LMT","_until":"1914"},{"name":"America/Sao_Paulo","_offset":"-3:00","_rule":"Brazil","format":"BR%sT","_until":"1963 Oct 23 00:00"},{"name":"America/Sao_Paulo","_offset":"-3:00","_rule":"1:00","format":"BRST","_until":"1964"},{"name":"America/Sao_Paulo","_offset":"-3:00","_rule":"Brazil","format":"BR%sT","_until":""}],"America/Campo_Grande":[{"name":"America/Campo_Grande","_offset":"-3:38:28","_rule":"-","format":"LMT","_until":"1914"},{"name":"America/Campo_Grande","_offset":"-4:00","_rule":"Brazil","format":"AM%sT","_until":""}],"America/Cuiaba":[{"name":"America/Cuiaba","_offset":"-3:44:20","_rule":"-","format":"LMT","_until":"1914"},{"name":"America/Cuiaba","_offset":"-4:00","_rule":"Brazil","format":"AM%sT","_until":"2003 Sep 24"},{"name":"America/Cuiaba","_offset":"-4:00","_rule":"-","format":"AMT","_until":"2004 Oct 1"},{"name":"America/Cuiaba","_offset":"-4:00","_rule":"Brazil","format":"AM%sT","_until":""}],"America/Porto_Velho":[{"name":"America/Porto_Velho","_offset":"-4:15:36","_rule":"-","format":"LMT","_until":"1914"},{"name":"America/Porto_Velho","_offset":"-4:00","_rule":"Brazil","format":"AM%sT","_until":"1988 Sep 12"},{"name":"America/Porto_Velho","_offset":"-4:00","_rule":"-","format":"AMT","_until":""}],"America/Boa_Vista":[{"name":"America/Boa_Vista","_offset":"-4:02:40","_rule":"-","format":"LMT","_until":"1914"},{"name":"America/Boa_Vista","_offset":"-4:00","_rule":"Brazil","format":"AM%sT","_until":"1988 Sep 12"},{"name":"America/Boa_Vista","_offset":"-4:00","_rule":"-","format":"AMT","_until":"1999 Sep 30"},{"name":"America/Boa_Vista","_offset":"-4:00","_rule":"Brazil","format":"AM%sT","_until":"2000 Oct 15"},{"name":"America/Boa_Vista","_offset":"-4:00","_rule":"-","format":"AMT","_until":""}],"America/Manaus":[{"name":"America/Manaus","_offset":"-4:00:04","_rule":"-","format":"LMT","_until":"1914"},{"name":"America/Manaus","_offset":"-4:00","_rule":"Brazil","format":"AM%sT","_until":"1988 Sep 12"},{"name":"America/Manaus","_offset":"-4:00","_rule":"-","format":"AMT","_until":"1993 Sep 28"},{"name":"America/Manaus","_offset":"-4:00","_rule":"Brazil","format":"AM%sT","_until":"1994 Sep 22"},{"name":"America/Manaus","_offset":"-4:00","_rule":"-","format":"AMT","_until":""}],"America/Eirunepe":[{"name":"America/Eirunepe","_offset":"-4:39:28","_rule":"-","format":"LMT","_until":"1914"},{"name":"America/Eirunepe","_offset":"-5:00","_rule":"Brazil","format":"AC%sT","_until":"1988 Sep 12"},{"name":"America/Eirunepe","_offset":"-5:00","_rule":"-","format":"ACT","_until":"1993 Sep 28"},{"name":"America/Eirunepe","_offset":"-5:00","_rule":"Brazil","format":"AC%sT","_until":"1994 Sep 22"},{"name":"America/Eirunepe","_offset":"-5:00","_rule":"-","format":"ACT","_until":"2008 Jun 24 00:00"},{"name":"America/Eirunepe","_offset":"-4:00","_rule":"-","format":"AMT","_until":""}],"America/Rio_Branco":[{"name":"America/Rio_Branco","_offset":"-4:31:12","_rule":"-","format":"LMT","_until":"1914"},{"name":"America/Rio_Branco","_offset":"-5:00","_rule":"Brazil","format":"AC%sT","_until":"1988 Sep 12"},{"name":"America/Rio_Branco","_offset":"-5:00","_rule":"-","format":"ACT","_until":"2008 Jun 24 00:00"},{"name":"America/Rio_Branco","_offset":"-4:00","_rule":"-","format":"AMT","_until":""}],"America/Santiago":[{"name":"America/Santiago","_offset":"-4:42:46","_rule":"-","format":"LMT","_until":"1890"},{"name":"America/Santiago","_offset":"-4:42:46","_rule":"-","format":"SMT","_until":"1910"},{"name":"America/Santiago","_offset":"-5:00","_rule":"-","format":"CLT","_until":"1916 Jul 1"},{"name":"America/Santiago","_offset":"-4:42:46","_rule":"-","format":"SMT","_until":"1918 Sep 1"},{"name":"America/Santiago","_offset":"-4:00","_rule":"-","format":"CLT","_until":"1919 Jul 1"},{"name":"America/Santiago","_offset":"-4:42:46","_rule":"-","format":"SMT","_until":"1927 Sep 1"},{"name":"America/Santiago","_offset":"-5:00","_rule":"Chile","format":"CL%sT","_until":"1947 May 22"},{"name":"America/Santiago","_offset":"-4:00","_rule":"Chile","format":"CL%sT","_until":""}],"Pacific/Easter":[{"name":"Pacific/Easter","_offset":"-7:17:44","_rule":"-","format":"LMT","_until":"1890"},{"name":"Pacific/Easter","_offset":"-7:17:28","_rule":"-","format":"EMT","_until":"1932 Sep"},{"name":"Pacific/Easter","_offset":"-7:00","_rule":"Chile","format":"EAS%sT","_until":"1982 Mar 13 21:00"},{"name":"Pacific/Easter","_offset":"-6:00","_rule":"Chile","format":"EAS%sT","_until":""}],"America/Bogota":[{"name":"America/Bogota","_offset":"-4:56:16","_rule":"-","format":"LMT","_until":"1884 Mar 13"},{"name":"America/Bogota","_offset":"-4:56:16","_rule":"-","format":"BMT","_until":"1914 Nov 23"},{"name":"America/Bogota","_offset":"-5:00","_rule":"CO","format":"CO%sT","_until":""}],"America/Curacao":[{"name":"America/Curacao","_offset":"-4:35:47","_rule":"-","format":"LMT","_until":"1912 Feb 12"},{"name":"America/Curacao","_offset":"-4:30","_rule":"-","format":"ANT","_until":"1965"},{"name":"America/Curacao","_offset":"-4:00","_rule":"-","format":"AST","_until":""}],"America/Guayaquil":[{"name":"America/Guayaquil","_offset":"-5:19:20","_rule":"-","format":"LMT","_until":"1890"},{"name":"America/Guayaquil","_offset":"-5:14:00","_rule":"-","format":"QMT","_until":"1931"},{"name":"America/Guayaquil","_offset":"-5:00","_rule":"-","format":"ECT","_until":""}],"Pacific/Galapagos":[{"name":"Pacific/Galapagos","_offset":"-5:58:24","_rule":"-","format":"LMT","_until":"1931"},{"name":"Pacific/Galapagos","_offset":"-5:00","_rule":"-","format":"ECT","_until":"1986"},{"name":"Pacific/Galapagos","_offset":"-6:00","_rule":"-","format":"GALT","_until":""}],"Atlantic/Stanley":[{"name":"Atlantic/Stanley","_offset":"-3:51:24","_rule":"-","format":"LMT","_until":"1890"},{"name":"Atlantic/Stanley","_offset":"-3:51:24","_rule":"-","format":"SMT","_until":"1912 Mar 12"},{"name":"Atlantic/Stanley","_offset":"-4:00","_rule":"Falk","format":"FK%sT","_until":"1983 May"},{"name":"Atlantic/Stanley","_offset":"-3:00","_rule":"Falk","format":"FK%sT","_until":"1985 Sep 15"},{"name":"Atlantic/Stanley","_offset":"-4:00","_rule":"Falk","format":"FK%sT","_until":"2010 Sep 5 02:00"},{"name":"Atlantic/Stanley","_offset":"-3:00","_rule":"-","format":"FKST","_until":""}],"America/Cayenne":[{"name":"America/Cayenne","_offset":"-3:29:20","_rule":"-","format":"LMT","_until":"1911 Jul"},{"name":"America/Cayenne","_offset":"-4:00","_rule":"-","format":"GFT","_until":"1967 Oct"},{"name":"America/Cayenne","_offset":"-3:00","_rule":"-","format":"GFT","_until":""}],"America/Guyana":[{"name":"America/Guyana","_offset":"-3:52:40","_rule":"-","format":"LMT","_until":"1915 Mar"},{"name":"America/Guyana","_offset":"-3:45","_rule":"-","format":"GBGT","_until":"1966 May 26"},{"name":"America/Guyana","_offset":"-3:45","_rule":"-","format":"GYT","_until":"1975 Jul 31"},{"name":"America/Guyana","_offset":"-3:00","_rule":"-","format":"GYT","_until":"1991"},{"name":"America/Guyana","_offset":"-4:00","_rule":"-","format":"GYT","_until":""}],"America/Asuncion":[{"name":"America/Asuncion","_offset":"-3:50:40","_rule":"-","format":"LMT","_until":"1890"},{"name":"America/Asuncion","_offset":"-3:50:40","_rule":"-","format":"AMT","_until":"1931 Oct 10"},{"name":"America/Asuncion","_offset":"-4:00","_rule":"-","format":"PYT","_until":"1972 Oct"},{"name":"America/Asuncion","_offset":"-3:00","_rule":"-","format":"PYT","_until":"1974 Apr"},{"name":"America/Asuncion","_offset":"-4:00","_rule":"Para","format":"PY%sT","_until":""}],"America/Lima":[{"name":"America/Lima","_offset":"-5:08:12","_rule":"-","format":"LMT","_until":"1890"},{"name":"America/Lima","_offset":"-5:08:36","_rule":"-","format":"LMT","_until":"1908 Jul 28"},{"name":"America/Lima","_offset":"-5:00","_rule":"Peru","format":"PE%sT","_until":""}],"Atlantic/South_Georgia":[{"name":"Atlantic/South_Georgia","_offset":"-2:26:08","_rule":"-","format":"LMT","_until":"1890"},{"name":"Atlantic/South_Georgia","_offset":"-2:00","_rule":"-","format":"GST","_until":""}],"America/Paramaribo":[{"name":"America/Paramaribo","_offset":"-3:40:40","_rule":"-","format":"LMT","_until":"1911"},{"name":"America/Paramaribo","_offset":"-3:40:52","_rule":"-","format":"PMT","_until":"1935"},{"name":"America/Paramaribo","_offset":"-3:40:36","_rule":"-","format":"PMT","_until":"1945 Oct"},{"name":"America/Paramaribo","_offset":"-3:30","_rule":"-","format":"NEGT","_until":"1975 Nov 20"},{"name":"America/Paramaribo","_offset":"-3:30","_rule":"-","format":"SRT","_until":"1984 Oct"},{"name":"America/Paramaribo","_offset":"-3:00","_rule":"-","format":"SRT","_until":""}],"America/Port_of_Spain":[{"name":"America/Port_of_Spain","_offset":"-4:06:04","_rule":"-","format":"LMT","_until":"1912 Mar 2"},{"name":"America/Port_of_Spain","_offset":"-4:00","_rule":"-","format":"AST","_until":""}],"America/Montevideo":[{"name":"America/Montevideo","_offset":"-3:44:44","_rule":"-","format":"LMT","_until":"1898 Jun 28"},{"name":"America/Montevideo","_offset":"-3:44:44","_rule":"-","format":"MMT","_until":"1920 May 1"},{"name":"America/Montevideo","_offset":"-3:30","_rule":"Uruguay","format":"UY%sT","_until":"1942 Dec 14"},{"name":"America/Montevideo","_offset":"-3:00","_rule":"Uruguay","format":"UY%sT","_until":""}],"America/Caracas":[{"name":"America/Caracas","_offset":"-4:27:44","_rule":"-","format":"LMT","_until":"1890"},{"name":"America/Caracas","_offset":"-4:27:40","_rule":"-","format":"CMT","_until":"1912 Feb 12"},{"name":"America/Caracas","_offset":"-4:30","_rule":"-","format":"VET","_until":"1965"},{"name":"America/Caracas","_offset":"-4:00","_rule":"-","format":"VET","_until":"2007 Dec 9 03:00"},{"name":"America/Caracas","_offset":"-4:30","_rule":"-","format":"VET","_until":""}]}
	};

	if (true) {
	  module.exports = tzData;
	}


/***/ },
/* 198 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var Qajax = __webpack_require__(180);
	var plywood_1 = __webpack_require__(199);
	Qajax.defaults.timeout = 0;
	function getSplitsDescription(ex) {
	    var splits = [];
	    ex.forEach(function (ex) {
	        if (ex instanceof plywood_1.ChainExpression) {
	            ex.actions.forEach(function (action) {
	                if (action instanceof plywood_1.SplitAction) {
	                    splits.push(action.firstSplitExpression().toString());
	                }
	            });
	        }
	    });
	    return splits.join(';');
	}
	var reloadRequested = false;
	function reload() {
	    if (reloadRequested)
	        return;
	    reloadRequested = true;
	    window.location.reload(true);
	}
	function parseOrNull(json) {
	    try {
	        return JSON.parse(json);
	    }
	    catch (e) {
	        return null;
	    }
	}
	var Ajax = (function () {
	    function Ajax() {
	    }
	    Ajax.query = function (options) {
	        var data = options.data;
	        if (data) {
	            if (Ajax.version)
	                data.version = Ajax.version;
	            if (Ajax.settingsVersionGetter)
	                data.settingsVersion = Ajax.settingsVersionGetter();
	        }
	        return Qajax({
	            method: options.method,
	            url: options.url,
	            data: data
	        })
	            .timeout(60000)
	            .then(Qajax.filterSuccess)
	            .then(Qajax.toJSON)
	            .then(function (res) {
	            if (res && res.action === 'update' && Ajax.onUpdate)
	                Ajax.onUpdate();
	            return res;
	        })
	            .catch(function (xhr) {
	            if (!xhr)
	                return null;
	            if (xhr instanceof Error) {
	                throw new Error('client timeout');
	            }
	            else {
	                var jsonError = parseOrNull(xhr.responseText);
	                if (jsonError) {
	                    if (jsonError.action === 'reload') {
	                        reload();
	                    }
	                    else if (jsonError.action === 'update' && Ajax.onUpdate) {
	                        Ajax.onUpdate();
	                    }
	                    throw new Error(jsonError.message || jsonError.error);
	                }
	                else {
	                    throw new Error(xhr.responseText || 'connection fail');
	                }
	            }
	        });
	    };
	    Ajax.queryUrlExecutorFactory = function (name, url) {
	        return function (ex, env) {
	            if (env === void 0) { env = {}; }
	            return Ajax.query({
	                method: "POST",
	                url: url + '?by=' + getSplitsDescription(ex),
	                data: {
	                    dataCube: name,
	                    expression: ex.toJS(),
	                    timezone: env ? env.timezone : null
	                }
	            }).then(function (res) { return plywood_1.Dataset.fromJS(res.result); });
	        };
	    };
	    return Ajax;
	}());
	exports.Ajax = Ajax;


/***/ },
/* 199 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Q = __webpack_require__(182);

	var immutableClass = __webpack_require__(193);
	var isInstanceOf = immutableClass.isInstanceOf;
	var generalEqual = immutableClass.generalEqual;
	var isImmutableClass = immutableClass.isImmutableClass;
	var immutableEqual = immutableClass.immutableEqual;
	var immutableArraysEqual = immutableClass.immutableArraysEqual;
	var immutableLookupsEqual = immutableClass.immutableLookupsEqual;

	var Chronoshift = __webpack_require__(191);
	var Timezone = Chronoshift.Timezone;
	var Duration = Chronoshift.Duration;
	var WallTime = Chronoshift.WallTime;
	var isDate = Chronoshift.isDate;
	var parseISODate = Chronoshift.parseISODate;

	var dummyObject = {};

	var version = exports.version = '0.12.3';
	var verboseRequesterFactory = exports.verboseRequesterFactory = function(parameters) {
	    var requester = parameters.requester;
	    var printLine = parameters.printLine || (function (line) {
	        console['log'](line);
	    });
	    var preQuery = parameters.preQuery || (function (query, queryNumber) {
	        printLine("vvvvvvvvvvvvvvvvvvvvvvvvvv");
	        printLine("Sending query " + queryNumber + ":");
	        printLine(JSON.stringify(query, null, 2));
	        printLine("^^^^^^^^^^^^^^^^^^^^^^^^^^");
	    });
	    var onSuccess = parameters.onSuccess || (function (data, time, query, queryNumber) {
	        printLine("vvvvvvvvvvvvvvvvvvvvvvvvvv");
	        printLine("Got result from query " + queryNumber + ": (in " + time + "ms)");
	        printLine(JSON.stringify(data, null, 2));
	        printLine("^^^^^^^^^^^^^^^^^^^^^^^^^^");
	    });
	    var onError = parameters.onError || (function (error, time, query, queryNumber) {
	        printLine("vvvvvvvvvvvvvvvvvvvvvvvvvv");
	        printLine("Got error in query " + queryNumber + ": " + error.message + " (in " + time + "ms)");
	        printLine("^^^^^^^^^^^^^^^^^^^^^^^^^^");
	    });
	    var queryNumber = 0;
	    return function (request) {
	        queryNumber++;
	        var myQueryNumber = queryNumber;
	        preQuery(request.query, myQueryNumber);
	        var startTime = Date.now();
	        return requester(request)
	            .then(function (data) {
	            onSuccess(data, Date.now() - startTime, request.query, myQueryNumber);
	            return data;
	        }, function (error) {
	            onError(error, Date.now() - startTime, request.query, myQueryNumber);
	            throw error;
	        });
	    };
	}

	var retryRequesterFactory = exports.retryRequesterFactory = function(parameters) {
	    var requester = parameters.requester;
	    var delay = parameters.delay || 500;
	    var retry = parameters.retry || 3;
	    var retryOnTimeout = Boolean(parameters.retryOnTimeout);
	    if (typeof delay !== "number")
	        throw new TypeError("delay should be a number");
	    if (typeof retry !== "number")
	        throw new TypeError("retry should be a number");
	    return function (request) {
	        var tries = 1;
	        function handleError(err) {
	            if (tries > retry)
	                throw err;
	            tries++;
	            if (err.message === "timeout" && !retryOnTimeout)
	                throw err;
	            return Q.delay(delay).then(function () { return requester(request); }).catch(handleError);
	        }
	        return requester(request).catch(handleError);
	    };
	}

	var concurrentLimitRequesterFactory = exports.concurrentLimitRequesterFactory = function(parameters) {
	    var requester = parameters.requester;
	    var concurrentLimit = parameters.concurrentLimit || 5;
	    if (typeof concurrentLimit !== "number")
	        throw new TypeError("concurrentLimit should be a number");
	    var requestQueue = [];
	    var outstandingRequests = 0;
	    function requestFinished() {
	        outstandingRequests--;
	        if (!(requestQueue.length && outstandingRequests < concurrentLimit))
	            return;
	        var queueItem = requestQueue.shift();
	        var deferred = queueItem.deferred;
	        outstandingRequests++;
	        requester(queueItem.request)
	            .then(deferred.resolve, deferred.reject)
	            .fin(requestFinished);
	    }
	    return function (request) {
	        if (outstandingRequests < concurrentLimit) {
	            outstandingRequests++;
	            return requester(request).fin(requestFinished);
	        }
	        else {
	            var deferred = Q.defer();
	            requestQueue.push({
	                request: request,
	                deferred: deferred
	            });
	            return deferred.promise;
	        }
	    };
	}

	var promiseWhile = exports.promiseWhile = function(condition, action) {
	    var loop = function () {
	        if (!condition())
	            return Q(null);
	        return Q(action()).then(loop);
	    };
	    return Q(null).then(loop);
	}
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var objectHasOwnProperty = Object.prototype.hasOwnProperty;
	var hasOwnProperty = exports.hasOwnProperty = function(obj, key) {
	    return objectHasOwnProperty.call(obj, key);
	}
	var repeat = exports.repeat = function(str, times) {
	    return new Array(times + 1).join(str);
	}
	var arraysEqual = exports.arraysEqual = function(a, b) {
	    if (a === b)
	        return true;
	    var length = a.length;
	    if (length !== b.length)
	        return false;
	    for (var i = 0; i < length; i++) {
	        if (a[i] !== b[i])
	            return false;
	    }
	    return true;
	}
	var dictEqual = exports.dictEqual = function(dictA, dictB) {
	    if (dictA === dictB)
	        return true;
	    if (!dictA !== !dictB)
	        return false;
	    var keys = Object.keys(dictA);
	    if (keys.length !== Object.keys(dictB).length)
	        return false;
	    for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {
	        var key = keys_1[_i];
	        if (dictA[key] !== dictB[key])
	            return false;
	    }
	    return true;
	}
	var find = exports.find = function(array, fn) {
	    for (var i = 0, n = array.length; i < n; i++) {
	        var a = array[i];
	        if (fn.call(array, a, i))
	            return a;
	    }
	    return null;
	}
	var findIndex = exports.findIndex = function(array, fn) {
	    for (var i = 0, n = array.length; i < n; i++) {
	        var a = array[i];
	        if (fn.call(array, a, i))
	            return i;
	    }
	    return -1;
	}
	var findByName = exports.findByName = function(array, name) {
	    return find(array, function (x) { return x.name === name; });
	}
	var findIndexByName = exports.findIndexByName = function(array, name) {
	    return findIndex(array, function (x) { return x.name === name; });
	}
	var overrideByName = exports.overrideByName = function(things, thingOverride) {
	    var overrideName = thingOverride.name;
	    var added = false;
	    things = things.map(function (t) {
	        if (t.name === overrideName) {
	            added = true;
	            return thingOverride;
	        }
	        else {
	            return t;
	        }
	    });
	    if (!added)
	        things.push(thingOverride);
	    return things;
	}
	var overridesByName = exports.overridesByName = function(things, thingOverrides) {
	    for (var _i = 0, thingOverrides_1 = thingOverrides; _i < thingOverrides_1.length; _i++) {
	        var thingOverride = thingOverrides_1[_i];
	        things = overrideByName(things, thingOverride);
	    }
	    return things;
	}
	var shallowCopy = exports.shallowCopy = function(thing) {
	    var newThing = {};
	    for (var k in thing) {
	        if (hasOwnProperty(thing, k))
	            newThing[k] = thing[k];
	    }
	    return newThing;
	}
	var deduplicateSort = exports.deduplicateSort = function(a) {
	    a = a.sort();
	    var newA = [];
	    var last = null;
	    for (var _i = 0, a_1 = a; _i < a_1.length; _i++) {
	        var v = a_1[_i];
	        if (v !== last)
	            newA.push(v);
	        last = v;
	    }
	    return newA;
	}
	var mapLookup = exports.mapLookup = function(thing, fn) {
	    var newThing = Object.create(null);
	    for (var k in thing) {
	        if (hasOwnProperty(thing, k))
	            newThing[k] = fn(thing[k]);
	    }
	    return newThing;
	}
	var emptyLookup = exports.emptyLookup = function(lookup) {
	    for (var k in lookup) {
	        if (hasOwnProperty(lookup, k))
	            return false;
	    }
	    return true;
	}
	var nonEmptyLookup = exports.nonEmptyLookup = function(lookup) {
	    return !emptyLookup(lookup);
	}
	var safeAdd = exports.safeAdd = function(num, delta) {
	    var stringDelta = String(delta);
	    var dotIndex = stringDelta.indexOf(".");
	    if (dotIndex === -1 || stringDelta.length === 18) {
	        return num + delta;
	    }
	    else {
	        var scale = Math.pow(10, stringDelta.length - dotIndex - 1);
	        return (num * scale + delta * scale) / scale;
	    }
	}
	var continuousFloorExpression = exports.continuousFloorExpression = function(variable, floorFn, size, offset) {
	    var expr = variable;
	    if (offset !== 0) {
	        expr = expr + " - " + offset;
	    }
	    if (offset !== 0 && size !== 1) {
	        expr = "(" + expr + ")";
	    }
	    if (size !== 1) {
	        expr = expr + " / " + size;
	    }
	    expr = floorFn + "(" + expr + ")";
	    if (size !== 1) {
	        expr = expr + " * " + size;
	    }
	    if (offset !== 0) {
	        expr = expr + " + " + offset;
	    }
	    return expr;
	}
	var ExtendableError = exports.ExtendableError = (function (_super) {
	    __extends(ExtendableError, _super);
	    function ExtendableError(message) {
	        _super.call(this, message);
	        this.name = this.constructor.name;
	        this.message = message;
	        if (typeof Error.captureStackTrace === 'function') {
	            Error.captureStackTrace(this, this.constructor);
	        }
	        else {
	            this.stack = (new Error(message)).stack;
	        }
	    }
	    return ExtendableError;
	}(Error));
	var SQLDialect = exports.SQLDialect = (function () {
	    function SQLDialect() {
	    }
	    SQLDialect.prototype.constantGroupBy = function () {
	        return "GROUP BY ''";
	    };
	    SQLDialect.prototype.escapeName = function (name) {
	        name = name.replace(/"/g, '""');
	        return '"' + name + '"';
	    };
	    SQLDialect.prototype.escapeLiteral = function (name) {
	        if (name === null)
	            return 'NULL';
	        name = name.replace(/'/g, "''");
	        return "'" + name + "'";
	    };
	    SQLDialect.prototype.booleanToSQL = function (bool) {
	        return ('' + bool).toUpperCase();
	    };
	    SQLDialect.prototype.numberOrTimeToSQL = function (x) {
	        if (x === null)
	            return 'NULL';
	        if (x.toISOString) {
	            return this.timeToSQL(x);
	        }
	        else {
	            return this.numberToSQL(x);
	        }
	    };
	    SQLDialect.prototype.numberToSQL = function (num) {
	        if (num === null)
	            return 'NULL';
	        return '' + num;
	    };
	    SQLDialect.prototype.dateToSQLDateString = function (date) {
	        return date.toISOString()
	            .replace('T', ' ')
	            .replace('Z', '')
	            .replace(/\.000$/, '')
	            .replace(/ 00:00:00$/, '');
	    };
	    SQLDialect.prototype.aggregateFilterIfNeeded = function (inputSQL, expressionSQL, zeroSQL) {
	        if (zeroSQL === void 0) { zeroSQL = '0'; }
	        var whereIndex = inputSQL.indexOf(' WHERE ');
	        if (whereIndex === -1)
	            return expressionSQL;
	        var filterSQL = inputSQL.substr(whereIndex + 7);
	        return this.conditionalExpression(filterSQL, expressionSQL, zeroSQL);
	    };
	    SQLDialect.prototype.conditionalExpression = function (condition, thenPart, elsePart) {
	        return "IF(" + condition + "," + thenPart + "," + elsePart + ")";
	    };
	    SQLDialect.prototype.concatExpression = function (a, b) {
	        throw new Error('must implement');
	    };
	    SQLDialect.prototype.containsExpression = function (a, b) {
	        throw new Error('must implement');
	    };
	    SQLDialect.prototype.isNotDistinctFromExpression = function (a, b) {
	        if (a === 'NULL')
	            return b + " IS NULL";
	        if (b === 'NULL')
	            return a + " IS NULL";
	        return "(" + a + " IS NOT DISTINCT FROM " + b + ")";
	    };
	    SQLDialect.prototype.inExpression = function (operand, start, end, bounds) {
	        if (start === end && bounds === '[]')
	            return operand + "=" + start;
	        var startSQL = null;
	        if (start !== 'NULL') {
	            startSQL = start + (bounds[0] === '[' ? '<=' : '<') + operand;
	        }
	        var endSQL = null;
	        if (end !== 'NULL') {
	            endSQL = operand + (bounds[1] === ']' ? '<=' : '<') + end;
	        }
	        if (startSQL) {
	            return endSQL ? "(" + startSQL + " AND " + endSQL + ")" : startSQL;
	        }
	        else {
	            return endSQL ? endSQL : 'TRUE';
	        }
	    };
	    return SQLDialect;
	}());
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};

	var MySQLDialect = exports.MySQLDialect = (function (_super) {
	    __extends(MySQLDialect, _super);
	    function MySQLDialect() {
	        _super.call(this);
	    }
	    MySQLDialect.prototype.escapeName = function (name) {
	        name = name.replace(/`/g, '``');
	        return '`' + name + '`';
	    };
	    MySQLDialect.prototype.escapeLiteral = function (name) {
	        if (name === null)
	            return 'NULL';
	        return JSON.stringify(name);
	    };
	    MySQLDialect.prototype.timeToSQL = function (date) {
	        if (!date)
	            return 'NULL';
	        return "TIMESTAMP('" + this.dateToSQLDateString(date) + "')";
	    };
	    MySQLDialect.prototype.concatExpression = function (a, b) {
	        return "CONCAT(" + a + "," + b + ")";
	    };
	    MySQLDialect.prototype.containsExpression = function (a, b) {
	        return "LOCATE(" + a + "," + b + ")>0";
	    };
	    MySQLDialect.prototype.lengthExpression = function (a) {
	        return "CHAR_LENGTH(" + a + ")";
	    };
	    MySQLDialect.prototype.isNotDistinctFromExpression = function (a, b) {
	        return "(" + a + "<=>" + b + ")";
	    };
	    MySQLDialect.prototype.regexpExpression = function (expression, regexp) {
	        return "(" + expression + " REGEXP '" + regexp + "')";
	    };
	    MySQLDialect.prototype.castExpression = function (inputType, operand, cast) {
	        var castFunction = MySQLDialect.CAST_TO_FUNCTION[cast][inputType];
	        if (!castFunction)
	            throw new Error("unsupported cast from " + inputType + " to " + cast + " in MySQL dialect");
	        return castFunction.replace(/\$\$/g, operand);
	    };
	    MySQLDialect.prototype.utcToWalltime = function (operand, timezone) {
	        if (timezone.isUTC())
	            return operand;
	        return "CONVERT_TZ(" + operand + ",'+0:00','" + timezone + "')";
	    };
	    MySQLDialect.prototype.walltimeToUTC = function (operand, timezone) {
	        if (timezone.isUTC())
	            return operand;
	        return "CONVERT_TZ(" + operand + ",'" + timezone + "','+0:00')";
	    };
	    MySQLDialect.prototype.timeFloorExpression = function (operand, duration, timezone) {
	        var bucketFormat = MySQLDialect.TIME_BUCKETING[duration.toString()];
	        if (!bucketFormat)
	            throw new Error("unsupported duration '" + duration + "'");
	        return this.walltimeToUTC("DATE_FORMAT(" + this.utcToWalltime(operand, timezone) + ",'" + bucketFormat + "')", timezone);
	    };
	    MySQLDialect.prototype.timeBucketExpression = function (operand, duration, timezone) {
	        return this.timeFloorExpression(operand, duration, timezone);
	    };
	    MySQLDialect.prototype.timePartExpression = function (operand, part, timezone) {
	        var timePartFunction = MySQLDialect.TIME_PART_TO_FUNCTION[part];
	        if (!timePartFunction)
	            throw new Error("unsupported part " + part + " in MySQL dialect");
	        return timePartFunction.replace(/\$\$/g, this.utcToWalltime(operand, timezone));
	    };
	    MySQLDialect.prototype.timeShiftExpression = function (operand, duration, timezone) {
	        var sqlFn = "DATE_ADD(";
	        var spans = duration.valueOf();
	        if (spans.week) {
	            return sqlFn + operand + ", INTERVAL " + String(spans.week) + ' WEEK)';
	        }
	        if (spans.year || spans.month) {
	            var expr = String(spans.year || 0) + "-" + String(spans.month || 0);
	            operand = sqlFn + operand + ", INTERVAL '" + expr + "' YEAR_MONTH)";
	        }
	        if (spans.day || spans.hour || spans.minute || spans.second) {
	            var expr = String(spans.day || 0) + " " + [spans.hour || 0, spans.minute || 0, spans.second || 0].join(':');
	            operand = sqlFn + operand + ", INTERVAL '" + expr + "' DAY_SECOND)";
	        }
	        return operand;
	    };
	    MySQLDialect.prototype.extractExpression = function (operand, regexp) {
	        throw new Error('MySQL must implement extractExpression (https://github.com/mysqludf/lib_mysqludf_preg)');
	    };
	    MySQLDialect.prototype.indexOfExpression = function (str, substr) {
	        return "LOCATE(" + substr + ", " + str + ") - 1";
	    };
	    MySQLDialect.TIME_BUCKETING = {
	        "PT1S": "%Y-%m-%d %H:%i:%SZ",
	        "PT1M": "%Y-%m-%d %H:%i:00Z",
	        "PT1H": "%Y-%m-%d %H:00:00Z",
	        "P1D": "%Y-%m-%d 00:00:00Z",
	        "P1M": "%Y-%m-01 00:00:00Z",
	        "P1Y": "%Y-01-01 00:00:00Z"
	    };
	    MySQLDialect.TIME_PART_TO_FUNCTION = {
	        SECOND_OF_MINUTE: 'SECOND($$)',
	        SECOND_OF_HOUR: '(MINUTE($$)*60+SECOND($$))',
	        SECOND_OF_DAY: '((HOUR($$)*60+MINUTE($$))*60+SECOND($$))',
	        SECOND_OF_WEEK: '(((WEEKDAY($$)*24)+HOUR($$)*60+MINUTE($$))*60+SECOND($$))',
	        SECOND_OF_MONTH: '((((DAYOFMONTH($$)-1)*24)+HOUR($$)*60+MINUTE($$))*60+SECOND($$))',
	        SECOND_OF_YEAR: '((((DAYOFYEAR($$)-1)*24)+HOUR($$)*60+MINUTE($$))*60+SECOND($$))',
	        MINUTE_OF_HOUR: 'MINUTE($$)',
	        MINUTE_OF_DAY: 'HOUR($$)*60+MINUTE($$)',
	        MINUTE_OF_WEEK: '(WEEKDAY($$)*24)+HOUR($$)*60+MINUTE($$)',
	        MINUTE_OF_MONTH: '((DAYOFMONTH($$)-1)*24)+HOUR($$)*60+MINUTE($$)',
	        MINUTE_OF_YEAR: '((DAYOFYEAR($$)-1)*24)+HOUR($$)*60+MINUTE($$)',
	        HOUR_OF_DAY: 'HOUR($$)',
	        HOUR_OF_WEEK: '(WEEKDAY($$)*24+HOUR($$))',
	        HOUR_OF_MONTH: '((DAYOFMONTH($$)-1)*24+HOUR($$))',
	        HOUR_OF_YEAR: '((DAYOFYEAR($$)-1)*24+HOUR($$))',
	        DAY_OF_WEEK: '(WEEKDAY($$)+1)',
	        DAY_OF_MONTH: 'DAYOFMONTH($$)',
	        DAY_OF_YEAR: 'DAYOFYEAR($$)',
	        WEEK_OF_MONTH: null,
	        WEEK_OF_YEAR: 'WEEK($$)',
	        MONTH_OF_YEAR: 'MONTH($$)',
	        YEAR: 'YEAR($$)'
	    };
	    MySQLDialect.CAST_TO_FUNCTION = {
	        TIME: {
	            NUMBER: 'FROM_UNIXTIME($$ / 1000)'
	        },
	        NUMBER: {
	            TIME: 'UNIX_TIMESTAMP($$) * 1000',
	            STRING: 'CAST($$ AS SIGNED)'
	        },
	        STRING: {
	            NUMBER: 'CAST($$ AS CHAR)'
	        }
	    };
	    return MySQLDialect;
	}(SQLDialect));
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};

	var PostgresDialect = exports.PostgresDialect = (function (_super) {
	    __extends(PostgresDialect, _super);
	    function PostgresDialect() {
	        _super.call(this);
	    }
	    PostgresDialect.prototype.constantGroupBy = function () {
	        return "GROUP BY ''=''";
	    };
	    PostgresDialect.prototype.timeToSQL = function (date) {
	        if (!date)
	            return 'NULL';
	        return "TIMESTAMP '" + this.dateToSQLDateString(date) + "'";
	    };
	    PostgresDialect.prototype.conditionalExpression = function (condition, thenPart, elsePart) {
	        return "(CASE WHEN " + condition + " THEN " + thenPart + " ELSE " + elsePart + " END)";
	    };
	    PostgresDialect.prototype.concatExpression = function (a, b) {
	        return "(" + a + "||" + b + ")";
	    };
	    PostgresDialect.prototype.containsExpression = function (a, b) {
	        return "POSITION(" + a + " IN " + b + ")>0";
	    };
	    PostgresDialect.prototype.lengthExpression = function (a) {
	        return "LENGTH(" + a + ")";
	    };
	    PostgresDialect.prototype.regexpExpression = function (expression, regexp) {
	        return "(" + expression + " ~ '" + regexp + "')";
	    };
	    PostgresDialect.prototype.castExpression = function (inputType, operand, cast) {
	        var castFunction = PostgresDialect.CAST_TO_FUNCTION[cast][inputType];
	        if (!castFunction)
	            throw new Error("unsupported cast from " + inputType + " to " + cast + " in Postgres dialect");
	        return castFunction.replace(/\$\$/g, operand);
	    };
	    PostgresDialect.prototype.utcToWalltime = function (operand, timezone) {
	        if (timezone.isUTC())
	            return operand;
	        return "(" + operand + " AT TIME ZONE 'UTC' AT TIME ZONE '" + timezone + "')";
	    };
	    PostgresDialect.prototype.walltimeToUTC = function (operand, timezone) {
	        if (timezone.isUTC())
	            return operand;
	        return "(" + operand + " AT TIME ZONE '" + timezone + "' AT TIME ZONE 'UTC')";
	    };
	    PostgresDialect.prototype.timeFloorExpression = function (operand, duration, timezone) {
	        var bucketFormat = PostgresDialect.TIME_BUCKETING[duration.toString()];
	        if (!bucketFormat)
	            throw new Error("unsupported duration '" + duration + "'");
	        return this.walltimeToUTC("DATE_TRUNC('" + bucketFormat + "'," + this.utcToWalltime(operand, timezone) + ")", timezone);
	    };
	    PostgresDialect.prototype.timeBucketExpression = function (operand, duration, timezone) {
	        return this.timeFloorExpression(operand, duration, timezone);
	    };
	    PostgresDialect.prototype.timePartExpression = function (operand, part, timezone) {
	        var timePartFunction = PostgresDialect.TIME_PART_TO_FUNCTION[part];
	        if (!timePartFunction)
	            throw new Error("unsupported part " + part + " in Postgres dialect");
	        return timePartFunction.replace(/\$\$/g, this.utcToWalltime(operand, timezone));
	    };
	    PostgresDialect.prototype.timeShiftExpression = function (operand, duration, timezone) {
	        var sqlFn = "DATE_ADD(";
	        var spans = duration.valueOf();
	        if (spans.week) {
	            return sqlFn + operand + ", INTERVAL " + String(spans.week) + ' WEEK)';
	        }
	        if (spans.year || spans.month) {
	            var expr = String(spans.year || 0) + "-" + String(spans.month || 0);
	            operand = sqlFn + operand + ", INTERVAL '" + expr + "' YEAR_MONTH)";
	        }
	        if (spans.day || spans.hour || spans.minute || spans.second) {
	            var expr = String(spans.day || 0) + " " + [spans.hour || 0, spans.minute || 0, spans.second || 0].join(':');
	            operand = sqlFn + operand + ", INTERVAL '" + expr + "' DAY_SECOND)";
	        }
	        return operand;
	    };
	    PostgresDialect.prototype.extractExpression = function (operand, regexp) {
	        return "(SELECT (REGEXP_MATCHES(" + operand + ", '" + regexp + "'))[1])";
	    };
	    PostgresDialect.prototype.indexOfExpression = function (str, substr) {
	        return "POSITION(" + substr + " IN " + str + ") - 1";
	    };
	    PostgresDialect.TIME_BUCKETING = {
	        "PT1S": "second",
	        "PT1M": "minute",
	        "PT1H": "hour",
	        "P1D": "day",
	        "P1W": "week",
	        "P1M": "month",
	        "P3M": "quarter",
	        "P1Y": "year"
	    };
	    PostgresDialect.TIME_PART_TO_FUNCTION = {
	        SECOND_OF_MINUTE: "DATE_PART('second',$$)",
	        SECOND_OF_HOUR: "(DATE_PART('minute',$$)*60+DATE_PART('second',$$))",
	        SECOND_OF_DAY: "((DATE_PART('hour',$$)*60+DATE_PART('minute',$$))*60+DATE_PART('second',$$))",
	        SECOND_OF_WEEK: "((((CAST((DATE_PART('dow',$$)+6) AS int)%7)*24)+DATE_PART('hour',$$)*60+DATE_PART('minute',$$))*60+DATE_PART('second',$$))",
	        SECOND_OF_MONTH: "((((DATE_PART('day',$$)-1)*24)+DATE_PART('hour',$$)*60+DATE_PART('minute',$$))*60+DATE_PART('second',$$))",
	        SECOND_OF_YEAR: "((((DATE_PART('doy',$$)-1)*24)+DATE_PART('hour',$$)*60+DATE_PART('minute',$$))*60+DATE_PART('second',$$))",
	        MINUTE_OF_HOUR: "DATE_PART('minute',$$)",
	        MINUTE_OF_DAY: "DATE_PART('hour',$$)*60+DATE_PART('minute',$$)",
	        MINUTE_OF_WEEK: "((CAST((DATE_PART('dow',$$)+6) AS int)%7)*24)+DATE_PART('hour',$$)*60+DATE_PART('minute',$$)",
	        MINUTE_OF_MONTH: "((DATE_PART('day',$$)-1)*24)+DATE_PART('hour',$$)*60+DATE_PART('minute',$$)",
	        MINUTE_OF_YEAR: "((DATE_PART('doy',$$)-1)*24)+DATE_PART('hour',$$)*60+DATE_PART('minute',$$)",
	        HOUR_OF_DAY: "DATE_PART('hour',$$)",
	        HOUR_OF_WEEK: "((CAST((DATE_PART('dow',$$)+6) AS int)%7)*24+DATE_PART('hour',$$))",
	        HOUR_OF_MONTH: "((DATE_PART('day',$$)-1)*24+DATE_PART('hour',$$))",
	        HOUR_OF_YEAR: "((DATE_PART('doy',$$)-1)*24+DATE_PART('hour',$$))",
	        DAY_OF_WEEK: "(CAST((DATE_PART('dow',$$)+6) AS int)%7)+1",
	        DAY_OF_MONTH: "DATE_PART('day',$$)",
	        DAY_OF_YEAR: "DATE_PART('doy',$$)",
	        WEEK_OF_MONTH: null,
	        WEEK_OF_YEAR: "DATE_PART('week',$$)",
	        MONTH_OF_YEAR: "DATE_PART('month',$$)",
	        YEAR: "DATE_PART('year',$$)",
	    };
	    PostgresDialect.CAST_TO_FUNCTION = {
	        TIME: {
	            NUMBER: 'TO_TIMESTAMP($$::double precision / 1000)'
	        },
	        NUMBER: {
	            TIME: "EXTRACT(EPOCH FROM $$) * 1000",
	            STRING: "$$::float"
	        },
	        STRING: {
	            NUMBER: "$$::text"
	        }
	    };
	    return PostgresDialect;
	}(SQLDialect));










	var getValueType = exports.getValueType = function(value) {
	    var typeofValue = typeof value;
	    if (typeofValue === 'object') {
	        if (value === null) {
	            return 'NULL';
	        }
	        else if (isDate(value)) {
	            return 'TIME';
	        }
	        else if (hasOwnProperty(value, 'start') && hasOwnProperty(value, 'end')) {
	            if (isDate(value.start) || isDate(value.end))
	                return 'TIME_RANGE';
	            if (typeof value.start === 'number' || typeof value.end === 'number')
	                return 'NUMBER_RANGE';
	            if (typeof value.start === 'string' || typeof value.end === 'string')
	                return 'STRING_RANGE';
	            throw new Error("unrecognizable range");
	        }
	        else {
	            var ctrType = value.constructor.type;
	            if (!ctrType) {
	                if (Expression.isExpression(value)) {
	                    throw new Error("expression used as datum value " + value);
	                }
	                else {
	                    throw new Error("can not have an object without a type: " + JSON.stringify(value));
	                }
	            }
	            if (ctrType === 'SET')
	                ctrType += '/' + value.setType;
	            return ctrType;
	        }
	    }
	    else {
	        if (typeofValue !== 'boolean' && typeofValue !== 'number' && typeofValue !== 'string') {
	            throw new TypeError('unsupported JS type ' + typeofValue);
	        }
	        return typeofValue.toUpperCase();
	    }
	}
	var getFullType = exports.getFullType = function(value) {
	    var myType = getValueType(value);
	    return myType === 'DATASET' ? value.getFullType() : { type: myType };
	}
	var getFullTypeFromDatum = exports.getFullTypeFromDatum = function(datum) {
	    var datasetType = {};
	    for (var k in datum) {
	        if (!hasOwnProperty(datum, k))
	            continue;
	        datasetType[k] = getFullType(datum[k]);
	    }
	    return {
	        type: 'DATASET',
	        datasetType: datasetType
	    };
	}
	var valueFromJS = exports.valueFromJS = function(v, typeOverride) {
	    if (typeOverride === void 0) { typeOverride = null; }
	    if (v == null) {
	        return null;
	    }
	    else if (Array.isArray(v)) {
	        if (v.length && typeof v[0] !== 'object') {
	            return Set.fromJS(v);
	        }
	        else {
	            return Dataset.fromJS(v);
	        }
	    }
	    else if (typeof v === 'object') {
	        switch (typeOverride || v.type) {
	            case 'NUMBER':
	                var n = Number(v.value);
	                if (isNaN(n))
	                    throw new Error("bad number value '" + v.value + "'");
	                return n;
	            case 'NUMBER_RANGE':
	                return NumberRange.fromJS(v);
	            case 'STRING_RANGE':
	                return StringRange.fromJS(v);
	            case 'TIME':
	                return typeOverride ? v : new Date(v.value);
	            case 'TIME_RANGE':
	                return TimeRange.fromJS(v);
	            case 'SET':
	                return Set.fromJS(v);
	            default:
	                if (v.toISOString) {
	                    return v;
	                }
	                else {
	                    throw new Error('can not have an object without a `type` as a datum value');
	                }
	        }
	    }
	    else if (typeof v === 'string' && typeOverride === 'TIME') {
	        return new Date(v);
	    }
	    return v;
	}
	var valueToJS = exports.valueToJS = function(v) {
	    if (v == null) {
	        return null;
	    }
	    else {
	        var typeofV = typeof v;
	        if (typeofV === 'object') {
	            if (v.toISOString) {
	                return v;
	            }
	            else {
	                return v.toJS();
	            }
	        }
	        else if (typeofV === 'number' && !isFinite(v)) {
	            return String(v);
	        }
	    }
	    return v;
	}
	var valueToJSInlineType = exports.valueToJSInlineType = function(v) {
	    if (v == null) {
	        return null;
	    }
	    else {
	        var typeofV = typeof v;
	        if (typeofV === 'object') {
	            if (v.toISOString) {
	                return { type: 'TIME', value: v };
	            }
	            else {
	                var js = v.toJS();
	                if (!Array.isArray(js)) {
	                    js.type = v.constructor.type;
	                }
	                return js;
	            }
	        }
	        else if (typeofV === 'number' && !isFinite(v)) {
	            return { type: 'NUMBER', value: String(v) };
	        }
	    }
	    return v;
	}
	var datumHasExternal = exports.datumHasExternal = function(datum) {
	    for (var name in datum) {
	        var value = datum[name];
	        if (value instanceof External)
	            return true;
	        if (value instanceof Dataset && value.hasExternal())
	            return true;
	    }
	    return false;
	}
	var introspectDatum = exports.introspectDatum = function(datum) {
	    var promises = [];
	    var newDatum = Object.create(null);
	    Object.keys(datum)
	        .forEach(function (name) {
	        var v = datum[name];
	        if (v instanceof External && v.needsIntrospect()) {
	            promises.push(v.introspect().then(function (introspectedExternal) {
	                newDatum[name] = introspectedExternal;
	            }));
	        }
	        else {
	            newDatum[name] = v;
	        }
	    });
	    return Q.all(promises).then(function () { return newDatum; });
	}
	var isSetType = exports.isSetType = function(type) {
	    return type && type.indexOf('SET/') === 0;
	}
	var wrapSetType = exports.wrapSetType = function(type) {
	    return isSetType(type) ? type : ('SET/' + type);
	}
	var unwrapSetType = exports.unwrapSetType = function(type) {
	    if (!type)
	        return null;
	    return isSetType(type) ? type.substr(4) : type;
	}
	var getAllSetTypes = exports.getAllSetTypes = function() {
	    return [
	        'SET/STRING',
	        'SET/STRING_RANGE',
	        'SET/NUMBER',
	        'SET/NUMBER_RANGE',
	        'SET/TIME',
	        'SET/TIME_RANGE'
	    ];
	}
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};




	function isInteger(n) {
	    return !isNaN(n) && n % 1 === 0;
	}
	function isPositiveInteger(n) {
	    return isInteger(n) && 0 < n;
	}
	var check;
	var AttributeInfo = exports.AttributeInfo = (function () {
	    function AttributeInfo(parameters) {
	        if (parameters.special)
	            this.special = parameters.special;
	        if (typeof parameters.name !== "string") {
	            throw new Error("name must be a string");
	        }
	        this.name = parameters.name;
	        if (hasOwnProperty(parameters, 'type') && !RefExpression.validType(parameters.type)) {
	            throw new Error("invalid type: " + parameters.type);
	        }
	        this.type = parameters.type;
	        this.datasetType = parameters.datasetType;
	        this.unsplitable = Boolean(parameters.unsplitable);
	        this.makerAction = parameters.makerAction;
	    }
	    AttributeInfo.isAttributeInfo = function (candidate) {
	        return isInstanceOf(candidate, AttributeInfo);
	    };
	    AttributeInfo.jsToValue = function (parameters) {
	        var value = {
	            special: parameters.special,
	            name: parameters.name
	        };
	        if (parameters.type)
	            value.type = parameters.type;
	        if (parameters.datasetType)
	            value.datasetType = parameters.datasetType;
	        if (parameters.unsplitable)
	            value.unsplitable = true;
	        if (parameters.makerAction)
	            value.makerAction = Action.fromJS(parameters.makerAction);
	        return value;
	    };
	    AttributeInfo.register = function (ex) {
	        var op = ex.name.replace('AttributeInfo', '').replace(/^\w/, function (s) { return s.toLowerCase(); });
	        AttributeInfo.classMap[op] = ex;
	    };
	    AttributeInfo.fromJS = function (parameters) {
	        if (typeof parameters !== "object") {
	            throw new Error("unrecognizable attributeMeta");
	        }
	        if (!hasOwnProperty(parameters, 'special')) {
	            return new AttributeInfo(AttributeInfo.jsToValue(parameters));
	        }
	        if (parameters.special === 'range') {
	            throw new Error("'range' attribute info is no longer supported, you should apply the .extract('^\\d+') function instead");
	        }
	        var Class = AttributeInfo.classMap[parameters.special];
	        if (!Class) {
	            throw new Error("unsupported special attributeInfo '" + parameters.special + "'");
	        }
	        return Class.fromJS(parameters);
	    };
	    AttributeInfo.fromJSs = function (attributeJSs) {
	        if (!Array.isArray(attributeJSs)) {
	            if (attributeJSs && typeof attributeJSs === 'object') {
	                var newAttributeJSs = [];
	                for (var attributeName in attributeJSs) {
	                    if (!hasOwnProperty(attributeJSs, attributeName))
	                        continue;
	                    var attributeJS = attributeJSs[attributeName];
	                    attributeJS['name'] = attributeName;
	                    newAttributeJSs.push(attributeJS);
	                }
	                console.warn('attributes now needs to be passed as an array like so: ' + JSON.stringify(newAttributeJSs, null, 2));
	                attributeJSs = newAttributeJSs;
	            }
	            else {
	                throw new TypeError("invalid attributeJSs");
	            }
	        }
	        return attributeJSs.map(function (attributeJS) { return AttributeInfo.fromJS(attributeJS); });
	    };
	    AttributeInfo.toJSs = function (attributes) {
	        return attributes.map(function (attribute) { return attribute.toJS(); });
	    };
	    AttributeInfo.override = function (attributes, attributeOverrides) {
	        return overridesByName(attributes, attributeOverrides);
	    };
	    AttributeInfo.prototype._ensureSpecial = function (special) {
	        if (!this.special) {
	            this.special = special;
	            return;
	        }
	        if (this.special !== special) {
	            throw new TypeError("incorrect attributeInfo special '" + this.special + "' (needs to be: '" + special + "')");
	        }
	    };
	    AttributeInfo.prototype._ensureType = function (myType) {
	        if (!this.type) {
	            this.type = myType;
	            return;
	        }
	        if (this.type !== myType) {
	            throw new TypeError("incorrect attributeInfo type '" + this.type + "' (needs to be: '" + myType + "')");
	        }
	    };
	    AttributeInfo.prototype.toString = function () {
	        var special = this.special ? "[" + this.special + "]" : '';
	        return this.name + "::" + this.type + special;
	    };
	    AttributeInfo.prototype.valueOf = function () {
	        var value = {
	            name: this.name,
	            type: this.type,
	            unsplitable: this.unsplitable
	        };
	        if (this.special)
	            value.special = this.special;
	        if (this.datasetType)
	            value.datasetType = this.datasetType;
	        if (this.makerAction)
	            value.makerAction = this.makerAction;
	        return value;
	    };
	    AttributeInfo.prototype.toJS = function () {
	        var js = {
	            name: this.name,
	            type: this.type
	        };
	        if (this.unsplitable)
	            js.unsplitable = true;
	        if (this.special)
	            js.special = this.special;
	        if (this.datasetType)
	            js.datasetType = this.datasetType;
	        if (this.makerAction)
	            js.makerAction = this.makerAction.toJS();
	        return js;
	    };
	    AttributeInfo.prototype.toJSON = function () {
	        return this.toJS();
	    };
	    AttributeInfo.prototype.equals = function (other) {
	        return AttributeInfo.isAttributeInfo(other) &&
	            this.special === other.special &&
	            this.name === other.name &&
	            this.type === other.type &&
	            Boolean(this.makerAction) === Boolean(other.makerAction) &&
	            (!this.makerAction || this.makerAction.equals(other.makerAction));
	    };
	    AttributeInfo.prototype.serialize = function (value) {
	        return value;
	    };
	    AttributeInfo.classMap = {};
	    return AttributeInfo;
	}());
	check = AttributeInfo;
	var UniqueAttributeInfo = exports.UniqueAttributeInfo = (function (_super) {
	    __extends(UniqueAttributeInfo, _super);
	    function UniqueAttributeInfo(parameters) {
	        _super.call(this, parameters);
	        this._ensureSpecial("unique");
	        this._ensureType('STRING');
	    }
	    UniqueAttributeInfo.fromJS = function (parameters) {
	        return new UniqueAttributeInfo(AttributeInfo.jsToValue(parameters));
	    };
	    UniqueAttributeInfo.prototype.serialize = function (value) {
	        throw new Error("can not serialize an approximate unique value");
	    };
	    return UniqueAttributeInfo;
	}(AttributeInfo));
	AttributeInfo.register(UniqueAttributeInfo);
	var ThetaAttributeInfo = exports.ThetaAttributeInfo = (function (_super) {
	    __extends(ThetaAttributeInfo, _super);
	    function ThetaAttributeInfo(parameters) {
	        _super.call(this, parameters);
	        this._ensureSpecial("theta");
	        this._ensureType('STRING');
	    }
	    ThetaAttributeInfo.fromJS = function (parameters) {
	        return new ThetaAttributeInfo(AttributeInfo.jsToValue(parameters));
	    };
	    ThetaAttributeInfo.prototype.serialize = function (value) {
	        throw new Error("can not serialize a theta value");
	    };
	    return ThetaAttributeInfo;
	}(AttributeInfo));
	AttributeInfo.register(ThetaAttributeInfo);
	var HistogramAttributeInfo = exports.HistogramAttributeInfo = (function (_super) {
	    __extends(HistogramAttributeInfo, _super);
	    function HistogramAttributeInfo(parameters) {
	        _super.call(this, parameters);
	        this._ensureSpecial("histogram");
	        this._ensureType('NUMBER');
	    }
	    HistogramAttributeInfo.fromJS = function (parameters) {
	        return new HistogramAttributeInfo(AttributeInfo.jsToValue(parameters));
	    };
	    HistogramAttributeInfo.prototype.serialize = function (value) {
	        throw new Error("can not serialize a histogram value");
	    };
	    return HistogramAttributeInfo;
	}(AttributeInfo));
	AttributeInfo.register(HistogramAttributeInfo);

	var BOUNDS_REG_EXP = /^[\[(][\])]$/;
	var Range = exports.Range = (function () {
	    function Range(start, end, bounds) {
	        if (bounds) {
	            if (!BOUNDS_REG_EXP.test(bounds)) {
	                throw new Error("invalid bounds " + bounds);
	            }
	        }
	        else {
	            bounds = Range.DEFAULT_BOUNDS;
	        }
	        if (start !== null && end !== null && this._endpointEqual(start, end)) {
	            if (bounds !== '[]') {
	                start = end = this._zeroEndpoint();
	            }
	            if (bounds === '(]' || bounds === '()')
	                this.bounds = '[)';
	        }
	        else {
	            if (start !== null && end !== null && end < start) {
	                throw new Error('must have start <= end');
	            }
	            if (start === null && bounds[0] === '[') {
	                bounds = '(' + bounds[1];
	            }
	            if (end === null && bounds[1] === ']') {
	                bounds = bounds[0] + ')';
	            }
	        }
	        this.start = start;
	        this.end = end;
	        this.bounds = bounds;
	    }
	    Range.isRange = function (candidate) {
	        return isInstanceOf(candidate, Range);
	    };
	    Range.register = function (ctr) {
	        var rangeName = ctr.name.replace('Range', '').replace(/^\w/, function (s) { return s.toLowerCase(); });
	        Range.classMap[rangeName] = ctr;
	    };
	    Range.fromJS = function (parameters) {
	        var ctr;
	        if (typeof parameters.start === 'number' || typeof parameters.end === 'number') {
	            ctr = 'number';
	        }
	        else if (typeof parameters.start === 'string' || typeof parameters.end === 'string') {
	            ctr = 'string';
	        }
	        else {
	            ctr = 'time';
	        }
	        return Range.classMap[ctr].fromJS(parameters);
	    };
	    Range.prototype._zeroEndpoint = function () {
	        return 0;
	    };
	    Range.prototype._endpointEqual = function (a, b) {
	        return a === b;
	    };
	    Range.prototype._endpointToString = function (a) {
	        return String(a);
	    };
	    Range.prototype._equalsHelper = function (other) {
	        return Boolean(other) &&
	            this.bounds === other.bounds &&
	            this._endpointEqual(this.start, other.start) &&
	            this._endpointEqual(this.end, other.end);
	    };
	    Range.prototype.toString = function () {
	        var bounds = this.bounds;
	        return bounds[0] + this._endpointToString(this.start) + ',' + this._endpointToString(this.end) + bounds[1];
	    };
	    Range.prototype.compare = function (other) {
	        var myStart = this.start;
	        var otherStart = other.start;
	        return myStart < otherStart ? -1 : (otherStart < myStart ? 1 : 0);
	    };
	    Range.prototype.openStart = function () {
	        return this.bounds[0] === '(';
	    };
	    Range.prototype.openEnd = function () {
	        return this.bounds[1] === ')';
	    };
	    Range.prototype.empty = function () {
	        return this._endpointEqual(this.start, this.end) && this.bounds === '[)';
	    };
	    Range.prototype.degenerate = function () {
	        return this._endpointEqual(this.start, this.end) && this.bounds === '[]';
	    };
	    Range.prototype.contains = function (val) {
	        if (val === null)
	            return false;
	        var start = this.start;
	        var end = this.end;
	        var bounds = this.bounds;
	        if (bounds[0] === '[') {
	            if (val < start)
	                return false;
	        }
	        else {
	            if (start !== null && val <= start)
	                return false;
	        }
	        if (bounds[1] === ']') {
	            if (end < val)
	                return false;
	        }
	        else {
	            if (end !== null && end <= val)
	                return false;
	        }
	        return true;
	    };
	    Range.prototype.intersects = function (other) {
	        return this.contains(other.start) || this.contains(other.end)
	            || other.contains(this.start) || other.contains(this.end)
	            || this._equalsHelper(other);
	    };
	    Range.prototype.adjacent = function (other) {
	        return (this._endpointEqual(this.end, other.start) && this.openEnd() !== other.openStart())
	            || (this._endpointEqual(this.start, other.end) && this.openStart() !== other.openEnd());
	    };
	    Range.prototype.mergeable = function (other) {
	        return this.intersects(other) || this.adjacent(other);
	    };
	    Range.prototype.union = function (other) {
	        if (!this.mergeable(other))
	            return null;
	        return this.extend(other);
	    };
	    Range.prototype.extent = function () {
	        return this;
	    };
	    Range.prototype.extend = function (other) {
	        var thisStart = this.start;
	        var thisEnd = this.end;
	        var otherStart = other.start;
	        var otherEnd = other.end;
	        var start;
	        var startBound;
	        if (thisStart === null || otherStart === null) {
	            start = null;
	            startBound = '(';
	        }
	        else if (thisStart < otherStart) {
	            start = thisStart;
	            startBound = this.bounds[0];
	        }
	        else {
	            start = otherStart;
	            startBound = other.bounds[0];
	        }
	        var end;
	        var endBound;
	        if (thisEnd === null || otherEnd === null) {
	            end = null;
	            endBound = ')';
	        }
	        else if (thisEnd < otherEnd) {
	            end = otherEnd;
	            endBound = other.bounds[1];
	        }
	        else {
	            end = thisEnd;
	            endBound = this.bounds[1];
	        }
	        return new this.constructor({ start: start, end: end, bounds: startBound + endBound });
	    };
	    Range.prototype.intersect = function (other) {
	        if (!this.mergeable(other))
	            return null;
	        var thisStart = this.start;
	        var thisEnd = this.end;
	        var otherStart = other.start;
	        var otherEnd = other.end;
	        var start;
	        var startBound;
	        if (thisStart === null || otherStart === null) {
	            if (otherStart === null) {
	                start = thisStart;
	                startBound = this.bounds[0];
	            }
	            else {
	                start = otherStart;
	                startBound = other.bounds[0];
	            }
	        }
	        else if (otherStart < thisStart) {
	            start = thisStart;
	            startBound = this.bounds[0];
	        }
	        else {
	            start = otherStart;
	            startBound = other.bounds[0];
	        }
	        var end;
	        var endBound;
	        if (thisEnd === null || otherEnd === null) {
	            if (thisEnd == null) {
	                end = otherEnd;
	                endBound = other.bounds[1];
	            }
	            else {
	                end = thisEnd;
	                endBound = this.bounds[1];
	            }
	        }
	        else if (otherEnd < thisEnd) {
	            end = otherEnd;
	            endBound = other.bounds[1];
	        }
	        else {
	            end = thisEnd;
	            endBound = this.bounds[1];
	        }
	        return new this.constructor({ start: start, end: end, bounds: startBound + endBound });
	    };
	    Range.DEFAULT_BOUNDS = '[)';
	    Range.classMap = {};
	    return Range;
	}());
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};


	function finiteOrNull(n) {
	    return (isNaN(n) || isFinite(n)) ? n : null;
	}
	var check;
	var NumberRange = exports.NumberRange = (function (_super) {
	    __extends(NumberRange, _super);
	    function NumberRange(parameters) {
	        if (isNaN(parameters.start))
	            throw new TypeError('`start` must be a number');
	        if (isNaN(parameters.end))
	            throw new TypeError('`end` must be a number');
	        _super.call(this, parameters.start, parameters.end, parameters.bounds);
	    }
	    NumberRange.isNumberRange = function (candidate) {
	        return isInstanceOf(candidate, NumberRange);
	    };
	    NumberRange.numberBucket = function (num, size, offset) {
	        var start = Math.floor((num - offset) / size) * size + offset;
	        return new NumberRange({
	            start: start,
	            end: start + size,
	            bounds: Range.DEFAULT_BOUNDS
	        });
	    };
	    NumberRange.fromNumber = function (n) {
	        return new NumberRange({ start: n, end: n, bounds: '[]' });
	    };
	    NumberRange.fromJS = function (parameters) {
	        if (typeof parameters !== "object") {
	            throw new Error("unrecognizable numberRange");
	        }
	        var start = parameters.start;
	        var end = parameters.end;
	        return new NumberRange({
	            start: start === null ? null : finiteOrNull(Number(start)),
	            end: end === null ? null : finiteOrNull(Number(end)),
	            bounds: parameters.bounds
	        });
	    };
	    NumberRange.prototype.valueOf = function () {
	        return {
	            start: this.start,
	            end: this.end,
	            bounds: this.bounds
	        };
	    };
	    NumberRange.prototype.toJS = function () {
	        var js = {
	            start: this.start,
	            end: this.end
	        };
	        if (this.bounds !== Range.DEFAULT_BOUNDS)
	            js.bounds = this.bounds;
	        return js;
	    };
	    NumberRange.prototype.toJSON = function () {
	        return this.toJS();
	    };
	    NumberRange.prototype.equals = function (other) {
	        return NumberRange.isNumberRange(other) && this._equalsHelper(other);
	    };
	    NumberRange.prototype.midpoint = function () {
	        return (this.start + this.end) / 2;
	    };
	    NumberRange.type = 'NUMBER_RANGE';
	    return NumberRange;
	}(Range));
	check = NumberRange;
	Range.register(NumberRange);
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};




	function toDate(date, name) {
	    if (date === null)
	        return null;
	    if (typeof date === "undefined")
	        throw new TypeError("timeRange must have a " + name);
	    if (typeof date === 'string' || typeof date === 'number')
	        date = parseISODate(date, Expression.defaultParserTimezone);
	    if (!date.getDay)
	        throw new TypeError("timeRange must have a " + name + " that is a Date");
	    return date;
	}
	var START_OF_TIME = "1000";
	var END_OF_TIME = "3000";
	function dateToIntervalPart(date) {
	    return date.toISOString()
	        .replace('.000Z', 'Z')
	        .replace(':00Z', 'Z')
	        .replace(':00Z', 'Z');
	}
	var check;
	var TimeRange = exports.TimeRange = (function (_super) {
	    __extends(TimeRange, _super);
	    function TimeRange(parameters) {
	        _super.call(this, parameters.start, parameters.end, parameters.bounds);
	    }
	    TimeRange.isTimeRange = function (candidate) {
	        return isInstanceOf(candidate, TimeRange);
	    };
	    TimeRange.intervalFromDate = function (date) {
	        return dateToIntervalPart(date) + '/' + dateToIntervalPart(new Date(date.valueOf() + 1));
	    };
	    TimeRange.timeBucket = function (date, duration, timezone) {
	        if (!date)
	            return null;
	        var start = duration.floor(date, timezone);
	        return new TimeRange({
	            start: start,
	            end: duration.shift(start, timezone, 1),
	            bounds: Range.DEFAULT_BOUNDS
	        });
	    };
	    TimeRange.fromTime = function (t) {
	        return new TimeRange({ start: t, end: t, bounds: '[]' });
	    };
	    TimeRange.fromJS = function (parameters) {
	        if (typeof parameters !== "object") {
	            throw new Error("unrecognizable timeRange");
	        }
	        return new TimeRange({
	            start: toDate(parameters.start, 'start'),
	            end: toDate(parameters.end, 'end'),
	            bounds: parameters.bounds
	        });
	    };
	    TimeRange.prototype._zeroEndpoint = function () {
	        return new Date(0);
	    };
	    TimeRange.prototype._endpointEqual = function (a, b) {
	        if (a === null) {
	            return b === null;
	        }
	        else {
	            return b !== null && a.valueOf() === b.valueOf();
	        }
	    };
	    TimeRange.prototype._endpointToString = function (a) {
	        if (!a)
	            return 'null';
	        return a.toISOString();
	    };
	    TimeRange.prototype.valueOf = function () {
	        return {
	            start: this.start,
	            end: this.end,
	            bounds: this.bounds
	        };
	    };
	    TimeRange.prototype.toJS = function () {
	        var js = {
	            start: this.start,
	            end: this.end
	        };
	        if (this.bounds !== Range.DEFAULT_BOUNDS)
	            js.bounds = this.bounds;
	        return js;
	    };
	    TimeRange.prototype.toJSON = function () {
	        return this.toJS();
	    };
	    TimeRange.prototype.equals = function (other) {
	        return TimeRange.isTimeRange(other) && this._equalsHelper(other);
	    };
	    TimeRange.prototype.toInterval = function () {
	        var _a = this, start = _a.start, end = _a.end, bounds = _a.bounds;
	        var interval = [START_OF_TIME, END_OF_TIME];
	        if (start) {
	            if (bounds[0] === '(')
	                start = new Date(start.valueOf() + 1);
	            interval[0] = dateToIntervalPart(start);
	        }
	        if (end) {
	            if (bounds[1] === ']')
	                end = new Date(end.valueOf() + 1);
	            interval[1] = dateToIntervalPart(end);
	        }
	        return interval.join("/");
	    };
	    TimeRange.prototype.midpoint = function () {
	        return new Date((this.start.valueOf() + this.end.valueOf()) / 2);
	    };
	    TimeRange.prototype.isAligned = function (duration, timezone) {
	        var _a = this, start = _a.start, end = _a.end;
	        return (!start || duration.isAligned(start, timezone)) && (!end || duration.isAligned(end, timezone));
	    };
	    TimeRange.type = 'TIME_RANGE';
	    return TimeRange;
	}(Range));
	check = TimeRange;
	Range.register(TimeRange);
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};


	var check;
	var StringRange = exports.StringRange = (function (_super) {
	    __extends(StringRange, _super);
	    function StringRange(parameters) {
	        var start = parameters.start, end = parameters.end;
	        if (typeof start !== 'string' && start !== null)
	            throw new TypeError('`start` must be a string');
	        if (typeof end !== 'string' && end !== null)
	            throw new TypeError('`end` must be a string');
	        _super.call(this, start, end, parameters.bounds);
	    }
	    StringRange.isStringRange = function (candidate) {
	        return isInstanceOf(candidate, StringRange);
	    };
	    StringRange.fromString = function (s) {
	        return new StringRange({ start: s, end: s, bounds: '[]' });
	    };
	    StringRange.fromJS = function (parameters) {
	        if (typeof parameters !== "object") {
	            throw new Error("unrecognizable StringRange");
	        }
	        var start = parameters.start;
	        var end = parameters.end;
	        var bounds = parameters.bounds;
	        return new StringRange({
	            start: start, end: end, bounds: bounds
	        });
	    };
	    StringRange.prototype.valueOf = function () {
	        return {
	            start: this.start,
	            end: this.end,
	            bounds: this.bounds
	        };
	    };
	    StringRange.prototype.toJS = function () {
	        var js = {
	            start: this.start,
	            end: this.end
	        };
	        if (this.bounds !== Range.DEFAULT_BOUNDS)
	            js.bounds = this.bounds;
	        return js;
	    };
	    StringRange.prototype.toJSON = function () {
	        return this.toJS();
	    };
	    StringRange.prototype.equals = function (other) {
	        return StringRange.isStringRange(other) && this._equalsHelper(other);
	    };
	    StringRange.prototype.midpoint = function () {
	        throw new Error("midpoint not supported in string range");
	    };
	    StringRange.prototype._zeroEndpoint = function () {
	        return "";
	    };
	    StringRange.type = 'STRING_RANGE';
	    return StringRange;
	}(Range));
	check = StringRange;
	Range.register(StringRange);







	function dateString(date) {
	    return date.toISOString();
	}
	function arrayFromJS(xs, setType) {
	    return xs.map(function (x) { return valueFromJS(x, setType); });
	}
	function unifyElements(elements) {
	    var newElements = Object.create(null);
	    for (var _i = 0, elements_1 = elements; _i < elements_1.length; _i++) {
	        var accumulator = elements_1[_i];
	        var newElementsKeys = Object.keys(newElements);
	        for (var _a = 0, newElementsKeys_1 = newElementsKeys; _a < newElementsKeys_1.length; _a++) {
	            var newElementsKey = newElementsKeys_1[_a];
	            var newElement = newElements[newElementsKey];
	            var unionElement = accumulator.union(newElement);
	            if (unionElement) {
	                accumulator = unionElement;
	                delete newElements[newElementsKey];
	            }
	        }
	        newElements[accumulator.toString()] = accumulator;
	    }
	    return Object.keys(newElements).map(function (k) { return newElements[k]; });
	}
	function intersectElements(elements1, elements2) {
	    var newElements = [];
	    for (var _i = 0, elements1_1 = elements1; _i < elements1_1.length; _i++) {
	        var element1 = elements1_1[_i];
	        for (var _a = 0, elements2_1 = elements2; _a < elements2_1.length; _a++) {
	            var element2 = elements2_1[_a];
	            var intersect = element1.intersect(element2);
	            if (intersect)
	                newElements.push(intersect);
	        }
	    }
	    return newElements;
	}
	var typeUpgrades = {
	    'NUMBER': 'NUMBER_RANGE',
	    'TIME': 'TIME_RANGE',
	    'STRING': 'STRING_RANGE'
	};
	var check;
	var Set = exports.Set = (function () {
	    function Set(parameters) {
	        var setType = parameters.setType;
	        this.setType = setType;
	        var keyFn = setType === 'TIME' ? dateString : String;
	        this.keyFn = keyFn;
	        var elements = parameters.elements;
	        var newElements = null;
	        var hash = Object.create(null);
	        for (var i = 0; i < elements.length; i++) {
	            var element = elements[i];
	            var key = keyFn(element);
	            if (hash[key]) {
	                if (!newElements)
	                    newElements = elements.slice(0, i);
	            }
	            else {
	                hash[key] = element;
	                if (newElements)
	                    newElements.push(element);
	            }
	        }
	        if (newElements) {
	            elements = newElements;
	        }
	        if (setType === 'NUMBER_RANGE' || setType === 'TIME_RANGE' || setType === 'STRING_RANGE') {
	            elements = unifyElements(elements);
	        }
	        this.elements = elements;
	        this.hash = hash;
	    }
	    Set.isSet = function (candidate) {
	        return isInstanceOf(candidate, Set);
	    };
	    Set.convertToSet = function (thing) {
	        var thingType = getValueType(thing);
	        if (isSetType(thingType))
	            return thing;
	        return Set.fromJS({ setType: thingType, elements: [thing] });
	    };
	    Set.generalUnion = function (a, b) {
	        var aSet = Set.convertToSet(a);
	        var bSet = Set.convertToSet(b);
	        var aSetType = aSet.setType;
	        var bSetType = bSet.setType;
	        if (typeUpgrades[aSetType] === bSetType) {
	            aSet = aSet.upgradeType();
	        }
	        else if (typeUpgrades[bSetType] === aSetType) {
	            bSet = bSet.upgradeType();
	        }
	        else if (aSetType !== bSetType) {
	            return null;
	        }
	        return aSet.union(bSet).simplify();
	    };
	    Set.generalIntersect = function (a, b) {
	        var aSet = Set.convertToSet(a);
	        var bSet = Set.convertToSet(b);
	        var aSetType = aSet.setType;
	        var bSetType = bSet.setType;
	        if (typeUpgrades[aSetType] === bSetType) {
	            aSet = aSet.upgradeType();
	        }
	        else if (typeUpgrades[bSetType] === aSetType) {
	            bSet = bSet.upgradeType();
	        }
	        else if (aSetType !== bSetType) {
	            return null;
	        }
	        return aSet.intersect(bSet).simplify();
	    };
	    Set.fromJS = function (parameters) {
	        if (Array.isArray(parameters)) {
	            parameters = { elements: parameters };
	        }
	        if (typeof parameters !== "object") {
	            throw new Error("unrecognizable set");
	        }
	        var setType = parameters.setType;
	        var elements = parameters.elements;
	        if (!setType) {
	            setType = getValueType(elements.length ? elements[0] : null);
	        }
	        return new Set({
	            setType: setType,
	            elements: arrayFromJS(elements, setType)
	        });
	    };
	    Set.prototype.valueOf = function () {
	        return {
	            setType: this.setType,
	            elements: this.elements
	        };
	    };
	    Set.prototype.toJS = function () {
	        return {
	            setType: this.setType,
	            elements: this.elements.map(valueToJS)
	        };
	    };
	    Set.prototype.toJSON = function () {
	        return this.toJS();
	    };
	    Set.prototype.toString = function () {
	        if (this.setType === "NULL")
	            return "null";
	        return "" + this.elements.map(String).join(", ");
	    };
	    Set.prototype.equals = function (other) {
	        return Set.isSet(other) &&
	            this.setType === other.setType &&
	            this.elements.length === other.elements.length &&
	            this.elements.slice().sort().join('') === other.elements.slice().sort().join('');
	    };
	    Set.prototype.cardinality = function () {
	        return this.size();
	    };
	    Set.prototype.size = function () {
	        return this.elements.length;
	    };
	    Set.prototype.empty = function () {
	        return this.elements.length === 0;
	    };
	    Set.prototype.simplify = function () {
	        var simpleSet = this.downgradeType();
	        var simpleSetElements = simpleSet.elements;
	        return simpleSetElements.length === 1 ? simpleSetElements[0] : simpleSet;
	    };
	    Set.prototype.getType = function () {
	        return 'SET/' + this.setType;
	    };
	    Set.prototype.upgradeType = function () {
	        if (this.setType === 'NUMBER') {
	            return Set.fromJS({
	                setType: 'NUMBER_RANGE',
	                elements: this.elements.map(NumberRange.fromNumber)
	            });
	        }
	        else if (this.setType === 'TIME') {
	            return Set.fromJS({
	                setType: 'TIME_RANGE',
	                elements: this.elements.map(TimeRange.fromTime)
	            });
	        }
	        else if (this.setType === 'STRING') {
	            return Set.fromJS({
	                setType: 'STRING_RANGE',
	                elements: this.elements.map(StringRange.fromString)
	            });
	        }
	        else {
	            return this;
	        }
	    };
	    Set.prototype.downgradeType = function () {
	        if (this.setType === 'NUMBER_RANGE' || this.setType === 'TIME_RANGE' || this.setType === 'STRING_RANGE') {
	            var elements = this.elements;
	            var simpleElements = [];
	            for (var _i = 0, elements_2 = elements; _i < elements_2.length; _i++) {
	                var element = elements_2[_i];
	                if (element.degenerate()) {
	                    simpleElements.push(element.start);
	                }
	                else {
	                    return this;
	                }
	            }
	            return Set.fromJS(simpleElements);
	        }
	        else {
	            return this;
	        }
	    };
	    Set.prototype.extent = function () {
	        var setType = this.setType;
	        if (hasOwnProperty(typeUpgrades, setType)) {
	            return this.upgradeType().extent();
	        }
	        if (setType !== 'NUMBER_RANGE' && setType !== 'TIME_RANGE' && setType !== 'STRING_RANGE')
	            return null;
	        var elements = this.elements;
	        var extent = elements[0] || null;
	        for (var i = 1; i < elements.length; i++) {
	            extent = extent.extend(elements[i]);
	        }
	        return extent;
	    };
	    Set.prototype.union = function (other) {
	        if (this.empty())
	            return other;
	        if (other.empty())
	            return this;
	        if (this.setType !== other.setType) {
	            throw new TypeError("can not union sets of different types");
	        }
	        var newElements = this.elements.slice();
	        var otherElements = other.elements;
	        for (var _i = 0, otherElements_1 = otherElements; _i < otherElements_1.length; _i++) {
	            var el = otherElements_1[_i];
	            if (this.contains(el))
	                continue;
	            newElements.push(el);
	        }
	        return new Set({
	            setType: this.setType,
	            elements: newElements
	        });
	    };
	    Set.prototype.intersect = function (other) {
	        if (this.empty() || other.empty())
	            return Set.EMPTY;
	        var setType = this.setType;
	        if (this.setType !== other.setType) {
	            throw new TypeError("can not intersect sets of different types");
	        }
	        var thisElements = this.elements;
	        var newElements;
	        if (setType === 'NUMBER_RANGE' || setType === 'TIME_RANGE' || setType === 'STRING_RANGE') {
	            var otherElements = other.elements;
	            newElements = intersectElements(thisElements, otherElements);
	        }
	        else {
	            newElements = [];
	            for (var _i = 0, thisElements_1 = thisElements; _i < thisElements_1.length; _i++) {
	                var el = thisElements_1[_i];
	                if (!other.contains(el))
	                    continue;
	                newElements.push(el);
	            }
	        }
	        return new Set({
	            setType: this.setType,
	            elements: newElements
	        });
	    };
	    Set.prototype.overlap = function (other) {
	        if (this.empty() || other.empty())
	            return false;
	        if (this.setType !== other.setType) {
	            throw new TypeError("can determine overlap sets of different types");
	        }
	        var thisElements = this.elements;
	        for (var _i = 0, thisElements_2 = thisElements; _i < thisElements_2.length; _i++) {
	            var el = thisElements_2[_i];
	            if (!other.contains(el))
	                continue;
	            return true;
	        }
	        return false;
	    };
	    Set.prototype.contains = function (value) {
	        var setType = this.setType;
	        if ((setType === 'NUMBER_RANGE' && typeof value === 'number')
	            || (setType === 'TIME_RANGE' && isDate(value))
	            || (setType === 'STRING_RANGE' && typeof value === 'string')) {
	            return this.containsWithin(value);
	        }
	        return hasOwnProperty(this.hash, this.keyFn(value));
	    };
	    Set.prototype.containsWithin = function (value) {
	        var elements = this.elements;
	        for (var k in elements) {
	            if (!hasOwnProperty(elements, k))
	                continue;
	            if (elements[k].contains(value))
	                return true;
	        }
	        return false;
	    };
	    Set.prototype.add = function (value) {
	        var setType = this.setType;
	        var valueType = getValueType(value);
	        if (setType === 'NULL')
	            setType = valueType;
	        if (valueType !== 'NULL' && setType !== valueType)
	            throw new Error('value type must match');
	        if (this.contains(value))
	            return this;
	        return new Set({
	            setType: setType,
	            elements: this.elements.concat([value])
	        });
	    };
	    Set.prototype.remove = function (value) {
	        if (!this.contains(value))
	            return this;
	        var keyFn = this.keyFn;
	        var key = keyFn(value);
	        return new Set({
	            setType: this.setType,
	            elements: this.elements.filter(function (element) { return keyFn(element) !== key; })
	        });
	    };
	    Set.prototype.toggle = function (value) {
	        return this.contains(value) ? this.remove(value) : this.add(value);
	    };
	    Set.type = 'SET';
	    return Set;
	}());
	check = Set;
	Set.EMPTY = Set.fromJS([]);











	var foldContext = exports.foldContext = function(d, c) {
	    var newContext = Object.create(c);
	    for (var k in d) {
	        newContext[k] = d[k];
	    }
	    return newContext;
	}
	var directionFns = {
	    ascending: function (a, b) {
	        if (a == null) {
	            return b == null ? 0 : -1;
	        }
	        else {
	            if (a.compare)
	                return a.compare(b);
	            if (b == null)
	                return 1;
	        }
	        return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;
	    },
	    descending: function (a, b) {
	        if (b == null) {
	            return a == null ? 0 : -1;
	        }
	        else {
	            if (b.compare)
	                return b.compare(a);
	            if (a == null)
	                return 1;
	        }
	        return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;
	    }
	};
	function typePreference(type) {
	    switch (type) {
	        case 'TIME': return 0;
	        case 'STRING': return 1;
	        case 'DATASET': return 5;
	        default: return 2;
	    }
	}
	function uniqueColumns(columns) {
	    var seen = {};
	    var uniqueColumns = [];
	    for (var _i = 0, columns_1 = columns; _i < columns_1.length; _i++) {
	        var column = columns_1[_i];
	        if (!seen[column.name]) {
	            uniqueColumns.push(column);
	            seen[column.name] = true;
	        }
	    }
	    return uniqueColumns;
	}
	function flattenColumns(nestedColumns, prefixColumns) {
	    var flatColumns = [];
	    var i = 0;
	    var prefixString = '';
	    while (i < nestedColumns.length) {
	        var nestedColumn = nestedColumns[i];
	        if (nestedColumn.type === 'DATASET') {
	            nestedColumns = nestedColumn.columns;
	            if (prefixColumns)
	                prefixString += nestedColumn.name + '.';
	            i = 0;
	        }
	        else {
	            flatColumns.push({
	                name: prefixString + nestedColumn.name,
	                type: nestedColumn.type
	            });
	            i++;
	        }
	    }
	    return uniqueColumns(flatColumns);
	}
	function removeLineBreaks(v) {
	    return v.replace(/(?:\r\n|\r|\n)/g, ' ');
	}
	var escapeFnCSV = function (v) {
	    v = removeLineBreaks(v);
	    if (v.indexOf('"') === -1 && v.indexOf(",") === -1)
	        return v;
	    return "\"" + v.replace(/"/g, '""') + "\"";
	};
	var escapeFnTSV = function (v) {
	    return removeLineBreaks(v).replace(/\t/g, "").replace(/"/g, '""');
	};
	var typeOrder = {
	    'NULL': 0,
	    'TIME': 1,
	    'TIME_RANGE': 2,
	    'SET/TIME': 3,
	    'SET/TIME_RANGE': 4,
	    'STRING': 5,
	    'SET/STRING': 6,
	    'BOOLEAN': 7,
	    'NUMBER': 8,
	    'NUMBER_RANGE': 9,
	    'SET/NUMBER': 10,
	    'SET/NUMBER_RANGE': 11,
	    'DATASET': 12
	};
	var defaultFormatter = {
	    'NULL': function (v) { return 'NULL'; },
	    'TIME': function (v) { return v.toISOString(); },
	    'TIME_RANGE': function (v) { return '' + v; },
	    'SET/TIME': function (v) { return '' + v; },
	    'SET/TIME_RANGE': function (v) { return '' + v; },
	    'STRING': function (v) { return '' + v; },
	    'SET/STRING': function (v) { return '' + v; },
	    'BOOLEAN': function (v) { return '' + v; },
	    'NUMBER': function (v) { return '' + v; },
	    'NUMBER_RANGE': function (v) { return '' + v; },
	    'SET/NUMBER': function (v) { return '' + v; },
	    'SET/NUMBER_RANGE': function (v) { return '' + v; },
	    'DATASET': function (v) { return 'DATASET'; }
	};
	function isBoolean(b) {
	    return b === true || b === false;
	}
	function isNumber(n) {
	    return n !== null && !isNaN(Number(n));
	}
	function isString(str) {
	    return typeof str === "string";
	}
	function getAttributeInfo(name, attributeValue) {
	    if (attributeValue == null)
	        return null;
	    if (isDate(attributeValue)) {
	        return new AttributeInfo({ name: name, type: 'TIME' });
	    }
	    else if (isBoolean(attributeValue)) {
	        return new AttributeInfo({ name: name, type: 'BOOLEAN' });
	    }
	    else if (isNumber(attributeValue)) {
	        return new AttributeInfo({ name: name, type: 'NUMBER' });
	    }
	    else if (isString(attributeValue)) {
	        return new AttributeInfo({ name: name, type: 'STRING' });
	    }
	    else if (NumberRange.isNumberRange(attributeValue)) {
	        return new AttributeInfo({ name: name, type: 'NUMBER_RANGE' });
	    }
	    else if (StringRange.isStringRange(attributeValue)) {
	        return new AttributeInfo({ name: name, type: 'STRING_RANGE' });
	    }
	    else if (TimeRange.isTimeRange(attributeValue)) {
	        return new AttributeInfo({ name: name, type: 'TIME_RANGE' });
	    }
	    else if (Set.isSet(attributeValue)) {
	        return new AttributeInfo({ name: name, type: attributeValue.getType() });
	    }
	    else if (Dataset.isDataset(attributeValue)) {
	        return new AttributeInfo({ name: name, type: 'DATASET', datasetType: attributeValue.getFullType().datasetType });
	    }
	    else {
	        throw new Error("Could not introspect");
	    }
	}
	function datumFromJS(js) {
	    if (typeof js !== 'object')
	        throw new TypeError("datum must be an object");
	    var datum = Object.create(null);
	    for (var k in js) {
	        if (!hasOwnProperty(js, k))
	            continue;
	        datum[k] = valueFromJS(js[k]);
	    }
	    return datum;
	}
	function datumToJS(datum) {
	    var js = {};
	    for (var k in datum) {
	        var v = datum[k];
	        if (v && v.suppress)
	            continue;
	        js[k] = valueToJSInlineType(v);
	    }
	    return js;
	}
	function joinDatums(datumA, datumB) {
	    var newDatum = Object.create(null);
	    for (var k in datumA) {
	        newDatum[k] = datumA[k];
	    }
	    for (var k in datumB) {
	        newDatum[k] = datumB[k];
	    }
	    return newDatum;
	}
	function copy(obj) {
	    var newObj = {};
	    var k;
	    for (k in obj) {
	        if (hasOwnProperty(obj, k))
	            newObj[k] = obj[k];
	    }
	    return newObj;
	}
	var check;
	var Dataset = exports.Dataset = (function () {
	    function Dataset(parameters) {
	        this.attributes = null;
	        this.keys = null;
	        if (parameters.suppress === true)
	            this.suppress = true;
	        if (parameters.keys) {
	            this.keys = parameters.keys;
	        }
	        var data = parameters.data;
	        if (!Array.isArray(data)) {
	            throw new TypeError("must have a `data` array");
	        }
	        this.data = data;
	        var attributes = parameters.attributes;
	        if (!attributes)
	            attributes = Dataset.getAttributesFromData(data);
	        var attributeOverrides = parameters.attributeOverrides;
	        if (attributeOverrides) {
	            attributes = AttributeInfo.override(attributes, attributeOverrides);
	        }
	        this.attributes = attributes;
	    }
	    Dataset.isDataset = function (candidate) {
	        return isInstanceOf(candidate, Dataset);
	    };
	    Dataset.getAttributesFromData = function (data) {
	        if (!data.length)
	            return [];
	        var attributeNamesToIntrospect = Object.keys(data[0]);
	        var attributes = [];
	        for (var _i = 0, data_1 = data; _i < data_1.length; _i++) {
	            var datum = data_1[_i];
	            var attributeNamesStillToIntrospect = [];
	            for (var _a = 0, attributeNamesToIntrospect_1 = attributeNamesToIntrospect; _a < attributeNamesToIntrospect_1.length; _a++) {
	                var attributeNameToIntrospect = attributeNamesToIntrospect_1[_a];
	                var attributeInfo = getAttributeInfo(attributeNameToIntrospect, datum[attributeNameToIntrospect]);
	                if (attributeInfo) {
	                    attributes.push(attributeInfo);
	                }
	                else {
	                    attributeNamesStillToIntrospect.push(attributeNameToIntrospect);
	                }
	            }
	            attributeNamesToIntrospect = attributeNamesStillToIntrospect;
	            if (!attributeNamesToIntrospect.length)
	                break;
	        }
	        for (var _b = 0, attributeNamesToIntrospect_2 = attributeNamesToIntrospect; _b < attributeNamesToIntrospect_2.length; _b++) {
	            var attributeName = attributeNamesToIntrospect_2[_b];
	            attributes.push(new AttributeInfo({ name: attributeName, type: 'STRING' }));
	        }
	        attributes.sort(function (a, b) {
	            var typeDiff = typeOrder[a.type] - typeOrder[b.type];
	            if (typeDiff)
	                return typeDiff;
	            return a.name.localeCompare(b.name);
	        });
	        return attributes;
	    };
	    Dataset.parseJSON = function (text) {
	        text = text.trim();
	        var firstChar = text[0];
	        if (firstChar[0] === '[') {
	            try {
	                return JSON.parse(text);
	            }
	            catch (e) {
	                throw new Error("could not parse");
	            }
	        }
	        else if (firstChar[0] === '{') {
	            return text.split(/\r?\n/).map(function (line, i) {
	                try {
	                    return JSON.parse(line);
	                }
	                catch (e) {
	                    throw new Error("problem in line: " + i + ": '" + line + "'");
	                }
	            });
	        }
	        else {
	            throw new Error("Unsupported start, starts with '" + firstChar[0] + "'");
	        }
	    };
	    Dataset.fromJS = function (parameters) {
	        if (Array.isArray(parameters)) {
	            parameters = { data: parameters };
	        }
	        if (!Array.isArray(parameters.data)) {
	            throw new Error('must have data');
	        }
	        var value = {};
	        if (hasOwnProperty(parameters, 'attributes')) {
	            value.attributes = AttributeInfo.fromJSs(parameters.attributes);
	        }
	        else if (hasOwnProperty(parameters, 'attributeOverrides')) {
	            value.attributeOverrides = AttributeInfo.fromJSs(parameters.attributeOverrides);
	        }
	        value.keys = parameters.keys;
	        value.data = parameters.data.map(datumFromJS);
	        return new Dataset(value);
	    };
	    Dataset.prototype.valueOf = function () {
	        var value = {};
	        if (this.suppress)
	            value.suppress = true;
	        if (this.attributes)
	            value.attributes = this.attributes;
	        if (this.keys)
	            value.keys = this.keys;
	        value.data = this.data;
	        return value;
	    };
	    Dataset.prototype.toJS = function () {
	        return this.data.map(datumToJS);
	    };
	    Dataset.prototype.toString = function () {
	        return "Dataset(" + this.data.length + ")";
	    };
	    Dataset.prototype.toJSON = function () {
	        return this.toJS();
	    };
	    Dataset.prototype.equals = function (other) {
	        return Dataset.isDataset(other) &&
	            this.data.length === other.data.length;
	    };
	    Dataset.prototype.hide = function () {
	        var value = this.valueOf();
	        value.suppress = true;
	        return new Dataset(value);
	    };
	    Dataset.prototype.basis = function () {
	        var data = this.data;
	        return data.length === 1 && Object.keys(data[0]).length === 0;
	    };
	    Dataset.prototype.hasExternal = function () {
	        if (!this.data.length)
	            return false;
	        return datumHasExternal(this.data[0]);
	    };
	    Dataset.prototype.getFullType = function () {
	        var attributes = this.attributes;
	        if (!attributes)
	            throw new Error("dataset has not been introspected");
	        var myDatasetType = {};
	        for (var _i = 0, attributes_1 = attributes; _i < attributes_1.length; _i++) {
	            var attribute = attributes_1[_i];
	            var attrName = attribute.name;
	            if (attribute.type === 'DATASET') {
	                myDatasetType[attrName] = {
	                    type: 'DATASET',
	                    datasetType: attribute.datasetType
	                };
	            }
	            else {
	                myDatasetType[attrName] = {
	                    type: attribute.type
	                };
	            }
	        }
	        return {
	            type: 'DATASET',
	            datasetType: myDatasetType
	        };
	    };
	    Dataset.prototype.select = function (attrs) {
	        var attributes = this.attributes;
	        var newAttributes = [];
	        var attrLookup = Object.create(null);
	        for (var _i = 0, attrs_1 = attrs; _i < attrs_1.length; _i++) {
	            var attr = attrs_1[_i];
	            attrLookup[attr] = true;
	            var existingAttribute = findByName(attributes, attr);
	            if (existingAttribute)
	                newAttributes.push(existingAttribute);
	        }
	        var data = this.data;
	        var n = data.length;
	        var newData = new Array(n);
	        for (var i = 0; i < n; i++) {
	            var datum = data[i];
	            var newDatum = Object.create(null);
	            for (var key in datum) {
	                if (attrLookup[key]) {
	                    newDatum[key] = datum[key];
	                }
	            }
	            newData[i] = newDatum;
	        }
	        var value = this.valueOf();
	        value.attributes = newAttributes;
	        value.data = newData;
	        return new Dataset(value);
	    };
	    Dataset.prototype.apply = function (name, exFn, type, context) {
	        var data = this.data;
	        var n = data.length;
	        var newData = new Array(n);
	        for (var i = 0; i < n; i++) {
	            var datum = data[i];
	            var newDatum = Object.create(null);
	            for (var key in datum)
	                newDatum[key] = datum[key];
	            newDatum[name] = exFn(datum, context, i);
	            newData[i] = newDatum;
	        }
	        var datasetType = null;
	        if (type === 'DATASET' && newData[0] && newData[0][name]) {
	            datasetType = newData[0][name].getFullType().datasetType;
	        }
	        var value = this.valueOf();
	        value.attributes = overrideByName(value.attributes, new AttributeInfo({ name: name, type: type, datasetType: datasetType }));
	        value.data = newData;
	        return new Dataset(value);
	    };
	    Dataset.prototype.applyPromise = function (name, exFn, type, context) {
	        var _this = this;
	        var value = this.valueOf();
	        var promises = value.data.map(function (datum) { return exFn(datum, context); });
	        return Q.all(promises).then(function (values) {
	            return _this.apply(name, (function (d, c, i) { return values[i]; }), type, context);
	        });
	    };
	    Dataset.prototype.filter = function (exFn, context) {
	        var value = this.valueOf();
	        value.data = value.data.filter(function (datum) { return exFn(datum, context); });
	        return new Dataset(value);
	    };
	    Dataset.prototype.sort = function (exFn, direction, context) {
	        var value = this.valueOf();
	        var directionFn = directionFns[direction];
	        value.data = this.data.sort(function (a, b) {
	            return directionFn(exFn(a, context), exFn(b, context));
	        });
	        return new Dataset(value);
	    };
	    Dataset.prototype.limit = function (limit) {
	        var data = this.data;
	        if (data.length <= limit)
	            return this;
	        var value = this.valueOf();
	        value.data = data.slice(0, limit);
	        return new Dataset(value);
	    };
	    Dataset.prototype.count = function () {
	        return this.data.length;
	    };
	    Dataset.prototype.sum = function (exFn, context) {
	        var data = this.data;
	        var sum = 0;
	        for (var _i = 0, data_2 = data; _i < data_2.length; _i++) {
	            var datum = data_2[_i];
	            sum += exFn(datum, context);
	        }
	        return sum;
	    };
	    Dataset.prototype.average = function (exFn, context) {
	        var count = this.count();
	        return count ? (this.sum(exFn, context) / count) : null;
	    };
	    Dataset.prototype.min = function (exFn, context) {
	        var data = this.data;
	        var min = Infinity;
	        for (var _i = 0, data_3 = data; _i < data_3.length; _i++) {
	            var datum = data_3[_i];
	            var v = exFn(datum, context);
	            if (v < min)
	                min = v;
	        }
	        return min;
	    };
	    Dataset.prototype.max = function (exFn, context) {
	        var data = this.data;
	        var max = -Infinity;
	        for (var _i = 0, data_4 = data; _i < data_4.length; _i++) {
	            var datum = data_4[_i];
	            var v = exFn(datum, context);
	            if (max < v)
	                max = v;
	        }
	        return max;
	    };
	    Dataset.prototype.countDistinct = function (exFn, context) {
	        var data = this.data;
	        var seen = Object.create(null);
	        var count = 0;
	        for (var _i = 0, data_5 = data; _i < data_5.length; _i++) {
	            var datum = data_5[_i];
	            var v = exFn(datum, context);
	            if (!seen[v]) {
	                seen[v] = 1;
	                ++count;
	            }
	        }
	        return count;
	    };
	    Dataset.prototype.quantile = function (exFn, quantile, context) {
	        var data = this.data;
	        var vs = [];
	        for (var _i = 0, data_6 = data; _i < data_6.length; _i++) {
	            var datum = data_6[_i];
	            var v = exFn(datum, context);
	            if (v != null)
	                vs.push(v);
	        }
	        vs.sort(function (a, b) { return a - b; });
	        var n = vs.length;
	        if (quantile === 0)
	            return vs[0];
	        if (quantile === 1)
	            return vs[n - 1];
	        var rank = n * quantile - 1;
	        if (rank === Math.floor(rank)) {
	            return (vs[rank] + vs[rank + 1]) / 2;
	        }
	        else {
	            return vs[Math.ceil(rank)];
	        }
	    };
	    Dataset.prototype.split = function (splitFns, datasetName, context) {
	        var _a = this, data = _a.data, attributes = _a.attributes;
	        var keys = Object.keys(splitFns);
	        var numberOfKeys = keys.length;
	        var splitFnList = keys.map(function (k) { return splitFns[k]; });
	        var splits = {};
	        var datumGroups = {};
	        var finalData = [];
	        var finalDataset = [];
	        function addDatum(datum, valueList) {
	            var key = valueList.join(';_PLYw00d_;');
	            if (hasOwnProperty(datumGroups, key)) {
	                datumGroups[key].push(datum);
	            }
	            else {
	                var newDatum = Object.create(null);
	                for (var i = 0; i < numberOfKeys; i++) {
	                    newDatum[keys[i]] = valueList[i];
	                }
	                finalDataset.push(datumGroups[key] = [datum]);
	                splits[key] = newDatum;
	                finalData.push(newDatum);
	            }
	        }
	        for (var _i = 0, data_7 = data; _i < data_7.length; _i++) {
	            var datum = data_7[_i];
	            var valueList = splitFnList.map(function (splitFn) { return splitFn(datum, context); });
	            if (Set.isSet(valueList[0])) {
	                if (valueList.length > 1)
	                    throw new Error('multi-dimensional set split is not implemented');
	                var elements = valueList[0].elements;
	                for (var _b = 0, elements_1 = elements; _b < elements_1.length; _b++) {
	                    var element = elements_1[_b];
	                    addDatum(datum, [element]);
	                }
	            }
	            else {
	                addDatum(datum, valueList);
	            }
	        }
	        for (var i = 0; i < finalData.length; i++) {
	            finalData[i][datasetName] = new Dataset({
	                suppress: true,
	                attributes: attributes,
	                data: finalDataset[i]
	            });
	        }
	        return new Dataset({
	            keys: keys,
	            data: finalData
	        });
	    };
	    Dataset.prototype.introspect = function () {
	        console.error('introspection is always done, `.introspect()` method never needs to be called');
	    };
	    Dataset.prototype.getExternals = function () {
	        if (this.data.length === 0)
	            return [];
	        var datum = this.data[0];
	        var externals = [];
	        Object.keys(datum).forEach(function (applyName) {
	            var applyValue = datum[applyName];
	            if (applyValue instanceof Dataset) {
	                externals.push.apply(externals, applyValue.getExternals());
	            }
	        });
	        return External.deduplicateExternals(externals);
	    };
	    Dataset.prototype.join = function (other) {
	        if (!other)
	            return this;
	        var thisKey = this.keys[0];
	        if (!thisKey)
	            throw new Error('join lhs must have a key (be a product of a split)');
	        var otherKey = other.keys[0];
	        if (!otherKey)
	            throw new Error('join rhs must have a key (be a product of a split)');
	        var thisData = this.data;
	        var otherData = other.data;
	        var k;
	        var mapping = Object.create(null);
	        for (var i = 0; i < thisData.length; i++) {
	            var datum = thisData[i];
	            k = String(thisKey ? datum[thisKey] : i);
	            mapping[k] = [datum];
	        }
	        for (var i = 0; i < otherData.length; i++) {
	            var datum = otherData[i];
	            k = String(otherKey ? datum[otherKey] : i);
	            if (!mapping[k])
	                mapping[k] = [];
	            mapping[k].push(datum);
	        }
	        var newData = [];
	        for (var j in mapping) {
	            var datums = mapping[j];
	            if (datums.length === 1) {
	                newData.push(datums[0]);
	            }
	            else {
	                newData.push(joinDatums(datums[0], datums[1]));
	            }
	        }
	        return new Dataset({ data: newData });
	    };
	    Dataset.prototype.findDatumByAttribute = function (attribute, value) {
	        return find(this.data, function (d) { return generalEqual(d[attribute], value); });
	    };
	    Dataset.prototype.getNestedColumns = function () {
	        var nestedColumns = [];
	        var attributes = this.attributes;
	        var subDatasetAdded = false;
	        for (var _i = 0, attributes_2 = attributes; _i < attributes_2.length; _i++) {
	            var attribute = attributes_2[_i];
	            var column = {
	                name: attribute.name,
	                type: attribute.type
	            };
	            if (attribute.type === 'DATASET') {
	                var subDataset = this.data[0][attribute.name];
	                if (!subDatasetAdded && Dataset.isDataset(subDataset)) {
	                    subDatasetAdded = true;
	                    column.columns = subDataset.getNestedColumns();
	                    nestedColumns.push(column);
	                }
	            }
	            else {
	                nestedColumns.push(column);
	            }
	        }
	        return nestedColumns;
	    };
	    Dataset.prototype.getColumns = function (options) {
	        if (options === void 0) { options = {}; }
	        var prefixColumns = options.prefixColumns;
	        return flattenColumns(this.getNestedColumns(), prefixColumns);
	    };
	    Dataset.prototype._flattenHelper = function (nestedColumns, prefix, order, nestingName, parentName, nesting, context, flat) {
	        var nestedColumnsLength = nestedColumns.length;
	        if (!nestedColumnsLength)
	            return;
	        var data = this.data;
	        var datasetColumn = nestedColumns.filter(function (nestedColumn) { return nestedColumn.type === 'DATASET'; })[0];
	        for (var _i = 0, data_8 = data; _i < data_8.length; _i++) {
	            var datum = data_8[_i];
	            var flatDatum = context ? copy(context) : {};
	            if (nestingName)
	                flatDatum[nestingName] = nesting;
	            if (parentName)
	                flatDatum[parentName] = context;
	            for (var _a = 0, nestedColumns_1 = nestedColumns; _a < nestedColumns_1.length; _a++) {
	                var flattenedColumn = nestedColumns_1[_a];
	                if (flattenedColumn.type === 'DATASET')
	                    continue;
	                var flatName = (prefix !== null ? prefix : '') + flattenedColumn.name;
	                flatDatum[flatName] = datum[flattenedColumn.name];
	            }
	            if (datasetColumn) {
	                var nextPrefix = null;
	                if (prefix !== null)
	                    nextPrefix = prefix + datasetColumn.name + '.';
	                if (order === 'preorder')
	                    flat.push(flatDatum);
	                datum[datasetColumn.name]._flattenHelper(datasetColumn.columns, nextPrefix, order, nestingName, parentName, nesting + 1, flatDatum, flat);
	                if (order === 'postorder')
	                    flat.push(flatDatum);
	            }
	            if (!datasetColumn)
	                flat.push(flatDatum);
	        }
	    };
	    Dataset.prototype.flatten = function (options) {
	        if (options === void 0) { options = {}; }
	        var prefixColumns = options.prefixColumns;
	        var order = options.order;
	        var nestingName = options.nestingName;
	        var parentName = options.parentName;
	        var nestedColumns = this.getNestedColumns();
	        var flatData = [];
	        if (nestedColumns.length) {
	            this._flattenHelper(nestedColumns, (prefixColumns ? '' : null), order, nestingName, parentName, 0, null, flatData);
	        }
	        return flatData;
	    };
	    Dataset.prototype.toTabular = function (tabulatorOptions) {
	        var formatter = tabulatorOptions.formatter || {};
	        var finalizer = tabulatorOptions.finalizer;
	        var data = this.flatten(tabulatorOptions);
	        var columns = this.getColumns(tabulatorOptions);
	        var lines = [];
	        lines.push(columns.map(function (c) { return c.name; }).join(tabulatorOptions.separator || ','));
	        for (var i = 0; i < data.length; i++) {
	            var datum = data[i];
	            lines.push(columns.map(function (c) {
	                var value = datum[c.name];
	                var formatted = String((formatter[c.type] || defaultFormatter[c.type])(value));
	                var finalized = formatted && finalizer ? finalizer(formatted) : formatted;
	                return finalized;
	            }).join(tabulatorOptions.separator || ','));
	        }
	        var lineBreak = tabulatorOptions.lineBreak || '\n';
	        return lines.join(lineBreak) + (tabulatorOptions.finalLineBreak === 'include' && lines.length > 0 ? lineBreak : '');
	    };
	    Dataset.prototype.toCSV = function (tabulatorOptions) {
	        if (tabulatorOptions === void 0) { tabulatorOptions = {}; }
	        tabulatorOptions.finalizer = escapeFnCSV;
	        tabulatorOptions.separator = tabulatorOptions.separator || ',';
	        tabulatorOptions.lineBreak = tabulatorOptions.lineBreak || '\r\n';
	        tabulatorOptions.finalLineBreak = tabulatorOptions.finalLineBreak || 'suppress';
	        return this.toTabular(tabulatorOptions);
	    };
	    Dataset.prototype.toTSV = function (tabulatorOptions) {
	        if (tabulatorOptions === void 0) { tabulatorOptions = {}; }
	        tabulatorOptions.finalizer = escapeFnTSV;
	        tabulatorOptions.separator = tabulatorOptions.separator || '\t';
	        tabulatorOptions.lineBreak = tabulatorOptions.lineBreak || '\r\n';
	        tabulatorOptions.finalLineBreak = tabulatorOptions.finalLineBreak || 'suppress';
	        return this.toTabular(tabulatorOptions);
	    };
	    Dataset.type = 'DATASET';
	    return Dataset;
	}());
	check = Dataset;














	function nullMap(xs, fn) {
	    if (!xs)
	        return null;
	    var res = [];
	    for (var _i = 0, xs_1 = xs; _i < xs_1.length; _i++) {
	        var x = xs_1[_i];
	        var y = fn(x);
	        if (y)
	            res.push(y);
	    }
	    return res.length ? res : null;
	}
	function filterToAnds(filter) {
	    if (filter.equals(Expression.TRUE))
	        return [];
	    return filter.getExpressionPattern('and') || [filter];
	}
	function filterDiff(strongerFilter, weakerFilter) {
	    var strongerFilterAnds = filterToAnds(strongerFilter);
	    var weakerFilterAnds = filterToAnds(weakerFilter);
	    if (weakerFilterAnds.length > strongerFilterAnds.length)
	        return null;
	    for (var i = 0; i < weakerFilterAnds.length; i++) {
	        if (!(weakerFilterAnds[i].equals(strongerFilterAnds[i])))
	            return null;
	    }
	    return Expression.and(strongerFilterAnds.slice(weakerFilterAnds.length));
	}
	function getCommonFilter(filter1, filter2) {
	    var filter1Ands = filterToAnds(filter1);
	    var filter2Ands = filterToAnds(filter2);
	    var minLength = Math.min(filter1Ands.length, filter2Ands.length);
	    var commonExpressions = [];
	    for (var i = 0; i < minLength; i++) {
	        if (!filter1Ands[i].equals(filter2Ands[i]))
	            break;
	        commonExpressions.push(filter1Ands[i]);
	    }
	    return Expression.and(commonExpressions);
	}
	function mergeDerivedAttributes(derivedAttributes1, derivedAttributes2) {
	    var derivedAttributes = Object.create(null);
	    for (var k in derivedAttributes1) {
	        derivedAttributes[k] = derivedAttributes1[k];
	    }
	    for (var k in derivedAttributes2) {
	        if (hasOwnProperty(derivedAttributes, k) && !derivedAttributes[k].equals(derivedAttributes2[k])) {
	            throw new Error("can not currently redefine conflicting " + k);
	        }
	        derivedAttributes[k] = derivedAttributes2[k];
	    }
	    return derivedAttributes;
	}
	function getSampleValue(valueType, ex) {
	    switch (valueType) {
	        case 'BOOLEAN':
	            return true;
	        case 'NUMBER':
	            return 4;
	        case 'NUMBER_RANGE':
	            var numberBucketAction;
	            if (ex instanceof ChainExpression && (numberBucketAction = ex.getSingleAction('numberBucket'))) {
	                return new NumberRange({
	                    start: numberBucketAction.offset,
	                    end: numberBucketAction.offset + numberBucketAction.size
	                });
	            }
	            else {
	                return new NumberRange({ start: 0, end: 1 });
	            }
	        case 'TIME':
	            return new Date('2015-03-14T00:00:00');
	        case 'TIME_RANGE':
	            var timeBucketAction;
	            if (ex instanceof ChainExpression && (timeBucketAction = ex.getSingleAction('timeBucket'))) {
	                var timezone = timeBucketAction.timezone || Timezone.UTC;
	                var start = timeBucketAction.duration.floor(new Date('2015-03-14T00:00:00'), timezone);
	                return new TimeRange({
	                    start: start,
	                    end: timeBucketAction.duration.shift(start, timezone, 1)
	                });
	            }
	            else {
	                return new TimeRange({ start: new Date('2015-03-14T00:00:00'), end: new Date('2015-03-15T00:00:00') });
	            }
	        case 'STRING':
	            if (ex instanceof RefExpression) {
	                return 'some_' + ex.name;
	            }
	            else {
	                return 'something';
	            }
	        case 'SET/STRING':
	            if (ex instanceof RefExpression) {
	                return Set.fromJS([ex.name + '1']);
	            }
	            else {
	                return Set.fromJS(['something']);
	            }
	        case 'STRING_RANGE':
	            if (ex instanceof RefExpression) {
	                return StringRange.fromJS({ start: 'some_' + ex.name, end: null });
	            }
	            else {
	                return StringRange.fromJS({ start: 'something', end: null });
	            }
	        default:
	            throw new Error("unsupported simulation on: " + valueType);
	    }
	}
	function immutableAdd(obj, key, value) {
	    var newObj = Object.create(null);
	    for (var k in obj)
	        newObj[k] = obj[k];
	    newObj[key] = value;
	    return newObj;
	}
	function findApplyByExpression(applies, expression) {
	    for (var _i = 0, applies_1 = applies; _i < applies_1.length; _i++) {
	        var apply = applies_1[_i];
	        if (apply.expression.equals(expression))
	            return apply;
	    }
	    return null;
	}
	var External = exports.External = (function () {
	    function External(parameters, dummy) {
	        if (dummy === void 0) { dummy = null; }
	        this.attributes = null;
	        this.attributeOverrides = null;
	        this.rawAttributes = null;
	        if (dummy !== dummyObject) {
	            throw new TypeError("can not call `new External` directly use External.fromJS instead");
	        }
	        this.engine = parameters.engine;
	        var version = null;
	        if (parameters.version) {
	            version = External.extractVersion(parameters.version);
	            if (!version)
	                throw new Error("invalid version " + parameters.version);
	        }
	        this.version = version;
	        this.source = parameters.source;
	        this.suppress = Boolean(parameters.suppress);
	        this.rollup = Boolean(parameters.rollup);
	        if (parameters.attributes) {
	            this.attributes = parameters.attributes;
	        }
	        if (parameters.attributeOverrides) {
	            this.attributeOverrides = parameters.attributeOverrides;
	        }
	        this.derivedAttributes = parameters.derivedAttributes || {};
	        if (parameters.delegates) {
	            this.delegates = parameters.delegates;
	        }
	        this.concealBuckets = parameters.concealBuckets;
	        this.rawAttributes = parameters.rawAttributes;
	        this.requester = parameters.requester;
	        this.mode = parameters.mode || 'raw';
	        this.filter = parameters.filter || Expression.TRUE;
	        switch (this.mode) {
	            case 'raw':
	                this.select = parameters.select;
	                this.sort = parameters.sort;
	                this.limit = parameters.limit;
	                break;
	            case 'value':
	                this.valueExpression = parameters.valueExpression;
	                break;
	            case 'total':
	                this.applies = parameters.applies || [];
	                break;
	            case 'split':
	                this.dataName = parameters.dataName;
	                this.split = parameters.split;
	                if (!this.split)
	                    throw new Error('must have split action in split mode');
	                this.applies = parameters.applies || [];
	                this.sort = parameters.sort;
	                this.limit = parameters.limit;
	                this.havingFilter = parameters.havingFilter || Expression.TRUE;
	                break;
	        }
	    }
	    External.isExternal = function (candidate) {
	        return isInstanceOf(candidate, External);
	    };
	    External.extractVersion = function (v) {
	        if (!v)
	            return null;
	        var m = v.match(/^\d+\.\d+\.\d+(?:-[\w\-]+)?/);
	        return m ? m[0] : null;
	    };
	    External.versionLessThan = function (va, vb) {
	        var pa = va.split('-')[0].split('.');
	        var pb = vb.split('-')[0].split('.');
	        if (pa[0] !== pb[0])
	            return pa[0] < pb[0];
	        if (pa[1] !== pb[1])
	            return pa[1] < pb[1];
	        return pa[2] < pb[2];
	    };
	    External.deduplicateExternals = function (externals) {
	        if (externals.length < 2)
	            return externals;
	        var uniqueExternals = [externals[0]];
	        function addToUniqueExternals(external) {
	            for (var _i = 0, uniqueExternals_1 = uniqueExternals; _i < uniqueExternals_1.length; _i++) {
	                var uniqueExternal = uniqueExternals_1[_i];
	                if (uniqueExternal.equalBase(external))
	                    return;
	            }
	            uniqueExternals.push(external);
	        }
	        for (var i = 1; i < externals.length; i++)
	            addToUniqueExternals(externals[i]);
	        return uniqueExternals;
	    };
	    External.makeZeroDatum = function (applies) {
	        var newDatum = Object.create(null);
	        for (var _i = 0, applies_2 = applies; _i < applies_2.length; _i++) {
	            var apply = applies_2[_i];
	            var applyName = apply.name;
	            if (applyName[0] === '_')
	                continue;
	            newDatum[applyName] = 0;
	        }
	        return newDatum;
	    };
	    External.normalizeAndAddApply = function (attributesAndApplies, apply) {
	        var attributes = attributesAndApplies.attributes, applies = attributesAndApplies.applies;
	        var expressions = Object.create(null);
	        for (var _i = 0, applies_3 = applies; _i < applies_3.length; _i++) {
	            var existingApply = applies_3[_i];
	            expressions[existingApply.name] = existingApply.expression;
	        }
	        apply = apply.changeExpression(apply.expression.resolveWithExpressions(expressions, 'leave').simplify());
	        return {
	            attributes: overrideByName(attributes, new AttributeInfo({ name: apply.name, type: apply.expression.type })),
	            applies: overrideByName(applies, apply)
	        };
	    };
	    External.segregationAggregateApplies = function (applies) {
	        var aggregateApplies = [];
	        var postAggregateApplies = [];
	        var nameIndex = 0;
	        var appliesToSegregate = [];
	        for (var _i = 0, applies_4 = applies; _i < applies_4.length; _i++) {
	            var apply = applies_4[_i];
	            var applyExpression = apply.expression;
	            if (applyExpression instanceof ChainExpression) {
	                var actions = applyExpression.actions;
	                if (actions[actions.length - 1].isAggregate()) {
	                    aggregateApplies.push(apply);
	                    continue;
	                }
	            }
	            appliesToSegregate.push(apply);
	        }
	        for (var _a = 0, appliesToSegregate_1 = appliesToSegregate; _a < appliesToSegregate_1.length; _a++) {
	            var apply = appliesToSegregate_1[_a];
	            var newExpression = apply.expression.substituteAction(function (action) {
	                return action.isAggregate();
	            }, function (preEx, action) {
	                var aggregateChain = preEx.performAction(action);
	                var existingApply = findApplyByExpression(aggregateApplies, aggregateChain);
	                if (existingApply) {
	                    return $(existingApply.name, existingApply.expression.type);
	                }
	                else {
	                    var name = '!T_' + (nameIndex++);
	                    aggregateApplies.push(new ApplyAction({
	                        action: 'apply',
	                        name: name,
	                        expression: aggregateChain
	                    }));
	                    return $(name, aggregateChain.type);
	                }
	            });
	            postAggregateApplies.push(apply.changeExpression(newExpression));
	        }
	        return {
	            aggregateApplies: aggregateApplies,
	            postAggregateApplies: postAggregateApplies
	        };
	    };
	    External.getCommonFilterFromExternals = function (externals) {
	        if (!externals.length)
	            throw new Error('must have externals');
	        var commonFilter = externals[0].filter;
	        for (var i = 1; i < externals.length; i++) {
	            commonFilter = getCommonFilter(commonFilter, externals[i].filter);
	        }
	        return commonFilter;
	    };
	    External.getMergedDerivedAttributesFromExternals = function (externals) {
	        if (!externals.length)
	            throw new Error('must have externals');
	        var derivedAttributes = externals[0].derivedAttributes;
	        for (var i = 1; i < externals.length; i++) {
	            derivedAttributes = mergeDerivedAttributes(derivedAttributes, externals[i].derivedAttributes);
	        }
	        return derivedAttributes;
	    };
	    External.getSimpleInflater = function (splitExpression, label) {
	        switch (splitExpression.type) {
	            case 'BOOLEAN': return External.booleanInflaterFactory(label);
	            case 'NUMBER': return External.numberInflaterFactory(label);
	            case 'TIME': return External.timeInflaterFactory(label);
	            default: return null;
	        }
	    };
	    External.booleanInflaterFactory = function (label) {
	        return function (d) {
	            var v = '' + d[label];
	            switch (v) {
	                case 'null':
	                    d[label] = null;
	                    break;
	                case '0':
	                case 'false':
	                    d[label] = false;
	                    break;
	                case '1':
	                case 'true':
	                    d[label] = true;
	                    break;
	                default:
	                    throw new Error("got strange result from boolean: " + v);
	            }
	        };
	    };
	    External.timeRangeInflaterFactory = function (label, duration, timezone) {
	        return function (d) {
	            var v = d[label];
	            if ('' + v === "null") {
	                d[label] = null;
	                return;
	            }
	            var start = new Date(v);
	            d[label] = new TimeRange({ start: start, end: duration.shift(start, timezone) });
	        };
	    };
	    External.numberRangeInflaterFactory = function (label, rangeSize) {
	        return function (d) {
	            var v = d[label];
	            if ('' + v === "null") {
	                d[label] = null;
	                return;
	            }
	            var start = Number(v);
	            d[label] = new NumberRange({
	                start: start,
	                end: safeAdd(start, rangeSize)
	            });
	        };
	    };
	    External.numberInflaterFactory = function (label) {
	        return function (d) {
	            var v = d[label];
	            if ('' + v === "null") {
	                d[label] = null;
	                return;
	            }
	            d[label] = Number(v);
	        };
	    };
	    External.timeInflaterFactory = function (label) {
	        return function (d) {
	            var v = d[label];
	            if ('' + v === "null") {
	                d[label] = null;
	                return;
	            }
	            d[label] = new Date(v);
	        };
	    };
	    External.setStringInflaterFactory = function (label) {
	        return function (d) {
	            var v = d[label];
	            if ('' + v === "null") {
	                d[label] = null;
	                return;
	            }
	            if (typeof v === 'string')
	                v = [v];
	            d[label] = Set.fromJS({
	                setType: 'STRING',
	                elements: v
	            });
	        };
	    };
	    External.setCardinalityInflaterFactory = function (label) {
	        return function (d) {
	            var v = d[label];
	            d[label] = Array.isArray(v) ? v.length : 1;
	        };
	    };
	    External.jsToValue = function (parameters, requester) {
	        var value = {
	            engine: parameters.engine,
	            version: parameters.version,
	            source: parameters.source,
	            suppress: true,
	            rollup: parameters.rollup,
	            concealBuckets: Boolean(parameters.concealBuckets),
	            requester: requester
	        };
	        if (parameters.attributes) {
	            value.attributes = AttributeInfo.fromJSs(parameters.attributes);
	        }
	        if (parameters.attributeOverrides) {
	            value.attributeOverrides = AttributeInfo.fromJSs(parameters.attributeOverrides);
	        }
	        if (parameters.derivedAttributes) {
	            value.derivedAttributes = Expression.expressionLookupFromJS(parameters.derivedAttributes);
	        }
	        value.filter = parameters.filter ? Expression.fromJS(parameters.filter) : Expression.TRUE;
	        return value;
	    };
	    External.register = function (ex, id) {
	        if (id === void 0) { id = null; }
	        if (!id)
	            id = ex.name.replace('External', '').replace(/^\w/, function (s) { return s.toLowerCase(); });
	        External.classMap[id] = ex;
	    };
	    External.getConstructorFor = function (engine) {
	        var classFn = External.classMap[engine];
	        if (!classFn)
	            throw new Error("unsupported engine '" + engine + "'");
	        return classFn;
	    };
	    External.fromJS = function (parameters, requester) {
	        if (requester === void 0) { requester = null; }
	        if (!hasOwnProperty(parameters, "engine")) {
	            throw new Error("external `engine` must be defined");
	        }
	        var engine = parameters.engine;
	        if (typeof engine !== "string")
	            throw new Error("engine must be a string");
	        var ClassFn = External.getConstructorFor(engine);
	        if (!requester && hasOwnProperty(parameters, 'requester')) {
	            console.warn("'requester' parameter should be passed as context (2nd argument)");
	            requester = parameters.requester;
	        }
	        if (!parameters.source) {
	            parameters.source = parameters.dataSource || parameters.table;
	        }
	        return ClassFn.fromJS(parameters, requester);
	    };
	    External.fromValue = function (parameters) {
	        var engine = parameters.engine;
	        var ClassFn = External.getConstructorFor(engine);
	        return new ClassFn(parameters);
	    };
	    External.prototype._ensureEngine = function (engine) {
	        if (!this.engine) {
	            this.engine = engine;
	            return;
	        }
	        if (this.engine !== engine) {
	            throw new TypeError("incorrect engine '" + this.engine + "' (needs to be: '" + engine + "')");
	        }
	    };
	    External.prototype._ensureMinVersion = function (minVersion) {
	        if (this.version && External.versionLessThan(this.version, minVersion)) {
	            throw new Error("only " + this.engine + " versions >= " + minVersion + " are supported");
	        }
	    };
	    External.prototype.valueOf = function () {
	        var value = {
	            engine: this.engine,
	            version: this.version,
	            source: this.source,
	            rollup: this.rollup,
	            mode: this.mode
	        };
	        if (this.suppress)
	            value.suppress = this.suppress;
	        if (this.attributes)
	            value.attributes = this.attributes;
	        if (this.attributeOverrides)
	            value.attributeOverrides = this.attributeOverrides;
	        if (nonEmptyLookup(this.derivedAttributes))
	            value.derivedAttributes = this.derivedAttributes;
	        if (this.delegates)
	            value.delegates = this.delegates;
	        value.concealBuckets = this.concealBuckets;
	        if (this.rawAttributes) {
	            value.rawAttributes = this.rawAttributes;
	        }
	        if (this.requester) {
	            value.requester = this.requester;
	        }
	        if (this.dataName) {
	            value.dataName = this.dataName;
	        }
	        value.filter = this.filter;
	        if (this.valueExpression) {
	            value.valueExpression = this.valueExpression;
	        }
	        if (this.select) {
	            value.select = this.select;
	        }
	        if (this.split) {
	            value.split = this.split;
	        }
	        if (this.applies) {
	            value.applies = this.applies;
	        }
	        if (this.sort) {
	            value.sort = this.sort;
	        }
	        if (this.limit) {
	            value.limit = this.limit;
	        }
	        if (this.havingFilter) {
	            value.havingFilter = this.havingFilter;
	        }
	        return value;
	    };
	    External.prototype.toJS = function () {
	        var js = {
	            engine: this.engine,
	            source: this.source
	        };
	        if (this.version)
	            js.version = this.version;
	        if (this.rollup)
	            js.rollup = true;
	        if (this.attributes)
	            js.attributes = AttributeInfo.toJSs(this.attributes);
	        if (this.attributeOverrides)
	            js.attributeOverrides = AttributeInfo.toJSs(this.attributeOverrides);
	        if (nonEmptyLookup(this.derivedAttributes))
	            js.derivedAttributes = Expression.expressionLookupToJS(this.derivedAttributes);
	        if (this.concealBuckets)
	            js.concealBuckets = true;
	        if (this.rawAttributes)
	            js.rawAttributes = AttributeInfo.toJSs(this.rawAttributes);
	        if (!this.filter.equals(Expression.TRUE)) {
	            js.filter = this.filter.toJS();
	        }
	        return js;
	    };
	    External.prototype.toJSON = function () {
	        return this.toJS();
	    };
	    External.prototype.toString = function () {
	        var mode = this.mode;
	        switch (mode) {
	            case 'raw':
	                return "ExternalRaw(" + this.filter + ")";
	            case 'value':
	                return "ExternalValue(" + this.valueExpression + ")";
	            case 'total':
	                return "ExternalTotal(" + this.applies.length + ")";
	            case 'split':
	                return "ExternalSplit(" + this.split + ", " + this.applies.length + ")";
	            default:
	                throw new Error("unknown mode: " + mode);
	        }
	    };
	    External.prototype.equals = function (other) {
	        return this.equalBase(other) &&
	            immutableLookupsEqual(this.derivedAttributes, other.derivedAttributes) &&
	            immutableArraysEqual(this.attributes, other.attributes) &&
	            immutableArraysEqual(this.delegates, other.delegates) &&
	            this.concealBuckets === other.concealBuckets &&
	            Boolean(this.requester) === Boolean(other.requester);
	    };
	    External.prototype.equalBase = function (other) {
	        return External.isExternal(other) &&
	            this.engine === other.engine &&
	            String(this.source) === String(other.source) &&
	            this.version === other.version &&
	            this.rollup === other.rollup &&
	            this.mode === other.mode &&
	            this.filter.equals(other.filter);
	    };
	    External.prototype.changeVersion = function (version) {
	        var value = this.valueOf();
	        value.version = version;
	        return External.fromValue(value);
	    };
	    External.prototype.attachRequester = function (requester) {
	        var value = this.valueOf();
	        value.requester = requester;
	        return External.fromValue(value);
	    };
	    External.prototype.versionBefore = function (neededVersion) {
	        var version = this.version;
	        return version && External.versionLessThan(version, neededVersion);
	    };
	    External.prototype.getAttributesInfo = function (attributeName) {
	        var attributes = this.rawAttributes || this.attributes;
	        return findByName(attributes, attributeName);
	    };
	    External.prototype.updateAttribute = function (newAttribute) {
	        if (!this.attributes)
	            return this;
	        var value = this.valueOf();
	        value.attributes = AttributeInfo.override(value.attributes, [newAttribute]);
	        return External.fromValue(value);
	    };
	    External.prototype.show = function () {
	        var value = this.valueOf();
	        value.suppress = false;
	        return External.fromValue(value);
	    };
	    External.prototype.hasAttribute = function (name) {
	        var _a = this, attributes = _a.attributes, rawAttributes = _a.rawAttributes, derivedAttributes = _a.derivedAttributes;
	        if (find(rawAttributes || attributes, function (a) { return a.name === name; }))
	            return true;
	        return hasOwnProperty(derivedAttributes, name);
	    };
	    External.prototype.expressionDefined = function (ex) {
	        return ex.definedInTypeContext(this.getFullType());
	    };
	    External.prototype.bucketsConcealed = function (ex) {
	        var _this = this;
	        return ex.every(function (ex, index, depth, nestDiff) {
	            if (nestDiff)
	                return true;
	            if (ex instanceof RefExpression) {
	                var refAttributeInfo = _this.getAttributesInfo(ex.name);
	                if (refAttributeInfo && refAttributeInfo.makerAction) {
	                    return refAttributeInfo.makerAction.alignsWith([]);
	                }
	            }
	            else if (ex instanceof ChainExpression) {
	                var refExpression = ex.expression;
	                if (refExpression instanceof RefExpression) {
	                    var ref = refExpression.name;
	                    var refAttributeInfo = _this.getAttributesInfo(ref);
	                    if (refAttributeInfo && refAttributeInfo.makerAction) {
	                        return refAttributeInfo.makerAction.alignsWith(ex.actions);
	                    }
	                }
	            }
	            return null;
	        });
	    };
	    External.prototype.canHandleFilter = function (ex) {
	        throw new Error("must implement canHandleFilter");
	    };
	    External.prototype.canHandleTotal = function () {
	        throw new Error("must implement canHandleTotal");
	    };
	    External.prototype.canHandleSplit = function (ex) {
	        throw new Error("must implement canHandleSplit");
	    };
	    External.prototype.canHandleApply = function (ex) {
	        throw new Error("must implement canHandleApply");
	    };
	    External.prototype.canHandleSort = function (sortAction) {
	        throw new Error("must implement canHandleSort");
	    };
	    External.prototype.canHandleLimit = function (limitAction) {
	        throw new Error("must implement canHandleLimit");
	    };
	    External.prototype.canHandleHavingFilter = function (ex) {
	        throw new Error("must implement canHandleHavingFilter");
	    };
	    External.prototype.addDelegate = function (delegate) {
	        var value = this.valueOf();
	        if (!value.delegates)
	            value.delegates = [];
	        value.delegates = value.delegates.concat(delegate);
	        return External.fromValue(value);
	    };
	    External.prototype.getBase = function () {
	        var value = this.valueOf();
	        value.suppress = true;
	        value.mode = 'raw';
	        value.dataName = null;
	        if (this.mode !== 'raw')
	            value.attributes = value.rawAttributes;
	        value.rawAttributes = null;
	        value.filter = null;
	        value.applies = [];
	        value.split = null;
	        value.sort = null;
	        value.limit = null;
	        value.delegates = nullMap(value.delegates, function (e) { return e.getBase(); });
	        return External.fromValue(value);
	    };
	    External.prototype.getRaw = function () {
	        if (this.mode === 'raw')
	            return this;
	        var value = this.valueOf();
	        value.suppress = true;
	        value.mode = 'raw';
	        value.dataName = null;
	        if (this.mode !== 'raw')
	            value.attributes = value.rawAttributes;
	        value.rawAttributes = null;
	        value.applies = [];
	        value.split = null;
	        value.sort = null;
	        value.limit = null;
	        value.delegates = nullMap(value.delegates, function (e) { return e.getRaw(); });
	        return External.fromValue(value);
	    };
	    External.prototype.makeTotal = function (applies) {
	        if (this.mode !== 'raw')
	            return null;
	        if (!this.canHandleTotal())
	            return null;
	        if (!applies.length)
	            throw new Error('must have applies');
	        var externals = [];
	        for (var _i = 0, applies_5 = applies; _i < applies_5.length; _i++) {
	            var apply = applies_5[_i];
	            var applyExpression = apply.expression;
	            if (applyExpression instanceof ExternalExpression) {
	                externals.push(applyExpression.external);
	            }
	        }
	        var commonFilter = External.getCommonFilterFromExternals(externals);
	        var value = this.valueOf();
	        value.mode = 'total';
	        value.suppress = false;
	        value.rawAttributes = value.attributes;
	        value.derivedAttributes = External.getMergedDerivedAttributesFromExternals(externals);
	        value.filter = commonFilter;
	        value.attributes = [];
	        value.applies = [];
	        value.delegates = nullMap(value.delegates, function (e) { return e.makeTotal(applies); });
	        var totalExternal = External.fromValue(value);
	        for (var _a = 0, applies_6 = applies; _a < applies_6.length; _a++) {
	            var apply = applies_6[_a];
	            totalExternal = totalExternal._addApplyAction(apply);
	            if (!totalExternal)
	                return null;
	        }
	        return totalExternal;
	    };
	    External.prototype.addAction = function (action) {
	        if (action instanceof FilterAction) {
	            return this._addFilterAction(action);
	        }
	        if (action instanceof SelectAction) {
	            return this._addSelectAction(action);
	        }
	        if (action instanceof SplitAction) {
	            return this._addSplitAction(action);
	        }
	        if (action instanceof ApplyAction) {
	            return this._addApplyAction(action);
	        }
	        if (action instanceof SortAction) {
	            return this._addSortAction(action);
	        }
	        if (action instanceof LimitAction) {
	            return this._addLimitAction(action);
	        }
	        if (action.isAggregate()) {
	            return this._addAggregateAction(action);
	        }
	        return this._addPostAggregateAction(action);
	    };
	    External.prototype._addFilterAction = function (action) {
	        return this.addFilter(action.expression);
	    };
	    External.prototype.addFilter = function (expression) {
	        if (!expression.resolved())
	            return null;
	        if (!this.expressionDefined(expression))
	            return null;
	        var value = this.valueOf();
	        switch (this.mode) {
	            case 'raw':
	                if (this.concealBuckets && !this.bucketsConcealed(expression))
	                    return null;
	                if (!this.canHandleFilter(expression))
	                    return null;
	                if (value.filter.equals(Expression.TRUE)) {
	                    value.filter = expression;
	                }
	                else {
	                    value.filter = value.filter.and(expression);
	                }
	                break;
	            case 'split':
	                if (!this.canHandleHavingFilter(expression))
	                    return null;
	                value.havingFilter = value.havingFilter.and(expression).simplify();
	                break;
	            default:
	                return null;
	        }
	        value.delegates = nullMap(value.delegates, function (e) { return e.addFilter(expression); });
	        return External.fromValue(value);
	    };
	    External.prototype._addSelectAction = function (selectAction) {
	        if (this.mode !== 'raw')
	            return null;
	        var datasetType = this.getFullType().datasetType;
	        var attributes = selectAction.attributes;
	        for (var _i = 0, attributes_1 = attributes; _i < attributes_1.length; _i++) {
	            var attribute = attributes_1[_i];
	            if (!datasetType[attribute])
	                return null;
	        }
	        var value = this.valueOf();
	        value.suppress = false;
	        value.select = selectAction;
	        value.delegates = nullMap(value.delegates, function (e) { return e._addSelectAction(selectAction); });
	        return External.fromValue(value);
	    };
	    External.prototype._addSplitAction = function (splitAction) {
	        if (this.mode !== 'raw')
	            return null;
	        var splitKeys = splitAction.keys;
	        for (var _i = 0, splitKeys_1 = splitKeys; _i < splitKeys_1.length; _i++) {
	            var splitKey = splitKeys_1[_i];
	            var splitExpression = splitAction.splits[splitKey];
	            if (!this.expressionDefined(splitExpression))
	                return null;
	            if (this.concealBuckets && !this.bucketsConcealed(splitExpression))
	                return null;
	            if (!this.canHandleSplit(splitExpression))
	                return null;
	        }
	        var value = this.valueOf();
	        value.suppress = false;
	        value.mode = 'split';
	        value.dataName = splitAction.dataName;
	        value.split = splitAction;
	        value.rawAttributes = value.attributes;
	        value.attributes = splitAction.mapSplits(function (name, expression) { return new AttributeInfo({ name: name, type: expression.type }); });
	        value.delegates = nullMap(value.delegates, function (e) { return e._addSplitAction(splitAction); });
	        return External.fromValue(value);
	    };
	    External.prototype._addApplyAction = function (action) {
	        var expression = action.expression;
	        if (expression.type === 'DATASET')
	            return null;
	        if (!expression.contained())
	            return null;
	        if (!this.expressionDefined(expression))
	            return null;
	        if (!this.canHandleApply(action.expression))
	            return null;
	        if (this.mode === 'raw') {
	            var value = this.valueOf();
	            value.derivedAttributes = immutableAdd(value.derivedAttributes, action.name, action.expression);
	        }
	        else {
	            if (this.split && this.split.hasKey(action.name))
	                return null;
	            var actionExpression = action.expression;
	            if (actionExpression instanceof ExternalExpression) {
	                action = action.changeExpression(actionExpression.external.valueExpressionWithinFilter(this.filter));
	            }
	            var value = this.valueOf();
	            var added = External.normalizeAndAddApply(value, action);
	            value.applies = added.applies;
	            value.attributes = added.attributes;
	        }
	        value.delegates = nullMap(value.delegates, function (e) { return e._addApplyAction(action); });
	        return External.fromValue(value);
	    };
	    External.prototype._addSortAction = function (action) {
	        if (this.limit)
	            return null;
	        if (!this.canHandleSort(action))
	            return null;
	        var value = this.valueOf();
	        value.sort = action;
	        value.delegates = nullMap(value.delegates, function (e) { return e._addSortAction(action); });
	        return External.fromValue(value);
	    };
	    External.prototype._addLimitAction = function (action) {
	        if (!this.canHandleLimit(action))
	            return null;
	        var value = this.valueOf();
	        value.suppress = false;
	        if (!value.limit || action.limit < value.limit.limit) {
	            value.limit = action;
	        }
	        value.delegates = nullMap(value.delegates, function (e) { return e._addLimitAction(action); });
	        return External.fromValue(value);
	    };
	    External.prototype._addAggregateAction = function (action) {
	        if (this.mode !== 'raw' || this.limit)
	            return null;
	        var actionExpression = action.expression;
	        if (actionExpression && !this.expressionDefined(actionExpression))
	            return null;
	        var value = this.valueOf();
	        value.mode = 'value';
	        value.suppress = false;
	        value.valueExpression = $(External.SEGMENT_NAME, 'DATASET').performAction(action);
	        value.rawAttributes = value.attributes;
	        value.attributes = null;
	        value.delegates = nullMap(value.delegates, function (e) { return e._addAggregateAction(action); });
	        return External.fromValue(value);
	    };
	    External.prototype._addPostAggregateAction = function (action) {
	        if (this.mode !== 'value')
	            throw new Error('must be in value mode to call addPostAggregateAction');
	        var actionExpression = action.expression;
	        var commonFilter = this.filter;
	        var newValueExpression;
	        if (actionExpression instanceof ExternalExpression) {
	            var otherExternal = actionExpression.external;
	            if (!this.getBase().equals(otherExternal.getBase()))
	                return null;
	            var commonFilter = getCommonFilter(commonFilter, otherExternal.filter);
	            var newAction = action.changeExpression(otherExternal.valueExpressionWithinFilter(commonFilter));
	            newValueExpression = this.valueExpressionWithinFilter(commonFilter).performAction(newAction);
	        }
	        else if (!actionExpression || !actionExpression.hasExternal()) {
	            newValueExpression = this.valueExpression.performAction(action);
	        }
	        else {
	            return null;
	        }
	        var value = this.valueOf();
	        value.valueExpression = newValueExpression;
	        value.filter = commonFilter;
	        value.delegates = nullMap(value.delegates, function (e) { return e._addPostAggregateAction(action); });
	        return External.fromValue(value);
	    };
	    External.prototype.prePack = function (prefix, myAction) {
	        if (this.mode !== 'value')
	            throw new Error('must be in value mode to call prePack');
	        var value = this.valueOf();
	        value.valueExpression = prefix.performAction(myAction.changeExpression(value.valueExpression));
	        value.delegates = nullMap(value.delegates, function (e) { return e.prePack(prefix, myAction); });
	        return External.fromValue(value);
	    };
	    External.prototype.valueExpressionWithinFilter = function (withinFilter) {
	        if (this.mode !== 'value')
	            return null;
	        var extraFilter = filterDiff(this.filter, withinFilter);
	        if (!extraFilter)
	            throw new Error('not within the segment');
	        var ex = this.valueExpression;
	        if (!extraFilter.equals(Expression.TRUE)) {
	            ex = ex.substitute(function (ex) {
	                if (ex instanceof RefExpression && ex.type === 'DATASET' && ex.name === External.SEGMENT_NAME) {
	                    return ex.filter(extraFilter);
	                }
	                return null;
	            });
	        }
	        return ex;
	    };
	    External.prototype.toValueApply = function () {
	        if (this.mode !== 'value')
	            return null;
	        return new ApplyAction({
	            name: External.VALUE_NAME,
	            expression: this.valueExpression
	        });
	    };
	    External.prototype.sortOnLabel = function () {
	        var sort = this.sort;
	        if (!sort)
	            return false;
	        var sortOn = sort.expression.name;
	        if (!this.split || !this.split.hasKey(sortOn))
	            return false;
	        var applies = this.applies;
	        for (var _i = 0, applies_7 = applies; _i < applies_7.length; _i++) {
	            var apply = applies_7[_i];
	            if (apply.name === sortOn)
	                return false;
	        }
	        return true;
	    };
	    External.prototype.inlineDerivedAttributes = function (expression) {
	        var derivedAttributes = this.derivedAttributes;
	        return expression.substitute(function (refEx) {
	            if (refEx instanceof RefExpression) {
	                var refName = refEx.name;
	                return hasOwnProperty(derivedAttributes, refName) ? derivedAttributes[refName] : null;
	            }
	            else {
	                return null;
	            }
	        });
	    };
	    External.prototype.inlineDerivedAttributesInAggregate = function (expression) {
	        var _this = this;
	        var derivedAttributes = this.derivedAttributes;
	        return expression.substituteAction(function (action) {
	            if (!action.isAggregate())
	                return false;
	            return action.getFreeReferences().some(function (ref) { return hasOwnProperty(derivedAttributes, ref); });
	        }, function (preEx, action) {
	            return preEx.performAction(action.changeExpression(_this.inlineDerivedAttributes(action.expression)));
	        });
	    };
	    External.prototype.switchToRollupCount = function (expression) {
	        var _this = this;
	        if (!this.rollup)
	            return expression;
	        var countRef = null;
	        return expression.substituteAction(function (action) {
	            return action.action === 'count';
	        }, function (preEx) {
	            if (!countRef)
	                countRef = $(_this.getRollupCountName(), 'NUMBER');
	            return preEx.sum(countRef);
	        });
	    };
	    External.prototype.getRollupCountName = function () {
	        var rawAttributes = this.rawAttributes;
	        for (var _i = 0, rawAttributes_1 = rawAttributes; _i < rawAttributes_1.length; _i++) {
	            var attribute = rawAttributes_1[_i];
	            var makerAction = attribute.makerAction;
	            if (makerAction && makerAction.action === 'count')
	                return attribute.name;
	        }
	        throw new Error("could not find rollup count");
	    };
	    External.prototype.getQuerySplit = function () {
	        var _this = this;
	        return this.split.transformExpressions(function (ex) {
	            return _this.inlineDerivedAttributes(ex);
	        });
	    };
	    External.prototype.getQueryFilter = function () {
	        return this.inlineDerivedAttributes(this.filter).simplify();
	    };
	    External.prototype.getSelectedAttributes = function () {
	        var _a = this, select = _a.select, attributes = _a.attributes, derivedAttributes = _a.derivedAttributes;
	        attributes = attributes.slice();
	        for (var k in derivedAttributes) {
	            attributes.push(new AttributeInfo({ name: k, type: derivedAttributes[k].type }));
	        }
	        if (!select)
	            return attributes;
	        var selectAttributes = select.attributes;
	        return attributes.filter(function (a) { return selectAttributes.indexOf(a.name) !== -1; });
	    };
	    External.prototype.addNextExternal = function (dataset) {
	        var _this = this;
	        var _a = this, mode = _a.mode, dataName = _a.dataName, split = _a.split;
	        if (mode !== 'split')
	            throw new Error('must be in split mode to addNextExternal');
	        return dataset.apply(dataName, function (d) {
	            return _this.getRaw().addFilter(split.filterFromDatum(d));
	        }, 'DATASET', null);
	    };
	    External.prototype.getDelegate = function () {
	        var _a = this, mode = _a.mode, delegates = _a.delegates;
	        if (!delegates || !delegates.length || mode === 'raw')
	            return null;
	        return delegates[0];
	    };
	    External.prototype.simulateValue = function (lastNode, simulatedQueries, externalForNext) {
	        if (externalForNext === void 0) { externalForNext = null; }
	        var mode = this.mode;
	        if (!externalForNext)
	            externalForNext = this;
	        var delegate = this.getDelegate();
	        if (delegate) {
	            return delegate.simulateValue(lastNode, simulatedQueries, externalForNext);
	        }
	        simulatedQueries.push(this.getQueryAndPostProcess().query);
	        if (mode === 'value') {
	            var valueExpression = this.valueExpression;
	            return getSampleValue(valueExpression.type, valueExpression);
	        }
	        var datum = {};
	        if (mode === 'raw') {
	            var attributes = this.attributes;
	            for (var _i = 0, attributes_2 = attributes; _i < attributes_2.length; _i++) {
	                var attribute = attributes_2[_i];
	                datum[attribute.name] = getSampleValue(attribute.type, null);
	            }
	        }
	        else {
	            if (mode === 'split') {
	                this.split.mapSplits(function (name, expression) {
	                    datum[name] = getSampleValue(unwrapSetType(expression.type), expression);
	                });
	            }
	            var applies = this.applies;
	            for (var _a = 0, applies_8 = applies; _a < applies_8.length; _a++) {
	                var apply = applies_8[_a];
	                datum[apply.name] = getSampleValue(apply.expression.type, apply.expression);
	            }
	        }
	        var dataset = new Dataset({ data: [datum] });
	        if (!lastNode && mode === 'split')
	            dataset = externalForNext.addNextExternal(dataset);
	        return dataset;
	    };
	    External.prototype.getQueryAndPostProcess = function () {
	        throw new Error("can not call getQueryAndPostProcess directly");
	    };
	    External.prototype.queryValue = function (lastNode, externalForNext) {
	        if (externalForNext === void 0) { externalForNext = null; }
	        var _a = this, mode = _a.mode, requester = _a.requester;
	        if (!externalForNext)
	            externalForNext = this;
	        var delegate = this.getDelegate();
	        if (delegate) {
	            return delegate.queryValue(lastNode, externalForNext);
	        }
	        if (!requester) {
	            return Q.reject(new Error('must have a requester to make queries'));
	        }
	        try {
	            var queryAndPostProcess = this.getQueryAndPostProcess();
	        }
	        catch (e) {
	            return Q.reject(e);
	        }
	        var query = queryAndPostProcess.query, postProcess = queryAndPostProcess.postProcess, next = queryAndPostProcess.next;
	        if (!query || typeof postProcess !== 'function') {
	            return Q.reject(new Error('no query or postProcess'));
	        }
	        var finalResult;
	        if (next) {
	            var results = [];
	            finalResult = promiseWhile(function () { return query; }, function () {
	                return requester({ query: query })
	                    .then(function (result) {
	                    results.push(result);
	                    query = next(query, result);
	                });
	            })
	                .then(function () {
	                return queryAndPostProcess.postProcess(results);
	            });
	        }
	        else {
	            finalResult = requester({ query: query })
	                .then(queryAndPostProcess.postProcess);
	        }
	        if (!lastNode && mode === 'split') {
	            finalResult = finalResult.then(externalForNext.addNextExternal.bind(externalForNext));
	        }
	        return finalResult;
	    };
	    External.prototype.needsIntrospect = function () {
	        return !this.attributes;
	    };
	    External.prototype.introspect = function () {
	        var _this = this;
	        if (!this.requester) {
	            return Q.reject(new Error('must have a requester to introspect'));
	        }
	        if (!this.version) {
	            return this.constructor.getVersion(this.requester).then(function (version) {
	                version = External.extractVersion(version);
	                if (!version)
	                    throw new Error('external version not found, please specify explicitly');
	                return _this.changeVersion(version).introspect();
	            });
	        }
	        return this.getIntrospectAttributes()
	            .then(function (attributes) {
	            var value = _this.valueOf();
	            if (value.attributeOverrides) {
	                attributes = AttributeInfo.override(attributes, value.attributeOverrides);
	            }
	            if (value.attributes) {
	                attributes = AttributeInfo.override(value.attributes, attributes);
	            }
	            value.attributes = attributes;
	            return External.fromValue(value);
	        });
	    };
	    External.prototype.getRawDatasetType = function () {
	        var _a = this, attributes = _a.attributes, rawAttributes = _a.rawAttributes, derivedAttributes = _a.derivedAttributes;
	        if (!attributes)
	            throw new Error("dataset has not been introspected");
	        if (!rawAttributes)
	            rawAttributes = attributes;
	        var myDatasetType = {};
	        for (var _i = 0, rawAttributes_2 = rawAttributes; _i < rawAttributes_2.length; _i++) {
	            var rawAttribute = rawAttributes_2[_i];
	            var attrName = rawAttribute.name;
	            myDatasetType[attrName] = {
	                type: rawAttribute.type
	            };
	        }
	        for (var name in derivedAttributes) {
	            myDatasetType[name] = {
	                type: derivedAttributes[name].type
	            };
	        }
	        return myDatasetType;
	    };
	    External.prototype.getFullType = function () {
	        var _a = this, mode = _a.mode, attributes = _a.attributes;
	        if (mode === 'value')
	            throw new Error('not supported for value mode yet');
	        var myDatasetType = this.getRawDatasetType();
	        if (mode !== 'raw') {
	            var splitDatasetType = {};
	            splitDatasetType[this.dataName || External.SEGMENT_NAME] = {
	                type: 'DATASET',
	                datasetType: myDatasetType,
	                remote: true
	            };
	            for (var _i = 0, attributes_3 = attributes; _i < attributes_3.length; _i++) {
	                var attribute = attributes_3[_i];
	                var attrName = attribute.name;
	                splitDatasetType[attrName] = {
	                    type: attribute.type
	                };
	            }
	            myDatasetType = splitDatasetType;
	        }
	        return {
	            type: 'DATASET',
	            datasetType: myDatasetType,
	            remote: true
	        };
	    };
	    External.type = 'EXTERNAL';
	    External.SEGMENT_NAME = '__SEGMENT__';
	    External.VALUE_NAME = '__VALUE__';
	    External.classMap = {};
	    return External;
	}());
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};







	var DUMMY_NAME = '!DUMMY';
	var TIME_ATTRIBUTE = '__time';
	var AGGREGATE_TO_DRUID = {
	    count: "count",
	    sum: "doubleSum",
	    min: "doubleMin",
	    max: "doubleMax"
	};
	var AGGREGATE_TO_FUNCTION = {
	    sum: function (a, b) { return (a + "+" + b); },
	    min: function (a, b) { return ("Math.min(" + a + "," + b + ")"); },
	    max: function (a, b) { return ("Math.max(" + a + "," + b + ")"); }
	};
	var AGGREGATE_TO_ZERO = {
	    sum: "0",
	    min: "Infinity",
	    max: "-Infinity"
	};
	var InvalidResultError = exports.InvalidResultError = (function (_super) {
	    __extends(InvalidResultError, _super);
	    function InvalidResultError(message, result) {
	        _super.call(this, message);
	        this.result = result;
	    }
	    return InvalidResultError;
	}(ExtendableError));
	function expressionNeedsAlphaNumericSort(ex) {
	    var type = ex.type;
	    return (type === 'NUMBER' || type === 'NUMBER_RANGE');
	}
	function customAggregationsEqual(customA, customB) {
	    return JSON.stringify(customA) === JSON.stringify(customB);
	}
	function customTransformsEqual(customA, customB) {
	    return JSON.stringify(customA) === JSON.stringify(customB);
	}
	var DruidExternal = exports.DruidExternal = (function (_super) {
	    __extends(DruidExternal, _super);
	    function DruidExternal(parameters) {
	        _super.call(this, parameters, dummyObject);
	        this._ensureEngine("druid");
	        this._ensureMinVersion("0.8.0");
	        this.timeAttribute = parameters.timeAttribute || TIME_ATTRIBUTE;
	        this.customAggregations = parameters.customAggregations;
	        this.customTransforms = parameters.customTransforms;
	        this.allowEternity = parameters.allowEternity;
	        this.allowSelectQueries = parameters.allowSelectQueries;
	        var introspectionStrategy = parameters.introspectionStrategy || DruidExternal.DEFAULT_INTROSPECTION_STRATEGY;
	        if (DruidExternal.VALID_INTROSPECTION_STRATEGIES.indexOf(introspectionStrategy) === -1) {
	            throw new Error("invalid introspectionStrategy '" + introspectionStrategy + "'");
	        }
	        this.introspectionStrategy = introspectionStrategy;
	        this.exactResultsOnly = parameters.exactResultsOnly;
	        this.context = parameters.context;
	    }
	    DruidExternal.fromJS = function (parameters, requester) {
	        if (typeof parameters.druidVersion === 'string') {
	            parameters.version = parameters.druidVersion;
	            console.warn("'druidVersion' parameter is deprecated, use 'version: " + parameters.version + "' instead");
	        }
	        var value = External.jsToValue(parameters, requester);
	        value.timeAttribute = parameters.timeAttribute;
	        value.customAggregations = parameters.customAggregations || {};
	        value.customTransforms = parameters.customTransforms || {};
	        value.allowEternity = Boolean(parameters.allowEternity);
	        value.allowSelectQueries = Boolean(parameters.allowSelectQueries);
	        value.introspectionStrategy = parameters.introspectionStrategy;
	        value.exactResultsOnly = Boolean(parameters.exactResultsOnly);
	        value.context = parameters.context;
	        return new DruidExternal(value);
	    };
	    DruidExternal.getSourceList = function (requester) {
	        return requester({ query: { queryType: 'sourceList' } })
	            .then(function (sources) {
	            if (!Array.isArray(sources))
	                throw new InvalidResultError('invalid sources response', sources);
	            return sources.sort();
	        });
	    };
	    DruidExternal.getVersion = function (requester) {
	        return requester({
	            query: {
	                queryType: 'status'
	            }
	        })
	            .then(function (res) {
	            if (!DruidExternal.correctStatusResult(res))
	                throw new InvalidResultError('unexpected result from /status', res);
	            return res.version;
	        });
	    };
	    DruidExternal.cleanDatumInPlace = function (datum) {
	        for (var k in datum) {
	            if (k[0] === '!')
	                delete datum[k];
	        }
	    };
	    DruidExternal.correctTimeBoundaryResult = function (result) {
	        return Array.isArray(result) && result.length === 1 && typeof result[0].result === 'object';
	    };
	    DruidExternal.correctTimeseriesResult = function (result) {
	        return Array.isArray(result) && (result.length === 0 || typeof result[0].result === 'object');
	    };
	    DruidExternal.correctTopNResult = function (result) {
	        return Array.isArray(result) && (result.length === 0 || Array.isArray(result[0].result));
	    };
	    DruidExternal.correctGroupByResult = function (result) {
	        return Array.isArray(result) && (result.length === 0 || typeof result[0].event === 'object');
	    };
	    DruidExternal.correctSelectResult = function (result) {
	        return Array.isArray(result) && (result.length === 0 || typeof result[0].result === 'object');
	    };
	    DruidExternal.correctStatusResult = function (result) {
	        return result && typeof result.version === 'string';
	    };
	    DruidExternal.timeBoundaryPostProcessFactory = function (applies) {
	        return function (res) {
	            if (!DruidExternal.correctTimeBoundaryResult(res))
	                throw new InvalidResultError("unexpected result from Druid (timeBoundary)", res);
	            var result = res[0].result;
	            var datum = {};
	            for (var _i = 0, applies_1 = applies; _i < applies_1.length; _i++) {
	                var apply = applies_1[_i];
	                var name_1 = apply.name;
	                var aggregate = apply.expression.actions[0].action;
	                if (typeof result === 'string') {
	                    datum[name_1] = new Date(result);
	                }
	                else {
	                    if (aggregate === 'max') {
	                        datum[name_1] = new Date((result['maxIngestedEventTime'] || result['maxTime']));
	                    }
	                    else {
	                        datum[name_1] = new Date((result['minTime']));
	                    }
	                }
	            }
	            return new Dataset({ data: [datum] });
	        };
	    };
	    DruidExternal.valuePostProcess = function (res) {
	        if (!DruidExternal.correctTimeseriesResult(res))
	            throw new InvalidResultError("unexpected result from Druid (all / value)", res);
	        if (!res.length)
	            return 0;
	        return res[0].result[External.VALUE_NAME];
	    };
	    DruidExternal.totalPostProcessFactory = function (applies) {
	        return function (res) {
	            if (!DruidExternal.correctTimeseriesResult(res))
	                throw new InvalidResultError("unexpected result from Druid (all)", res);
	            if (!res.length)
	                return new Dataset({ data: [External.makeZeroDatum(applies)] });
	            var datum = res[0].result;
	            DruidExternal.cleanDatumInPlace(datum);
	            return new Dataset({ data: [datum] });
	        };
	    };
	    DruidExternal.wrapFunctionTryCatch = function (lines) {
	        return 'function(s){try{\n' + lines.filter(Boolean).join('\n') + '\n}catch(e){return null;}}';
	    };
	    DruidExternal.timeseriesNormalizerFactory = function (timestampLabel) {
	        if (timestampLabel === void 0) { timestampLabel = null; }
	        return function (res) {
	            if (!DruidExternal.correctTimeseriesResult(res))
	                throw new InvalidResultError("unexpected result from Druid (timeseries)", res);
	            return res.map(function (r) {
	                var datum = r.result;
	                DruidExternal.cleanDatumInPlace(datum);
	                if (timestampLabel)
	                    datum[timestampLabel] = r.timestamp;
	                return datum;
	            });
	        };
	    };
	    DruidExternal.topNNormalizer = function (res) {
	        if (!DruidExternal.correctTopNResult(res))
	            throw new InvalidResultError("unexpected result from Druid (topN)", res);
	        var data = res.length ? res[0].result : [];
	        for (var _i = 0, data_1 = data; _i < data_1.length; _i++) {
	            var d = data_1[_i];
	            DruidExternal.cleanDatumInPlace(d);
	        }
	        return data;
	    };
	    DruidExternal.groupByNormalizerFactory = function (timestampLabel) {
	        if (timestampLabel === void 0) { timestampLabel = null; }
	        return function (res) {
	            if (!DruidExternal.correctGroupByResult(res))
	                throw new InvalidResultError("unexpected result from Druid (groupBy)", res);
	            return res.map(function (r) {
	                var datum = r.event;
	                DruidExternal.cleanDatumInPlace(datum);
	                if (timestampLabel)
	                    datum[timestampLabel] = r.timestamp;
	                return datum;
	            });
	        };
	    };
	    DruidExternal.selectNormalizerFactory = function (timestampLabel) {
	        return function (results) {
	            var data = [];
	            for (var _i = 0, results_1 = results; _i < results_1.length; _i++) {
	                var result = results_1[_i];
	                if (!DruidExternal.correctSelectResult(result))
	                    throw new InvalidResultError("unexpected result from Druid (select)", result);
	                if (result.length === 0)
	                    continue;
	                var events = result[0].result.events;
	                for (var _a = 0, events_1 = events; _a < events_1.length; _a++) {
	                    var event = events_1[_a];
	                    var datum = event.event;
	                    if (timestampLabel != null) {
	                        datum[timestampLabel] = datum['timestamp'];
	                    }
	                    delete datum['timestamp'];
	                    DruidExternal.cleanDatumInPlace(datum);
	                    data.push(datum);
	                }
	            }
	            return data;
	        };
	    };
	    DruidExternal.postProcessFactory = function (normalizer, inflaters, attributes) {
	        return function (res) {
	            var data = normalizer(res);
	            var n = data.length;
	            for (var _i = 0, inflaters_1 = inflaters; _i < inflaters_1.length; _i++) {
	                var inflater = inflaters_1[_i];
	                for (var i = 0; i < n; i++) {
	                    inflater(data[i], i, data);
	                }
	            }
	            return new Dataset({ data: data, attributes: attributes });
	        };
	    };
	    DruidExternal.selectNextFactory = function (limit, descending) {
	        var resultsSoFar = 0;
	        return function (prevQuery, prevResult) {
	            if (!DruidExternal.correctSelectResult(prevResult))
	                throw new InvalidResultError("unexpected result from Druid (select / partial)", prevResult);
	            if (prevResult.length === 0)
	                return null;
	            var _a = prevResult[0].result, pagingIdentifiers = _a.pagingIdentifiers, events = _a.events;
	            if (events.length < prevQuery.pagingSpec.threshold)
	                return null;
	            resultsSoFar += events.length;
	            if (resultsSoFar >= limit)
	                return null;
	            var pagingIdentifiers = DruidExternal.movePagingIdentifiers(pagingIdentifiers, descending ? -1 : 1);
	            prevQuery.pagingSpec.pagingIdentifiers = pagingIdentifiers;
	            prevQuery.pagingSpec.threshold = Math.min(limit - resultsSoFar, DruidExternal.SELECT_MAX_LIMIT);
	            return prevQuery;
	        };
	    };
	    DruidExternal.generateMakerAction = function (aggregation) {
	        if (!aggregation)
	            return null;
	        var type = aggregation.type, fieldName = aggregation.fieldName;
	        if (type === 'longSum' && fieldName === 'count') {
	            return new CountAction({});
	        }
	        if (!fieldName) {
	            var fieldNames = aggregation.fieldNames;
	            if (!Array.isArray(fieldNames) || fieldNames.length !== 1)
	                return null;
	            fieldName = fieldNames[0];
	        }
	        var expression = $(fieldName);
	        switch (type) {
	            case "count":
	                return new CountAction({});
	            case "doubleSum":
	            case "longSum":
	                return new SumAction({ expression: expression });
	            case "javascript":
	                var fnAggregate = aggregation.fnAggregate, fnCombine = aggregation.fnCombine;
	                if (fnAggregate !== fnCombine || fnCombine.indexOf('+') === -1)
	                    return null;
	                return new SumAction({ expression: expression });
	            case "doubleMin":
	            case "longMin":
	                return new MinAction({ expression: expression });
	            case "doubleMax":
	            case "longMax":
	                return new MaxAction({ expression: expression });
	            default:
	                return null;
	        }
	    };
	    DruidExternal.segmentMetadataPostProcessFactory = function (timeAttribute) {
	        return function (res) {
	            var res0 = res[0];
	            if (!res0 || !res0.columns)
	                throw new InvalidResultError('malformed segmentMetadata response', res);
	            var columns = res0.columns;
	            var aggregators = res0.aggregators || {};
	            var foundTime = false;
	            var attributes = [];
	            for (var name in columns) {
	                if (!hasOwnProperty(columns, name))
	                    continue;
	                var columnData = columns[name];
	                if (columnData.errorMessage || columnData.size < 0)
	                    continue;
	                if (name === TIME_ATTRIBUTE) {
	                    attributes.push(new AttributeInfo({ name: timeAttribute, type: 'TIME' }));
	                    foundTime = true;
	                }
	                else {
	                    if (name === timeAttribute)
	                        continue;
	                    switch (columnData.type) {
	                        case 'FLOAT':
	                        case 'LONG':
	                            attributes.push(new AttributeInfo({
	                                name: name,
	                                type: 'NUMBER',
	                                unsplitable: true,
	                                makerAction: DruidExternal.generateMakerAction(aggregators[name])
	                            }));
	                            break;
	                        case 'STRING':
	                            attributes.push(new AttributeInfo({
	                                name: name,
	                                type: columnData.hasMultipleValues ? 'SET/STRING' : 'STRING'
	                            }));
	                            break;
	                        case 'hyperUnique':
	                            attributes.push(new UniqueAttributeInfo({ name: name }));
	                            break;
	                        case 'approximateHistogram':
	                            attributes.push(new HistogramAttributeInfo({ name: name }));
	                            break;
	                        case 'thetaSketch':
	                            attributes.push(new ThetaAttributeInfo({ name: name }));
	                            break;
	                    }
	                }
	            }
	            if (!foundTime)
	                throw new Error("no valid " + TIME_ATTRIBUTE + " in segmentMetadata response");
	            return attributes;
	        };
	    };
	    DruidExternal.introspectPostProcessFactory = function (timeAttribute) {
	        return function (res) {
	            if (!Array.isArray(res.dimensions) || !Array.isArray(res.metrics)) {
	                throw new InvalidResultError('malformed GET introspect response', res);
	            }
	            var attributes = [
	                new AttributeInfo({ name: timeAttribute, type: 'TIME' })
	            ];
	            res.dimensions.forEach(function (dimension) {
	                if (dimension === timeAttribute)
	                    return;
	                attributes.push(new AttributeInfo({ name: dimension, type: 'STRING' }));
	            });
	            res.metrics.forEach(function (metric) {
	                if (metric === timeAttribute)
	                    return;
	                attributes.push(new AttributeInfo({ name: metric, type: 'NUMBER', unsplitable: true }));
	            });
	            return attributes;
	        };
	    };
	    DruidExternal.movePagingIdentifiers = function (pagingIdentifiers, increment) {
	        var newPagingIdentifiers = {};
	        for (var key in pagingIdentifiers) {
	            if (!hasOwnProperty(pagingIdentifiers, key))
	                continue;
	            newPagingIdentifiers[key] = pagingIdentifiers[key] + increment;
	        }
	        return newPagingIdentifiers;
	    };
	    DruidExternal.timePartToExtraction = function (part, timezone) {
	        var format = DruidExternal.TIME_PART_TO_FORMAT[part];
	        if (format) {
	            return {
	                "format": format,
	                "locale": "en-US",
	                "timeZone": timezone.toString(),
	                "type": "timeFormat"
	            };
	        }
	        else {
	            var expr = DruidExternal.TIME_PART_TO_EXPR[part];
	            if (!expr)
	                throw new Error("can not part on " + part);
	            return {
	                type: 'javascript',
	                'function': DruidExternal.wrapFunctionTryCatch([
	                    'var d = new org.joda.time.DateTime(s);',
	                    timezone.isUTC() ? null : "d = d.withZone(org.joda.time.DateTimeZone.forID(" + JSON.stringify(timezone) + "));",
	                    ("d = " + expr + ";"),
	                    'return d;'
	                ])
	            };
	        }
	    };
	    DruidExternal.timeFloorToExtraction = function (duration, timezone) {
	        var singleSpan = duration.getSingleSpan();
	        var spanValue = duration.getSingleSpanValue();
	        if (spanValue === 1 && DruidExternal.SPAN_TO_FLOOR_FORMAT[singleSpan]) {
	            return {
	                "format": DruidExternal.SPAN_TO_FLOOR_FORMAT[singleSpan],
	                "locale": "en-US",
	                "timeZone": timezone.toString(),
	                "type": "timeFormat"
	            };
	        }
	        else {
	            var prop = DruidExternal.SPAN_TO_PROPERTY[singleSpan];
	            if (!prop)
	                throw new Error("can not floor on " + duration);
	            return {
	                type: 'javascript',
	                'function': DruidExternal.wrapFunctionTryCatch([
	                    'var d = new org.joda.time.DateTime(s);',
	                    timezone.isUTC() ? null : "d = d.withZone(org.joda.time.DateTimeZone.forID(" + JSON.stringify(timezone) + "));",
	                    ("d = d." + prop + "().roundFloorCopy();"),
	                    ("d = d." + prop + "().setCopy(Math.floor(d." + prop + "().get() / " + spanValue + ") * " + spanValue + ");"),
	                    'return d;'
	                ])
	            };
	        }
	    };
	    DruidExternal.prototype.valueOf = function () {
	        var value = _super.prototype.valueOf.call(this);
	        value.timeAttribute = this.timeAttribute;
	        value.customAggregations = this.customAggregations;
	        value.customTransforms = this.customTransforms;
	        value.allowEternity = this.allowEternity;
	        value.allowSelectQueries = this.allowSelectQueries;
	        value.introspectionStrategy = this.introspectionStrategy;
	        value.exactResultsOnly = this.exactResultsOnly;
	        value.context = this.context;
	        return value;
	    };
	    DruidExternal.prototype.toJS = function () {
	        var js = _super.prototype.toJS.call(this);
	        if (this.timeAttribute !== TIME_ATTRIBUTE)
	            js.timeAttribute = this.timeAttribute;
	        if (nonEmptyLookup(this.customAggregations))
	            js.customAggregations = this.customAggregations;
	        if (nonEmptyLookup(this.customTransforms))
	            js.customTransforms = this.customTransforms;
	        if (this.allowEternity)
	            js.allowEternity = true;
	        if (this.allowSelectQueries)
	            js.allowSelectQueries = true;
	        if (this.introspectionStrategy !== DruidExternal.DEFAULT_INTROSPECTION_STRATEGY)
	            js.introspectionStrategy = this.introspectionStrategy;
	        if (this.exactResultsOnly)
	            js.exactResultsOnly = true;
	        if (this.context)
	            js.context = this.context;
	        return js;
	    };
	    DruidExternal.prototype.equals = function (other) {
	        return _super.prototype.equals.call(this, other) &&
	            this.timeAttribute === other.timeAttribute &&
	            customAggregationsEqual(this.customAggregations, other.customAggregations) &&
	            customTransformsEqual(this.customTransforms, other.customTransforms) &&
	            this.allowEternity === other.allowEternity &&
	            this.allowSelectQueries === other.allowSelectQueries &&
	            this.introspectionStrategy === other.introspectionStrategy &&
	            this.exactResultsOnly === other.exactResultsOnly &&
	            dictEqual(this.context, other.context);
	    };
	    DruidExternal.prototype.getSingleReferenceAttributeInfo = function (ex) {
	        var freeReferences = ex.getFreeReferences();
	        if (freeReferences.length !== 1)
	            throw new Error("can not translate multi reference expression " + ex + " to Druid");
	        var referenceName = freeReferences[0];
	        return this.getAttributesInfo(referenceName);
	    };
	    DruidExternal.prototype.canHandleFilter = function (ex) {
	        return !(ex instanceof ChainExpression &&
	            ex.actions.some(function (a) { return a.action === 'cardinality'; }));
	    };
	    DruidExternal.prototype.canHandleTotal = function () {
	        return true;
	    };
	    DruidExternal.prototype.canHandleSplit = function (ex) {
	        return true;
	    };
	    DruidExternal.prototype.canHandleApply = function (ex) {
	        return true;
	    };
	    DruidExternal.prototype.canHandleSort = function (sortAction) {
	        if (this.isTimeseries()) {
	            if (sortAction.direction !== 'ascending')
	                return false;
	            return sortAction.refName() === this.split.firstSplitName();
	        }
	        else if (this.mode === 'raw') {
	            if (sortAction.refName() !== this.timeAttribute)
	                return false;
	            if (this.versionBefore('0.9.0'))
	                return sortAction.direction === 'ascending';
	            return true;
	        }
	        else {
	            return true;
	        }
	    };
	    DruidExternal.prototype.canHandleLimit = function (limitAction) {
	        return !this.isTimeseries();
	    };
	    DruidExternal.prototype.canHandleHavingFilter = function (ex) {
	        return !this.limit;
	    };
	    DruidExternal.prototype.isTimeseries = function () {
	        var split = this.split;
	        if (!split || split.isMultiSplit())
	            return false;
	        var splitExpression = split.firstSplitExpression();
	        if (this.isTimeRef(splitExpression))
	            return true;
	        if (splitExpression instanceof ChainExpression) {
	            var actions = splitExpression.actions;
	            if (actions.length !== 1)
	                return false;
	            var action = actions[0].action;
	            return action === 'timeBucket' || action === 'timeFloor';
	        }
	        return false;
	    };
	    DruidExternal.prototype.getDruidDataSource = function () {
	        var source = this.source;
	        if (Array.isArray(source)) {
	            return {
	                type: "union",
	                dataSources: source
	            };
	        }
	        else {
	            return source;
	        }
	    };
	    DruidExternal.prototype.getDimensionNameForAttribureInfo = function (attributeInfo) {
	        return attributeInfo.name === this.timeAttribute ? TIME_ATTRIBUTE : attributeInfo.name;
	    };
	    DruidExternal.prototype.checkFilterExtractability = function (attributeInfo) {
	        if (this.versionBefore('0.9.2') && attributeInfo.name === this.timeAttribute) {
	            throw new Error('can not do secondary filtering on primary time dimension (https://github.com/druid-io/druid/issues/2816)');
	        }
	    };
	    DruidExternal.prototype.makeJavaScriptFilter = function (ex) {
	        var attributeInfo = this.getSingleReferenceAttributeInfo(ex);
	        this.checkFilterExtractability(attributeInfo);
	        return {
	            type: "javascript",
	            dimension: this.getDimensionNameForAttribureInfo(attributeInfo),
	            "function": ex.getJSFn('d')
	        };
	    };
	    DruidExternal.prototype.makeExtractionFilter = function (ex) {
	        var attributeInfo = this.getSingleReferenceAttributeInfo(ex);
	        var extractionFn = this.expressionToExtractionFn(ex);
	        if (extractionFn)
	            this.checkFilterExtractability(attributeInfo);
	        return {
	            type: "extraction",
	            dimension: this.getDimensionNameForAttribureInfo(attributeInfo),
	            extractionFn: extractionFn,
	            value: "true"
	        };
	    };
	    DruidExternal.prototype.makeSelectorFilter = function (ex, value) {
	        var attributeInfo = this.getSingleReferenceAttributeInfo(ex);
	        if (attributeInfo.unsplitable) {
	            throw new Error("can not convert " + ex + " = " + value + " to filter because it references an un-filterable metric '" + attributeInfo.name + "' which is most likely rolled up.");
	        }
	        var extractionFn = this.expressionToExtractionFn(ex);
	        if (extractionFn)
	            this.checkFilterExtractability(attributeInfo);
	        if (Range.isRange(value))
	            value = value.start;
	        var druidFilter = {
	            type: "selector",
	            dimension: this.getDimensionNameForAttribureInfo(attributeInfo),
	            value: attributeInfo.serialize(value)
	        };
	        if (extractionFn) {
	            druidFilter.extractionFn = extractionFn;
	            if (this.versionBefore('0.9.1'))
	                druidFilter.type = "extraction";
	            if (this.versionBefore('0.9.0') && druidFilter.value === null)
	                druidFilter.value = '';
	        }
	        return druidFilter;
	    };
	    DruidExternal.prototype.makeInFilter = function (ex, valueSet) {
	        var _this = this;
	        var attributeInfo = this.getSingleReferenceAttributeInfo(ex);
	        var extractionFn = this.expressionToExtractionFn(ex);
	        if (extractionFn)
	            this.checkFilterExtractability(attributeInfo);
	        var elements = valueSet.elements;
	        if (elements.length < 2 ||
	            (this.versionBefore('0.9.1') && extractionFn) ||
	            this.versionBefore('0.9.0')) {
	            var fields = elements.map(function (value) {
	                return _this.makeSelectorFilter(ex, value);
	            });
	            return fields.length === 1 ? fields[0] : { type: "or", fields: fields };
	        }
	        var inFilter = {
	            type: 'in',
	            dimension: this.getDimensionNameForAttribureInfo(attributeInfo),
	            values: elements.map(function (value) { return attributeInfo.serialize(value); })
	        };
	        if (extractionFn)
	            inFilter.extractionFn = extractionFn;
	        return inFilter;
	    };
	    DruidExternal.prototype.makeBoundFilter = function (ex, range) {
	        var r0 = range.start;
	        var r1 = range.end;
	        var bounds = range.bounds;
	        if (this.versionBefore('0.9.0') || r0 < 0 || r1 < 0) {
	            return this.makeJavaScriptFilter(ex.in(range));
	        }
	        if (ex instanceof ChainExpression && (ex.getSingleAction() instanceof IndexOfAction || ex.popAction() instanceof IndexOfAction)) {
	            return this.makeJavaScriptFilter(ex.in(range));
	        }
	        var attributeInfo = this.getSingleReferenceAttributeInfo(ex);
	        var extractionFn = this.expressionToExtractionFn(ex);
	        if (this.versionBefore('0.9.1') && extractionFn) {
	            return this.makeJavaScriptFilter(ex.in(range));
	        }
	        if (extractionFn)
	            this.checkFilterExtractability(attributeInfo);
	        var boundFilter = {
	            type: "bound",
	            dimension: this.getDimensionNameForAttribureInfo(attributeInfo)
	        };
	        if (extractionFn)
	            boundFilter.extractionFn = extractionFn;
	        if (NumberRange.isNumberRange(range))
	            boundFilter.alphaNumeric = true;
	        if (r0 != null) {
	            boundFilter.lower = isDate(r0) ? r0.toISOString() : r0;
	            if (bounds[0] === '(')
	                boundFilter.lowerStrict = true;
	        }
	        if (r1 != null) {
	            boundFilter.upper = isDate(r1) ? r1.toISOString() : r1;
	            if (bounds[1] === ')')
	                boundFilter.upperStrict = true;
	        }
	        return boundFilter;
	    };
	    DruidExternal.prototype.makeRegexFilter = function (ex, regex) {
	        var attributeInfo = this.getSingleReferenceAttributeInfo(ex);
	        var extractionFn = this.expressionToExtractionFn(ex);
	        if (this.versionBefore('0.9.1') && extractionFn) {
	            return this.makeExtractionFilter(ex.match(regex));
	        }
	        if (extractionFn)
	            this.checkFilterExtractability(attributeInfo);
	        var regexFilter = {
	            type: "regex",
	            dimension: this.getDimensionNameForAttribureInfo(attributeInfo),
	            pattern: regex
	        };
	        if (extractionFn)
	            regexFilter.extractionFn = extractionFn;
	        return regexFilter;
	    };
	    DruidExternal.prototype.makeContainsFilter = function (lhs, rhs, compare) {
	        if (rhs instanceof LiteralExpression) {
	            var attributeInfo = this.getSingleReferenceAttributeInfo(lhs);
	            var extractionFn = this.expressionToExtractionFn(lhs);
	            if (extractionFn)
	                this.checkFilterExtractability(attributeInfo);
	            if (this.versionBefore('0.9.0')) {
	                if (compare === ContainsAction.IGNORE_CASE) {
	                    return {
	                        type: "search",
	                        dimension: this.getDimensionNameForAttribureInfo(attributeInfo),
	                        query: {
	                            type: "insensitive_contains",
	                            value: rhs.value
	                        }
	                    };
	                }
	                else {
	                    return this.makeJavaScriptFilter(lhs.contains(rhs, compare));
	                }
	            }
	            if (this.versionBefore('0.9.1') && extractionFn) {
	                return this.makeExtractionFilter(lhs.contains(rhs, compare));
	            }
	            var searchFilter = {
	                type: "search",
	                dimension: this.getDimensionNameForAttribureInfo(attributeInfo),
	                query: {
	                    type: "contains",
	                    value: rhs.value,
	                    caseSensitive: compare === ContainsAction.NORMAL
	                }
	            };
	            if (extractionFn)
	                searchFilter.extractionFn = extractionFn;
	            return searchFilter;
	        }
	        else {
	            return this.makeJavaScriptFilter(lhs.contains(rhs, compare));
	        }
	    };
	    DruidExternal.prototype.timelessFilterToDruid = function (filter, aggregatorFilter) {
	        var _this = this;
	        if (filter.type !== 'BOOLEAN')
	            throw new Error("must be a BOOLEAN filter");
	        if (filter instanceof RefExpression) {
	            filter = filter.is(true);
	        }
	        if (filter instanceof LiteralExpression) {
	            if (filter.value === true) {
	                return null;
	            }
	            else {
	                throw new Error("should never get here");
	            }
	        }
	        else if (filter instanceof ChainExpression) {
	            var pattern;
	            if (pattern = filter.getExpressionPattern('and')) {
	                return {
	                    type: 'and',
	                    fields: pattern.map(function (p) { return _this.timelessFilterToDruid(p, aggregatorFilter); })
	                };
	            }
	            if (pattern = filter.getExpressionPattern('or')) {
	                return {
	                    type: 'or',
	                    fields: pattern.map(function (p) { return _this.timelessFilterToDruid(p, aggregatorFilter); })
	                };
	            }
	            var filterAction = filter.lastAction();
	            var rhs = filterAction.expression;
	            var lhs = filter.popAction();
	            if (filterAction instanceof NotAction) {
	                return {
	                    type: 'not',
	                    field: this.timelessFilterToDruid(lhs, aggregatorFilter)
	                };
	            }
	            if (lhs instanceof LiteralExpression) {
	                if (filterAction.action !== 'in')
	                    throw new Error("can not convert " + filter + " to Druid filter");
	                return this.makeSelectorFilter(rhs, lhs.value);
	            }
	            if (filterAction instanceof IsAction) {
	                if (rhs instanceof LiteralExpression) {
	                    return this.makeSelectorFilter(lhs, rhs.value);
	                }
	                else {
	                    throw new Error("can not convert " + filter + " to Druid filter");
	                }
	            }
	            var freeReferences = filter.getFreeReferences();
	            if (freeReferences.length !== 1)
	                throw new Error("can not convert multi reference filter " + filter + " to Druid filter");
	            var referenceName = freeReferences[0];
	            var attributeInfo = this.getAttributesInfo(referenceName);
	            if (attributeInfo.unsplitable) {
	                throw new Error("can not convert " + filter + " to filter because it references an un-filterable metric '" + referenceName + "' which is most likely rolled up.");
	            }
	            if (filterAction instanceof InAction || filterAction instanceof OverlapAction) {
	                if (rhs instanceof LiteralExpression) {
	                    var rhsType = rhs.type;
	                    if (rhsType === 'SET/STRING' || rhsType === 'SET/NUMBER' || rhsType === 'SET/NULL') {
	                        return this.makeInFilter(lhs, rhs.value);
	                    }
	                    else if (rhsType === 'NUMBER_RANGE' || rhsType === 'TIME_RANGE' || rhsType === 'STRING_RANGE') {
	                        return this.makeBoundFilter(lhs, rhs.value);
	                    }
	                    else if (rhsType === 'SET/NUMBER_RANGE' || rhsType === 'SET/TIME_RANGE') {
	                        var elements = rhs.value.elements;
	                        var fields = elements.map(function (range) {
	                            return _this.makeBoundFilter(lhs, range);
	                        });
	                        return fields.length === 1 ? fields[0] : { type: "or", fields: fields };
	                    }
	                    else {
	                        throw new Error("not supported IN rhs type " + rhsType);
	                    }
	                }
	                else {
	                    throw new Error("can not convert " + filter + " to Druid filter");
	                }
	            }
	            if (aggregatorFilter) {
	                if (this.versionBefore('0.8.2'))
	                    throw new Error("can not express aggregate filter " + filter + " in druid < 0.8.2");
	                if (this.versionBefore('0.9.1'))
	                    return this.makeExtractionFilter(filter);
	            }
	            if (filterAction instanceof MatchAction) {
	                return this.makeRegexFilter(lhs, filterAction.regexp);
	            }
	            if (filterAction instanceof ContainsAction) {
	                return this.makeContainsFilter(lhs, rhs, filterAction.compare);
	            }
	        }
	        throw new Error("could not convert filter " + filter + " to Druid filter");
	    };
	    DruidExternal.prototype.timeFilterToIntervals = function (filter) {
	        if (filter.type !== 'BOOLEAN')
	            throw new Error("must be a BOOLEAN filter");
	        if (filter instanceof LiteralExpression) {
	            if (!filter.value)
	                return DruidExternal.FALSE_INTERVAL;
	            if (!this.allowEternity)
	                throw new Error('must filter on time unless the allowEternity flag is set');
	            return DruidExternal.TRUE_INTERVAL;
	        }
	        else if (filter instanceof ChainExpression) {
	            var lhs = filter.expression;
	            var actions = filter.actions;
	            if (actions.length !== 1)
	                throw new Error("can not convert " + filter + " to Druid interval");
	            var filterAction = actions[0];
	            var rhs = filterAction.expression;
	            if (filterAction instanceof IsAction) {
	                if (lhs instanceof RefExpression && rhs instanceof LiteralExpression) {
	                    return TimeRange.intervalFromDate(rhs.value);
	                }
	                else {
	                    throw new Error("can not convert " + filter + " to Druid interval");
	                }
	            }
	            else if (filterAction instanceof InAction) {
	                if (lhs instanceof RefExpression && rhs instanceof LiteralExpression) {
	                    var timeRanges;
	                    var rhsType = rhs.type;
	                    if (rhsType === 'SET/TIME_RANGE') {
	                        timeRanges = rhs.value.elements;
	                    }
	                    else if (rhsType === 'TIME_RANGE') {
	                        timeRanges = [rhs.value];
	                    }
	                    else {
	                        throw new Error("not supported " + rhsType + " for time filtering");
	                    }
	                    var intervals = timeRanges.map(function (timeRange) { return timeRange.toInterval(); });
	                    return intervals.length === 1 ? intervals[0] : intervals;
	                }
	                else {
	                    throw new Error("can not convert " + filter + " to Druid interval");
	                }
	            }
	            else {
	                throw new Error("can not convert " + filter + " to Druid interval");
	            }
	        }
	        else {
	            throw new Error("can not convert " + filter + " to Druid interval");
	        }
	    };
	    DruidExternal.prototype.filterToDruid = function (filter) {
	        if (filter.type !== 'BOOLEAN')
	            throw new Error("must be a BOOLEAN filter");
	        if (filter.equals(Expression.FALSE)) {
	            return {
	                intervals: DruidExternal.FALSE_INTERVAL,
	                filter: null
	            };
	        }
	        else {
	            var timeAttribute_1 = this.timeAttribute;
	            var _a = filter.extractFromAnd(function (ex) {
	                if (ex instanceof ChainExpression) {
	                    var op = ex.expression;
	                    var actions = ex.actions;
	                    if (op instanceof RefExpression) {
	                        if (!(op.name === timeAttribute_1 && actions.length === 1))
	                            return false;
	                        var action = actions[0].action;
	                        return action === 'is' || action === 'in';
	                    }
	                }
	                return false;
	            }), extract = _a.extract, rest = _a.rest;
	            return {
	                intervals: this.timeFilterToIntervals(extract),
	                filter: this.timelessFilterToDruid(rest, false)
	            };
	        }
	    };
	    DruidExternal.prototype.isTimeRef = function (ex) {
	        return ex instanceof RefExpression && ex.name === this.timeAttribute;
	    };
	    DruidExternal.prototype.splitExpressionToGranularityInflater = function (splitExpression, label) {
	        if (this.isTimeRef(splitExpression)) {
	            return {
	                granularity: 'none',
	                inflater: External.timeInflaterFactory(label)
	            };
	        }
	        else if (splitExpression instanceof ChainExpression) {
	            var splitActions = splitExpression.actions;
	            if (this.isTimeRef(splitExpression.expression) && splitActions.length === 1) {
	                var action = splitActions[0];
	                if (action instanceof TimeBucketAction || action instanceof TimeFloorAction) {
	                    var duration = action.duration;
	                    var timezone = action.getTimezone();
	                    return {
	                        granularity: {
	                            type: "period",
	                            period: duration.toString(),
	                            timeZone: timezone.toString()
	                        },
	                        inflater: action.action === 'timeBucket' ?
	                            External.timeRangeInflaterFactory(label, duration, timezone) :
	                            External.timeInflaterFactory(label)
	                    };
	                }
	            }
	        }
	        return null;
	    };
	    DruidExternal.prototype.expressionToExtractionFn = function (expression) {
	        var extractionFns = [];
	        this._expressionToExtractionFns(expression, extractionFns);
	        switch (extractionFns.length) {
	            case 0: return null;
	            case 1: return extractionFns[0];
	            default:
	                if (extractionFns.every(function (extractionFn) { return extractionFn.type === 'javascript'; })) {
	                    return this.expressionToJavaScriptExtractionFn(expression);
	                }
	                if (this.versionBefore('0.9.0')) {
	                    try {
	                        return this.expressionToJavaScriptExtractionFn(expression);
	                    }
	                    catch (e) {
	                        throw new Error("can not convert " + expression + " to filter in Druid < 0.9.0");
	                    }
	                }
	                return { type: 'cascade', extractionFns: extractionFns };
	        }
	    };
	    DruidExternal.prototype._expressionToExtractionFns = function (expression, extractionFns) {
	        var freeReferences = expression.getFreeReferences();
	        if (freeReferences.length !== 1) {
	            throw new Error("must have 1 reference (has " + freeReferences.length + "): " + expression);
	        }
	        if (expression instanceof RefExpression) {
	            this._processRefExtractionFn(expression, extractionFns);
	            return;
	        }
	        if (expression instanceof ChainExpression) {
	            var lead = expression.expression;
	            var actions = expression.actions;
	            var i = 0;
	            var curAction = actions[0];
	            var concatPrefix = [];
	            if (curAction.action === 'concat') {
	                concatPrefix.push(lead);
	                while (curAction && curAction.action === 'concat') {
	                    concatPrefix.push(curAction.expression);
	                    curAction = actions[++i];
	                }
	                this._processConcatExtractionFn(concatPrefix, extractionFns);
	            }
	            else if (curAction.action === 'customTransform') {
	                extractionFns.push(this.customTransformToExtractionFn(curAction));
	                return;
	            }
	            else if (lead.type === 'NUMBER' && (expression.type === 'NUMBER' || expression.type === 'NUMBER_RANGE')) {
	                extractionFns.push(this.expressionToJavaScriptExtractionFn(expression));
	                return;
	            }
	            else if (!lead.isOp('ref')) {
	                throw new Error("can not convert complex: " + lead);
	            }
	            var type = expression.expression.type;
	            while (curAction) {
	                var nextAction = actions[i + 1];
	                var extractionFn;
	                if (nextAction instanceof FallbackAction) {
	                    extractionFn = this.actionToExtractionFn(curAction, nextAction);
	                    i++;
	                }
	                else if (curAction instanceof CastAction && curAction.outputType === 'STRING' && !nextAction) {
	                    break;
	                }
	                else {
	                    extractionFn = this.actionToExtractionFn(curAction, null, type);
	                }
	                type = curAction.getOutputType(type);
	                extractionFns.push(extractionFn);
	                curAction = actions[++i];
	            }
	        }
	    };
	    DruidExternal.prototype._processRefExtractionFn = function (ref, extractionFns) {
	        var attributeInfo = this.getAttributesInfo(ref.name);
	        if (ref.type === 'BOOLEAN') {
	            extractionFns.push({
	                type: "lookup",
	                lookup: {
	                    type: "map",
	                    map: {
	                        "0": "false",
	                        "1": "true",
	                        "false": "false",
	                        "true": "true"
	                    }
	                }
	            });
	            return;
	        }
	    };
	    DruidExternal.prototype.actionToExtractionFn = function (action, fallbackAction, expressionType) {
	        if (action.action === 'extract' || action.action === 'lookup') {
	            var retainMissingValue = false;
	            var replaceMissingValueWith = null;
	            if (fallbackAction) {
	                var fallbackExpression = fallbackAction.expression;
	                if (fallbackExpression.isOp("ref")) {
	                    retainMissingValue = true;
	                }
	                else if (fallbackExpression.isOp("literal")) {
	                    replaceMissingValueWith = fallbackExpression.getLiteralValue();
	                }
	                else {
	                    throw new Error("unsupported fallback expression: " + fallbackExpression);
	                }
	            }
	            if (action instanceof ExtractAction) {
	                if (this.versionBefore('0.9.0') && (retainMissingValue === false || replaceMissingValueWith !== null)) {
	                    return this.actionToJavaScriptExtractionFn(action);
	                }
	                var regexExtractionFn = {
	                    type: "regex",
	                    expr: action.regexp
	                };
	                if (!retainMissingValue) {
	                    regexExtractionFn.replaceMissingValue = true;
	                }
	                if (replaceMissingValueWith !== null) {
	                    regexExtractionFn.replaceMissingValueWith = replaceMissingValueWith;
	                }
	                return regexExtractionFn;
	            }
	            if (action instanceof LookupAction) {
	                var lookupExtractionFn = {
	                    type: "registeredLookup",
	                    lookup: action.lookup
	                };
	                if (this.versionBefore('0.9.1') || /-legacy-lookups/.test(this.version)) {
	                    lookupExtractionFn = {
	                        type: "lookup",
	                        lookup: {
	                            type: "namespace",
	                            "namespace": action.lookup
	                        }
	                    };
	                }
	                if (retainMissingValue) {
	                    lookupExtractionFn.retainMissingValue = true;
	                }
	                if (replaceMissingValueWith !== null) {
	                    lookupExtractionFn.replaceMissingValueWith = replaceMissingValueWith;
	                }
	                return lookupExtractionFn;
	            }
	        }
	        if (fallbackAction) {
	            throw new Error("unsupported fallback after " + action.action + " action");
	        }
	        if (action.getOutputType(null) === 'BOOLEAN') {
	            return this.actionToJavaScriptExtractionFn(action);
	        }
	        if (action instanceof SubstrAction) {
	            if (this.versionBefore('0.9.0'))
	                return this.actionToJavaScriptExtractionFn(action);
	            return {
	                type: "substring",
	                index: action.position,
	                length: action.length
	            };
	        }
	        if (action instanceof TimeBucketAction || action instanceof TimeFloorAction) {
	            return DruidExternal.timeFloorToExtraction(action.duration, action.getTimezone());
	        }
	        if (action instanceof TimePartAction) {
	            return DruidExternal.timePartToExtraction(action.part, action.getTimezone());
	        }
	        if (action instanceof CustomTransformAction) {
	            return this.customTransformToExtractionFn(action);
	        }
	        if (action instanceof TransformCaseAction) {
	            var transformType = DruidExternal.caseToDruid[action.transformType];
	            if (!transformType)
	                throw new Error("unsupported case transformation '" + transformType + "'");
	            return {
	                type: transformType
	            };
	        }
	        if (action instanceof NumberBucketAction) {
	            return this.actionToJavaScriptExtractionFn(action);
	        }
	        if (action instanceof AbsoluteAction || action instanceof PowerAction || action instanceof LengthAction || action instanceof CardinalityAction || action instanceof CastAction || action instanceof IndexOfAction) {
	            return this.actionToJavaScriptExtractionFn(action, expressionType);
	        }
	        if (action instanceof FallbackAction && action.expression.isOp('literal')) {
	            return {
	                type: "lookup",
	                retainMissingValue: true,
	                lookup: {
	                    type: "map",
	                    map: {
	                        "": action.getLiteralValue()
	                    }
	                }
	            };
	        }
	        throw new Error("can not covert " + action + " to extractionFn");
	    };
	    DruidExternal.prototype._processConcatExtractionFn = function (pattern, extractionFns) {
	        var _this = this;
	        if (this.versionBefore('0.9.1')) {
	            extractionFns.push({
	                type: "javascript",
	                'function': Expression.concat(pattern).getJSFn('d'),
	                injective: true
	            });
	            return;
	        }
	        var format = pattern.map(function (ex) {
	            if (ex instanceof LiteralExpression) {
	                return ex.value.replace(/%/g, '\\%');
	            }
	            if (!ex.isOp('ref')) {
	                _this._expressionToExtractionFns(ex, extractionFns);
	            }
	            return '%s';
	        }).join('');
	        extractionFns.push({
	            type: 'stringFormat',
	            format: format,
	            nullHandling: 'returnNull'
	        });
	    };
	    DruidExternal.prototype.customTransformToExtractionFn = function (action) {
	        var custom = action.custom;
	        var customExtractionFn = this.customTransforms[custom];
	        if (!customExtractionFn)
	            throw new Error("could not find extraction function: '" + custom + "'");
	        var extractionFn = customExtractionFn.extractionFn;
	        if (typeof extractionFn.type !== 'string')
	            throw new Error("must have type in custom extraction fn '" + custom + "'");
	        try {
	            JSON.parse(JSON.stringify(customExtractionFn));
	        }
	        catch (e) {
	            throw new Error("must have JSON extraction Fn '" + custom + "'");
	        }
	        return extractionFn;
	    };
	    DruidExternal.prototype.actionToJavaScriptExtractionFn = function (action, type) {
	        return this.expressionToJavaScriptExtractionFn($('x', type).performAction(action));
	    };
	    DruidExternal.prototype.expressionToJavaScriptExtractionFn = function (ex) {
	        return {
	            type: "javascript",
	            'function': ex.getJSFn('d')
	        };
	    };
	    DruidExternal.prototype.expressionToDimensionInflater = function (expression, label) {
	        var freeReferences = expression.getFreeReferences();
	        if (freeReferences.length !== 1) {
	            throw new Error("must have 1 reference (has " + freeReferences.length + "): " + expression);
	        }
	        var referenceName = freeReferences[0];
	        var attributeInfo = this.getAttributesInfo(referenceName);
	        if (attributeInfo.unsplitable) {
	            throw new Error("can not convert " + expression + " to split because it references an un-splitable metric '" + referenceName + "' which is most likely rolled up.");
	        }
	        var extractionFn = this.expressionToExtractionFn(expression);
	        var simpleInflater = External.getSimpleInflater(expression, label);
	        var dimension = {
	            type: "default",
	            dimension: this.getDimensionNameForAttribureInfo(attributeInfo),
	            outputName: label
	        };
	        if (extractionFn) {
	            dimension.type = "extraction";
	            dimension.extractionFn = extractionFn;
	        }
	        if (expression instanceof RefExpression) {
	            return {
	                dimension: dimension,
	                inflater: simpleInflater
	            };
	        }
	        if (expression instanceof ChainExpression) {
	            var splitAction = expression.lastAction();
	            if (splitAction instanceof TimeBucketAction) {
	                return {
	                    dimension: dimension,
	                    inflater: External.timeRangeInflaterFactory(label, splitAction.duration, splitAction.getTimezone())
	                };
	            }
	            if (splitAction instanceof TimePartAction) {
	                return {
	                    dimension: dimension,
	                    inflater: simpleInflater
	                };
	            }
	            if (splitAction instanceof NumberBucketAction) {
	                return {
	                    dimension: dimension,
	                    inflater: External.numberRangeInflaterFactory(label, splitAction.size)
	                };
	            }
	            if (splitAction instanceof CardinalityAction) {
	                return {
	                    dimension: dimension,
	                    inflater: External.setCardinalityInflaterFactory(label)
	                };
	            }
	        }
	        var effectiveType = unwrapSetType(expression.type);
	        if (simpleInflater || effectiveType === 'STRING') {
	            return {
	                dimension: dimension,
	                inflater: simpleInflater
	            };
	        }
	        throw new Error("could not convert " + expression + " to a Druid dimension");
	    };
	    DruidExternal.prototype.splitToDruid = function (split) {
	        var _this = this;
	        if (split.isMultiSplit()) {
	            var timestampLabel = null;
	            var granularity = null;
	            var dimensions = [];
	            var inflaters = [];
	            split.mapSplits(function (name, expression) {
	                if (!granularity && !_this.limit && !_this.sort) {
	                    var granularityInflater = _this.splitExpressionToGranularityInflater(expression, name);
	                    if (granularityInflater) {
	                        timestampLabel = name;
	                        granularity = granularityInflater.granularity;
	                        inflaters.push(granularityInflater.inflater);
	                        return;
	                    }
	                }
	                var _a = _this.expressionToDimensionInflater(expression, name), dimension = _a.dimension, inflater = _a.inflater;
	                dimensions.push(dimension);
	                if (inflater) {
	                    inflaters.push(inflater);
	                }
	            });
	            return {
	                queryType: 'groupBy',
	                dimensions: dimensions,
	                timestampLabel: timestampLabel,
	                granularity: granularity || 'all',
	                postProcess: DruidExternal.postProcessFactory(DruidExternal.groupByNormalizerFactory(timestampLabel), inflaters, null)
	            };
	        }
	        var splitExpression = split.firstSplitExpression();
	        var label = split.firstSplitName();
	        var granularityInflater = this.splitExpressionToGranularityInflater(splitExpression, label);
	        if (granularityInflater) {
	            return {
	                queryType: 'timeseries',
	                granularity: granularityInflater.granularity,
	                postProcess: DruidExternal.postProcessFactory(DruidExternal.timeseriesNormalizerFactory(label), [granularityInflater.inflater], null)
	            };
	        }
	        var dimensionInflater = this.expressionToDimensionInflater(splitExpression, label);
	        var inflaters = [dimensionInflater.inflater].filter(Boolean);
	        if (this.havingFilter.equals(Expression.TRUE) &&
	            (this.limit || split.maxBucketNumber() < 1000) &&
	            !this.exactResultsOnly) {
	            return {
	                queryType: 'topN',
	                dimension: dimensionInflater.dimension,
	                granularity: 'all',
	                postProcess: DruidExternal.postProcessFactory(DruidExternal.topNNormalizer, inflaters, null)
	            };
	        }
	        return {
	            queryType: 'groupBy',
	            dimensions: [dimensionInflater.dimension],
	            granularity: 'all',
	            postProcess: DruidExternal.postProcessFactory(DruidExternal.groupByNormalizerFactory(), inflaters, null)
	        };
	    };
	    DruidExternal.prototype.getAccessTypeForAggregation = function (aggregationType) {
	        if (aggregationType === 'hyperUnique' || aggregationType === 'cardinality')
	            return 'hyperUniqueCardinality';
	        var customAggregations = this.customAggregations;
	        for (var customName in customAggregations) {
	            if (!hasOwnProperty(customAggregations, customName))
	                continue;
	            var customAggregation = customAggregations[customName];
	            if (customAggregation.aggregation.type === aggregationType) {
	                return customAggregation.accessType || 'fieldAccess';
	            }
	        }
	        return 'fieldAccess';
	    };
	    DruidExternal.prototype.getAccessType = function (aggregations, aggregationName) {
	        for (var _i = 0, aggregations_1 = aggregations; _i < aggregations_1.length; _i++) {
	            var aggregation = aggregations_1[_i];
	            if (aggregation.name === aggregationName) {
	                var aggregationType = aggregation.type;
	                if (aggregationType === 'filtered')
	                    aggregationType = aggregation.aggregator.type;
	                return this.getAccessTypeForAggregation(aggregationType);
	            }
	        }
	        return 'fieldAccess';
	    };
	    DruidExternal.prototype.expressionToPostAggregation = function (ex, aggregations, postAggregations) {
	        var _this = this;
	        if (ex instanceof RefExpression) {
	            var refName = ex.name;
	            return {
	                type: this.getAccessType(aggregations, refName),
	                fieldName: refName
	            };
	        }
	        else if (ex instanceof LiteralExpression) {
	            if (ex.type !== 'NUMBER')
	                throw new Error("must be a NUMBER type");
	            return {
	                type: 'constant',
	                value: ex.value
	            };
	        }
	        else if (ex instanceof ChainExpression) {
	            var lastAction = ex.lastAction();
	            if (lastAction instanceof AbsoluteAction || lastAction instanceof PowerAction || lastAction instanceof FallbackAction || lastAction instanceof CastAction || lastAction instanceof IndexOfAction || lastAction instanceof TransformCaseAction) {
	                var fieldNameRefs = ex.getFreeReferences();
	                var fieldNames = fieldNameRefs.map(function (fieldNameRef) {
	                    var accessType = _this.getAccessType(aggregations, fieldNameRef);
	                    if (accessType === 'fieldAccess')
	                        return fieldNameRef;
	                    var fieldNameRefTemp = '!F_' + fieldNameRef;
	                    postAggregations.push({
	                        name: fieldNameRefTemp,
	                        type: accessType,
	                        fieldName: fieldNameRef
	                    });
	                    return fieldNameRefTemp;
	                });
	                return {
	                    type: 'javascript',
	                    fieldNames: fieldNames,
	                    'function': "function(" + fieldNameRefs.map(RefExpression.toJavaScriptSafeName) + ") { return " + ex.getJS(null) + "; }"
	                };
	            }
	            var pattern;
	            if (pattern = ex.getExpressionPattern('add')) {
	                return {
	                    type: 'arithmetic',
	                    fn: '+',
	                    fields: pattern.map(function (e) { return _this.expressionToPostAggregation(e, aggregations, postAggregations); })
	                };
	            }
	            if (pattern = ex.getExpressionPattern('subtract')) {
	                return {
	                    type: 'arithmetic',
	                    fn: '-',
	                    fields: pattern.map(function (e) { return _this.expressionToPostAggregation(e, aggregations, postAggregations); })
	                };
	            }
	            if (pattern = ex.getExpressionPattern('multiply')) {
	                return {
	                    type: 'arithmetic',
	                    fn: '*',
	                    fields: pattern.map(function (e) { return _this.expressionToPostAggregation(e, aggregations, postAggregations); })
	                };
	            }
	            if (pattern = ex.getExpressionPattern('divide')) {
	                return {
	                    type: 'arithmetic',
	                    fn: '/',
	                    fields: pattern.map(function (e) { return _this.expressionToPostAggregation(e, aggregations, postAggregations); })
	                };
	            }
	            throw new Error("can not convert chain to post agg: " + ex);
	        }
	        else {
	            throw new Error("can not convert expression to post agg: " + ex);
	        }
	    };
	    DruidExternal.prototype.applyToPostAggregation = function (action, aggregations, postAggregations) {
	        var postAgg = this.expressionToPostAggregation(action.expression, aggregations, postAggregations);
	        postAgg.name = action.name;
	        postAggregations.push(postAgg);
	    };
	    DruidExternal.prototype.makeNativeAggregateFilter = function (filterExpression, aggregator) {
	        return {
	            type: "filtered",
	            name: aggregator.name,
	            filter: this.timelessFilterToDruid(filterExpression, true),
	            aggregator: aggregator
	        };
	    };
	    DruidExternal.prototype.makeStandardAggregation = function (name, aggregateAction) {
	        var fn = aggregateAction.action;
	        var aggregateExpression = aggregateAction.expression;
	        var aggregation = {
	            name: name,
	            type: AGGREGATE_TO_DRUID[fn]
	        };
	        if (fn !== 'count') {
	            if (aggregateExpression instanceof RefExpression) {
	                var refName = aggregateExpression.name;
	                var attributeInfo = this.getAttributesInfo(refName);
	                if (attributeInfo.unsplitable) {
	                    aggregation.fieldName = refName;
	                }
	                else {
	                    return this.makeJavaScriptAggregation(name, aggregateAction);
	                }
	            }
	            else {
	                return this.makeJavaScriptAggregation(name, aggregateAction);
	            }
	        }
	        return aggregation;
	    };
	    DruidExternal.prototype.makeCountDistinctAggregation = function (name, action, postAggregations) {
	        if (this.exactResultsOnly) {
	            throw new Error("approximate query not allowed");
	        }
	        var attribute = action.expression;
	        if (attribute instanceof RefExpression) {
	            var attributeName = attribute.name;
	        }
	        else {
	            throw new Error("can not compute countDistinct on derived attribute: " + attribute);
	        }
	        var attributeInfo = this.getAttributesInfo(attributeName);
	        if (attributeInfo instanceof UniqueAttributeInfo) {
	            return {
	                name: name,
	                type: "hyperUnique",
	                fieldName: attributeName
	            };
	        }
	        else if (attributeInfo instanceof ThetaAttributeInfo) {
	            var tempName = '!Theta_' + name;
	            postAggregations.push({
	                type: "thetaSketchEstimate",
	                name: name,
	                field: { type: 'fieldAccess', fieldName: tempName }
	            });
	            return {
	                name: tempName,
	                type: "thetaSketch",
	                fieldName: attributeName
	            };
	        }
	        else {
	            return {
	                name: name,
	                type: "cardinality",
	                fieldNames: [attributeName],
	                byRow: true
	            };
	        }
	    };
	    DruidExternal.prototype.makeCustomAggregation = function (name, action) {
	        var customAggregationName = action.custom;
	        var customAggregation = this.customAggregations[customAggregationName];
	        if (!customAggregation)
	            throw new Error("could not find '" + customAggregationName + "'");
	        var aggregationObj = customAggregation.aggregation;
	        if (typeof aggregationObj.type !== 'string')
	            throw new Error("must have type in custom aggregation '" + customAggregationName + "'");
	        try {
	            aggregationObj = JSON.parse(JSON.stringify(aggregationObj));
	        }
	        catch (e) {
	            throw new Error("must have JSON custom aggregation '" + customAggregationName + "'");
	        }
	        aggregationObj.name = name;
	        return aggregationObj;
	    };
	    DruidExternal.prototype.makeQuantileAggregation = function (name, action, postAggregations) {
	        if (this.exactResultsOnly) {
	            throw new Error("approximate query not allowed");
	        }
	        var attribute = action.expression;
	        if (attribute instanceof RefExpression) {
	            var attributeName = attribute.name;
	        }
	        else {
	            throw new Error("can not compute countDistinct on derived attribute: " + attribute);
	        }
	        var histogramAggregationName = "!H_" + name;
	        var aggregation = {
	            name: histogramAggregationName,
	            type: "approxHistogramFold",
	            fieldName: attributeName
	        };
	        postAggregations.push({
	            name: name,
	            type: "quantile",
	            fieldName: histogramAggregationName,
	            probability: action.quantile
	        });
	        return aggregation;
	    };
	    DruidExternal.prototype.makeJavaScriptAggregation = function (name, aggregateAction) {
	        var aggregateActionType = aggregateAction.action;
	        var aggregateExpression = aggregateAction.expression;
	        var aggregateFunction = AGGREGATE_TO_FUNCTION[aggregateActionType];
	        if (!aggregateFunction)
	            throw new Error("Can not convert " + aggregateActionType + " to JS");
	        var zero = AGGREGATE_TO_ZERO[aggregateActionType];
	        var fieldNames = aggregateExpression.getFreeReferences();
	        var simpleFieldNames = fieldNames.map(RefExpression.toJavaScriptSafeName);
	        return {
	            name: name,
	            type: "javascript",
	            fieldNames: fieldNames,
	            fnAggregate: "function($$," + simpleFieldNames.join(',') + ") { return " + aggregateFunction('$$', aggregateExpression.getJS(null)) + "; }",
	            fnCombine: "function(a,b) { return " + aggregateFunction('a', 'b') + "; }",
	            fnReset: "function() { return " + zero + "; }"
	        };
	    };
	    DruidExternal.prototype.applyToAggregation = function (action, aggregations, postAggregations) {
	        var applyExpression = action.expression;
	        if (applyExpression.op !== 'chain')
	            throw new Error("can not convert apply: " + applyExpression);
	        var actions = applyExpression.actions;
	        var filterExpression = null;
	        var aggregateAction = null;
	        if (actions.length === 1) {
	            aggregateAction = actions[0];
	        }
	        else if (actions.length === 2) {
	            var filterAction = actions[0];
	            if (filterAction instanceof FilterAction) {
	                filterExpression = filterAction.expression;
	            }
	            else {
	                throw new Error("first action not a filter in: " + applyExpression);
	            }
	            aggregateAction = actions[1];
	        }
	        else {
	            throw new Error("can not convert strange apply: " + applyExpression);
	        }
	        var aggregation;
	        switch (aggregateAction.action) {
	            case "count":
	            case "sum":
	            case "min":
	            case "max":
	                aggregation = this.makeStandardAggregation(action.name, aggregateAction);
	                break;
	            case "countDistinct":
	                aggregation = this.makeCountDistinctAggregation(action.name, aggregateAction, postAggregations);
	                break;
	            case "quantile":
	                aggregation = this.makeQuantileAggregation(action.name, aggregateAction, postAggregations);
	                break;
	            case "customAggregate":
	                aggregation = this.makeCustomAggregation(action.name, aggregateAction);
	                break;
	            default:
	                throw new Error("unsupported aggregate action " + aggregateAction.action);
	        }
	        if (filterExpression) {
	            aggregation = this.makeNativeAggregateFilter(filterExpression, aggregation);
	        }
	        aggregations.push(aggregation);
	    };
	    DruidExternal.prototype.getAggregationsAndPostAggregations = function (applies) {
	        var _this = this;
	        var _a = External.segregationAggregateApplies(applies.map(function (apply) {
	            var expression = apply.expression;
	            expression = _this.switchToRollupCount(_this.inlineDerivedAttributesInAggregate(expression).decomposeAverage()).distribute();
	            return apply.changeExpression(expression);
	        })), aggregateApplies = _a.aggregateApplies, postAggregateApplies = _a.postAggregateApplies;
	        var aggregations = [];
	        var postAggregations = [];
	        for (var _i = 0, aggregateApplies_1 = aggregateApplies; _i < aggregateApplies_1.length; _i++) {
	            var aggregateApply = aggregateApplies_1[_i];
	            this.applyToAggregation(aggregateApply, aggregations, postAggregations);
	        }
	        for (var _b = 0, postAggregateApplies_1 = postAggregateApplies; _b < postAggregateApplies_1.length; _b++) {
	            var postAggregateApply = postAggregateApplies_1[_b];
	            this.applyToPostAggregation(postAggregateApply, aggregations, postAggregations);
	        }
	        return {
	            aggregations: aggregations,
	            postAggregations: postAggregations
	        };
	    };
	    DruidExternal.prototype.makeHavingComparison = function (agg, op, value) {
	        switch (op) {
	            case '<':
	                return { type: "lessThan", aggregation: agg, value: value };
	            case '>':
	                return { type: "greaterThan", aggregation: agg, value: value };
	            case '<=':
	                return { type: 'not', havingSpec: { type: "greaterThan", aggregation: agg, value: value } };
	            case '>=':
	                return { type: 'not', havingSpec: { type: "lessThan", aggregation: agg, value: value } };
	            default:
	                throw new Error("unknown op: " + op);
	        }
	    };
	    DruidExternal.prototype.inToHavingFilter = function (agg, range) {
	        var havingSpecs = [];
	        if (range.start !== null) {
	            havingSpecs.push(this.makeHavingComparison(agg, (range.bounds[0] === '[' ? '>=' : '>'), range.start));
	        }
	        if (range.end !== null) {
	            havingSpecs.push(this.makeHavingComparison(agg, (range.bounds[1] === ']' ? '<=' : '<'), range.end));
	        }
	        return havingSpecs.length === 1 ? havingSpecs[0] : { type: 'and', havingSpecs: havingSpecs };
	    };
	    DruidExternal.prototype.havingFilterToDruid = function (filter) {
	        var _this = this;
	        if (filter instanceof LiteralExpression) {
	            if (filter.value === true) {
	                return null;
	            }
	            else {
	                throw new Error("should never get here");
	            }
	        }
	        else if (filter instanceof ChainExpression) {
	            var pattern;
	            if (pattern = filter.getExpressionPattern('and')) {
	                return {
	                    type: 'and',
	                    havingSpecs: pattern.map(this.havingFilterToDruid, this)
	                };
	            }
	            if (pattern = filter.getExpressionPattern('or')) {
	                return {
	                    type: 'or',
	                    havingSpecs: pattern.map(this.havingFilterToDruid, this)
	                };
	            }
	            if (filter.lastAction() instanceof NotAction) {
	                return this.havingFilterToDruid(filter.popAction());
	            }
	            var lhs = filter.expression;
	            var actions = filter.actions;
	            if (actions.length !== 1)
	                throw new Error("can not convert " + filter + " to Druid interval");
	            var filterAction = actions[0];
	            var rhs = filterAction.expression;
	            if (filterAction instanceof IsAction) {
	                if (lhs instanceof RefExpression && rhs instanceof LiteralExpression) {
	                    return {
	                        type: "equalTo",
	                        aggregation: lhs.name,
	                        value: rhs.value
	                    };
	                }
	                else {
	                    throw new Error("can not convert " + filter + " to Druid filter");
	                }
	            }
	            else if (filterAction instanceof InAction) {
	                if (lhs instanceof RefExpression && rhs instanceof LiteralExpression) {
	                    var rhsType = rhs.type;
	                    if (rhsType === 'SET/STRING') {
	                        return {
	                            type: "or",
	                            havingSpecs: rhs.value.elements.map(function (value) {
	                                return {
	                                    type: "equalTo",
	                                    aggregation: lhs.name,
	                                    value: value
	                                };
	                            })
	                        };
	                    }
	                    else if (rhsType === 'SET/NUMBER_RANGE') {
	                        return {
	                            type: "or",
	                            havingSpecs: rhs.value.elements.map(function (value) {
	                                return _this.inToHavingFilter(lhs.name, value);
	                            }, this)
	                        };
	                    }
	                    else if (rhsType === 'NUMBER_RANGE') {
	                        return this.inToHavingFilter(lhs.name, rhs.value);
	                    }
	                    else if (rhsType === 'TIME_RANGE') {
	                        throw new Error("can not compute having filter on time");
	                    }
	                    else {
	                        throw new Error("not supported " + rhsType);
	                    }
	                }
	                else {
	                    throw new Error("can not convert " + filter + " to Druid having filter");
	                }
	            }
	        }
	        throw new Error("could not convert filter " + filter + " to Druid filter");
	    };
	    DruidExternal.prototype.isMinMaxTimeApply = function (apply) {
	        var applyExpression = apply.expression;
	        if (applyExpression instanceof ChainExpression) {
	            var actions = applyExpression.actions;
	            if (actions.length !== 1)
	                return false;
	            var minMaxAction = actions[0];
	            return (minMaxAction.action === "min" || minMaxAction.action === "max") &&
	                this.isTimeRef(minMaxAction.expression);
	        }
	        else {
	            return false;
	        }
	    };
	    DruidExternal.prototype.getTimeBoundaryQueryAndPostProcess = function () {
	        var _a = this, applies = _a.applies, context = _a.context;
	        var druidQuery = {
	            queryType: "timeBoundary",
	            dataSource: this.getDruidDataSource()
	        };
	        if (context) {
	            druidQuery.context = context;
	        }
	        if (applies.length === 1) {
	            var loneApplyExpression = applies[0].expression;
	            druidQuery.bound = loneApplyExpression.actions[0].action + "Time";
	        }
	        return {
	            query: druidQuery,
	            postProcess: DruidExternal.timeBoundaryPostProcessFactory(applies)
	        };
	    };
	    DruidExternal.prototype.getQueryAndPostProcess = function () {
	        var _this = this;
	        var _a = this, mode = _a.mode, applies = _a.applies, sort = _a.sort, limit = _a.limit, context = _a.context;
	        if (applies && applies.length && applies.every(this.isMinMaxTimeApply, this)) {
	            return this.getTimeBoundaryQueryAndPostProcess();
	        }
	        var druidQuery = {
	            queryType: 'timeseries',
	            dataSource: this.getDruidDataSource(),
	            intervals: null,
	            granularity: 'all'
	        };
	        if (context) {
	            druidQuery.context = shallowCopy(context);
	        }
	        var filterAndIntervals = this.filterToDruid(this.getQueryFilter());
	        druidQuery.intervals = filterAndIntervals.intervals;
	        if (filterAndIntervals.filter) {
	            druidQuery.filter = filterAndIntervals.filter;
	        }
	        switch (mode) {
	            case 'raw':
	                if (!this.allowSelectQueries) {
	                    throw new Error("to issues 'select' queries allowSelectQueries flag must be set");
	                }
	                var selectDimensions = [];
	                var selectMetrics = [];
	                var inflaters = [];
	                var timeAttribute = this.timeAttribute;
	                var derivedAttributes = this.derivedAttributes;
	                var selectedTimeAttribute = null;
	                var selectedAttributes = this.getSelectedAttributes();
	                selectedAttributes.forEach(function (attribute) {
	                    var name = attribute.name, type = attribute.type, unsplitable = attribute.unsplitable;
	                    if (name === timeAttribute) {
	                        selectedTimeAttribute = name;
	                    }
	                    else {
	                        if (unsplitable) {
	                            selectMetrics.push(name);
	                        }
	                        else {
	                            var derivedAttribute = derivedAttributes[name];
	                            if (derivedAttribute) {
	                                if (_this.versionBefore('0.9.1')) {
	                                    throw new Error("can not have derived attributes in Druid select in " + _this.version + ", upgrade to 0.9.1");
	                                }
	                                var dimensionInflater = _this.expressionToDimensionInflater(derivedAttribute, name);
	                                selectDimensions.push(dimensionInflater.dimension);
	                                if (dimensionInflater.inflater)
	                                    inflaters.push(dimensionInflater.inflater);
	                                return;
	                            }
	                            else {
	                                selectDimensions.push(name);
	                            }
	                        }
	                    }
	                    switch (type) {
	                        case 'BOOLEAN':
	                            inflaters.push(External.booleanInflaterFactory(name));
	                            break;
	                        case 'NUMBER':
	                            inflaters.push(External.numberInflaterFactory(name));
	                            break;
	                        case 'TIME':
	                            inflaters.push(External.timeInflaterFactory(name));
	                            break;
	                        case 'SET/STRING':
	                            inflaters.push(External.setStringInflaterFactory(name));
	                            break;
	                    }
	                });
	                if (!selectDimensions.length)
	                    selectDimensions.push(DUMMY_NAME);
	                if (!selectMetrics.length)
	                    selectMetrics.push(DUMMY_NAME);
	                var resultLimit = limit ? limit.limit : Infinity;
	                druidQuery.queryType = 'select';
	                druidQuery.dimensions = selectDimensions;
	                druidQuery.metrics = selectMetrics;
	                druidQuery.pagingSpec = {
	                    "pagingIdentifiers": {},
	                    "threshold": Math.min(resultLimit, DruidExternal.SELECT_INIT_LIMIT)
	                };
	                var descending = sort && sort.direction === 'descending';
	                if (descending) {
	                    druidQuery.descending = true;
	                }
	                return {
	                    query: druidQuery,
	                    postProcess: DruidExternal.postProcessFactory(DruidExternal.selectNormalizerFactory(selectedTimeAttribute), inflaters, selectedAttributes),
	                    next: DruidExternal.selectNextFactory(resultLimit, descending)
	                };
	            case 'value':
	                var aggregationsAndPostAggregations = this.getAggregationsAndPostAggregations([this.toValueApply()]);
	                if (aggregationsAndPostAggregations.aggregations.length) {
	                    druidQuery.aggregations = aggregationsAndPostAggregations.aggregations;
	                }
	                if (aggregationsAndPostAggregations.postAggregations.length) {
	                    druidQuery.postAggregations = aggregationsAndPostAggregations.postAggregations;
	                }
	                return {
	                    query: druidQuery,
	                    postProcess: DruidExternal.valuePostProcess
	                };
	            case 'total':
	                var aggregationsAndPostAggregations = this.getAggregationsAndPostAggregations(this.applies);
	                if (aggregationsAndPostAggregations.aggregations.length) {
	                    druidQuery.aggregations = aggregationsAndPostAggregations.aggregations;
	                }
	                if (aggregationsAndPostAggregations.postAggregations.length) {
	                    druidQuery.postAggregations = aggregationsAndPostAggregations.postAggregations;
	                }
	                return {
	                    query: druidQuery,
	                    postProcess: DruidExternal.totalPostProcessFactory(applies)
	                };
	            case 'split':
	                var split = this.getQuerySplit();
	                var splitSpec = this.splitToDruid(split);
	                druidQuery.queryType = splitSpec.queryType;
	                druidQuery.granularity = splitSpec.granularity;
	                if (splitSpec.dimension)
	                    druidQuery.dimension = splitSpec.dimension;
	                if (splitSpec.dimensions)
	                    druidQuery.dimensions = splitSpec.dimensions;
	                var postProcess = splitSpec.postProcess;
	                var aggregationsAndPostAggregations = this.getAggregationsAndPostAggregations(applies);
	                if (aggregationsAndPostAggregations.aggregations.length) {
	                    druidQuery.aggregations = aggregationsAndPostAggregations.aggregations;
	                }
	                else {
	                    druidQuery.aggregations = [{ name: DUMMY_NAME, type: "count" }];
	                }
	                if (aggregationsAndPostAggregations.postAggregations.length) {
	                    druidQuery.postAggregations = aggregationsAndPostAggregations.postAggregations;
	                }
	                switch (druidQuery.queryType) {
	                    case 'timeseries':
	                        if (sort && (sort.direction !== 'ascending' || !split.hasKey(sort.refName()))) {
	                            throw new Error('can not sort within timeseries query');
	                        }
	                        if (limit) {
	                            throw new Error('can not limit within timeseries query');
	                        }
	                        if (!druidQuery.context || !hasOwnProperty(druidQuery.context, 'skipEmptyBuckets')) {
	                            druidQuery.context = druidQuery.context || {};
	                            druidQuery.context.skipEmptyBuckets = "true";
	                        }
	                        break;
	                    case 'topN':
	                        var metric;
	                        if (sort) {
	                            var inverted;
	                            if (this.sortOnLabel()) {
	                                if (expressionNeedsAlphaNumericSort(split.firstSplitExpression())) {
	                                    metric = { type: 'alphaNumeric' };
	                                }
	                                else {
	                                    metric = { type: 'lexicographic' };
	                                }
	                                inverted = sort.direction === 'descending';
	                            }
	                            else {
	                                metric = sort.refName();
	                                inverted = sort.direction === 'ascending';
	                            }
	                            if (inverted) {
	                                metric = { type: "inverted", metric: metric };
	                            }
	                        }
	                        else {
	                            metric = { type: 'lexicographic' };
	                        }
	                        druidQuery.metric = metric;
	                        druidQuery.threshold = limit ? limit.limit : 1000;
	                        break;
	                    case 'groupBy':
	                        var orderByColumn = null;
	                        if (sort) {
	                            var col = sort.refName();
	                            orderByColumn = {
	                                dimension: col,
	                                direction: sort.direction
	                            };
	                            if (this.sortOnLabel()) {
	                                if (expressionNeedsAlphaNumericSort(split.splits[col])) {
	                                    orderByColumn.dimensionOrder = 'alphanumeric';
	                                }
	                            }
	                        }
	                        else {
	                            var timestampLabel = splitSpec.timestampLabel;
	                            var splitKeys = split.keys.filter(function (k) { return k !== timestampLabel; });
	                            if (!splitKeys.length)
	                                throw new Error('could not find order by column for group by');
	                            var splitKey = splitKeys[0];
	                            var keyExpression = split.splits[splitKey];
	                            orderByColumn = {
	                                dimension: splitKey,
	                            };
	                            if (expressionNeedsAlphaNumericSort(keyExpression)) {
	                                orderByColumn.dimensionOrder = 'alphanumeric';
	                            }
	                        }
	                        druidQuery.limitSpec = {
	                            type: "default",
	                            columns: [orderByColumn || split.firstSplitName()]
	                        };
	                        if (limit) {
	                            druidQuery.limitSpec.limit = limit.limit;
	                        }
	                        if (!this.havingFilter.equals(Expression.TRUE)) {
	                            druidQuery.having = this.havingFilterToDruid(this.havingFilter);
	                        }
	                        break;
	                }
	                return {
	                    query: druidQuery,
	                    postProcess: postProcess
	                };
	            default:
	                throw new Error("can not get query for: " + this.mode);
	        }
	    };
	    DruidExternal.prototype.getIntrospectAttributesWithSegmentMetadata = function () {
	        var _a = this, requester = _a.requester, timeAttribute = _a.timeAttribute;
	        var query = {
	            queryType: 'segmentMetadata',
	            dataSource: this.getDruidDataSource(),
	            merge: true,
	            analysisTypes: ['aggregators'],
	            lenientAggregatorMerge: true
	        };
	        if (this.versionBefore('0.9.0')) {
	            query.analysisTypes = [];
	            delete query.lenientAggregatorMerge;
	        }
	        if (this.versionBefore('0.9.2') && query.dataSource.type === 'union') {
	            query.dataSource = query.dataSource.dataSources[0];
	        }
	        return requester({ query: query }).then(DruidExternal.segmentMetadataPostProcessFactory(timeAttribute));
	    };
	    DruidExternal.prototype.getIntrospectAttributesWithGet = function () {
	        var _a = this, requester = _a.requester, timeAttribute = _a.timeAttribute;
	        return requester({
	            query: {
	                queryType: 'introspect',
	                dataSource: this.getDruidDataSource()
	            }
	        })
	            .then(DruidExternal.introspectPostProcessFactory(timeAttribute));
	    };
	    DruidExternal.prototype.getIntrospectAttributes = function () {
	        var _this = this;
	        switch (this.introspectionStrategy) {
	            case 'segment-metadata-fallback':
	                return this.getIntrospectAttributesWithSegmentMetadata()
	                    .catch(function (err) {
	                    if (err.message.indexOf("querySegmentSpec can't be null") === -1)
	                        throw err;
	                    return _this.getIntrospectAttributesWithGet();
	                });
	            case 'segment-metadata-only':
	                return this.getIntrospectAttributesWithSegmentMetadata();
	            case 'datasource-get':
	                return this.getIntrospectAttributesWithGet();
	            default:
	                throw new Error('invalid introspectionStrategy');
	        }
	    };
	    DruidExternal.type = 'DATASET';
	    DruidExternal.TRUE_INTERVAL = "1000/3000";
	    DruidExternal.FALSE_INTERVAL = "1000/1001";
	    DruidExternal.VALID_INTROSPECTION_STRATEGIES = ['segment-metadata-fallback', 'segment-metadata-only', 'datasource-get'];
	    DruidExternal.DEFAULT_INTROSPECTION_STRATEGY = 'segment-metadata-fallback';
	    DruidExternal.SELECT_INIT_LIMIT = 50;
	    DruidExternal.SELECT_MAX_LIMIT = 10000;
	    DruidExternal.TIME_PART_TO_FORMAT = {
	        SECOND_OF_MINUTE: "s",
	        MINUTE_OF_HOUR: "m",
	        HOUR_OF_DAY: "H",
	        DAY_OF_WEEK: "e",
	        DAY_OF_MONTH: "d",
	        DAY_OF_YEAR: "D",
	        WEEK_OF_YEAR: "w",
	        MONTH_OF_YEAR: "M",
	        YEAR: "Y"
	    };
	    DruidExternal.TIME_PART_TO_EXPR = {
	        SECOND_OF_MINUTE: "d.getSecondOfMinute()",
	        SECOND_OF_HOUR: "d.getSecondOfHour()",
	        SECOND_OF_DAY: "d.getSecondOfDay()",
	        SECOND_OF_WEEK: "d.getDayOfWeek()*86400 + d.getSecondOfMinute()",
	        SECOND_OF_MONTH: "d.getDayOfMonth()*86400 + d.getSecondOfHour()",
	        SECOND_OF_YEAR: "d.getDayOfYear()*86400 + d.getSecondOfDay()",
	        MINUTE_OF_HOUR: "d.getMinuteOfHour()",
	        MINUTE_OF_DAY: "d.getMinuteOfDay()",
	        MINUTE_OF_WEEK: "d.getDayOfWeek()*1440 + d.getMinuteOfDay()",
	        MINUTE_OF_MONTH: "d.getDayOfMonth()*1440 + d.getMinuteOfDay()",
	        MINUTE_OF_YEAR: "d.getDayOfYear()*1440 + d.getMinuteOfDay()",
	        HOUR_OF_DAY: "d.getHourOfDay()",
	        HOUR_OF_WEEK: "d.getDayOfWeek()*24 + d.getHourOfDay()",
	        HOUR_OF_MONTH: "d.getDayOfMonth()*24 + d.getHourOfDay()",
	        HOUR_OF_YEAR: "d.getDayOfYear()*24 + d.getHourOfDay()",
	        DAY_OF_WEEK: "d.getDayOfWeek()",
	        DAY_OF_MONTH: "d.getDayOfMonth()",
	        DAY_OF_YEAR: "d.getDayOfYear()",
	        WEEK_OF_YEAR: "d.getWeekOfWeekyear()",
	        MONTH_OF_YEAR: "d.getMonthOfYear()",
	        YEAR: "d.getYearOfEra()"
	    };
	    DruidExternal.SPAN_TO_FLOOR_FORMAT = {
	        second: "yyyy-MM-dd'T'HH:mm:ss'Z",
	        minute: "yyyy-MM-dd'T'HH:mm'Z",
	        hour: "yyyy-MM-dd'T'HH':00Z",
	        day: "yyyy-MM-dd'Z",
	        month: "yyyy-MM'-01Z",
	        year: "yyyy'-01-01Z"
	    };
	    DruidExternal.SPAN_TO_PROPERTY = {
	        second: 'secondOfMinute',
	        minute: 'minuteOfHour',
	        hour: 'hourOfDay',
	        day: 'dayOfMonth',
	        week: 'weekOfWeekyear',
	        month: 'monthOfYear',
	        year: 'yearOfEra'
	    };
	    DruidExternal.caseToDruid = {
	        upperCase: 'upper',
	        lowerCase: 'lower'
	    };
	    return DruidExternal;
	}(External));
	External.register(DruidExternal);
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};





	function correctResult(result) {
	    return Array.isArray(result) && (result.length === 0 || typeof result[0] === 'object');
	}
	function getSplitInflaters(split) {
	    return split.mapSplits(function (label, splitExpression) {
	        var simpleInflater = External.getSimpleInflater(splitExpression, label);
	        if (simpleInflater)
	            return simpleInflater;
	        if (splitExpression instanceof ChainExpression) {
	            var lastAction = splitExpression.lastAction();
	            if (lastAction instanceof TimeBucketAction) {
	                return External.timeRangeInflaterFactory(label, lastAction.duration, lastAction.getTimezone());
	            }
	            if (lastAction instanceof NumberBucketAction) {
	                return External.numberRangeInflaterFactory(label, lastAction.size);
	            }
	        }
	        return undefined;
	    });
	}
	function valuePostProcess(data) {
	    if (!correctResult(data)) {
	        var err = new Error("unexpected result (value)");
	        err.result = data;
	        throw err;
	    }
	    return data.length ? data[0][External.VALUE_NAME] : 0;
	}
	function postProcessFactory(inflaters, zeroTotalApplies) {
	    return function (data) {
	        if (!correctResult(data)) {
	            var err = new Error("unexpected result");
	            err.result = data;
	            throw err;
	        }
	        var n = data.length;
	        for (var _i = 0, inflaters_1 = inflaters; _i < inflaters_1.length; _i++) {
	            var inflater = inflaters_1[_i];
	            for (var i = 0; i < n; i++) {
	                inflater(data[i], i, data);
	            }
	        }
	        if (n === 0 && zeroTotalApplies) {
	            data = [External.makeZeroDatum(zeroTotalApplies)];
	        }
	        return new Dataset({ data: data });
	    };
	}
	var SQLExternal = exports.SQLExternal = (function (_super) {
	    __extends(SQLExternal, _super);
	    function SQLExternal(parameters, dialect) {
	        _super.call(this, parameters, dummyObject);
	        this.dialect = dialect;
	    }
	    SQLExternal.prototype.canHandleFilter = function (ex) {
	        return true;
	    };
	    SQLExternal.prototype.canHandleTotal = function () {
	        return true;
	    };
	    SQLExternal.prototype.canHandleSplit = function (ex) {
	        return true;
	    };
	    SQLExternal.prototype.canHandleApply = function (ex) {
	        return true;
	    };
	    SQLExternal.prototype.canHandleSort = function (sortAction) {
	        return true;
	    };
	    SQLExternal.prototype.canHandleLimit = function (limitAction) {
	        return true;
	    };
	    SQLExternal.prototype.canHandleHavingFilter = function (ex) {
	        return true;
	    };
	    SQLExternal.prototype.getQueryAndPostProcess = function () {
	        var _a = this, source = _a.source, mode = _a.mode, applies = _a.applies, sort = _a.sort, limit = _a.limit, derivedAttributes = _a.derivedAttributes, dialect = _a.dialect;
	        var query = ['SELECT'];
	        var postProcess = null;
	        var inflaters = [];
	        var zeroTotalApplies = null;
	        var from = "FROM " + this.dialect.escapeName(source);
	        var filter = this.getQueryFilter();
	        if (!filter.equals(Expression.TRUE)) {
	            from += '\nWHERE ' + filter.getSQL(dialect);
	        }
	        switch (mode) {
	            case 'raw':
	                var selectedAttributes = this.getSelectedAttributes();
	                selectedAttributes.forEach(function (attribute) {
	                    var name = attribute.name, type = attribute.type;
	                    switch (type) {
	                        case 'BOOLEAN':
	                            inflaters.push(External.booleanInflaterFactory(name));
	                            break;
	                        case 'SET/STRING':
	                            inflaters.push(External.setStringInflaterFactory(name));
	                            break;
	                    }
	                });
	                query.push(selectedAttributes.map(function (a) {
	                    var name = a.name;
	                    if (derivedAttributes[name]) {
	                        return new ApplyAction({ name: name, expression: derivedAttributes[name] }).getSQL(null, '', dialect);
	                    }
	                    else {
	                        return dialect.escapeName(name);
	                    }
	                }).join(', '), from);
	                if (sort) {
	                    query.push(sort.getSQL(null, '', dialect));
	                }
	                if (limit) {
	                    query.push(limit.getSQL(null, '', dialect));
	                }
	                break;
	            case 'value':
	                query.push(this.toValueApply().getSQL(null, '', dialect), from, dialect.constantGroupBy());
	                postProcess = valuePostProcess;
	                break;
	            case 'total':
	                zeroTotalApplies = applies;
	                query.push(applies.map(function (apply) { return apply.getSQL(null, '', dialect); }).join(',\n'), from, dialect.constantGroupBy());
	                break;
	            case 'split':
	                var split = this.getQuerySplit();
	                query.push(split.getSelectSQL(dialect)
	                    .concat(applies.map(function (apply) { return apply.getSQL(null, '', dialect); }))
	                    .join(',\n'), from, split.getShortGroupBySQL());
	                if (!(this.havingFilter.equals(Expression.TRUE))) {
	                    query.push('HAVING ' + this.havingFilter.getSQL(dialect));
	                }
	                if (sort) {
	                    query.push(sort.getSQL(null, '', dialect));
	                }
	                if (limit) {
	                    query.push(limit.getSQL(null, '', dialect));
	                }
	                inflaters = getSplitInflaters(split);
	                break;
	            default:
	                throw new Error("can not get query for mode: " + mode);
	        }
	        return {
	            query: query.join('\n'),
	            postProcess: postProcess || postProcessFactory(inflaters, zeroTotalApplies)
	        };
	    };
	    SQLExternal.type = 'DATASET';
	    return SQLExternal;
	}(External));
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};




	var MySQLExternal = exports.MySQLExternal = (function (_super) {
	    __extends(MySQLExternal, _super);
	    function MySQLExternal(parameters) {
	        _super.call(this, parameters, new MySQLDialect());
	        this._ensureEngine("mysql");
	    }
	    MySQLExternal.fromJS = function (parameters, requester) {
	        var value = External.jsToValue(parameters, requester);
	        return new MySQLExternal(value);
	    };
	    MySQLExternal.postProcessIntrospect = function (columns) {
	        return columns.map(function (column) {
	            var name = column.Field;
	            var sqlType = column.Type.toLowerCase();
	            if (sqlType === "datetime" || sqlType === "timestamp") {
	                return new AttributeInfo({ name: name, type: 'TIME' });
	            }
	            else if (sqlType.indexOf("varchar(") === 0 || sqlType.indexOf("blob") === 0) {
	                return new AttributeInfo({ name: name, type: 'STRING' });
	            }
	            else if (sqlType.indexOf("int(") === 0 || sqlType.indexOf("bigint(") === 0) {
	                return new AttributeInfo({ name: name, type: 'NUMBER' });
	            }
	            else if (sqlType.indexOf("decimal(") === 0 || sqlType.indexOf("float") === 0 || sqlType.indexOf("double") === 0) {
	                return new AttributeInfo({ name: name, type: 'NUMBER' });
	            }
	            else if (sqlType.indexOf("tinyint(1)") === 0) {
	                return new AttributeInfo({ name: name, type: 'BOOLEAN' });
	            }
	            return null;
	        }).filter(Boolean);
	    };
	    MySQLExternal.getSourceList = function (requester) {
	        return requester({ query: "SHOW TABLES" })
	            .then(function (sources) {
	            if (!Array.isArray(sources))
	                throw new Error('invalid sources response');
	            if (!sources.length)
	                return sources;
	            var key = Object.keys(sources[0])[0];
	            if (!key)
	                throw new Error('invalid sources response (no key)');
	            return sources.map(function (s) { return s[key]; }).sort();
	        });
	    };
	    MySQLExternal.getVersion = function (requester) {
	        return requester({ query: 'SELECT @@version' })
	            .then(function (res) {
	            if (!Array.isArray(res) || res.length !== 1)
	                throw new Error('invalid version response');
	            var key = Object.keys(res[0])[0];
	            if (!key)
	                throw new Error('invalid version response (no key)');
	            return res[0][key];
	        });
	    };
	    MySQLExternal.prototype.getIntrospectAttributes = function () {
	        return this.requester({ query: "DESCRIBE " + this.dialect.escapeName(this.source), }).then(MySQLExternal.postProcessIntrospect);
	    };
	    MySQLExternal.type = 'DATASET';
	    return MySQLExternal;
	}(SQLExternal));
	External.register(MySQLExternal, 'mysql');
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};




	var PostgresExternal = exports.PostgresExternal = (function (_super) {
	    __extends(PostgresExternal, _super);
	    function PostgresExternal(parameters) {
	        _super.call(this, parameters, new PostgresDialect());
	        this._ensureEngine("postgres");
	    }
	    PostgresExternal.fromJS = function (parameters, requester) {
	        var value = External.jsToValue(parameters, requester);
	        return new PostgresExternal(value);
	    };
	    PostgresExternal.postProcessIntrospect = function (columns) {
	        return columns.map(function (column) {
	            var name = column.name;
	            var sqlType = column.sqlType.toLowerCase();
	            if (sqlType.indexOf('timestamp') !== -1) {
	                return new AttributeInfo({ name: name, type: 'TIME' });
	            }
	            else if (sqlType === 'character varying') {
	                return new AttributeInfo({ name: name, type: 'STRING' });
	            }
	            else if (sqlType === 'integer' || sqlType === 'bigint') {
	                return new AttributeInfo({ name: name, type: 'NUMBER' });
	            }
	            else if (sqlType === 'double precision' || sqlType === 'float') {
	                return new AttributeInfo({ name: name, type: 'NUMBER' });
	            }
	            else if (sqlType === 'boolean') {
	                return new AttributeInfo({ name: name, type: 'BOOLEAN' });
	            }
	            else if (sqlType === 'array') {
	                var arrayType = column.arrayType.toLowerCase();
	                if (arrayType === 'character')
	                    return new AttributeInfo({ name: name, type: 'SET/STRING' });
	                else if (arrayType === 'timestamp')
	                    return new AttributeInfo({ name: name, type: 'SET/TIME' });
	                else if (arrayType === 'integer' || arrayType === 'bigint' || sqlType === 'double precision' || sqlType === 'float')
	                    return new AttributeInfo({ name: name, type: 'SET/NUMBER' });
	                else if (arrayType === 'boolean')
	                    return new AttributeInfo({ name: name, type: 'SET/BOOLEAN' });
	                return null;
	            }
	            return null;
	        }).filter(Boolean);
	    };
	    PostgresExternal.getSourceList = function (requester) {
	        return requester({
	            query: "SELECT table_name AS \"tab\" FROM INFORMATION_SCHEMA.TABLES WHERE table_type = 'BASE TABLE' AND table_schema = 'public'"
	        })
	            .then(function (sources) {
	            if (!Array.isArray(sources))
	                throw new Error('invalid sources response');
	            if (!sources.length)
	                return sources;
	            return sources.map(function (s) { return s['tab']; }).sort();
	        });
	    };
	    PostgresExternal.getVersion = function (requester) {
	        return requester({ query: 'SELECT version()' })
	            .then(function (res) {
	            if (!Array.isArray(res) || res.length !== 1)
	                throw new Error('invalid version response');
	            var key = Object.keys(res[0])[0];
	            if (!key)
	                throw new Error('invalid version response (no key)');
	            var versionString = res[0][key];
	            var match;
	            if (match = versionString.match(/^PostgreSQL (\S+) on/))
	                versionString = match[1];
	            return versionString;
	        });
	    };
	    PostgresExternal.prototype.getIntrospectAttributes = function () {
	        return this.requester({
	            query: "SELECT c.column_name as \"name\", c.data_type as \"sqlType\", e.data_type AS \"arrayType\"\n       FROM information_schema.columns c LEFT JOIN information_schema.element_types e\n       ON ((c.table_catalog, c.table_schema, c.table_name, 'TABLE', c.dtd_identifier)\n       = (e.object_catalog, e.object_schema, e.object_name, e.object_type, e.collection_type_identifier))\n       WHERE table_name = " + this.dialect.escapeLiteral(this.source),
	        }).then(PostgresExternal.postProcessIntrospect);
	    };
	    PostgresExternal.type = 'DATASET';
	    return PostgresExternal;
	}(SQLExternal));
	External.register(PostgresExternal, 'postgres');












	function getDataName(ex) {
	    if (ex instanceof RefExpression) {
	        return ex.name;
	    }
	    else if (ex instanceof ChainExpression) {
	        return getDataName(ex.expression);
	    }
	    else {
	        return null;
	    }
	}
	function getValue(param) {
	    if (param instanceof LiteralExpression)
	        return param.value;
	    return param;
	}
	function getString(param) {
	    if (typeof param === 'string')
	        return param;
	    if (param instanceof LiteralExpression && param.type === 'STRING') {
	        return param.value;
	    }
	    if (param instanceof RefExpression && param.nest === 0) {
	        return param.name;
	    }
	    throw new Error('could not extract a string out of ' + String(param));
	}
	function getNumber(param) {
	    if (typeof param === 'number')
	        return param;
	    if (param instanceof LiteralExpression && param.type === 'NUMBER') {
	        return param.value;
	    }
	    throw new Error('could not extract a number out of ' + String(param));
	}
	var ply = exports.ply = function(dataset) {
	    if (!dataset)
	        dataset = new Dataset({ data: [{}] });
	    return r(dataset);
	}
	var $ = exports.$ = function(name, nest, type) {
	    if (typeof name !== 'string')
	        throw new TypeError('$() argument must be a string');
	    if (typeof nest === 'string') {
	        type = nest;
	        nest = 0;
	    }
	    return new RefExpression({
	        name: name,
	        nest: nest != null ? nest : 0,
	        type: type
	    });
	}
	var r = exports.r = function(value) {
	    if (External.isExternal(value))
	        throw new TypeError('r can not accept externals');
	    if (Array.isArray(value))
	        value = Set.fromJS(value);
	    return LiteralExpression.fromJS({ op: 'literal', value: value });
	}
	var toJS = exports.toJS = function(thing) {
	    return (thing && typeof thing.toJS === 'function') ? thing.toJS() : thing;
	}
	function chainVia(op, expressions, zero) {
	    var n = expressions.length;
	    if (!n)
	        return zero;
	    var acc = expressions[0];
	    if (!Expression.isExpression(acc))
	        acc = Expression.fromJSLoose(acc);
	    for (var i = 1; i < n; i++)
	        acc = acc[op](expressions[i]);
	    return acc;
	}
	var Expression = exports.Expression = (function () {
	    function Expression(parameters, dummy) {
	        if (dummy === void 0) { dummy = null; }
	        this.op = parameters.op;
	        if (dummy !== dummyObject) {
	            throw new TypeError("can not call `new Expression` directly use Expression.fromJS instead");
	        }
	        if (parameters.simple)
	            this.simple = true;
	    }
	    Expression.isExpression = function (candidate) {
	        return isInstanceOf(candidate, Expression);
	    };
	    Expression.expressionLookupFromJS = function (expressionJSs) {
	        var expressions = Object.create(null);
	        for (var name in expressionJSs) {
	            if (!hasOwnProperty(expressionJSs, name))
	                continue;
	            expressions[name] = Expression.fromJSLoose(expressionJSs[name]);
	        }
	        return expressions;
	    };
	    Expression.expressionLookupToJS = function (expressions) {
	        var expressionsJSs = {};
	        for (var name in expressions) {
	            if (!hasOwnProperty(expressions, name))
	                continue;
	            expressionsJSs[name] = expressions[name].toJS();
	        }
	        return expressionsJSs;
	    };
	    Expression.parse = function (str, timezone) {
	        if (str[0] === '{' && str[str.length - 1] === '}') {
	            return Expression.fromJS(JSON.parse(str));
	        }
	        var original = Expression.defaultParserTimezone;
	        if (timezone)
	            Expression.defaultParserTimezone = timezone;
	        try {
	            return Expression.expressionParser.parse(str);
	        }
	        catch (e) {
	            throw new Error("Expression parse error: " + e.message + " on '" + str + "'");
	        }
	        finally {
	            Expression.defaultParserTimezone = original;
	        }
	    };
	    Expression.parseSQL = function (str, timezone) {
	        var original = Expression.defaultParserTimezone;
	        if (timezone)
	            Expression.defaultParserTimezone = timezone;
	        try {
	            return Expression.plyqlParser.parse(str);
	        }
	        catch (e) {
	            throw new Error("SQL parse error: " + e.message + " on '" + str + "'");
	        }
	        finally {
	            Expression.defaultParserTimezone = original;
	        }
	    };
	    Expression.fromJSLoose = function (param) {
	        var expressionJS;
	        switch (typeof param) {
	            case 'undefined':
	                throw new Error('must have an expression');
	            case 'object':
	                if (param === null) {
	                    return Expression.NULL;
	                }
	                else if (Expression.isExpression(param)) {
	                    return param;
	                }
	                else if (isImmutableClass(param)) {
	                    if (param.constructor.type) {
	                        expressionJS = { op: 'literal', value: param };
	                    }
	                    else {
	                        throw new Error("unknown object");
	                    }
	                }
	                else if (param.op) {
	                    expressionJS = param;
	                }
	                else if (param.toISOString) {
	                    expressionJS = { op: 'literal', value: new Date(param) };
	                }
	                else if (Array.isArray(param)) {
	                    expressionJS = { op: 'literal', value: Set.fromJS(param) };
	                }
	                else if (hasOwnProperty(param, 'start') && hasOwnProperty(param, 'end')) {
	                    expressionJS = { op: 'literal', value: Range.fromJS(param) };
	                }
	                else {
	                    throw new Error('unknown parameter');
	                }
	                break;
	            case 'number':
	            case 'boolean':
	                expressionJS = { op: 'literal', value: param };
	                break;
	            case 'string':
	                return Expression.parse(param);
	            default:
	                throw new Error("unrecognizable expression");
	        }
	        return Expression.fromJS(expressionJS);
	    };
	    Expression.inOrIs = function (lhs, value) {
	        var literal = new LiteralExpression({
	            op: 'literal',
	            value: value
	        });
	        var literalType = literal.type;
	        var returnExpression = null;
	        if (literalType === 'NUMBER_RANGE' || literalType === 'TIME_RANGE' || literalType === 'STRING_RANGE' || isSetType(literalType)) {
	            returnExpression = lhs.in(literal);
	        }
	        else {
	            returnExpression = lhs.is(literal);
	        }
	        return returnExpression.simplify();
	    };
	    Expression.jsNullSafetyUnary = function (inputJS, ifNotNull) {
	        return "(_=" + inputJS + ",(_==null?null:" + ifNotNull('_') + "))";
	    };
	    Expression.jsNullSafetyBinary = function (lhs, rhs, combine, lhsCantBeNull, rhsCantBeNull) {
	        if (lhsCantBeNull) {
	            if (rhsCantBeNull) {
	                return "(" + combine(lhs, rhs) + ")";
	            }
	            else {
	                return "(_=" + rhs + ",(_==null)?null:(" + combine(lhs, '_') + "))";
	            }
	        }
	        else {
	            if (rhsCantBeNull) {
	                return "(_=" + lhs + ",(_==null)?null:(" + combine('_', rhs) + "))";
	            }
	            else {
	                return "(_=" + rhs + ",_2=" + lhs + ",(_==null||_2==null)?null:(" + combine('_', '_2') + ")";
	            }
	        }
	    };
	    Expression.and = function (expressions) {
	        return chainVia('and', expressions, Expression.TRUE);
	    };
	    Expression.or = function (expressions) {
	        return chainVia('or', expressions, Expression.FALSE);
	    };
	    Expression.add = function (expressions) {
	        return chainVia('add', expressions, Expression.ZERO);
	    };
	    Expression.subtract = function (expressions) {
	        return chainVia('subtract', expressions, Expression.ZERO);
	    };
	    Expression.multiply = function (expressions) {
	        return chainVia('multiply', expressions, Expression.ONE);
	    };
	    Expression.power = function (expressions) {
	        return chainVia('power', expressions, Expression.ZERO);
	    };
	    Expression.concat = function (expressions) {
	        return chainVia('concat', expressions, Expression.EMPTY_STRING);
	    };
	    Expression.register = function (ex) {
	        var op = ex.name.replace('Expression', '').replace(/^\w/, function (s) { return s.toLowerCase(); });
	        Expression.classMap[op] = ex;
	    };
	    Expression.fromJS = function (expressionJS) {
	        if (!hasOwnProperty(expressionJS, "op")) {
	            throw new Error("op must be defined");
	        }
	        var op = expressionJS.op;
	        if (typeof op !== "string") {
	            throw new Error("op must be a string");
	        }
	        var ClassFn = Expression.classMap[op];
	        if (!ClassFn) {
	            throw new Error("unsupported expression op '" + op + "'");
	        }
	        return ClassFn.fromJS(expressionJS);
	    };
	    Expression.prototype._ensureOp = function (op) {
	        if (!this.op) {
	            this.op = op;
	            return;
	        }
	        if (this.op !== op) {
	            throw new TypeError("incorrect expression op '" + this.op + "' (needs to be: '" + op + "')");
	        }
	    };
	    Expression.prototype.valueOf = function () {
	        var value = { op: this.op };
	        if (this.simple)
	            value.simple = true;
	        return value;
	    };
	    Expression.prototype.toJS = function () {
	        return {
	            op: this.op
	        };
	    };
	    Expression.prototype.toJSON = function () {
	        return this.toJS();
	    };
	    Expression.prototype.toString = function (indent) {
	        return 'BaseExpression';
	    };
	    Expression.prototype.equals = function (other) {
	        return Expression.isExpression(other) &&
	            this.op === other.op &&
	            this.type === other.type;
	    };
	    Expression.prototype.canHaveType = function (wantedType) {
	        var type = this.type;
	        if (!type)
	            return true;
	        if (wantedType === 'SET') {
	            return isSetType(type);
	        }
	        else {
	            return type === wantedType;
	        }
	    };
	    Expression.prototype.expressionCount = function () {
	        return 1;
	    };
	    Expression.prototype.isOp = function (op) {
	        return this.op === op;
	    };
	    Expression.prototype.containsOp = function (op) {
	        return this.some(function (ex) { return ex.isOp(op) || null; });
	    };
	    Expression.prototype.hasExternal = function () {
	        return this.some(function (ex) {
	            if (ex instanceof ExternalExpression)
	                return true;
	            if (ex instanceof RefExpression)
	                return ex.isRemote();
	            return null;
	        });
	    };
	    Expression.prototype.getBaseExternals = function () {
	        var externals = [];
	        this.forEach(function (ex) {
	            if (ex instanceof ExternalExpression)
	                externals.push(ex.external.getBase());
	        });
	        return External.deduplicateExternals(externals);
	    };
	    Expression.prototype.getRawExternals = function () {
	        var externals = [];
	        this.forEach(function (ex) {
	            if (ex instanceof ExternalExpression)
	                externals.push(ex.external.getRaw());
	        });
	        return External.deduplicateExternals(externals);
	    };
	    Expression.prototype.getFreeReferences = function () {
	        var freeReferences = [];
	        this.forEach(function (ex, index, depth, nestDiff) {
	            if (ex instanceof RefExpression && nestDiff <= ex.nest) {
	                freeReferences.push(repeat('^', ex.nest - nestDiff) + ex.name);
	            }
	        });
	        return deduplicateSort(freeReferences);
	    };
	    Expression.prototype.getFreeReferenceIndexes = function () {
	        var freeReferenceIndexes = [];
	        this.forEach(function (ex, index, depth, nestDiff) {
	            if (ex instanceof RefExpression && nestDiff <= ex.nest) {
	                freeReferenceIndexes.push(index);
	            }
	        });
	        return freeReferenceIndexes;
	    };
	    Expression.prototype.incrementNesting = function (by) {
	        if (by === void 0) { by = 1; }
	        var freeReferenceIndexes = this.getFreeReferenceIndexes();
	        if (freeReferenceIndexes.length === 0)
	            return this;
	        return this.substitute(function (ex, index) {
	            if (ex instanceof RefExpression && freeReferenceIndexes.indexOf(index) !== -1) {
	                return ex.incrementNesting(by);
	            }
	            return null;
	        });
	    };
	    Expression.prototype.simplify = function () {
	        return this;
	    };
	    Expression.prototype.every = function (iter, thisArg) {
	        return this._everyHelper(iter, thisArg, { index: 0 }, 0, 0);
	    };
	    Expression.prototype._everyHelper = function (iter, thisArg, indexer, depth, nestDiff) {
	        var pass = iter.call(thisArg, this, indexer.index, depth, nestDiff);
	        if (pass != null) {
	            return pass;
	        }
	        else {
	            indexer.index++;
	        }
	        return true;
	    };
	    Expression.prototype.some = function (iter, thisArg) {
	        var _this = this;
	        return !this.every(function (ex, index, depth, nestDiff) {
	            var v = iter.call(_this, ex, index, depth, nestDiff);
	            return (v == null) ? null : !v;
	        }, thisArg);
	    };
	    Expression.prototype.forEach = function (iter, thisArg) {
	        var _this = this;
	        this.every(function (ex, index, depth, nestDiff) {
	            iter.call(_this, ex, index, depth, nestDiff);
	            return null;
	        }, thisArg);
	    };
	    Expression.prototype.substitute = function (substitutionFn, thisArg) {
	        return this._substituteHelper(substitutionFn, thisArg, { index: 0 }, 0, 0);
	    };
	    Expression.prototype._substituteHelper = function (substitutionFn, thisArg, indexer, depth, nestDiff) {
	        var sub = substitutionFn.call(thisArg, this, indexer.index, depth, nestDiff);
	        if (sub) {
	            indexer.index += this.expressionCount();
	            return sub;
	        }
	        else {
	            indexer.index++;
	        }
	        return this;
	    };
	    Expression.prototype.substituteAction = function (actionMatchFn, actionSubstitutionFn, options, thisArg) {
	        var _this = this;
	        if (options === void 0) { options = {}; }
	        return this.substitute(function (ex) {
	            if (ex instanceof ChainExpression) {
	                var actions = ex.actions;
	                for (var i = 0; i < actions.length; i++) {
	                    var action = actions[i];
	                    if (actionMatchFn.call(_this, action)) {
	                        var newEx = actionSubstitutionFn.call(_this, ex.headActions(i), action);
	                        for (var j = i + 1; j < actions.length; j++)
	                            newEx = newEx.performAction(actions[j]);
	                        if (options.onceInChain)
	                            return newEx;
	                        return newEx.substituteAction(actionMatchFn, actionSubstitutionFn, options, _this);
	                    }
	                }
	            }
	            return null;
	        }, thisArg);
	    };
	    Expression.prototype.getJSFn = function (datumVar) {
	        if (datumVar === void 0) { datumVar = 'd[]'; }
	        var type = this.type;
	        var jsEx = this.getJS(datumVar);
	        var body;
	        if (type === 'NUMBER' || type === 'NUMBER_RANGE' || type === 'TIME') {
	            body = "_=" + jsEx + ";return isNaN(_)?null:_";
	        }
	        else {
	            body = "return " + jsEx + ";";
	        }
	        return "function(" + datumVar.replace('[]', '') + "){var _,_2;" + body + "}";
	    };
	    Expression.prototype.extractFromAnd = function (matchFn) {
	        if (this.type !== 'BOOLEAN')
	            return null;
	        if (matchFn(this)) {
	            return {
	                extract: this,
	                rest: Expression.TRUE
	            };
	        }
	        else {
	            return {
	                extract: Expression.TRUE,
	                rest: this
	            };
	        }
	    };
	    Expression.prototype.breakdownByDataset = function (tempNamePrefix) {
	        var nameIndex = 0;
	        var singleDatasetActions = [];
	        var externals = this.getBaseExternals();
	        if (externals.length < 2) {
	            throw new Error('not a multiple dataset expression');
	        }
	        var combine = this.substitute(function (ex) {
	            var externals = ex.getBaseExternals();
	            if (externals.length !== 1)
	                return null;
	            var existingApply = find(singleDatasetActions, function (apply) { return apply.expression.equals(ex); });
	            var tempName;
	            if (existingApply) {
	                tempName = existingApply.name;
	            }
	            else {
	                tempName = tempNamePrefix + (nameIndex++);
	                singleDatasetActions.push(new ApplyAction({
	                    action: 'apply',
	                    name: tempName,
	                    expression: ex
	                }));
	            }
	            return new RefExpression({
	                op: 'ref',
	                name: tempName,
	                nest: 0
	            });
	        });
	        return {
	            combineExpression: combine,
	            singleDatasetActions: singleDatasetActions
	        };
	    };
	    Expression.prototype.actionize = function (containingAction) {
	        return null;
	    };
	    Expression.prototype.getExpressionPattern = function (actionType) {
	        var actions = this.actionize(actionType);
	        return actions ? actions.map(function (action) { return action.expression; }) : null;
	    };
	    Expression.prototype.firstAction = function () {
	        return null;
	    };
	    Expression.prototype.lastAction = function () {
	        return null;
	    };
	    Expression.prototype.headActions = function (n) {
	        return this;
	    };
	    Expression.prototype.popAction = function () {
	        return null;
	    };
	    Expression.prototype.getLiteralValue = function () {
	        return null;
	    };
	    Expression.prototype.bumpStringLiteralToTime = function () {
	        return this;
	    };
	    Expression.prototype.bumpStringLiteralToSetString = function () {
	        return this;
	    };
	    Expression.prototype.upgradeToType = function (targetType) {
	        return this;
	    };
	    Expression.prototype.performAction = function (action, markSimple) {
	        return this.performActions([action], markSimple);
	    };
	    Expression.prototype.performActions = function (actions, markSimple) {
	        if (!actions.length)
	            return this;
	        return new ChainExpression({
	            expression: this,
	            actions: actions,
	            simple: Boolean(markSimple)
	        });
	    };
	    Expression.prototype._performMultiAction = function (action, exs) {
	        if (!exs.length)
	            throw new Error(action + " action must have at least one argument");
	        var ret = this;
	        for (var _i = 0, exs_1 = exs; _i < exs_1.length; _i++) {
	            var ex = exs_1[_i];
	            if (!Expression.isExpression(ex))
	                ex = Expression.fromJSLoose(ex);
	            var ActionConstructor = Action.classMap[action];
	            ret = ret.performAction(new ActionConstructor({ expression: ex }));
	        }
	        return ret;
	    };
	    Expression.prototype.add = function () {
	        var exs = [];
	        for (var _i = 0; _i < arguments.length; _i++) {
	            exs[_i - 0] = arguments[_i];
	        }
	        return this._performMultiAction('add', exs);
	    };
	    Expression.prototype.subtract = function () {
	        var exs = [];
	        for (var _i = 0; _i < arguments.length; _i++) {
	            exs[_i - 0] = arguments[_i];
	        }
	        return this._performMultiAction('subtract', exs);
	    };
	    Expression.prototype.negate = function () {
	        return Expression.ZERO.subtract(this);
	    };
	    Expression.prototype.multiply = function () {
	        var exs = [];
	        for (var _i = 0; _i < arguments.length; _i++) {
	            exs[_i - 0] = arguments[_i];
	        }
	        return this._performMultiAction('multiply', exs);
	    };
	    Expression.prototype.divide = function () {
	        var exs = [];
	        for (var _i = 0; _i < arguments.length; _i++) {
	            exs[_i - 0] = arguments[_i];
	        }
	        return this._performMultiAction('divide', exs);
	    };
	    Expression.prototype.reciprocate = function () {
	        return Expression.ONE.divide(this);
	    };
	    Expression.prototype.sqrt = function () {
	        return this.power(0.5);
	    };
	    Expression.prototype.power = function () {
	        var exs = [];
	        for (var _i = 0; _i < arguments.length; _i++) {
	            exs[_i - 0] = arguments[_i];
	        }
	        return this._performMultiAction('power', exs);
	    };
	    Expression.prototype.fallback = function (ex) {
	        if (!Expression.isExpression(ex))
	            ex = Expression.fromJSLoose(ex);
	        return this.performAction(new FallbackAction({ expression: ex }));
	    };
	    Expression.prototype.is = function (ex) {
	        if (!Expression.isExpression(ex))
	            ex = Expression.fromJSLoose(ex);
	        return this.performAction(new IsAction({ expression: ex }));
	    };
	    Expression.prototype.isnt = function (ex) {
	        return this.is(ex).not();
	    };
	    Expression.prototype.lessThan = function (ex) {
	        if (!Expression.isExpression(ex))
	            ex = Expression.fromJSLoose(ex);
	        return this.performAction(new LessThanAction({ expression: ex }));
	    };
	    Expression.prototype.lessThanOrEqual = function (ex) {
	        if (!Expression.isExpression(ex))
	            ex = Expression.fromJSLoose(ex);
	        return this.performAction(new LessThanOrEqualAction({ expression: ex }));
	    };
	    Expression.prototype.greaterThan = function (ex) {
	        if (!Expression.isExpression(ex))
	            ex = Expression.fromJSLoose(ex);
	        return this.performAction(new GreaterThanAction({ expression: ex }));
	    };
	    Expression.prototype.greaterThanOrEqual = function (ex) {
	        if (!Expression.isExpression(ex))
	            ex = Expression.fromJSLoose(ex);
	        return this.performAction(new GreaterThanOrEqualAction({ expression: ex }));
	    };
	    Expression.prototype.contains = function (ex, compare) {
	        if (!Expression.isExpression(ex))
	            ex = Expression.fromJSLoose(ex);
	        if (compare)
	            compare = getString(compare);
	        return this.performAction(new ContainsAction({ expression: ex, compare: compare }));
	    };
	    Expression.prototype.match = function (re) {
	        return this.performAction(new MatchAction({ regexp: getString(re) }));
	    };
	    Expression.prototype.in = function (ex, snd) {
	        if (arguments.length === 2) {
	            ex = getValue(ex);
	            snd = getValue(snd);
	            if (typeof ex === 'string') {
	                var parse = parseISODate(ex, Expression.defaultParserTimezone);
	                if (parse)
	                    ex = parse;
	            }
	            if (typeof snd === 'string') {
	                var parse = parseISODate(snd, Expression.defaultParserTimezone);
	                if (parse)
	                    snd = parse;
	            }
	            if (typeof ex === 'number' && typeof snd === 'number') {
	                ex = new NumberRange({ start: ex, end: snd });
	            }
	            else if (ex.toISOString && snd.toISOString) {
	                ex = new TimeRange({ start: ex, end: snd });
	            }
	            else if (typeof ex === 'string' && typeof snd === 'string') {
	                ex = new StringRange({ start: ex, end: snd });
	            }
	            else {
	                throw new Error('uninterpretable IN parameters');
	            }
	        }
	        if (!Expression.isExpression(ex))
	            ex = Expression.fromJSLoose(ex);
	        return this.performAction(new InAction({ expression: ex }));
	    };
	    Expression.prototype.overlap = function (ex) {
	        if (!Expression.isExpression(ex))
	            ex = Expression.fromJSLoose(ex);
	        return this.bumpStringLiteralToSetString().performAction(new OverlapAction({ expression: ex.bumpStringLiteralToSetString() }));
	    };
	    Expression.prototype.not = function () {
	        return this.performAction(new NotAction({}));
	    };
	    Expression.prototype.and = function () {
	        var exs = [];
	        for (var _i = 0; _i < arguments.length; _i++) {
	            exs[_i - 0] = arguments[_i];
	        }
	        return this._performMultiAction('and', exs);
	    };
	    Expression.prototype.or = function () {
	        var exs = [];
	        for (var _i = 0; _i < arguments.length; _i++) {
	            exs[_i - 0] = arguments[_i];
	        }
	        return this._performMultiAction('or', exs);
	    };
	    Expression.prototype.substr = function (position, length) {
	        return this.performAction(new SubstrAction({ position: getNumber(position), length: getNumber(length) }));
	    };
	    Expression.prototype.extract = function (re) {
	        return this.performAction(new ExtractAction({ regexp: getString(re) }));
	    };
	    Expression.prototype.concat = function () {
	        var exs = [];
	        for (var _i = 0; _i < arguments.length; _i++) {
	            exs[_i - 0] = arguments[_i];
	        }
	        return this._performMultiAction('concat', exs);
	    };
	    Expression.prototype.lookup = function (lookup) {
	        return this.performAction(new LookupAction({ lookup: getString(lookup) }));
	    };
	    Expression.prototype.indexOf = function (ex) {
	        if (!Expression.isExpression(ex))
	            ex = Expression.fromJSLoose(ex);
	        return this.performAction(new IndexOfAction({ expression: ex }));
	    };
	    Expression.prototype.transformCase = function (transformType) {
	        return this.performAction(new TransformCaseAction({ transformType: getString(transformType) }));
	    };
	    Expression.prototype.customTransform = function (custom, outputType) {
	        if (!custom)
	            throw new Error("Must provide an extraction function name for custom transform");
	        var outputType = outputType !== undefined ? getString(outputType) : null;
	        return this.performAction(new CustomTransformAction({ custom: getString(custom), outputType: outputType }));
	    };
	    Expression.prototype.numberBucket = function (size, offset) {
	        if (offset === void 0) { offset = 0; }
	        return this.performAction(new NumberBucketAction({ size: getNumber(size), offset: getNumber(offset) }));
	    };
	    Expression.prototype.absolute = function () {
	        return this.performAction(new AbsoluteAction({}));
	    };
	    Expression.prototype.length = function () {
	        return this.performAction(new LengthAction({}));
	    };
	    Expression.prototype.timeBucket = function (duration, timezone) {
	        if (!Duration.isDuration(duration))
	            duration = Duration.fromJS(getString(duration));
	        if (timezone && !Timezone.isTimezone(timezone))
	            timezone = Timezone.fromJS(getString(timezone));
	        return this.bumpStringLiteralToTime().performAction(new TimeBucketAction({ duration: duration, timezone: timezone }));
	    };
	    Expression.prototype.timeFloor = function (duration, timezone) {
	        if (!Duration.isDuration(duration))
	            duration = Duration.fromJS(getString(duration));
	        if (timezone && !Timezone.isTimezone(timezone))
	            timezone = Timezone.fromJS(getString(timezone));
	        return this.bumpStringLiteralToTime().performAction(new TimeFloorAction({ duration: duration, timezone: timezone }));
	    };
	    Expression.prototype.timeShift = function (duration, step, timezone) {
	        if (!Duration.isDuration(duration))
	            duration = Duration.fromJS(getString(duration));
	        if (timezone && !Timezone.isTimezone(timezone))
	            timezone = Timezone.fromJS(getString(timezone));
	        return this.bumpStringLiteralToTime().performAction(new TimeShiftAction({ duration: duration, step: getNumber(step), timezone: timezone }));
	    };
	    Expression.prototype.timeRange = function (duration, step, timezone) {
	        if (!Duration.isDuration(duration))
	            duration = Duration.fromJS(getString(duration));
	        if (timezone && !Timezone.isTimezone(timezone))
	            timezone = Timezone.fromJS(getString(timezone));
	        return this.bumpStringLiteralToTime().performAction(new TimeRangeAction({ duration: duration, step: getNumber(step), timezone: timezone }));
	    };
	    Expression.prototype.timePart = function (part, timezone) {
	        if (timezone && !Timezone.isTimezone(timezone))
	            timezone = Timezone.fromJS(getString(timezone));
	        return this.bumpStringLiteralToTime().performAction(new TimePartAction({ part: getString(part), timezone: timezone }));
	    };
	    Expression.prototype.cast = function (outputType) {
	        return this.performAction(new CastAction({ outputType: getString(outputType) }));
	    };
	    Expression.prototype.cardinality = function () {
	        return this.performAction(new CardinalityAction({}));
	    };
	    Expression.prototype.filter = function (ex) {
	        if (!Expression.isExpression(ex))
	            ex = Expression.fromJSLoose(ex);
	        return this.performAction(new FilterAction({ expression: ex }));
	    };
	    Expression.prototype.split = function (splits, name, dataName) {
	        if (arguments.length === 3 ||
	            (arguments.length === 2 && splits && (typeof splits === 'string' || typeof splits.op === 'string'))) {
	            name = getString(name);
	            var realSplits = Object.create(null);
	            realSplits[name] = splits;
	            splits = realSplits;
	        }
	        else {
	            dataName = name;
	        }
	        var parsedSplits = Object.create(null);
	        for (var k in splits) {
	            if (!hasOwnProperty(splits, k))
	                continue;
	            var ex = splits[k];
	            parsedSplits[k] = Expression.isExpression(ex) ? ex : Expression.fromJSLoose(ex);
	        }
	        dataName = dataName ? getString(dataName) : getDataName(this);
	        if (!dataName)
	            throw new Error("could not guess data name in `split`, please provide one explicitly");
	        return this.performAction(new SplitAction({ splits: parsedSplits, dataName: dataName }));
	    };
	    Expression.prototype.apply = function (name, ex) {
	        if (arguments.length < 2)
	            throw new Error('invalid arguments to .apply, did you forget to specify a name?');
	        if (!Expression.isExpression(ex))
	            ex = Expression.fromJSLoose(ex);
	        return this.performAction(new ApplyAction({ name: getString(name), expression: ex }));
	    };
	    Expression.prototype.sort = function (ex, direction) {
	        if (direction === void 0) { direction = 'ascending'; }
	        if (!Expression.isExpression(ex))
	            ex = Expression.fromJSLoose(ex);
	        return this.performAction(new SortAction({ expression: ex, direction: getString(direction) }));
	    };
	    Expression.prototype.limit = function (limit) {
	        return this.performAction(new LimitAction({ limit: getNumber(limit) }));
	    };
	    Expression.prototype.select = function () {
	        var attributes = [];
	        for (var _i = 0; _i < arguments.length; _i++) {
	            attributes[_i - 0] = arguments[_i];
	        }
	        attributes = attributes.map(getString);
	        return this.performAction(new SelectAction({ attributes: attributes }));
	    };
	    Expression.prototype.count = function () {
	        if (arguments.length)
	            throw new Error('.count() should not have arguments, did you want to .filter().count()?');
	        return this.performAction(new CountAction({}));
	    };
	    Expression.prototype.sum = function (ex) {
	        if (!Expression.isExpression(ex))
	            ex = Expression.fromJSLoose(ex);
	        return this.performAction(new SumAction({ expression: ex }));
	    };
	    Expression.prototype.min = function (ex) {
	        if (!Expression.isExpression(ex))
	            ex = Expression.fromJSLoose(ex);
	        return this.performAction(new MinAction({ expression: ex }));
	    };
	    Expression.prototype.max = function (ex) {
	        if (!Expression.isExpression(ex))
	            ex = Expression.fromJSLoose(ex);
	        return this.performAction(new MaxAction({ expression: ex }));
	    };
	    Expression.prototype.average = function (ex) {
	        if (!Expression.isExpression(ex))
	            ex = Expression.fromJSLoose(ex);
	        return this.performAction(new AverageAction({ expression: ex }));
	    };
	    Expression.prototype.countDistinct = function (ex) {
	        if (!Expression.isExpression(ex))
	            ex = Expression.fromJSLoose(ex);
	        return this.performAction(new CountDistinctAction({ expression: ex }));
	    };
	    Expression.prototype.quantile = function (ex, quantile) {
	        if (!Expression.isExpression(ex))
	            ex = Expression.fromJSLoose(ex);
	        return this.performAction(new QuantileAction({ expression: ex, quantile: getNumber(quantile) }));
	    };
	    Expression.prototype.custom = function (custom) {
	        return this.performAction(new CustomAggregateAction({ custom: getString(custom) }));
	    };
	    Expression.prototype.customAggregate = function (custom) {
	        return this.performAction(new CustomAggregateAction({ custom: getString(custom) }));
	    };
	    Expression.prototype.join = function (ex) {
	        if (!Expression.isExpression(ex))
	            ex = Expression.fromJSLoose(ex);
	        return this.performAction(new JoinAction({ expression: ex }));
	    };
	    Expression.prototype.defineEnvironment = function (environment) {
	        if (!environment.timezone)
	            environment = { timezone: Timezone.UTC };
	        if (typeof environment.timezone === 'string')
	            environment = { timezone: Timezone.fromJS(environment.timezone) };
	        return this.substituteAction(function (action) { return action.needsEnvironment(); }, function (preEx, action) { return preEx.performAction(action.defineEnvironment(environment)); });
	    };
	    Expression.prototype.referenceCheck = function (context) {
	        return this.referenceCheckInTypeContext(getFullTypeFromDatum(context));
	    };
	    Expression.prototype.definedInTypeContext = function (typeContext) {
	        try {
	            var alterations = {};
	            this._fillRefSubstitutions(typeContext, { index: 0 }, alterations);
	        }
	        catch (e) {
	            return false;
	        }
	        return true;
	    };
	    Expression.prototype.referenceCheckInTypeContext = function (typeContext) {
	        var alterations = {};
	        this._fillRefSubstitutions(typeContext, { index: 0 }, alterations);
	        if (emptyLookup(alterations))
	            return this;
	        return this.substitute(function (ex, index) { return alterations[index] || null; });
	    };
	    Expression.prototype._fillRefSubstitutions = function (typeContext, indexer, alterations) {
	        indexer.index++;
	        return typeContext;
	    };
	    Expression.prototype.resolve = function (context, ifNotFound) {
	        if (ifNotFound === void 0) { ifNotFound = 'throw'; }
	        var expressions = Object.create(null);
	        for (var k in context) {
	            if (!hasOwnProperty(context, k))
	                continue;
	            var value = context[k];
	            expressions[k] = External.isExternal(value) ?
	                new ExternalExpression({ external: value }) :
	                new LiteralExpression({ value: value });
	        }
	        return this.resolveWithExpressions(expressions, ifNotFound);
	    };
	    Expression.prototype.resolveWithExpressions = function (expressions, ifNotFound) {
	        if (ifNotFound === void 0) { ifNotFound = 'throw'; }
	        return this.substitute(function (ex, index, depth, nestDiff) {
	            if (ex instanceof RefExpression) {
	                var nest = ex.nest;
	                if (nestDiff === nest) {
	                    var foundExpression = null;
	                    var valueFound = false;
	                    if (hasOwnProperty(expressions, ex.name)) {
	                        foundExpression = expressions[ex.name];
	                        valueFound = true;
	                    }
	                    else {
	                        valueFound = false;
	                    }
	                    if (valueFound) {
	                        return foundExpression;
	                    }
	                    else if (ifNotFound === 'throw') {
	                        throw new Error("could not resolve " + ex + " because is was not in the context");
	                    }
	                    else if (ifNotFound === 'null') {
	                        return Expression.NULL;
	                    }
	                    else if (ifNotFound === 'leave') {
	                        return ex;
	                    }
	                }
	                else if (nestDiff < nest) {
	                    throw new Error("went too deep during resolve on: " + ex);
	                }
	            }
	            return null;
	        });
	    };
	    Expression.prototype.resolved = function () {
	        return this.every(function (ex) {
	            return (ex instanceof RefExpression) ? ex.nest === 0 : null;
	        });
	    };
	    Expression.prototype.contained = function () {
	        return this.every(function (ex, index, depth, nestDiff) {
	            if (ex instanceof RefExpression) {
	                var nest = ex.nest;
	                return nestDiff >= nest;
	            }
	            return null;
	        });
	    };
	    Expression.prototype.decomposeAverage = function (countEx) {
	        return this.substituteAction(function (action) {
	            return action.action === 'average';
	        }, function (preEx, action) {
	            var expression = action.expression;
	            return preEx.sum(expression).divide(countEx ? preEx.sum(countEx) : preEx.count());
	        });
	    };
	    Expression.prototype.distribute = function () {
	        return this.substituteAction(function (action) {
	            return action.canDistribute();
	        }, function (preEx, action) {
	            var distributed = action.distribute(preEx);
	            if (!distributed)
	                throw new Error('distribute returned null');
	            return distributed;
	        });
	    };
	    Expression.prototype._initialPrepare = function (context, environment) {
	        return this.defineEnvironment(environment)
	            .referenceCheck(context)
	            .resolve(context)
	            .simplify();
	    };
	    Expression.prototype.simulate = function (context, environment) {
	        if (context === void 0) { context = {}; }
	        if (environment === void 0) { environment = {}; }
	        var readyExpression = this._initialPrepare(context, environment);
	        if (readyExpression instanceof ExternalExpression) {
	            readyExpression = readyExpression.unsuppress();
	        }
	        return readyExpression._computeResolvedSimulate(true, []);
	    };
	    Expression.prototype.simulateQueryPlan = function (context, environment) {
	        if (context === void 0) { context = {}; }
	        if (environment === void 0) { environment = {}; }
	        if (!datumHasExternal(context) && !this.hasExternal())
	            return [];
	        var readyExpression = this._initialPrepare(context, environment);
	        if (readyExpression instanceof ExternalExpression) {
	            readyExpression = readyExpression.unsuppress();
	        }
	        var simulatedQueries = [];
	        readyExpression._computeResolvedSimulate(true, simulatedQueries);
	        return simulatedQueries;
	    };
	    Expression.prototype.compute = function (context, environment) {
	        var _this = this;
	        if (context === void 0) { context = {}; }
	        if (environment === void 0) { environment = {}; }
	        if (!datumHasExternal(context) && !this.hasExternal()) {
	            return Q.fcall(function () {
	                var referenceChecked = _this.defineEnvironment(environment).referenceCheck(context);
	                return referenceChecked.getFn()(context, null);
	            });
	        }
	        return introspectDatum(context)
	            .then(function (introspectedContext) {
	            var readyExpression = _this._initialPrepare(introspectedContext, environment);
	            if (readyExpression instanceof ExternalExpression) {
	                readyExpression = readyExpression.unsuppress();
	            }
	            return readyExpression._computeResolved(true);
	        });
	    };
	    Expression.defaultParserTimezone = Timezone.UTC;
	    Expression.classMap = {};
	    return Expression;
	}());
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};







	var LiteralExpression = exports.LiteralExpression = (function (_super) {
	    __extends(LiteralExpression, _super);
	    function LiteralExpression(parameters) {
	        _super.call(this, parameters, dummyObject);
	        var value = parameters.value;
	        this.value = value;
	        this._ensureOp("literal");
	        if (typeof this.value === 'undefined') {
	            throw new TypeError("must have a `value`");
	        }
	        this.type = getValueType(value);
	        this.simple = true;
	    }
	    LiteralExpression.fromJS = function (parameters) {
	        var value = {
	            op: parameters.op,
	            type: parameters.type
	        };
	        if (!hasOwnProperty(parameters, 'value'))
	            throw new Error('literal expression must have value');
	        var v = parameters.value;
	        if (isImmutableClass(v)) {
	            value.value = v;
	        }
	        else {
	            value.value = valueFromJS(v, parameters.type);
	        }
	        return new LiteralExpression(value);
	    };
	    LiteralExpression.prototype.valueOf = function () {
	        var value = _super.prototype.valueOf.call(this);
	        value.value = this.value;
	        if (this.type)
	            value.type = this.type;
	        return value;
	    };
	    LiteralExpression.prototype.toJS = function () {
	        var js = _super.prototype.toJS.call(this);
	        if (this.value && this.value.toJS) {
	            js.value = this.value.toJS();
	            js.type = isSetType(this.type) ? 'SET' : this.type;
	        }
	        else {
	            js.value = this.value;
	            if (this.type === 'TIME')
	                js.type = 'TIME';
	        }
	        return js;
	    };
	    LiteralExpression.prototype.toString = function () {
	        var value = this.value;
	        if (value instanceof Dataset && value.basis()) {
	            return 'ply()';
	        }
	        else if (this.type === 'STRING') {
	            return JSON.stringify(value);
	        }
	        else {
	            return String(value);
	        }
	    };
	    LiteralExpression.prototype.getFn = function () {
	        var value = this.value;
	        return function () { return value; };
	    };
	    LiteralExpression.prototype.getJS = function (datumVar) {
	        return JSON.stringify(this.value);
	    };
	    LiteralExpression.prototype.getSQL = function (dialect) {
	        var value = this.value;
	        if (value === null)
	            return 'NULL';
	        switch (this.type) {
	            case 'STRING':
	                return dialect.escapeLiteral(value);
	            case 'BOOLEAN':
	                return dialect.booleanToSQL(value);
	            case 'NUMBER':
	                return dialect.numberToSQL(value);
	            case 'NUMBER_RANGE':
	                return "" + dialect.numberToSQL(value.start);
	            case 'TIME':
	                return dialect.timeToSQL(value);
	            case 'TIME_RANGE':
	                return "" + dialect.timeToSQL(value.start);
	            case 'STRING_RANGE':
	                return dialect.escapeLiteral(value.start);
	            case 'SET/STRING':
	            case 'SET/NUMBER':
	                return '(' + value.elements.map(function (v) { return typeof v === 'number' ? v : dialect.escapeLiteral(v); }).join(',') + ')';
	            case 'SET/NUMBER_RANGE':
	            case 'SET/TIME_RANGE':
	                return 'FALSE';
	            default:
	                throw new Error("currently unsupported type: " + this.type);
	        }
	    };
	    LiteralExpression.prototype.equals = function (other) {
	        if (!_super.prototype.equals.call(this, other) || this.type !== other.type)
	            return false;
	        if (this.value) {
	            if (this.value.equals) {
	                return this.value.equals(other.value);
	            }
	            else if (this.value.toISOString && other.value.toISOString) {
	                return this.value.valueOf() === other.value.valueOf();
	            }
	            else {
	                return this.value === other.value;
	            }
	        }
	        else {
	            return this.value === other.value;
	        }
	    };
	    LiteralExpression.prototype._fillRefSubstitutions = function (typeContext, indexer, alterations) {
	        indexer.index++;
	        if (this.type == 'DATASET') {
	            var newTypeContext = this.value.getFullType();
	            newTypeContext.parent = typeContext;
	            return newTypeContext;
	        }
	        else {
	            return { type: this.type };
	        }
	    };
	    LiteralExpression.prototype.getLiteralValue = function () {
	        return this.value;
	    };
	    LiteralExpression.prototype._computeResolvedSimulate = function () {
	        return this.value;
	    };
	    LiteralExpression.prototype._computeResolved = function () {
	        return Q(this.value);
	    };
	    LiteralExpression.prototype.maxPossibleSplitValues = function () {
	        var value = this.value;
	        return Set.isSet(value) ? value.size() : 1;
	    };
	    LiteralExpression.prototype.bumpStringLiteralToTime = function () {
	        if (this.type !== 'STRING')
	            return this;
	        var parse = parseISODate(this.value, Expression.defaultParserTimezone);
	        if (!parse)
	            throw new Error("could not parse '" + this.value + "' as time");
	        return r(parse);
	    };
	    LiteralExpression.prototype.bumpStringLiteralToSetString = function () {
	        if (this.type !== 'STRING')
	            return this;
	        return r(Set.fromJS([this.value]));
	    };
	    LiteralExpression.prototype.upgradeToType = function (targetType) {
	        var _a = this, type = _a.type, value = _a.value;
	        if (type === targetType || targetType !== 'TIME')
	            return this;
	        if (type === 'STRING') {
	            var parse = parseISODate(value, Expression.defaultParserTimezone);
	            return parse ? r(parse) : this;
	        }
	        else if (type === 'STRING_RANGE') {
	            var parseStart = parseISODate(value.start, Expression.defaultParserTimezone);
	            var parseEnd = parseISODate(value.end, Expression.defaultParserTimezone);
	            if (parseStart || parseEnd) {
	                return new LiteralExpression({
	                    type: "TIME_RANGE",
	                    value: TimeRange.fromJS({
	                        start: parseStart, end: parseEnd, bounds: '[]'
	                    })
	                });
	            }
	        }
	        return this;
	    };
	    return LiteralExpression;
	}(Expression));
	Expression.NULL = new LiteralExpression({ value: null });
	Expression.ZERO = new LiteralExpression({ value: 0 });
	Expression.ONE = new LiteralExpression({ value: 1 });
	Expression.FALSE = new LiteralExpression({ value: false });
	Expression.TRUE = new LiteralExpression({ value: true });
	Expression.EMPTY_STRING = new LiteralExpression({ value: '' });
	Expression.EMPTY_SET = new LiteralExpression({ value: Set.fromJS([]) });
	Expression.register(LiteralExpression);
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};


	var POSSIBLE_TYPES = exports.POSSIBLE_TYPES = {
	    'NULL': 1,
	    'BOOLEAN': 1,
	    'NUMBER': 1,
	    'TIME': 1,
	    'STRING': 1,
	    'NUMBER_RANGE': 1,
	    'TIME_RANGE': 1,
	    'SET': 1,
	    'SET/NULL': 1,
	    'SET/BOOLEAN': 1,
	    'SET/NUMBER': 1,
	    'SET/TIME': 1,
	    'SET/STRING': 1,
	    'SET/NUMBER_RANGE': 1,
	    'SET/TIME_RANGE': 1,
	    'DATASET': 1
	};
	var GENERATIONS_REGEXP = /^\^+/;
	var TYPE_REGEXP = /:([A-Z\/_]+)$/;
	var RefExpression = exports.RefExpression = (function (_super) {
	    __extends(RefExpression, _super);
	    function RefExpression(parameters) {
	        _super.call(this, parameters, dummyObject);
	        this._ensureOp("ref");
	        var name = parameters.name;
	        if (typeof name !== 'string' || name.length === 0) {
	            throw new TypeError("must have a nonempty `name`");
	        }
	        this.name = name;
	        var nest = parameters.nest;
	        if (typeof nest !== 'number') {
	            throw new TypeError("must have nest");
	        }
	        if (nest < 0) {
	            throw new Error("nest must be non-negative");
	        }
	        this.nest = nest;
	        var myType = parameters.type;
	        if (myType) {
	            if (!RefExpression.validType(myType)) {
	                throw new TypeError("unsupported type '" + myType + "'");
	            }
	            this.type = myType;
	        }
	        this.remote = Boolean(parameters.remote);
	        this.simple = true;
	    }
	    RefExpression.fromJS = function (parameters) {
	        var value;
	        if (hasOwnProperty(parameters, 'nest')) {
	            value = parameters;
	        }
	        else {
	            value = {
	                op: 'ref',
	                nest: 0,
	                name: parameters.name,
	                type: parameters.type
	            };
	        }
	        return new RefExpression(value);
	    };
	    RefExpression.parse = function (str) {
	        var refValue = { op: 'ref' };
	        var match;
	        match = str.match(GENERATIONS_REGEXP);
	        if (match) {
	            var nest = match[0].length;
	            refValue.nest = nest;
	            str = str.substr(nest);
	        }
	        else {
	            refValue.nest = 0;
	        }
	        match = str.match(TYPE_REGEXP);
	        if (match) {
	            refValue.type = match[1];
	            str = str.substr(0, str.length - match[0].length);
	        }
	        if (str[0] === '{' && str[str.length - 1] === '}') {
	            str = str.substr(1, str.length - 2);
	        }
	        refValue.name = str;
	        return new RefExpression(refValue);
	    };
	    RefExpression.validType = function (typeName) {
	        return hasOwnProperty(POSSIBLE_TYPES, typeName);
	    };
	    RefExpression.toJavaScriptSafeName = function (variableName) {
	        if (!RefExpression.SIMPLE_NAME_REGEXP.test(variableName)) {
	            variableName = variableName.replace(/\W/g, function (c) { return ("$" + c.charCodeAt(0)); });
	        }
	        return '_' + variableName;
	    };
	    RefExpression.prototype.valueOf = function () {
	        var value = _super.prototype.valueOf.call(this);
	        value.name = this.name;
	        value.nest = this.nest;
	        if (this.type)
	            value.type = this.type;
	        if (this.remote)
	            value.remote = true;
	        return value;
	    };
	    RefExpression.prototype.toJS = function () {
	        var js = _super.prototype.toJS.call(this);
	        js.name = this.name;
	        if (this.nest)
	            js.nest = this.nest;
	        if (this.type)
	            js.type = this.type;
	        return js;
	    };
	    RefExpression.prototype.toString = function () {
	        var str = this.name;
	        if (!RefExpression.SIMPLE_NAME_REGEXP.test(str)) {
	            str = '{' + str + '}';
	        }
	        if (this.nest) {
	            str = repeat('^', this.nest) + str;
	        }
	        if (this.type) {
	            str += ':' + this.type;
	        }
	        return '$' + str;
	    };
	    RefExpression.prototype.getFn = function () {
	        var name = this.name;
	        var nest = this.nest;
	        return function (d, c) {
	            if (nest) {
	                return c[name];
	            }
	            else {
	                if (hasOwnProperty(d, name)) {
	                    return d[name];
	                }
	                else {
	                    return null;
	                }
	            }
	        };
	    };
	    RefExpression.prototype.getJS = function (datumVar) {
	        if (this.nest)
	            throw new Error("can not call getJS on unresolved expression");
	        var name = this.name;
	        var expr;
	        if (datumVar) {
	            expr = datumVar.replace('[]', "[" + JSON.stringify(name) + "]");
	        }
	        else {
	            expr = RefExpression.toJavaScriptSafeName(name);
	        }
	        if (this.type === 'NUMBER')
	            expr = "(+" + expr + ")";
	        return expr;
	    };
	    RefExpression.prototype.getSQL = function (dialect, minimal) {
	        if (minimal === void 0) { minimal = false; }
	        if (this.nest)
	            throw new Error("can not call getSQL on unresolved expression: " + this);
	        return dialect.escapeName(this.name);
	    };
	    RefExpression.prototype.equals = function (other) {
	        return _super.prototype.equals.call(this, other) &&
	            this.name === other.name &&
	            this.nest === other.nest &&
	            this.remote === other.remote;
	    };
	    RefExpression.prototype.isRemote = function () {
	        return this.remote;
	    };
	    RefExpression.prototype._fillRefSubstitutions = function (typeContext, indexer, alterations) {
	        var myIndex = indexer.index;
	        indexer.index++;
	        var nest = this.nest;
	        var myTypeContext = typeContext;
	        while (nest--) {
	            myTypeContext = myTypeContext.parent;
	            if (!myTypeContext)
	                throw new Error('went too deep on ' + this.toString());
	        }
	        var nestDiff = 0;
	        while (myTypeContext && !myTypeContext.datasetType[this.name]) {
	            myTypeContext = myTypeContext.parent;
	            nestDiff++;
	        }
	        if (!myTypeContext) {
	            throw new Error('could not resolve ' + this.toString());
	        }
	        var myFullType = myTypeContext.datasetType[this.name];
	        var myType = myFullType.type;
	        var myRemote = Boolean(myFullType.remote);
	        if (this.type && this.type !== myType) {
	            throw new TypeError("type mismatch in " + this + " (has: " + this.type + " needs: " + myType + ")");
	        }
	        if (!this.type || nestDiff > 0 || this.remote !== myRemote) {
	            alterations[myIndex] = new RefExpression({
	                name: this.name,
	                nest: this.nest + nestDiff,
	                type: myType,
	                remote: myRemote
	            });
	        }
	        if (myType === 'DATASET') {
	            return {
	                parent: typeContext,
	                type: 'DATASET',
	                datasetType: myFullType.datasetType,
	                remote: myFullType.remote
	            };
	        }
	        return myFullType;
	    };
	    RefExpression.prototype.incrementNesting = function (by) {
	        if (by === void 0) { by = 1; }
	        var value = this.valueOf();
	        value.nest = by + value.nest;
	        return new RefExpression(value);
	    };
	    RefExpression.prototype._computeResolvedSimulate = function () {
	        throw new Error('should never get here');
	    };
	    RefExpression.prototype._computeResolved = function () {
	        throw new Error('should never get here');
	    };
	    RefExpression.prototype.maxPossibleSplitValues = function () {
	        return this.type === 'BOOLEAN' ? 3 : Infinity;
	    };
	    RefExpression.prototype.upgradeToType = function (targetType) {
	        var type = this.type;
	        if (targetType === 'TIME' && (!type || type === 'STRING')) {
	            return this.changeType(targetType);
	        }
	        return this;
	    };
	    RefExpression.prototype.changeType = function (newType) {
	        var value = this.valueOf();
	        value.type = newType;
	        return new RefExpression(value);
	    };
	    RefExpression.SIMPLE_NAME_REGEXP = /^([a-z_]\w*)$/i;
	    return RefExpression;
	}(Expression));
	Expression.register(RefExpression);
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};



	var ExternalExpression = exports.ExternalExpression = (function (_super) {
	    __extends(ExternalExpression, _super);
	    function ExternalExpression(parameters) {
	        _super.call(this, parameters, dummyObject);
	        var external = parameters.external;
	        if (!external)
	            throw new Error('must have an external');
	        this.external = external;
	        this._ensureOp('external');
	        this.type = external.mode === 'value' ? 'NUMBER' : 'DATASET';
	        this.simple = true;
	    }
	    ExternalExpression.fromJS = function (parameters) {
	        var value = {
	            op: parameters.op
	        };
	        value.external = External.fromJS(parameters.external);
	        return new ExternalExpression(value);
	    };
	    ExternalExpression.prototype.valueOf = function () {
	        var value = _super.prototype.valueOf.call(this);
	        value.external = this.external;
	        return value;
	    };
	    ExternalExpression.prototype.toJS = function () {
	        var js = _super.prototype.toJS.call(this);
	        js.external = this.external.toJS();
	        return js;
	    };
	    ExternalExpression.prototype.toString = function () {
	        return "E:" + this.external;
	    };
	    ExternalExpression.prototype.getFn = function () {
	        throw new Error('should not call getFn on External');
	    };
	    ExternalExpression.prototype.getJS = function (datumVar) {
	        throw new Error('should not call getJS on External');
	    };
	    ExternalExpression.prototype.getSQL = function (dialect) {
	        throw new Error('should not call getSQL on External');
	    };
	    ExternalExpression.prototype.equals = function (other) {
	        return _super.prototype.equals.call(this, other) &&
	            this.external.equals(other.external);
	    };
	    ExternalExpression.prototype._fillRefSubstitutions = function (typeContext, indexer, alterations) {
	        indexer.index++;
	        var external = this.external;
	        if (external.mode === 'value') {
	            return { type: 'NUMBER' };
	        }
	        else {
	            var newTypeContext = this.external.getFullType();
	            newTypeContext.parent = typeContext;
	            return newTypeContext;
	        }
	    };
	    ExternalExpression.prototype._computeResolvedSimulate = function (lastNode, simulatedQueries) {
	        var external = this.external;
	        if (external.suppress)
	            return external;
	        return external.simulateValue(lastNode, simulatedQueries);
	    };
	    ExternalExpression.prototype._computeResolved = function (lastNode) {
	        var external = this.external;
	        if (external.suppress)
	            return Q(external);
	        return external.queryValue(lastNode);
	    };
	    ExternalExpression.prototype.unsuppress = function () {
	        var value = this.valueOf();
	        value.external = this.external.show();
	        return new ExternalExpression(value);
	    };
	    ExternalExpression.prototype.addAction = function (action) {
	        var newExternal = this.external.addAction(action);
	        if (!newExternal)
	            return null;
	        return new ExternalExpression({ external: newExternal });
	    };
	    ExternalExpression.prototype.maxPossibleSplitValues = function () {
	        return Infinity;
	    };
	    return ExternalExpression;
	}(Expression));
	Expression.register(ExternalExpression);
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};







	var ChainExpression = exports.ChainExpression = (function (_super) {
	    __extends(ChainExpression, _super);
	    function ChainExpression(parameters) {
	        _super.call(this, parameters, dummyObject);
	        var expression = parameters.expression;
	        var actions = parameters.actions;
	        if (!actions.length)
	            throw new Error('can not have empty actions');
	        this._ensureOp('chain');
	        var type = expression.type;
	        for (var i = 0; i < actions.length; i++) {
	            var action = actions[i];
	            var upgradedAction = action.getUpgradedType(type);
	            if (upgradedAction !== action) {
	                actions = actions.slice();
	                actions[i] = action = upgradedAction;
	            }
	            try {
	                type = action.getOutputType(type);
	            }
	            catch (e) {
	                var neededType = action.getNecessaryInputTypes();
	                if (i === 0) {
	                    expression = expression.upgradeToType(neededType);
	                    type = expression.type;
	                }
	                else {
	                    var upgradedChain = new ChainExpression({
	                        expression: expression,
	                        actions: actions.slice(0, i)
	                    }).upgradeToType(neededType);
	                    expression = upgradedChain.expression;
	                    actions = upgradedChain.actions;
	                    type = upgradedChain.type;
	                }
	                type = action.getOutputType(type);
	            }
	        }
	        this.expression = expression;
	        this.actions = actions;
	        this.type = type;
	    }
	    ChainExpression.fromJS = function (parameters) {
	        var value = {
	            op: parameters.op
	        };
	        value.expression = Expression.fromJS(parameters.expression);
	        if (hasOwnProperty(parameters, 'action')) {
	            value.actions = [Action.fromJS(parameters.action)];
	        }
	        else {
	            if (!Array.isArray(parameters.actions))
	                throw new Error('chain `actions` must be an array');
	            value.actions = parameters.actions.map(Action.fromJS);
	        }
	        return new ChainExpression(value);
	    };
	    ChainExpression.prototype.upgradeToType = function (neededType) {
	        var actions = this.actions;
	        var upgradedActions = [];
	        for (var i = actions.length - 1; i >= 0; i--) {
	            var action = actions[i];
	            var upgradedAction = action.getUpgradedType(neededType);
	            upgradedActions.unshift(upgradedAction);
	            neededType = upgradedAction.getNeededType();
	        }
	        var value = this.valueOf();
	        value.actions = upgradedActions;
	        value.expression = this.expression.upgradeToType(neededType);
	        return new ChainExpression(value);
	    };
	    ChainExpression.prototype.valueOf = function () {
	        var value = _super.prototype.valueOf.call(this);
	        value.expression = this.expression;
	        value.actions = this.actions;
	        return value;
	    };
	    ChainExpression.prototype.toJS = function () {
	        var js = _super.prototype.toJS.call(this);
	        js.expression = this.expression.toJS();
	        var actions = this.actions;
	        if (actions.length === 1) {
	            js.action = actions[0].toJS();
	        }
	        else {
	            js.actions = actions.map(function (action) { return action.toJS(); });
	        }
	        return js;
	    };
	    ChainExpression.prototype.toString = function (indent) {
	        var expression = this.expression;
	        var actions = this.actions;
	        var joinStr = '.';
	        var nextIndent = null;
	        if (indent != null && (actions.length > 1 || expression.type === 'DATASET')) {
	            joinStr = '\n' + repeat(' ', indent) + joinStr;
	            nextIndent = indent + 2;
	        }
	        return [expression.toString()]
	            .concat(actions.map(function (action) { return action.toString(nextIndent); }))
	            .join(joinStr);
	    };
	    ChainExpression.prototype.equals = function (other) {
	        return _super.prototype.equals.call(this, other) &&
	            this.expression.equals(other.expression) &&
	            immutableArraysEqual(this.actions, other.actions);
	    };
	    ChainExpression.prototype.expressionCount = function () {
	        var expressionCount = 1 + this.expression.expressionCount();
	        var actions = this.actions;
	        for (var _i = 0, actions_1 = actions; _i < actions_1.length; _i++) {
	            var action = actions_1[_i];
	            expressionCount += action.expressionCount();
	        }
	        return expressionCount;
	    };
	    ChainExpression.prototype.getFn = function () {
	        var _a = this, expression = _a.expression, actions = _a.actions;
	        var fn = expression.getFn();
	        var type = expression.type;
	        for (var _i = 0, actions_2 = actions; _i < actions_2.length; _i++) {
	            var action = actions_2[_i];
	            fn = action.getFn(type, fn);
	            type = action.getOutputType(type);
	        }
	        return fn;
	    };
	    ChainExpression.prototype.getJS = function (datumVar) {
	        var _a = this, expression = _a.expression, actions = _a.actions;
	        var js = expression.getJS(datumVar);
	        var type = expression.type;
	        for (var _i = 0, actions_3 = actions; _i < actions_3.length; _i++) {
	            var action = actions_3[_i];
	            js = action.getJS(type, js, datumVar);
	            type = action.getOutputType(type);
	        }
	        return js;
	    };
	    ChainExpression.prototype.getSQL = function (dialect) {
	        var _a = this, expression = _a.expression, actions = _a.actions;
	        var sql = expression.getSQL(dialect);
	        var type = expression.type;
	        for (var _i = 0, actions_4 = actions; _i < actions_4.length; _i++) {
	            var action = actions_4[_i];
	            sql = action.getSQL(type, sql, dialect);
	            type = action.getOutputType(type);
	        }
	        return sql;
	    };
	    ChainExpression.prototype.getSingleAction = function (neededAction) {
	        var actions = this.actions;
	        if (actions.length !== 1)
	            return null;
	        var singleAction = actions[0];
	        if (neededAction && singleAction.action !== neededAction)
	            return null;
	        return singleAction;
	    };
	    ChainExpression.prototype.foldIntoExternal = function () {
	        var _a = this, expression = _a.expression, actions = _a.actions;
	        var baseExternals = this.getBaseExternals();
	        if (baseExternals.length === 0)
	            return this;
	        if (expression instanceof ExternalExpression) {
	            var myExternal = expression;
	            var undigestedActions = [];
	            for (var _i = 0, actions_5 = actions; _i < actions_5.length; _i++) {
	                var action = actions_5[_i];
	                var newExternal = myExternal.addAction(action);
	                if (newExternal) {
	                    myExternal = newExternal;
	                }
	                else {
	                    undigestedActions.push(action);
	                }
	            }
	            if (undigestedActions.length) {
	                return new ChainExpression({
	                    expression: myExternal,
	                    actions: undigestedActions,
	                    simple: true
	                });
	            }
	            else {
	                return myExternal;
	            }
	        }
	        var dataset = expression.getLiteralValue();
	        if (Dataset.isDataset(dataset) && dataset.basis()) {
	            if (baseExternals.length > 1) {
	                throw new Error('multiple externals not supported for now');
	            }
	            var dataDefinitions = Object.create(null);
	            var hasExternalValueApply = false;
	            var applies = [];
	            var undigestedActions = [];
	            var allActions = [];
	            for (var _b = 0, actions_6 = actions; _b < actions_6.length; _b++) {
	                var action_1 = actions_6[_b];
	                if (action_1 instanceof ApplyAction) {
	                    var substitutedAction = action_1.substitute(function (ex, index, depth, nestDiff) {
	                        if (ex instanceof RefExpression && ex.type === 'DATASET' && nestDiff === 1) {
	                            return dataDefinitions[ex.name] || null;
	                        }
	                        return null;
	                    }).simplify();
	                    if (substitutedAction.expression instanceof ExternalExpression) {
	                        var externalMode = substitutedAction.expression.external.mode;
	                        if (externalMode === 'raw') {
	                            dataDefinitions[substitutedAction.name] = substitutedAction.expression;
	                        }
	                        else if (externalMode === 'value') {
	                            applies.push(substitutedAction);
	                            allActions.push(substitutedAction);
	                            hasExternalValueApply = true;
	                        }
	                        else {
	                            undigestedActions.push(substitutedAction);
	                            allActions.push(substitutedAction);
	                        }
	                    }
	                    else if (substitutedAction.expression.type !== 'DATASET') {
	                        applies.push(substitutedAction);
	                        allActions.push(substitutedAction);
	                    }
	                    else {
	                        undigestedActions.push(substitutedAction);
	                        allActions.push(substitutedAction);
	                    }
	                }
	                else {
	                    undigestedActions.push(action_1);
	                    allActions.push(action_1);
	                }
	            }
	            var newExpression;
	            if (hasExternalValueApply) {
	                var combinedExternal = baseExternals[0].makeTotal(applies);
	                if (!combinedExternal)
	                    throw new Error('something went wrong');
	                newExpression = new ExternalExpression({ external: combinedExternal });
	                if (undigestedActions.length)
	                    newExpression = newExpression.performActions(undigestedActions, true);
	                return newExpression;
	            }
	            else {
	                return ply().performActions(allActions);
	            }
	        }
	        return this.substituteAction(function (action) {
	            var expression = action.expression;
	            return (expression instanceof ExternalExpression) && expression.external.mode === 'value';
	        }, function (preEx, action) {
	            var external = action.expression.external;
	            return new ExternalExpression({
	                external: external.prePack(preEx, action)
	            });
	        }, {
	            onceInChain: true
	        }).simplify();
	    };
	    ChainExpression.prototype.simplify = function () {
	        if (this.simple)
	            return this;
	        var simpleExpression = this.expression.simplify();
	        var actions = this.actions;
	        if (simpleExpression instanceof ChainExpression) {
	            return new ChainExpression({
	                expression: simpleExpression.expression,
	                actions: simpleExpression.actions.concat(actions)
	            }).simplify();
	        }
	        for (var _i = 0, actions_7 = actions; _i < actions_7.length; _i++) {
	            var action = actions_7[_i];
	            simpleExpression = action.performOnSimple(simpleExpression);
	        }
	        if (!simpleExpression.isOp('chain'))
	            return simpleExpression;
	        return simpleExpression.foldIntoExternal();
	    };
	    ChainExpression.prototype._everyHelper = function (iter, thisArg, indexer, depth, nestDiff) {
	        var pass = iter.call(thisArg, this, indexer.index, depth, nestDiff);
	        if (pass != null) {
	            return pass;
	        }
	        else {
	            indexer.index++;
	        }
	        depth++;
	        var expression = this.expression;
	        if (!expression._everyHelper(iter, thisArg, indexer, depth, nestDiff))
	            return false;
	        var actions = this.actions;
	        var every = true;
	        for (var _i = 0, actions_8 = actions; _i < actions_8.length; _i++) {
	            var action = actions_8[_i];
	            if (every) {
	                every = action._everyHelper(iter, thisArg, indexer, depth, nestDiff);
	            }
	            else {
	                indexer.index += action.expressionCount();
	            }
	        }
	        return every;
	    };
	    ChainExpression.prototype._substituteHelper = function (substitutionFn, thisArg, indexer, depth, nestDiff) {
	        var sub = substitutionFn.call(thisArg, this, indexer.index, depth, nestDiff);
	        if (sub) {
	            indexer.index += this.expressionCount();
	            return sub;
	        }
	        else {
	            indexer.index++;
	        }
	        depth++;
	        var expression = this.expression;
	        var subExpression = expression._substituteHelper(substitutionFn, thisArg, indexer, depth, nestDiff);
	        var actions = this.actions;
	        var subActions = actions.map(function (action) { return action._substituteHelper(substitutionFn, thisArg, indexer, depth, nestDiff); });
	        if (expression === subExpression && arraysEqual(actions, subActions))
	            return this;
	        var value = this.valueOf();
	        value.expression = subExpression;
	        value.actions = subActions;
	        delete value.simple;
	        return new ChainExpression(value);
	    };
	    ChainExpression.prototype.performAction = function (action, markSimple) {
	        if (!action)
	            throw new Error('must have action');
	        return new ChainExpression({
	            expression: this.expression,
	            actions: this.actions.concat(action),
	            simple: Boolean(markSimple)
	        });
	    };
	    ChainExpression.prototype._fillRefSubstitutions = function (typeContext, indexer, alterations) {
	        indexer.index++;
	        var currentContext = typeContext;
	        var outputContext = this.expression._fillRefSubstitutions(currentContext, indexer, alterations);
	        currentContext = outputContext.type === 'DATASET' ? outputContext : typeContext;
	        var actions = this.actions;
	        for (var _i = 0, actions_9 = actions; _i < actions_9.length; _i++) {
	            var action = actions_9[_i];
	            outputContext = action._fillRefSubstitutions(currentContext, outputContext, indexer, alterations);
	            currentContext = outputContext.type === 'DATASET' ? outputContext : typeContext;
	        }
	        return outputContext;
	    };
	    ChainExpression.prototype.actionize = function (containingAction) {
	        var actions = this.actions;
	        var k = actions.length - 1;
	        for (; k >= 0; k--) {
	            if (actions[k].action !== containingAction)
	                break;
	        }
	        k++;
	        if (k === actions.length)
	            return null;
	        var newExpression;
	        if (k === 0) {
	            newExpression = this.expression;
	        }
	        else {
	            var value = this.valueOf();
	            value.actions = actions.slice(0, k);
	            newExpression = new ChainExpression(value);
	        }
	        var ActionConstructor = Action.classMap[containingAction];
	        return [
	            new ActionConstructor({
	                expression: newExpression
	            })
	        ].concat(actions.slice(k));
	    };
	    ChainExpression.prototype.firstAction = function () {
	        return this.actions[0] || null;
	    };
	    ChainExpression.prototype.lastAction = function () {
	        var actions = this.actions;
	        return actions[actions.length - 1] || null;
	    };
	    ChainExpression.prototype.headActions = function (n) {
	        var actions = this.actions;
	        if (actions.length <= n)
	            return this;
	        if (n <= 0)
	            return this.expression;
	        var value = this.valueOf();
	        value.actions = actions.slice(0, n);
	        return new ChainExpression(value);
	    };
	    ChainExpression.prototype.popAction = function () {
	        var actions = this.actions;
	        if (!actions.length)
	            return null;
	        actions = actions.slice(0, -1);
	        if (!actions.length)
	            return this.expression;
	        var value = this.valueOf();
	        value.actions = actions;
	        return new ChainExpression(value);
	    };
	    ChainExpression.prototype._computeResolvedSimulate = function (lastNode, simulatedQueries) {
	        var _a = this, expression = _a.expression, actions = _a.actions;
	        if (expression.isOp('external')) {
	            var exV = expression._computeResolvedSimulate(false, simulatedQueries);
	            var newExpression = r(exV).performActions(actions).simplify();
	            if (newExpression.hasExternal()) {
	                return newExpression._computeResolvedSimulate(true, simulatedQueries);
	            }
	            else {
	                return newExpression.getFn()(null, null);
	            }
	        }
	        function execAction(i, dataset) {
	            var action = actions[i];
	            var actionExpression = action.expression;
	            if (action instanceof FilterAction) {
	                return dataset.filter(actionExpression.getFn(), null);
	            }
	            else if (action instanceof ApplyAction) {
	                if (actionExpression.hasExternal()) {
	                    return dataset.apply(action.name, function (d) {
	                        var simpleExpression = actionExpression.resolve(d).simplify();
	                        return simpleExpression._computeResolvedSimulate(simpleExpression.isOp('external'), simulatedQueries);
	                    }, actionExpression.type, null);
	                }
	                else {
	                    return dataset.apply(action.name, actionExpression.getFn(), actionExpression.type, null);
	                }
	            }
	            else if (action instanceof SortAction) {
	                return dataset.sort(actionExpression.getFn(), action.direction, null);
	            }
	            else if (action instanceof LimitAction) {
	                return dataset.limit(action.limit);
	            }
	            else if (action instanceof SelectAction) {
	                return dataset.select(action.attributes);
	            }
	            throw new Error("could not execute action " + action);
	        }
	        var value = expression._computeResolvedSimulate(false, simulatedQueries);
	        for (var i = 0; i < actions.length; i++) {
	            value = execAction(i, value);
	        }
	        return value;
	    };
	    ChainExpression.prototype._computeResolved = function () {
	        var _a = this, expression = _a.expression, actions = _a.actions;
	        if (expression.isOp('external')) {
	            return expression._computeResolved(false).then(function (exV) {
	                var newExpression = r(exV).performActions(actions).simplify();
	                if (newExpression.hasExternal()) {
	                    return newExpression._computeResolved(true);
	                }
	                else {
	                    return newExpression.getFn()(null, null);
	                }
	            });
	        }
	        function execAction(i) {
	            return function (dataset) {
	                var action = actions[i];
	                var actionExpression = action.expression;
	                if (action instanceof FilterAction) {
	                    return dataset.filter(actionExpression.getFn(), null);
	                }
	                else if (action instanceof ApplyAction) {
	                    if (actionExpression.hasExternal()) {
	                        return dataset.applyPromise(action.name, function (d) {
	                            var simpleExpression = actionExpression.resolve(d).simplify();
	                            return simpleExpression._computeResolved(simpleExpression.isOp('external'));
	                        }, actionExpression.type, null);
	                    }
	                    else {
	                        return dataset.apply(action.name, actionExpression.getFn(), actionExpression.type, null);
	                    }
	                }
	                else if (action instanceof SortAction) {
	                    return dataset.sort(actionExpression.getFn(), action.direction, null);
	                }
	                else if (action instanceof LimitAction) {
	                    return dataset.limit(action.limit);
	                }
	                else if (action instanceof SelectAction) {
	                    return dataset.select(action.attributes);
	                }
	                throw new Error("could not execute action " + action);
	            };
	        }
	        var promise = expression._computeResolved(false);
	        for (var i = 0; i < actions.length; i++) {
	            promise = promise.then(execAction(i));
	        }
	        return promise;
	    };
	    ChainExpression.prototype.extractFromAnd = function (matchFn) {
	        if (!this.simple)
	            return this.simplify().extractFromAnd(matchFn);
	        var andExpressions = this.getExpressionPattern('and');
	        if (!andExpressions)
	            return _super.prototype.extractFromAnd.call(this, matchFn);
	        var includedExpressions = [];
	        var excludedExpressions = [];
	        for (var _i = 0, andExpressions_1 = andExpressions; _i < andExpressions_1.length; _i++) {
	            var ex = andExpressions_1[_i];
	            if (matchFn(ex)) {
	                includedExpressions.push(ex);
	            }
	            else {
	                excludedExpressions.push(ex);
	            }
	        }
	        return {
	            extract: Expression.and(includedExpressions).simplify(),
	            rest: Expression.and(excludedExpressions).simplify()
	        };
	    };
	    ChainExpression.prototype.maxPossibleSplitValues = function () {
	        return this.type === 'BOOLEAN' ? 3 : this.lastAction().maxPossibleSplitValues();
	    };
	    return ChainExpression;
	}(Expression));
	Expression.register(ChainExpression);








	var Action = exports.Action = (function () {
	    function Action(parameters, dummy) {
	        if (dummy === void 0) { dummy = null; }
	        this._stringTransformInputType = ['STRING', 'SET/STRING'];
	        if (dummy !== dummyObject) {
	            throw new TypeError("can not call `new Action` directly use Action.fromJS instead");
	        }
	        this.action = parameters.action;
	        this.expression = parameters.expression;
	        this.simple = parameters.simple;
	    }
	    Action.jsToValue = function (parameters) {
	        var value = {
	            action: parameters.action
	        };
	        if (parameters.expression) {
	            value.expression = Expression.fromJS(parameters.expression);
	        }
	        return value;
	    };
	    Action.actionsDependOn = function (actions, name) {
	        for (var _i = 0, actions_1 = actions; _i < actions_1.length; _i++) {
	            var action = actions_1[_i];
	            var freeReferences = action.getFreeReferences();
	            if (freeReferences.indexOf(name) !== -1)
	                return true;
	            if (action.name === name)
	                return false;
	        }
	        return false;
	    };
	    Action.isAction = function (candidate) {
	        return isInstanceOf(candidate, Action);
	    };
	    Action.register = function (act) {
	        var action = act.name.replace('Action', '').replace(/^\w/, function (s) { return s.toLowerCase(); });
	        Action.classMap[action] = act;
	    };
	    Action.fromJS = function (actionJS) {
	        if (!hasOwnProperty(actionJS, "action")) {
	            throw new Error("action must be defined");
	        }
	        var action = actionJS.action;
	        if (typeof action !== "string") {
	            throw new Error("action must be a string");
	        }
	        if (action === 'custom')
	            actionJS.action = action = 'customAggregate';
	        var ClassFn = Action.classMap[action];
	        if (!ClassFn) {
	            throw new Error("unsupported action '" + action + "'");
	        }
	        return ClassFn.fromJS(actionJS);
	    };
	    Action.fromValue = function (value) {
	        var ClassFn = Action.classMap[value.action];
	        return new ClassFn(value);
	    };
	    Action.prototype._ensureAction = function (action) {
	        if (!this.action) {
	            this.action = action;
	            return;
	        }
	        if (this.action !== action) {
	            throw new TypeError("incorrect action '" + this.action + "' (needs to be: '" + action + "')");
	        }
	    };
	    Action.prototype._toStringParameters = function (expressionString) {
	        return expressionString ? [expressionString] : [];
	    };
	    Action.prototype.toString = function (indent) {
	        var expression = this.expression;
	        var spacer = '';
	        var joinStr = indent != null ? ', ' : ',';
	        var nextIndent = null;
	        if (indent != null && expression && expression.type === 'DATASET') {
	            var space = repeat(' ', indent);
	            spacer = '\n' + space;
	            joinStr = ',\n' + space;
	            nextIndent = indent + 2;
	        }
	        return [
	            this.action,
	            '(',
	            spacer,
	            this._toStringParameters(expression ? expression.toString(nextIndent) : null).join(joinStr),
	            spacer,
	            ')'
	        ].join('');
	    };
	    Action.prototype.valueOf = function () {
	        var value = {
	            action: this.action
	        };
	        if (this.expression)
	            value.expression = this.expression;
	        if (this.simple)
	            value.simple = true;
	        return value;
	    };
	    Action.prototype.toJS = function () {
	        var js = {
	            action: this.action
	        };
	        if (this.expression) {
	            js.expression = this.expression.toJS();
	        }
	        return js;
	    };
	    Action.prototype.toJSON = function () {
	        return this.toJS();
	    };
	    Action.prototype.equals = function (other) {
	        return Action.isAction(other) &&
	            this.action === other.action &&
	            Boolean(this.expression) === Boolean(other.expression) &&
	            (!this.expression || this.expression.equals(other.expression));
	    };
	    Action.prototype.isAggregate = function () {
	        return false;
	    };
	    Action.prototype._checkInputTypes = function (inputType) {
	        var neededTypes = this.getNecessaryInputTypes();
	        if (typeof neededTypes === 'string')
	            neededTypes = [neededTypes];
	        if (inputType && inputType !== 'NULL' && neededTypes.indexOf(inputType) === -1) {
	            if (neededTypes.length === 1) {
	                throw new Error(this.action + " must have input of type " + neededTypes[0] + " (is " + inputType + ")");
	            }
	            else {
	                throw new Error(this.action + " must have input of type " + neededTypes.join(' or ') + " (is " + inputType + ")");
	            }
	        }
	    };
	    Action.prototype._checkNoExpression = function () {
	        if (this.expression) {
	            throw new Error(this.action + " must no have an expression (is " + this.expression + ")");
	        }
	    };
	    Action.prototype._checkExpressionTypes = function () {
	        var neededTypes = [];
	        for (var _i = 0; _i < arguments.length; _i++) {
	            neededTypes[_i - 0] = arguments[_i];
	        }
	        var expressionType = this.expression.type;
	        if (expressionType && expressionType !== 'NULL' && neededTypes.indexOf(expressionType) === -1) {
	            if (neededTypes.length === 1) {
	                throw new Error(this.action + " must have expression of type " + neededTypes[0] + " (is " + expressionType + ")");
	            }
	            else {
	                throw new Error(this.action + " must have expression of type " + neededTypes.join(' or ') + " (is " + expressionType + ")");
	            }
	        }
	    };
	    Action.prototype._stringTransformOutputType = function (inputType) {
	        this._checkInputTypes(inputType);
	        return inputType;
	    };
	    Action.prototype.getNeededType = function () {
	        var expression = this.expression;
	        if (expression)
	            return expression.type;
	        return null;
	    };
	    Action.prototype._getFnHelper = function (inputType, inputFn, expressionFn) {
	        var action = this.action;
	        return function (d, c) {
	            var inV = inputFn(d, c);
	            return inV ? inV[action](expressionFn, foldContext(d, c)) : null;
	        };
	    };
	    Action.prototype.getFn = function (inputType, inputFn) {
	        var expression = this.expression;
	        var expressionFn = expression ? expression.getFn() : null;
	        return this._getFnHelper(inputType, inputFn, expressionFn);
	    };
	    Action.prototype._getJSHelper = function (inputType, inputJS, expressionJS) {
	        throw new Error('can not call this directly');
	    };
	    Action.prototype.getJS = function (inputType, inputJS, datumVar) {
	        var expression = this.expression;
	        var expressionJS = expression ? expression.getJS(datumVar) : null;
	        return this._getJSHelper(inputType, inputJS, expressionJS);
	    };
	    Action.prototype._getSQLHelper = function (inputType, dialect, inputSQL, expressionSQL) {
	        throw new Error('can not call this directly');
	    };
	    Action.prototype.getSQL = function (inputType, inputSQL, dialect) {
	        var expression = this.expression;
	        var expressionSQL = expression ? expression.getSQL(dialect) : null;
	        return this._getSQLHelper(inputType, dialect, inputSQL, expressionSQL);
	    };
	    Action.prototype.expressionCount = function () {
	        return this.expression ? this.expression.expressionCount() : 0;
	    };
	    Action.prototype.fullyDefined = function () {
	        var expression = this.expression;
	        return !expression || expression.isOp('literal');
	    };
	    Action.prototype._specialSimplify = function (simpleExpression) {
	        return null;
	    };
	    Action.prototype.simplify = function () {
	        if (this.simple)
	            return this;
	        var expression = this.expression;
	        var simpleExpression = expression ? expression.simplify() : null;
	        var special = this._specialSimplify(simpleExpression);
	        if (special)
	            return special;
	        var value = this.valueOf();
	        if (simpleExpression) {
	            value.expression = simpleExpression;
	        }
	        value.simple = true;
	        return Action.fromValue(value);
	    };
	    Action.prototype._removeAction = function (inputType) {
	        return false;
	    };
	    Action.prototype._nukeExpression = function (precedingExpression) {
	        return null;
	    };
	    Action.prototype._distributeAction = function () {
	        return null;
	    };
	    Action.prototype._performOnLiteral = function (literalExpression) {
	        return null;
	    };
	    Action.prototype._performOnRef = function (refExpression) {
	        return null;
	    };
	    Action.prototype._foldWithPrevAction = function (prevAction) {
	        return null;
	    };
	    Action.prototype._putBeforeLastAction = function (lastAction) {
	        return null;
	    };
	    Action.prototype._performOnSimpleChain = function (chainExpression) {
	        return null;
	    };
	    Action.prototype.performOnSimple = function (simpleExpression) {
	        if (!this.simple)
	            return this.simplify().performOnSimple(simpleExpression);
	        if (!simpleExpression.simple)
	            throw new Error('must get a simple expression');
	        if (this._removeAction(simpleExpression.type))
	            return simpleExpression;
	        var nukedExpression = this._nukeExpression(simpleExpression);
	        if (nukedExpression)
	            return nukedExpression;
	        var distributedActions = this._distributeAction();
	        if (distributedActions) {
	            for (var _i = 0, distributedActions_1 = distributedActions; _i < distributedActions_1.length; _i++) {
	                var distributedAction = distributedActions_1[_i];
	                simpleExpression = distributedAction.performOnSimple(simpleExpression);
	            }
	            return simpleExpression;
	        }
	        if (simpleExpression instanceof LiteralExpression) {
	            if (this.fullyDefined()) {
	                return new LiteralExpression({
	                    value: this.getFn(simpleExpression.type, simpleExpression.getFn())(null, null)
	                });
	            }
	            var special = this._performOnLiteral(simpleExpression);
	            if (special)
	                return special;
	        }
	        else if (simpleExpression instanceof RefExpression) {
	            var special = this._performOnRef(simpleExpression);
	            if (special)
	                return special;
	        }
	        else if (simpleExpression instanceof ChainExpression) {
	            var actions = simpleExpression.actions;
	            var lastAction = actions[actions.length - 1];
	            var foldedAction = this._foldWithPrevAction(lastAction);
	            if (foldedAction) {
	                return foldedAction.performOnSimple(simpleExpression.popAction());
	            }
	            var beforeAction = this._putBeforeLastAction(lastAction);
	            if (beforeAction) {
	                return lastAction.performOnSimple(beforeAction.performOnSimple(simpleExpression.popAction()));
	            }
	            var special = this._performOnSimpleChain(simpleExpression);
	            if (special)
	                return special;
	        }
	        return simpleExpression.performAction(this, true);
	    };
	    Action.prototype.getExpressions = function () {
	        return this.expression ? [this.expression] : [];
	    };
	    Action.prototype.getFreeReferences = function () {
	        var freeReferences = [];
	        this.getExpressions().forEach(function (ex) {
	            freeReferences = freeReferences.concat(ex.getFreeReferences());
	        });
	        return deduplicateSort(freeReferences);
	    };
	    Action.prototype._everyHelper = function (iter, thisArg, indexer, depth, nestDiff) {
	        var nestDiffNext = nestDiff + Number(this.isNester());
	        return this.getExpressions().every(function (ex) { return ex._everyHelper(iter, thisArg, indexer, depth, nestDiffNext); });
	    };
	    Action.prototype.substitute = function (substitutionFn, thisArg) {
	        return this._substituteHelper(substitutionFn, thisArg, { index: 0 }, 0, 0);
	    };
	    Action.prototype._substituteHelper = function (substitutionFn, thisArg, indexer, depth, nestDiff) {
	        var expression = this.expression;
	        if (!expression)
	            return this;
	        var subExpression = expression._substituteHelper(substitutionFn, thisArg, indexer, depth, nestDiff + Number(this.isNester()));
	        if (expression === subExpression)
	            return this;
	        var value = this.valueOf();
	        value.simple = false;
	        value.expression = subExpression;
	        return Action.fromValue(value);
	    };
	    Action.prototype.canDistribute = function () {
	        return false;
	    };
	    Action.prototype.distribute = function (preEx) {
	        return null;
	    };
	    Action.prototype.changeExpression = function (newExpression) {
	        var expression = this.expression;
	        if (!expression || expression.equals(newExpression))
	            return this;
	        var value = this.valueOf();
	        value.expression = newExpression;
	        return Action.fromValue(value);
	    };
	    Action.prototype.isNester = function () {
	        return false;
	    };
	    Action.prototype.getLiteralValue = function () {
	        var expression = this.expression;
	        if (expression instanceof LiteralExpression) {
	            return expression.value;
	        }
	        return null;
	    };
	    Action.prototype.maxPossibleSplitValues = function () {
	        return Infinity;
	    };
	    Action.prototype.getUpgradedType = function (type) {
	        return this;
	    };
	    Action.prototype.needsEnvironment = function () {
	        return false;
	    };
	    Action.prototype.defineEnvironment = function (environment) {
	        return this;
	    };
	    Action.prototype.getTimezone = function () {
	        return Timezone.UTC;
	    };
	    Action.prototype.alignsWith = function (actions) {
	        return true;
	    };
	    Action.classMap = {};
	    return Action;
	}());
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};

	var AbsoluteAction = exports.AbsoluteAction = (function (_super) {
	    __extends(AbsoluteAction, _super);
	    function AbsoluteAction(parameters) {
	        _super.call(this, parameters, dummyObject);
	        this._ensureAction("absolute");
	        this._checkNoExpression();
	    }
	    AbsoluteAction.fromJS = function (parameters) {
	        return new AbsoluteAction(Action.jsToValue(parameters));
	    };
	    AbsoluteAction.prototype.getNecessaryInputTypes = function () {
	        return 'NUMBER';
	    };
	    AbsoluteAction.prototype.getOutputType = function (inputType) {
	        this._checkInputTypes(inputType);
	        return 'NUMBER';
	    };
	    AbsoluteAction.prototype._fillRefSubstitutions = function (typeContext, inputType) {
	        return inputType;
	    };
	    AbsoluteAction.prototype._getFnHelper = function (inputType, inputFn) {
	        return function (d, c) {
	            var inV = inputFn(d, c);
	            if (inV === null)
	                return null;
	            return Math.abs(inV);
	        };
	    };
	    AbsoluteAction.prototype._foldWithPrevAction = function (prevAction) {
	        if (prevAction.equals(this)) {
	            return this;
	        }
	        return null;
	    };
	    AbsoluteAction.prototype._getJSHelper = function (inputType, inputJS) {
	        return "Math.abs(" + inputJS + ")";
	    };
	    AbsoluteAction.prototype._getSQLHelper = function (inputType, dialect, inputSQL, expressionSQL) {
	        return "ABS(" + inputSQL + ")";
	    };
	    return AbsoluteAction;
	}(Action));
	Action.register(AbsoluteAction);
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};


	var AddAction = exports.AddAction = (function (_super) {
	    __extends(AddAction, _super);
	    function AddAction(parameters) {
	        _super.call(this, parameters, dummyObject);
	        this._ensureAction("add");
	        this._checkExpressionTypes('NUMBER');
	    }
	    AddAction.fromJS = function (parameters) {
	        return new AddAction(Action.jsToValue(parameters));
	    };
	    AddAction.prototype.getNecessaryInputTypes = function () {
	        return 'NUMBER';
	    };
	    AddAction.prototype.getOutputType = function (inputType) {
	        this._checkInputTypes(inputType);
	        return 'NUMBER';
	    };
	    AddAction.prototype._fillRefSubstitutions = function (typeContext, inputType, indexer, alterations) {
	        this.expression._fillRefSubstitutions(typeContext, indexer, alterations);
	        return inputType;
	    };
	    AddAction.prototype._getFnHelper = function (inputType, inputFn, expressionFn) {
	        return function (d, c) {
	            return (inputFn(d, c) || 0) + (expressionFn(d, c) || 0);
	        };
	    };
	    AddAction.prototype._getJSHelper = function (inputType, inputJS, expressionJS) {
	        return "(" + inputJS + "+" + expressionJS + ")";
	    };
	    AddAction.prototype._getSQLHelper = function (inputType, dialect, inputSQL, expressionSQL) {
	        return "(" + inputSQL + "+" + expressionSQL + ")";
	    };
	    AddAction.prototype._removeAction = function () {
	        return this.expression.equals(Expression.ZERO);
	    };
	    AddAction.prototype._distributeAction = function () {
	        return this.expression.actionize(this.action);
	    };
	    AddAction.prototype._performOnLiteral = function (literalExpression) {
	        if (literalExpression.equals(Expression.ZERO)) {
	            return this.expression;
	        }
	        return null;
	    };
	    AddAction.prototype._foldWithPrevAction = function (prevAction) {
	        if (prevAction instanceof AddAction) {
	            var prevValue = prevAction.expression.getLiteralValue();
	            var myValue = this.expression.getLiteralValue();
	            if (typeof prevValue === 'number' && typeof myValue === 'number') {
	                return new AddAction({
	                    expression: r(prevValue + myValue)
	                });
	            }
	        }
	        return null;
	    };
	    return AddAction;
	}(Action));
	Action.register(AddAction);
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};




	var IS_OR_IN_ACTION = {
	    'is': true,
	    'in': true
	};
	function mergeAnd(ex1, ex2) {
	    if (!ex1.isOp('chain') ||
	        !ex2.isOp('chain') ||
	        !ex1.expression.isOp('ref') ||
	        !ex2.expression.isOp('ref') ||
	        !arraysEqual(ex1.getFreeReferences(), ex2.getFreeReferences()))
	        return null;
	    var ex1Actions = ex1.actions;
	    var ex2Actions = ex2.actions;
	    if (ex1Actions.length !== 1 || ex2Actions.length !== 1)
	        return null;
	    var ex1Action = ex1Actions[0];
	    var ex2Action = ex2Actions[0];
	    if (!IS_OR_IN_ACTION[ex1Action.action] || !IS_OR_IN_ACTION[ex2Action.action])
	        return null;
	    var firstActionExpression1 = ex1Action.expression;
	    var firstActionExpression2 = ex2Action.expression;
	    if (!firstActionExpression1 || !firstActionExpression2 || !firstActionExpression1.isOp('literal') || !firstActionExpression2.isOp('literal'))
	        return null;
	    var intersect = Set.generalIntersect(firstActionExpression1.getLiteralValue(), firstActionExpression2.getLiteralValue());
	    if (intersect === null)
	        return null;
	    return Expression.inOrIs(ex1.expression, intersect);
	}
	var AndAction = exports.AndAction = (function (_super) {
	    __extends(AndAction, _super);
	    function AndAction(parameters) {
	        _super.call(this, parameters, dummyObject);
	        this._ensureAction("and");
	    }
	    AndAction.fromJS = function (parameters) {
	        return new AndAction(Action.jsToValue(parameters));
	    };
	    AndAction.prototype.getNecessaryInputTypes = function () {
	        return 'BOOLEAN';
	    };
	    AndAction.prototype.getOutputType = function (inputType) {
	        this._checkInputTypes(inputType);
	        return 'BOOLEAN';
	    };
	    AndAction.prototype._fillRefSubstitutions = function (typeContext, inputType, indexer, alterations) {
	        this.expression._fillRefSubstitutions(typeContext, indexer, alterations);
	        return inputType;
	    };
	    AndAction.prototype._getFnHelper = function (inputType, inputFn, expressionFn) {
	        return function (d, c) { return inputFn(d, c) && expressionFn(d, c); };
	    };
	    AndAction.prototype._getJSHelper = function (inputType, inputJS, expressionJS) {
	        return "(" + inputJS + "&&" + expressionJS + ")";
	    };
	    AndAction.prototype._getSQLHelper = function (inputType, dialect, inputSQL, expressionSQL) {
	        return "(" + inputSQL + " AND " + expressionSQL + ")";
	    };
	    AndAction.prototype._removeAction = function () {
	        return this.expression.equals(Expression.TRUE);
	    };
	    AndAction.prototype._nukeExpression = function () {
	        if (this.expression.equals(Expression.FALSE))
	            return Expression.FALSE;
	        return null;
	    };
	    AndAction.prototype._distributeAction = function () {
	        return this.expression.actionize(this.action);
	    };
	    AndAction.prototype._performOnLiteral = function (literalExpression) {
	        if (literalExpression.equals(Expression.TRUE)) {
	            return this.expression;
	        }
	        if (literalExpression.equals(Expression.FALSE)) {
	            return Expression.FALSE;
	        }
	        return null;
	    };
	    AndAction.prototype._performOnSimpleChain = function (chainExpression) {
	        var expression = this.expression;
	        var andExpressions = chainExpression.getExpressionPattern('and');
	        if (andExpressions) {
	            for (var i = 0; i < andExpressions.length; i++) {
	                var andExpression = andExpressions[i];
	                var mergedExpression = mergeAnd(andExpression, expression);
	                if (mergedExpression) {
	                    andExpressions[i] = mergedExpression;
	                    return Expression.and(andExpressions).simplify();
	                }
	            }
	        }
	        return mergeAnd(chainExpression, expression);
	    };
	    return AndAction;
	}(Action));
	Action.register(AndAction);
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};




	var ApplyAction = exports.ApplyAction = (function (_super) {
	    __extends(ApplyAction, _super);
	    function ApplyAction(parameters) {
	        if (parameters === void 0) { parameters = {}; }
	        _super.call(this, parameters, dummyObject);
	        this.name = parameters.name;
	        this._ensureAction("apply");
	    }
	    ApplyAction.fromJS = function (parameters) {
	        var value = Action.jsToValue(parameters);
	        value.name = parameters.name;
	        return new ApplyAction(value);
	    };
	    ApplyAction.prototype.valueOf = function () {
	        var value = _super.prototype.valueOf.call(this);
	        value.name = this.name;
	        return value;
	    };
	    ApplyAction.prototype.toJS = function () {
	        var js = _super.prototype.toJS.call(this);
	        js.name = this.name;
	        return js;
	    };
	    ApplyAction.prototype.getNecessaryInputTypes = function () {
	        return 'DATASET';
	    };
	    ApplyAction.prototype.getOutputType = function (inputType) {
	        this._checkInputTypes(inputType);
	        return 'DATASET';
	    };
	    ApplyAction.prototype._fillRefSubstitutions = function (typeContext, inputType, indexer, alterations) {
	        typeContext.datasetType[this.name] = this.expression._fillRefSubstitutions(typeContext, indexer, alterations);
	        return typeContext;
	    };
	    ApplyAction.prototype._toStringParameters = function (expressionString) {
	        var name = this.name;
	        if (!RefExpression.SIMPLE_NAME_REGEXP.test(name))
	            name = JSON.stringify(name);
	        return [name, expressionString];
	    };
	    ApplyAction.prototype.equals = function (other) {
	        return _super.prototype.equals.call(this, other) &&
	            this.name === other.name;
	    };
	    ApplyAction.prototype._getFnHelper = function (inputType, inputFn, expressionFn) {
	        var name = this.name;
	        var type = this.expression.type;
	        return function (d, c) {
	            var inV = inputFn(d, c);
	            return inV ? inV.apply(name, expressionFn, type, foldContext(d, c)) : null;
	        };
	    };
	    ApplyAction.prototype._getSQLHelper = function (inputType, dialect, inputSQL, expressionSQL) {
	        return expressionSQL + " AS " + dialect.escapeName(this.name);
	    };
	    ApplyAction.prototype.isSimpleAggregate = function () {
	        var expression = this.expression;
	        if (expression instanceof ChainExpression) {
	            var actions = expression.actions;
	            return actions.length === 1 && actions[0].isAggregate();
	        }
	        return false;
	    };
	    ApplyAction.prototype.isNester = function () {
	        return true;
	    };
	    ApplyAction.prototype._removeAction = function () {
	        var _a = this, name = _a.name, expression = _a.expression;
	        if (expression instanceof RefExpression) {
	            return expression.name === name && expression.nest === 0;
	        }
	        return false;
	    };
	    ApplyAction.prototype._putBeforeLastAction = function (lastAction) {
	        if (this.isSimpleAggregate() &&
	            lastAction instanceof ApplyAction &&
	            !lastAction.isSimpleAggregate() &&
	            this.expression.getFreeReferences().indexOf(lastAction.name) === -1) {
	            return this;
	        }
	        return null;
	    };
	    return ApplyAction;
	}(Action));
	Action.register(ApplyAction);
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};

	var AverageAction = exports.AverageAction = (function (_super) {
	    __extends(AverageAction, _super);
	    function AverageAction(parameters) {
	        _super.call(this, parameters, dummyObject);
	        this._ensureAction("average");
	        this._checkExpressionTypes('NUMBER');
	    }
	    AverageAction.fromJS = function (parameters) {
	        return new AverageAction(Action.jsToValue(parameters));
	    };
	    AverageAction.prototype.getNecessaryInputTypes = function () {
	        return 'DATASET';
	    };
	    AverageAction.prototype.getOutputType = function (inputType) {
	        this._checkInputTypes(inputType);
	        return 'NUMBER';
	    };
	    AverageAction.prototype._fillRefSubstitutions = function (typeContext, inputType, indexer, alterations) {
	        this.expression._fillRefSubstitutions(typeContext, indexer, alterations);
	        return {
	            type: 'NUMBER',
	        };
	    };
	    AverageAction.prototype._getSQLHelper = function (inputType, dialect, inputSQL, expressionSQL) {
	        return "AVG(" + dialect.aggregateFilterIfNeeded(inputSQL, expressionSQL) + ")";
	    };
	    AverageAction.prototype.isAggregate = function () {
	        return true;
	    };
	    AverageAction.prototype.isNester = function () {
	        return true;
	    };
	    return AverageAction;
	}(Action));
	Action.register(AverageAction);
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};



	var CardinalityAction = exports.CardinalityAction = (function (_super) {
	    __extends(CardinalityAction, _super);
	    function CardinalityAction(parameters) {
	        _super.call(this, parameters, dummyObject);
	        this._ensureAction("cardinality");
	        this._checkNoExpression();
	    }
	    CardinalityAction.fromJS = function (parameters) {
	        return new CardinalityAction(Action.jsToValue(parameters));
	    };
	    CardinalityAction.prototype.getNecessaryInputTypes = function () {
	        return getAllSetTypes();
	    };
	    CardinalityAction.prototype.getOutputType = function (inputType) {
	        this._checkInputTypes(inputType);
	        return 'NUMBER';
	    };
	    CardinalityAction.prototype._fillRefSubstitutions = function (typeContext, inputType) {
	        return inputType;
	    };
	    CardinalityAction.prototype._getFnHelper = function (inputType, inputFn) {
	        return function (d, c) {
	            var inV = inputFn(d, c);
	            if (inV === null)
	                return null;
	            if (Array.isArray(inV))
	                return inV.length;
	            return inV.cardinality();
	        };
	    };
	    CardinalityAction.prototype._getJSHelper = function (inputType, inputJS) {
	        return Expression.jsNullSafetyUnary(inputJS, function (input) { return (input + ".length"); });
	    };
	    CardinalityAction.prototype._getSQLHelper = function (inputType, dialect, inputSQL, expressionSQL) {
	        return "cardinality(" + inputSQL + ")";
	    };
	    return CardinalityAction;
	}(Action));
	Action.register(CardinalityAction);
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};


	var CAST_TYPE_TO_FN = {
	    TIME: {
	        NUMBER: function (n) { return new Date(n); }
	    },
	    NUMBER: {
	        TIME: function (n) { return Date.parse(n.toString()); },
	        UNIVERSAL: function (s) { return Number(s); }
	    },
	    STRING: {
	        UNIVERSAL: function (v) { return '' + v; }
	    }
	};
	var CAST_TYPE_TO_JS = {
	    TIME: {
	        NUMBER: function (inputJS) { return ("new Date(" + inputJS + ")"); }
	    },
	    NUMBER: {
	        UNIVERSAL: function (s) { return ("+(" + s + ")"); }
	    },
	    STRING: {
	        UNIVERSAL: function (inputJS) { return ("('' + " + inputJS + ")"); }
	    }
	};
	var CastAction = exports.CastAction = (function (_super) {
	    __extends(CastAction, _super);
	    function CastAction(parameters) {
	        _super.call(this, parameters, dummyObject);
	        this.outputType = parameters.outputType;
	        this._ensureAction("cast");
	        if (typeof this.outputType !== 'string') {
	            throw new Error("`outputType` must be a string");
	        }
	    }
	    CastAction.fromJS = function (parameters) {
	        var value = Action.jsToValue(parameters);
	        var outputType = parameters.outputType;
	        if (!outputType && hasOwnProperty(parameters, 'castType')) {
	            outputType = parameters.castType;
	        }
	        value.outputType = outputType;
	        return new CastAction(value);
	    };
	    CastAction.prototype.valueOf = function () {
	        var value = _super.prototype.valueOf.call(this);
	        value.outputType = this.outputType;
	        return value;
	    };
	    CastAction.prototype.toJS = function () {
	        var js = _super.prototype.toJS.call(this);
	        js.outputType = this.outputType;
	        return js;
	    };
	    CastAction.prototype.equals = function (other) {
	        return _super.prototype.equals.call(this, other) &&
	            this.outputType === other.outputType;
	    };
	    CastAction.prototype._toStringParameters = function (expressionString) {
	        return [this.outputType];
	    };
	    CastAction.prototype.getNecessaryInputTypes = function () {
	        var castType = this.outputType;
	        return Object.keys(CAST_TYPE_TO_FN[castType]);
	    };
	    CastAction.prototype.getOutputType = function (inputType) {
	        return this.outputType;
	    };
	    CastAction.prototype._fillRefSubstitutions = function () {
	        var outputType = this.outputType;
	        return {
	            type: outputType
	        };
	    };
	    CastAction.prototype._removeAction = function (inputType) {
	        return this.outputType === inputType;
	    };
	    CastAction.prototype._foldWithPrevAction = function (prevAction) {
	        if (prevAction.equals(this)) {
	            return this;
	        }
	        return null;
	    };
	    CastAction.prototype._getFnHelper = function (inputType, inputFn) {
	        var outputType = this.outputType;
	        var caster = CAST_TYPE_TO_FN[outputType];
	        var castFn = caster[inputType] || caster['UNIVERSAL'];
	        if (!castFn)
	            throw new Error("unsupported cast from " + inputType + " to '" + outputType + "'");
	        return function (d, c) {
	            var inV = inputFn(d, c);
	            if (!inV)
	                return null;
	            return castFn(inV);
	        };
	    };
	    CastAction.prototype._getJSHelper = function (inputType, inputJS) {
	        var outputType = this.outputType;
	        var castJS = CAST_TYPE_TO_JS[outputType];
	        if (!castJS)
	            throw new Error("unsupported cast type in getJS '" + outputType + "'");
	        var js = castJS[inputType] || castJS['UNIVERSAL'];
	        if (!js)
	            throw new Error("unsupported combo in getJS of cast action: " + inputType + " to " + outputType);
	        return js(inputJS);
	    };
	    CastAction.prototype._getSQLHelper = function (inputType, dialect, inputSQL, expressionSQL) {
	        return dialect.castExpression(inputType, inputSQL, this.outputType);
	    };
	    return CastAction;
	}(Action));
	Action.register(CastAction);
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};


	var ConcatAction = exports.ConcatAction = (function (_super) {
	    __extends(ConcatAction, _super);
	    function ConcatAction(parameters) {
	        _super.call(this, parameters, dummyObject);
	        this._ensureAction("concat");
	        this._checkExpressionTypes('STRING');
	    }
	    ConcatAction.fromJS = function (parameters) {
	        return new ConcatAction(Action.jsToValue(parameters));
	    };
	    ConcatAction.prototype.getNecessaryInputTypes = function () {
	        return this._stringTransformInputType;
	    };
	    ConcatAction.prototype.getOutputType = function (inputType) {
	        return this._stringTransformOutputType(inputType);
	    };
	    ConcatAction.prototype._fillRefSubstitutions = function (typeContext, inputType, indexer, alterations) {
	        this.expression._fillRefSubstitutions(typeContext, indexer, alterations);
	        return inputType;
	    };
	    ConcatAction.prototype._getFnHelper = function (inputType, inputFn, expressionFn) {
	        return function (d, c) {
	            var inV = inputFn(d, c);
	            if (inV === null)
	                return null;
	            var exV = expressionFn(d, c);
	            if (exV === null)
	                return null;
	            return '' + inV + exV;
	        };
	    };
	    ConcatAction.prototype._getJSHelper = function (inputType, inputJS, expressionJS) {
	        return Expression.jsNullSafetyBinary(inputJS, expressionJS, function (a, b) { return a + "+" + b; }, inputJS[0] === '"', expressionJS[0] === '"');
	    };
	    ConcatAction.prototype._getSQLHelper = function (inputType, dialect, inputSQL, expressionSQL) {
	        return dialect.concatExpression(inputSQL, expressionSQL);
	    };
	    ConcatAction.prototype._removeAction = function () {
	        return this.expression.equals(Expression.EMPTY_STRING);
	    };
	    ConcatAction.prototype._performOnLiteral = function (literalExpression) {
	        if (literalExpression.equals(Expression.EMPTY_STRING)) {
	            return this.expression;
	        }
	        return null;
	    };
	    ConcatAction.prototype._foldWithPrevAction = function (prevAction) {
	        if (prevAction instanceof ConcatAction) {
	            var prevValue = prevAction.expression.getLiteralValue();
	            var myValue = this.expression.getLiteralValue();
	            if (typeof prevValue === 'string' && typeof myValue === 'string') {
	                return new ConcatAction({
	                    expression: r(prevValue + myValue)
	                });
	            }
	        }
	        return null;
	    };
	    return ConcatAction;
	}(Action));
	Action.register(ConcatAction);
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};




	var ContainsAction = exports.ContainsAction = (function (_super) {
	    __extends(ContainsAction, _super);
	    function ContainsAction(parameters) {
	        _super.call(this, parameters, dummyObject);
	        var compare = parameters.compare;
	        if (!compare) {
	            compare = ContainsAction.NORMAL;
	        }
	        else if (compare !== ContainsAction.NORMAL && compare !== ContainsAction.IGNORE_CASE) {
	            throw new Error("compare must be '" + ContainsAction.NORMAL + "' or '" + ContainsAction.IGNORE_CASE + "'");
	        }
	        this.compare = compare;
	        this._ensureAction("contains");
	        this._checkExpressionTypes('STRING');
	    }
	    ContainsAction.fromJS = function (parameters) {
	        var value = Action.jsToValue(parameters);
	        value.compare = parameters.compare;
	        return new ContainsAction(value);
	    };
	    ContainsAction.prototype.valueOf = function () {
	        var value = _super.prototype.valueOf.call(this);
	        value.compare = this.compare;
	        return value;
	    };
	    ContainsAction.prototype.toJS = function () {
	        var js = _super.prototype.toJS.call(this);
	        js.compare = this.compare;
	        return js;
	    };
	    ContainsAction.prototype.equals = function (other) {
	        return _super.prototype.equals.call(this, other) &&
	            this.compare === other.compare;
	    };
	    ContainsAction.prototype._toStringParameters = function (expressionString) {
	        return [expressionString, this.compare];
	    };
	    ContainsAction.prototype.getNecessaryInputTypes = function () {
	        return ['STRING', 'SET/STRING'];
	    };
	    ContainsAction.prototype.getOutputType = function (inputType) {
	        this._checkInputTypes(inputType);
	        return 'BOOLEAN';
	    };
	    ContainsAction.prototype._fillRefSubstitutions = function (typeContext, inputType, indexer, alterations) {
	        this.expression._fillRefSubstitutions(typeContext, indexer, alterations);
	        return inputType;
	    };
	    ContainsAction.prototype._getFnHelper = function (inputType, inputFn, expressionFn) {
	        if (this.compare === ContainsAction.NORMAL) {
	            return function (d, c) {
	                return String(inputFn(d, c)).indexOf(expressionFn(d, c)) > -1;
	            };
	        }
	        else {
	            return function (d, c) {
	                return String(inputFn(d, c)).toLowerCase().indexOf(String(expressionFn(d, c)).toLowerCase()) > -1;
	            };
	        }
	    };
	    ContainsAction.prototype._getJSHelper = function (inputType, inputJS, expressionJS) {
	        var combine;
	        if (this.compare === ContainsAction.NORMAL) {
	            combine = function (lhs, rhs) { return ("(''+" + lhs + ").indexOf(" + rhs + ")>-1"); };
	        }
	        else {
	            combine = function (lhs, rhs) { return ("(''+" + lhs + ").toLowerCase().indexOf((''+" + rhs + ").toLowerCase())>-1"); };
	        }
	        return Expression.jsNullSafetyBinary(inputJS, expressionJS, combine, inputJS[0] === '"', expressionJS[0] === '"');
	    };
	    ContainsAction.prototype._getSQLHelper = function (inputType, dialect, inputSQL, expressionSQL) {
	        if (this.compare === ContainsAction.IGNORE_CASE) {
	            expressionSQL = "LOWER(" + expressionSQL + ")";
	            inputSQL = "LOWER(" + inputSQL + ")";
	        }
	        return dialect.containsExpression(expressionSQL, inputSQL);
	    };
	    ContainsAction.prototype._performOnSimpleChain = function (chainExpression) {
	        var expression = this.expression;
	        if (expression instanceof ChainExpression) {
	            var precedingAction = chainExpression.lastAction();
	            var succeedingAction = expression.lastAction();
	            if (precedingAction instanceof TransformCaseAction && succeedingAction instanceof TransformCaseAction) {
	                if (precedingAction.transformType === succeedingAction.transformType) {
	                    var precedingExpression = chainExpression.expression;
	                    return precedingExpression.contains(expression.expression, ContainsAction.IGNORE_CASE).simplify();
	                }
	            }
	        }
	        return null;
	    };
	    ContainsAction.NORMAL = 'normal';
	    ContainsAction.IGNORE_CASE = 'ignoreCase';
	    return ContainsAction;
	}(Action));
	Action.register(ContainsAction);
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};

	var CountAction = exports.CountAction = (function (_super) {
	    __extends(CountAction, _super);
	    function CountAction(parameters) {
	        _super.call(this, parameters, dummyObject);
	        this._ensureAction("count");
	        this._checkNoExpression();
	    }
	    CountAction.fromJS = function (parameters) {
	        return new CountAction(Action.jsToValue(parameters));
	    };
	    CountAction.prototype.getNecessaryInputTypes = function () {
	        return 'DATASET';
	    };
	    CountAction.prototype.getOutputType = function (inputType) {
	        this._checkInputTypes(inputType);
	        return 'NUMBER';
	    };
	    CountAction.prototype._fillRefSubstitutions = function () {
	        return {
	            type: 'NUMBER',
	        };
	    };
	    CountAction.prototype.getFn = function (inputType, inputFn) {
	        return function (d, c) {
	            var inV = inputFn(d, c);
	            return inV ? inV.count() : 0;
	        };
	    };
	    CountAction.prototype._getSQLHelper = function (inputType, dialect, inputSQL, expressionSQL) {
	        return inputSQL.indexOf(' WHERE ') === -1 ? "COUNT(*)" : "SUM(" + dialect.aggregateFilterIfNeeded(inputSQL, '1') + ")";
	    };
	    CountAction.prototype.isAggregate = function () {
	        return true;
	    };
	    return CountAction;
	}(Action));
	Action.register(CountAction);
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};

	var CountDistinctAction = exports.CountDistinctAction = (function (_super) {
	    __extends(CountDistinctAction, _super);
	    function CountDistinctAction(parameters) {
	        _super.call(this, parameters, dummyObject);
	        this._ensureAction("countDistinct");
	    }
	    CountDistinctAction.fromJS = function (parameters) {
	        return new CountDistinctAction(Action.jsToValue(parameters));
	    };
	    CountDistinctAction.prototype.getNecessaryInputTypes = function () {
	        return 'DATASET';
	    };
	    CountDistinctAction.prototype.getOutputType = function (inputType) {
	        this._checkInputTypes(inputType);
	        return 'NUMBER';
	    };
	    CountDistinctAction.prototype._fillRefSubstitutions = function (typeContext, inputType, indexer, alterations) {
	        this.expression._fillRefSubstitutions(typeContext, indexer, alterations);
	        return {
	            type: 'NUMBER',
	        };
	    };
	    CountDistinctAction.prototype._getSQLHelper = function (inputType, dialect, inputSQL, expressionSQL) {
	        return "COUNT(DISTINCT " + dialect.aggregateFilterIfNeeded(inputSQL, expressionSQL, 'NULL') + ")";
	    };
	    CountDistinctAction.prototype.isAggregate = function () {
	        return true;
	    };
	    CountDistinctAction.prototype.isNester = function () {
	        return true;
	    };
	    return CountDistinctAction;
	}(Action));
	Action.register(CountDistinctAction);
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};

	var CustomAggregateAction = exports.CustomAggregateAction = (function (_super) {
	    __extends(CustomAggregateAction, _super);
	    function CustomAggregateAction(parameters) {
	        _super.call(this, parameters, dummyObject);
	        this.custom = parameters.custom;
	        this._ensureAction("customAggregate");
	    }
	    CustomAggregateAction.fromJS = function (parameters) {
	        var value = Action.jsToValue(parameters);
	        value.custom = parameters.custom;
	        if (value.action === 'custom')
	            value.action = 'customAggregate';
	        return new CustomAggregateAction(value);
	    };
	    CustomAggregateAction.prototype.valueOf = function () {
	        var value = _super.prototype.valueOf.call(this);
	        value.custom = this.custom;
	        return value;
	    };
	    CustomAggregateAction.prototype.toJS = function () {
	        var js = _super.prototype.toJS.call(this);
	        js.custom = this.custom;
	        return js;
	    };
	    CustomAggregateAction.prototype.equals = function (other) {
	        return _super.prototype.equals.call(this, other) &&
	            this.custom === other.custom;
	    };
	    CustomAggregateAction.prototype._toStringParameters = function (expressionString) {
	        return [this.custom];
	    };
	    CustomAggregateAction.prototype.getNecessaryInputTypes = function () {
	        return 'DATASET';
	    };
	    CustomAggregateAction.prototype.getOutputType = function (inputType) {
	        this._checkInputTypes(inputType);
	        return 'NUMBER';
	    };
	    CustomAggregateAction.prototype._fillRefSubstitutions = function (typeContext, inputType, indexer, alterations) {
	        return {
	            type: 'NUMBER',
	        };
	    };
	    CustomAggregateAction.prototype.getFn = function (inputType, inputFn) {
	        throw new Error('can not getFn on custom action');
	    };
	    CustomAggregateAction.prototype._getSQLHelper = function (inputType, dialect, inputSQL, expressionSQL) {
	        throw new Error('custom action not implemented');
	    };
	    CustomAggregateAction.prototype.isAggregate = function () {
	        return true;
	    };
	    return CustomAggregateAction;
	}(Action));
	Action.register(CustomAggregateAction);
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};

	var CustomTransformAction = exports.CustomTransformAction = (function (_super) {
	    __extends(CustomTransformAction, _super);
	    function CustomTransformAction(parameters) {
	        _super.call(this, parameters, dummyObject);
	        this.custom = parameters.custom;
	        if (parameters.outputType)
	            this.outputType = parameters.outputType;
	        this._ensureAction("customTransform");
	    }
	    CustomTransformAction.fromJS = function (parameters) {
	        var value = Action.jsToValue(parameters);
	        value.custom = parameters.custom;
	        if (parameters.outputType)
	            value.outputType = parameters.outputType;
	        return new CustomTransformAction(value);
	    };
	    CustomTransformAction.prototype.getNecessaryInputTypes = function () {
	        return ['NULL', 'BOOLEAN', 'NUMBER', 'TIME', 'STRING'];
	    };
	    CustomTransformAction.prototype.valueOf = function () {
	        var value = _super.prototype.valueOf.call(this);
	        value.custom = this.custom;
	        if (this.outputType)
	            value.outputType = this.outputType;
	        return value;
	    };
	    CustomTransformAction.prototype.toJS = function () {
	        var js = _super.prototype.toJS.call(this);
	        js.custom = this.custom;
	        if (this.outputType)
	            js.outputType = this.outputType;
	        return js;
	    };
	    CustomTransformAction.prototype.equals = function (other) {
	        return _super.prototype.equals.call(this, other) &&
	            this.custom === other.custom &&
	            this.outputType === other.outputType;
	    };
	    CustomTransformAction.prototype._toStringParameters = function (expressionString) {
	        var param = [(this.custom + " }")];
	        if (this.outputType)
	            param.push(this.outputType);
	        return param;
	    };
	    CustomTransformAction.prototype.getOutputType = function (inputType) {
	        this._checkInputTypes(inputType);
	        return this.outputType || inputType;
	    };
	    CustomTransformAction.prototype._fillRefSubstitutions = function (typeContext, inputType) {
	        return inputType;
	    };
	    CustomTransformAction.prototype.getFn = function (inputType, inputFn) {
	        throw new Error('can not getFn on custom transform action');
	    };
	    CustomTransformAction.prototype._getSQLHelper = function (inputType, dialect, inputSQL, expressionSQL) {
	        throw new Error("Custom transform not supported in SQL");
	    };
	    CustomTransformAction.prototype._getJSHelper = function (inputType, inputJS) {
	        throw new Error("Custom transform can't yet be expressed as JS");
	    };
	    return CustomTransformAction;
	}(Action));
	Action.register(CustomTransformAction);
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};


	var DivideAction = exports.DivideAction = (function (_super) {
	    __extends(DivideAction, _super);
	    function DivideAction(parameters) {
	        _super.call(this, parameters, dummyObject);
	        this._ensureAction("divide");
	        this._checkExpressionTypes('NUMBER');
	    }
	    DivideAction.fromJS = function (parameters) {
	        return new DivideAction(Action.jsToValue(parameters));
	    };
	    DivideAction.prototype.getNecessaryInputTypes = function () {
	        return 'NUMBER';
	    };
	    DivideAction.prototype.getOutputType = function (inputType) {
	        this._checkInputTypes(inputType);
	        return 'NUMBER';
	    };
	    DivideAction.prototype._fillRefSubstitutions = function (typeContext, inputType, indexer, alterations) {
	        this.expression._fillRefSubstitutions(typeContext, indexer, alterations);
	        return inputType;
	    };
	    DivideAction.prototype._getFnHelper = function (inputType, inputFn, expressionFn) {
	        return function (d, c) {
	            var v = (inputFn(d, c) || 0) / (expressionFn(d, c) || 0);
	            return isNaN(v) ? null : v;
	        };
	    };
	    DivideAction.prototype._getJSHelper = function (inputType, inputJS, expressionJS) {
	        return "(" + inputJS + "/" + expressionJS + ")";
	    };
	    DivideAction.prototype._getSQLHelper = function (inputType, dialect, inputSQL, expressionSQL) {
	        return "(" + inputSQL + "/" + expressionSQL + ")";
	    };
	    DivideAction.prototype._removeAction = function () {
	        return this.expression.equals(Expression.ONE);
	    };
	    return DivideAction;
	}(Action));
	Action.register(DivideAction);
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};

	var ExtractAction = exports.ExtractAction = (function (_super) {
	    __extends(ExtractAction, _super);
	    function ExtractAction(parameters) {
	        _super.call(this, parameters, dummyObject);
	        this.regexp = parameters.regexp;
	        this._ensureAction("extract");
	    }
	    ExtractAction.fromJS = function (parameters) {
	        var value = Action.jsToValue(parameters);
	        value.regexp = parameters.regexp;
	        return new ExtractAction(value);
	    };
	    ExtractAction.prototype.valueOf = function () {
	        var value = _super.prototype.valueOf.call(this);
	        value.regexp = this.regexp;
	        return value;
	    };
	    ExtractAction.prototype.toJS = function () {
	        var js = _super.prototype.toJS.call(this);
	        js.regexp = this.regexp;
	        return js;
	    };
	    ExtractAction.prototype.equals = function (other) {
	        return _super.prototype.equals.call(this, other) &&
	            this.regexp === other.regexp;
	    };
	    ExtractAction.prototype._toStringParameters = function (expressionString) {
	        return [this.regexp];
	    };
	    ExtractAction.prototype.getNecessaryInputTypes = function () {
	        return this._stringTransformInputType;
	    };
	    ExtractAction.prototype.getOutputType = function (inputType) {
	        return this._stringTransformOutputType(inputType);
	    };
	    ExtractAction.prototype._fillRefSubstitutions = function (typeContext, inputType, indexer, alterations) {
	        return inputType;
	    };
	    ExtractAction.prototype._getFnHelper = function (inputType, inputFn) {
	        var re = new RegExp(this.regexp);
	        return function (d, c) {
	            return (String(inputFn(d, c)).match(re) || [])[1] || null;
	        };
	    };
	    ExtractAction.prototype._getJSHelper = function (inputType, inputJS, expressionJS) {
	        return "((''+" + inputJS + ").match(/" + this.regexp + "/) || [])[1] || null";
	    };
	    ExtractAction.prototype._getSQLHelper = function (inputType, dialect, inputSQL, expressionSQL) {
	        return dialect.extractExpression(inputSQL, this.regexp);
	    };
	    return ExtractAction;
	}(Action));
	Action.register(ExtractAction);
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};


	var FallbackAction = exports.FallbackAction = (function (_super) {
	    __extends(FallbackAction, _super);
	    function FallbackAction(parameters) {
	        if (parameters === void 0) { parameters = {}; }
	        _super.call(this, parameters, dummyObject);
	        this._ensureAction("fallback");
	    }
	    FallbackAction.fromJS = function (parameters) {
	        return new FallbackAction(Action.jsToValue(parameters));
	    };
	    FallbackAction.prototype.getNecessaryInputTypes = function () {
	        return this.expression.type;
	    };
	    FallbackAction.prototype.getOutputType = function (inputType) {
	        var expressionType = this.expression.type;
	        if (expressionType && expressionType !== 'NULL')
	            this._checkInputTypes(inputType);
	        return expressionType;
	    };
	    FallbackAction.prototype._fillRefSubstitutions = function (typeContext, inputType, indexer, alterations) {
	        this.expression._fillRefSubstitutions(typeContext, indexer, alterations);
	        return inputType;
	    };
	    FallbackAction.prototype._getFnHelper = function (inputType, inputFn, expressionFn) {
	        return function (d, c) {
	            var val = inputFn(d, c);
	            if (val === null) {
	                return expressionFn(d, c);
	            }
	            return val;
	        };
	    };
	    FallbackAction.prototype._getJSHelper = function (inputType, inputJS, expressionJS) {
	        return "(_ = " + inputJS + ", (_ === null ? " + expressionJS + " : _))";
	    };
	    FallbackAction.prototype._getSQLHelper = function (inputType, dialect, inputSQL, expressionSQL) {
	        return "COALESCE(" + inputSQL + ", " + expressionSQL + ")";
	    };
	    FallbackAction.prototype._removeAction = function () {
	        return this.expression.equals(Expression.NULL);
	    };
	    return FallbackAction;
	}(Action));
	Action.register(FallbackAction);
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};






	var FilterAction = exports.FilterAction = (function (_super) {
	    __extends(FilterAction, _super);
	    function FilterAction(parameters) {
	        if (parameters === void 0) { parameters = {}; }
	        _super.call(this, parameters, dummyObject);
	        this._ensureAction("filter");
	        this._checkExpressionTypes('BOOLEAN');
	    }
	    FilterAction.fromJS = function (parameters) {
	        return new FilterAction({
	            action: parameters.action,
	            name: parameters.name,
	            expression: Expression.fromJS(parameters.expression)
	        });
	    };
	    FilterAction.prototype.getNecessaryInputTypes = function () {
	        return 'DATASET';
	    };
	    FilterAction.prototype.getOutputType = function (inputType) {
	        this._checkInputTypes(inputType);
	        return 'DATASET';
	    };
	    FilterAction.prototype._fillRefSubstitutions = function (typeContext, inputType, indexer, alterations) {
	        this.expression._fillRefSubstitutions(typeContext, indexer, alterations);
	        return inputType;
	    };
	    FilterAction.prototype._getSQLHelper = function (inputType, dialect, inputSQL, expressionSQL) {
	        return inputSQL + " WHERE " + expressionSQL;
	    };
	    FilterAction.prototype.isNester = function () {
	        return true;
	    };
	    FilterAction.prototype._foldWithPrevAction = function (prevAction) {
	        if (prevAction instanceof FilterAction) {
	            return new FilterAction({
	                expression: prevAction.expression.and(this.expression)
	            });
	        }
	        return null;
	    };
	    FilterAction.prototype._putBeforeLastAction = function (lastAction) {
	        if (lastAction instanceof ApplyAction) {
	            var freeReferences = this.getFreeReferences();
	            return freeReferences.indexOf(lastAction.name) === -1 ? this : null;
	        }
	        if (lastAction instanceof SplitAction) {
	            var splits = lastAction.splits;
	            return new FilterAction({
	                expression: this.expression.substitute(function (ex) {
	                    if (ex instanceof RefExpression && splits[ex.name])
	                        return splits[ex.name];
	                    return null;
	                })
	            });
	        }
	        if (lastAction instanceof SortAction) {
	            return this;
	        }
	        return null;
	    };
	    return FilterAction;
	}(Action));
	Action.register(FilterAction);
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};




	var GreaterThanAction = exports.GreaterThanAction = (function (_super) {
	    __extends(GreaterThanAction, _super);
	    function GreaterThanAction(parameters) {
	        _super.call(this, parameters, dummyObject);
	        this._ensureAction("greaterThan");
	        this._checkExpressionTypes('NUMBER', 'TIME', 'STRING');
	    }
	    GreaterThanAction.fromJS = function (parameters) {
	        return new GreaterThanAction(Action.jsToValue(parameters));
	    };
	    GreaterThanAction.prototype.getNecessaryInputTypes = function () {
	        return this.expression.type;
	    };
	    GreaterThanAction.prototype.getOutputType = function (inputType) {
	        var expressionType = this.expression.type;
	        if (expressionType)
	            this._checkInputTypes(inputType);
	        return 'BOOLEAN';
	    };
	    GreaterThanAction.prototype._fillRefSubstitutions = function (typeContext, inputType, indexer, alterations) {
	        this.expression._fillRefSubstitutions(typeContext, indexer, alterations);
	        return {
	            type: 'BOOLEAN'
	        };
	    };
	    GreaterThanAction.prototype.getUpgradedType = function (type) {
	        return this.changeExpression(this.expression.upgradeToType(type));
	    };
	    GreaterThanAction.prototype._getFnHelper = function (inputType, inputFn, expressionFn) {
	        return function (d, c) {
	            return inputFn(d, c) > expressionFn(d, c);
	        };
	    };
	    GreaterThanAction.prototype._getJSHelper = function (inputType, inputJS, expressionJS) {
	        return "(" + inputJS + ">" + expressionJS + ")";
	    };
	    GreaterThanAction.prototype._getSQLHelper = function (inputType, dialect, inputSQL, expressionSQL) {
	        return "(" + inputSQL + ">" + expressionSQL + ")";
	    };
	    GreaterThanAction.prototype._specialSimplify = function (simpleExpression) {
	        if (simpleExpression instanceof LiteralExpression) {
	            return new InAction({
	                expression: new LiteralExpression({
	                    value: Range.fromJS({ start: simpleExpression.value, end: null, bounds: '()' })
	                })
	            });
	        }
	        return null;
	    };
	    GreaterThanAction.prototype._performOnLiteral = function (literalExpression) {
	        return (new InAction({
	            expression: new LiteralExpression({
	                value: Range.fromJS({ start: null, end: literalExpression.value, bounds: '()' })
	            })
	        })).performOnSimple(this.expression);
	    };
	    return GreaterThanAction;
	}(Action));
	Action.register(GreaterThanAction);
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};




	var GreaterThanOrEqualAction = exports.GreaterThanOrEqualAction = (function (_super) {
	    __extends(GreaterThanOrEqualAction, _super);
	    function GreaterThanOrEqualAction(parameters) {
	        _super.call(this, parameters, dummyObject);
	        this._ensureAction("greaterThanOrEqual");
	        this._checkExpressionTypes('NUMBER', 'TIME', 'STRING');
	    }
	    GreaterThanOrEqualAction.fromJS = function (parameters) {
	        return new GreaterThanOrEqualAction(Action.jsToValue(parameters));
	    };
	    GreaterThanOrEqualAction.prototype.getNecessaryInputTypes = function () {
	        return this.expression.type;
	    };
	    GreaterThanOrEqualAction.prototype.getOutputType = function (inputType) {
	        var expressionType = this.expression.type;
	        if (expressionType)
	            this._checkInputTypes(inputType);
	        return 'BOOLEAN';
	    };
	    GreaterThanOrEqualAction.prototype._fillRefSubstitutions = function (typeContext, inputType, indexer, alterations) {
	        this.expression._fillRefSubstitutions(typeContext, indexer, alterations);
	        return {
	            type: 'BOOLEAN'
	        };
	    };
	    GreaterThanOrEqualAction.prototype.getUpgradedType = function (type) {
	        return this.changeExpression(this.expression.upgradeToType(type));
	    };
	    GreaterThanOrEqualAction.prototype._getFnHelper = function (inputType, inputFn, expressionFn) {
	        return function (d, c) {
	            return inputFn(d, c) >= expressionFn(d, c);
	        };
	    };
	    GreaterThanOrEqualAction.prototype._getJSHelper = function (inputType, inputJS, expressionJS) {
	        return "(" + inputJS + ">=" + expressionJS + ")";
	    };
	    GreaterThanOrEqualAction.prototype._getSQLHelper = function (inputType, dialect, inputSQL, expressionSQL) {
	        return "(" + inputSQL + ">=" + expressionSQL + ")";
	    };
	    GreaterThanOrEqualAction.prototype._specialSimplify = function (simpleExpression) {
	        if (simpleExpression instanceof LiteralExpression) {
	            return new InAction({
	                expression: new LiteralExpression({
	                    value: Range.fromJS({ start: simpleExpression.value, end: null, bounds: '[)' })
	                })
	            });
	        }
	        return null;
	    };
	    GreaterThanOrEqualAction.prototype._performOnLiteral = function (literalExpression) {
	        return (new InAction({
	            expression: new LiteralExpression({
	                value: Range.fromJS({ start: null, end: literalExpression.value, bounds: '(]' })
	            })
	        })).performOnSimple(this.expression);
	    };
	    return GreaterThanOrEqualAction;
	}(Action));
	Action.register(GreaterThanOrEqualAction);
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};







	var InAction = exports.InAction = (function (_super) {
	    __extends(InAction, _super);
	    function InAction(parameters) {
	        _super.call(this, parameters, dummyObject);
	        this._ensureAction("in");
	    }
	    InAction.fromJS = function (parameters) {
	        return new InAction(Action.jsToValue(parameters));
	    };
	    InAction.prototype.getNecessaryInputTypes = function () {
	        return this.expression.type;
	    };
	    InAction.prototype.getOutputType = function (inputType) {
	        var expression = this.expression;
	        if (inputType) {
	            if (!((!isSetType(inputType) && expression.canHaveType('SET')) ||
	                (inputType === 'NUMBER' && expression.canHaveType('NUMBER_RANGE')) ||
	                (inputType === 'STRING' && expression.canHaveType('STRING_RANGE')) ||
	                (inputType === 'TIME' && expression.canHaveType('TIME_RANGE')))) {
	                throw new TypeError("in action has a bad type combination " + inputType + " IN " + (expression.type || '*'));
	            }
	        }
	        else {
	            if (!(expression.canHaveType('NUMBER_RANGE') || expression.canHaveType('STRING_RANGE') || expression.canHaveType('TIME_RANGE') || expression.canHaveType('SET'))) {
	                throw new TypeError("in action has invalid expression type " + expression.type);
	            }
	        }
	        return 'BOOLEAN';
	    };
	    InAction.prototype._fillRefSubstitutions = function (typeContext, inputType, indexer, alterations) {
	        this.expression._fillRefSubstitutions(typeContext, indexer, alterations);
	        return {
	            type: 'BOOLEAN'
	        };
	    };
	    InAction.prototype.getUpgradedType = function (type) {
	        return this.changeExpression(this.expression.upgradeToType(type));
	    };
	    InAction.prototype._getFnHelper = function (inputType, inputFn, expressionFn) {
	        return function (d, c) {
	            var inV = inputFn(d, c);
	            var exV = expressionFn(d, c);
	            if (!exV)
	                return null;
	            return exV.contains(inV);
	        };
	    };
	    InAction.prototype._getJSHelper = function (inputType, inputJS, expressionJS) {
	        var expression = this.expression;
	        if (expression instanceof LiteralExpression) {
	            switch (expression.type) {
	                case 'NUMBER_RANGE':
	                case 'STRING_RANGE':
	                case 'TIME_RANGE':
	                    var range = expression.value;
	                    var r0 = range.start;
	                    var r1 = range.end;
	                    var bounds = range.bounds;
	                    var cmpStrings = [];
	                    if (r0 != null) {
	                        cmpStrings.push(JSON.stringify(r0) + " " + (bounds[0] === '(' ? '<' : '<=') + " _");
	                    }
	                    if (r1 != null) {
	                        cmpStrings.push("_ " + (bounds[1] === ')' ? '<' : '<=') + " " + JSON.stringify(r1));
	                    }
	                    return "(_=" + inputJS + ", " + cmpStrings.join(' && ') + ")";
	                case 'SET/STRING':
	                    var valueSet = expression.value;
	                    return JSON.stringify(valueSet.elements) + ".indexOf(" + inputJS + ")>-1";
	                default:
	                    throw new Error("can not convert " + this + " to JS function, unsupported type " + expression.type);
	            }
	        }
	        throw new Error("can not convert " + this + " to JS function");
	    };
	    InAction.prototype._getSQLHelper = function (inputType, dialect, inputSQL, expressionSQL) {
	        var expression = this.expression;
	        var expressionType = expression.type;
	        switch (expressionType) {
	            case 'NUMBER_RANGE':
	            case 'TIME_RANGE':
	                if (expression instanceof LiteralExpression) {
	                    var range = expression.value;
	                    return dialect.inExpression(inputSQL, dialect.numberOrTimeToSQL(range.start), dialect.numberOrTimeToSQL(range.end), range.bounds);
	                }
	                throw new Error("can not convert action to SQL " + this);
	            case 'STRING_RANGE':
	                if (expression instanceof LiteralExpression) {
	                    var stringRange = expression.value;
	                    return dialect.inExpression(inputSQL, dialect.escapeLiteral(stringRange.start), dialect.escapeLiteral(stringRange.end), stringRange.bounds);
	                }
	                throw new Error("can not convert action to SQL " + this);
	            case 'SET/STRING':
	            case 'SET/NUMBER':
	                return inputSQL + " IN " + expressionSQL;
	            case 'SET/NUMBER_RANGE':
	            case 'SET/TIME_RANGE':
	                if (expression instanceof LiteralExpression) {
	                    var setOfRange = expression.value;
	                    return setOfRange.elements.map(function (range) {
	                        return dialect.inExpression(inputSQL, dialect.numberOrTimeToSQL(range.start), dialect.numberOrTimeToSQL(range.end), range.bounds);
	                    }).join(' OR ');
	                }
	                throw new Error("can not convert action to SQL " + this);
	            default:
	                throw new Error("can not convert action to SQL " + this);
	        }
	    };
	    InAction.prototype._nukeExpression = function () {
	        var expression = this.expression;
	        if (expression instanceof LiteralExpression &&
	            isSetType(expression.type) &&
	            expression.value.empty())
	            return Expression.FALSE;
	        return null;
	    };
	    InAction.prototype._performOnSimpleWhatever = function (ex) {
	        var expression = this.expression;
	        var setValue = expression.getLiteralValue();
	        if (setValue && 'SET/' + ex.type === expression.type && setValue.size() === 1) {
	            return new IsAction({ expression: r(setValue.elements[0]) }).performOnSimple(ex);
	        }
	        if (ex instanceof ChainExpression) {
	            var indexOfAction = ex.getSingleAction('indexOf');
	            var range = expression.getLiteralValue();
	            if (indexOfAction && ((range.start < 0 && range.end === null) || (range.start === 0 && range.end === null && range.bounds[0] === '['))) {
	                return new ContainsAction({ expression: indexOfAction.expression }).performOnSimple(ex.expression);
	            }
	        }
	        return null;
	    };
	    InAction.prototype._performOnLiteral = function (literalExpression) {
	        return this._performOnSimpleWhatever(literalExpression);
	    };
	    InAction.prototype._performOnRef = function (refExpression) {
	        return this._performOnSimpleWhatever(refExpression);
	    };
	    InAction.prototype._performOnSimpleChain = function (chainExpression) {
	        return this._performOnSimpleWhatever(chainExpression);
	    };
	    return InAction;
	}(Action));
	Action.register(InAction);
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};









	var IsAction = exports.IsAction = (function (_super) {
	    __extends(IsAction, _super);
	    function IsAction(parameters) {
	        _super.call(this, parameters, dummyObject);
	        this._ensureAction("is");
	    }
	    IsAction.fromJS = function (parameters) {
	        return new IsAction(Action.jsToValue(parameters));
	    };
	    IsAction.prototype.getNecessaryInputTypes = function () {
	        return this.expression.type;
	    };
	    IsAction.prototype.getOutputType = function (inputType) {
	        var expressionType = this.expression.type;
	        if (expressionType && expressionType !== 'NULL')
	            this._checkInputTypes(inputType);
	        return 'BOOLEAN';
	    };
	    IsAction.prototype._fillRefSubstitutions = function (typeContext, inputType, indexer, alterations) {
	        this.expression._fillRefSubstitutions(typeContext, indexer, alterations);
	        return {
	            type: 'BOOLEAN'
	        };
	    };
	    IsAction.prototype._getFnHelper = function (inputType, inputFn, expressionFn) {
	        return function (d, c) {
	            return inputFn(d, c) === expressionFn(d, c);
	        };
	    };
	    IsAction.prototype._getJSHelper = function (inputType, inputJS, expressionJS) {
	        return "(" + inputJS + "===" + expressionJS + ")";
	    };
	    IsAction.prototype._getSQLHelper = function (inputType, dialect, inputSQL, expressionSQL) {
	        return dialect.isNotDistinctFromExpression(inputSQL, expressionSQL);
	    };
	    IsAction.prototype._nukeExpression = function (precedingExpression) {
	        var prevAction = precedingExpression.lastAction();
	        var literalValue = this.getLiteralValue();
	        if (prevAction instanceof TimeBucketAction && literalValue instanceof TimeRange && prevAction.timezone) {
	            if (literalValue.start !== null && TimeRange.timeBucket(literalValue.start, prevAction.duration, prevAction.timezone).equals(literalValue))
	                return null;
	            return Expression.FALSE;
	        }
	        if (prevAction instanceof NumberBucketAction && literalValue instanceof NumberRange) {
	            if (literalValue.start !== null && NumberRange.numberBucket(literalValue.start, prevAction.size, prevAction.offset).equals(literalValue))
	                return null;
	            return Expression.FALSE;
	        }
	        return null;
	    };
	    IsAction.prototype._foldWithPrevAction = function (prevAction) {
	        var literalValue = this.getLiteralValue();
	        if (prevAction instanceof TimeBucketAction && literalValue instanceof TimeRange && prevAction.timezone) {
	            if (!(literalValue.start !== null && TimeRange.timeBucket(literalValue.start, prevAction.duration, prevAction.timezone).equals(literalValue)))
	                return null;
	            return new InAction({ expression: this.expression });
	        }
	        if (prevAction instanceof NumberBucketAction && literalValue instanceof NumberRange) {
	            if (!(literalValue.start !== null && NumberRange.numberBucket(literalValue.start, prevAction.size, prevAction.offset).equals(literalValue)))
	                return null;
	            return new InAction({ expression: this.expression });
	        }
	        if (prevAction instanceof FallbackAction && prevAction.expression.isOp('literal') && this.expression.isOp('literal') && !prevAction.expression.equals(this.expression)) {
	            return this;
	        }
	        return null;
	    };
	    IsAction.prototype._performOnLiteral = function (literalExpression) {
	        var expression = this.expression;
	        if (!expression.isOp('literal')) {
	            return new IsAction({ expression: literalExpression }).performOnSimple(expression);
	        }
	        return null;
	    };
	    IsAction.prototype._performOnRef = function (refExpression) {
	        if (this.expression.equals(refExpression)) {
	            return Expression.TRUE;
	        }
	        return null;
	    };
	    IsAction.prototype._performOnSimpleChain = function (chainExpression) {
	        if (this.expression.equals(chainExpression)) {
	            return Expression.TRUE;
	        }
	        var prevAction = chainExpression.lastAction();
	        var literalValue = this.getLiteralValue();
	        if (prevAction instanceof IndexOfAction && literalValue === -1) {
	            var precedingExpression = chainExpression.expression;
	            var actionExpression = prevAction.expression;
	            return precedingExpression.contains(actionExpression).not().simplify();
	        }
	        return null;
	    };
	    return IsAction;
	}(Action));
	Action.register(IsAction);
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};


	var JoinAction = exports.JoinAction = (function (_super) {
	    __extends(JoinAction, _super);
	    function JoinAction(parameters) {
	        _super.call(this, parameters, dummyObject);
	        this._ensureAction("join");
	        if (!this.expression.canHaveType('DATASET'))
	            throw new TypeError('expression must be a DATASET');
	    }
	    JoinAction.fromJS = function (parameters) {
	        return new JoinAction(Action.jsToValue(parameters));
	    };
	    JoinAction.prototype.getNecessaryInputTypes = function () {
	        return 'DATASET';
	    };
	    JoinAction.prototype.getOutputType = function (inputType) {
	        this._checkInputTypes(inputType);
	        return 'DATASET';
	    };
	    JoinAction.prototype._fillRefSubstitutions = function (typeContext, inputType, indexer, alterations) {
	        var typeContextParent = typeContext.parent;
	        var expressionFullType = this.expression._fillRefSubstitutions(typeContextParent, indexer, alterations);
	        var inputDatasetType = typeContext.datasetType;
	        var expressionDatasetType = expressionFullType.datasetType;
	        var newDatasetType = Object.create(null);
	        for (var k in inputDatasetType) {
	            newDatasetType[k] = inputDatasetType[k];
	        }
	        for (var k in expressionDatasetType) {
	            var ft = expressionDatasetType[k];
	            if (hasOwnProperty(newDatasetType, k)) {
	                if (newDatasetType[k].type !== ft.type) {
	                    throw new Error("incompatible types of joins on " + k + " between " + newDatasetType[k].type + " and " + ft.type);
	                }
	            }
	            else {
	                newDatasetType[k] = ft;
	            }
	        }
	        return {
	            parent: typeContextParent,
	            type: 'DATASET',
	            datasetType: newDatasetType,
	            remote: typeContext.remote || expressionFullType.remote
	        };
	    };
	    JoinAction.prototype._getFnHelper = function (inputType, inputFn, expressionFn) {
	        return function (d, c) {
	            var inV = inputFn(d, c);
	            return inV ? inV.join(expressionFn(d, c)) : inV;
	        };
	    };
	    JoinAction.prototype._getSQLHelper = function (inputType, dialect, inputSQL, expressionSQL) {
	        throw new Error('not possible');
	    };
	    return JoinAction;
	}(Action));
	Action.register(JoinAction);
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};


	var LengthAction = exports.LengthAction = (function (_super) {
	    __extends(LengthAction, _super);
	    function LengthAction(parameters) {
	        _super.call(this, parameters, dummyObject);
	        this._ensureAction("length");
	        this._checkNoExpression();
	    }
	    LengthAction.fromJS = function (parameters) {
	        return new LengthAction(Action.jsToValue(parameters));
	    };
	    LengthAction.prototype.getNecessaryInputTypes = function () {
	        return 'STRING';
	    };
	    LengthAction.prototype.getOutputType = function (inputType) {
	        this._checkInputTypes(inputType);
	        return 'NUMBER';
	    };
	    LengthAction.prototype._fillRefSubstitutions = function (typeContext, inputType) {
	        return inputType;
	    };
	    LengthAction.prototype._getFnHelper = function (inputType, inputFn) {
	        return function (d, c) {
	            var inV = inputFn(d, c);
	            if (inV === null)
	                return null;
	            return inV.length;
	        };
	    };
	    LengthAction.prototype._getJSHelper = function (inputType, inputJS) {
	        return Expression.jsNullSafetyUnary(inputJS, function (input) { return (input + ".length"); });
	    };
	    LengthAction.prototype._getSQLHelper = function (inputType, dialect, inputSQL, expressionSQL) {
	        return dialect.lengthExpression(inputSQL);
	    };
	    return LengthAction;
	}(Action));
	Action.register(LengthAction);
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};




	var LessThanAction = exports.LessThanAction = (function (_super) {
	    __extends(LessThanAction, _super);
	    function LessThanAction(parameters) {
	        _super.call(this, parameters, dummyObject);
	        this._ensureAction("lessThan");
	        this._checkExpressionTypes('NUMBER', 'TIME', 'STRING');
	    }
	    LessThanAction.fromJS = function (parameters) {
	        return new LessThanAction(Action.jsToValue(parameters));
	    };
	    LessThanAction.prototype.getNecessaryInputTypes = function () {
	        return this.expression.type;
	    };
	    LessThanAction.prototype.getOutputType = function (inputType) {
	        var expressionType = this.expression.type;
	        if (expressionType)
	            this._checkInputTypes(inputType);
	        return 'BOOLEAN';
	    };
	    LessThanAction.prototype._fillRefSubstitutions = function (typeContext, inputType, indexer, alterations) {
	        this.expression._fillRefSubstitutions(typeContext, indexer, alterations);
	        return {
	            type: 'BOOLEAN'
	        };
	    };
	    LessThanAction.prototype.getUpgradedType = function (type) {
	        return this.changeExpression(this.expression.upgradeToType(type));
	    };
	    LessThanAction.prototype._getFnHelper = function (inputType, inputFn, expressionFn) {
	        return function (d, c) {
	            return inputFn(d, c) < expressionFn(d, c);
	        };
	    };
	    LessThanAction.prototype._getJSHelper = function (inputType, inputJS, expressionJS) {
	        return "(" + inputJS + "<" + expressionJS + ")";
	    };
	    LessThanAction.prototype._getSQLHelper = function (inputType, dialect, inputSQL, expressionSQL) {
	        return "(" + inputSQL + "<" + expressionSQL + ")";
	    };
	    LessThanAction.prototype._specialSimplify = function (simpleExpression) {
	        if (simpleExpression instanceof LiteralExpression) {
	            return new InAction({
	                expression: new LiteralExpression({
	                    value: Range.fromJS({ start: null, end: simpleExpression.value, bounds: '()' })
	                })
	            });
	        }
	        return null;
	    };
	    LessThanAction.prototype._performOnLiteral = function (literalExpression) {
	        return (new InAction({
	            expression: new LiteralExpression({
	                value: Range.fromJS({ start: literalExpression.value, end: null, bounds: '()' })
	            })
	        })).performOnSimple(this.expression);
	    };
	    return LessThanAction;
	}(Action));
	Action.register(LessThanAction);
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};




	var LessThanOrEqualAction = exports.LessThanOrEqualAction = (function (_super) {
	    __extends(LessThanOrEqualAction, _super);
	    function LessThanOrEqualAction(parameters) {
	        _super.call(this, parameters, dummyObject);
	        this._ensureAction("lessThanOrEqual");
	        this._checkExpressionTypes('NUMBER', 'TIME', 'STRING');
	    }
	    LessThanOrEqualAction.fromJS = function (parameters) {
	        return new LessThanOrEqualAction(Action.jsToValue(parameters));
	    };
	    LessThanOrEqualAction.prototype.getNecessaryInputTypes = function () {
	        return this.expression.type;
	    };
	    LessThanOrEqualAction.prototype.getOutputType = function (inputType) {
	        var expressionType = this.expression.type;
	        if (expressionType)
	            this._checkInputTypes(inputType);
	        return 'BOOLEAN';
	    };
	    LessThanOrEqualAction.prototype._fillRefSubstitutions = function (typeContext, inputType, indexer, alterations) {
	        this.expression._fillRefSubstitutions(typeContext, indexer, alterations);
	        return {
	            type: 'BOOLEAN'
	        };
	    };
	    LessThanOrEqualAction.prototype.getUpgradedType = function (type) {
	        return this.changeExpression(this.expression.upgradeToType(type));
	    };
	    LessThanOrEqualAction.prototype._getFnHelper = function (inputType, inputFn, expressionFn) {
	        return function (d, c) {
	            return inputFn(d, c) <= expressionFn(d, c);
	        };
	    };
	    LessThanOrEqualAction.prototype._getJSHelper = function (inputType, inputJS, expressionJS) {
	        return "(" + inputJS + "<=" + expressionJS + ")";
	    };
	    LessThanOrEqualAction.prototype._getSQLHelper = function (inputType, dialect, inputSQL, expressionSQL) {
	        return "(" + inputSQL + "<=" + expressionSQL + ")";
	    };
	    LessThanOrEqualAction.prototype._specialSimplify = function (simpleExpression) {
	        if (simpleExpression instanceof LiteralExpression) {
	            return new InAction({
	                expression: new LiteralExpression({
	                    value: Range.fromJS({ start: null, end: simpleExpression.value, bounds: '(]' })
	                })
	            });
	        }
	        return null;
	    };
	    LessThanOrEqualAction.prototype._performOnLiteral = function (literalExpression) {
	        return (new InAction({
	            expression: new LiteralExpression({
	                value: Range.fromJS({ start: literalExpression.value, end: null, bounds: '[)' })
	            })
	        })).performOnSimple(this.expression);
	    };
	    return LessThanOrEqualAction;
	}(Action));
	Action.register(LessThanOrEqualAction);
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};


	var IndexOfAction = exports.IndexOfAction = (function (_super) {
	    __extends(IndexOfAction, _super);
	    function IndexOfAction(parameters) {
	        _super.call(this, parameters, dummyObject);
	        this._ensureAction("indexOf");
	        this._checkExpressionTypes('STRING');
	    }
	    IndexOfAction.fromJS = function (parameters) {
	        return new IndexOfAction(Action.jsToValue(parameters));
	    };
	    IndexOfAction.prototype.getNecessaryInputTypes = function () {
	        return 'STRING';
	    };
	    IndexOfAction.prototype.getOutputType = function (inputType) {
	        this._checkInputTypes(inputType);
	        return 'NUMBER';
	    };
	    IndexOfAction.prototype._fillRefSubstitutions = function (typeContext, inputType, indexer, alterations) {
	        this.expression._fillRefSubstitutions(typeContext, indexer, alterations);
	        return inputType;
	    };
	    IndexOfAction.prototype._getFnHelper = function (inputType, inputFn, expressionFn) {
	        return function (d, c) {
	            var inV = inputFn(d, c);
	            if (inV === null)
	                return null;
	            return inV.indexOf(expressionFn(d, c));
	        };
	    };
	    IndexOfAction.prototype._getJSHelper = function (inputType, inputJS, expressionJS) {
	        return Expression.jsNullSafetyBinary(inputJS, expressionJS, function (a, b) { return a + ".indexOf(" + b + ")"; }, inputJS[0] === '"', expressionJS[0] === '"');
	    };
	    IndexOfAction.prototype._getSQLHelper = function (inputType, dialect, inputSQL, expressionSQL) {
	        return dialect.indexOfExpression(inputSQL, expressionSQL);
	    };
	    return IndexOfAction;
	}(Action));
	Action.register(IndexOfAction);
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};

	var LookupAction = exports.LookupAction = (function (_super) {
	    __extends(LookupAction, _super);
	    function LookupAction(parameters) {
	        _super.call(this, parameters, dummyObject);
	        this.lookup = parameters.lookup;
	        this._ensureAction("lookup");
	    }
	    LookupAction.fromJS = function (parameters) {
	        var value = Action.jsToValue(parameters);
	        value.lookup = parameters.lookup;
	        return new LookupAction(value);
	    };
	    LookupAction.prototype.valueOf = function () {
	        var value = _super.prototype.valueOf.call(this);
	        value.lookup = this.lookup;
	        return value;
	    };
	    LookupAction.prototype.toJS = function () {
	        var js = _super.prototype.toJS.call(this);
	        js.lookup = this.lookup;
	        return js;
	    };
	    LookupAction.prototype.equals = function (other) {
	        return _super.prototype.equals.call(this, other) &&
	            this.lookup === other.lookup;
	    };
	    LookupAction.prototype._toStringParameters = function (expressionString) {
	        return [String(this.lookup)];
	    };
	    LookupAction.prototype.getNecessaryInputTypes = function () {
	        return this._stringTransformInputType;
	    };
	    LookupAction.prototype.getOutputType = function (inputType) {
	        return this._stringTransformOutputType(inputType);
	    };
	    LookupAction.prototype._fillRefSubstitutions = function (typeContext, inputType) {
	        return inputType;
	    };
	    LookupAction.prototype.fullyDefined = function () {
	        return false;
	    };
	    LookupAction.prototype._getFnHelper = function (inputType, inputFn) {
	        throw new Error('can not express as JS');
	    };
	    LookupAction.prototype._getJSHelper = function (inputType, inputJS) {
	        throw new Error('can not express as JS');
	    };
	    LookupAction.prototype._getSQLHelper = function (inputType, dialect, inputSQL, expressionSQL) {
	        throw new Error('can not express as SQL');
	    };
	    return LookupAction;
	}(Action));
	Action.register(LookupAction);
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};


	var LimitAction = exports.LimitAction = (function (_super) {
	    __extends(LimitAction, _super);
	    function LimitAction(parameters) {
	        if (parameters === void 0) { parameters = {}; }
	        _super.call(this, parameters, dummyObject);
	        this.limit = parameters.limit;
	        this._ensureAction("limit");
	    }
	    LimitAction.fromJS = function (parameters) {
	        return new LimitAction({
	            action: parameters.action,
	            limit: parameters.limit
	        });
	    };
	    LimitAction.prototype.valueOf = function () {
	        var value = _super.prototype.valueOf.call(this);
	        value.limit = this.limit;
	        return value;
	    };
	    LimitAction.prototype.toJS = function () {
	        var js = _super.prototype.toJS.call(this);
	        js.limit = this.limit;
	        return js;
	    };
	    LimitAction.prototype.equals = function (other) {
	        return _super.prototype.equals.call(this, other) &&
	            this.limit === other.limit;
	    };
	    LimitAction.prototype._toStringParameters = function (expressionString) {
	        return [String(this.limit)];
	    };
	    LimitAction.prototype.getNecessaryInputTypes = function () {
	        return 'DATASET';
	    };
	    LimitAction.prototype.getOutputType = function (inputType) {
	        this._checkInputTypes(inputType);
	        return 'DATASET';
	    };
	    LimitAction.prototype._fillRefSubstitutions = function (typeContext, inputType, indexer, alterations) {
	        return inputType;
	    };
	    LimitAction.prototype._getFnHelper = function (inputType, inputFn, expressionFn) {
	        var limit = this.limit;
	        return function (d, c) {
	            var inV = inputFn(d, c);
	            return inV ? inV.limit(limit) : null;
	        };
	    };
	    LimitAction.prototype._getSQLHelper = function (inputType, dialect, inputSQL, expressionSQL) {
	        return "LIMIT " + this.limit;
	    };
	    LimitAction.prototype._foldWithPrevAction = function (prevAction) {
	        if (prevAction instanceof LimitAction) {
	            return new LimitAction({
	                limit: Math.min(prevAction.limit, this.limit)
	            });
	        }
	        return null;
	    };
	    LimitAction.prototype._putBeforeLastAction = function (lastAction) {
	        if (lastAction instanceof ApplyAction) {
	            return this;
	        }
	        return null;
	    };
	    return LimitAction;
	}(Action));
	Action.register(LimitAction);
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var REGEXP_SPECIAL = "\\^$.|?*+()[{";

	var MatchAction = exports.MatchAction = (function (_super) {
	    __extends(MatchAction, _super);
	    function MatchAction(parameters) {
	        _super.call(this, parameters, dummyObject);
	        this.regexp = parameters.regexp;
	        this._ensureAction("match");
	    }
	    MatchAction.likeToRegExp = function (like, escapeChar) {
	        if (escapeChar === void 0) { escapeChar = '\\'; }
	        var regExp = ['^'];
	        for (var i = 0; i < like.length; i++) {
	            var char = like[i];
	            if (char === escapeChar) {
	                var nextChar = like[i + 1];
	                if (!nextChar)
	                    throw new Error("invalid LIKE string '" + like + "'");
	                char = nextChar;
	                i++;
	            }
	            else if (char === '%') {
	                regExp.push('.*');
	                continue;
	            }
	            else if (char === '_') {
	                regExp.push('.');
	                continue;
	            }
	            if (REGEXP_SPECIAL.indexOf(char) !== -1) {
	                regExp.push('\\');
	            }
	            regExp.push(char);
	        }
	        regExp.push('$');
	        return regExp.join('');
	    };
	    MatchAction.fromJS = function (parameters) {
	        var value = Action.jsToValue(parameters);
	        value.regexp = parameters.regexp;
	        return new MatchAction(value);
	    };
	    MatchAction.prototype.valueOf = function () {
	        var value = _super.prototype.valueOf.call(this);
	        value.regexp = this.regexp;
	        return value;
	    };
	    MatchAction.prototype.toJS = function () {
	        var js = _super.prototype.toJS.call(this);
	        js.regexp = this.regexp;
	        return js;
	    };
	    MatchAction.prototype.equals = function (other) {
	        return _super.prototype.equals.call(this, other) &&
	            this.regexp === other.regexp;
	    };
	    MatchAction.prototype._toStringParameters = function (expressionString) {
	        return [this.regexp];
	    };
	    MatchAction.prototype.getNecessaryInputTypes = function () {
	        return this._stringTransformInputType;
	    };
	    MatchAction.prototype.getOutputType = function (inputType) {
	        this._checkInputTypes(inputType);
	        return 'BOOLEAN';
	    };
	    MatchAction.prototype._fillRefSubstitutions = function () {
	        return {
	            type: 'BOOLEAN',
	        };
	    };
	    MatchAction.prototype._getFnHelper = function (inputType, inputFn) {
	        var re = new RegExp(this.regexp);
	        return function (d, c) {
	            var inV = inputFn(d, c);
	            if (!inV)
	                return null;
	            if (inV === null)
	                return null;
	            return re.test(inV);
	        };
	    };
	    MatchAction.prototype._getJSHelper = function (inputType, inputJS, expressionJS) {
	        return "/" + this.regexp + "/.test(" + inputJS + ")";
	    };
	    MatchAction.prototype._getSQLHelper = function (inputType, dialect, inputSQL, expressionSQL) {
	        return dialect.regexpExpression(inputSQL, this.regexp);
	    };
	    return MatchAction;
	}(Action));
	Action.register(MatchAction);
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};

	var MaxAction = exports.MaxAction = (function (_super) {
	    __extends(MaxAction, _super);
	    function MaxAction(parameters) {
	        _super.call(this, parameters, dummyObject);
	        this._ensureAction("max");
	        this._checkExpressionTypes('NUMBER', 'TIME');
	    }
	    MaxAction.fromJS = function (parameters) {
	        return new MaxAction(Action.jsToValue(parameters));
	    };
	    MaxAction.prototype.getNecessaryInputTypes = function () {
	        return 'DATASET';
	    };
	    MaxAction.prototype.getOutputType = function (inputType) {
	        this._checkInputTypes(inputType);
	        return 'NUMBER';
	    };
	    MaxAction.prototype._fillRefSubstitutions = function (typeContext, inputType, indexer, alterations) {
	        this.expression._fillRefSubstitutions(typeContext, indexer, alterations);
	        return {
	            type: 'NUMBER',
	        };
	    };
	    MaxAction.prototype._getSQLHelper = function (inputType, dialect, inputSQL, expressionSQL) {
	        return "MAX(" + dialect.aggregateFilterIfNeeded(inputSQL, expressionSQL) + ")";
	    };
	    MaxAction.prototype.isAggregate = function () {
	        return true;
	    };
	    MaxAction.prototype.isNester = function () {
	        return true;
	    };
	    return MaxAction;
	}(Action));
	Action.register(MaxAction);
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};

	var MinAction = exports.MinAction = (function (_super) {
	    __extends(MinAction, _super);
	    function MinAction(parameters) {
	        _super.call(this, parameters, dummyObject);
	        this._ensureAction("min");
	        this._checkExpressionTypes('NUMBER', 'TIME');
	    }
	    MinAction.fromJS = function (parameters) {
	        return new MinAction(Action.jsToValue(parameters));
	    };
	    MinAction.prototype.getNecessaryInputTypes = function () {
	        return 'DATASET';
	    };
	    MinAction.prototype.getOutputType = function (inputType) {
	        this._checkInputTypes(inputType);
	        return 'NUMBER';
	    };
	    MinAction.prototype._fillRefSubstitutions = function (typeContext, inputType, indexer, alterations) {
	        this.expression._fillRefSubstitutions(typeContext, indexer, alterations);
	        return {
	            type: 'NUMBER',
	        };
	    };
	    MinAction.prototype._getSQLHelper = function (inputType, dialect, inputSQL, expressionSQL) {
	        return "MIN(" + dialect.aggregateFilterIfNeeded(inputSQL, expressionSQL) + ")";
	    };
	    MinAction.prototype.isAggregate = function () {
	        return true;
	    };
	    MinAction.prototype.isNester = function () {
	        return true;
	    };
	    return MinAction;
	}(Action));
	Action.register(MinAction);
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};


	var MultiplyAction = exports.MultiplyAction = (function (_super) {
	    __extends(MultiplyAction, _super);
	    function MultiplyAction(parameters) {
	        _super.call(this, parameters, dummyObject);
	        this._ensureAction("multiply");
	        this._checkExpressionTypes('NUMBER');
	    }
	    MultiplyAction.fromJS = function (parameters) {
	        return new MultiplyAction(Action.jsToValue(parameters));
	    };
	    MultiplyAction.prototype.getNecessaryInputTypes = function () {
	        return 'NUMBER';
	    };
	    MultiplyAction.prototype.getOutputType = function (inputType) {
	        this._checkInputTypes(inputType);
	        return 'NUMBER';
	    };
	    MultiplyAction.prototype._fillRefSubstitutions = function (typeContext, inputType, indexer, alterations) {
	        this.expression._fillRefSubstitutions(typeContext, indexer, alterations);
	        return inputType;
	    };
	    MultiplyAction.prototype._getFnHelper = function (inputType, inputFn, expressionFn) {
	        return function (d, c) {
	            return (inputFn(d, c) || 0) * (expressionFn(d, c) || 0);
	        };
	    };
	    MultiplyAction.prototype._getJSHelper = function (inputType, inputJS, expressionJS) {
	        return "(" + inputJS + "*" + expressionJS + ")";
	    };
	    MultiplyAction.prototype._getSQLHelper = function (inputType, dialect, inputSQL, expressionSQL) {
	        return "(" + inputSQL + "*" + expressionSQL + ")";
	    };
	    MultiplyAction.prototype._removeAction = function () {
	        return this.expression.equals(Expression.ONE);
	    };
	    MultiplyAction.prototype._nukeExpression = function () {
	        if (this.expression.equals(Expression.ZERO))
	            return Expression.ZERO;
	        return null;
	    };
	    MultiplyAction.prototype._distributeAction = function () {
	        return this.expression.actionize(this.action);
	    };
	    MultiplyAction.prototype._performOnLiteral = function (literalExpression) {
	        if (literalExpression.equals(Expression.ONE)) {
	            return this.expression;
	        }
	        else if (literalExpression.equals(Expression.ZERO)) {
	            return Expression.ZERO;
	        }
	        return null;
	    };
	    return MultiplyAction;
	}(Action));
	Action.register(MultiplyAction);
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};



	var NotAction = exports.NotAction = (function (_super) {
	    __extends(NotAction, _super);
	    function NotAction(parameters) {
	        _super.call(this, parameters, dummyObject);
	        this._ensureAction("not");
	        this._checkNoExpression();
	    }
	    NotAction.fromJS = function (parameters) {
	        return new NotAction(Action.jsToValue(parameters));
	    };
	    NotAction.prototype.getNecessaryInputTypes = function () {
	        return 'BOOLEAN';
	    };
	    NotAction.prototype.getOutputType = function (inputType) {
	        this._checkInputTypes(inputType);
	        return 'BOOLEAN';
	    };
	    NotAction.prototype._fillRefSubstitutions = function (typeContext, inputType) {
	        return inputType;
	    };
	    NotAction.prototype._getFnHelper = function (inputType, inputFn) {
	        return function (d, c) {
	            return !inputFn(d, c);
	        };
	    };
	    NotAction.prototype._getJSHelper = function (inputType, inputJS) {
	        return "!(" + inputJS + ")";
	    };
	    NotAction.prototype._getSQLHelper = function (inputType, dialect, inputSQL, expressionSQL) {
	        return "NOT(" + inputSQL + ")";
	    };
	    NotAction.prototype._foldWithPrevAction = function (prevAction) {
	        if (prevAction instanceof NotAction) {
	            return new AndAction({ expression: Expression.TRUE });
	        }
	        return null;
	    };
	    return NotAction;
	}(Action));
	Action.register(NotAction);
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};




	var NumberBucketAction = exports.NumberBucketAction = (function (_super) {
	    __extends(NumberBucketAction, _super);
	    function NumberBucketAction(parameters) {
	        _super.call(this, parameters, dummyObject);
	        this.size = parameters.size;
	        this.offset = parameters.offset;
	        this._ensureAction("numberBucket");
	    }
	    NumberBucketAction.fromJS = function (parameters) {
	        var value = Action.jsToValue(parameters);
	        value.size = parameters.size;
	        value.offset = hasOwnProperty(parameters, 'offset') ? parameters.offset : 0;
	        return new NumberBucketAction(value);
	    };
	    NumberBucketAction.prototype.valueOf = function () {
	        var value = _super.prototype.valueOf.call(this);
	        value.size = this.size;
	        value.offset = this.offset;
	        return value;
	    };
	    NumberBucketAction.prototype.toJS = function () {
	        var js = _super.prototype.toJS.call(this);
	        js.size = this.size;
	        if (this.offset)
	            js.offset = this.offset;
	        return js;
	    };
	    NumberBucketAction.prototype.equals = function (other) {
	        return _super.prototype.equals.call(this, other) &&
	            this.size === other.size &&
	            this.offset === other.offset;
	    };
	    NumberBucketAction.prototype._toStringParameters = function (expressionString) {
	        var params = [String(this.size)];
	        if (this.offset)
	            params.push(String(this.offset));
	        return params;
	    };
	    NumberBucketAction.prototype.getNecessaryInputTypes = function () {
	        return ['NUMBER', 'NUMBER_RANGE'];
	    };
	    NumberBucketAction.prototype.getOutputType = function (inputType) {
	        this._checkInputTypes(inputType);
	        return 'NUMBER_RANGE';
	    };
	    NumberBucketAction.prototype._fillRefSubstitutions = function () {
	        return {
	            type: 'NUMBER_RANGE',
	        };
	    };
	    NumberBucketAction.prototype._getFnHelper = function (inputType, inputFn) {
	        var size = this.size;
	        var offset = this.offset;
	        return function (d, c) {
	            var num = inputFn(d, c);
	            if (num === null)
	                return null;
	            return NumberRange.numberBucket(num, size, offset);
	        };
	    };
	    NumberBucketAction.prototype._getJSHelper = function (inputType, inputJS) {
	        var _this = this;
	        return Expression.jsNullSafetyUnary(inputJS, function (n) { return continuousFloorExpression(n, "Math.floor", _this.size, _this.offset); });
	    };
	    NumberBucketAction.prototype._getSQLHelper = function (inputType, dialect, inputSQL, expressionSQL) {
	        return continuousFloorExpression(inputSQL, "FLOOR", this.size, this.offset);
	    };
	    return NumberBucketAction;
	}(Action));
	Action.register(NumberBucketAction);
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};




	function mergeOr(ex1, ex2) {
	    if (!ex1.isOp('chain') ||
	        !ex2.isOp('chain') ||
	        !ex1.expression.isOp('ref') ||
	        !ex2.expression.isOp('ref') ||
	        !arraysEqual(ex1.getFreeReferences(), ex2.getFreeReferences()))
	        return null;
	    var ex1Actions = ex1.actions;
	    var ex2Actions = ex2.actions;
	    if (ex1Actions.length !== 1 || ex2Actions.length !== 1)
	        return null;
	    var firstActionExpression1 = ex1Actions[0].expression;
	    var firstActionExpression2 = ex2Actions[0].expression;
	    if (!firstActionExpression1.isOp('literal') || !firstActionExpression2.isOp('literal'))
	        return null;
	    var intersect = Set.generalUnion(firstActionExpression1.getLiteralValue(), firstActionExpression2.getLiteralValue());
	    if (intersect === null)
	        return null;
	    return Expression.inOrIs(ex1.expression, intersect);
	}
	var OrAction = exports.OrAction = (function (_super) {
	    __extends(OrAction, _super);
	    function OrAction(parameters) {
	        _super.call(this, parameters, dummyObject);
	        this._ensureAction("or");
	    }
	    OrAction.fromJS = function (parameters) {
	        return new OrAction(Action.jsToValue(parameters));
	    };
	    OrAction.prototype.getNecessaryInputTypes = function () {
	        return 'BOOLEAN';
	    };
	    OrAction.prototype.getOutputType = function (inputType) {
	        this._checkInputTypes(inputType);
	        return 'BOOLEAN';
	    };
	    OrAction.prototype._fillRefSubstitutions = function (typeContext, inputType, indexer, alterations) {
	        this.expression._fillRefSubstitutions(typeContext, indexer, alterations);
	        return inputType;
	    };
	    OrAction.prototype._getFnHelper = function (inputType, inputFn, expressionFn) {
	        return function (d, c) {
	            return inputFn(d, c) || expressionFn(d, c);
	        };
	    };
	    OrAction.prototype._getJSHelper = function (inputType, inputJS, expressionJS) {
	        return "(" + inputJS + "||" + expressionJS + ")";
	    };
	    OrAction.prototype._getSQLHelper = function (inputType, dialect, inputSQL, expressionSQL) {
	        return "(" + inputSQL + " OR " + expressionSQL + ")";
	    };
	    OrAction.prototype._removeAction = function () {
	        return this.expression.equals(Expression.FALSE);
	    };
	    OrAction.prototype._nukeExpression = function () {
	        if (this.expression.equals(Expression.TRUE))
	            return Expression.TRUE;
	        return null;
	    };
	    OrAction.prototype._distributeAction = function () {
	        return this.expression.actionize(this.action);
	    };
	    OrAction.prototype._performOnLiteral = function (literalExpression) {
	        if (literalExpression.equals(Expression.FALSE)) {
	            return this.expression;
	        }
	        if (literalExpression.equals(Expression.TRUE)) {
	            return Expression.TRUE;
	        }
	        return null;
	    };
	    OrAction.prototype._performOnSimpleChain = function (chainExpression) {
	        var expression = this.expression;
	        var orExpressions = chainExpression.getExpressionPattern('or');
	        if (orExpressions) {
	            for (var i = 0; i < orExpressions.length; i++) {
	                var orExpression = orExpressions[i];
	                var mergedExpression = mergeOr(orExpression, expression);
	                if (mergedExpression) {
	                    orExpressions[i] = mergedExpression;
	                    return Expression.or(orExpressions).simplify();
	                }
	            }
	        }
	        return mergeOr(chainExpression, expression);
	    };
	    return OrAction;
	}(Action));
	Action.register(OrAction);
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};





	var OverlapAction = exports.OverlapAction = (function (_super) {
	    __extends(OverlapAction, _super);
	    function OverlapAction(parameters) {
	        _super.call(this, parameters, dummyObject);
	        this._ensureAction("overlap");
	        if (!this.expression.canHaveType('SET')) {
	            throw new Error(this.action + " must have an expression of type SET (is: " + this.expression.type + ")");
	        }
	    }
	    OverlapAction.fromJS = function (parameters) {
	        return new OverlapAction(Action.jsToValue(parameters));
	    };
	    OverlapAction.prototype.getNecessaryInputTypes = function () {
	        var expressionType = this.expression.type;
	        if (expressionType && expressionType !== 'NULL' && expressionType !== 'SET/NULL') {
	            var setExpressionType = wrapSetType(expressionType);
	            var unwrapped = unwrapSetType(setExpressionType);
	            return [setExpressionType, unwrapped];
	        }
	        else {
	            return [
	                'NULL', 'BOOLEAN', 'NUMBER', 'TIME', 'STRING', 'NUMBER_RANGE', 'TIME_RANGE', 'STRING_RANGE',
	                'SET', 'SET/NULL', 'SET/BOOLEAN', 'SET/NUMBER', 'SET/TIME', 'SET/STRING',
	                'SET/NUMBER_RANGE', 'SET/TIME_RANGE', 'DATASET'
	            ];
	        }
	    };
	    OverlapAction.prototype.getOutputType = function (inputType) {
	        this._checkInputTypes(inputType);
	        return 'BOOLEAN';
	    };
	    OverlapAction.prototype._fillRefSubstitutions = function (typeContext, inputType, indexer, alterations) {
	        this.expression._fillRefSubstitutions(typeContext, indexer, alterations);
	        return {
	            type: 'BOOLEAN'
	        };
	    };
	    OverlapAction.prototype._getFnHelper = function (inputType, inputFn, expressionFn) {
	        return function (d, c) {
	            var inV = inputFn(d, c);
	            var exV = expressionFn(d, c);
	            if (exV == null)
	                return null;
	            return Set.isSet(inV) ? inV.overlap(exV) : exV.contains(inV);
	        };
	    };
	    OverlapAction.prototype._nukeExpression = function () {
	        if (this.expression.equals(Expression.EMPTY_SET))
	            return Expression.FALSE;
	        return null;
	    };
	    OverlapAction.prototype._performOnSimpleWhatever = function (ex) {
	        var expression = this.expression;
	        if ('SET/' + ex.type === expression.type) {
	            return new InAction({ expression: expression }).performOnSimple(ex);
	        }
	        return null;
	    };
	    OverlapAction.prototype._performOnLiteral = function (literalExpression) {
	        var expression = this.expression;
	        if (!expression.isOp('literal'))
	            return new OverlapAction({ expression: literalExpression }).performOnSimple(expression);
	        return this._performOnSimpleWhatever(literalExpression);
	    };
	    OverlapAction.prototype._performOnRef = function (refExpression) {
	        return this._performOnSimpleWhatever(refExpression);
	    };
	    OverlapAction.prototype._performOnSimpleChain = function (chainExpression) {
	        return this._performOnSimpleWhatever(chainExpression);
	    };
	    return OverlapAction;
	}(Action));
	Action.register(OverlapAction);
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};


	var PowerAction = exports.PowerAction = (function (_super) {
	    __extends(PowerAction, _super);
	    function PowerAction(parameters) {
	        _super.call(this, parameters, dummyObject);
	        this._ensureAction("power");
	        this._checkExpressionTypes('NUMBER');
	    }
	    PowerAction.fromJS = function (parameters) {
	        return new PowerAction(Action.jsToValue(parameters));
	    };
	    PowerAction.prototype.getNecessaryInputTypes = function () {
	        return 'NUMBER';
	    };
	    PowerAction.prototype.getOutputType = function (inputType) {
	        this._checkInputTypes(inputType);
	        return 'NUMBER';
	    };
	    PowerAction.prototype._fillRefSubstitutions = function (typeContext, inputType, indexer, alterations) {
	        this.expression._fillRefSubstitutions(typeContext, indexer, alterations);
	        return inputType;
	    };
	    PowerAction.prototype._getFnHelper = function (inputType, inputFn, expressionFn) {
	        return function (d, c) {
	            return Math.pow((inputFn(d, c) || 0), (expressionFn(d, c) || 0));
	        };
	    };
	    PowerAction.prototype._getJSHelper = function (inputType, inputJS, expressionJS) {
	        return "Math.pow(" + inputJS + "," + expressionJS + ")";
	    };
	    PowerAction.prototype._getSQLHelper = function (inputType, dialect, inputSQL, expressionSQL) {
	        return "POW(" + inputSQL + "," + expressionSQL + ")";
	    };
	    PowerAction.prototype._removeAction = function () {
	        return this.expression.equals(Expression.ONE);
	    };
	    PowerAction.prototype._performOnRef = function (simpleExpression) {
	        if (this.expression.equals(Expression.ZERO))
	            return simpleExpression;
	        return null;
	    };
	    return PowerAction;
	}(Action));
	Action.register(PowerAction);
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};


	var QuantileAction = exports.QuantileAction = (function (_super) {
	    __extends(QuantileAction, _super);
	    function QuantileAction(parameters) {
	        _super.call(this, parameters, dummyObject);
	        this.quantile = parameters.quantile;
	        this._ensureAction("quantile");
	        this._checkExpressionTypes('NUMBER');
	    }
	    QuantileAction.fromJS = function (parameters) {
	        var value = Action.jsToValue(parameters);
	        value.quantile = parameters.quantile;
	        return new QuantileAction(value);
	    };
	    QuantileAction.prototype.valueOf = function () {
	        var value = _super.prototype.valueOf.call(this);
	        value.quantile = this.quantile;
	        return value;
	    };
	    QuantileAction.prototype.toJS = function () {
	        var js = _super.prototype.toJS.call(this);
	        js.quantile = this.quantile;
	        return js;
	    };
	    QuantileAction.prototype.equals = function (other) {
	        return _super.prototype.equals.call(this, other) &&
	            this.quantile === other.quantile;
	    };
	    QuantileAction.prototype._toStringParameters = function (expressionString) {
	        return [expressionString, String(this.quantile)];
	    };
	    QuantileAction.prototype.getNecessaryInputTypes = function () {
	        return 'DATASET';
	    };
	    QuantileAction.prototype.getOutputType = function (inputType) {
	        this._checkInputTypes(inputType);
	        return 'NUMBER';
	    };
	    QuantileAction.prototype._fillRefSubstitutions = function (typeContext, inputType, indexer, alterations) {
	        this.expression._fillRefSubstitutions(typeContext, indexer, alterations);
	        return {
	            type: 'NUMBER'
	        };
	    };
	    QuantileAction.prototype._getFnHelper = function (inputType, inputFn, expressionFn) {
	        var quantile = this.quantile;
	        return function (d, c) {
	            var inV = inputFn(d, c);
	            return inV ? inV.quantile(expressionFn, quantile, foldContext(d, c)) : null;
	        };
	    };
	    QuantileAction.prototype.isAggregate = function () {
	        return true;
	    };
	    QuantileAction.prototype.isNester = function () {
	        return true;
	    };
	    return QuantileAction;
	}(Action));
	Action.register(QuantileAction);
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};


	var SelectAction = exports.SelectAction = (function (_super) {
	    __extends(SelectAction, _super);
	    function SelectAction(parameters) {
	        if (parameters === void 0) { parameters = {}; }
	        _super.call(this, parameters, dummyObject);
	        this.attributes = parameters.attributes;
	        this._ensureAction("select");
	    }
	    SelectAction.fromJS = function (parameters) {
	        return new SelectAction({
	            action: parameters.action,
	            attributes: parameters.attributes
	        });
	    };
	    SelectAction.prototype.valueOf = function () {
	        var value = _super.prototype.valueOf.call(this);
	        value.attributes = this.attributes;
	        return value;
	    };
	    SelectAction.prototype.toJS = function () {
	        var js = _super.prototype.toJS.call(this);
	        js.attributes = this.attributes;
	        return js;
	    };
	    SelectAction.prototype.equals = function (other) {
	        return _super.prototype.equals.call(this, other) &&
	            String(this.attributes) === String(other.attributes);
	    };
	    SelectAction.prototype._toStringParameters = function (expressionString) {
	        return this.attributes;
	    };
	    SelectAction.prototype.getNecessaryInputTypes = function () {
	        return 'DATASET';
	    };
	    SelectAction.prototype.getOutputType = function (inputType) {
	        this._checkInputTypes(inputType);
	        return 'DATASET';
	    };
	    SelectAction.prototype._fillRefSubstitutions = function (typeContext, inputType, indexer, alterations) {
	        var attributes = this.attributes;
	        var datasetType = typeContext.datasetType;
	        var newDatasetType = Object.create(null);
	        for (var _i = 0, attributes_1 = attributes; _i < attributes_1.length; _i++) {
	            var attr = attributes_1[_i];
	            var attrType = datasetType[attr];
	            if (!attrType)
	                throw new Error("unknown attribute '" + attr + "' in select");
	            newDatasetType[attr] = attrType;
	        }
	        typeContext.datasetType = newDatasetType;
	        return typeContext;
	    };
	    SelectAction.prototype._getFnHelper = function (inputType, inputFn, expressionFn) {
	        var attributes = this.attributes;
	        return function (d, c) {
	            var inV = inputFn(d, c);
	            return inV ? inV.select(attributes) : null;
	        };
	    };
	    SelectAction.prototype._getSQLHelper = function (inputType, dialect, inputSQL, expressionSQL) {
	        throw new Error('can not be expressed as SQL directly');
	    };
	    SelectAction.prototype._foldWithPrevAction = function (prevAction) {
	        var attributes = this.attributes;
	        if (prevAction instanceof SelectAction) {
	            return new SelectAction({
	                attributes: prevAction.attributes.filter(function (a) { return attributes.indexOf(a) !== -1; })
	            });
	        }
	        else if (prevAction instanceof ApplyAction) {
	            if (attributes.indexOf(prevAction.name) === -1) {
	                return this;
	            }
	        }
	        return null;
	    };
	    return SelectAction;
	}(Action));
	Action.register(SelectAction);
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};


	var SortAction = exports.SortAction = (function (_super) {
	    __extends(SortAction, _super);
	    function SortAction(parameters) {
	        if (parameters === void 0) { parameters = {}; }
	        _super.call(this, parameters, dummyObject);
	        var direction = parameters.direction || 'ascending';
	        if (direction !== SortAction.DESCENDING && direction !== SortAction.ASCENDING) {
	            throw new Error("direction must be '" + SortAction.DESCENDING + "' or '" + SortAction.ASCENDING + "'");
	        }
	        this.direction = direction;
	        if (!this.expression.isOp('ref')) {
	            throw new Error("must be a reference expression: " + this.expression);
	        }
	        this._ensureAction("sort");
	    }
	    SortAction.fromJS = function (parameters) {
	        var value = Action.jsToValue(parameters);
	        value.direction = parameters.direction;
	        return new SortAction(value);
	    };
	    SortAction.prototype.valueOf = function () {
	        var value = _super.prototype.valueOf.call(this);
	        value.direction = this.direction;
	        return value;
	    };
	    SortAction.prototype.toJS = function () {
	        var js = _super.prototype.toJS.call(this);
	        js.direction = this.direction;
	        return js;
	    };
	    SortAction.prototype.equals = function (other) {
	        return _super.prototype.equals.call(this, other) &&
	            this.direction === other.direction;
	    };
	    SortAction.prototype._toStringParameters = function (expressionString) {
	        return [expressionString, this.direction];
	    };
	    SortAction.prototype.getNecessaryInputTypes = function () {
	        return 'DATASET';
	    };
	    SortAction.prototype.getOutputType = function (inputType) {
	        this._checkInputTypes(inputType);
	        return 'DATASET';
	    };
	    SortAction.prototype._fillRefSubstitutions = function (typeContext, inputType, indexer, alterations) {
	        this.expression._fillRefSubstitutions(typeContext, indexer, alterations);
	        return typeContext;
	    };
	    SortAction.prototype._getFnHelper = function (inputType, inputFn, expressionFn) {
	        var direction = this.direction;
	        return function (d, c) {
	            var inV = inputFn(d, c);
	            return inV ? inV.sort(expressionFn, direction) : null;
	        };
	    };
	    SortAction.prototype._getSQLHelper = function (inputType, dialect, inputSQL, expressionSQL) {
	        var dir = this.direction === SortAction.DESCENDING ? 'DESC' : 'ASC';
	        return "ORDER BY " + expressionSQL + " " + dir;
	    };
	    SortAction.prototype.refName = function () {
	        var expression = this.expression;
	        return (expression instanceof RefExpression) ? expression.name : null;
	    };
	    SortAction.prototype.isNester = function () {
	        return true;
	    };
	    SortAction.prototype._foldWithPrevAction = function (prevAction) {
	        if (prevAction instanceof SortAction && this.expression.equals(prevAction.expression)) {
	            return this;
	        }
	        return null;
	    };
	    SortAction.prototype.toggleDirection = function () {
	        return new SortAction({
	            expression: this.expression,
	            direction: this.direction === SortAction.ASCENDING ? SortAction.DESCENDING : SortAction.ASCENDING
	        });
	    };
	    SortAction.DESCENDING = 'descending';
	    SortAction.ASCENDING = 'ascending';
	    return SortAction;
	}(Action));
	Action.register(SortAction);
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};





	var SplitAction = exports.SplitAction = (function (_super) {
	    __extends(SplitAction, _super);
	    function SplitAction(parameters) {
	        _super.call(this, parameters, dummyObject);
	        var splits = parameters.splits;
	        if (!splits)
	            throw new Error('must have splits');
	        this.splits = splits;
	        this.keys = Object.keys(splits).sort();
	        if (!this.keys.length)
	            throw new Error('must have at least one split');
	        this.dataName = parameters.dataName;
	        this._ensureAction("split");
	    }
	    SplitAction.fromJS = function (parameters) {
	        var value = {
	            action: parameters.action
	        };
	        var splits;
	        if (parameters.expression && parameters.name) {
	            splits = (_a = {}, _a[parameters.name] = parameters.expression, _a);
	        }
	        else {
	            splits = parameters.splits;
	        }
	        value.splits = Expression.expressionLookupFromJS(splits);
	        value.dataName = parameters.dataName;
	        return new SplitAction(value);
	        var _a;
	    };
	    SplitAction.prototype.valueOf = function () {
	        var value = _super.prototype.valueOf.call(this);
	        value.splits = this.splits;
	        value.dataName = this.dataName;
	        return value;
	    };
	    SplitAction.prototype.toJS = function () {
	        var splits = this.splits;
	        var js = _super.prototype.toJS.call(this);
	        if (this.isMultiSplit()) {
	            js.splits = Expression.expressionLookupToJS(splits);
	        }
	        else {
	            for (var name in splits) {
	                js.name = name;
	                js.expression = splits[name].toJS();
	            }
	        }
	        js.dataName = this.dataName;
	        return js;
	    };
	    SplitAction.prototype.equals = function (other) {
	        return _super.prototype.equals.call(this, other) &&
	            immutableLookupsEqual(this.splits, other.splits) &&
	            this.dataName === other.dataName;
	    };
	    SplitAction.prototype._toStringParameters = function (expressionString) {
	        if (this.isMultiSplit()) {
	            var splits = this.splits;
	            var splitStrings = [];
	            for (var name in splits) {
	                splitStrings.push(name + ": " + splits[name]);
	            }
	            return [splitStrings.join(', '), this.dataName];
	        }
	        else {
	            return [this.firstSplitExpression().toString(), this.firstSplitName(), this.dataName];
	        }
	    };
	    SplitAction.prototype.getNecessaryInputTypes = function () {
	        return 'DATASET';
	    };
	    SplitAction.prototype.getOutputType = function (inputType) {
	        this._checkInputTypes(inputType);
	        return 'DATASET';
	    };
	    SplitAction.prototype._fillRefSubstitutions = function (typeContext, inputType, indexer, alterations) {
	        var newDatasetType = {};
	        this.mapSplits(function (name, expression) {
	            newDatasetType[name] = expression._fillRefSubstitutions(typeContext, indexer, alterations);
	        });
	        newDatasetType[this.dataName] = typeContext;
	        return {
	            parent: typeContext.parent,
	            type: 'DATASET',
	            datasetType: newDatasetType,
	            remote: false
	        };
	    };
	    SplitAction.prototype.getFn = function (inputType, inputFn) {
	        var dataName = this.dataName;
	        var splitFns = this.mapSplitExpressions(function (ex) { return ex.getFn(); });
	        return function (d, c) {
	            var inV = inputFn(d, c);
	            return inV ? inV.split(splitFns, dataName) : null;
	        };
	    };
	    SplitAction.prototype.getSQL = function (inputType, inputSQL, dialect) {
	        var groupBys = this.mapSplits(function (name, expression) { return expression.getSQL(dialect); });
	        return "GROUP BY " + groupBys.join(', ');
	    };
	    SplitAction.prototype.getSelectSQL = function (dialect) {
	        return this.mapSplits(function (name, expression) { return (expression.getSQL(dialect) + " AS " + dialect.escapeName(name)); });
	    };
	    SplitAction.prototype.getShortGroupBySQL = function () {
	        return 'GROUP BY ' + Object.keys(this.splits).map(function (d, i) { return i + 1; }).join(', ');
	    };
	    SplitAction.prototype.expressionCount = function () {
	        var count = 0;
	        this.mapSplits(function (k, expression) {
	            count += expression.expressionCount();
	        });
	        return count;
	    };
	    SplitAction.prototype.fullyDefined = function () {
	        return false;
	    };
	    SplitAction.prototype.simplify = function () {
	        if (this.simple)
	            return this;
	        var simpleSplits = this.mapSplitExpressions(function (ex) { return ex.simplify(); });
	        var value = this.valueOf();
	        value.splits = simpleSplits;
	        value.simple = true;
	        return new SplitAction(value);
	    };
	    SplitAction.prototype.getExpressions = function () {
	        return this.mapSplits(function (name, ex) { return ex; });
	    };
	    SplitAction.prototype._substituteHelper = function (substitutionFn, thisArg, indexer, depth, nestDiff) {
	        var nestDiffNext = nestDiff + 1;
	        var hasChanged = false;
	        var subSplits = this.mapSplitExpressions(function (ex) {
	            var subExpression = ex._substituteHelper(substitutionFn, thisArg, indexer, depth, nestDiffNext);
	            if (subExpression !== ex)
	                hasChanged = true;
	            return subExpression;
	        });
	        if (!hasChanged)
	            return this;
	        var value = this.valueOf();
	        value.splits = subSplits;
	        return new SplitAction(value);
	    };
	    SplitAction.prototype.isNester = function () {
	        return true;
	    };
	    SplitAction.prototype.numSplits = function () {
	        return this.keys.length;
	    };
	    SplitAction.prototype.isMultiSplit = function () {
	        return this.numSplits() > 1;
	    };
	    SplitAction.prototype.mapSplits = function (fn) {
	        var _a = this, splits = _a.splits, keys = _a.keys;
	        var res = [];
	        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {
	            var k = keys_1[_i];
	            var v = fn(k, splits[k]);
	            if (typeof v !== 'undefined')
	                res.push(v);
	        }
	        return res;
	    };
	    SplitAction.prototype.mapSplitExpressions = function (fn) {
	        var _a = this, splits = _a.splits, keys = _a.keys;
	        var ret = Object.create(null);
	        for (var _i = 0, keys_2 = keys; _i < keys_2.length; _i++) {
	            var key = keys_2[_i];
	            ret[key] = fn(splits[key], key);
	        }
	        return ret;
	    };
	    SplitAction.prototype.transformExpressions = function (fn) {
	        var _a = this, splits = _a.splits, keys = _a.keys;
	        var newSplits = Object.create(null);
	        var changed = false;
	        for (var _i = 0, keys_3 = keys; _i < keys_3.length; _i++) {
	            var key = keys_3[_i];
	            var ex = splits[key];
	            var transformed = fn(ex, key);
	            if (transformed !== ex)
	                changed = true;
	            newSplits[key] = transformed;
	        }
	        if (!changed)
	            return this;
	        var value = this.valueOf();
	        value.splits = newSplits;
	        return new SplitAction(value);
	    };
	    SplitAction.prototype.firstSplitName = function () {
	        return this.keys[0];
	    };
	    SplitAction.prototype.firstSplitExpression = function () {
	        return this.splits[this.firstSplitName()];
	    };
	    SplitAction.prototype.filterFromDatum = function (datum) {
	        return Expression.and(this.mapSplits(function (name, expression) {
	            if (isSetType(expression.type)) {
	                return r(datum[name]).in(expression);
	            }
	            else {
	                return expression.is(r(datum[name]));
	            }
	        })).simplify();
	    };
	    SplitAction.prototype.hasKey = function (key) {
	        return hasOwnProperty(this.splits, key);
	    };
	    SplitAction.prototype.maxBucketNumber = function () {
	        var _a = this, splits = _a.splits, keys = _a.keys;
	        var num = 1;
	        for (var _i = 0, keys_4 = keys; _i < keys_4.length; _i++) {
	            var key = keys_4[_i];
	            num *= splits[key].maxPossibleSplitValues();
	        }
	        return num;
	    };
	    SplitAction.prototype.isAggregate = function () {
	        return true;
	    };
	    return SplitAction;
	}(Action));
	Action.register(SplitAction);
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};

	var SubstrAction = exports.SubstrAction = (function (_super) {
	    __extends(SubstrAction, _super);
	    function SubstrAction(parameters) {
	        _super.call(this, parameters, dummyObject);
	        this.position = parameters.position;
	        this.length = parameters.length;
	        this._ensureAction("substr");
	    }
	    SubstrAction.fromJS = function (parameters) {
	        var value = Action.jsToValue(parameters);
	        value.position = parameters.position;
	        value.length = parameters.length;
	        return new SubstrAction(value);
	    };
	    SubstrAction.prototype.valueOf = function () {
	        var value = _super.prototype.valueOf.call(this);
	        value.position = this.position;
	        value.length = this.length;
	        return value;
	    };
	    SubstrAction.prototype.toJS = function () {
	        var js = _super.prototype.toJS.call(this);
	        js.position = this.position;
	        js.length = this.length;
	        return js;
	    };
	    SubstrAction.prototype.equals = function (other) {
	        return _super.prototype.equals.call(this, other) &&
	            this.position === other.position &&
	            this.length === other.length;
	    };
	    SubstrAction.prototype._toStringParameters = function (expressionString) {
	        return [String(this.position), String(this.length)];
	    };
	    SubstrAction.prototype.getNecessaryInputTypes = function () {
	        return this._stringTransformInputType;
	    };
	    SubstrAction.prototype.getOutputType = function (inputType) {
	        return this._stringTransformOutputType(inputType);
	    };
	    SubstrAction.prototype._fillRefSubstitutions = function (typeContext, inputType) {
	        return inputType;
	    };
	    SubstrAction.prototype._getFnHelper = function (inputType, inputFn) {
	        var _a = this, position = _a.position, length = _a.length;
	        return function (d, c) {
	            var inV = inputFn(d, c);
	            if (inV === null)
	                return null;
	            return inV.substr(position, length);
	        };
	    };
	    SubstrAction.prototype._getJSHelper = function (inputType, inputJS) {
	        var _a = this, position = _a.position, length = _a.length;
	        return "(_=" + inputJS + ",_==null?null:(''+_).substr(" + position + "," + length + "))";
	    };
	    SubstrAction.prototype._getSQLHelper = function (inputType, dialect, inputSQL, expressionSQL) {
	        return "SUBSTR(" + inputSQL + "," + (this.position + 1) + "," + this.length + ")";
	    };
	    return SubstrAction;
	}(Action));
	Action.register(SubstrAction);
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};


	var SubtractAction = exports.SubtractAction = (function (_super) {
	    __extends(SubtractAction, _super);
	    function SubtractAction(parameters) {
	        _super.call(this, parameters, dummyObject);
	        this._ensureAction("subtract");
	        this._checkExpressionTypes('NUMBER');
	    }
	    SubtractAction.fromJS = function (parameters) {
	        return new SubtractAction(Action.jsToValue(parameters));
	    };
	    SubtractAction.prototype.getNecessaryInputTypes = function () {
	        return 'NUMBER';
	    };
	    SubtractAction.prototype.getOutputType = function (inputType) {
	        this._checkInputTypes(inputType);
	        return 'NUMBER';
	    };
	    SubtractAction.prototype._fillRefSubstitutions = function (typeContext, inputType, indexer, alterations) {
	        this.expression._fillRefSubstitutions(typeContext, indexer, alterations);
	        return inputType;
	    };
	    SubtractAction.prototype._getFnHelper = function (inputType, inputFn, expressionFn) {
	        return function (d, c) {
	            return (inputFn(d, c) || 0) - (expressionFn(d, c) || 0);
	        };
	    };
	    SubtractAction.prototype._getJSHelper = function (inputType, inputJS, expressionJS) {
	        return "(" + inputJS + "-" + expressionJS + ")";
	    };
	    SubtractAction.prototype._getSQLHelper = function (inputType, dialect, inputSQL, expressionSQL) {
	        return "(" + inputSQL + "-" + expressionSQL + ")";
	    };
	    SubtractAction.prototype._removeAction = function () {
	        return this.expression.equals(Expression.ZERO);
	    };
	    return SubtractAction;
	}(Action));
	Action.register(SubtractAction);
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};



	var SumAction = exports.SumAction = (function (_super) {
	    __extends(SumAction, _super);
	    function SumAction(parameters) {
	        _super.call(this, parameters, dummyObject);
	        this._ensureAction("sum");
	        this._checkExpressionTypes('NUMBER');
	    }
	    SumAction.fromJS = function (parameters) {
	        return new SumAction(Action.jsToValue(parameters));
	    };
	    SumAction.prototype.getNecessaryInputTypes = function () {
	        return 'DATASET';
	    };
	    SumAction.prototype.getOutputType = function (inputType) {
	        this._checkInputTypes(inputType);
	        return 'NUMBER';
	    };
	    SumAction.prototype._fillRefSubstitutions = function (typeContext, inputType, indexer, alterations) {
	        this.expression._fillRefSubstitutions(typeContext, indexer, alterations);
	        return {
	            type: 'NUMBER'
	        };
	    };
	    SumAction.prototype._getSQLHelper = function (inputType, dialect, inputSQL, expressionSQL) {
	        return "SUM(" + dialect.aggregateFilterIfNeeded(inputSQL, expressionSQL) + ")";
	    };
	    SumAction.prototype.isAggregate = function () {
	        return true;
	    };
	    SumAction.prototype.isNester = function () {
	        return true;
	    };
	    SumAction.prototype.canDistribute = function () {
	        var expression = this.expression;
	        return expression instanceof LiteralExpression ||
	            Boolean(expression.getExpressionPattern('add') || expression.getExpressionPattern('subtract'));
	    };
	    SumAction.prototype.distribute = function (preEx) {
	        var expression = this.expression;
	        if (expression instanceof LiteralExpression) {
	            var value = expression.value;
	            if (value === 0)
	                return Expression.ZERO;
	            return expression.multiply(preEx.count()).simplify();
	        }
	        var pattern;
	        if (pattern = expression.getExpressionPattern('add')) {
	            return Expression.add(pattern.map(function (ex) { return preEx.sum(ex).distribute(); }));
	        }
	        if (pattern = expression.getExpressionPattern('subtract')) {
	            return Expression.subtract(pattern.map(function (ex) { return preEx.sum(ex).distribute(); }));
	        }
	        return null;
	    };
	    return SumAction;
	}(Action));
	Action.register(SumAction);
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};




	var TimeBucketAction = exports.TimeBucketAction = (function (_super) {
	    __extends(TimeBucketAction, _super);
	    function TimeBucketAction(parameters) {
	        _super.call(this, parameters, dummyObject);
	        var duration = parameters.duration;
	        this.duration = duration;
	        this.timezone = parameters.timezone;
	        this._ensureAction("timeBucket");
	        if (!Duration.isDuration(duration)) {
	            throw new Error("`duration` must be a Duration");
	        }
	        if (!duration.isFloorable()) {
	            throw new Error("duration '" + duration.toString() + "' is not floorable");
	        }
	    }
	    TimeBucketAction.fromJS = function (parameters) {
	        var value = Action.jsToValue(parameters);
	        value.duration = Duration.fromJS(parameters.duration);
	        if (parameters.timezone)
	            value.timezone = Timezone.fromJS(parameters.timezone);
	        return new TimeBucketAction(value);
	    };
	    TimeBucketAction.prototype.valueOf = function () {
	        var value = _super.prototype.valueOf.call(this);
	        value.duration = this.duration;
	        if (this.timezone)
	            value.timezone = this.timezone;
	        return value;
	    };
	    TimeBucketAction.prototype.toJS = function () {
	        var js = _super.prototype.toJS.call(this);
	        js.duration = this.duration.toJS();
	        if (this.timezone)
	            js.timezone = this.timezone.toJS();
	        return js;
	    };
	    TimeBucketAction.prototype.equals = function (other) {
	        return _super.prototype.equals.call(this, other) &&
	            this.duration.equals(other.duration) &&
	            immutableEqual(this.timezone, other.timezone);
	    };
	    TimeBucketAction.prototype._toStringParameters = function (expressionString) {
	        var ret = [this.duration.toString()];
	        if (this.timezone)
	            ret.push(this.timezone.toString());
	        return ret;
	    };
	    TimeBucketAction.prototype.getNecessaryInputTypes = function () {
	        return ['TIME', 'TIME_RANGE'];
	    };
	    TimeBucketAction.prototype.getOutputType = function (inputType) {
	        this._checkInputTypes(inputType);
	        return 'TIME_RANGE';
	    };
	    TimeBucketAction.prototype._fillRefSubstitutions = function () {
	        return {
	            type: 'TIME_RANGE',
	        };
	    };
	    TimeBucketAction.prototype._getFnHelper = function (inputType, inputFn) {
	        var duration = this.duration;
	        var timezone = this.getTimezone();
	        return function (d, c) {
	            var inV = inputFn(d, c);
	            if (inV === null)
	                return null;
	            return TimeRange.timeBucket(inV, duration, timezone);
	        };
	    };
	    TimeBucketAction.prototype._getJSHelper = function (inputType, inputJS) {
	        throw new Error("implement me");
	    };
	    TimeBucketAction.prototype._getSQLHelper = function (inputType, dialect, inputSQL, expressionSQL) {
	        return dialect.timeBucketExpression(inputSQL, this.duration, this.getTimezone());
	    };
	    TimeBucketAction.prototype.needsEnvironment = function () {
	        return !this.timezone;
	    };
	    TimeBucketAction.prototype.defineEnvironment = function (environment) {
	        if (this.timezone || !environment.timezone)
	            return this;
	        var value = this.valueOf();
	        value.timezone = environment.timezone;
	        return new TimeBucketAction(value);
	    };
	    TimeBucketAction.prototype.getTimezone = function () {
	        return this.timezone || Timezone.UTC;
	    };
	    return TimeBucketAction;
	}(Action));
	Action.register(TimeBucketAction);
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};








	var TimeFloorAction = exports.TimeFloorAction = (function (_super) {
	    __extends(TimeFloorAction, _super);
	    function TimeFloorAction(parameters) {
	        _super.call(this, parameters, dummyObject);
	        var duration = parameters.duration;
	        this.duration = duration;
	        this.timezone = parameters.timezone;
	        this._ensureAction("timeFloor");
	        if (!Duration.isDuration(duration)) {
	            throw new Error("`duration` must be a Duration");
	        }
	        if (!duration.isFloorable()) {
	            throw new Error("duration '" + duration.toString() + "' is not floorable");
	        }
	    }
	    TimeFloorAction.fromJS = function (parameters) {
	        var value = Action.jsToValue(parameters);
	        value.duration = Duration.fromJS(parameters.duration);
	        if (parameters.timezone)
	            value.timezone = Timezone.fromJS(parameters.timezone);
	        return new TimeFloorAction(value);
	    };
	    TimeFloorAction.prototype.valueOf = function () {
	        var value = _super.prototype.valueOf.call(this);
	        value.duration = this.duration;
	        if (this.timezone)
	            value.timezone = this.timezone;
	        return value;
	    };
	    TimeFloorAction.prototype.toJS = function () {
	        var js = _super.prototype.toJS.call(this);
	        js.duration = this.duration.toJS();
	        if (this.timezone)
	            js.timezone = this.timezone.toJS();
	        return js;
	    };
	    TimeFloorAction.prototype.equals = function (other) {
	        return _super.prototype.equals.call(this, other) &&
	            this.duration.equals(other.duration) &&
	            immutableEqual(this.timezone, other.timezone);
	    };
	    TimeFloorAction.prototype._toStringParameters = function (expressionString) {
	        var ret = [this.duration.toString()];
	        if (this.timezone)
	            ret.push(this.timezone.toString());
	        return ret;
	    };
	    TimeFloorAction.prototype.getNecessaryInputTypes = function () {
	        return 'TIME';
	    };
	    TimeFloorAction.prototype.getOutputType = function (inputType) {
	        this._checkInputTypes(inputType);
	        return 'TIME';
	    };
	    TimeFloorAction.prototype._fillRefSubstitutions = function () {
	        return {
	            type: 'TIME',
	        };
	    };
	    TimeFloorAction.prototype._getFnHelper = function (inputType, inputFn) {
	        var duration = this.duration;
	        var timezone = this.getTimezone();
	        return function (d, c) {
	            var inV = inputFn(d, c);
	            if (inV === null)
	                return null;
	            return duration.floor(inV, timezone);
	        };
	    };
	    TimeFloorAction.prototype._getJSHelper = function (inputType, inputJS) {
	        throw new Error("implement me");
	    };
	    TimeFloorAction.prototype._getSQLHelper = function (inputType, dialect, inputSQL, expressionSQL) {
	        return dialect.timeFloorExpression(inputSQL, this.duration, this.getTimezone());
	    };
	    TimeFloorAction.prototype._foldWithPrevAction = function (prevAction) {
	        if (prevAction.equals(this)) {
	            return this;
	        }
	        return null;
	    };
	    TimeFloorAction.prototype.needsEnvironment = function () {
	        return !this.timezone;
	    };
	    TimeFloorAction.prototype.defineEnvironment = function (environment) {
	        if (this.timezone || !environment.timezone)
	            return this;
	        var value = this.valueOf();
	        value.timezone = environment.timezone;
	        return new TimeFloorAction(value);
	    };
	    TimeFloorAction.prototype.getTimezone = function () {
	        return this.timezone || Timezone.UTC;
	    };
	    TimeFloorAction.prototype.alignsWith = function (actions) {
	        if (!actions.length)
	            return false;
	        var action = actions[0];
	        var _a = this, timezone = _a.timezone, duration = _a.duration;
	        if (!timezone)
	            return false;
	        if (action instanceof TimeFloorAction || action instanceof TimeBucketAction) {
	            return timezone.equals(action.timezone) && action.duration.dividesBy(duration);
	        }
	        if (action instanceof InAction || action instanceof OverlapAction) {
	            var literal = action.getLiteralValue();
	            if (TimeRange.isTimeRange(literal)) {
	                return literal.isAligned(duration, timezone);
	            }
	            else if (Set.isSet(literal)) {
	                if (literal.setType !== 'TIME_RANGE')
	                    return false;
	                return literal.elements.every(function (e) {
	                    return e.isAligned(duration, timezone);
	                });
	            }
	        }
	        return false;
	    };
	    return TimeFloorAction;
	}(Action));
	Action.register(TimeFloorAction);
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};



	var PART_TO_FUNCTION = {
	    SECOND_OF_MINUTE: function (d) { return d.getSeconds(); },
	    SECOND_OF_HOUR: function (d) { return d.getMinutes() * 60 + d.getSeconds(); },
	    SECOND_OF_DAY: function (d) { return (d.getHours() * 60 + d.getMinutes()) * 60 + d.getSeconds(); },
	    SECOND_OF_WEEK: function (d) { return ((d.getDay() * 24) + d.getHours() * 60 + d.getMinutes()) * 60 + d.getSeconds(); },
	    SECOND_OF_MONTH: function (d) { return (((d.getDate() - 1) * 24) + d.getHours() * 60 + d.getMinutes()) * 60 + d.getSeconds(); },
	    SECOND_OF_YEAR: null,
	    MINUTE_OF_HOUR: function (d) { return d.getMinutes(); },
	    MINUTE_OF_DAY: function (d) { return d.getHours() * 60 + d.getMinutes(); },
	    MINUTE_OF_WEEK: function (d) { return (d.getDay() * 24) + d.getHours() * 60 + d.getMinutes(); },
	    MINUTE_OF_MONTH: function (d) { return ((d.getDate() - 1) * 24) + d.getHours() * 60 + d.getMinutes(); },
	    MINUTE_OF_YEAR: null,
	    HOUR_OF_DAY: function (d) { return d.getHours(); },
	    HOUR_OF_WEEK: function (d) { return d.getDay() * 24 + d.getHours(); },
	    HOUR_OF_MONTH: function (d) { return (d.getDate() - 1) * 24 + d.getHours(); },
	    HOUR_OF_YEAR: null,
	    DAY_OF_WEEK: function (d) { return d.getDay() || 7; },
	    DAY_OF_MONTH: function (d) { return d.getDate(); },
	    DAY_OF_YEAR: null,
	    WEEK_OF_MONTH: null,
	    WEEK_OF_YEAR: null,
	    MONTH_OF_YEAR: function (d) { return d.getMonth(); },
	    YEAR: function (d) { return d.getFullYear(); }
	};
	var PART_TO_MAX_VALUES = {
	    SECOND_OF_MINUTE: 61,
	    SECOND_OF_HOUR: 3601,
	    SECOND_OF_DAY: 93601,
	    SECOND_OF_WEEK: null,
	    SECOND_OF_MONTH: null,
	    SECOND_OF_YEAR: null,
	    MINUTE_OF_HOUR: 60,
	    MINUTE_OF_DAY: 26 * 60,
	    MINUTE_OF_WEEK: null,
	    MINUTE_OF_MONTH: null,
	    MINUTE_OF_YEAR: null,
	    HOUR_OF_DAY: 26,
	    HOUR_OF_WEEK: null,
	    HOUR_OF_MONTH: null,
	    HOUR_OF_YEAR: null,
	    DAY_OF_WEEK: 7,
	    DAY_OF_MONTH: 31,
	    DAY_OF_YEAR: 366,
	    WEEK_OF_MONTH: 5,
	    WEEK_OF_YEAR: 53,
	    MONTH_OF_YEAR: 12,
	    YEAR: null
	};
	var TimePartAction = exports.TimePartAction = (function (_super) {
	    __extends(TimePartAction, _super);
	    function TimePartAction(parameters) {
	        _super.call(this, parameters, dummyObject);
	        this.part = parameters.part;
	        this.timezone = parameters.timezone;
	        this._ensureAction("timePart");
	        if (typeof this.part !== 'string') {
	            throw new Error("`part` must be a string");
	        }
	    }
	    TimePartAction.fromJS = function (parameters) {
	        var value = Action.jsToValue(parameters);
	        value.part = parameters.part;
	        if (parameters.timezone)
	            value.timezone = Timezone.fromJS(parameters.timezone);
	        return new TimePartAction(value);
	    };
	    TimePartAction.prototype.valueOf = function () {
	        var value = _super.prototype.valueOf.call(this);
	        value.part = this.part;
	        if (this.timezone)
	            value.timezone = this.timezone;
	        return value;
	    };
	    TimePartAction.prototype.toJS = function () {
	        var js = _super.prototype.toJS.call(this);
	        js.part = this.part;
	        if (this.timezone)
	            js.timezone = this.timezone.toJS();
	        return js;
	    };
	    TimePartAction.prototype.equals = function (other) {
	        return _super.prototype.equals.call(this, other) &&
	            this.part === other.part &&
	            immutableEqual(this.timezone, other.timezone);
	    };
	    TimePartAction.prototype._toStringParameters = function (expressionString) {
	        var ret = [this.part];
	        if (this.timezone)
	            ret.push(this.timezone.toString());
	        return ret;
	    };
	    TimePartAction.prototype.getNecessaryInputTypes = function () {
	        return 'TIME';
	    };
	    TimePartAction.prototype.getOutputType = function (inputType) {
	        this._checkInputTypes(inputType);
	        return 'NUMBER';
	    };
	    TimePartAction.prototype._fillRefSubstitutions = function () {
	        return {
	            type: 'NUMBER',
	        };
	    };
	    TimePartAction.prototype._getFnHelper = function (inputType, inputFn) {
	        var part = this.part;
	        var timezone = this.getTimezone();
	        var parter = PART_TO_FUNCTION[part];
	        if (!parter)
	            throw new Error("unsupported part '" + part + "'");
	        return function (d, c) {
	            var inV = inputFn(d, c);
	            if (!inV)
	                return null;
	            inV = WallTime.UTCToWallTime(inV, timezone.toString());
	            return parter(inV);
	        };
	    };
	    TimePartAction.prototype._getJSHelper = function (inputType, inputJS) {
	        throw new Error("implement me");
	    };
	    TimePartAction.prototype._getSQLHelper = function (inputType, dialect, inputSQL, expressionSQL) {
	        return dialect.timePartExpression(inputSQL, this.part, this.getTimezone());
	    };
	    TimePartAction.prototype.maxPossibleSplitValues = function () {
	        var maxValue = PART_TO_MAX_VALUES[this.part];
	        if (!maxValue)
	            return Infinity;
	        return maxValue + 1;
	    };
	    TimePartAction.prototype.needsEnvironment = function () {
	        return !this.timezone;
	    };
	    TimePartAction.prototype.defineEnvironment = function (environment) {
	        if (this.timezone || !environment.timezone)
	            return this;
	        var value = this.valueOf();
	        value.timezone = environment.timezone;
	        return new TimePartAction(value);
	    };
	    TimePartAction.prototype.getTimezone = function () {
	        return this.timezone || Timezone.UTC;
	    };
	    return TimePartAction;
	}(Action));
	Action.register(TimePartAction);
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};




	var TimeRangeAction = exports.TimeRangeAction = (function (_super) {
	    __extends(TimeRangeAction, _super);
	    function TimeRangeAction(parameters) {
	        _super.call(this, parameters, dummyObject);
	        this.duration = parameters.duration;
	        this.step = parameters.step || TimeRangeAction.DEFAULT_STEP;
	        this.timezone = parameters.timezone;
	        this._ensureAction("timeRange");
	        if (!Duration.isDuration(this.duration)) {
	            throw new Error("`duration` must be a Duration");
	        }
	    }
	    TimeRangeAction.fromJS = function (parameters) {
	        var value = Action.jsToValue(parameters);
	        value.duration = Duration.fromJS(parameters.duration);
	        value.step = parameters.step;
	        if (parameters.timezone)
	            value.timezone = Timezone.fromJS(parameters.timezone);
	        return new TimeRangeAction(value);
	    };
	    TimeRangeAction.prototype.valueOf = function () {
	        var value = _super.prototype.valueOf.call(this);
	        value.duration = this.duration;
	        value.step = this.step;
	        if (this.timezone)
	            value.timezone = this.timezone;
	        return value;
	    };
	    TimeRangeAction.prototype.toJS = function () {
	        var js = _super.prototype.toJS.call(this);
	        js.duration = this.duration.toJS();
	        js.step = this.step;
	        if (this.timezone)
	            js.timezone = this.timezone.toJS();
	        return js;
	    };
	    TimeRangeAction.prototype.equals = function (other) {
	        return _super.prototype.equals.call(this, other) &&
	            this.duration.equals(other.duration) &&
	            this.step === other.step &&
	            immutableEqual(this.timezone, other.timezone);
	    };
	    TimeRangeAction.prototype._toStringParameters = function (expressionString) {
	        var ret = [this.duration.toString(), this.step.toString()];
	        if (this.timezone)
	            ret.push(this.timezone.toString());
	        return ret;
	    };
	    TimeRangeAction.prototype.getNecessaryInputTypes = function () {
	        return 'TIME';
	    };
	    TimeRangeAction.prototype.getOutputType = function (inputType) {
	        this._checkInputTypes(inputType);
	        return 'TIME_RANGE';
	    };
	    TimeRangeAction.prototype._fillRefSubstitutions = function () {
	        return {
	            type: 'TIME_RANGE',
	        };
	    };
	    TimeRangeAction.prototype._getFnHelper = function (inputType, inputFn) {
	        var duration = this.duration;
	        var step = this.step;
	        var timezone = this.getTimezone();
	        return function (d, c) {
	            var inV = inputFn(d, c);
	            if (inV === null)
	                return null;
	            var other = duration.shift(inV, timezone, step);
	            if (step > 0) {
	                return new TimeRange({ start: inV, end: other });
	            }
	            else {
	                return new TimeRange({ start: other, end: inV });
	            }
	        };
	    };
	    TimeRangeAction.prototype._getJSHelper = function (inputType, inputJS) {
	        throw new Error("implement me");
	    };
	    TimeRangeAction.prototype._getSQLHelper = function (inputType, dialect, inputSQL, expressionSQL) {
	        throw new Error("implement me");
	    };
	    TimeRangeAction.prototype.needsEnvironment = function () {
	        return !this.timezone;
	    };
	    TimeRangeAction.prototype.defineEnvironment = function (environment) {
	        if (this.timezone || !environment.timezone)
	            return this;
	        var value = this.valueOf();
	        value.timezone = environment.timezone;
	        return new TimeRangeAction(value);
	    };
	    TimeRangeAction.prototype.getTimezone = function () {
	        return this.timezone || Timezone.UTC;
	    };
	    TimeRangeAction.DEFAULT_STEP = 1;
	    return TimeRangeAction;
	}(Action));
	Action.register(TimeRangeAction);
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};



	var TimeShiftAction = exports.TimeShiftAction = (function (_super) {
	    __extends(TimeShiftAction, _super);
	    function TimeShiftAction(parameters) {
	        _super.call(this, parameters, dummyObject);
	        this.duration = parameters.duration;
	        this.step = parameters.step || TimeShiftAction.DEFAULT_STEP;
	        this.timezone = parameters.timezone;
	        this._ensureAction("timeShift");
	        if (!Duration.isDuration(this.duration)) {
	            throw new Error("`duration` must be a Duration");
	        }
	    }
	    TimeShiftAction.fromJS = function (parameters) {
	        var value = Action.jsToValue(parameters);
	        value.duration = Duration.fromJS(parameters.duration);
	        value.step = parameters.step;
	        if (parameters.timezone)
	            value.timezone = Timezone.fromJS(parameters.timezone);
	        return new TimeShiftAction(value);
	    };
	    TimeShiftAction.prototype.valueOf = function () {
	        var value = _super.prototype.valueOf.call(this);
	        value.duration = this.duration;
	        value.step = this.step;
	        if (this.timezone)
	            value.timezone = this.timezone;
	        return value;
	    };
	    TimeShiftAction.prototype.toJS = function () {
	        var js = _super.prototype.toJS.call(this);
	        js.duration = this.duration.toJS();
	        js.step = this.step;
	        if (this.timezone)
	            js.timezone = this.timezone.toJS();
	        return js;
	    };
	    TimeShiftAction.prototype.equals = function (other) {
	        return _super.prototype.equals.call(this, other) &&
	            this.duration.equals(other.duration) &&
	            this.step === other.step &&
	            immutableEqual(this.timezone, other.timezone);
	    };
	    TimeShiftAction.prototype._toStringParameters = function (expressionString) {
	        var ret = [this.duration.toString(), this.step.toString()];
	        if (this.timezone)
	            ret.push(this.timezone.toString());
	        return ret;
	    };
	    TimeShiftAction.prototype.getNecessaryInputTypes = function () {
	        return 'TIME';
	    };
	    TimeShiftAction.prototype.getOutputType = function (inputType) {
	        this._checkInputTypes(inputType);
	        return 'TIME';
	    };
	    TimeShiftAction.prototype._fillRefSubstitutions = function () {
	        return {
	            type: 'TIME',
	        };
	    };
	    TimeShiftAction.prototype._getFnHelper = function (inputType, inputFn) {
	        var duration = this.duration;
	        var step = this.step;
	        var timezone = this.getTimezone();
	        return function (d, c) {
	            var inV = inputFn(d, c);
	            if (inV === null)
	                return null;
	            return duration.shift(inV, timezone, step);
	        };
	    };
	    TimeShiftAction.prototype._getJSHelper = function (inputType, inputJS) {
	        throw new Error("implement me");
	    };
	    TimeShiftAction.prototype._getSQLHelper = function (inputType, dialect, inputSQL, expressionSQL) {
	        return dialect.timeShiftExpression(inputSQL, this.duration, this.getTimezone());
	    };
	    TimeShiftAction.prototype._foldWithPrevAction = function (prevAction) {
	        if (prevAction instanceof TimeShiftAction) {
	            if (this.duration.equals(prevAction.duration) &&
	                Boolean(this.timezone) === Boolean(prevAction.timezone) &&
	                (!this.timezone || this.timezone.equals(prevAction.timezone))) {
	                var value = this.valueOf();
	                value.step += prevAction.step;
	                return new TimeShiftAction(value);
	            }
	        }
	        return null;
	    };
	    TimeShiftAction.prototype.needsEnvironment = function () {
	        return !this.timezone;
	    };
	    TimeShiftAction.prototype.defineEnvironment = function (environment) {
	        if (this.timezone || !environment.timezone)
	            return this;
	        var value = this.valueOf();
	        value.timezone = environment.timezone;
	        return new TimeShiftAction(value);
	    };
	    TimeShiftAction.prototype.getTimezone = function () {
	        return this.timezone || Timezone.UTC;
	    };
	    TimeShiftAction.DEFAULT_STEP = 1;
	    return TimeShiftAction;
	}(Action));
	Action.register(TimeShiftAction);
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};

	var TransformCaseAction = exports.TransformCaseAction = (function (_super) {
	    __extends(TransformCaseAction, _super);
	    function TransformCaseAction(parameters) {
	        _super.call(this, parameters, dummyObject);
	        var transformType = parameters.transformType;
	        if (transformType !== TransformCaseAction.UPPER_CASE && transformType !== TransformCaseAction.LOWER_CASE) {
	            throw new Error("Must supply transform type of '" + TransformCaseAction.UPPER_CASE + "' or '" + TransformCaseAction.LOWER_CASE + "'");
	        }
	        this.transformType = transformType;
	        this._ensureAction("transformCase");
	    }
	    TransformCaseAction.fromJS = function (parameters) {
	        var value = Action.jsToValue(parameters);
	        value.transformType = parameters.transformType;
	        return new TransformCaseAction(value);
	    };
	    TransformCaseAction.prototype.valueOf = function () {
	        var value = _super.prototype.valueOf.call(this);
	        value.transformType = this.transformType;
	        return value;
	    };
	    TransformCaseAction.prototype.toJS = function () {
	        var js = _super.prototype.toJS.call(this);
	        js.transformType = this.transformType;
	        return js;
	    };
	    TransformCaseAction.prototype.equals = function (other) {
	        return _super.prototype.equals.call(this, other) &&
	            this.transformType === other.transformType;
	    };
	    TransformCaseAction.prototype.getNecessaryInputTypes = function () {
	        return 'STRING';
	    };
	    TransformCaseAction.prototype.getOutputType = function (inputType) {
	        this._checkInputTypes(inputType);
	        return 'STRING';
	    };
	    TransformCaseAction.prototype._fillRefSubstitutions = function (typeContext, inputType, indexer, alterations) {
	        return inputType;
	    };
	    TransformCaseAction.prototype._foldWithPrevAction = function (prevAction) {
	        if (prevAction instanceof TransformCaseAction) {
	            return this;
	        }
	        return null;
	    };
	    TransformCaseAction.prototype._getFnHelper = function (inputType, inputFn) {
	        var transformType = this.transformType;
	        return function (d, c) {
	            return transformType === TransformCaseAction.UPPER_CASE ? inputFn(d, c).toLocaleUpperCase() : inputFn(d, c).toLocaleLowerCase();
	        };
	    };
	    TransformCaseAction.prototype._getJSHelper = function (inputType, inputJS, expressionJS) {
	        var transformType = this.transformType;
	        return transformType === TransformCaseAction.UPPER_CASE ? inputJS + ".toLocaleUpperCase()" : inputJS + ".toLocaleLowerCase()";
	    };
	    TransformCaseAction.prototype._getSQLHelper = function (inputType, dialect, inputSQL) {
	        var transformType = this.transformType;
	        return transformType === TransformCaseAction.UPPER_CASE ? "UPPER(" + inputSQL + ")" : "LOWER(" + inputSQL + ")";
	    };
	    TransformCaseAction.UPPER_CASE = 'upperCase';
	    TransformCaseAction.LOWER_CASE = 'lowerCase';
	    return TransformCaseAction;
	}(Action));
	Action.register(TransformCaseAction);
	var basicExecutorFactory = exports.basicExecutorFactory = function(parameters) {
	    var datasets = parameters.datasets;
	    return function (ex, env) {
	        if (env === void 0) { env = {}; }
	        return ex.compute(datasets, env);
	    };
	}
	Expression.expressionParser = __webpack_require__(200)(exports, Chronoshift);
	Expression.plyqlParser = __webpack_require__(201)(exports, Chronoshift);

	var helper = {};
	function addHasMoved(name, fn) {
	  helper[name] = function() {
	    console.warn(name + ' has moved, please update your code');
	    return fn.apply(this, arguments);
	  };
	}

	addHasMoved('parseJSON', Dataset.parseJSON);
	addHasMoved('find', find);
	addHasMoved('findIndex', findIndex);
	addHasMoved('findByName', findByName);
	addHasMoved('findIndexByName', findIndexByName);
	addHasMoved('overrideByName', overrideByName);
	addHasMoved('overridesByName', overridesByName);
	addHasMoved('shallowCopy', shallowCopy);
	addHasMoved('deduplicateSort', deduplicateSort);
	addHasMoved('mapLookup', mapLookup);
	addHasMoved('emptyLookup', emptyLookup);
	addHasMoved('nonEmptyLookup', nonEmptyLookup);
	addHasMoved('verboseRequesterFactory', verboseRequesterFactory);
	addHasMoved('retryRequesterFactory', retryRequesterFactory);
	addHasMoved('concurrentLimitRequesterFactory', concurrentLimitRequesterFactory);
	addHasMoved('promiseWhile', promiseWhile);

	exports.helper = helper;





/***/ },
/* 200 */
/***/ function(module, exports) {

	"use strict";
	module.exports = function(plywood, chronoshift) {
	  /*
	   * Generated by PEG.js 0.9.0.
	   *
	   * http://pegjs.org/
	   */

	  function peg$subclass(child, parent) {
	    function ctor() { this.constructor = child; }
	    ctor.prototype = parent.prototype;
	    child.prototype = new ctor();
	  }

	  function peg$SyntaxError(message, expected, found, location) {
	    this.message  = message;
	    this.expected = expected;
	    this.found    = found;
	    this.location = location;
	    this.name     = "SyntaxError";

	    if (typeof Error.captureStackTrace === "function") {
	      Error.captureStackTrace(this, peg$SyntaxError);
	    }
	  }

	  peg$subclass(peg$SyntaxError, Error);

	  function peg$parse(input) {
	    var options = arguments.length > 1 ? arguments[1] : {},
	        parser  = this,

	        peg$FAILED = {},

	        peg$startRuleFunctions = { start: peg$parsestart },
	        peg$startRuleFunction  = peg$parsestart,

	        peg$c0 = function(ex) { return ex; },
	        peg$c1 = function(head, tail) { return naryExpressionFactory('or', head, tail); },
	        peg$c2 = function(head, tail) { return naryExpressionFactory('and', head, tail); },
	        peg$c3 = function(not, ex) {
	              if (not) ex = ex.not();
	              return ex;
	            },
	        peg$c4 = function(lhs, rest) {
	              if (!rest) return lhs;
	              return lhs[rest[0]](rest[2]);
	            },
	        peg$c5 = { type: "other", description: "Comparison" },
	        peg$c6 = "==",
	        peg$c7 = { type: "literal", value: "==", description: "\"==\"" },
	        peg$c8 = function() { return 'is'; },
	        peg$c9 = "!=",
	        peg$c10 = { type: "literal", value: "!=", description: "\"!=\"" },
	        peg$c11 = function() { return 'isnt'; },
	        peg$c12 = "in",
	        peg$c13 = { type: "literal", value: "in", description: "\"in\"" },
	        peg$c14 = function() { return 'in'; },
	        peg$c15 = "<=",
	        peg$c16 = { type: "literal", value: "<=", description: "\"<=\"" },
	        peg$c17 = function() { return 'lessThanOrEqual'; },
	        peg$c18 = ">=",
	        peg$c19 = { type: "literal", value: ">=", description: "\">=\"" },
	        peg$c20 = function() { return 'greaterThanOrEqual'; },
	        peg$c21 = "<",
	        peg$c22 = { type: "literal", value: "<", description: "\"<\"" },
	        peg$c23 = function() { return 'lessThan'; },
	        peg$c24 = ">",
	        peg$c25 = { type: "literal", value: ">", description: "\">\"" },
	        peg$c26 = function() { return 'greaterThan'; },
	        peg$c27 = function(head, tail) { return naryExpressionFactory('concat', head, tail); },
	        peg$c28 = function(head, tail) { return naryExpressionWithAltFactory('add', head, tail, '-', 'subtract'); },
	        peg$c29 = "+",
	        peg$c30 = { type: "literal", value: "+", description: "\"+\"" },
	        peg$c31 = "-",
	        peg$c32 = { type: "literal", value: "-", description: "\"-\"" },
	        peg$c33 = function(op) { return op; },
	        peg$c34 = function(head, tail) { return naryExpressionWithAltFactory('multiply', head, tail, '/', 'divide'); },
	        peg$c35 = "*",
	        peg$c36 = { type: "literal", value: "*", description: "\"*\"" },
	        peg$c37 = "/",
	        peg$c38 = { type: "literal", value: "/", description: "\"/\"" },
	        peg$c39 = function(ex, rhs) {
	              if (rhs) ex = ex.power(rhs[1]);
	              return ex;
	            },
	        peg$c40 = "^",
	        peg$c41 = { type: "literal", value: "^", description: "\"^\"" },
	        peg$c42 = function(op, ex) {
	              // !Number is to make sure that -3 parses as literal(-3) and not literal(3).negate()
	              var negEx = ex.negate(); // Always negate (even with +) just to make sure it is possible
	              return op === '-' ? negEx : ex;
	            },
	        peg$c43 = function(ex) { return ex.absolute(); },
	        peg$c44 = function(lhs, tail) {
	              if (!tail.length) return lhs;
	              var operand = lhs;
	              for (var i = 0, n = tail.length; i < n; i++) {
	                var part = tail[i];
	                var op = part[1];
	                if (!possibleCalls[op]) error('no such call: ' + op);
	                var params = part[3] || [];
	                operand = operand[op].apply(operand, params);
	              }
	              return operand;
	            },
	        peg$c45 = function(head, tail) { return makeListMap1(head, tail); },
	        peg$c46 = "ply",
	        peg$c47 = { type: "literal", value: "ply", description: "\"ply\"" },
	        peg$c48 = function() { return ply(); },
	        peg$c49 = "$",
	        peg$c50 = { type: "literal", value: "$", description: "\"$\"" },
	        peg$c51 = ":",
	        peg$c52 = { type: "literal", value: ":", description: "\":\"" },
	        peg$c53 = function(name) { return RefExpression.parse(name); },
	        peg$c54 = "{",
	        peg$c55 = { type: "literal", value: "{", description: "\"{\"" },
	        peg$c56 = /^[^}]/,
	        peg$c57 = { type: "class", value: "[^}]", description: "[^}]" },
	        peg$c58 = "}",
	        peg$c59 = { type: "literal", value: "}", description: "\"}\"" },
	        peg$c60 = function(value) { return r(value); },
	        peg$c61 = { type: "other", description: "StringSet" },
	        peg$c62 = function(head, tail) { return Set.fromJS(makeListMap1(head, tail)); },
	        peg$c63 = { type: "other", description: "NumberSet" },
	        peg$c64 = { type: "other", description: "String" },
	        peg$c65 = "'",
	        peg$c66 = { type: "literal", value: "'", description: "\"'\"" },
	        peg$c67 = function(chars) { return chars; },
	        peg$c68 = function(chars) { error("Unmatched single quote"); },
	        peg$c69 = "\"",
	        peg$c70 = { type: "literal", value: "\"", description: "\"\\\"\"" },
	        peg$c71 = function(chars) { error("Unmatched double quote"); },
	        peg$c72 = "null",
	        peg$c73 = { type: "literal", value: "null", description: "\"null\"" },
	        peg$c74 = function() { return null; },
	        peg$c75 = "false",
	        peg$c76 = { type: "literal", value: "false", description: "\"false\"" },
	        peg$c77 = function() { return false; },
	        peg$c78 = "true",
	        peg$c79 = { type: "literal", value: "true", description: "\"true\"" },
	        peg$c80 = function() { return true; },
	        peg$c81 = "not",
	        peg$c82 = { type: "literal", value: "not", description: "\"not\"" },
	        peg$c83 = "and",
	        peg$c84 = { type: "literal", value: "and", description: "\"and\"" },
	        peg$c85 = "or",
	        peg$c86 = { type: "literal", value: "or", description: "\"or\"" },
	        peg$c87 = "++",
	        peg$c88 = { type: "literal", value: "++", description: "\"++\"" },
	        peg$c89 = /^[a-z_]/i,
	        peg$c90 = { type: "class", value: "[a-z_]i", description: "[a-z_]i" },
	        peg$c91 = { type: "other", description: "Number" },
	        peg$c92 = function(n) { return parseFloat(n); },
	        peg$c93 = /^[1-9]/,
	        peg$c94 = { type: "class", value: "[1-9]", description: "[1-9]" },
	        peg$c95 = ".",
	        peg$c96 = { type: "literal", value: ".", description: "\".\"" },
	        peg$c97 = "e",
	        peg$c98 = { type: "literal", value: "e", description: "\"e\"" },
	        peg$c99 = /^[+\-]/,
	        peg$c100 = { type: "class", value: "[+-]", description: "[+-]" },
	        peg$c101 = /^[0-9]/,
	        peg$c102 = { type: "class", value: "[0-9]", description: "[0-9]" },
	        peg$c103 = { type: "other", description: "[" },
	        peg$c104 = "[",
	        peg$c105 = { type: "literal", value: "[", description: "\"[\"" },
	        peg$c106 = { type: "other", description: "]" },
	        peg$c107 = "]",
	        peg$c108 = { type: "literal", value: "]", description: "\"]\"" },
	        peg$c109 = { type: "other", description: "(" },
	        peg$c110 = "(",
	        peg$c111 = { type: "literal", value: "(", description: "\"(\"" },
	        peg$c112 = { type: "other", description: ")" },
	        peg$c113 = ")",
	        peg$c114 = { type: "literal", value: ")", description: "\")\"" },
	        peg$c115 = ",",
	        peg$c116 = { type: "literal", value: ",", description: "\",\"" },
	        peg$c117 = "|",
	        peg$c118 = { type: "literal", value: "|", description: "\"|\"" },
	        peg$c119 = { type: "other", description: "Name" },
	        peg$c120 = function(name) { return name; },
	        peg$c121 = /^[a-z0-9_]/i,
	        peg$c122 = { type: "class", value: "[a-z0-9_]i", description: "[a-z0-9_]i" },
	        peg$c123 = { type: "other", description: "TypeName" },
	        peg$c124 = /^[A-Z_\/]/,
	        peg$c125 = { type: "class", value: "[A-Z_/]", description: "[A-Z_/]" },
	        peg$c126 = { type: "other", description: "NotSQuote" },
	        peg$c127 = /^[^']/,
	        peg$c128 = { type: "class", value: "[^']", description: "[^']" },
	        peg$c129 = { type: "other", description: "NotDQuote" },
	        peg$c130 = /^[^"]/,
	        peg$c131 = { type: "class", value: "[^\"]", description: "[^\"]" },
	        peg$c132 = { type: "other", description: "Whitespace" },
	        peg$c133 = /^[ \t\r\n]/,
	        peg$c134 = { type: "class", value: "[ \\t\\r\\n]", description: "[ \\t\\r\\n]" },

	        peg$currPos          = 0,
	        peg$savedPos         = 0,
	        peg$posDetailsCache  = [{ line: 1, column: 1, seenCR: false }],
	        peg$maxFailPos       = 0,
	        peg$maxFailExpected  = [],
	        peg$silentFails      = 0,

	        peg$result;

	    if ("startRule" in options) {
	      if (!(options.startRule in peg$startRuleFunctions)) {
	        throw new Error("Can't start parsing from rule \"" + options.startRule + "\".");
	      }

	      peg$startRuleFunction = peg$startRuleFunctions[options.startRule];
	    }

	    function text() {
	      return input.substring(peg$savedPos, peg$currPos);
	    }

	    function location() {
	      return peg$computeLocation(peg$savedPos, peg$currPos);
	    }

	    function expected(description) {
	      throw peg$buildException(
	        null,
	        [{ type: "other", description: description }],
	        input.substring(peg$savedPos, peg$currPos),
	        peg$computeLocation(peg$savedPos, peg$currPos)
	      );
	    }

	    function error(message) {
	      throw peg$buildException(
	        message,
	        null,
	        input.substring(peg$savedPos, peg$currPos),
	        peg$computeLocation(peg$savedPos, peg$currPos)
	      );
	    }

	    function peg$computePosDetails(pos) {
	      var details = peg$posDetailsCache[pos],
	          p, ch;

	      if (details) {
	        return details;
	      } else {
	        p = pos - 1;
	        while (!peg$posDetailsCache[p]) {
	          p--;
	        }

	        details = peg$posDetailsCache[p];
	        details = {
	          line:   details.line,
	          column: details.column,
	          seenCR: details.seenCR
	        };

	        while (p < pos) {
	          ch = input.charAt(p);
	          if (ch === "\n") {
	            if (!details.seenCR) { details.line++; }
	            details.column = 1;
	            details.seenCR = false;
	          } else if (ch === "\r" || ch === "\u2028" || ch === "\u2029") {
	            details.line++;
	            details.column = 1;
	            details.seenCR = true;
	          } else {
	            details.column++;
	            details.seenCR = false;
	          }

	          p++;
	        }

	        peg$posDetailsCache[pos] = details;
	        return details;
	      }
	    }

	    function peg$computeLocation(startPos, endPos) {
	      var startPosDetails = peg$computePosDetails(startPos),
	          endPosDetails   = peg$computePosDetails(endPos);

	      return {
	        start: {
	          offset: startPos,
	          line:   startPosDetails.line,
	          column: startPosDetails.column
	        },
	        end: {
	          offset: endPos,
	          line:   endPosDetails.line,
	          column: endPosDetails.column
	        }
	      };
	    }

	    function peg$fail(expected) {
	      if (peg$currPos < peg$maxFailPos) { return; }

	      if (peg$currPos > peg$maxFailPos) {
	        peg$maxFailPos = peg$currPos;
	        peg$maxFailExpected = [];
	      }

	      peg$maxFailExpected.push(expected);
	    }

	    function peg$buildException(message, expected, found, location) {
	      function cleanupExpected(expected) {
	        var i = 1;

	        expected.sort(function(a, b) {
	          if (a.description < b.description) {
	            return -1;
	          } else if (a.description > b.description) {
	            return 1;
	          } else {
	            return 0;
	          }
	        });

	        while (i < expected.length) {
	          if (expected[i - 1] === expected[i]) {
	            expected.splice(i, 1);
	          } else {
	            i++;
	          }
	        }
	      }

	      function buildMessage(expected, found) {
	        function stringEscape(s) {
	          function hex(ch) { return ch.charCodeAt(0).toString(16).toUpperCase(); }

	          return s
	            .replace(/\\/g,   '\\\\')
	            .replace(/"/g,    '\\"')
	            .replace(/\x08/g, '\\b')
	            .replace(/\t/g,   '\\t')
	            .replace(/\n/g,   '\\n')
	            .replace(/\f/g,   '\\f')
	            .replace(/\r/g,   '\\r')
	            .replace(/[\x00-\x07\x0B\x0E\x0F]/g, function(ch) { return '\\x0' + hex(ch); })
	            .replace(/[\x10-\x1F\x80-\xFF]/g,    function(ch) { return '\\x'  + hex(ch); })
	            .replace(/[\u0100-\u0FFF]/g,         function(ch) { return '\\u0' + hex(ch); })
	            .replace(/[\u1000-\uFFFF]/g,         function(ch) { return '\\u'  + hex(ch); });
	        }

	        var expectedDescs = new Array(expected.length),
	            expectedDesc, foundDesc, i;

	        for (i = 0; i < expected.length; i++) {
	          expectedDescs[i] = expected[i].description;
	        }

	        expectedDesc = expected.length > 1
	          ? expectedDescs.slice(0, -1).join(", ")
	              + " or "
	              + expectedDescs[expected.length - 1]
	          : expectedDescs[0];

	        foundDesc = found ? "\"" + stringEscape(found) + "\"" : "end of input";

	        return "Expected " + expectedDesc + " but " + foundDesc + " found.";
	      }

	      if (expected !== null) {
	        cleanupExpected(expected);
	      }

	      return new peg$SyntaxError(
	        message !== null ? message : buildMessage(expected, found),
	        expected,
	        found,
	        location
	      );
	    }

	    function peg$parsestart() {
	      var s0, s1, s2;

	      s0 = peg$currPos;
	      s1 = peg$parse_();
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parseOrExpression();
	        if (s2 !== peg$FAILED) {
	          peg$savedPos = s0;
	          s1 = peg$c0(s2);
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseOrExpression() {
	      var s0, s1, s2, s3, s4, s5;

	      s0 = peg$currPos;
	      s1 = peg$parseAndExpression();
	      if (s1 !== peg$FAILED) {
	        s2 = [];
	        s3 = peg$currPos;
	        s4 = peg$parseOrToken();
	        if (s4 !== peg$FAILED) {
	          s5 = peg$parseAndExpression();
	          if (s5 !== peg$FAILED) {
	            s4 = [s4, s5];
	            s3 = s4;
	          } else {
	            peg$currPos = s3;
	            s3 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s3;
	          s3 = peg$FAILED;
	        }
	        while (s3 !== peg$FAILED) {
	          s2.push(s3);
	          s3 = peg$currPos;
	          s4 = peg$parseOrToken();
	          if (s4 !== peg$FAILED) {
	            s5 = peg$parseAndExpression();
	            if (s5 !== peg$FAILED) {
	              s4 = [s4, s5];
	              s3 = s4;
	            } else {
	              peg$currPos = s3;
	              s3 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s3;
	            s3 = peg$FAILED;
	          }
	        }
	        if (s2 !== peg$FAILED) {
	          peg$savedPos = s0;
	          s1 = peg$c1(s1, s2);
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseAndExpression() {
	      var s0, s1, s2, s3, s4, s5;

	      s0 = peg$currPos;
	      s1 = peg$parseNotExpression();
	      if (s1 !== peg$FAILED) {
	        s2 = [];
	        s3 = peg$currPos;
	        s4 = peg$parseAndToken();
	        if (s4 !== peg$FAILED) {
	          s5 = peg$parseNotExpression();
	          if (s5 !== peg$FAILED) {
	            s4 = [s4, s5];
	            s3 = s4;
	          } else {
	            peg$currPos = s3;
	            s3 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s3;
	          s3 = peg$FAILED;
	        }
	        while (s3 !== peg$FAILED) {
	          s2.push(s3);
	          s3 = peg$currPos;
	          s4 = peg$parseAndToken();
	          if (s4 !== peg$FAILED) {
	            s5 = peg$parseNotExpression();
	            if (s5 !== peg$FAILED) {
	              s4 = [s4, s5];
	              s3 = s4;
	            } else {
	              peg$currPos = s3;
	              s3 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s3;
	            s3 = peg$FAILED;
	          }
	        }
	        if (s2 !== peg$FAILED) {
	          peg$savedPos = s0;
	          s1 = peg$c2(s1, s2);
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseNotExpression() {
	      var s0, s1, s2;

	      s0 = peg$currPos;
	      s1 = peg$parseNotToken();
	      if (s1 === peg$FAILED) {
	        s1 = null;
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parseComparisonExpression();
	        if (s2 !== peg$FAILED) {
	          peg$savedPos = s0;
	          s1 = peg$c3(s1, s2);
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseComparisonExpression() {
	      var s0, s1, s2, s3, s4, s5;

	      s0 = peg$currPos;
	      s1 = peg$parseConcatExpression();
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        s3 = peg$parseComparisonOp();
	        if (s3 !== peg$FAILED) {
	          s4 = peg$parse_();
	          if (s4 !== peg$FAILED) {
	            s5 = peg$parseConcatExpression();
	            if (s5 !== peg$FAILED) {
	              s3 = [s3, s4, s5];
	              s2 = s3;
	            } else {
	              peg$currPos = s2;
	              s2 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s2;
	            s2 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 === peg$FAILED) {
	          s2 = null;
	        }
	        if (s2 !== peg$FAILED) {
	          peg$savedPos = s0;
	          s1 = peg$c4(s1, s2);
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseComparisonOp() {
	      var s0, s1;

	      peg$silentFails++;
	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 2) === peg$c6) {
	        s1 = peg$c6;
	        peg$currPos += 2;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c7); }
	      }
	      if (s1 !== peg$FAILED) {
	        peg$savedPos = s0;
	        s1 = peg$c8();
	      }
	      s0 = s1;
	      if (s0 === peg$FAILED) {
	        s0 = peg$currPos;
	        if (input.substr(peg$currPos, 2) === peg$c9) {
	          s1 = peg$c9;
	          peg$currPos += 2;
	        } else {
	          s1 = peg$FAILED;
	          if (peg$silentFails === 0) { peg$fail(peg$c10); }
	        }
	        if (s1 !== peg$FAILED) {
	          peg$savedPos = s0;
	          s1 = peg$c11();
	        }
	        s0 = s1;
	        if (s0 === peg$FAILED) {
	          s0 = peg$currPos;
	          if (input.substr(peg$currPos, 2) === peg$c12) {
	            s1 = peg$c12;
	            peg$currPos += 2;
	          } else {
	            s1 = peg$FAILED;
	            if (peg$silentFails === 0) { peg$fail(peg$c13); }
	          }
	          if (s1 !== peg$FAILED) {
	            peg$savedPos = s0;
	            s1 = peg$c14();
	          }
	          s0 = s1;
	          if (s0 === peg$FAILED) {
	            s0 = peg$currPos;
	            if (input.substr(peg$currPos, 2) === peg$c15) {
	              s1 = peg$c15;
	              peg$currPos += 2;
	            } else {
	              s1 = peg$FAILED;
	              if (peg$silentFails === 0) { peg$fail(peg$c16); }
	            }
	            if (s1 !== peg$FAILED) {
	              peg$savedPos = s0;
	              s1 = peg$c17();
	            }
	            s0 = s1;
	            if (s0 === peg$FAILED) {
	              s0 = peg$currPos;
	              if (input.substr(peg$currPos, 2) === peg$c18) {
	                s1 = peg$c18;
	                peg$currPos += 2;
	              } else {
	                s1 = peg$FAILED;
	                if (peg$silentFails === 0) { peg$fail(peg$c19); }
	              }
	              if (s1 !== peg$FAILED) {
	                peg$savedPos = s0;
	                s1 = peg$c20();
	              }
	              s0 = s1;
	              if (s0 === peg$FAILED) {
	                s0 = peg$currPos;
	                if (input.charCodeAt(peg$currPos) === 60) {
	                  s1 = peg$c21;
	                  peg$currPos++;
	                } else {
	                  s1 = peg$FAILED;
	                  if (peg$silentFails === 0) { peg$fail(peg$c22); }
	                }
	                if (s1 !== peg$FAILED) {
	                  peg$savedPos = s0;
	                  s1 = peg$c23();
	                }
	                s0 = s1;
	                if (s0 === peg$FAILED) {
	                  s0 = peg$currPos;
	                  if (input.charCodeAt(peg$currPos) === 62) {
	                    s1 = peg$c24;
	                    peg$currPos++;
	                  } else {
	                    s1 = peg$FAILED;
	                    if (peg$silentFails === 0) { peg$fail(peg$c25); }
	                  }
	                  if (s1 !== peg$FAILED) {
	                    peg$savedPos = s0;
	                    s1 = peg$c26();
	                  }
	                  s0 = s1;
	                }
	              }
	            }
	          }
	        }
	      }
	      peg$silentFails--;
	      if (s0 === peg$FAILED) {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c5); }
	      }

	      return s0;
	    }

	    function peg$parseConcatExpression() {
	      var s0, s1, s2, s3, s4, s5;

	      s0 = peg$currPos;
	      s1 = peg$parseAdditiveExpression();
	      if (s1 !== peg$FAILED) {
	        s2 = [];
	        s3 = peg$currPos;
	        s4 = peg$parseConcatToken();
	        if (s4 !== peg$FAILED) {
	          s5 = peg$parseAdditiveExpression();
	          if (s5 !== peg$FAILED) {
	            s4 = [s4, s5];
	            s3 = s4;
	          } else {
	            peg$currPos = s3;
	            s3 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s3;
	          s3 = peg$FAILED;
	        }
	        while (s3 !== peg$FAILED) {
	          s2.push(s3);
	          s3 = peg$currPos;
	          s4 = peg$parseConcatToken();
	          if (s4 !== peg$FAILED) {
	            s5 = peg$parseAdditiveExpression();
	            if (s5 !== peg$FAILED) {
	              s4 = [s4, s5];
	              s3 = s4;
	            } else {
	              peg$currPos = s3;
	              s3 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s3;
	            s3 = peg$FAILED;
	          }
	        }
	        if (s2 !== peg$FAILED) {
	          peg$savedPos = s0;
	          s1 = peg$c27(s1, s2);
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseAdditiveExpression() {
	      var s0, s1, s2, s3, s4, s5;

	      s0 = peg$currPos;
	      s1 = peg$parseMultiplicativeExpression();
	      if (s1 !== peg$FAILED) {
	        s2 = [];
	        s3 = peg$currPos;
	        s4 = peg$parseAdditiveOp();
	        if (s4 !== peg$FAILED) {
	          s5 = peg$parseMultiplicativeExpression();
	          if (s5 !== peg$FAILED) {
	            s4 = [s4, s5];
	            s3 = s4;
	          } else {
	            peg$currPos = s3;
	            s3 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s3;
	          s3 = peg$FAILED;
	        }
	        while (s3 !== peg$FAILED) {
	          s2.push(s3);
	          s3 = peg$currPos;
	          s4 = peg$parseAdditiveOp();
	          if (s4 !== peg$FAILED) {
	            s5 = peg$parseMultiplicativeExpression();
	            if (s5 !== peg$FAILED) {
	              s4 = [s4, s5];
	              s3 = s4;
	            } else {
	              peg$currPos = s3;
	              s3 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s3;
	            s3 = peg$FAILED;
	          }
	        }
	        if (s2 !== peg$FAILED) {
	          peg$savedPos = s0;
	          s1 = peg$c28(s1, s2);
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseAdditiveOp() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.charCodeAt(peg$currPos) === 43) {
	        s1 = peg$c29;
	        peg$currPos++;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c30); }
	      }
	      if (s1 === peg$FAILED) {
	        if (input.charCodeAt(peg$currPos) === 45) {
	          s1 = peg$c31;
	          peg$currPos++;
	        } else {
	          s1 = peg$FAILED;
	          if (peg$silentFails === 0) { peg$fail(peg$c32); }
	        }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        if (input.charCodeAt(peg$currPos) === 43) {
	          s3 = peg$c29;
	          peg$currPos++;
	        } else {
	          s3 = peg$FAILED;
	          if (peg$silentFails === 0) { peg$fail(peg$c30); }
	        }
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            peg$savedPos = s0;
	            s1 = peg$c33(s1);
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseMultiplicativeExpression() {
	      var s0, s1, s2, s3, s4, s5;

	      s0 = peg$currPos;
	      s1 = peg$parseExponentialExpression();
	      if (s1 !== peg$FAILED) {
	        s2 = [];
	        s3 = peg$currPos;
	        s4 = peg$parseMultiplicativeOp();
	        if (s4 !== peg$FAILED) {
	          s5 = peg$parseExponentialExpression();
	          if (s5 !== peg$FAILED) {
	            s4 = [s4, s5];
	            s3 = s4;
	          } else {
	            peg$currPos = s3;
	            s3 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s3;
	          s3 = peg$FAILED;
	        }
	        while (s3 !== peg$FAILED) {
	          s2.push(s3);
	          s3 = peg$currPos;
	          s4 = peg$parseMultiplicativeOp();
	          if (s4 !== peg$FAILED) {
	            s5 = peg$parseExponentialExpression();
	            if (s5 !== peg$FAILED) {
	              s4 = [s4, s5];
	              s3 = s4;
	            } else {
	              peg$currPos = s3;
	              s3 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s3;
	            s3 = peg$FAILED;
	          }
	        }
	        if (s2 !== peg$FAILED) {
	          peg$savedPos = s0;
	          s1 = peg$c34(s1, s2);
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseMultiplicativeOp() {
	      var s0, s1, s2;

	      s0 = peg$currPos;
	      if (input.charCodeAt(peg$currPos) === 42) {
	        s1 = peg$c35;
	        peg$currPos++;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c36); }
	      }
	      if (s1 === peg$FAILED) {
	        if (input.charCodeAt(peg$currPos) === 47) {
	          s1 = peg$c37;
	          peg$currPos++;
	        } else {
	          s1 = peg$FAILED;
	          if (peg$silentFails === 0) { peg$fail(peg$c38); }
	        }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parse_();
	        if (s2 !== peg$FAILED) {
	          peg$savedPos = s0;
	          s1 = peg$c33(s1);
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseExponentialExpression() {
	      var s0, s1, s2, s3, s4;

	      s0 = peg$currPos;
	      s1 = peg$parseUnaryExpression();
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        s3 = peg$parseExponentialOp();
	        if (s3 !== peg$FAILED) {
	          s4 = peg$parseExponentialExpression();
	          if (s4 !== peg$FAILED) {
	            s3 = [s3, s4];
	            s2 = s3;
	          } else {
	            peg$currPos = s2;
	            s2 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 === peg$FAILED) {
	          s2 = null;
	        }
	        if (s2 !== peg$FAILED) {
	          peg$savedPos = s0;
	          s1 = peg$c39(s1, s2);
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseExponentialOp() {
	      var s0, s1, s2;

	      s0 = peg$currPos;
	      if (input.charCodeAt(peg$currPos) === 94) {
	        s1 = peg$c40;
	        peg$currPos++;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c41); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parse_();
	        if (s2 !== peg$FAILED) {
	          s1 = [s1, s2];
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseUnaryExpression() {
	      var s0, s1, s2, s3, s4, s5;

	      s0 = peg$currPos;
	      s1 = peg$parseAdditiveOp();
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parse_();
	        if (s2 !== peg$FAILED) {
	          s3 = peg$currPos;
	          peg$silentFails++;
	          s4 = peg$parseNumber();
	          peg$silentFails--;
	          if (s4 === peg$FAILED) {
	            s3 = void 0;
	          } else {
	            peg$currPos = s3;
	            s3 = peg$FAILED;
	          }
	          if (s3 !== peg$FAILED) {
	            s4 = peg$parseCallChainExpression();
	            if (s4 !== peg$FAILED) {
	              peg$savedPos = s0;
	              s1 = peg$c42(s1, s4);
	              s0 = s1;
	            } else {
	              peg$currPos = s0;
	              s0 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }
	      if (s0 === peg$FAILED) {
	        s0 = peg$parseCallChainExpression();
	        if (s0 === peg$FAILED) {
	          s0 = peg$currPos;
	          s1 = peg$parsePipe();
	          if (s1 !== peg$FAILED) {
	            s2 = peg$parse_();
	            if (s2 !== peg$FAILED) {
	              s3 = peg$parseOrExpression();
	              if (s3 !== peg$FAILED) {
	                s4 = peg$parse_();
	                if (s4 !== peg$FAILED) {
	                  s5 = peg$parsePipe();
	                  if (s5 !== peg$FAILED) {
	                    peg$savedPos = s0;
	                    s1 = peg$c43(s3);
	                    s0 = s1;
	                  } else {
	                    peg$currPos = s0;
	                    s0 = peg$FAILED;
	                  }
	                } else {
	                  peg$currPos = s0;
	                  s0 = peg$FAILED;
	                }
	              } else {
	                peg$currPos = s0;
	                s0 = peg$FAILED;
	              }
	            } else {
	              peg$currPos = s0;
	              s0 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        }
	      }

	      return s0;
	    }

	    function peg$parseCallChainExpression() {
	      var s0, s1, s2, s3, s4, s5, s6, s7, s8;

	      s0 = peg$currPos;
	      s1 = peg$parseBasicExpression();
	      if (s1 !== peg$FAILED) {
	        s2 = [];
	        s3 = peg$currPos;
	        s4 = peg$parseDot();
	        if (s4 !== peg$FAILED) {
	          s5 = peg$parseName();
	          if (s5 !== peg$FAILED) {
	            s6 = peg$parseOpenParen();
	            if (s6 !== peg$FAILED) {
	              s7 = peg$parseParams();
	              if (s7 === peg$FAILED) {
	                s7 = null;
	              }
	              if (s7 !== peg$FAILED) {
	                s8 = peg$parseCloseParen();
	                if (s8 !== peg$FAILED) {
	                  s4 = [s4, s5, s6, s7, s8];
	                  s3 = s4;
	                } else {
	                  peg$currPos = s3;
	                  s3 = peg$FAILED;
	                }
	              } else {
	                peg$currPos = s3;
	                s3 = peg$FAILED;
	              }
	            } else {
	              peg$currPos = s3;
	              s3 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s3;
	            s3 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s3;
	          s3 = peg$FAILED;
	        }
	        while (s3 !== peg$FAILED) {
	          s2.push(s3);
	          s3 = peg$currPos;
	          s4 = peg$parseDot();
	          if (s4 !== peg$FAILED) {
	            s5 = peg$parseName();
	            if (s5 !== peg$FAILED) {
	              s6 = peg$parseOpenParen();
	              if (s6 !== peg$FAILED) {
	                s7 = peg$parseParams();
	                if (s7 === peg$FAILED) {
	                  s7 = null;
	                }
	                if (s7 !== peg$FAILED) {
	                  s8 = peg$parseCloseParen();
	                  if (s8 !== peg$FAILED) {
	                    s4 = [s4, s5, s6, s7, s8];
	                    s3 = s4;
	                  } else {
	                    peg$currPos = s3;
	                    s3 = peg$FAILED;
	                  }
	                } else {
	                  peg$currPos = s3;
	                  s3 = peg$FAILED;
	                }
	              } else {
	                peg$currPos = s3;
	                s3 = peg$FAILED;
	              }
	            } else {
	              peg$currPos = s3;
	              s3 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s3;
	            s3 = peg$FAILED;
	          }
	        }
	        if (s2 !== peg$FAILED) {
	          peg$savedPos = s0;
	          s1 = peg$c44(s1, s2);
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseParams() {
	      var s0, s1, s2, s3, s4, s5;

	      s0 = peg$currPos;
	      s1 = peg$parseOrExpression();
	      if (s1 !== peg$FAILED) {
	        s2 = [];
	        s3 = peg$currPos;
	        s4 = peg$parseComma();
	        if (s4 !== peg$FAILED) {
	          s5 = peg$parseOrExpression();
	          if (s5 !== peg$FAILED) {
	            s4 = [s4, s5];
	            s3 = s4;
	          } else {
	            peg$currPos = s3;
	            s3 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s3;
	          s3 = peg$FAILED;
	        }
	        while (s3 !== peg$FAILED) {
	          s2.push(s3);
	          s3 = peg$currPos;
	          s4 = peg$parseComma();
	          if (s4 !== peg$FAILED) {
	            s5 = peg$parseOrExpression();
	            if (s5 !== peg$FAILED) {
	              s4 = [s4, s5];
	              s3 = s4;
	            } else {
	              peg$currPos = s3;
	              s3 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s3;
	            s3 = peg$FAILED;
	          }
	        }
	        if (s2 !== peg$FAILED) {
	          peg$savedPos = s0;
	          s1 = peg$c45(s1, s2);
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseBasicExpression() {
	      var s0, s1, s2, s3, s4;

	      s0 = peg$currPos;
	      s1 = peg$parseOpenParen();
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parse_();
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parseOrExpression();
	          if (s3 !== peg$FAILED) {
	            s4 = peg$parseCloseParen();
	            if (s4 !== peg$FAILED) {
	              peg$savedPos = s0;
	              s1 = peg$c0(s3);
	              s0 = s1;
	            } else {
	              peg$currPos = s0;
	              s0 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }
	      if (s0 === peg$FAILED) {
	        s0 = peg$currPos;
	        if (input.substr(peg$currPos, 3) === peg$c46) {
	          s1 = peg$c46;
	          peg$currPos += 3;
	        } else {
	          s1 = peg$FAILED;
	          if (peg$silentFails === 0) { peg$fail(peg$c47); }
	        }
	        if (s1 !== peg$FAILED) {
	          s2 = peg$parseOpenParen();
	          if (s2 !== peg$FAILED) {
	            s3 = peg$parseCloseParen();
	            if (s3 !== peg$FAILED) {
	              peg$savedPos = s0;
	              s1 = peg$c48();
	              s0 = s1;
	            } else {
	              peg$currPos = s0;
	              s0 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	        if (s0 === peg$FAILED) {
	          s0 = peg$parseRefExpression();
	          if (s0 === peg$FAILED) {
	            s0 = peg$parseLiteralExpression();
	          }
	        }
	      }

	      return s0;
	    }

	    function peg$parseRefExpression() {
	      var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10;

	      s0 = peg$currPos;
	      if (input.charCodeAt(peg$currPos) === 36) {
	        s1 = peg$c49;
	        peg$currPos++;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c50); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        s3 = peg$currPos;
	        s4 = [];
	        if (input.charCodeAt(peg$currPos) === 94) {
	          s5 = peg$c40;
	          peg$currPos++;
	        } else {
	          s5 = peg$FAILED;
	          if (peg$silentFails === 0) { peg$fail(peg$c41); }
	        }
	        while (s5 !== peg$FAILED) {
	          s4.push(s5);
	          if (input.charCodeAt(peg$currPos) === 94) {
	            s5 = peg$c40;
	            peg$currPos++;
	          } else {
	            s5 = peg$FAILED;
	            if (peg$silentFails === 0) { peg$fail(peg$c41); }
	          }
	        }
	        if (s4 !== peg$FAILED) {
	          s5 = peg$parseNamePart();
	          if (s5 !== peg$FAILED) {
	            s6 = peg$currPos;
	            if (input.charCodeAt(peg$currPos) === 58) {
	              s7 = peg$c51;
	              peg$currPos++;
	            } else {
	              s7 = peg$FAILED;
	              if (peg$silentFails === 0) { peg$fail(peg$c52); }
	            }
	            if (s7 !== peg$FAILED) {
	              s8 = peg$parseTypeName();
	              if (s8 !== peg$FAILED) {
	                s7 = [s7, s8];
	                s6 = s7;
	              } else {
	                peg$currPos = s6;
	                s6 = peg$FAILED;
	              }
	            } else {
	              peg$currPos = s6;
	              s6 = peg$FAILED;
	            }
	            if (s6 === peg$FAILED) {
	              s6 = null;
	            }
	            if (s6 !== peg$FAILED) {
	              s4 = [s4, s5, s6];
	              s3 = s4;
	            } else {
	              peg$currPos = s3;
	              s3 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s3;
	            s3 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s3;
	          s3 = peg$FAILED;
	        }
	        if (s3 !== peg$FAILED) {
	          s2 = input.substring(s2, peg$currPos);
	        } else {
	          s2 = s3;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            peg$savedPos = s0;
	            s1 = peg$c53(s2);
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }
	      if (s0 === peg$FAILED) {
	        s0 = peg$currPos;
	        if (input.charCodeAt(peg$currPos) === 36) {
	          s1 = peg$c49;
	          peg$currPos++;
	        } else {
	          s1 = peg$FAILED;
	          if (peg$silentFails === 0) { peg$fail(peg$c50); }
	        }
	        if (s1 !== peg$FAILED) {
	          s2 = peg$currPos;
	          s3 = peg$currPos;
	          s4 = [];
	          if (input.charCodeAt(peg$currPos) === 94) {
	            s5 = peg$c40;
	            peg$currPos++;
	          } else {
	            s5 = peg$FAILED;
	            if (peg$silentFails === 0) { peg$fail(peg$c41); }
	          }
	          while (s5 !== peg$FAILED) {
	            s4.push(s5);
	            if (input.charCodeAt(peg$currPos) === 94) {
	              s5 = peg$c40;
	              peg$currPos++;
	            } else {
	              s5 = peg$FAILED;
	              if (peg$silentFails === 0) { peg$fail(peg$c41); }
	            }
	          }
	          if (s4 !== peg$FAILED) {
	            if (input.charCodeAt(peg$currPos) === 123) {
	              s5 = peg$c54;
	              peg$currPos++;
	            } else {
	              s5 = peg$FAILED;
	              if (peg$silentFails === 0) { peg$fail(peg$c55); }
	            }
	            if (s5 !== peg$FAILED) {
	              s6 = [];
	              if (peg$c56.test(input.charAt(peg$currPos))) {
	                s7 = input.charAt(peg$currPos);
	                peg$currPos++;
	              } else {
	                s7 = peg$FAILED;
	                if (peg$silentFails === 0) { peg$fail(peg$c57); }
	              }
	              if (s7 !== peg$FAILED) {
	                while (s7 !== peg$FAILED) {
	                  s6.push(s7);
	                  if (peg$c56.test(input.charAt(peg$currPos))) {
	                    s7 = input.charAt(peg$currPos);
	                    peg$currPos++;
	                  } else {
	                    s7 = peg$FAILED;
	                    if (peg$silentFails === 0) { peg$fail(peg$c57); }
	                  }
	                }
	              } else {
	                s6 = peg$FAILED;
	              }
	              if (s6 !== peg$FAILED) {
	                if (input.charCodeAt(peg$currPos) === 125) {
	                  s7 = peg$c58;
	                  peg$currPos++;
	                } else {
	                  s7 = peg$FAILED;
	                  if (peg$silentFails === 0) { peg$fail(peg$c59); }
	                }
	                if (s7 !== peg$FAILED) {
	                  s8 = peg$currPos;
	                  if (input.charCodeAt(peg$currPos) === 58) {
	                    s9 = peg$c51;
	                    peg$currPos++;
	                  } else {
	                    s9 = peg$FAILED;
	                    if (peg$silentFails === 0) { peg$fail(peg$c52); }
	                  }
	                  if (s9 !== peg$FAILED) {
	                    s10 = peg$parseTypeName();
	                    if (s10 !== peg$FAILED) {
	                      s9 = [s9, s10];
	                      s8 = s9;
	                    } else {
	                      peg$currPos = s8;
	                      s8 = peg$FAILED;
	                    }
	                  } else {
	                    peg$currPos = s8;
	                    s8 = peg$FAILED;
	                  }
	                  if (s8 === peg$FAILED) {
	                    s8 = null;
	                  }
	                  if (s8 !== peg$FAILED) {
	                    s4 = [s4, s5, s6, s7, s8];
	                    s3 = s4;
	                  } else {
	                    peg$currPos = s3;
	                    s3 = peg$FAILED;
	                  }
	                } else {
	                  peg$currPos = s3;
	                  s3 = peg$FAILED;
	                }
	              } else {
	                peg$currPos = s3;
	                s3 = peg$FAILED;
	              }
	            } else {
	              peg$currPos = s3;
	              s3 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s3;
	            s3 = peg$FAILED;
	          }
	          if (s3 !== peg$FAILED) {
	            s2 = input.substring(s2, peg$currPos);
	          } else {
	            s2 = s3;
	          }
	          if (s2 !== peg$FAILED) {
	            s3 = peg$parse_();
	            if (s3 !== peg$FAILED) {
	              peg$savedPos = s0;
	              s1 = peg$c53(s2);
	              s0 = s1;
	            } else {
	              peg$currPos = s0;
	              s0 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      }

	      return s0;
	    }

	    function peg$parseLiteralExpression() {
	      var s0, s1;

	      s0 = peg$currPos;
	      s1 = peg$parseNullToken();
	      if (s1 === peg$FAILED) {
	        s1 = peg$parseFalseToken();
	        if (s1 === peg$FAILED) {
	          s1 = peg$parseTrueToken();
	        }
	      }
	      if (s1 !== peg$FAILED) {
	        peg$savedPos = s0;
	        s1 = peg$c60(s1);
	      }
	      s0 = s1;
	      if (s0 === peg$FAILED) {
	        s0 = peg$currPos;
	        s1 = peg$parseNumber();
	        if (s1 !== peg$FAILED) {
	          peg$savedPos = s0;
	          s1 = peg$c60(s1);
	        }
	        s0 = s1;
	        if (s0 === peg$FAILED) {
	          s0 = peg$currPos;
	          s1 = peg$parseName();
	          if (s1 !== peg$FAILED) {
	            peg$savedPos = s0;
	            s1 = peg$c60(s1);
	          }
	          s0 = s1;
	          if (s0 === peg$FAILED) {
	            s0 = peg$currPos;
	            s1 = peg$parseString();
	            if (s1 !== peg$FAILED) {
	              peg$savedPos = s0;
	              s1 = peg$c60(s1);
	            }
	            s0 = s1;
	            if (s0 === peg$FAILED) {
	              s0 = peg$currPos;
	              s1 = peg$parseStringSet();
	              if (s1 !== peg$FAILED) {
	                peg$savedPos = s0;
	                s1 = peg$c60(s1);
	              }
	              s0 = s1;
	              if (s0 === peg$FAILED) {
	                s0 = peg$currPos;
	                s1 = peg$parseNumberSet();
	                if (s1 !== peg$FAILED) {
	                  peg$savedPos = s0;
	                  s1 = peg$c60(s1);
	                }
	                s0 = s1;
	              }
	            }
	          }
	        }
	      }

	      return s0;
	    }

	    function peg$parseStringSet() {
	      var s0, s1, s2, s3, s4, s5, s6;

	      peg$silentFails++;
	      s0 = peg$currPos;
	      s1 = peg$parseOpenBracket();
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parseStringOrNull();
	        if (s2 !== peg$FAILED) {
	          s3 = [];
	          s4 = peg$currPos;
	          s5 = peg$parseComma();
	          if (s5 !== peg$FAILED) {
	            s6 = peg$parseStringOrNull();
	            if (s6 !== peg$FAILED) {
	              s5 = [s5, s6];
	              s4 = s5;
	            } else {
	              peg$currPos = s4;
	              s4 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s4;
	            s4 = peg$FAILED;
	          }
	          while (s4 !== peg$FAILED) {
	            s3.push(s4);
	            s4 = peg$currPos;
	            s5 = peg$parseComma();
	            if (s5 !== peg$FAILED) {
	              s6 = peg$parseStringOrNull();
	              if (s6 !== peg$FAILED) {
	                s5 = [s5, s6];
	                s4 = s5;
	              } else {
	                peg$currPos = s4;
	                s4 = peg$FAILED;
	              }
	            } else {
	              peg$currPos = s4;
	              s4 = peg$FAILED;
	            }
	          }
	          if (s3 !== peg$FAILED) {
	            s4 = peg$parseCloseBracket();
	            if (s4 !== peg$FAILED) {
	              peg$savedPos = s0;
	              s1 = peg$c62(s2, s3);
	              s0 = s1;
	            } else {
	              peg$currPos = s0;
	              s0 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }
	      peg$silentFails--;
	      if (s0 === peg$FAILED) {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c61); }
	      }

	      return s0;
	    }

	    function peg$parseStringOrNull() {
	      var s0;

	      s0 = peg$parseString();
	      if (s0 === peg$FAILED) {
	        s0 = peg$parseNullToken();
	      }

	      return s0;
	    }

	    function peg$parseNumberSet() {
	      var s0, s1, s2, s3, s4, s5, s6;

	      peg$silentFails++;
	      s0 = peg$currPos;
	      s1 = peg$parseOpenBracket();
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parseNumberOrNull();
	        if (s2 !== peg$FAILED) {
	          s3 = [];
	          s4 = peg$currPos;
	          s5 = peg$parseComma();
	          if (s5 !== peg$FAILED) {
	            s6 = peg$parseNumberOrNull();
	            if (s6 !== peg$FAILED) {
	              s5 = [s5, s6];
	              s4 = s5;
	            } else {
	              peg$currPos = s4;
	              s4 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s4;
	            s4 = peg$FAILED;
	          }
	          while (s4 !== peg$FAILED) {
	            s3.push(s4);
	            s4 = peg$currPos;
	            s5 = peg$parseComma();
	            if (s5 !== peg$FAILED) {
	              s6 = peg$parseNumberOrNull();
	              if (s6 !== peg$FAILED) {
	                s5 = [s5, s6];
	                s4 = s5;
	              } else {
	                peg$currPos = s4;
	                s4 = peg$FAILED;
	              }
	            } else {
	              peg$currPos = s4;
	              s4 = peg$FAILED;
	            }
	          }
	          if (s3 !== peg$FAILED) {
	            s4 = peg$parseCloseBracket();
	            if (s4 !== peg$FAILED) {
	              peg$savedPos = s0;
	              s1 = peg$c62(s2, s3);
	              s0 = s1;
	            } else {
	              peg$currPos = s0;
	              s0 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }
	      peg$silentFails--;
	      if (s0 === peg$FAILED) {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c63); }
	      }

	      return s0;
	    }

	    function peg$parseNumberOrNull() {
	      var s0;

	      s0 = peg$parseNumber();
	      if (s0 === peg$FAILED) {
	        s0 = peg$parseNullToken();
	      }

	      return s0;
	    }

	    function peg$parseString() {
	      var s0, s1, s2, s3, s4;

	      peg$silentFails++;
	      s0 = peg$currPos;
	      if (input.charCodeAt(peg$currPos) === 39) {
	        s1 = peg$c65;
	        peg$currPos++;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c66); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parseNotSQuote();
	        if (s2 !== peg$FAILED) {
	          if (input.charCodeAt(peg$currPos) === 39) {
	            s3 = peg$c65;
	            peg$currPos++;
	          } else {
	            s3 = peg$FAILED;
	            if (peg$silentFails === 0) { peg$fail(peg$c66); }
	          }
	          if (s3 !== peg$FAILED) {
	            s4 = peg$parse_();
	            if (s4 !== peg$FAILED) {
	              peg$savedPos = s0;
	              s1 = peg$c67(s2);
	              s0 = s1;
	            } else {
	              peg$currPos = s0;
	              s0 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }
	      if (s0 === peg$FAILED) {
	        s0 = peg$currPos;
	        if (input.charCodeAt(peg$currPos) === 39) {
	          s1 = peg$c65;
	          peg$currPos++;
	        } else {
	          s1 = peg$FAILED;
	          if (peg$silentFails === 0) { peg$fail(peg$c66); }
	        }
	        if (s1 !== peg$FAILED) {
	          s2 = peg$parseNotSQuote();
	          if (s2 !== peg$FAILED) {
	            peg$savedPos = s0;
	            s1 = peg$c68(s2);
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	        if (s0 === peg$FAILED) {
	          s0 = peg$currPos;
	          if (input.charCodeAt(peg$currPos) === 34) {
	            s1 = peg$c69;
	            peg$currPos++;
	          } else {
	            s1 = peg$FAILED;
	            if (peg$silentFails === 0) { peg$fail(peg$c70); }
	          }
	          if (s1 !== peg$FAILED) {
	            s2 = peg$parseNotDQuote();
	            if (s2 !== peg$FAILED) {
	              if (input.charCodeAt(peg$currPos) === 34) {
	                s3 = peg$c69;
	                peg$currPos++;
	              } else {
	                s3 = peg$FAILED;
	                if (peg$silentFails === 0) { peg$fail(peg$c70); }
	              }
	              if (s3 !== peg$FAILED) {
	                s4 = peg$parse_();
	                if (s4 !== peg$FAILED) {
	                  peg$savedPos = s0;
	                  s1 = peg$c67(s2);
	                  s0 = s1;
	                } else {
	                  peg$currPos = s0;
	                  s0 = peg$FAILED;
	                }
	              } else {
	                peg$currPos = s0;
	                s0 = peg$FAILED;
	              }
	            } else {
	              peg$currPos = s0;
	              s0 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	          if (s0 === peg$FAILED) {
	            s0 = peg$currPos;
	            if (input.charCodeAt(peg$currPos) === 34) {
	              s1 = peg$c69;
	              peg$currPos++;
	            } else {
	              s1 = peg$FAILED;
	              if (peg$silentFails === 0) { peg$fail(peg$c70); }
	            }
	            if (s1 !== peg$FAILED) {
	              s2 = peg$parseNotDQuote();
	              if (s2 !== peg$FAILED) {
	                peg$savedPos = s0;
	                s1 = peg$c71(s2);
	                s0 = s1;
	              } else {
	                peg$currPos = s0;
	                s0 = peg$FAILED;
	              }
	            } else {
	              peg$currPos = s0;
	              s0 = peg$FAILED;
	            }
	          }
	        }
	      }
	      peg$silentFails--;
	      if (s0 === peg$FAILED) {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c64); }
	      }

	      return s0;
	    }

	    function peg$parseNullToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 4) === peg$c72) {
	        s1 = peg$c72;
	        peg$currPos += 4;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c73); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            peg$savedPos = s0;
	            s1 = peg$c74();
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseFalseToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 5) === peg$c75) {
	        s1 = peg$c75;
	        peg$currPos += 5;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c76); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            peg$savedPos = s0;
	            s1 = peg$c77();
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseTrueToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 4) === peg$c78) {
	        s1 = peg$c78;
	        peg$currPos += 4;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c79); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            peg$savedPos = s0;
	            s1 = peg$c80();
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseNotToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 3) === peg$c81) {
	        s1 = peg$c81;
	        peg$currPos += 3;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c82); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            s1 = [s1, s2, s3];
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseAndToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 3) === peg$c83) {
	        s1 = peg$c83;
	        peg$currPos += 3;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c84); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            s1 = [s1, s2, s3];
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseOrToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 2) === peg$c85) {
	        s1 = peg$c85;
	        peg$currPos += 2;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c86); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            s1 = [s1, s2, s3];
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseConcatToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 2) === peg$c87) {
	        s1 = peg$c87;
	        peg$currPos += 2;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c88); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            s1 = [s1, s2, s3];
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseIdentifierPart() {
	      var s0;

	      if (peg$c89.test(input.charAt(peg$currPos))) {
	        s0 = input.charAt(peg$currPos);
	        peg$currPos++;
	      } else {
	        s0 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c90); }
	      }

	      return s0;
	    }

	    function peg$parseNumber() {
	      var s0, s1, s2, s3, s4, s5;

	      peg$silentFails++;
	      s0 = peg$currPos;
	      s1 = peg$currPos;
	      s2 = peg$currPos;
	      s3 = peg$parseInt();
	      if (s3 !== peg$FAILED) {
	        s4 = peg$parseFraction();
	        if (s4 === peg$FAILED) {
	          s4 = null;
	        }
	        if (s4 !== peg$FAILED) {
	          s5 = peg$parseExp();
	          if (s5 === peg$FAILED) {
	            s5 = null;
	          }
	          if (s5 !== peg$FAILED) {
	            s3 = [s3, s4, s5];
	            s2 = s3;
	          } else {
	            peg$currPos = s2;
	            s2 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s2;
	        s2 = peg$FAILED;
	      }
	      if (s2 !== peg$FAILED) {
	        s1 = input.substring(s1, peg$currPos);
	      } else {
	        s1 = s2;
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parse_();
	        if (s2 !== peg$FAILED) {
	          peg$savedPos = s0;
	          s1 = peg$c92(s1);
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }
	      peg$silentFails--;
	      if (s0 === peg$FAILED) {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c91); }
	      }

	      return s0;
	    }

	    function peg$parseInt() {
	      var s0, s1, s2, s3, s4;

	      s0 = peg$currPos;
	      s1 = peg$currPos;
	      if (input.charCodeAt(peg$currPos) === 45) {
	        s2 = peg$c31;
	        peg$currPos++;
	      } else {
	        s2 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c32); }
	      }
	      if (s2 === peg$FAILED) {
	        s2 = null;
	      }
	      if (s2 !== peg$FAILED) {
	        if (peg$c93.test(input.charAt(peg$currPos))) {
	          s3 = input.charAt(peg$currPos);
	          peg$currPos++;
	        } else {
	          s3 = peg$FAILED;
	          if (peg$silentFails === 0) { peg$fail(peg$c94); }
	        }
	        if (s3 !== peg$FAILED) {
	          s4 = peg$parseDigits();
	          if (s4 !== peg$FAILED) {
	            s2 = [s2, s3, s4];
	            s1 = s2;
	          } else {
	            peg$currPos = s1;
	            s1 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s1;
	          s1 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s1;
	        s1 = peg$FAILED;
	      }
	      if (s1 !== peg$FAILED) {
	        s0 = input.substring(s0, peg$currPos);
	      } else {
	        s0 = s1;
	      }
	      if (s0 === peg$FAILED) {
	        s0 = peg$currPos;
	        s1 = peg$currPos;
	        if (input.charCodeAt(peg$currPos) === 45) {
	          s2 = peg$c31;
	          peg$currPos++;
	        } else {
	          s2 = peg$FAILED;
	          if (peg$silentFails === 0) { peg$fail(peg$c32); }
	        }
	        if (s2 === peg$FAILED) {
	          s2 = null;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parseDigit();
	          if (s3 !== peg$FAILED) {
	            s2 = [s2, s3];
	            s1 = s2;
	          } else {
	            peg$currPos = s1;
	            s1 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s1;
	          s1 = peg$FAILED;
	        }
	        if (s1 !== peg$FAILED) {
	          s0 = input.substring(s0, peg$currPos);
	        } else {
	          s0 = s1;
	        }
	      }

	      return s0;
	    }

	    function peg$parseFraction() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      s1 = peg$currPos;
	      if (input.charCodeAt(peg$currPos) === 46) {
	        s2 = peg$c95;
	        peg$currPos++;
	      } else {
	        s2 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c96); }
	      }
	      if (s2 !== peg$FAILED) {
	        s3 = peg$parseDigits();
	        if (s3 !== peg$FAILED) {
	          s2 = [s2, s3];
	          s1 = s2;
	        } else {
	          peg$currPos = s1;
	          s1 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s1;
	        s1 = peg$FAILED;
	      }
	      if (s1 !== peg$FAILED) {
	        s0 = input.substring(s0, peg$currPos);
	      } else {
	        s0 = s1;
	      }

	      return s0;
	    }

	    function peg$parseExp() {
	      var s0, s1, s2, s3, s4;

	      s0 = peg$currPos;
	      s1 = peg$currPos;
	      if (input.substr(peg$currPos, 1).toLowerCase() === peg$c97) {
	        s2 = input.charAt(peg$currPos);
	        peg$currPos++;
	      } else {
	        s2 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c98); }
	      }
	      if (s2 !== peg$FAILED) {
	        if (peg$c99.test(input.charAt(peg$currPos))) {
	          s3 = input.charAt(peg$currPos);
	          peg$currPos++;
	        } else {
	          s3 = peg$FAILED;
	          if (peg$silentFails === 0) { peg$fail(peg$c100); }
	        }
	        if (s3 === peg$FAILED) {
	          s3 = null;
	        }
	        if (s3 !== peg$FAILED) {
	          s4 = peg$parseDigits();
	          if (s4 !== peg$FAILED) {
	            s2 = [s2, s3, s4];
	            s1 = s2;
	          } else {
	            peg$currPos = s1;
	            s1 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s1;
	          s1 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s1;
	        s1 = peg$FAILED;
	      }
	      if (s1 !== peg$FAILED) {
	        s0 = input.substring(s0, peg$currPos);
	      } else {
	        s0 = s1;
	      }

	      return s0;
	    }

	    function peg$parseDigits() {
	      var s0, s1, s2;

	      s0 = peg$currPos;
	      s1 = [];
	      s2 = peg$parseDigit();
	      if (s2 !== peg$FAILED) {
	        while (s2 !== peg$FAILED) {
	          s1.push(s2);
	          s2 = peg$parseDigit();
	        }
	      } else {
	        s1 = peg$FAILED;
	      }
	      if (s1 !== peg$FAILED) {
	        s0 = input.substring(s0, peg$currPos);
	      } else {
	        s0 = s1;
	      }

	      return s0;
	    }

	    function peg$parseDigit() {
	      var s0;

	      if (peg$c101.test(input.charAt(peg$currPos))) {
	        s0 = input.charAt(peg$currPos);
	        peg$currPos++;
	      } else {
	        s0 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c102); }
	      }

	      return s0;
	    }

	    function peg$parseOpenBracket() {
	      var s0, s1, s2;

	      peg$silentFails++;
	      s0 = peg$currPos;
	      if (input.charCodeAt(peg$currPos) === 91) {
	        s1 = peg$c104;
	        peg$currPos++;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c105); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parse_();
	        if (s2 !== peg$FAILED) {
	          s1 = [s1, s2];
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }
	      peg$silentFails--;
	      if (s0 === peg$FAILED) {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c103); }
	      }

	      return s0;
	    }

	    function peg$parseCloseBracket() {
	      var s0, s1, s2;

	      peg$silentFails++;
	      s0 = peg$currPos;
	      if (input.charCodeAt(peg$currPos) === 93) {
	        s1 = peg$c107;
	        peg$currPos++;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c108); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parse_();
	        if (s2 !== peg$FAILED) {
	          s1 = [s1, s2];
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }
	      peg$silentFails--;
	      if (s0 === peg$FAILED) {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c106); }
	      }

	      return s0;
	    }

	    function peg$parseOpenParen() {
	      var s0, s1, s2;

	      peg$silentFails++;
	      s0 = peg$currPos;
	      if (input.charCodeAt(peg$currPos) === 40) {
	        s1 = peg$c110;
	        peg$currPos++;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c111); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parse_();
	        if (s2 !== peg$FAILED) {
	          s1 = [s1, s2];
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }
	      peg$silentFails--;
	      if (s0 === peg$FAILED) {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c109); }
	      }

	      return s0;
	    }

	    function peg$parseCloseParen() {
	      var s0, s1, s2;

	      peg$silentFails++;
	      s0 = peg$currPos;
	      if (input.charCodeAt(peg$currPos) === 41) {
	        s1 = peg$c113;
	        peg$currPos++;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c114); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parse_();
	        if (s2 !== peg$FAILED) {
	          s1 = [s1, s2];
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }
	      peg$silentFails--;
	      if (s0 === peg$FAILED) {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c112); }
	      }

	      return s0;
	    }

	    function peg$parseComma() {
	      var s0, s1, s2;

	      s0 = peg$currPos;
	      if (input.charCodeAt(peg$currPos) === 44) {
	        s1 = peg$c115;
	        peg$currPos++;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c116); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parse_();
	        if (s2 !== peg$FAILED) {
	          s1 = [s1, s2];
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseDot() {
	      var s0, s1, s2;

	      s0 = peg$currPos;
	      if (input.charCodeAt(peg$currPos) === 46) {
	        s1 = peg$c95;
	        peg$currPos++;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c96); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parse_();
	        if (s2 !== peg$FAILED) {
	          s1 = [s1, s2];
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parsePipe() {
	      var s0, s1, s2;

	      s0 = peg$currPos;
	      if (input.charCodeAt(peg$currPos) === 124) {
	        s1 = peg$c117;
	        peg$currPos++;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c118); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parse_();
	        if (s2 !== peg$FAILED) {
	          s1 = [s1, s2];
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseReservedWord() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 3) === peg$c46) {
	        s1 = peg$c46;
	        peg$currPos += 3;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c47); }
	      }
	      if (s1 === peg$FAILED) {
	        if (input.substr(peg$currPos, 5) === peg$c75) {
	          s1 = peg$c75;
	          peg$currPos += 5;
	        } else {
	          s1 = peg$FAILED;
	          if (peg$silentFails === 0) { peg$fail(peg$c76); }
	        }
	        if (s1 === peg$FAILED) {
	          if (input.substr(peg$currPos, 4) === peg$c78) {
	            s1 = peg$c78;
	            peg$currPos += 4;
	          } else {
	            s1 = peg$FAILED;
	            if (peg$silentFails === 0) { peg$fail(peg$c79); }
	          }
	        }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        if (peg$c89.test(input.charAt(peg$currPos))) {
	          s3 = input.charAt(peg$currPos);
	          peg$currPos++;
	        } else {
	          s3 = peg$FAILED;
	          if (peg$silentFails === 0) { peg$fail(peg$c90); }
	        }
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s1 = [s1, s2];
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseName() {
	      var s0, s1, s2;

	      peg$silentFails++;
	      s0 = peg$currPos;
	      s1 = peg$parseNamePart();
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parse_();
	        if (s2 !== peg$FAILED) {
	          peg$savedPos = s0;
	          s1 = peg$c120(s1);
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }
	      peg$silentFails--;
	      if (s0 === peg$FAILED) {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c119); }
	      }

	      return s0;
	    }

	    function peg$parseNamePart() {
	      var s0, s1, s2, s3, s4, s5;

	      s0 = peg$currPos;
	      s1 = peg$currPos;
	      s2 = peg$currPos;
	      peg$silentFails++;
	      s3 = peg$parseReservedWord();
	      peg$silentFails--;
	      if (s3 === peg$FAILED) {
	        s2 = void 0;
	      } else {
	        peg$currPos = s2;
	        s2 = peg$FAILED;
	      }
	      if (s2 !== peg$FAILED) {
	        if (peg$c89.test(input.charAt(peg$currPos))) {
	          s3 = input.charAt(peg$currPos);
	          peg$currPos++;
	        } else {
	          s3 = peg$FAILED;
	          if (peg$silentFails === 0) { peg$fail(peg$c90); }
	        }
	        if (s3 !== peg$FAILED) {
	          s4 = [];
	          if (peg$c121.test(input.charAt(peg$currPos))) {
	            s5 = input.charAt(peg$currPos);
	            peg$currPos++;
	          } else {
	            s5 = peg$FAILED;
	            if (peg$silentFails === 0) { peg$fail(peg$c122); }
	          }
	          while (s5 !== peg$FAILED) {
	            s4.push(s5);
	            if (peg$c121.test(input.charAt(peg$currPos))) {
	              s5 = input.charAt(peg$currPos);
	              peg$currPos++;
	            } else {
	              s5 = peg$FAILED;
	              if (peg$silentFails === 0) { peg$fail(peg$c122); }
	            }
	          }
	          if (s4 !== peg$FAILED) {
	            s2 = [s2, s3, s4];
	            s1 = s2;
	          } else {
	            peg$currPos = s1;
	            s1 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s1;
	          s1 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s1;
	        s1 = peg$FAILED;
	      }
	      if (s1 !== peg$FAILED) {
	        s0 = input.substring(s0, peg$currPos);
	      } else {
	        s0 = s1;
	      }

	      return s0;
	    }

	    function peg$parseTypeName() {
	      var s0, s1, s2;

	      peg$silentFails++;
	      s0 = peg$currPos;
	      s1 = [];
	      if (peg$c124.test(input.charAt(peg$currPos))) {
	        s2 = input.charAt(peg$currPos);
	        peg$currPos++;
	      } else {
	        s2 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c125); }
	      }
	      if (s2 !== peg$FAILED) {
	        while (s2 !== peg$FAILED) {
	          s1.push(s2);
	          if (peg$c124.test(input.charAt(peg$currPos))) {
	            s2 = input.charAt(peg$currPos);
	            peg$currPos++;
	          } else {
	            s2 = peg$FAILED;
	            if (peg$silentFails === 0) { peg$fail(peg$c125); }
	          }
	        }
	      } else {
	        s1 = peg$FAILED;
	      }
	      if (s1 !== peg$FAILED) {
	        s0 = input.substring(s0, peg$currPos);
	      } else {
	        s0 = s1;
	      }
	      peg$silentFails--;
	      if (s0 === peg$FAILED) {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c123); }
	      }

	      return s0;
	    }

	    function peg$parseNotSQuote() {
	      var s0, s1, s2;

	      peg$silentFails++;
	      s0 = peg$currPos;
	      s1 = [];
	      if (peg$c127.test(input.charAt(peg$currPos))) {
	        s2 = input.charAt(peg$currPos);
	        peg$currPos++;
	      } else {
	        s2 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c128); }
	      }
	      while (s2 !== peg$FAILED) {
	        s1.push(s2);
	        if (peg$c127.test(input.charAt(peg$currPos))) {
	          s2 = input.charAt(peg$currPos);
	          peg$currPos++;
	        } else {
	          s2 = peg$FAILED;
	          if (peg$silentFails === 0) { peg$fail(peg$c128); }
	        }
	      }
	      if (s1 !== peg$FAILED) {
	        s0 = input.substring(s0, peg$currPos);
	      } else {
	        s0 = s1;
	      }
	      peg$silentFails--;
	      if (s0 === peg$FAILED) {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c126); }
	      }

	      return s0;
	    }

	    function peg$parseNotDQuote() {
	      var s0, s1, s2;

	      peg$silentFails++;
	      s0 = peg$currPos;
	      s1 = [];
	      if (peg$c130.test(input.charAt(peg$currPos))) {
	        s2 = input.charAt(peg$currPos);
	        peg$currPos++;
	      } else {
	        s2 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c131); }
	      }
	      while (s2 !== peg$FAILED) {
	        s1.push(s2);
	        if (peg$c130.test(input.charAt(peg$currPos))) {
	          s2 = input.charAt(peg$currPos);
	          peg$currPos++;
	        } else {
	          s2 = peg$FAILED;
	          if (peg$silentFails === 0) { peg$fail(peg$c131); }
	        }
	      }
	      if (s1 !== peg$FAILED) {
	        s0 = input.substring(s0, peg$currPos);
	      } else {
	        s0 = s1;
	      }
	      peg$silentFails--;
	      if (s0 === peg$FAILED) {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c129); }
	      }

	      return s0;
	    }

	    function peg$parse_() {
	      var s0, s1, s2;

	      peg$silentFails++;
	      s0 = peg$currPos;
	      s1 = [];
	      if (peg$c133.test(input.charAt(peg$currPos))) {
	        s2 = input.charAt(peg$currPos);
	        peg$currPos++;
	      } else {
	        s2 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c134); }
	      }
	      while (s2 !== peg$FAILED) {
	        s1.push(s2);
	        if (peg$c133.test(input.charAt(peg$currPos))) {
	          s2 = input.charAt(peg$currPos);
	          peg$currPos++;
	        } else {
	          s2 = peg$FAILED;
	          if (peg$silentFails === 0) { peg$fail(peg$c134); }
	        }
	      }
	      if (s1 !== peg$FAILED) {
	        s0 = input.substring(s0, peg$currPos);
	      } else {
	        s0 = s1;
	      }
	      peg$silentFails--;
	      if (s0 === peg$FAILED) {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c132); }
	      }

	      return s0;
	    }

	    // starts with function(plywood, chronoshift)
	    var ply = plywood.ply;
	    var $ = plywood.$;
	    var r = plywood.r;
	    var Expression = plywood.Expression;
	    var LiteralExpression = plywood.LiteralExpression;
	    var RefExpression = plywood.RefExpression;
	    var Set = plywood.Set;
	    var Action = plywood.Action;

	    var possibleCalls = {};
	    for (var key in Action.classMap) possibleCalls[key] = 1;
	    possibleCalls['negate'] = 1;
	    possibleCalls['isnt'] = 1;
	    possibleCalls['sqrt'] = 1;
	    possibleCalls['custom'] = 1; // back compat

	    function makeListMap1(head, tail) {
	      return [head].concat(tail.map(function(t) { return t[1] }));
	    }

	    function naryExpressionFactory(op, head, tail) {
	      if (!tail.length) return head;
	      return head[op].apply(head, tail.map(function(t) { return t[1]; }));
	    }

	    function naryExpressionWithAltFactory(op, head, tail, altToken, altOp) {
	      if (!tail.length) return head;
	      for (var i = 0; i < tail.length; i++) {
	        var t = tail[i];
	        head = head[t[0] === altToken ? altOp : op].call(head, t[1]);
	      }
	      return head;
	    }



	    peg$result = peg$startRuleFunction();

	    if (peg$result !== peg$FAILED && peg$currPos === input.length) {
	      return peg$result;
	    } else {
	      if (peg$result !== peg$FAILED && peg$currPos < input.length) {
	        peg$fail({ type: "end", description: "end of input" });
	      }

	      throw peg$buildException(
	        null,
	        peg$maxFailExpected,
	        peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,
	        peg$maxFailPos < input.length
	          ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)
	          : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)
	      );
	    }
	  }

	  return {
	    SyntaxError: peg$SyntaxError,
	    parse:       peg$parse
	  };
	};


/***/ },
/* 201 */
/***/ function(module, exports) {

	"use strict";
	module.exports = function(plywood, chronoshift) {
	  /*
	   * Generated by PEG.js 0.9.0.
	   *
	   * http://pegjs.org/
	   */

	  function peg$subclass(child, parent) {
	    function ctor() { this.constructor = child; }
	    ctor.prototype = parent.prototype;
	    child.prototype = new ctor();
	  }

	  function peg$SyntaxError(message, expected, found, location) {
	    this.message  = message;
	    this.expected = expected;
	    this.found    = found;
	    this.location = location;
	    this.name     = "SyntaxError";

	    if (typeof Error.captureStackTrace === "function") {
	      Error.captureStackTrace(this, peg$SyntaxError);
	    }
	  }

	  peg$subclass(peg$SyntaxError, Error);

	  function peg$parse(input) {
	    var options = arguments.length > 1 ? arguments[1] : {},
	        parser  = this,

	        peg$FAILED = {},

	        peg$startRuleFunctions = { start: peg$parsestart },
	        peg$startRuleFunction  = peg$parsestart,

	        peg$c0 = function(queryParse) { return queryParse; },
	        peg$c1 = function(queryParse) {
	              return queryParse;
	            },
	        peg$c2 = function(ex) {
	              return {
	                verb: null,
	                expression: ex
	              }
	            },
	        peg$c3 = function(ex) {
	              return {
	                verb: 'SELECT',
	                rewrite: 'SHOW',
	                database: 'information_schema',
	                expression: ex
	              };
	            },
	        peg$c4 = function(like, where) {
	              // https://dev.mysql.com/doc/refman/5.7/en/show-variables.html
	              var ex = $('GLOBAL_VARIABLES')
	              if (like) ex = ex.filter(like($('VARIABLE_NAME')));
	              if (where) ex = ex.filter(where);
	              return ex
	                .apply('Variable_name', $('VARIABLE_NAME'))
	                .apply('Value', $('VARIABLE_VALUE'))
	                .select('Variable_name', 'Value');
	            },
	        peg$c5 = function(like) {
	              // https://dev.mysql.com/doc/refman/5.0/en/schemata-table.html
	              var ex = $('SCHEMATA')
	              if (like) ex = ex.filter(like($('SCHEMA_NAME')));
	              return ex
	                .apply('Database', $('SCHEMA_NAME'))
	                .select('Database');
	            },
	        peg$c6 = function(full, db, like) {
	              // https://dev.mysql.com/doc/refman/5.0/en/tables-table.html
	              var ex = $('TABLES')
	              if (db) ex= ex.filter($('TABLE_SCHEMA').is(r(db[1])));
	              if (like) ex = ex.filter(like($('TABLE_NAME')));
	              ex = ex
	                .apply('Tables_in_database', $('TABLE_NAME'));

	              if (full) {
	                ex = ex
	                  .apply('Table_type', $('TABLE_TYPE'))
	                  .select('Tables_in_database', 'Table_type');
	              } else {
	                ex = ex.select('Tables_in_database');
	              }

	              return ex;
	            },
	        peg$c7 = function(full, table, db, like, where) {
	              // https://dev.mysql.com/doc/refman/5.0/en/columns-table.html
	              var ex = $('COLUMNS').filter($('TABLE_NAME').is(r(table.name)));
	              db = db ? db[1] : table.namespace;
	              if (db) ex = ex.filter($('TABLE_SCHEMA').is(r(db)));
	              if (like) ex = ex.filter(like($('COLUMN_NAME')));
	              if (where) ex = ex.filter(where);
	              ex = ex
	                .apply('Field', $('COLUMN_NAME'))
	                .apply('Type', $('COLUMN_TYPE'))
	                .apply('Null', $('IS_NULLABLE'))
	                .apply('Key', $('COLUMN_KEY'))
	                .apply('Default', $('COLUMN_DEFAULT'))
	                .apply('Extra', $('EXTRA'))

	              if (full) {
	                ex = ex
	                  .apply('Collation', $('COLLATION_NAME'))
	                  .apply('Privileges', $('PRIVILEGES'))
	                  .apply('Comment', $('COLUMN_COMMENT'))
	                  .select('Field', 'Type', 'Null', 'Key', 'Default', 'Extra', 'Collation', 'Privileges', 'Comment')
	              } else {
	                ex = ex.select('Field', 'Type', 'Null', 'Key', 'Default', 'Extra')
	              }

	              return ex;
	            },
	        peg$c8 = { type: "any", description: "any character" },
	        peg$c9 = function(verb, rest) {
	              return {
	                verb: verb,
	                rest: rest
	              };
	            },
	        peg$c10 = function(verb, db) {
	              return {
	                verb: verb,
	                database: db
	              };
	            },
	        peg$c11 = function(table, colRef, wild) {
	              var ex = $('COLUMNS').filter($('TABLE_NAME').is(r(table.name)));
	              if (table.namespace) ex = ex.filter($('TABLE_SCHEMA').is(r(table.namespace)));
	              if (colRef) {
	                ex = ex.filter($('COLUMN_NAME').is(r(colRef)));
	              } else if (wild) {
	                ex = ex.filter($('COLUMN_NAME').match(MatchAction.likeToRegExp(wild)));
	              }

	              ex = ex
	                .apply('Field', $('COLUMN_NAME'))
	                .apply('Type', $('COLUMN_TYPE'))
	                .apply('Null', $('IS_NULLABLE'))
	                .apply('Key', $('COLUMN_KEY'))
	                .apply('Default', $('COLUMN_DEFAULT'))
	                .apply('Extra', $('EXTRA'))
	                .select('Field', 'Type', 'Null', 'Key', 'Default', 'Extra');

	              return {
	                verb: 'SELECT',
	                rewrite: 'DESCRIBE',
	                table: table.name,
	                database: 'information_schema',
	                expression: ex
	              };
	            },
	        peg$c12 = function(verb) { return unsupportedVerbs[verb.toUpperCase()]; },
	        peg$c13 = function(verb, rest) {
	              return {
	                verb: verb.toUpperCase(),
	                rest: rest
	              };
	            },
	        peg$c14 = function(distinct, columns, from, where, groupBys, having, orderBy, limit) {
	              return {
	                verb: 'SELECT',
	                expression: constructQuery(distinct, columns, from, where, groupBys, having, orderBy, limit),
	                table: getFromTable(from),
	                database: getFromDatabase(from)
	              };
	            },
	        peg$c15 = function(distinct, columns, where, groupBys, having, orderBy, limit) { return constructQuery(distinct, columns, null, where, groupBys, having, orderBy, limit); },
	        peg$c16 = function() { return '*'; },
	        peg$c17 = function(head, tail) { return makeListMap1(head, tail); },
	        peg$c18 = function(ex, as) {
	              if (as == null) {
	                as = text().trim();
	                if (as[0] === '`' && as[as.length - 1] === '`') as = as.substr(1, as.length - 2);
	              }
	              return new ApplyAction({
	                name: as,
	                expression: ex
	              });
	            },
	        peg$c19 = function(name) { return name; },
	        peg$c20 = function(fc) { return fc; },
	        peg$c21 = function(subQuery) { return subQuery; },
	        peg$c22 = function(filter) { return filter; },
	        peg$c23 = function(having) { return new FilterAction({ expression: having }); },
	        peg$c24 = function(orderBy, direction, tail) {
	              if (tail.length) error('plywood does not currently support multi-column ORDER BYs');
	              return new SortAction({ expression: orderBy, direction: direction || 'ascending' });
	            },
	        peg$c25 = function(a, b) {
	              var limit;
	              if (b) {
	                if (a !== 0) error('can not skip for now');
	                limit = b[1];
	              } else {
	                limit = a;
	              }
	              return new LimitAction({ limit: limit });
	            },
	        peg$c26 = ";",
	        peg$c27 = { type: "literal", value: ";", description: "\";\"" },
	        peg$c28 = function(head, tail) { return naryExpressionFactory('or', head, tail); },
	        peg$c29 = function(head, tail) { return naryExpressionFactory('and', head, tail); },
	        peg$c30 = function(not, ex) {
	              if (not) ex = ex.not();
	              return ex;
	            },
	        peg$c31 = function(ex, rhs) {
	              if (rhs) ex = rhs(ex);
	              return ex;
	            },
	        peg$c32 = function(not, rhs) {
	              if (!not) return rhs;
	              return function(ex) { return rhs(ex).not(); };
	            },
	        peg$c33 = function(not, rhs) {
	              return function(ex) {
	                ex = ex.is(rhs);
	                if (not) ex = ex.not();
	                return ex;
	              };
	            },
	        peg$c34 = function(op, lhs) {
	              return function(ex) { return ex[op](lhs); };
	            },
	        peg$c35 = function(start, end) {
	              return function(ex) { return ex.greaterThan(start).and(ex.lessThan(end)); };
	            },
	        peg$c36 = function(list) {
	              return function(ex) { return ex.in(list); };
	            },
	        peg$c37 = function(string) {
	              return function(ex) { return ex.contains(string, 'ignoreCase'); };
	            },
	        peg$c38 = function(string) {
	              return function(ex) { return ex.match(string); };
	            },
	        peg$c39 = function(string, escape) {
	              var escapeStr = escape ? escape[1] : '\\';
	              if (escapeStr.length > 1) error('Invalid escape string: ' + escapeStr);
	              var regExp = MatchAction.likeToRegExp(string, escapeStr);
	              return function(ex) { return ex.match(regExp); };
	            },
	        peg$c40 = { type: "other", description: "Comparison" },
	        peg$c41 = "=",
	        peg$c42 = { type: "literal", value: "=", description: "\"=\"" },
	        peg$c43 = function() { return 'is'; },
	        peg$c44 = "<=>",
	        peg$c45 = { type: "literal", value: "<=>", description: "\"<=>\"" },
	        peg$c46 = "<>",
	        peg$c47 = { type: "literal", value: "<>", description: "\"<>\"" },
	        peg$c48 = function() { return 'isnt'; },
	        peg$c49 = "!=",
	        peg$c50 = { type: "literal", value: "!=", description: "\"!=\"" },
	        peg$c51 = "<=",
	        peg$c52 = { type: "literal", value: "<=", description: "\"<=\"" },
	        peg$c53 = function() { return 'lessThanOrEqual'; },
	        peg$c54 = ">=",
	        peg$c55 = { type: "literal", value: ">=", description: "\">=\"" },
	        peg$c56 = function() { return 'greaterThanOrEqual'; },
	        peg$c57 = "<",
	        peg$c58 = { type: "literal", value: "<", description: "\"<\"" },
	        peg$c59 = function() { return 'lessThan'; },
	        peg$c60 = ">",
	        peg$c61 = { type: "literal", value: ">", description: "\">\"" },
	        peg$c62 = function() { return 'greaterThan'; },
	        peg$c63 = function(head, tail) { return naryExpressionWithAltFactory('add', head, tail, '-', 'subtract'); },
	        peg$c64 = "+",
	        peg$c65 = { type: "literal", value: "+", description: "\"+\"" },
	        peg$c66 = "-",
	        peg$c67 = { type: "literal", value: "-", description: "\"-\"" },
	        peg$c68 = function(op) { return op; },
	        peg$c69 = function(head, tail) { return naryExpressionWithAltFactory('multiply', head, tail, '/', 'divide'); },
	        peg$c70 = "*",
	        peg$c71 = { type: "literal", value: "*", description: "\"*\"" },
	        peg$c72 = "/",
	        peg$c73 = { type: "literal", value: "/", description: "\"/\"" },
	        peg$c74 = function(op, ex) {
	              // !Number is to make sure that -3 parses as literal(-3) and not literal(3).negate()
	              var negEx = ex.negate(); // Always negate (even with +) just to make sure it is possible
	              return op === '-' ? negEx : ex;
	            },
	        peg$c75 = function(sub) { return sub; },
	        peg$c76 = function(distinct, exd) {
	              if (!exd) {
	                if (distinct) error('COUNT DISTINCT must have an expression');
	                return dataRef.count();
	              } else if (exd.ex === '*') {
	                if (distinct) error('COUNT DISTINCT can not be used with *');
	                return exd.data.count();
	              } else {
	                return distinct ? exd.data.countDistinct(exd.ex) : exd.data.filter(exd.ex.isnt(null)).count()
	              }
	            },
	        peg$c77 = function(fn, distinct, exd) {
	              if (distinct) error('can not use DISTINCT for ' + fn + ' aggregator');
	              if (exd.ex === '*') error('can not use * for ' + fn + ' aggregator');
	              return exd.data[fn](exd.ex);
	            },
	        peg$c78 = function(distinct, exd, value) {
	              if (distinct) error('can not use DISTINCT for quantile aggregator');
	              if (exd.ex === '*') error('can not use * for quantile aggregator');
	              return exd.data.quantile(exd.ex, value);
	            },
	        peg$c79 = function(value, filter) {
	              var d = dataRef;
	              if (filter) d = d.filter(filter);
	              return d.customAggregate(value);
	            },
	        peg$c80 = function(ex, filter) {
	              var data = dataRef;
	              if (filter) data = data.filter(filter);
	              return { ex: ex, data: data };
	            },
	        peg$c81 = function(fn, params) { return fn.apply(null, params); },
	        peg$c82 = function(name) { return fns[name.toUpperCase()]; },
	        peg$c83 = function(ref) { return $(ref.name); },
	        peg$c84 = function(ns, name) {
	              return {
	                namespace: ns ? ns[0] : null,
	                name: name
	              };
	            },
	        peg$c85 = function(name) { return reserved(name); },
	        peg$c86 = function(name) { return name },
	        peg$c87 = "`",
	        peg$c88 = { type: "literal", value: "`", description: "\"`\"" },
	        peg$c89 = /^[^`]/,
	        peg$c90 = { type: "class", value: "[^`]", description: "[^`]" },
	        peg$c91 = function(type, v) { return r(makeDate(type, v)); },
	        peg$c92 = function(v) { return r(undummyNull(v)); },
	        peg$c93 = function(head, tail) { return Set.fromJS(makeListMap1(head, tail).map(undummyNull)); },
	        peg$c94 = function(head, tail) { return r(Set.fromJS(makeListMap1(head, tail))); },
	        peg$c95 = { type: "other", description: "String" },
	        peg$c96 = "'",
	        peg$c97 = { type: "literal", value: "'", description: "\"'\"" },
	        peg$c98 = function(chars) { return chars; },
	        peg$c99 = function(chars) { error("Unmatched single quote"); },
	        peg$c100 = "\"",
	        peg$c101 = { type: "literal", value: "\"", description: "\"\\\"\"" },
	        peg$c102 = function(chars) { error("Unmatched double quote"); },
	        peg$c103 = function(n, unit) { return intervalUnits[unit] },
	        peg$c104 = function(n, unit) {
	              if (n !== 0) error('only zero intervals supported for now');
	              return 0;
	            },
	        peg$c105 = "null",
	        peg$c106 = { type: "literal", value: "NULL", description: "\"NULL\"" },
	        peg$c107 = function() { return NULL; },
	        peg$c108 = "true",
	        peg$c109 = { type: "literal", value: "TRUE", description: "\"TRUE\"" },
	        peg$c110 = function() { return true; },
	        peg$c111 = "false",
	        peg$c112 = { type: "literal", value: "FALSE", description: "\"FALSE\"" },
	        peg$c113 = function() { return false; },
	        peg$c114 = "select",
	        peg$c115 = { type: "literal", value: "SELECT", description: "\"SELECT\"" },
	        peg$c116 = function() { return 'SELECT'; },
	        peg$c117 = "describe",
	        peg$c118 = { type: "literal", value: "DESCRIBE", description: "\"DESCRIBE\"" },
	        peg$c119 = "explain",
	        peg$c120 = { type: "literal", value: "EXPLAIN", description: "\"EXPLAIN\"" },
	        peg$c121 = function() { return 'DESCRIBE'; },
	        peg$c122 = "show",
	        peg$c123 = { type: "literal", value: "SHOW", description: "\"SHOW\"" },
	        peg$c124 = function() { return 'SHOW'; },
	        peg$c125 = "set",
	        peg$c126 = { type: "literal", value: "SET", description: "\"SET\"" },
	        peg$c127 = function() { return 'SET'; },
	        peg$c128 = "use",
	        peg$c129 = { type: "literal", value: "USE", description: "\"USE\"" },
	        peg$c130 = function() { return 'USE'; },
	        peg$c131 = "variables",
	        peg$c132 = { type: "literal", value: "VARIABLES", description: "\"VARIABLES\"" },
	        peg$c133 = "databases",
	        peg$c134 = { type: "literal", value: "DATABASES", description: "\"DATABASES\"" },
	        peg$c135 = "schemas",
	        peg$c136 = { type: "literal", value: "SCHEMAS", description: "\"SCHEMAS\"" },
	        peg$c137 = "columns",
	        peg$c138 = { type: "literal", value: "COLUMNS", description: "\"COLUMNS\"" },
	        peg$c139 = "full",
	        peg$c140 = { type: "literal", value: "FULL", description: "\"FULL\"" },
	        peg$c141 = "tables",
	        peg$c142 = { type: "literal", value: "TABLES", description: "\"TABLES\"" },
	        peg$c143 = "global",
	        peg$c144 = { type: "literal", value: "GLOBAL", description: "\"GLOBAL\"" },
	        peg$c145 = "session",
	        peg$c146 = { type: "literal", value: "SESSION", description: "\"SESSION\"" },
	        peg$c147 = "from",
	        peg$c148 = { type: "literal", value: "FROM", description: "\"FROM\"" },
	        peg$c149 = "as",
	        peg$c150 = { type: "literal", value: "AS", description: "\"AS\"" },
	        peg$c151 = "on",
	        peg$c152 = { type: "literal", value: "ON", description: "\"ON\"" },
	        peg$c153 = "left",
	        peg$c154 = { type: "literal", value: "LEFT", description: "\"LEFT\"" },
	        peg$c155 = "inner",
	        peg$c156 = { type: "literal", value: "INNER", description: "\"INNER\"" },
	        peg$c157 = "join",
	        peg$c158 = { type: "literal", value: "JOIN", description: "\"JOIN\"" },
	        peg$c159 = "union",
	        peg$c160 = { type: "literal", value: "UNION", description: "\"UNION\"" },
	        peg$c161 = "where",
	        peg$c162 = { type: "literal", value: "WHERE", description: "\"WHERE\"" },
	        peg$c163 = "group",
	        peg$c164 = { type: "literal", value: "GROUP", description: "\"GROUP\"" },
	        peg$c165 = "by",
	        peg$c166 = { type: "literal", value: "BY", description: "\"BY\"" },
	        peg$c167 = "order",
	        peg$c168 = { type: "literal", value: "ORDER", description: "\"ORDER\"" },
	        peg$c169 = "having",
	        peg$c170 = { type: "literal", value: "HAVING", description: "\"HAVING\"" },
	        peg$c171 = "limit",
	        peg$c172 = { type: "literal", value: "LIMIT", description: "\"LIMIT\"" },
	        peg$c173 = "asc",
	        peg$c174 = { type: "literal", value: "ASC", description: "\"ASC\"" },
	        peg$c175 = function() { return SortAction.ASCENDING;  },
	        peg$c176 = "desc",
	        peg$c177 = { type: "literal", value: "DESC", description: "\"DESC\"" },
	        peg$c178 = function() { return SortAction.DESCENDING; },
	        peg$c179 = "between",
	        peg$c180 = { type: "literal", value: "BETWEEN", description: "\"BETWEEN\"" },
	        peg$c181 = "in",
	        peg$c182 = { type: "literal", value: "IN", description: "\"IN\"" },
	        peg$c183 = "is",
	        peg$c184 = { type: "literal", value: "IS", description: "\"IS\"" },
	        peg$c185 = "like",
	        peg$c186 = { type: "literal", value: "LIKE", description: "\"LIKE\"" },
	        peg$c187 = "contains",
	        peg$c188 = { type: "literal", value: "CONTAINS", description: "\"CONTAINS\"" },
	        peg$c189 = "regexp",
	        peg$c190 = { type: "literal", value: "REGEXP", description: "\"REGEXP\"" },
	        peg$c191 = "escape",
	        peg$c192 = { type: "literal", value: "ESCAPE", description: "\"ESCAPE\"" },
	        peg$c193 = "not",
	        peg$c194 = { type: "literal", value: "NOT", description: "\"NOT\"" },
	        peg$c195 = "and",
	        peg$c196 = { type: "literal", value: "AND", description: "\"AND\"" },
	        peg$c197 = "or",
	        peg$c198 = { type: "literal", value: "OR", description: "\"OR\"" },
	        peg$c199 = "distinct",
	        peg$c200 = { type: "literal", value: "DISTINCT", description: "\"DISTINCT\"" },
	        peg$c201 = "count",
	        peg$c202 = { type: "literal", value: "COUNT", description: "\"COUNT\"" },
	        peg$c203 = function() { return 'count'; },
	        peg$c204 = "count_distinct",
	        peg$c205 = { type: "literal", value: "COUNT_DISTINCT", description: "\"COUNT_DISTINCT\"" },
	        peg$c206 = function() { return 'countDistinct'; },
	        peg$c207 = "sum",
	        peg$c208 = { type: "literal", value: "SUM", description: "\"SUM\"" },
	        peg$c209 = function() { return 'sum'; },
	        peg$c210 = "avg",
	        peg$c211 = { type: "literal", value: "AVG", description: "\"AVG\"" },
	        peg$c212 = function() { return 'average'; },
	        peg$c213 = "min",
	        peg$c214 = { type: "literal", value: "MIN", description: "\"MIN\"" },
	        peg$c215 = function() { return 'min'; },
	        peg$c216 = "max",
	        peg$c217 = { type: "literal", value: "MAX", description: "\"MAX\"" },
	        peg$c218 = function() { return 'max'; },
	        peg$c219 = "quantile",
	        peg$c220 = { type: "literal", value: "QUANTILE", description: "\"QUANTILE\"" },
	        peg$c221 = function() { return 'quantile'; },
	        peg$c222 = "custom",
	        peg$c223 = { type: "literal", value: "CUSTOM", description: "\"CUSTOM\"" },
	        peg$c224 = function() { return 'customAggregate'; },
	        peg$c225 = "custom_aggregate",
	        peg$c226 = { type: "literal", value: "CUSTOM_AGGREGATE", description: "\"CUSTOM_AGGREGATE\"" },
	        peg$c227 = "date",
	        peg$c228 = { type: "literal", value: "DATE", description: "\"DATE\"" },
	        peg$c229 = function() { return 'd'; },
	        peg$c230 = "time",
	        peg$c231 = { type: "literal", value: "TIME", description: "\"TIME\"" },
	        peg$c232 = function() { return 't'; },
	        peg$c233 = "timestamp",
	        peg$c234 = { type: "literal", value: "TIMESTAMP", description: "\"TIMESTAMP\"" },
	        peg$c235 = function() { return 'ts'; },
	        peg$c236 = "d",
	        peg$c237 = { type: "literal", value: "D", description: "\"D\"" },
	        peg$c238 = "t",
	        peg$c239 = { type: "literal", value: "T", description: "\"T\"" },
	        peg$c240 = "ts",
	        peg$c241 = { type: "literal", value: "TS", description: "\"TS\"" },
	        peg$c242 = "interval",
	        peg$c243 = { type: "literal", value: "INTERVAL", description: "\"INTERVAL\"" },
	        peg$c244 = /^[a-z_]/i,
	        peg$c245 = { type: "class", value: "[a-z_]i", description: "[a-z_]i" },
	        peg$c246 = { type: "other", description: "Number" },
	        peg$c247 = function(n) { return parseFloat(n); },
	        peg$c248 = /^[1-9]/,
	        peg$c249 = { type: "class", value: "[1-9]", description: "[1-9]" },
	        peg$c250 = ".",
	        peg$c251 = { type: "literal", value: ".", description: "\".\"" },
	        peg$c252 = "e",
	        peg$c253 = { type: "literal", value: "e", description: "\"e\"" },
	        peg$c254 = /^[+\-]/,
	        peg$c255 = { type: "class", value: "[+-]", description: "[+-]" },
	        peg$c256 = /^[0-9]/,
	        peg$c257 = { type: "class", value: "[0-9]", description: "[0-9]" },
	        peg$c258 = { type: "other", description: "(" },
	        peg$c259 = "(",
	        peg$c260 = { type: "literal", value: "(", description: "\"(\"" },
	        peg$c261 = { type: "other", description: ")" },
	        peg$c262 = ")",
	        peg$c263 = { type: "literal", value: ")", description: "\")\"" },
	        peg$c264 = { type: "other", description: "{" },
	        peg$c265 = "{",
	        peg$c266 = { type: "literal", value: "{", description: "\"{\"" },
	        peg$c267 = { type: "other", description: "}" },
	        peg$c268 = "}",
	        peg$c269 = { type: "literal", value: "}", description: "\"}\"" },
	        peg$c270 = ",",
	        peg$c271 = { type: "literal", value: ",", description: "\",\"" },
	        peg$c272 = { type: "other", description: "Name" },
	        peg$c273 = /^[a-z0-9_]/i,
	        peg$c274 = { type: "class", value: "[a-z0-9_]i", description: "[a-z0-9_]i" },
	        peg$c275 = { type: "other", description: "RelaxedName" },
	        peg$c276 = /^[a-z_\-:*\/]/i,
	        peg$c277 = { type: "class", value: "[a-z_\\-:*/]i", description: "[a-z_\\-:*/]i" },
	        peg$c278 = /^[a-z0-9_\-:*\/]/i,
	        peg$c279 = { type: "class", value: "[a-z0-9_\\-:*/]i", description: "[a-z0-9_\\-:*/]i" },
	        peg$c280 = { type: "other", description: "NotSQuote" },
	        peg$c281 = /^[^']/,
	        peg$c282 = { type: "class", value: "[^']", description: "[^']" },
	        peg$c283 = { type: "other", description: "NotDQuote" },
	        peg$c284 = /^[^"]/,
	        peg$c285 = { type: "class", value: "[^\"]", description: "[^\"]" },
	        peg$c286 = { type: "other", description: "Whitespace" },
	        peg$c287 = /^[ \t\r\n]/,
	        peg$c288 = { type: "class", value: "[ \\t\\r\\n]", description: "[ \\t\\r\\n]" },
	        peg$c289 = "/*",
	        peg$c290 = { type: "literal", value: "/*", description: "\"/*\"" },
	        peg$c291 = "-- ",
	        peg$c292 = { type: "literal", value: "-- ", description: "\"-- \"" },
	        peg$c293 = "#",
	        peg$c294 = { type: "literal", value: "#", description: "\"#\"" },
	        peg$c295 = "*/",
	        peg$c296 = { type: "literal", value: "*/", description: "\"*/\"" },
	        peg$c297 = /^[\n\r]/,
	        peg$c298 = { type: "class", value: "[\\n\\r]", description: "[\\n\\r]" },

	        peg$currPos          = 0,
	        peg$savedPos         = 0,
	        peg$posDetailsCache  = [{ line: 1, column: 1, seenCR: false }],
	        peg$maxFailPos       = 0,
	        peg$maxFailExpected  = [],
	        peg$silentFails      = 0,

	        peg$result;

	    if ("startRule" in options) {
	      if (!(options.startRule in peg$startRuleFunctions)) {
	        throw new Error("Can't start parsing from rule \"" + options.startRule + "\".");
	      }

	      peg$startRuleFunction = peg$startRuleFunctions[options.startRule];
	    }

	    function text() {
	      return input.substring(peg$savedPos, peg$currPos);
	    }

	    function location() {
	      return peg$computeLocation(peg$savedPos, peg$currPos);
	    }

	    function expected(description) {
	      throw peg$buildException(
	        null,
	        [{ type: "other", description: description }],
	        input.substring(peg$savedPos, peg$currPos),
	        peg$computeLocation(peg$savedPos, peg$currPos)
	      );
	    }

	    function error(message) {
	      throw peg$buildException(
	        message,
	        null,
	        input.substring(peg$savedPos, peg$currPos),
	        peg$computeLocation(peg$savedPos, peg$currPos)
	      );
	    }

	    function peg$computePosDetails(pos) {
	      var details = peg$posDetailsCache[pos],
	          p, ch;

	      if (details) {
	        return details;
	      } else {
	        p = pos - 1;
	        while (!peg$posDetailsCache[p]) {
	          p--;
	        }

	        details = peg$posDetailsCache[p];
	        details = {
	          line:   details.line,
	          column: details.column,
	          seenCR: details.seenCR
	        };

	        while (p < pos) {
	          ch = input.charAt(p);
	          if (ch === "\n") {
	            if (!details.seenCR) { details.line++; }
	            details.column = 1;
	            details.seenCR = false;
	          } else if (ch === "\r" || ch === "\u2028" || ch === "\u2029") {
	            details.line++;
	            details.column = 1;
	            details.seenCR = true;
	          } else {
	            details.column++;
	            details.seenCR = false;
	          }

	          p++;
	        }

	        peg$posDetailsCache[pos] = details;
	        return details;
	      }
	    }

	    function peg$computeLocation(startPos, endPos) {
	      var startPosDetails = peg$computePosDetails(startPos),
	          endPosDetails   = peg$computePosDetails(endPos);

	      return {
	        start: {
	          offset: startPos,
	          line:   startPosDetails.line,
	          column: startPosDetails.column
	        },
	        end: {
	          offset: endPos,
	          line:   endPosDetails.line,
	          column: endPosDetails.column
	        }
	      };
	    }

	    function peg$fail(expected) {
	      if (peg$currPos < peg$maxFailPos) { return; }

	      if (peg$currPos > peg$maxFailPos) {
	        peg$maxFailPos = peg$currPos;
	        peg$maxFailExpected = [];
	      }

	      peg$maxFailExpected.push(expected);
	    }

	    function peg$buildException(message, expected, found, location) {
	      function cleanupExpected(expected) {
	        var i = 1;

	        expected.sort(function(a, b) {
	          if (a.description < b.description) {
	            return -1;
	          } else if (a.description > b.description) {
	            return 1;
	          } else {
	            return 0;
	          }
	        });

	        while (i < expected.length) {
	          if (expected[i - 1] === expected[i]) {
	            expected.splice(i, 1);
	          } else {
	            i++;
	          }
	        }
	      }

	      function buildMessage(expected, found) {
	        function stringEscape(s) {
	          function hex(ch) { return ch.charCodeAt(0).toString(16).toUpperCase(); }

	          return s
	            .replace(/\\/g,   '\\\\')
	            .replace(/"/g,    '\\"')
	            .replace(/\x08/g, '\\b')
	            .replace(/\t/g,   '\\t')
	            .replace(/\n/g,   '\\n')
	            .replace(/\f/g,   '\\f')
	            .replace(/\r/g,   '\\r')
	            .replace(/[\x00-\x07\x0B\x0E\x0F]/g, function(ch) { return '\\x0' + hex(ch); })
	            .replace(/[\x10-\x1F\x80-\xFF]/g,    function(ch) { return '\\x'  + hex(ch); })
	            .replace(/[\u0100-\u0FFF]/g,         function(ch) { return '\\u0' + hex(ch); })
	            .replace(/[\u1000-\uFFFF]/g,         function(ch) { return '\\u'  + hex(ch); });
	        }

	        var expectedDescs = new Array(expected.length),
	            expectedDesc, foundDesc, i;

	        for (i = 0; i < expected.length; i++) {
	          expectedDescs[i] = expected[i].description;
	        }

	        expectedDesc = expected.length > 1
	          ? expectedDescs.slice(0, -1).join(", ")
	              + " or "
	              + expectedDescs[expected.length - 1]
	          : expectedDescs[0];

	        foundDesc = found ? "\"" + stringEscape(found) + "\"" : "end of input";

	        return "Expected " + expectedDesc + " but " + foundDesc + " found.";
	      }

	      if (expected !== null) {
	        cleanupExpected(expected);
	      }

	      return new peg$SyntaxError(
	        message !== null ? message : buildMessage(expected, found),
	        expected,
	        found,
	        location
	      );
	    }

	    function peg$parsestart() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      s1 = peg$parse_();
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parseQuery();
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parseQueryTerminator();
	          if (s3 === peg$FAILED) {
	            s3 = null;
	          }
	          if (s3 !== peg$FAILED) {
	            peg$savedPos = s0;
	            s1 = peg$c0(s2);
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseQuery() {
	      var s0, s1;

	      s0 = peg$currPos;
	      s1 = peg$parseSelectQuery();
	      if (s1 === peg$FAILED) {
	        s1 = peg$parseDescribeQuery();
	        if (s1 === peg$FAILED) {
	          s1 = peg$parseShowQuery();
	          if (s1 === peg$FAILED) {
	            s1 = peg$parseSetQuery();
	            if (s1 === peg$FAILED) {
	              s1 = peg$parseUseQuery();
	              if (s1 === peg$FAILED) {
	                s1 = peg$parseUnsupportedQuery();
	              }
	            }
	          }
	        }
	      }
	      if (s1 !== peg$FAILED) {
	        peg$savedPos = s0;
	        s1 = peg$c1(s1);
	      }
	      s0 = s1;
	      if (s0 === peg$FAILED) {
	        s0 = peg$currPos;
	        s1 = peg$parseOrExpression();
	        if (s1 !== peg$FAILED) {
	          peg$savedPos = s0;
	          s1 = peg$c2(s1);
	        }
	        s0 = s1;
	      }

	      return s0;
	    }

	    function peg$parseShowQuery() {
	      var s0, s1, s2;

	      s0 = peg$currPos;
	      s1 = peg$parseShowToken();
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parseShowQueryExpression();
	        if (s2 !== peg$FAILED) {
	          peg$savedPos = s0;
	          s1 = peg$c3(s2);
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseShowQueryExpression() {
	      var s0, s1, s2, s3, s4, s5, s6, s7;

	      s0 = peg$currPos;
	      s1 = peg$parseGlobalToken();
	      if (s1 === peg$FAILED) {
	        s1 = peg$parseSessionToken();
	      }
	      if (s1 === peg$FAILED) {
	        s1 = null;
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parseVariablesToken();
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parseLikeRhs();
	          if (s3 === peg$FAILED) {
	            s3 = null;
	          }
	          if (s3 !== peg$FAILED) {
	            s4 = peg$parseWhereClause();
	            if (s4 === peg$FAILED) {
	              s4 = null;
	            }
	            if (s4 !== peg$FAILED) {
	              peg$savedPos = s0;
	              s1 = peg$c4(s3, s4);
	              s0 = s1;
	            } else {
	              peg$currPos = s0;
	              s0 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }
	      if (s0 === peg$FAILED) {
	        s0 = peg$currPos;
	        s1 = peg$parseSchemasToken();
	        if (s1 === peg$FAILED) {
	          s1 = peg$parseDatabasesToken();
	        }
	        if (s1 !== peg$FAILED) {
	          s2 = peg$parseLikeRhs();
	          if (s2 === peg$FAILED) {
	            s2 = null;
	          }
	          if (s2 !== peg$FAILED) {
	            peg$savedPos = s0;
	            s1 = peg$c5(s2);
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	        if (s0 === peg$FAILED) {
	          s0 = peg$currPos;
	          s1 = peg$parseFullToken();
	          if (s1 === peg$FAILED) {
	            s1 = null;
	          }
	          if (s1 !== peg$FAILED) {
	            s2 = peg$parseTablesToken();
	            if (s2 !== peg$FAILED) {
	              s3 = peg$currPos;
	              s4 = peg$parseFromOrIn();
	              if (s4 !== peg$FAILED) {
	                s5 = peg$parseRef();
	                if (s5 !== peg$FAILED) {
	                  s4 = [s4, s5];
	                  s3 = s4;
	                } else {
	                  peg$currPos = s3;
	                  s3 = peg$FAILED;
	                }
	              } else {
	                peg$currPos = s3;
	                s3 = peg$FAILED;
	              }
	              if (s3 === peg$FAILED) {
	                s3 = null;
	              }
	              if (s3 !== peg$FAILED) {
	                s4 = peg$parseLikeRhs();
	                if (s4 === peg$FAILED) {
	                  s4 = null;
	                }
	                if (s4 !== peg$FAILED) {
	                  peg$savedPos = s0;
	                  s1 = peg$c6(s1, s3, s4);
	                  s0 = s1;
	                } else {
	                  peg$currPos = s0;
	                  s0 = peg$FAILED;
	                }
	              } else {
	                peg$currPos = s0;
	                s0 = peg$FAILED;
	              }
	            } else {
	              peg$currPos = s0;
	              s0 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	          if (s0 === peg$FAILED) {
	            s0 = peg$currPos;
	            s1 = peg$parseFullToken();
	            if (s1 === peg$FAILED) {
	              s1 = null;
	            }
	            if (s1 !== peg$FAILED) {
	              s2 = peg$parseColumnsToken();
	              if (s2 !== peg$FAILED) {
	                s3 = peg$parseFromOrIn();
	                if (s3 !== peg$FAILED) {
	                  s4 = peg$parseRelaxedNamespacedRef();
	                  if (s4 !== peg$FAILED) {
	                    s5 = peg$currPos;
	                    s6 = peg$parseFromOrIn();
	                    if (s6 !== peg$FAILED) {
	                      s7 = peg$parseRef();
	                      if (s7 !== peg$FAILED) {
	                        s6 = [s6, s7];
	                        s5 = s6;
	                      } else {
	                        peg$currPos = s5;
	                        s5 = peg$FAILED;
	                      }
	                    } else {
	                      peg$currPos = s5;
	                      s5 = peg$FAILED;
	                    }
	                    if (s5 === peg$FAILED) {
	                      s5 = null;
	                    }
	                    if (s5 !== peg$FAILED) {
	                      s6 = peg$parseLikeRhs();
	                      if (s6 === peg$FAILED) {
	                        s6 = null;
	                      }
	                      if (s6 !== peg$FAILED) {
	                        s7 = peg$parseWhereClause();
	                        if (s7 === peg$FAILED) {
	                          s7 = null;
	                        }
	                        if (s7 !== peg$FAILED) {
	                          peg$savedPos = s0;
	                          s1 = peg$c7(s1, s4, s5, s6, s7);
	                          s0 = s1;
	                        } else {
	                          peg$currPos = s0;
	                          s0 = peg$FAILED;
	                        }
	                      } else {
	                        peg$currPos = s0;
	                        s0 = peg$FAILED;
	                      }
	                    } else {
	                      peg$currPos = s0;
	                      s0 = peg$FAILED;
	                    }
	                  } else {
	                    peg$currPos = s0;
	                    s0 = peg$FAILED;
	                  }
	                } else {
	                  peg$currPos = s0;
	                  s0 = peg$FAILED;
	                }
	              } else {
	                peg$currPos = s0;
	                s0 = peg$FAILED;
	              }
	            } else {
	              peg$currPos = s0;
	              s0 = peg$FAILED;
	            }
	          }
	        }
	      }

	      return s0;
	    }

	    function peg$parseFromOrIn() {
	      var s0;

	      s0 = peg$parseFromToken();
	      if (s0 === peg$FAILED) {
	        s0 = peg$parseInToken();
	      }

	      return s0;
	    }

	    function peg$parseSetQuery() {
	      var s0, s1, s2, s3, s4;

	      s0 = peg$currPos;
	      s1 = peg$parseSetToken();
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        s3 = [];
	        if (input.length > peg$currPos) {
	          s4 = input.charAt(peg$currPos);
	          peg$currPos++;
	        } else {
	          s4 = peg$FAILED;
	          if (peg$silentFails === 0) { peg$fail(peg$c8); }
	        }
	        while (s4 !== peg$FAILED) {
	          s3.push(s4);
	          if (input.length > peg$currPos) {
	            s4 = input.charAt(peg$currPos);
	            peg$currPos++;
	          } else {
	            s4 = peg$FAILED;
	            if (peg$silentFails === 0) { peg$fail(peg$c8); }
	          }
	        }
	        if (s3 !== peg$FAILED) {
	          s2 = input.substring(s2, peg$currPos);
	        } else {
	          s2 = s3;
	        }
	        if (s2 !== peg$FAILED) {
	          peg$savedPos = s0;
	          s1 = peg$c9(s1, s2);
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseUseQuery() {
	      var s0, s1, s2;

	      s0 = peg$currPos;
	      s1 = peg$parseUseToken();
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parseRef();
	        if (s2 !== peg$FAILED) {
	          peg$savedPos = s0;
	          s1 = peg$c10(s1, s2);
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseDescribeQuery() {
	      var s0, s1, s2, s3, s4;

	      s0 = peg$currPos;
	      s1 = peg$parseDescribeToken();
	      if (s1 === peg$FAILED) {
	        s1 = peg$parseDescToken();
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parseRelaxedNamespacedRef();
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parseRef();
	          if (s3 === peg$FAILED) {
	            s3 = null;
	          }
	          if (s3 !== peg$FAILED) {
	            s4 = peg$parseString();
	            if (s4 === peg$FAILED) {
	              s4 = null;
	            }
	            if (s4 !== peg$FAILED) {
	              peg$savedPos = s0;
	              s1 = peg$c11(s2, s3, s4);
	              s0 = s1;
	            } else {
	              peg$currPos = s0;
	              s0 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseUnsupportedQuery() {
	      var s0, s1, s2, s3, s4, s5, s6;

	      s0 = peg$currPos;
	      s1 = peg$parseName();
	      if (s1 !== peg$FAILED) {
	        peg$savedPos = peg$currPos;
	        s2 = peg$c12(s1);
	        if (s2) {
	          s2 = void 0;
	        } else {
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            s4 = peg$currPos;
	            s5 = [];
	            if (input.length > peg$currPos) {
	              s6 = input.charAt(peg$currPos);
	              peg$currPos++;
	            } else {
	              s6 = peg$FAILED;
	              if (peg$silentFails === 0) { peg$fail(peg$c8); }
	            }
	            while (s6 !== peg$FAILED) {
	              s5.push(s6);
	              if (input.length > peg$currPos) {
	                s6 = input.charAt(peg$currPos);
	                peg$currPos++;
	              } else {
	                s6 = peg$FAILED;
	                if (peg$silentFails === 0) { peg$fail(peg$c8); }
	              }
	            }
	            if (s5 !== peg$FAILED) {
	              s4 = input.substring(s4, peg$currPos);
	            } else {
	              s4 = s5;
	            }
	            if (s4 !== peg$FAILED) {
	              peg$savedPos = s0;
	              s1 = peg$c13(s1, s4);
	              s0 = s1;
	            } else {
	              peg$currPos = s0;
	              s0 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseSelectQuery() {
	      var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9;

	      s0 = peg$currPos;
	      s1 = peg$parseSelectToken();
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parseDistinctToken();
	        if (s2 === peg$FAILED) {
	          s2 = null;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parseColumns();
	          if (s3 === peg$FAILED) {
	            s3 = null;
	          }
	          if (s3 !== peg$FAILED) {
	            s4 = peg$parseFromClause();
	            if (s4 === peg$FAILED) {
	              s4 = null;
	            }
	            if (s4 !== peg$FAILED) {
	              s5 = peg$parseWhereClause();
	              if (s5 === peg$FAILED) {
	                s5 = null;
	              }
	              if (s5 !== peg$FAILED) {
	                s6 = peg$parseGroupByClause();
	                if (s6 === peg$FAILED) {
	                  s6 = null;
	                }
	                if (s6 !== peg$FAILED) {
	                  s7 = peg$parseHavingClause();
	                  if (s7 === peg$FAILED) {
	                    s7 = null;
	                  }
	                  if (s7 !== peg$FAILED) {
	                    s8 = peg$parseOrderByClause();
	                    if (s8 === peg$FAILED) {
	                      s8 = null;
	                    }
	                    if (s8 !== peg$FAILED) {
	                      s9 = peg$parseLimitClause();
	                      if (s9 === peg$FAILED) {
	                        s9 = null;
	                      }
	                      if (s9 !== peg$FAILED) {
	                        peg$savedPos = s0;
	                        s1 = peg$c14(s2, s3, s4, s5, s6, s7, s8, s9);
	                        s0 = s1;
	                      } else {
	                        peg$currPos = s0;
	                        s0 = peg$FAILED;
	                      }
	                    } else {
	                      peg$currPos = s0;
	                      s0 = peg$FAILED;
	                    }
	                  } else {
	                    peg$currPos = s0;
	                    s0 = peg$FAILED;
	                  }
	                } else {
	                  peg$currPos = s0;
	                  s0 = peg$FAILED;
	                }
	              } else {
	                peg$currPos = s0;
	                s0 = peg$FAILED;
	              }
	            } else {
	              peg$currPos = s0;
	              s0 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseSelectSubQuery() {
	      var s0, s1, s2, s3, s4, s5, s6, s7, s8;

	      s0 = peg$currPos;
	      s1 = peg$parseSelectToken();
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parseDistinctToken();
	        if (s2 === peg$FAILED) {
	          s2 = null;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parseColumns();
	          if (s3 === peg$FAILED) {
	            s3 = null;
	          }
	          if (s3 !== peg$FAILED) {
	            s4 = peg$parseWhereClause();
	            if (s4 === peg$FAILED) {
	              s4 = null;
	            }
	            if (s4 !== peg$FAILED) {
	              s5 = peg$parseGroupByClause();
	              if (s5 !== peg$FAILED) {
	                s6 = peg$parseHavingClause();
	                if (s6 === peg$FAILED) {
	                  s6 = null;
	                }
	                if (s6 !== peg$FAILED) {
	                  s7 = peg$parseOrderByClause();
	                  if (s7 === peg$FAILED) {
	                    s7 = null;
	                  }
	                  if (s7 !== peg$FAILED) {
	                    s8 = peg$parseLimitClause();
	                    if (s8 === peg$FAILED) {
	                      s8 = null;
	                    }
	                    if (s8 !== peg$FAILED) {
	                      peg$savedPos = s0;
	                      s1 = peg$c15(s2, s3, s4, s5, s6, s7, s8);
	                      s0 = s1;
	                    } else {
	                      peg$currPos = s0;
	                      s0 = peg$FAILED;
	                    }
	                  } else {
	                    peg$currPos = s0;
	                    s0 = peg$FAILED;
	                  }
	                } else {
	                  peg$currPos = s0;
	                  s0 = peg$FAILED;
	                }
	              } else {
	                peg$currPos = s0;
	                s0 = peg$FAILED;
	              }
	            } else {
	              peg$currPos = s0;
	              s0 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseColumns() {
	      var s0, s1, s2, s3, s4, s5;

	      s0 = peg$currPos;
	      s1 = peg$parseStarToken();
	      if (s1 !== peg$FAILED) {
	        peg$savedPos = s0;
	        s1 = peg$c16();
	      }
	      s0 = s1;
	      if (s0 === peg$FAILED) {
	        s0 = peg$currPos;
	        s1 = peg$parseColumn();
	        if (s1 !== peg$FAILED) {
	          s2 = [];
	          s3 = peg$currPos;
	          s4 = peg$parseComma();
	          if (s4 !== peg$FAILED) {
	            s5 = peg$parseColumn();
	            if (s5 !== peg$FAILED) {
	              s4 = [s4, s5];
	              s3 = s4;
	            } else {
	              peg$currPos = s3;
	              s3 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s3;
	            s3 = peg$FAILED;
	          }
	          while (s3 !== peg$FAILED) {
	            s2.push(s3);
	            s3 = peg$currPos;
	            s4 = peg$parseComma();
	            if (s4 !== peg$FAILED) {
	              s5 = peg$parseColumn();
	              if (s5 !== peg$FAILED) {
	                s4 = [s4, s5];
	                s3 = s4;
	              } else {
	                peg$currPos = s3;
	                s3 = peg$FAILED;
	              }
	            } else {
	              peg$currPos = s3;
	              s3 = peg$FAILED;
	            }
	          }
	          if (s2 !== peg$FAILED) {
	            peg$savedPos = s0;
	            s1 = peg$c17(s1, s2);
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      }

	      return s0;
	    }

	    function peg$parseColumn() {
	      var s0, s1, s2;

	      s0 = peg$currPos;
	      s1 = peg$parseOrExpression();
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parseAsOptional();
	        if (s2 === peg$FAILED) {
	          s2 = null;
	        }
	        if (s2 !== peg$FAILED) {
	          peg$savedPos = s0;
	          s1 = peg$c18(s1, s2);
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseAsMandatory() {
	      var s0, s1, s2;

	      s0 = peg$currPos;
	      s1 = peg$parseAsToken();
	      if (s1 === peg$FAILED) {
	        s1 = null;
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parseString();
	        if (s2 === peg$FAILED) {
	          s2 = peg$parseRef();
	        }
	        if (s2 !== peg$FAILED) {
	          peg$savedPos = s0;
	          s1 = peg$c19(s2);
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseAsOptional() {
	      var s0, s1, s2;

	      s0 = peg$currPos;
	      s1 = peg$parseAsToken();
	      if (s1 === peg$FAILED) {
	        s1 = null;
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parseString();
	        if (s2 === peg$FAILED) {
	          s2 = peg$parseRef();
	        }
	        if (s2 !== peg$FAILED) {
	          peg$savedPos = s0;
	          s1 = peg$c19(s2);
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseFromClause() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      s1 = peg$parseFromToken();
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parseFromContent();
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parseAsOptional();
	          if (s3 === peg$FAILED) {
	            s3 = null;
	          }
	          if (s3 !== peg$FAILED) {
	            peg$savedPos = s0;
	            s1 = peg$c20(s2);
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseFromContent() {
	      var s0, s1, s2, s3;

	      s0 = peg$parseRelaxedNamespacedRef();
	      if (s0 === peg$FAILED) {
	        s0 = peg$currPos;
	        s1 = peg$parseOpenParen();
	        if (s1 !== peg$FAILED) {
	          s2 = peg$parseSelectQuery();
	          if (s2 !== peg$FAILED) {
	            s3 = peg$parseCloseParen();
	            if (s3 !== peg$FAILED) {
	              peg$savedPos = s0;
	              s1 = peg$c21(s2);
	              s0 = s1;
	            } else {
	              peg$currPos = s0;
	              s0 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      }

	      return s0;
	    }

	    function peg$parseWhereClause() {
	      var s0, s1, s2;

	      s0 = peg$currPos;
	      s1 = peg$parseWhereToken();
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parseOrExpression();
	        if (s2 !== peg$FAILED) {
	          peg$savedPos = s0;
	          s1 = peg$c22(s2);
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseGroupByClause() {
	      var s0, s1, s2, s3, s4, s5, s6, s7;

	      s0 = peg$currPos;
	      s1 = peg$parseGroupToken();
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parseByToken();
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parseOrExpression();
	          if (s3 !== peg$FAILED) {
	            s4 = [];
	            s5 = peg$currPos;
	            s6 = peg$parseComma();
	            if (s6 !== peg$FAILED) {
	              s7 = peg$parseOrExpression();
	              if (s7 !== peg$FAILED) {
	                s6 = [s6, s7];
	                s5 = s6;
	              } else {
	                peg$currPos = s5;
	                s5 = peg$FAILED;
	              }
	            } else {
	              peg$currPos = s5;
	              s5 = peg$FAILED;
	            }
	            while (s5 !== peg$FAILED) {
	              s4.push(s5);
	              s5 = peg$currPos;
	              s6 = peg$parseComma();
	              if (s6 !== peg$FAILED) {
	                s7 = peg$parseOrExpression();
	                if (s7 !== peg$FAILED) {
	                  s6 = [s6, s7];
	                  s5 = s6;
	                } else {
	                  peg$currPos = s5;
	                  s5 = peg$FAILED;
	                }
	              } else {
	                peg$currPos = s5;
	                s5 = peg$FAILED;
	              }
	            }
	            if (s4 !== peg$FAILED) {
	              peg$savedPos = s0;
	              s1 = peg$c17(s3, s4);
	              s0 = s1;
	            } else {
	              peg$currPos = s0;
	              s0 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseHavingClause() {
	      var s0, s1, s2;

	      s0 = peg$currPos;
	      s1 = peg$parseHavingToken();
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parseOrExpression();
	        if (s2 !== peg$FAILED) {
	          peg$savedPos = s0;
	          s1 = peg$c23(s2);
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseOrderByClause() {
	      var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9;

	      s0 = peg$currPos;
	      s1 = peg$parseOrderToken();
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parseByToken();
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parseOrExpression();
	          if (s3 !== peg$FAILED) {
	            s4 = peg$parseDirection();
	            if (s4 === peg$FAILED) {
	              s4 = null;
	            }
	            if (s4 !== peg$FAILED) {
	              s5 = [];
	              s6 = peg$currPos;
	              s7 = peg$parseComma();
	              if (s7 !== peg$FAILED) {
	                s8 = peg$parseOrExpression();
	                if (s8 !== peg$FAILED) {
	                  s9 = peg$parseDirection();
	                  if (s9 === peg$FAILED) {
	                    s9 = null;
	                  }
	                  if (s9 !== peg$FAILED) {
	                    s7 = [s7, s8, s9];
	                    s6 = s7;
	                  } else {
	                    peg$currPos = s6;
	                    s6 = peg$FAILED;
	                  }
	                } else {
	                  peg$currPos = s6;
	                  s6 = peg$FAILED;
	                }
	              } else {
	                peg$currPos = s6;
	                s6 = peg$FAILED;
	              }
	              while (s6 !== peg$FAILED) {
	                s5.push(s6);
	                s6 = peg$currPos;
	                s7 = peg$parseComma();
	                if (s7 !== peg$FAILED) {
	                  s8 = peg$parseOrExpression();
	                  if (s8 !== peg$FAILED) {
	                    s9 = peg$parseDirection();
	                    if (s9 === peg$FAILED) {
	                      s9 = null;
	                    }
	                    if (s9 !== peg$FAILED) {
	                      s7 = [s7, s8, s9];
	                      s6 = s7;
	                    } else {
	                      peg$currPos = s6;
	                      s6 = peg$FAILED;
	                    }
	                  } else {
	                    peg$currPos = s6;
	                    s6 = peg$FAILED;
	                  }
	                } else {
	                  peg$currPos = s6;
	                  s6 = peg$FAILED;
	                }
	              }
	              if (s5 !== peg$FAILED) {
	                peg$savedPos = s0;
	                s1 = peg$c24(s3, s4, s5);
	                s0 = s1;
	              } else {
	                peg$currPos = s0;
	                s0 = peg$FAILED;
	              }
	            } else {
	              peg$currPos = s0;
	              s0 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseDirection() {
	      var s0;

	      s0 = peg$parseAscToken();
	      if (s0 === peg$FAILED) {
	        s0 = peg$parseDescToken();
	      }

	      return s0;
	    }

	    function peg$parseLimitClause() {
	      var s0, s1, s2, s3, s4, s5;

	      s0 = peg$currPos;
	      s1 = peg$parseLimitToken();
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parseNumber();
	        if (s2 !== peg$FAILED) {
	          s3 = peg$currPos;
	          s4 = peg$parseComma();
	          if (s4 !== peg$FAILED) {
	            s5 = peg$parseNumber();
	            if (s5 !== peg$FAILED) {
	              s4 = [s4, s5];
	              s3 = s4;
	            } else {
	              peg$currPos = s3;
	              s3 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s3;
	            s3 = peg$FAILED;
	          }
	          if (s3 === peg$FAILED) {
	            s3 = null;
	          }
	          if (s3 !== peg$FAILED) {
	            peg$savedPos = s0;
	            s1 = peg$c25(s2, s3);
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseQueryTerminator() {
	      var s0, s1, s2;

	      s0 = peg$currPos;
	      if (input.charCodeAt(peg$currPos) === 59) {
	        s1 = peg$c26;
	        peg$currPos++;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c27); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parse_();
	        if (s2 !== peg$FAILED) {
	          s1 = [s1, s2];
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseOrExpression() {
	      var s0, s1, s2, s3, s4, s5;

	      s0 = peg$currPos;
	      s1 = peg$parseAndExpression();
	      if (s1 !== peg$FAILED) {
	        s2 = [];
	        s3 = peg$currPos;
	        s4 = peg$parseOrToken();
	        if (s4 !== peg$FAILED) {
	          s5 = peg$parseAndExpression();
	          if (s5 !== peg$FAILED) {
	            s4 = [s4, s5];
	            s3 = s4;
	          } else {
	            peg$currPos = s3;
	            s3 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s3;
	          s3 = peg$FAILED;
	        }
	        while (s3 !== peg$FAILED) {
	          s2.push(s3);
	          s3 = peg$currPos;
	          s4 = peg$parseOrToken();
	          if (s4 !== peg$FAILED) {
	            s5 = peg$parseAndExpression();
	            if (s5 !== peg$FAILED) {
	              s4 = [s4, s5];
	              s3 = s4;
	            } else {
	              peg$currPos = s3;
	              s3 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s3;
	            s3 = peg$FAILED;
	          }
	        }
	        if (s2 !== peg$FAILED) {
	          peg$savedPos = s0;
	          s1 = peg$c28(s1, s2);
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseAndExpression() {
	      var s0, s1, s2, s3, s4, s5;

	      s0 = peg$currPos;
	      s1 = peg$parseNotExpression();
	      if (s1 !== peg$FAILED) {
	        s2 = [];
	        s3 = peg$currPos;
	        s4 = peg$parseAndToken();
	        if (s4 !== peg$FAILED) {
	          s5 = peg$parseNotExpression();
	          if (s5 !== peg$FAILED) {
	            s4 = [s4, s5];
	            s3 = s4;
	          } else {
	            peg$currPos = s3;
	            s3 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s3;
	          s3 = peg$FAILED;
	        }
	        while (s3 !== peg$FAILED) {
	          s2.push(s3);
	          s3 = peg$currPos;
	          s4 = peg$parseAndToken();
	          if (s4 !== peg$FAILED) {
	            s5 = peg$parseNotExpression();
	            if (s5 !== peg$FAILED) {
	              s4 = [s4, s5];
	              s3 = s4;
	            } else {
	              peg$currPos = s3;
	              s3 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s3;
	            s3 = peg$FAILED;
	          }
	        }
	        if (s2 !== peg$FAILED) {
	          peg$savedPos = s0;
	          s1 = peg$c29(s1, s2);
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseNotExpression() {
	      var s0, s1, s2;

	      s0 = peg$currPos;
	      s1 = peg$parseNotToken();
	      if (s1 === peg$FAILED) {
	        s1 = null;
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parseComparisonExpression();
	        if (s2 !== peg$FAILED) {
	          peg$savedPos = s0;
	          s1 = peg$c30(s1, s2);
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseComparisonExpression() {
	      var s0, s1, s2;

	      s0 = peg$currPos;
	      s1 = peg$parseAdditiveExpression();
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parseComparisonExpressionRhs();
	        if (s2 === peg$FAILED) {
	          s2 = null;
	        }
	        if (s2 !== peg$FAILED) {
	          peg$savedPos = s0;
	          s1 = peg$c31(s1, s2);
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseComparisonExpressionRhs() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      s1 = peg$parseNotToken();
	      if (s1 === peg$FAILED) {
	        s1 = null;
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parseComparisonExpressionRhsNotable();
	        if (s2 !== peg$FAILED) {
	          peg$savedPos = s0;
	          s1 = peg$c32(s1, s2);
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }
	      if (s0 === peg$FAILED) {
	        s0 = peg$currPos;
	        s1 = peg$parseIsToken();
	        if (s1 !== peg$FAILED) {
	          s2 = peg$parseNotToken();
	          if (s2 === peg$FAILED) {
	            s2 = null;
	          }
	          if (s2 !== peg$FAILED) {
	            s3 = peg$parseAdditiveExpression();
	            if (s3 !== peg$FAILED) {
	              peg$savedPos = s0;
	              s1 = peg$c33(s2, s3);
	              s0 = s1;
	            } else {
	              peg$currPos = s0;
	              s0 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	        if (s0 === peg$FAILED) {
	          s0 = peg$currPos;
	          s1 = peg$parseComparisonOp();
	          if (s1 !== peg$FAILED) {
	            s2 = peg$parse_();
	            if (s2 !== peg$FAILED) {
	              s3 = peg$parseAdditiveExpression();
	              if (s3 !== peg$FAILED) {
	                peg$savedPos = s0;
	                s1 = peg$c34(s1, s3);
	                s0 = s1;
	              } else {
	                peg$currPos = s0;
	                s0 = peg$FAILED;
	              }
	            } else {
	              peg$currPos = s0;
	              s0 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        }
	      }

	      return s0;
	    }

	    function peg$parseComparisonExpressionRhsNotable() {
	      var s0, s1, s2, s3, s4;

	      s0 = peg$currPos;
	      s1 = peg$parseBetweenToken();
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parseAdditiveExpression();
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parseAndToken();
	          if (s3 !== peg$FAILED) {
	            s4 = peg$parseAdditiveExpression();
	            if (s4 !== peg$FAILED) {
	              peg$savedPos = s0;
	              s1 = peg$c35(s2, s4);
	              s0 = s1;
	            } else {
	              peg$currPos = s0;
	              s0 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }
	      if (s0 === peg$FAILED) {
	        s0 = peg$currPos;
	        s1 = peg$parseInToken();
	        if (s1 !== peg$FAILED) {
	          s2 = peg$parseInSetLiteralExpression();
	          if (s2 === peg$FAILED) {
	            s2 = peg$parseAdditiveExpression();
	          }
	          if (s2 !== peg$FAILED) {
	            peg$savedPos = s0;
	            s1 = peg$c36(s2);
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	        if (s0 === peg$FAILED) {
	          s0 = peg$currPos;
	          s1 = peg$parseContainsToken();
	          if (s1 !== peg$FAILED) {
	            s2 = peg$parseString();
	            if (s2 !== peg$FAILED) {
	              peg$savedPos = s0;
	              s1 = peg$c37(s2);
	              s0 = s1;
	            } else {
	              peg$currPos = s0;
	              s0 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	          if (s0 === peg$FAILED) {
	            s0 = peg$parseLikeRhs();
	            if (s0 === peg$FAILED) {
	              s0 = peg$currPos;
	              s1 = peg$parseRegExpToken();
	              if (s1 !== peg$FAILED) {
	                s2 = peg$parseString();
	                if (s2 !== peg$FAILED) {
	                  peg$savedPos = s0;
	                  s1 = peg$c38(s2);
	                  s0 = s1;
	                } else {
	                  peg$currPos = s0;
	                  s0 = peg$FAILED;
	                }
	              } else {
	                peg$currPos = s0;
	                s0 = peg$FAILED;
	              }
	            }
	          }
	        }
	      }

	      return s0;
	    }

	    function peg$parseLikeRhs() {
	      var s0, s1, s2, s3, s4, s5;

	      s0 = peg$currPos;
	      s1 = peg$parseLikeToken();
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parseString();
	        if (s2 !== peg$FAILED) {
	          s3 = peg$currPos;
	          s4 = peg$parseEscapeToken();
	          if (s4 !== peg$FAILED) {
	            s5 = peg$parseString();
	            if (s5 !== peg$FAILED) {
	              s4 = [s4, s5];
	              s3 = s4;
	            } else {
	              peg$currPos = s3;
	              s3 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s3;
	            s3 = peg$FAILED;
	          }
	          if (s3 === peg$FAILED) {
	            s3 = null;
	          }
	          if (s3 !== peg$FAILED) {
	            peg$savedPos = s0;
	            s1 = peg$c39(s2, s3);
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseComparisonOp() {
	      var s0, s1;

	      peg$silentFails++;
	      s0 = peg$currPos;
	      if (input.charCodeAt(peg$currPos) === 61) {
	        s1 = peg$c41;
	        peg$currPos++;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c42); }
	      }
	      if (s1 !== peg$FAILED) {
	        peg$savedPos = s0;
	        s1 = peg$c43();
	      }
	      s0 = s1;
	      if (s0 === peg$FAILED) {
	        s0 = peg$currPos;
	        if (input.substr(peg$currPos, 3) === peg$c44) {
	          s1 = peg$c44;
	          peg$currPos += 3;
	        } else {
	          s1 = peg$FAILED;
	          if (peg$silentFails === 0) { peg$fail(peg$c45); }
	        }
	        if (s1 !== peg$FAILED) {
	          peg$savedPos = s0;
	          s1 = peg$c43();
	        }
	        s0 = s1;
	        if (s0 === peg$FAILED) {
	          s0 = peg$currPos;
	          if (input.substr(peg$currPos, 2) === peg$c46) {
	            s1 = peg$c46;
	            peg$currPos += 2;
	          } else {
	            s1 = peg$FAILED;
	            if (peg$silentFails === 0) { peg$fail(peg$c47); }
	          }
	          if (s1 !== peg$FAILED) {
	            peg$savedPos = s0;
	            s1 = peg$c48();
	          }
	          s0 = s1;
	          if (s0 === peg$FAILED) {
	            s0 = peg$currPos;
	            if (input.substr(peg$currPos, 2) === peg$c49) {
	              s1 = peg$c49;
	              peg$currPos += 2;
	            } else {
	              s1 = peg$FAILED;
	              if (peg$silentFails === 0) { peg$fail(peg$c50); }
	            }
	            if (s1 !== peg$FAILED) {
	              peg$savedPos = s0;
	              s1 = peg$c48();
	            }
	            s0 = s1;
	            if (s0 === peg$FAILED) {
	              s0 = peg$currPos;
	              if (input.substr(peg$currPos, 2) === peg$c51) {
	                s1 = peg$c51;
	                peg$currPos += 2;
	              } else {
	                s1 = peg$FAILED;
	                if (peg$silentFails === 0) { peg$fail(peg$c52); }
	              }
	              if (s1 !== peg$FAILED) {
	                peg$savedPos = s0;
	                s1 = peg$c53();
	              }
	              s0 = s1;
	              if (s0 === peg$FAILED) {
	                s0 = peg$currPos;
	                if (input.substr(peg$currPos, 2) === peg$c54) {
	                  s1 = peg$c54;
	                  peg$currPos += 2;
	                } else {
	                  s1 = peg$FAILED;
	                  if (peg$silentFails === 0) { peg$fail(peg$c55); }
	                }
	                if (s1 !== peg$FAILED) {
	                  peg$savedPos = s0;
	                  s1 = peg$c56();
	                }
	                s0 = s1;
	                if (s0 === peg$FAILED) {
	                  s0 = peg$currPos;
	                  if (input.charCodeAt(peg$currPos) === 60) {
	                    s1 = peg$c57;
	                    peg$currPos++;
	                  } else {
	                    s1 = peg$FAILED;
	                    if (peg$silentFails === 0) { peg$fail(peg$c58); }
	                  }
	                  if (s1 !== peg$FAILED) {
	                    peg$savedPos = s0;
	                    s1 = peg$c59();
	                  }
	                  s0 = s1;
	                  if (s0 === peg$FAILED) {
	                    s0 = peg$currPos;
	                    if (input.charCodeAt(peg$currPos) === 62) {
	                      s1 = peg$c60;
	                      peg$currPos++;
	                    } else {
	                      s1 = peg$FAILED;
	                      if (peg$silentFails === 0) { peg$fail(peg$c61); }
	                    }
	                    if (s1 !== peg$FAILED) {
	                      peg$savedPos = s0;
	                      s1 = peg$c62();
	                    }
	                    s0 = s1;
	                  }
	                }
	              }
	            }
	          }
	        }
	      }
	      peg$silentFails--;
	      if (s0 === peg$FAILED) {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c40); }
	      }

	      return s0;
	    }

	    function peg$parseAdditiveExpression() {
	      var s0, s1, s2, s3, s4, s5;

	      s0 = peg$currPos;
	      s1 = peg$parseMultiplicativeExpression();
	      if (s1 !== peg$FAILED) {
	        s2 = [];
	        s3 = peg$currPos;
	        s4 = peg$parseAdditiveOp();
	        if (s4 !== peg$FAILED) {
	          s5 = peg$parseMultiplicativeExpression();
	          if (s5 !== peg$FAILED) {
	            s4 = [s4, s5];
	            s3 = s4;
	          } else {
	            peg$currPos = s3;
	            s3 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s3;
	          s3 = peg$FAILED;
	        }
	        while (s3 !== peg$FAILED) {
	          s2.push(s3);
	          s3 = peg$currPos;
	          s4 = peg$parseAdditiveOp();
	          if (s4 !== peg$FAILED) {
	            s5 = peg$parseMultiplicativeExpression();
	            if (s5 !== peg$FAILED) {
	              s4 = [s4, s5];
	              s3 = s4;
	            } else {
	              peg$currPos = s3;
	              s3 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s3;
	            s3 = peg$FAILED;
	          }
	        }
	        if (s2 !== peg$FAILED) {
	          peg$savedPos = s0;
	          s1 = peg$c63(s1, s2);
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseAdditiveOp() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.charCodeAt(peg$currPos) === 43) {
	        s1 = peg$c64;
	        peg$currPos++;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c65); }
	      }
	      if (s1 === peg$FAILED) {
	        if (input.charCodeAt(peg$currPos) === 45) {
	          s1 = peg$c66;
	          peg$currPos++;
	        } else {
	          s1 = peg$FAILED;
	          if (peg$silentFails === 0) { peg$fail(peg$c67); }
	        }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        if (input.charCodeAt(peg$currPos) === 43) {
	          s3 = peg$c64;
	          peg$currPos++;
	        } else {
	          s3 = peg$FAILED;
	          if (peg$silentFails === 0) { peg$fail(peg$c65); }
	        }
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            peg$savedPos = s0;
	            s1 = peg$c68(s1);
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseMultiplicativeExpression() {
	      var s0, s1, s2, s3, s4, s5;

	      s0 = peg$currPos;
	      s1 = peg$parseUnaryExpression();
	      if (s1 !== peg$FAILED) {
	        s2 = [];
	        s3 = peg$currPos;
	        s4 = peg$parseMultiplicativeOp();
	        if (s4 !== peg$FAILED) {
	          s5 = peg$parseUnaryExpression();
	          if (s5 !== peg$FAILED) {
	            s4 = [s4, s5];
	            s3 = s4;
	          } else {
	            peg$currPos = s3;
	            s3 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s3;
	          s3 = peg$FAILED;
	        }
	        while (s3 !== peg$FAILED) {
	          s2.push(s3);
	          s3 = peg$currPos;
	          s4 = peg$parseMultiplicativeOp();
	          if (s4 !== peg$FAILED) {
	            s5 = peg$parseUnaryExpression();
	            if (s5 !== peg$FAILED) {
	              s4 = [s4, s5];
	              s3 = s4;
	            } else {
	              peg$currPos = s3;
	              s3 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s3;
	            s3 = peg$FAILED;
	          }
	        }
	        if (s2 !== peg$FAILED) {
	          peg$savedPos = s0;
	          s1 = peg$c69(s1, s2);
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseMultiplicativeOp() {
	      var s0, s1, s2;

	      s0 = peg$currPos;
	      if (input.charCodeAt(peg$currPos) === 42) {
	        s1 = peg$c70;
	        peg$currPos++;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c71); }
	      }
	      if (s1 === peg$FAILED) {
	        if (input.charCodeAt(peg$currPos) === 47) {
	          s1 = peg$c72;
	          peg$currPos++;
	        } else {
	          s1 = peg$FAILED;
	          if (peg$silentFails === 0) { peg$fail(peg$c73); }
	        }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parse_();
	        if (s2 !== peg$FAILED) {
	          peg$savedPos = s0;
	          s1 = peg$c68(s1);
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseUnaryExpression() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      s1 = peg$parseAdditiveOp();
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseNumber();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parseBasicExpression();
	          if (s3 !== peg$FAILED) {
	            peg$savedPos = s0;
	            s1 = peg$c74(s1, s3);
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }
	      if (s0 === peg$FAILED) {
	        s0 = peg$parseBasicExpression();
	      }

	      return s0;
	    }

	    function peg$parseBasicExpression() {
	      var s0, s1, s2, s3;

	      s0 = peg$parseLiteralExpression();
	      if (s0 === peg$FAILED) {
	        s0 = peg$parseAggregateExpression();
	        if (s0 === peg$FAILED) {
	          s0 = peg$parseFunctionCallExpression();
	          if (s0 === peg$FAILED) {
	            s0 = peg$currPos;
	            s1 = peg$parseOpenParen();
	            if (s1 !== peg$FAILED) {
	              s2 = peg$parseOrExpression();
	              if (s2 === peg$FAILED) {
	                s2 = peg$parseSelectSubQuery();
	              }
	              if (s2 !== peg$FAILED) {
	                s3 = peg$parseCloseParen();
	                if (s3 !== peg$FAILED) {
	                  peg$savedPos = s0;
	                  s1 = peg$c75(s2);
	                  s0 = s1;
	                } else {
	                  peg$currPos = s0;
	                  s0 = peg$FAILED;
	                }
	              } else {
	                peg$currPos = s0;
	                s0 = peg$FAILED;
	              }
	            } else {
	              peg$currPos = s0;
	              s0 = peg$FAILED;
	            }
	            if (s0 === peg$FAILED) {
	              s0 = peg$parseRefExpression();
	            }
	          }
	        }
	      }

	      return s0;
	    }

	    function peg$parseAggregateExpression() {
	      var s0, s1, s2, s3, s4, s5, s6, s7;

	      s0 = peg$currPos;
	      s1 = peg$parseCountToken();
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parseOpenParen();
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parseDistinctToken();
	          if (s3 === peg$FAILED) {
	            s3 = null;
	          }
	          if (s3 !== peg$FAILED) {
	            s4 = peg$parseExpressionMaybeFiltered();
	            if (s4 === peg$FAILED) {
	              s4 = null;
	            }
	            if (s4 !== peg$FAILED) {
	              s5 = peg$parseCloseParen();
	              if (s5 !== peg$FAILED) {
	                peg$savedPos = s0;
	                s1 = peg$c76(s3, s4);
	                s0 = s1;
	              } else {
	                peg$currPos = s0;
	                s0 = peg$FAILED;
	              }
	            } else {
	              peg$currPos = s0;
	              s0 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }
	      if (s0 === peg$FAILED) {
	        s0 = peg$currPos;
	        s1 = peg$parseAggregateFn();
	        if (s1 !== peg$FAILED) {
	          s2 = peg$parseOpenParen();
	          if (s2 !== peg$FAILED) {
	            s3 = peg$parseDistinctToken();
	            if (s3 === peg$FAILED) {
	              s3 = null;
	            }
	            if (s3 !== peg$FAILED) {
	              s4 = peg$parseExpressionMaybeFiltered();
	              if (s4 !== peg$FAILED) {
	                s5 = peg$parseCloseParen();
	                if (s5 !== peg$FAILED) {
	                  peg$savedPos = s0;
	                  s1 = peg$c77(s1, s3, s4);
	                  s0 = s1;
	                } else {
	                  peg$currPos = s0;
	                  s0 = peg$FAILED;
	                }
	              } else {
	                peg$currPos = s0;
	                s0 = peg$FAILED;
	              }
	            } else {
	              peg$currPos = s0;
	              s0 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	        if (s0 === peg$FAILED) {
	          s0 = peg$currPos;
	          s1 = peg$parseQuantileToken();
	          if (s1 !== peg$FAILED) {
	            s2 = peg$parseOpenParen();
	            if (s2 !== peg$FAILED) {
	              s3 = peg$parseDistinctToken();
	              if (s3 === peg$FAILED) {
	                s3 = null;
	              }
	              if (s3 !== peg$FAILED) {
	                s4 = peg$parseExpressionMaybeFiltered();
	                if (s4 !== peg$FAILED) {
	                  s5 = peg$parseComma();
	                  if (s5 !== peg$FAILED) {
	                    s6 = peg$parseNumber();
	                    if (s6 !== peg$FAILED) {
	                      s7 = peg$parseCloseParen();
	                      if (s7 !== peg$FAILED) {
	                        peg$savedPos = s0;
	                        s1 = peg$c78(s3, s4, s6);
	                        s0 = s1;
	                      } else {
	                        peg$currPos = s0;
	                        s0 = peg$FAILED;
	                      }
	                    } else {
	                      peg$currPos = s0;
	                      s0 = peg$FAILED;
	                    }
	                  } else {
	                    peg$currPos = s0;
	                    s0 = peg$FAILED;
	                  }
	                } else {
	                  peg$currPos = s0;
	                  s0 = peg$FAILED;
	                }
	              } else {
	                peg$currPos = s0;
	                s0 = peg$FAILED;
	              }
	            } else {
	              peg$currPos = s0;
	              s0 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	          if (s0 === peg$FAILED) {
	            s0 = peg$currPos;
	            s1 = peg$parseCustomAggregateToken();
	            if (s1 === peg$FAILED) {
	              s1 = peg$parseCustomToken();
	            }
	            if (s1 !== peg$FAILED) {
	              s2 = peg$parseOpenParen();
	              if (s2 !== peg$FAILED) {
	                s3 = peg$parseString();
	                if (s3 !== peg$FAILED) {
	                  s4 = peg$parseWhereClause();
	                  if (s4 === peg$FAILED) {
	                    s4 = null;
	                  }
	                  if (s4 !== peg$FAILED) {
	                    s5 = peg$parseCloseParen();
	                    if (s5 !== peg$FAILED) {
	                      peg$savedPos = s0;
	                      s1 = peg$c79(s3, s4);
	                      s0 = s1;
	                    } else {
	                      peg$currPos = s0;
	                      s0 = peg$FAILED;
	                    }
	                  } else {
	                    peg$currPos = s0;
	                    s0 = peg$FAILED;
	                  }
	                } else {
	                  peg$currPos = s0;
	                  s0 = peg$FAILED;
	                }
	              } else {
	                peg$currPos = s0;
	                s0 = peg$FAILED;
	              }
	            } else {
	              peg$currPos = s0;
	              s0 = peg$FAILED;
	            }
	          }
	        }
	      }

	      return s0;
	    }

	    function peg$parseAggregateFn() {
	      var s0;

	      s0 = peg$parseSumToken();
	      if (s0 === peg$FAILED) {
	        s0 = peg$parseAvgToken();
	        if (s0 === peg$FAILED) {
	          s0 = peg$parseMinToken();
	          if (s0 === peg$FAILED) {
	            s0 = peg$parseMaxToken();
	            if (s0 === peg$FAILED) {
	              s0 = peg$parseCountDistinctToken();
	            }
	          }
	        }
	      }

	      return s0;
	    }

	    function peg$parseExpressionMaybeFiltered() {
	      var s0, s1, s2;

	      s0 = peg$currPos;
	      s1 = peg$parseStarToken();
	      if (s1 === peg$FAILED) {
	        s1 = peg$parseOrExpression();
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parseWhereClause();
	        if (s2 === peg$FAILED) {
	          s2 = null;
	        }
	        if (s2 !== peg$FAILED) {
	          peg$savedPos = s0;
	          s1 = peg$c80(s1, s2);
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseFunctionCallExpression() {
	      var s0, s1, s2, s3, s4, s5;

	      s0 = peg$currPos;
	      s1 = peg$parseFn();
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parseOpenParen();
	        if (s2 !== peg$FAILED) {
	          s3 = peg$currPos;
	          s4 = peg$parseOrExpression();
	          if (s4 !== peg$FAILED) {
	            s5 = peg$parseAsMandatory();
	            if (s5 !== peg$FAILED) {
	              s4 = [s4, s5];
	              s3 = s4;
	            } else {
	              peg$currPos = s3;
	              s3 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s3;
	            s3 = peg$FAILED;
	          }
	          if (s3 === peg$FAILED) {
	            s3 = peg$parseParams();
	          }
	          if (s3 !== peg$FAILED) {
	            s4 = peg$parseCloseParen();
	            if (s4 !== peg$FAILED) {
	              peg$savedPos = s0;
	              s1 = peg$c81(s1, s3);
	              s0 = s1;
	            } else {
	              peg$currPos = s0;
	              s0 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseFn() {
	      var s0, s1, s2;

	      s0 = peg$currPos;
	      s1 = peg$parseName();
	      if (s1 !== peg$FAILED) {
	        peg$savedPos = peg$currPos;
	        s2 = peg$c82(s1);
	        if (s2) {
	          s2 = void 0;
	        } else {
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          peg$savedPos = s0;
	          s1 = peg$c82(s1);
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseParams() {
	      var s0, s1, s2, s3, s4, s5;

	      s0 = peg$currPos;
	      s1 = peg$parseParam();
	      if (s1 === peg$FAILED) {
	        s1 = null;
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = [];
	        s3 = peg$currPos;
	        s4 = peg$parseComma();
	        if (s4 !== peg$FAILED) {
	          s5 = peg$parseParam();
	          if (s5 !== peg$FAILED) {
	            s4 = [s4, s5];
	            s3 = s4;
	          } else {
	            peg$currPos = s3;
	            s3 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s3;
	          s3 = peg$FAILED;
	        }
	        while (s3 !== peg$FAILED) {
	          s2.push(s3);
	          s3 = peg$currPos;
	          s4 = peg$parseComma();
	          if (s4 !== peg$FAILED) {
	            s5 = peg$parseParam();
	            if (s5 !== peg$FAILED) {
	              s4 = [s4, s5];
	              s3 = s4;
	            } else {
	              peg$currPos = s3;
	              s3 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s3;
	            s3 = peg$FAILED;
	          }
	        }
	        if (s2 !== peg$FAILED) {
	          peg$savedPos = s0;
	          s1 = peg$c17(s1, s2);
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseParam() {
	      var s0;

	      s0 = peg$parseNumber();
	      if (s0 === peg$FAILED) {
	        s0 = peg$parseString();
	        if (s0 === peg$FAILED) {
	          s0 = peg$parseInterval();
	          if (s0 === peg$FAILED) {
	            s0 = peg$parseOrExpression();
	          }
	        }
	      }

	      return s0;
	    }

	    function peg$parseRefExpression() {
	      var s0, s1;

	      s0 = peg$currPos;
	      s1 = peg$parseNamespacedRef();
	      if (s1 !== peg$FAILED) {
	        peg$savedPos = s0;
	        s1 = peg$c83(s1);
	      }
	      s0 = s1;

	      return s0;
	    }

	    function peg$parseRelaxedNamespacedRef() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      s1 = peg$currPos;
	      s2 = peg$parseRef();
	      if (s2 !== peg$FAILED) {
	        s3 = peg$parseDot();
	        if (s3 !== peg$FAILED) {
	          s2 = [s2, s3];
	          s1 = s2;
	        } else {
	          peg$currPos = s1;
	          s1 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s1;
	        s1 = peg$FAILED;
	      }
	      if (s1 === peg$FAILED) {
	        s1 = null;
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parseRelaxedRef();
	        if (s2 !== peg$FAILED) {
	          peg$savedPos = s0;
	          s1 = peg$c84(s1, s2);
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseNamespacedRef() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      s1 = peg$currPos;
	      s2 = peg$parseRef();
	      if (s2 !== peg$FAILED) {
	        s3 = peg$parseDot();
	        if (s3 !== peg$FAILED) {
	          s2 = [s2, s3];
	          s1 = s2;
	        } else {
	          peg$currPos = s1;
	          s1 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s1;
	        s1 = peg$FAILED;
	      }
	      if (s1 === peg$FAILED) {
	        s1 = null;
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parseRef();
	        if (s2 !== peg$FAILED) {
	          peg$savedPos = s0;
	          s1 = peg$c84(s1, s2);
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseRelaxedRef() {
	      var s0, s1, s2;

	      s0 = peg$currPos;
	      s1 = peg$parseRelaxedName();
	      if (s1 !== peg$FAILED) {
	        peg$savedPos = peg$currPos;
	        s2 = peg$c85(s1);
	        if (s2) {
	          s2 = peg$FAILED;
	        } else {
	          s2 = void 0;
	        }
	        if (s2 !== peg$FAILED) {
	          peg$savedPos = s0;
	          s1 = peg$c86(s1);
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }
	      if (s0 === peg$FAILED) {
	        s0 = peg$parseBacktickRef();
	      }

	      return s0;
	    }

	    function peg$parseRef() {
	      var s0, s1, s2;

	      s0 = peg$currPos;
	      s1 = peg$parseName();
	      if (s1 !== peg$FAILED) {
	        peg$savedPos = peg$currPos;
	        s2 = peg$c85(s1);
	        if (s2) {
	          s2 = peg$FAILED;
	        } else {
	          s2 = void 0;
	        }
	        if (s2 !== peg$FAILED) {
	          peg$savedPos = s0;
	          s1 = peg$c86(s1);
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }
	      if (s0 === peg$FAILED) {
	        s0 = peg$parseBacktickRef();
	      }

	      return s0;
	    }

	    function peg$parseBacktickRef() {
	      var s0, s1, s2, s3, s4;

	      s0 = peg$currPos;
	      if (input.charCodeAt(peg$currPos) === 96) {
	        s1 = peg$c87;
	        peg$currPos++;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c88); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        s3 = [];
	        if (peg$c89.test(input.charAt(peg$currPos))) {
	          s4 = input.charAt(peg$currPos);
	          peg$currPos++;
	        } else {
	          s4 = peg$FAILED;
	          if (peg$silentFails === 0) { peg$fail(peg$c90); }
	        }
	        if (s4 !== peg$FAILED) {
	          while (s4 !== peg$FAILED) {
	            s3.push(s4);
	            if (peg$c89.test(input.charAt(peg$currPos))) {
	              s4 = input.charAt(peg$currPos);
	              peg$currPos++;
	            } else {
	              s4 = peg$FAILED;
	              if (peg$silentFails === 0) { peg$fail(peg$c90); }
	            }
	          }
	        } else {
	          s3 = peg$FAILED;
	        }
	        if (s3 !== peg$FAILED) {
	          s2 = input.substring(s2, peg$currPos);
	        } else {
	          s2 = s3;
	        }
	        if (s2 !== peg$FAILED) {
	          if (input.charCodeAt(peg$currPos) === 96) {
	            s3 = peg$c87;
	            peg$currPos++;
	          } else {
	            s3 = peg$FAILED;
	            if (peg$silentFails === 0) { peg$fail(peg$c88); }
	          }
	          if (s3 !== peg$FAILED) {
	            s4 = peg$parse_();
	            if (s4 !== peg$FAILED) {
	              peg$savedPos = s0;
	              s1 = peg$c86(s2);
	              s0 = s1;
	            } else {
	              peg$currPos = s0;
	              s0 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseNameOrString() {
	      var s0;

	      s0 = peg$parseName();
	      if (s0 === peg$FAILED) {
	        s0 = peg$parseString();
	      }

	      return s0;
	    }

	    function peg$parseLiteralExpression() {
	      var s0, s1, s2, s3, s4;

	      s0 = peg$currPos;
	      s1 = peg$parseOpenCurly();
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parseDToken();
	        if (s2 === peg$FAILED) {
	          s2 = peg$parseTToken();
	          if (s2 === peg$FAILED) {
	            s2 = peg$parseTsToken();
	          }
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parseString();
	          if (s3 !== peg$FAILED) {
	            s4 = peg$parseCloseCurly();
	            if (s4 !== peg$FAILED) {
	              peg$savedPos = s0;
	              s1 = peg$c91(s2, s3);
	              s0 = s1;
	            } else {
	              peg$currPos = s0;
	              s0 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }
	      if (s0 === peg$FAILED) {
	        s0 = peg$currPos;
	        s1 = peg$parseDateToken();
	        if (s1 === peg$FAILED) {
	          s1 = peg$parseTimeToken();
	          if (s1 === peg$FAILED) {
	            s1 = peg$parseTimestampToken();
	          }
	        }
	        if (s1 !== peg$FAILED) {
	          s2 = peg$parseString();
	          if (s2 !== peg$FAILED) {
	            peg$savedPos = s0;
	            s1 = peg$c91(s1, s2);
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	        if (s0 === peg$FAILED) {
	          s0 = peg$currPos;
	          s1 = peg$parseNumber();
	          if (s1 === peg$FAILED) {
	            s1 = peg$parseString();
	            if (s1 === peg$FAILED) {
	              s1 = peg$parseSetLiteral();
	              if (s1 === peg$FAILED) {
	                s1 = peg$parseNullToken();
	                if (s1 === peg$FAILED) {
	                  s1 = peg$parseTrueToken();
	                  if (s1 === peg$FAILED) {
	                    s1 = peg$parseFalseToken();
	                  }
	                }
	              }
	            }
	          }
	          if (s1 !== peg$FAILED) {
	            peg$savedPos = s0;
	            s1 = peg$c92(s1);
	          }
	          s0 = s1;
	        }
	      }

	      return s0;
	    }

	    function peg$parseSetLiteral() {
	      var s0, s1, s2, s3, s4, s5, s6;

	      s0 = peg$currPos;
	      s1 = peg$parseOpenCurly();
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parseStringNumberOrNull();
	        if (s2 === peg$FAILED) {
	          s2 = null;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = [];
	          s4 = peg$currPos;
	          s5 = peg$parseComma();
	          if (s5 !== peg$FAILED) {
	            s6 = peg$parseStringNumberOrNull();
	            if (s6 !== peg$FAILED) {
	              s5 = [s5, s6];
	              s4 = s5;
	            } else {
	              peg$currPos = s4;
	              s4 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s4;
	            s4 = peg$FAILED;
	          }
	          while (s4 !== peg$FAILED) {
	            s3.push(s4);
	            s4 = peg$currPos;
	            s5 = peg$parseComma();
	            if (s5 !== peg$FAILED) {
	              s6 = peg$parseStringNumberOrNull();
	              if (s6 !== peg$FAILED) {
	                s5 = [s5, s6];
	                s4 = s5;
	              } else {
	                peg$currPos = s4;
	                s4 = peg$FAILED;
	              }
	            } else {
	              peg$currPos = s4;
	              s4 = peg$FAILED;
	            }
	          }
	          if (s3 !== peg$FAILED) {
	            s4 = peg$parseCloseCurly();
	            if (s4 !== peg$FAILED) {
	              peg$savedPos = s0;
	              s1 = peg$c93(s2, s3);
	              s0 = s1;
	            } else {
	              peg$currPos = s0;
	              s0 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseStringNumberOrNull() {
	      var s0;

	      s0 = peg$parseString();
	      if (s0 === peg$FAILED) {
	        s0 = peg$parseNumber();
	        if (s0 === peg$FAILED) {
	          s0 = peg$parseNullToken();
	        }
	      }

	      return s0;
	    }

	    function peg$parseInSetLiteralExpression() {
	      var s0, s1, s2, s3, s4, s5, s6;

	      s0 = peg$currPos;
	      s1 = peg$parseOpenParen();
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parseStringOrNumber();
	        if (s2 !== peg$FAILED) {
	          s3 = [];
	          s4 = peg$currPos;
	          s5 = peg$parseComma();
	          if (s5 !== peg$FAILED) {
	            s6 = peg$parseStringOrNumber();
	            if (s6 !== peg$FAILED) {
	              s5 = [s5, s6];
	              s4 = s5;
	            } else {
	              peg$currPos = s4;
	              s4 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s4;
	            s4 = peg$FAILED;
	          }
	          while (s4 !== peg$FAILED) {
	            s3.push(s4);
	            s4 = peg$currPos;
	            s5 = peg$parseComma();
	            if (s5 !== peg$FAILED) {
	              s6 = peg$parseStringOrNumber();
	              if (s6 !== peg$FAILED) {
	                s5 = [s5, s6];
	                s4 = s5;
	              } else {
	                peg$currPos = s4;
	                s4 = peg$FAILED;
	              }
	            } else {
	              peg$currPos = s4;
	              s4 = peg$FAILED;
	            }
	          }
	          if (s3 !== peg$FAILED) {
	            s4 = peg$parseCloseParen();
	            if (s4 !== peg$FAILED) {
	              peg$savedPos = s0;
	              s1 = peg$c94(s2, s3);
	              s0 = s1;
	            } else {
	              peg$currPos = s0;
	              s0 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseStringOrNumber() {
	      var s0;

	      s0 = peg$parseString();
	      if (s0 === peg$FAILED) {
	        s0 = peg$parseNumber();
	      }

	      return s0;
	    }

	    function peg$parseString() {
	      var s0, s1, s2, s3, s4;

	      peg$silentFails++;
	      s0 = peg$currPos;
	      if (input.charCodeAt(peg$currPos) === 39) {
	        s1 = peg$c96;
	        peg$currPos++;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c97); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parseNotSQuote();
	        if (s2 !== peg$FAILED) {
	          if (input.charCodeAt(peg$currPos) === 39) {
	            s3 = peg$c96;
	            peg$currPos++;
	          } else {
	            s3 = peg$FAILED;
	            if (peg$silentFails === 0) { peg$fail(peg$c97); }
	          }
	          if (s3 !== peg$FAILED) {
	            s4 = peg$parse_();
	            if (s4 !== peg$FAILED) {
	              peg$savedPos = s0;
	              s1 = peg$c98(s2);
	              s0 = s1;
	            } else {
	              peg$currPos = s0;
	              s0 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }
	      if (s0 === peg$FAILED) {
	        s0 = peg$currPos;
	        if (input.charCodeAt(peg$currPos) === 39) {
	          s1 = peg$c96;
	          peg$currPos++;
	        } else {
	          s1 = peg$FAILED;
	          if (peg$silentFails === 0) { peg$fail(peg$c97); }
	        }
	        if (s1 !== peg$FAILED) {
	          s2 = peg$parseNotSQuote();
	          if (s2 !== peg$FAILED) {
	            peg$savedPos = s0;
	            s1 = peg$c99(s2);
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	        if (s0 === peg$FAILED) {
	          s0 = peg$currPos;
	          if (input.charCodeAt(peg$currPos) === 34) {
	            s1 = peg$c100;
	            peg$currPos++;
	          } else {
	            s1 = peg$FAILED;
	            if (peg$silentFails === 0) { peg$fail(peg$c101); }
	          }
	          if (s1 !== peg$FAILED) {
	            s2 = peg$parseNotDQuote();
	            if (s2 !== peg$FAILED) {
	              if (input.charCodeAt(peg$currPos) === 34) {
	                s3 = peg$c100;
	                peg$currPos++;
	              } else {
	                s3 = peg$FAILED;
	                if (peg$silentFails === 0) { peg$fail(peg$c101); }
	              }
	              if (s3 !== peg$FAILED) {
	                s4 = peg$parse_();
	                if (s4 !== peg$FAILED) {
	                  peg$savedPos = s0;
	                  s1 = peg$c98(s2);
	                  s0 = s1;
	                } else {
	                  peg$currPos = s0;
	                  s0 = peg$FAILED;
	                }
	              } else {
	                peg$currPos = s0;
	                s0 = peg$FAILED;
	              }
	            } else {
	              peg$currPos = s0;
	              s0 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	          if (s0 === peg$FAILED) {
	            s0 = peg$currPos;
	            if (input.charCodeAt(peg$currPos) === 34) {
	              s1 = peg$c100;
	              peg$currPos++;
	            } else {
	              s1 = peg$FAILED;
	              if (peg$silentFails === 0) { peg$fail(peg$c101); }
	            }
	            if (s1 !== peg$FAILED) {
	              s2 = peg$parseNotDQuote();
	              if (s2 !== peg$FAILED) {
	                peg$savedPos = s0;
	                s1 = peg$c102(s2);
	                s0 = s1;
	              } else {
	                peg$currPos = s0;
	                s0 = peg$FAILED;
	              }
	            } else {
	              peg$currPos = s0;
	              s0 = peg$FAILED;
	            }
	          }
	        }
	      }
	      peg$silentFails--;
	      if (s0 === peg$FAILED) {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c95); }
	      }

	      return s0;
	    }

	    function peg$parseInterval() {
	      var s0, s1, s2, s3, s4;

	      s0 = peg$currPos;
	      s1 = peg$parseIntervalToken();
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parseNumber();
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parseName();
	          if (s3 !== peg$FAILED) {
	            peg$savedPos = peg$currPos;
	            s4 = peg$c103(s2, s3);
	            if (s4) {
	              s4 = void 0;
	            } else {
	              s4 = peg$FAILED;
	            }
	            if (s4 !== peg$FAILED) {
	              peg$savedPos = s0;
	              s1 = peg$c104(s2, s3);
	              s0 = s1;
	            } else {
	              peg$currPos = s0;
	              s0 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseNullToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 4).toLowerCase() === peg$c105) {
	        s1 = input.substr(peg$currPos, 4);
	        peg$currPos += 4;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c106); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            peg$savedPos = s0;
	            s1 = peg$c107();
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseTrueToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 4).toLowerCase() === peg$c108) {
	        s1 = input.substr(peg$currPos, 4);
	        peg$currPos += 4;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c109); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            peg$savedPos = s0;
	            s1 = peg$c110();
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseFalseToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 5).toLowerCase() === peg$c111) {
	        s1 = input.substr(peg$currPos, 5);
	        peg$currPos += 5;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c112); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            peg$savedPos = s0;
	            s1 = peg$c113();
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseSelectToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 6).toLowerCase() === peg$c114) {
	        s1 = input.substr(peg$currPos, 6);
	        peg$currPos += 6;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c115); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            peg$savedPos = s0;
	            s1 = peg$c116();
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseDescribeToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 8).toLowerCase() === peg$c117) {
	        s1 = input.substr(peg$currPos, 8);
	        peg$currPos += 8;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c118); }
	      }
	      if (s1 === peg$FAILED) {
	        if (input.substr(peg$currPos, 7).toLowerCase() === peg$c119) {
	          s1 = input.substr(peg$currPos, 7);
	          peg$currPos += 7;
	        } else {
	          s1 = peg$FAILED;
	          if (peg$silentFails === 0) { peg$fail(peg$c120); }
	        }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            peg$savedPos = s0;
	            s1 = peg$c121();
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseShowToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 4).toLowerCase() === peg$c122) {
	        s1 = input.substr(peg$currPos, 4);
	        peg$currPos += 4;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c123); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            peg$savedPos = s0;
	            s1 = peg$c124();
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseSetToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 3).toLowerCase() === peg$c125) {
	        s1 = input.substr(peg$currPos, 3);
	        peg$currPos += 3;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c126); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            peg$savedPos = s0;
	            s1 = peg$c127();
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseUseToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 3).toLowerCase() === peg$c128) {
	        s1 = input.substr(peg$currPos, 3);
	        peg$currPos += 3;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c129); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            peg$savedPos = s0;
	            s1 = peg$c130();
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseVariablesToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 9).toLowerCase() === peg$c131) {
	        s1 = input.substr(peg$currPos, 9);
	        peg$currPos += 9;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c132); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            s1 = [s1, s2, s3];
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseDatabasesToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 9).toLowerCase() === peg$c133) {
	        s1 = input.substr(peg$currPos, 9);
	        peg$currPos += 9;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c134); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            s1 = [s1, s2, s3];
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseSchemasToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 7).toLowerCase() === peg$c135) {
	        s1 = input.substr(peg$currPos, 7);
	        peg$currPos += 7;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c136); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            s1 = [s1, s2, s3];
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseColumnsToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 7).toLowerCase() === peg$c137) {
	        s1 = input.substr(peg$currPos, 7);
	        peg$currPos += 7;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c138); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            s1 = [s1, s2, s3];
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseFullToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 4).toLowerCase() === peg$c139) {
	        s1 = input.substr(peg$currPos, 4);
	        peg$currPos += 4;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c140); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            s1 = [s1, s2, s3];
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseTablesToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 6).toLowerCase() === peg$c141) {
	        s1 = input.substr(peg$currPos, 6);
	        peg$currPos += 6;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c142); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            s1 = [s1, s2, s3];
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseGlobalToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 6).toLowerCase() === peg$c143) {
	        s1 = input.substr(peg$currPos, 6);
	        peg$currPos += 6;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c144); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            s1 = [s1, s2, s3];
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseSessionToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 7).toLowerCase() === peg$c145) {
	        s1 = input.substr(peg$currPos, 7);
	        peg$currPos += 7;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c146); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            s1 = [s1, s2, s3];
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseFromToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 4).toLowerCase() === peg$c147) {
	        s1 = input.substr(peg$currPos, 4);
	        peg$currPos += 4;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c148); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            s1 = [s1, s2, s3];
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseAsToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 2).toLowerCase() === peg$c149) {
	        s1 = input.substr(peg$currPos, 2);
	        peg$currPos += 2;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c150); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            s1 = [s1, s2, s3];
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseOnToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 2).toLowerCase() === peg$c151) {
	        s1 = input.substr(peg$currPos, 2);
	        peg$currPos += 2;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c152); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            s1 = [s1, s2, s3];
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseLeftToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 4).toLowerCase() === peg$c153) {
	        s1 = input.substr(peg$currPos, 4);
	        peg$currPos += 4;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c154); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            s1 = [s1, s2, s3];
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseInnerToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 5).toLowerCase() === peg$c155) {
	        s1 = input.substr(peg$currPos, 5);
	        peg$currPos += 5;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c156); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            s1 = [s1, s2, s3];
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseJoinToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 4).toLowerCase() === peg$c157) {
	        s1 = input.substr(peg$currPos, 4);
	        peg$currPos += 4;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c158); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            s1 = [s1, s2, s3];
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseUnionToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 5).toLowerCase() === peg$c159) {
	        s1 = input.substr(peg$currPos, 5);
	        peg$currPos += 5;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c160); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            s1 = [s1, s2, s3];
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseWhereToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 5).toLowerCase() === peg$c161) {
	        s1 = input.substr(peg$currPos, 5);
	        peg$currPos += 5;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c162); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            s1 = [s1, s2, s3];
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseGroupToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 5).toLowerCase() === peg$c163) {
	        s1 = input.substr(peg$currPos, 5);
	        peg$currPos += 5;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c164); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            s1 = [s1, s2, s3];
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseByToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 2).toLowerCase() === peg$c165) {
	        s1 = input.substr(peg$currPos, 2);
	        peg$currPos += 2;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c166); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            s1 = [s1, s2, s3];
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseOrderToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 5).toLowerCase() === peg$c167) {
	        s1 = input.substr(peg$currPos, 5);
	        peg$currPos += 5;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c168); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            s1 = [s1, s2, s3];
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseHavingToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 6).toLowerCase() === peg$c169) {
	        s1 = input.substr(peg$currPos, 6);
	        peg$currPos += 6;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c170); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            s1 = [s1, s2, s3];
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseLimitToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 5).toLowerCase() === peg$c171) {
	        s1 = input.substr(peg$currPos, 5);
	        peg$currPos += 5;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c172); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            s1 = [s1, s2, s3];
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseAscToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 3).toLowerCase() === peg$c173) {
	        s1 = input.substr(peg$currPos, 3);
	        peg$currPos += 3;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c174); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            peg$savedPos = s0;
	            s1 = peg$c175();
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseDescToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 4).toLowerCase() === peg$c176) {
	        s1 = input.substr(peg$currPos, 4);
	        peg$currPos += 4;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c177); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            peg$savedPos = s0;
	            s1 = peg$c178();
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseBetweenToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 7).toLowerCase() === peg$c179) {
	        s1 = input.substr(peg$currPos, 7);
	        peg$currPos += 7;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c180); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            s1 = [s1, s2, s3];
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseInToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 2).toLowerCase() === peg$c181) {
	        s1 = input.substr(peg$currPos, 2);
	        peg$currPos += 2;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c182); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            s1 = [s1, s2, s3];
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseIsToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 2).toLowerCase() === peg$c183) {
	        s1 = input.substr(peg$currPos, 2);
	        peg$currPos += 2;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c184); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            s1 = [s1, s2, s3];
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseLikeToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 4).toLowerCase() === peg$c185) {
	        s1 = input.substr(peg$currPos, 4);
	        peg$currPos += 4;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c186); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            s1 = [s1, s2, s3];
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseContainsToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 8).toLowerCase() === peg$c187) {
	        s1 = input.substr(peg$currPos, 8);
	        peg$currPos += 8;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c188); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            s1 = [s1, s2, s3];
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseRegExpToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 6).toLowerCase() === peg$c189) {
	        s1 = input.substr(peg$currPos, 6);
	        peg$currPos += 6;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c190); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            s1 = [s1, s2, s3];
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseEscapeToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 6).toLowerCase() === peg$c191) {
	        s1 = input.substr(peg$currPos, 6);
	        peg$currPos += 6;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c192); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            s1 = [s1, s2, s3];
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseNotToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 3).toLowerCase() === peg$c193) {
	        s1 = input.substr(peg$currPos, 3);
	        peg$currPos += 3;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c194); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            s1 = [s1, s2, s3];
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseAndToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 3).toLowerCase() === peg$c195) {
	        s1 = input.substr(peg$currPos, 3);
	        peg$currPos += 3;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c196); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            s1 = [s1, s2, s3];
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseOrToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 2).toLowerCase() === peg$c197) {
	        s1 = input.substr(peg$currPos, 2);
	        peg$currPos += 2;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c198); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            s1 = [s1, s2, s3];
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseDistinctToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 8).toLowerCase() === peg$c199) {
	        s1 = input.substr(peg$currPos, 8);
	        peg$currPos += 8;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c200); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            s1 = [s1, s2, s3];
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseStarToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.charCodeAt(peg$currPos) === 42) {
	        s1 = peg$c70;
	        peg$currPos++;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c71); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            peg$savedPos = s0;
	            s1 = peg$c16();
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseCountToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 5).toLowerCase() === peg$c201) {
	        s1 = input.substr(peg$currPos, 5);
	        peg$currPos += 5;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c202); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            peg$savedPos = s0;
	            s1 = peg$c203();
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseCountDistinctToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 14).toLowerCase() === peg$c204) {
	        s1 = input.substr(peg$currPos, 14);
	        peg$currPos += 14;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c205); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            peg$savedPos = s0;
	            s1 = peg$c206();
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseSumToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 3).toLowerCase() === peg$c207) {
	        s1 = input.substr(peg$currPos, 3);
	        peg$currPos += 3;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c208); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            peg$savedPos = s0;
	            s1 = peg$c209();
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseAvgToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 3).toLowerCase() === peg$c210) {
	        s1 = input.substr(peg$currPos, 3);
	        peg$currPos += 3;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c211); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            peg$savedPos = s0;
	            s1 = peg$c212();
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseMinToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 3).toLowerCase() === peg$c213) {
	        s1 = input.substr(peg$currPos, 3);
	        peg$currPos += 3;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c214); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            peg$savedPos = s0;
	            s1 = peg$c215();
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseMaxToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 3).toLowerCase() === peg$c216) {
	        s1 = input.substr(peg$currPos, 3);
	        peg$currPos += 3;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c217); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            peg$savedPos = s0;
	            s1 = peg$c218();
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseQuantileToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 8).toLowerCase() === peg$c219) {
	        s1 = input.substr(peg$currPos, 8);
	        peg$currPos += 8;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c220); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            peg$savedPos = s0;
	            s1 = peg$c221();
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseCustomToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 6).toLowerCase() === peg$c222) {
	        s1 = input.substr(peg$currPos, 6);
	        peg$currPos += 6;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c223); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            peg$savedPos = s0;
	            s1 = peg$c224();
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseCustomAggregateToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 16).toLowerCase() === peg$c225) {
	        s1 = input.substr(peg$currPos, 16);
	        peg$currPos += 16;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c226); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            peg$savedPos = s0;
	            s1 = peg$c224();
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseDateToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 4).toLowerCase() === peg$c227) {
	        s1 = input.substr(peg$currPos, 4);
	        peg$currPos += 4;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c228); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            peg$savedPos = s0;
	            s1 = peg$c229();
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseTimeToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 4).toLowerCase() === peg$c230) {
	        s1 = input.substr(peg$currPos, 4);
	        peg$currPos += 4;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c231); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            peg$savedPos = s0;
	            s1 = peg$c232();
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseTimestampToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 9).toLowerCase() === peg$c233) {
	        s1 = input.substr(peg$currPos, 9);
	        peg$currPos += 9;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c234); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            peg$savedPos = s0;
	            s1 = peg$c235();
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseDToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 1).toLowerCase() === peg$c236) {
	        s1 = input.charAt(peg$currPos);
	        peg$currPos++;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c237); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            peg$savedPos = s0;
	            s1 = peg$c229();
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseTToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 1).toLowerCase() === peg$c238) {
	        s1 = input.charAt(peg$currPos);
	        peg$currPos++;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c239); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            peg$savedPos = s0;
	            s1 = peg$c232();
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseTsToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 2).toLowerCase() === peg$c240) {
	        s1 = input.substr(peg$currPos, 2);
	        peg$currPos += 2;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c241); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            peg$savedPos = s0;
	            s1 = peg$c235();
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseIntervalToken() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 8).toLowerCase() === peg$c242) {
	        s1 = input.substr(peg$currPos, 8);
	        peg$currPos += 8;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c243); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$currPos;
	        peg$silentFails++;
	        s3 = peg$parseIdentifierPart();
	        peg$silentFails--;
	        if (s3 === peg$FAILED) {
	          s2 = void 0;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parse_();
	          if (s3 !== peg$FAILED) {
	            s1 = [s1, s2, s3];
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseIdentifierPart() {
	      var s0;

	      if (peg$c244.test(input.charAt(peg$currPos))) {
	        s0 = input.charAt(peg$currPos);
	        peg$currPos++;
	      } else {
	        s0 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c245); }
	      }

	      return s0;
	    }

	    function peg$parseNumber() {
	      var s0, s1, s2, s3, s4, s5;

	      peg$silentFails++;
	      s0 = peg$currPos;
	      s1 = peg$currPos;
	      s2 = peg$currPos;
	      s3 = peg$parseInt();
	      if (s3 !== peg$FAILED) {
	        s4 = peg$parseFraction();
	        if (s4 === peg$FAILED) {
	          s4 = null;
	        }
	        if (s4 !== peg$FAILED) {
	          s5 = peg$parseExp();
	          if (s5 === peg$FAILED) {
	            s5 = null;
	          }
	          if (s5 !== peg$FAILED) {
	            s3 = [s3, s4, s5];
	            s2 = s3;
	          } else {
	            peg$currPos = s2;
	            s2 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s2;
	        s2 = peg$FAILED;
	      }
	      if (s2 !== peg$FAILED) {
	        s1 = input.substring(s1, peg$currPos);
	      } else {
	        s1 = s2;
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parse_();
	        if (s2 !== peg$FAILED) {
	          peg$savedPos = s0;
	          s1 = peg$c247(s1);
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }
	      peg$silentFails--;
	      if (s0 === peg$FAILED) {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c246); }
	      }

	      return s0;
	    }

	    function peg$parseInt() {
	      var s0, s1, s2, s3, s4;

	      s0 = peg$currPos;
	      s1 = peg$currPos;
	      if (input.charCodeAt(peg$currPos) === 45) {
	        s2 = peg$c66;
	        peg$currPos++;
	      } else {
	        s2 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c67); }
	      }
	      if (s2 === peg$FAILED) {
	        s2 = null;
	      }
	      if (s2 !== peg$FAILED) {
	        if (peg$c248.test(input.charAt(peg$currPos))) {
	          s3 = input.charAt(peg$currPos);
	          peg$currPos++;
	        } else {
	          s3 = peg$FAILED;
	          if (peg$silentFails === 0) { peg$fail(peg$c249); }
	        }
	        if (s3 !== peg$FAILED) {
	          s4 = peg$parseDigits();
	          if (s4 !== peg$FAILED) {
	            s2 = [s2, s3, s4];
	            s1 = s2;
	          } else {
	            peg$currPos = s1;
	            s1 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s1;
	          s1 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s1;
	        s1 = peg$FAILED;
	      }
	      if (s1 !== peg$FAILED) {
	        s0 = input.substring(s0, peg$currPos);
	      } else {
	        s0 = s1;
	      }
	      if (s0 === peg$FAILED) {
	        s0 = peg$currPos;
	        s1 = peg$currPos;
	        if (input.charCodeAt(peg$currPos) === 45) {
	          s2 = peg$c66;
	          peg$currPos++;
	        } else {
	          s2 = peg$FAILED;
	          if (peg$silentFails === 0) { peg$fail(peg$c67); }
	        }
	        if (s2 === peg$FAILED) {
	          s2 = null;
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parseDigit();
	          if (s3 !== peg$FAILED) {
	            s2 = [s2, s3];
	            s1 = s2;
	          } else {
	            peg$currPos = s1;
	            s1 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s1;
	          s1 = peg$FAILED;
	        }
	        if (s1 !== peg$FAILED) {
	          s0 = input.substring(s0, peg$currPos);
	        } else {
	          s0 = s1;
	        }
	      }

	      return s0;
	    }

	    function peg$parseFraction() {
	      var s0, s1, s2, s3;

	      s0 = peg$currPos;
	      s1 = peg$currPos;
	      if (input.charCodeAt(peg$currPos) === 46) {
	        s2 = peg$c250;
	        peg$currPos++;
	      } else {
	        s2 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c251); }
	      }
	      if (s2 !== peg$FAILED) {
	        s3 = peg$parseDigits();
	        if (s3 !== peg$FAILED) {
	          s2 = [s2, s3];
	          s1 = s2;
	        } else {
	          peg$currPos = s1;
	          s1 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s1;
	        s1 = peg$FAILED;
	      }
	      if (s1 !== peg$FAILED) {
	        s0 = input.substring(s0, peg$currPos);
	      } else {
	        s0 = s1;
	      }

	      return s0;
	    }

	    function peg$parseExp() {
	      var s0, s1, s2, s3, s4;

	      s0 = peg$currPos;
	      s1 = peg$currPos;
	      if (input.substr(peg$currPos, 1).toLowerCase() === peg$c252) {
	        s2 = input.charAt(peg$currPos);
	        peg$currPos++;
	      } else {
	        s2 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c253); }
	      }
	      if (s2 !== peg$FAILED) {
	        if (peg$c254.test(input.charAt(peg$currPos))) {
	          s3 = input.charAt(peg$currPos);
	          peg$currPos++;
	        } else {
	          s3 = peg$FAILED;
	          if (peg$silentFails === 0) { peg$fail(peg$c255); }
	        }
	        if (s3 === peg$FAILED) {
	          s3 = null;
	        }
	        if (s3 !== peg$FAILED) {
	          s4 = peg$parseDigits();
	          if (s4 !== peg$FAILED) {
	            s2 = [s2, s3, s4];
	            s1 = s2;
	          } else {
	            peg$currPos = s1;
	            s1 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s1;
	          s1 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s1;
	        s1 = peg$FAILED;
	      }
	      if (s1 !== peg$FAILED) {
	        s0 = input.substring(s0, peg$currPos);
	      } else {
	        s0 = s1;
	      }

	      return s0;
	    }

	    function peg$parseDigits() {
	      var s0, s1, s2;

	      s0 = peg$currPos;
	      s1 = [];
	      s2 = peg$parseDigit();
	      if (s2 !== peg$FAILED) {
	        while (s2 !== peg$FAILED) {
	          s1.push(s2);
	          s2 = peg$parseDigit();
	        }
	      } else {
	        s1 = peg$FAILED;
	      }
	      if (s1 !== peg$FAILED) {
	        s0 = input.substring(s0, peg$currPos);
	      } else {
	        s0 = s1;
	      }

	      return s0;
	    }

	    function peg$parseDigit() {
	      var s0;

	      if (peg$c256.test(input.charAt(peg$currPos))) {
	        s0 = input.charAt(peg$currPos);
	        peg$currPos++;
	      } else {
	        s0 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c257); }
	      }

	      return s0;
	    }

	    function peg$parseOpenParen() {
	      var s0, s1, s2;

	      peg$silentFails++;
	      s0 = peg$currPos;
	      if (input.charCodeAt(peg$currPos) === 40) {
	        s1 = peg$c259;
	        peg$currPos++;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c260); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parse_();
	        if (s2 !== peg$FAILED) {
	          s1 = [s1, s2];
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }
	      peg$silentFails--;
	      if (s0 === peg$FAILED) {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c258); }
	      }

	      return s0;
	    }

	    function peg$parseCloseParen() {
	      var s0, s1, s2;

	      peg$silentFails++;
	      s0 = peg$currPos;
	      if (input.charCodeAt(peg$currPos) === 41) {
	        s1 = peg$c262;
	        peg$currPos++;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c263); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parse_();
	        if (s2 !== peg$FAILED) {
	          s1 = [s1, s2];
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }
	      peg$silentFails--;
	      if (s0 === peg$FAILED) {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c261); }
	      }

	      return s0;
	    }

	    function peg$parseOpenCurly() {
	      var s0, s1, s2;

	      peg$silentFails++;
	      s0 = peg$currPos;
	      if (input.charCodeAt(peg$currPos) === 123) {
	        s1 = peg$c265;
	        peg$currPos++;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c266); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parse_();
	        if (s2 !== peg$FAILED) {
	          s1 = [s1, s2];
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }
	      peg$silentFails--;
	      if (s0 === peg$FAILED) {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c264); }
	      }

	      return s0;
	    }

	    function peg$parseCloseCurly() {
	      var s0, s1, s2;

	      peg$silentFails++;
	      s0 = peg$currPos;
	      if (input.charCodeAt(peg$currPos) === 125) {
	        s1 = peg$c268;
	        peg$currPos++;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c269); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parse_();
	        if (s2 !== peg$FAILED) {
	          s1 = [s1, s2];
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }
	      peg$silentFails--;
	      if (s0 === peg$FAILED) {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c267); }
	      }

	      return s0;
	    }

	    function peg$parseComma() {
	      var s0, s1, s2;

	      s0 = peg$currPos;
	      if (input.charCodeAt(peg$currPos) === 44) {
	        s1 = peg$c270;
	        peg$currPos++;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c271); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parse_();
	        if (s2 !== peg$FAILED) {
	          s1 = [s1, s2];
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseDot() {
	      var s0, s1, s2;

	      s0 = peg$currPos;
	      if (input.charCodeAt(peg$currPos) === 46) {
	        s1 = peg$c250;
	        peg$currPos++;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c251); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parse_();
	        if (s2 !== peg$FAILED) {
	          s1 = [s1, s2];
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseName() {
	      var s0, s1, s2, s3, s4, s5;

	      peg$silentFails++;
	      s0 = peg$currPos;
	      s1 = peg$currPos;
	      s2 = peg$currPos;
	      if (peg$c244.test(input.charAt(peg$currPos))) {
	        s3 = input.charAt(peg$currPos);
	        peg$currPos++;
	      } else {
	        s3 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c245); }
	      }
	      if (s3 !== peg$FAILED) {
	        s4 = [];
	        if (peg$c273.test(input.charAt(peg$currPos))) {
	          s5 = input.charAt(peg$currPos);
	          peg$currPos++;
	        } else {
	          s5 = peg$FAILED;
	          if (peg$silentFails === 0) { peg$fail(peg$c274); }
	        }
	        while (s5 !== peg$FAILED) {
	          s4.push(s5);
	          if (peg$c273.test(input.charAt(peg$currPos))) {
	            s5 = input.charAt(peg$currPos);
	            peg$currPos++;
	          } else {
	            s5 = peg$FAILED;
	            if (peg$silentFails === 0) { peg$fail(peg$c274); }
	          }
	        }
	        if (s4 !== peg$FAILED) {
	          s3 = [s3, s4];
	          s2 = s3;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s2;
	        s2 = peg$FAILED;
	      }
	      if (s2 !== peg$FAILED) {
	        s1 = input.substring(s1, peg$currPos);
	      } else {
	        s1 = s2;
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parse_();
	        if (s2 !== peg$FAILED) {
	          peg$savedPos = s0;
	          s1 = peg$c19(s1);
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }
	      peg$silentFails--;
	      if (s0 === peg$FAILED) {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c272); }
	      }

	      return s0;
	    }

	    function peg$parseRelaxedName() {
	      var s0, s1, s2, s3, s4, s5;

	      peg$silentFails++;
	      s0 = peg$currPos;
	      s1 = peg$currPos;
	      s2 = peg$currPos;
	      if (peg$c276.test(input.charAt(peg$currPos))) {
	        s3 = input.charAt(peg$currPos);
	        peg$currPos++;
	      } else {
	        s3 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c277); }
	      }
	      if (s3 !== peg$FAILED) {
	        s4 = [];
	        if (peg$c278.test(input.charAt(peg$currPos))) {
	          s5 = input.charAt(peg$currPos);
	          peg$currPos++;
	        } else {
	          s5 = peg$FAILED;
	          if (peg$silentFails === 0) { peg$fail(peg$c279); }
	        }
	        while (s5 !== peg$FAILED) {
	          s4.push(s5);
	          if (peg$c278.test(input.charAt(peg$currPos))) {
	            s5 = input.charAt(peg$currPos);
	            peg$currPos++;
	          } else {
	            s5 = peg$FAILED;
	            if (peg$silentFails === 0) { peg$fail(peg$c279); }
	          }
	        }
	        if (s4 !== peg$FAILED) {
	          s3 = [s3, s4];
	          s2 = s3;
	        } else {
	          peg$currPos = s2;
	          s2 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s2;
	        s2 = peg$FAILED;
	      }
	      if (s2 !== peg$FAILED) {
	        s1 = input.substring(s1, peg$currPos);
	      } else {
	        s1 = s2;
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = peg$parse_();
	        if (s2 !== peg$FAILED) {
	          peg$savedPos = s0;
	          s1 = peg$c19(s1);
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }
	      peg$silentFails--;
	      if (s0 === peg$FAILED) {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c275); }
	      }

	      return s0;
	    }

	    function peg$parseNotSQuote() {
	      var s0, s1, s2;

	      peg$silentFails++;
	      s0 = peg$currPos;
	      s1 = [];
	      if (peg$c281.test(input.charAt(peg$currPos))) {
	        s2 = input.charAt(peg$currPos);
	        peg$currPos++;
	      } else {
	        s2 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c282); }
	      }
	      while (s2 !== peg$FAILED) {
	        s1.push(s2);
	        if (peg$c281.test(input.charAt(peg$currPos))) {
	          s2 = input.charAt(peg$currPos);
	          peg$currPos++;
	        } else {
	          s2 = peg$FAILED;
	          if (peg$silentFails === 0) { peg$fail(peg$c282); }
	        }
	      }
	      if (s1 !== peg$FAILED) {
	        s0 = input.substring(s0, peg$currPos);
	      } else {
	        s0 = s1;
	      }
	      peg$silentFails--;
	      if (s0 === peg$FAILED) {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c280); }
	      }

	      return s0;
	    }

	    function peg$parseNotDQuote() {
	      var s0, s1, s2;

	      peg$silentFails++;
	      s0 = peg$currPos;
	      s1 = [];
	      if (peg$c284.test(input.charAt(peg$currPos))) {
	        s2 = input.charAt(peg$currPos);
	        peg$currPos++;
	      } else {
	        s2 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c285); }
	      }
	      while (s2 !== peg$FAILED) {
	        s1.push(s2);
	        if (peg$c284.test(input.charAt(peg$currPos))) {
	          s2 = input.charAt(peg$currPos);
	          peg$currPos++;
	        } else {
	          s2 = peg$FAILED;
	          if (peg$silentFails === 0) { peg$fail(peg$c285); }
	        }
	      }
	      if (s1 !== peg$FAILED) {
	        s0 = input.substring(s0, peg$currPos);
	      } else {
	        s0 = s1;
	      }
	      peg$silentFails--;
	      if (s0 === peg$FAILED) {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c283); }
	      }

	      return s0;
	    }

	    function peg$parse_() {
	      var s0, s1, s2;

	      peg$silentFails++;
	      s0 = peg$currPos;
	      s1 = [];
	      if (peg$c287.test(input.charAt(peg$currPos))) {
	        s2 = input.charAt(peg$currPos);
	        peg$currPos++;
	      } else {
	        s2 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c288); }
	      }
	      if (s2 === peg$FAILED) {
	        s2 = peg$parseSingleLineComment();
	        if (s2 === peg$FAILED) {
	          s2 = peg$parseInlineComment();
	        }
	      }
	      while (s2 !== peg$FAILED) {
	        s1.push(s2);
	        if (peg$c287.test(input.charAt(peg$currPos))) {
	          s2 = input.charAt(peg$currPos);
	          peg$currPos++;
	        } else {
	          s2 = peg$FAILED;
	          if (peg$silentFails === 0) { peg$fail(peg$c288); }
	        }
	        if (s2 === peg$FAILED) {
	          s2 = peg$parseSingleLineComment();
	          if (s2 === peg$FAILED) {
	            s2 = peg$parseInlineComment();
	          }
	        }
	      }
	      if (s1 !== peg$FAILED) {
	        s0 = input.substring(s0, peg$currPos);
	      } else {
	        s0 = s1;
	      }
	      peg$silentFails--;
	      if (s0 === peg$FAILED) {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c286); }
	      }

	      return s0;
	    }

	    function peg$parseInlineComment() {
	      var s0, s1, s2, s3, s4, s5;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 2) === peg$c289) {
	        s1 = peg$c289;
	        peg$currPos += 2;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c290); }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = [];
	        s3 = peg$currPos;
	        s4 = peg$currPos;
	        peg$silentFails++;
	        s5 = peg$parseCommentTerminator();
	        peg$silentFails--;
	        if (s5 === peg$FAILED) {
	          s4 = void 0;
	        } else {
	          peg$currPos = s4;
	          s4 = peg$FAILED;
	        }
	        if (s4 !== peg$FAILED) {
	          if (input.length > peg$currPos) {
	            s5 = input.charAt(peg$currPos);
	            peg$currPos++;
	          } else {
	            s5 = peg$FAILED;
	            if (peg$silentFails === 0) { peg$fail(peg$c8); }
	          }
	          if (s5 !== peg$FAILED) {
	            s4 = [s4, s5];
	            s3 = s4;
	          } else {
	            peg$currPos = s3;
	            s3 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s3;
	          s3 = peg$FAILED;
	        }
	        while (s3 !== peg$FAILED) {
	          s2.push(s3);
	          s3 = peg$currPos;
	          s4 = peg$currPos;
	          peg$silentFails++;
	          s5 = peg$parseCommentTerminator();
	          peg$silentFails--;
	          if (s5 === peg$FAILED) {
	            s4 = void 0;
	          } else {
	            peg$currPos = s4;
	            s4 = peg$FAILED;
	          }
	          if (s4 !== peg$FAILED) {
	            if (input.length > peg$currPos) {
	              s5 = input.charAt(peg$currPos);
	              peg$currPos++;
	            } else {
	              s5 = peg$FAILED;
	              if (peg$silentFails === 0) { peg$fail(peg$c8); }
	            }
	            if (s5 !== peg$FAILED) {
	              s4 = [s4, s5];
	              s3 = s4;
	            } else {
	              peg$currPos = s3;
	              s3 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s3;
	            s3 = peg$FAILED;
	          }
	        }
	        if (s2 !== peg$FAILED) {
	          s3 = peg$parseCommentTerminator();
	          if (s3 !== peg$FAILED) {
	            s1 = [s1, s2, s3];
	            s0 = s1;
	          } else {
	            peg$currPos = s0;
	            s0 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseSingleLineComment() {
	      var s0, s1, s2, s3, s4, s5;

	      s0 = peg$currPos;
	      if (input.substr(peg$currPos, 3) === peg$c291) {
	        s1 = peg$c291;
	        peg$currPos += 3;
	      } else {
	        s1 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c292); }
	      }
	      if (s1 === peg$FAILED) {
	        if (input.charCodeAt(peg$currPos) === 35) {
	          s1 = peg$c293;
	          peg$currPos++;
	        } else {
	          s1 = peg$FAILED;
	          if (peg$silentFails === 0) { peg$fail(peg$c294); }
	        }
	      }
	      if (s1 !== peg$FAILED) {
	        s2 = [];
	        s3 = peg$currPos;
	        s4 = peg$currPos;
	        peg$silentFails++;
	        s5 = peg$parseLineTerminator();
	        peg$silentFails--;
	        if (s5 === peg$FAILED) {
	          s4 = void 0;
	        } else {
	          peg$currPos = s4;
	          s4 = peg$FAILED;
	        }
	        if (s4 !== peg$FAILED) {
	          if (input.length > peg$currPos) {
	            s5 = input.charAt(peg$currPos);
	            peg$currPos++;
	          } else {
	            s5 = peg$FAILED;
	            if (peg$silentFails === 0) { peg$fail(peg$c8); }
	          }
	          if (s5 !== peg$FAILED) {
	            s4 = [s4, s5];
	            s3 = s4;
	          } else {
	            peg$currPos = s3;
	            s3 = peg$FAILED;
	          }
	        } else {
	          peg$currPos = s3;
	          s3 = peg$FAILED;
	        }
	        while (s3 !== peg$FAILED) {
	          s2.push(s3);
	          s3 = peg$currPos;
	          s4 = peg$currPos;
	          peg$silentFails++;
	          s5 = peg$parseLineTerminator();
	          peg$silentFails--;
	          if (s5 === peg$FAILED) {
	            s4 = void 0;
	          } else {
	            peg$currPos = s4;
	            s4 = peg$FAILED;
	          }
	          if (s4 !== peg$FAILED) {
	            if (input.length > peg$currPos) {
	              s5 = input.charAt(peg$currPos);
	              peg$currPos++;
	            } else {
	              s5 = peg$FAILED;
	              if (peg$silentFails === 0) { peg$fail(peg$c8); }
	            }
	            if (s5 !== peg$FAILED) {
	              s4 = [s4, s5];
	              s3 = s4;
	            } else {
	              peg$currPos = s3;
	              s3 = peg$FAILED;
	            }
	          } else {
	            peg$currPos = s3;
	            s3 = peg$FAILED;
	          }
	        }
	        if (s2 !== peg$FAILED) {
	          s1 = [s1, s2];
	          s0 = s1;
	        } else {
	          peg$currPos = s0;
	          s0 = peg$FAILED;
	        }
	      } else {
	        peg$currPos = s0;
	        s0 = peg$FAILED;
	      }

	      return s0;
	    }

	    function peg$parseCommentTerminator() {
	      var s0;

	      if (input.substr(peg$currPos, 2) === peg$c295) {
	        s0 = peg$c295;
	        peg$currPos += 2;
	      } else {
	        s0 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c296); }
	      }

	      return s0;
	    }

	    function peg$parseLineTerminator() {
	      var s0;

	      if (peg$c297.test(input.charAt(peg$currPos))) {
	        s0 = input.charAt(peg$currPos);
	        peg$currPos++;
	      } else {
	        s0 = peg$FAILED;
	        if (peg$silentFails === 0) { peg$fail(peg$c298); }
	      }

	      return s0;
	    }

	    // starts with function(plywood, chronoshift)
	    var ply = plywood.ply;
	    var $ = plywood.$;
	    var r = plywood.r;
	    var Expression = plywood.Expression;
	    var FilterAction = plywood.FilterAction;
	    var ApplyAction = plywood.ApplyAction;
	    var SortAction = plywood.SortAction;
	    var LimitAction = plywood.LimitAction;
	    var MatchAction = plywood.MatchAction;

	    var Timezone = chronoshift.Timezone;

	    var Set = plywood.Set;

	    var dataRef = $('data');
	    var NULL = {}; // A dummy for null

	    function undummyNull(x) {
	      return x === NULL ? null : x;
	    }

	    // See here: https://www.drupal.org/node/141051
	    var reservedWords = {
	      ALL: 1, AND: 1, AS: 1, ASC: 1,
	      BETWEEN: 1, BY: 1,
	      CONTAINS: 1, CREATE: 1,
	      DELETE: 1, DESC: 1, DESCRIBE: 1, DISTINCT: 1, DROP: 1,
	      EXISTS: 1, EXPLAIN: 1, ESCAPE: 1,
	      FALSE: 1, FROM: 1,
	      GROUP: 1,
	      HAVING: 1,
	      IN: 1, INNER: 1, INSERT: 1, INTO: 1, IS: 1,
	      JOIN: 1,
	      LEFT: 1, LIKE: 1, LIMIT: 1, LOOKUP: 1,
	      MATCH: 1,
	      NOT: 1, NULL: 1,
	      ON: 1, OR: 1, ORDER: 1,
	      REPLACE: 1, REGEXP: 1,
	      SELECT: 1, SET: 1, SHOW: 1,
	      TABLE: 1, TRUE: 1,
	      UNION: 1, UPDATE: 1,
	      VALUES: 1,
	      WHERE: 1
	    };

	    var unsupportedVerbs = {
	      ALTER: 1,
	      CALL: 1,
	      CREATE: 1,
	      DEALLOCATE: 1,
	      DELETE: 1,
	      DO: 1,
	      DROP: 1,
	      EXECUTE: 1,
	      HANDLER: 1,
	      INSERT: 1,
	      KILL: 1,
	      LOAD: 1,
	      LOCK: 1,
	      PREPARE: 1,
	      RENAME: 1,
	      REPLACE: 1,
	      SAVEPOINT: 1,
	      START: 1,
	      TRUNCATE: 1,
	      UNLOCK: 1,
	      UPDATE: 1
	    };

	    var intervalUnits = {
	      MICROSECOND: 1,
	      SECOND: 1,
	      MINUTE: 1,
	      HOUR: 1,
	      DAY: 1,
	      WEEK: 1,
	      MONTH: 1,
	      QUARTER: 1,
	      YEAR: 1
	    }

	    var dateFormats = {
	      '%Y-%m-%d %H:%i:%s': 'PT1S',
	      '%Y-%m-%d %H:%i:00': 'PT1M',
	      '%Y-%m-%d %H:00:00': 'PT1H',
	      '%Y-%m-%d': 'P1D',
	      '%Y-%m-01': 'P1M',
	      '%Y-01-01': 'P1Y',
	    };


	    var castTypes = {
	      CHAR: 'STRING',
	      SIGNED: 'NUMBER'
	    }

	    function upgrade(v) {
	      if (!Expression.isExpression(v)) return r(v);
	      return v;
	    }

	    var notImplemented = function() { error('not implemented yet'); };
	    var fns = {
	      ABSOLUTE: function(op) { return upgrade(op).absolute(); },
	      OVERLAP: function(op, ex) { return upgrade(op).overlap(ex); },
	      SQRT: function(op) { return upgrade(op).power(0.5); },
	      EXP: function(ex) { return r(Math.E).power(ex); },
	      POWER: function(op, ex) { return upgrade(op).power(ex); },
	      NOW: function() { return r(new Date()); },
	      CURDATE: function() { return r(chronoshift.day.floor(new Date(), Timezone.UTC)); },
	      CUSTOM_TRANSFORM: function(op, fn) { return upgrade(op).customTransform(fn); },
	      FALLBACK: function(op, ex) { return upgrade(op).fallback(ex); },
	      MATCH: function(op, reg) { return upgrade(op).match(reg); },
	      EXTRACT: function(op, reg) { return upgrade(op).extract(reg); },
	      CONCAT: function() { return Expression.concat(Array.prototype.map.call(arguments, upgrade)); },
	      SUBSTRING: function(op, i, n) { return upgrade(op).substr(i, n); },
	      UPPER: function(op) { return upgrade(op).transformCase('upperCase'); },
	      LOWER: function(op) { return upgrade(op).transformCase('lowerCase'); },
	      LENGTH: function(op) { return upgrade(op).length(); },
	      LOCATE: function(op, ex) { return upgrade(op).indexOf(ex).add(1); },
	      TIME_FLOOR: function(op, d, tz) { return upgrade(op).timeFloor(d, tz); },
	      TIME_SHIFT: function(op, d, s, tz) { return upgrade(op).timeShift(d, s, tz); },
	      TIME_RANGE: function(op, d, s, tz) { return upgrade(op).timeRange(d, s, tz); },
	      TIME_BUCKET: function(op, d, tz) { return upgrade(op).timeBucket(d, tz); },
	      NUMBER_BUCKET: function(op, s, o) { return upgrade(op).numberBucket(s, o); },
	      TIME_PART: function(op, part, tz) { return upgrade(op).timePart(part, tz); },
	      LOOKUP: function(op, name) { return upgrade(op).lookup(name); },
	      PI: function() { return r(Math.PI); },
	      STD: notImplemented,
	      DATE_FORMAT: function(op, format) {
	        var duration = dateFormats[format.replace(/ 00:00:00$/, '')];
	        if (!duration) error('unsupported format: ' + format);
	        return upgrade(op).timeFloor(duration);
	      },

	      YEAR: function(op, tz) { return upgrade(op).timePart('YEAR', tz); },
	      MONTH: function(op, tz) { return upgrade(op).timePart('MONTH_OF_YEAR', tz); },
	      WEEK_OF_YEAR: function(op, tz) { return upgrade(op).timePart('WEEK_OF_YEAR', tz); },
	      DAY_OF_YEAR: function(op, tz) { return upgrade(op).timePart('DAY_OF_YEAR', tz); },
	      DAY_OF_MONTH: function(op, tz) { return upgrade(op).timePart('DAY_OF_MONTH', tz); },
	      DAY_OF_WEEK: function(op, tz) { return upgrade(op).timePart('DAY_OF_WEEK', tz); },
	      WEEKDAY: notImplemented,
	      HOUR: function(op, tz) { return upgrade(op).timePart('HOUR_OF_DAY', tz); },
	      MINUTE: function(op, tz) { return upgrade(op).timePart('MINUTE_OF_HOUR', tz); },
	      SECOND: function(op, tz) { return upgrade(op).timePart('SECOND_OF_MINUTE', tz); },
	      DATE: function(op, tz) { return upgrade(op).timeFloor('P1D', tz); },
	      TIMESTAMP: function(op) { return upgrade(op).bumpStringLiteralToTime(); },
	      TIME: function() { error('time literals are not supported'); },
	      DATE_ADD: function(op, d, tz) { return d === 0 ? upgrade(op) : error('only zero interval supported in date math'); },
	      DATE_SUB: function(op, d, tz) { return d === 0 ? upgrade(op) : error('only zero interval supported in date math'); },
	      FROM_UNIXTIME: function(op) { return upgrade(op).multiply(1000).cast('TIME') },
	      CAST: function(op, ct) { return upgrade(op).cast(castTypes[ct]) },
	      UNIX_TIMESTAMP: function(op) { return upgrade(op).cast('NUMBER').divide(1000); },

	      // Information Functions
	      BENCHMARK: function() { return r(0); },
	      CHARSET: function() { return r('utf8mb4'); },
	      COERCIBILITY: function() { return r(0); },
	      COLLATION: function() { return r('utf8mb4_unicode_ci'); },
	      CONNECTION_ID: function() { return r(123); }, // ToDo
	      DATABASE: function() { return r('plyql1'); },
	      FOUND_ROWS: function() { return r(2005); },
	      LAST_INSERT_ID: function() { return r(0); },
	      ROW_COUNT: function() { return r(0); },
	      USER: function() { return r('plyql@localhost'); },
	      VERSION: function() { return r('5.7.11'); }
	    };
	    fns.ABS = fns.ABSOLUTE;
	    fns.POW = fns.POWER;
	    fns.LEN = fns.LENGTH;
	    fns.CHAR_LENGTH = fns.LENGTH;
	    fns.IFNULL = fns.FALLBACK;
	    fns.SUBSTR = fns.SUBSTRING;
	    fns.CURRENT_TIMESTAMP = fns.NOW;
	    fns.LCASE = fns.LOWER;
	    fns.LOCALTIME = fns.NOW;
	    fns.LOCALTIMESTAMP = fns.NOW;
	    fns.UTC_TIMESTAMP = fns.NOW;
	    fns.UCASE = fns.UPPER;
	    fns.SYSDATE = fns.NOW;
	    fns.CURRENT_DATE = fns.CURDATE;
	    fns.UTC_DATE = fns.CURDATE;
	    fns.DAY_OF_YEAR = fns.DAY_OF_YEAR;
	    fns.DOY = fns.DAY_OF_YEAR;
	    fns.DOW = fns.DAY_OF_WEEK;
	    fns.DAYOFMONTH = fns.DAY_OF_MONTH;
	    fns.DAY = fns.DAY_OF_MONTH;
	    fns.WEEKOFYEAR = fns.WEEK_OF_YEAR;
	    fns.WEEK = fns.WEEK_OF_YEAR;
	    fns.ADDDATE = fns.DATE_ADD;
	    fns.SUBDATE = fns.DATE_SUB;
	    fns.STDDEV = fns.STD;
	    fns.STDDEV_POP = fns.STD;

	    // Information Functions
	    fns.SESSION_USER = fns.USER;
	    fns.SYSTEM_USER = fns.USER;
	    fns.CURRENT_USER = fns.USER;
	    fns.SCHEMA = fns.DATABASE;

	    var objectHasOwnProperty = Object.prototype.hasOwnProperty;
	    function reserved(str) {
	      return objectHasOwnProperty.call(reservedWords, str.toUpperCase());
	    }

	    function makeDate(type, v) {
	      try {
	        return chronoshift.parseSQLDate(type, v);
	      } catch (e) {
	        var isoDate = chronoshift.parseISODate(v);
	        if (isoDate) {
	          if (type === 'd') isoDate = chronoshift.day.floor(isoDate, Timezone.UTC);
	          return isoDate;
	        }
	        error(e.message);
	      }
	    }

	    function getFromTable(from) {
	      if (!from) return null;
	      if (from.verb === 'SELECT') return from.table; // From is a sub-query
	      return from.name; // From is a ref: `namespace`.`name`
	    }

	    function getFromDatabase(from) {
	      if (!from) return null;
	      if (from.verb === 'SELECT') return from.database; // From is a sub-query
	      return from.namespace; // From is a ref: `namespace`.`name`
	    }

	    function extractGroupByColumn(columns, groupBy, index) {
	      var label = null;
	      var otherColumns = [];
	      for (var i = 0; i < columns.length; i++) {
	        var column = columns[i];
	        if (groupBy.equals(column.expression)) {
	          if (label) error('already have a label');
	          label = column.name;
	        } else {
	          otherColumns.push(column);
	        }
	      }
	      if (!label) label = 'split' + index;
	      return {
	        label: label,
	        otherColumns: otherColumns
	      };
	    }

	    function upgradeGroupBys(distinct, columns, groupBys) {
	      if (Array.isArray(columns)) { // Not *
	        if (!groupBys) {
	          // Support for not having a group by clause if there are aggregates in the columns
	          // A having an aggregate columns is the same as having "GROUP BY ''"

	          var hasAggregate = columns.some(function(column) {
	            var columnExpression = column.expression;
	            return columnExpression.isOp('chain') &&
	              columnExpression.actions.some(function(action) { return action.isAggregate(); })
	          })
	          if (hasAggregate) {
	            return [Expression.EMPTY_STRING];
	          } else if (distinct) {
	            return columns.map(function(column) { return column.expression });
	          }

	        } else {
	          return groupBys.map(function(groupBy) {
	            if (groupBy.isOp('literal') && groupBy.type === 'NUMBER') {
	              // Support for not having a group by clause refer to a select column by index

	              var groupByColumn = columns[groupBy.value - 1];
	              if (!groupByColumn) error("Unknown column '" + groupBy.value + "' in group by statement");

	              return groupByColumn.expression;
	            } else {
	              return groupBy;
	            }
	          });
	        }
	      }

	      return groupBys;
	    }

	    function staticColumn(column) {
	      return column.expression.getFreeReferences().length === 0;
	    }

	    function constructQuery(distinct, columns, from, where, groupBys, having, orderBy, limit) {
	      if (!columns) error('Can not have empty column list');

	      var query = null;

	      if (!distinct && Array.isArray(columns) && !from && !where && !groupBys && columns.every(staticColumn)) {
	        // This is a SELECT 1+1; type query
	        query = ply();
	        for (var i = 0; i < columns.length; i++) {
	          query = query.performAction(columns[i]);
	        }

	      } else {
	        var fromEx = from ? (from.verb === 'SELECT' ? from.expression : $(from.name)) : dataRef;

	        if (where) {
	          fromEx = fromEx.filter(where);
	        }

	        groupBys = upgradeGroupBys(distinct, columns, groupBys);


	        if (!groupBys) {
	          // Select query
	          query = fromEx;

	          if (Array.isArray(columns)) {
	            var attributes = [];
	            for (var i = 0; i < columns.length; i++) {
	              var column = columns[i];
	              query = query.performAction(column);
	              attributes.push(column.name);
	            }
	            query = query.select.apply(query, attributes);
	          }

	        } else {
	          // Group By query
	          if (columns === '*') error('can not SELECT * with a GROUP BY');

	          if (groupBys.length === 1 && groupBys[0].isOp('literal')) {
	            query = ply().apply('data', fromEx);
	          } else {
	            var splits = {};
	            for (var i = 0; i < groupBys.length; i++) {
	              var groupBy = groupBys[i];
	              var extract = extractGroupByColumn(columns, groupBy, i);
	              columns = extract.otherColumns;
	              splits[extract.label] = groupBy;
	            }
	            query = fromEx.split(splits, 'data');
	          }

	          if (Array.isArray(columns)) {
	            for (var i = 0; i < columns.length; i++) {
	              query = query.performAction(columns[i]);
	            }
	          }
	        }
	      }

	      if (having) {
	        query = query.performAction(having);
	      }
	      if (orderBy) {
	        query = query.performAction(orderBy);
	      }
	      if (limit) {
	        query = query.performAction(limit);
	      }

	      return query;
	    }

	    function makeListMap1(head, tail) {
	      if (head == null) return [];
	      return [head].concat(tail.map(function(t) { return t[1] }));
	    }

	    function naryExpressionFactory(op, head, tail) {
	      if (!tail.length) return head;
	      return head[op].apply(head, tail.map(function(t) { return t[1]; }));
	    }

	    function naryExpressionWithAltFactory(op, head, tail, altToken, altOp) {
	      if (!tail.length) return head;
	      for (var i = 0; i < tail.length; i++) {
	        var t = tail[i];
	        head = head[t[0] === altToken ? altOp : op].call(head, t[1]);
	      }
	      return head;
	    }



	    peg$result = peg$startRuleFunction();

	    if (peg$result !== peg$FAILED && peg$currPos === input.length) {
	      return peg$result;
	    } else {
	      if (peg$result !== peg$FAILED && peg$currPos < input.length) {
	        peg$fail({ type: "end", description: "end of input" });
	      }

	      throw peg$buildException(
	        null,
	        peg$maxFailExpected,
	        peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,
	        peg$maxFailPos < input.length
	          ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)
	          : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)
	      );
	    }
	  }

	  return {
	    SyntaxError: peg$SyntaxError,
	    parse:       peg$parse
	  };
	};


/***/ },
/* 202 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	function __export(m) {
	    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
	}
	__export(__webpack_require__(203));
	__export(__webpack_require__(204));
	__export(__webpack_require__(205));
	__export(__webpack_require__(207));
	__export(__webpack_require__(208));
	__export(__webpack_require__(212));
	__export(__webpack_require__(214));
	__export(__webpack_require__(215));
	__export(__webpack_require__(216));
	__export(__webpack_require__(217));
	__export(__webpack_require__(218));
	__export(__webpack_require__(219));
	__export(__webpack_require__(220));
	__export(__webpack_require__(223));
	__export(__webpack_require__(224));
	__export(__webpack_require__(225));
	__export(__webpack_require__(226));
	__export(__webpack_require__(228));
	__export(__webpack_require__(229));
	__export(__webpack_require__(230));
	__export(__webpack_require__(273));
	__export(__webpack_require__(274));
	__export(__webpack_require__(211));
	__export(__webpack_require__(275));


/***/ },
/* 203 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var immutable_class_1 = __webpack_require__(193);
	var check;
	var Stage = (function () {
	    function Stage(parameters) {
	        this.x = parameters.x;
	        this.y = parameters.y;
	        this.width = parameters.width;
	        this.height = parameters.height;
	    }
	    Stage.isStage = function (candidate) {
	        return immutable_class_1.isInstanceOf(candidate, Stage);
	    };
	    Stage.fromJS = function (parameters) {
	        return new Stage({
	            x: parameters.x,
	            y: parameters.y,
	            width: parameters.width,
	            height: parameters.height
	        });
	    };
	    Stage.fromClientRect = function (rect) {
	        return new Stage({
	            x: rect.left,
	            y: rect.top,
	            width: rect.width,
	            height: rect.height
	        });
	    };
	    Stage.fromSize = function (width, height) {
	        return new Stage({
	            x: 0,
	            y: 0,
	            width: width,
	            height: height
	        });
	    };
	    Stage.prototype.valueOf = function () {
	        return {
	            x: this.x,
	            y: this.y,
	            width: this.width,
	            height: this.height
	        };
	    };
	    Stage.prototype.toJS = function () {
	        return {
	            x: this.x,
	            y: this.y,
	            width: this.width,
	            height: this.height
	        };
	    };
	    Stage.prototype.toJSON = function () {
	        return this.toJS();
	    };
	    Stage.prototype.sizeOnlyValue = function () {
	        return {
	            x: 0,
	            y: 0,
	            width: this.width,
	            height: this.height
	        };
	    };
	    Stage.prototype.toString = function () {
	        return "[stage: " + this.width + "x" + this.height + "}]";
	    };
	    Stage.prototype.equals = function (other) {
	        return Stage.isStage(other) &&
	            this.x === other.x &&
	            this.y === other.y &&
	            this.width === other.width &&
	            this.height === other.height;
	    };
	    Stage.prototype.getTransform = function () {
	        return "translate(" + this.x + "," + this.y + ")";
	    };
	    Stage.prototype.getViewBox = function (widthOffset, heightOffset) {
	        if (widthOffset === void 0) { widthOffset = 0; }
	        if (heightOffset === void 0) { heightOffset = 0; }
	        return "0 0 " + (this.width + widthOffset) + " " + (this.height + this.y + heightOffset);
	    };
	    Stage.prototype.getLeftTop = function () {
	        return {
	            left: this.x,
	            top: this.y
	        };
	    };
	    Stage.prototype.getWidthHeight = function (widthOffset, heightOffset) {
	        if (widthOffset === void 0) { widthOffset = 0; }
	        if (heightOffset === void 0) { heightOffset = 0; }
	        return {
	            width: this.width + widthOffset,
	            height: this.height + this.y + heightOffset
	        };
	    };
	    Stage.prototype.getLeftTopWidthHeight = function () {
	        return {
	            left: this.x,
	            top: this.y,
	            width: this.width,
	            height: this.height
	        };
	    };
	    Stage.prototype.changeY = function (y) {
	        var value = this.valueOf();
	        value.y = y;
	        return Stage.fromJS(value);
	    };
	    Stage.prototype.changeHeight = function (height) {
	        var value = this.valueOf();
	        value.height = height;
	        return Stage.fromJS(value);
	    };
	    Stage.prototype.within = function (param) {
	        var value = this.sizeOnlyValue();
	        var left = param.left, right = param.right, top = param.top, bottom = param.bottom;
	        if (left) {
	            value.x = left;
	            value.width -= left;
	        }
	        if (right) {
	            value.width -= right;
	        }
	        if (top) {
	            value.y = top;
	            value.height -= top;
	        }
	        if (bottom) {
	            value.height -= bottom;
	        }
	        return new Stage(value);
	    };
	    return Stage;
	}());
	exports.Stage = Stage;
	check = Stage;


/***/ },
/* 204 */
/***/ function(module, exports) {

	"use strict";
	var Device = (function () {
	    function Device() {
	    }
	    Device.getSize = function () {
	        if (window.innerWidth <= 1080)
	            return 'small';
	        if (window.innerWidth <= 1250)
	            return 'medium';
	        return 'large';
	    };
	    return Device;
	}());
	exports.Device = Device;


/***/ },
/* 205 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var immutable_class_1 = __webpack_require__(193);
	var plywood_1 = __webpack_require__(199);
	var time_tag_1 = __webpack_require__(206);
	var Timekeeper = (function (_super) {
	    __extends(Timekeeper, _super);
	    function Timekeeper(parameters) {
	        _super.call(this, parameters);
	    }
	    Timekeeper.isTimekeeper = function (candidate) {
	        return immutable_class_1.isInstanceOf(candidate, Timekeeper);
	    };
	    Timekeeper.globalNow = function () {
	        return new Date();
	    };
	    Timekeeper.fromJS = function (parameters) {
	        return new Timekeeper(immutable_class_1.BaseImmutable.jsToValue(Timekeeper.PROPERTIES, parameters));
	    };
	    Timekeeper.prototype.now = function () {
	        return this.nowOverride || Timekeeper.globalNow();
	    };
	    Timekeeper.prototype.getTime = function (name) {
	        var timeTag = plywood_1.findByName(this.timeTags, name);
	        if (!timeTag || timeTag.special === 'realtime')
	            return this.now();
	        return timeTag.time || this.now();
	    };
	    Timekeeper.prototype.updateTime = function (name, time) {
	        var value = this.valueOf();
	        var tag = plywood_1.findByName(value.timeTags, name);
	        if (!tag)
	            return this;
	        value.timeTags = plywood_1.overrideByName(value.timeTags, tag.changeTime(time, this.now()));
	        return new Timekeeper(value);
	    };
	    Timekeeper.prototype.addTimeTagFor = function (name) {
	        var value = this.valueOf();
	        value.timeTags = value.timeTags.concat(new time_tag_1.TimeTag({ name: name }));
	        return new Timekeeper(value);
	    };
	    Timekeeper.prototype.removeTimeTagFor = function (name) {
	        var value = this.valueOf();
	        value.timeTags = value.timeTags.filter(function (tag) { return tag.name !== name; });
	        return new Timekeeper(value);
	    };
	    Timekeeper.PROPERTIES = [
	        { name: 'timeTags', immutableClassArray: time_tag_1.TimeTag },
	        { name: 'nowOverride', isDate: true, defaultValue: null }
	    ];
	    return Timekeeper;
	}(immutable_class_1.BaseImmutable));
	exports.Timekeeper = Timekeeper;
	immutable_class_1.BaseImmutable.finalize(Timekeeper);
	Timekeeper.EMPTY = new Timekeeper({ timeTags: [] });


/***/ },
/* 206 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var immutable_class_1 = __webpack_require__(193);
	var TimeTag = (function (_super) {
	    __extends(TimeTag, _super);
	    function TimeTag(parameters) {
	        _super.call(this, parameters);
	        if (this.time && !this.updated)
	            this.updated = this.time;
	    }
	    TimeTag.isTimeTag = function (candidate) {
	        return immutable_class_1.isInstanceOf(candidate, TimeTag);
	    };
	    TimeTag.fromJS = function (parameters) {
	        return new TimeTag(immutable_class_1.BaseImmutable.jsToValue(TimeTag.PROPERTIES, parameters));
	    };
	    TimeTag.prototype.changeTime = function (time, now) {
	        var value = this.valueOf();
	        value.time = time;
	        value.updated = now;
	        return new TimeTag(value);
	    };
	    TimeTag.PROPERTIES = [
	        { name: 'name' },
	        { name: 'time', isDate: true, defaultValue: null },
	        { name: 'updated', isDate: true, defaultValue: null },
	        { name: 'spacial', defaultValue: null }
	    ];
	    return TimeTag;
	}(immutable_class_1.BaseImmutable));
	exports.TimeTag = TimeTag;
	immutable_class_1.BaseImmutable.finalize(TimeTag);


/***/ },
/* 207 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var immutable_class_1 = __webpack_require__(193);
	var check;
	var RefreshRule = (function () {
	    function RefreshRule(parameters) {
	        var rule = parameters.rule;
	        if (rule !== RefreshRule.FIXED && rule !== RefreshRule.QUERY && rule !== RefreshRule.REALTIME) {
	            throw new Error("rule must be on of: " + RefreshRule.FIXED + ", " + RefreshRule.QUERY + ", or " + RefreshRule.REALTIME);
	        }
	        this.rule = rule;
	        this.time = parameters.time;
	    }
	    RefreshRule.isRefreshRule = function (candidate) {
	        return immutable_class_1.isInstanceOf(candidate, RefreshRule);
	    };
	    RefreshRule.query = function () {
	        return new RefreshRule({
	            rule: RefreshRule.QUERY
	        });
	    };
	    RefreshRule.fromJS = function (parameters) {
	        var value = {
	            rule: parameters.rule
	        };
	        if (parameters.time) {
	            value.time = new Date(parameters.time);
	        }
	        return new RefreshRule(value);
	    };
	    RefreshRule.prototype.valueOf = function () {
	        var value = {
	            rule: this.rule
	        };
	        if (this.time) {
	            value.time = this.time;
	        }
	        return value;
	    };
	    RefreshRule.prototype.toJS = function () {
	        var js = {
	            rule: this.rule
	        };
	        if (this.time) {
	            js.time = this.time;
	        }
	        return js;
	    };
	    RefreshRule.prototype.toJSON = function () {
	        return this.toJS();
	    };
	    RefreshRule.prototype.toString = function () {
	        return "[RefreshRule: " + this.rule + "]";
	    };
	    RefreshRule.prototype.equals = function (other) {
	        return RefreshRule.isRefreshRule(other) &&
	            this.rule === other.rule &&
	            (!this.time || this.time.valueOf() === other.time.valueOf());
	    };
	    RefreshRule.prototype.isFixed = function () {
	        return this.rule === RefreshRule.FIXED;
	    };
	    RefreshRule.prototype.isQuery = function () {
	        return this.rule === RefreshRule.QUERY;
	    };
	    RefreshRule.prototype.isRealtime = function () {
	        return this.rule === RefreshRule.REALTIME;
	    };
	    RefreshRule.FIXED = 'fixed';
	    RefreshRule.QUERY = 'query';
	    RefreshRule.REALTIME = 'realtime';
	    return RefreshRule;
	}());
	exports.RefreshRule = RefreshRule;
	check = RefreshRule;


/***/ },
/* 208 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var immutable_class_1 = __webpack_require__(193);
	var plywood_1 = __webpack_require__(199);
	var general_1 = __webpack_require__(209);
	var granularity_1 = __webpack_require__(211);
	var geoName = /continent|country|city|region/i;
	function isGeo(name) {
	    return geoName.test(name);
	}
	function typeToKind(type) {
	    if (!type)
	        return type;
	    return type.toLowerCase().replace(/_/g, '-').replace(/-range$/, '');
	}
	var check;
	var Dimension = (function () {
	    function Dimension(parameters) {
	        var name = parameters.name;
	        general_1.verifyUrlSafeName(name);
	        this.name = name;
	        this.title = parameters.title || general_1.makeTitle(name);
	        var formula = parameters.formula || plywood_1.$(name).toString();
	        this.formula = formula;
	        this.expression = plywood_1.Expression.parse(formula);
	        var kind = parameters.kind || typeToKind(this.expression.type) || 'string';
	        this.kind = kind;
	        if (kind === 'string' && isGeo(name)) {
	            this.className = 'string-geo';
	        }
	        else {
	            this.className = kind;
	        }
	        if (parameters.url) {
	            if (typeof parameters.url !== 'string') {
	                throw new Error("unsupported url: " + parameters.url + ": only strings are supported");
	            }
	            this.url = parameters.url;
	        }
	        var granularities = parameters.granularities;
	        if (granularities) {
	            if (!Array.isArray(granularities) || granularities.length !== 5) {
	                throw new Error("must have list of 5 granularities in dimension '" + parameters.name + "'");
	            }
	            var runningActionType = null;
	            this.granularities = granularities.map(function (g) {
	                if (runningActionType === null)
	                    runningActionType = g.action;
	                if (g.action !== runningActionType)
	                    throw new Error("granularities must have the same type of actions");
	                return g;
	            });
	        }
	        if (parameters.bucketedBy)
	            this.bucketedBy = parameters.bucketedBy;
	        if (parameters.bucketingStrategy)
	            this.bucketingStrategy = parameters.bucketingStrategy;
	        if (parameters.sortStrategy)
	            this.sortStrategy = parameters.sortStrategy;
	    }
	    Dimension.isDimension = function (candidate) {
	        return immutable_class_1.isInstanceOf(candidate, Dimension);
	    };
	    Dimension.getDimension = function (dimensions, dimensionName) {
	        if (!dimensionName)
	            return null;
	        dimensionName = dimensionName.toLowerCase();
	        return dimensions.find(function (dimension) { return dimension.name.toLowerCase() === dimensionName; });
	    };
	    Dimension.getDimensionByExpression = function (dimensions, expression) {
	        return dimensions.find(function (dimension) { return dimension.expression.equals(expression); });
	    };
	    Dimension.fromJS = function (parameters) {
	        var parameterExpression = parameters.expression;
	        var value = {
	            name: parameters.name,
	            title: parameters.title,
	            formula: parameters.formula || (typeof parameterExpression === 'string' ? parameterExpression : null),
	            kind: parameters.kind || typeToKind(parameters.type),
	            url: parameters.url
	        };
	        var granularities = parameters.granularities;
	        if (granularities) {
	            value.granularities = granularities.map(granularity_1.granularityFromJS);
	        }
	        var bucketedBy = parameters.bucketedBy;
	        if (bucketedBy) {
	            value.bucketedBy = granularity_1.granularityFromJS(bucketedBy);
	        }
	        var bucketingStrategy = parameters.bucketingStrategy;
	        if (bucketingStrategy) {
	            if (bucketingStrategy === 'neverBucket')
	                bucketingStrategy = Dimension.defaultNoBucket;
	            if (bucketingStrategy === 'alwaysBucket')
	                bucketingStrategy = Dimension.defaultBucket;
	            value.bucketingStrategy = bucketingStrategy;
	        }
	        var sortStrategy = parameters.sortStrategy;
	        if (sortStrategy) {
	            value.sortStrategy = sortStrategy;
	        }
	        return new Dimension(value);
	    };
	    Dimension.prototype.valueOf = function () {
	        return {
	            name: this.name,
	            title: this.title,
	            formula: this.formula,
	            kind: this.kind,
	            url: this.url,
	            granularities: this.granularities,
	            bucketedBy: this.bucketedBy,
	            bucketingStrategy: this.bucketingStrategy,
	            sortStrategy: this.sortStrategy
	        };
	    };
	    Dimension.prototype.toJS = function () {
	        var js = {
	            name: this.name,
	            title: this.title,
	            formula: this.formula,
	            kind: this.kind
	        };
	        if (this.url)
	            js.url = this.url;
	        if (this.granularities)
	            js.granularities = this.granularities.map(function (g) { return granularity_1.granularityToJS(g); });
	        if (this.bucketedBy)
	            js.bucketedBy = granularity_1.granularityToJS(this.bucketedBy);
	        if (this.bucketingStrategy)
	            js.bucketingStrategy = this.bucketingStrategy;
	        if (this.sortStrategy)
	            js.sortStrategy = this.sortStrategy;
	        return js;
	    };
	    Dimension.prototype.toJSON = function () {
	        return this.toJS();
	    };
	    Dimension.prototype.toString = function () {
	        return "[Dimension: " + this.name + "]";
	    };
	    Dimension.prototype.equals = function (other) {
	        return Dimension.isDimension(other) &&
	            this.name === other.name &&
	            this.title === other.title &&
	            this.formula === other.formula &&
	            this.kind === other.kind &&
	            this.url === other.url &&
	            immutable_class_1.immutableArraysEqual(this.granularities, other.granularities) &&
	            granularity_1.granularityEquals(this.bucketedBy, other.bucketedBy) &&
	            this.bucketingStrategy === other.bucketingStrategy &&
	            this.sortStrategy === other.sortStrategy;
	    };
	    Dimension.prototype.canBucketByDefault = function () {
	        return this.isContinuous() && this.bucketingStrategy !== Dimension.defaultNoBucket;
	    };
	    Dimension.prototype.isContinuous = function () {
	        var kind = this.kind;
	        return kind === 'time' || kind === 'number';
	    };
	    Dimension.prototype.change = function (propertyName, newValue) {
	        var v = this.valueOf();
	        if (!v.hasOwnProperty(propertyName)) {
	            throw new Error("Unknown property : " + propertyName);
	        }
	        v[propertyName] = newValue;
	        return new Dimension(v);
	    };
	    Dimension.prototype.changeKind = function (newKind) {
	        return this.change('kind', newKind);
	    };
	    Dimension.prototype.changeName = function (newName) {
	        return this.change('name', newName);
	    };
	    Dimension.prototype.changeTitle = function (newTitle) {
	        return this.change('title', newTitle);
	    };
	    Dimension.prototype.changeFormula = function (newFormula) {
	        return this.change('formula', newFormula);
	    };
	    Dimension.defaultBucket = 'defaultBucket';
	    Dimension.defaultNoBucket = 'defaultNoBucket';
	    return Dimension;
	}());
	exports.Dimension = Dimension;
	check = Dimension;


/***/ },
/* 209 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var immutable_1 = __webpack_require__(210);
	var immutable_class_1 = __webpack_require__(193);
	var objectHasOwnProperty = Object.prototype.hasOwnProperty;
	function hasOwnProperty(obj, key) {
	    if (!obj)
	        return false;
	    return objectHasOwnProperty.call(obj, key);
	}
	exports.hasOwnProperty = hasOwnProperty;
	function moveInList(list, itemIndex, insertPoint) {
	    var n = list.size;
	    if (itemIndex < 0 || itemIndex >= n)
	        throw new Error('itemIndex out of range');
	    if (insertPoint < 0 || insertPoint > n)
	        throw new Error('insertPoint out of range');
	    var newArray = [];
	    list.forEach(function (value, i) {
	        if (i === insertPoint)
	            newArray.push(list.get(itemIndex));
	        if (i !== itemIndex)
	            newArray.push(value);
	    });
	    if (n === insertPoint)
	        newArray.push(list.get(itemIndex));
	    return immutable_1.List(newArray);
	}
	exports.moveInList = moveInList;
	function makeTitle(name) {
	    return name
	        .replace(/^[ _\-]+|[ _\-]+$/g, '')
	        .replace(/(^|[_\-]+)\w/g, function (s) {
	        return s.replace(/[_\-]+/, ' ').toUpperCase();
	    })
	        .replace(/[a-z0-9][A-Z]/g, function (s) {
	        return s[0] + ' ' + s[1];
	    });
	}
	exports.makeTitle = makeTitle;
	function immutableListsEqual(listA, listB) {
	    if (listA === listB)
	        return true;
	    if (!listA !== !listB)
	        return false;
	    return immutable_class_1.immutableArraysEqual(listA.toArray(), listB.toArray());
	}
	exports.immutableListsEqual = immutableListsEqual;
	function collect(wait, fn) {
	    var timeout;
	    var later = function () {
	        timeout = null;
	        fn();
	    };
	    return function () {
	        if (!timeout) {
	            timeout = setTimeout(later, wait);
	        }
	    };
	}
	exports.collect = collect;
	var URL_UNSAFE_CHARS = /[^\w.~\-]+/g;
	function makeUrlSafeName(name) {
	    return name.replace(URL_UNSAFE_CHARS, '_');
	}
	exports.makeUrlSafeName = makeUrlSafeName;
	function verifyUrlSafeName(name) {
	    if (typeof name !== 'string')
	        throw new TypeError('name must be a string');
	    if (!name.length)
	        throw new Error('can not have empty name');
	    var urlSafeName = makeUrlSafeName(name);
	    if (name !== urlSafeName) {
	        throw new Error("'" + name + "' is not a URL safe name. Try '" + urlSafeName + "' instead?");
	    }
	}
	exports.verifyUrlSafeName = verifyUrlSafeName;
	function arraySum(inputArray) {
	    return inputArray.reduce(function (pV, cV) {
	        return pV + cV;
	    }, 0);
	}
	exports.arraySum = arraySum;
	function findFirstBiggerIndex(array, elementToFind, valueOf) {
	    if (!elementToFind)
	        return -1;
	    return immutable_1.List(array).findIndex(function (g) { return valueOf(g) > valueOf(elementToFind); });
	}
	exports.findFirstBiggerIndex = findFirstBiggerIndex;
	function findBiggerClosestToIdeal(array, elementToFind, ideal, valueOf) {
	    var biggerOrEqualIndex = immutable_1.List(array).findIndex(function (g) { return valueOf(g) >= valueOf(elementToFind); });
	    var biggerArrayOrEqual = array.slice(biggerOrEqualIndex);
	    return biggerArrayOrEqual.reduce(function (pV, cV, i, arr) { return Math.abs(valueOf(pV) - valueOf(ideal)) < Math.abs(valueOf(cV) - valueOf(ideal)) ? pV : cV; });
	}
	exports.findBiggerClosestToIdeal = findBiggerClosestToIdeal;
	function findExactIndex(array, elementToFind, valueOf) {
	    return immutable_1.List(array).findIndex(function (g) { return valueOf(g) === valueOf(elementToFind); });
	}
	exports.findExactIndex = findExactIndex;
	function findMaxValueIndex(array, valueOf) {
	    return array.reduce(function (currMax, cV, cIdx, arr) { return valueOf(cV) > valueOf(arr[currMax]) ? cIdx : currMax; }, 0);
	}
	exports.findMaxValueIndex = findMaxValueIndex;
	function findMinValueIndex(array, valueOf) {
	    return array.reduce(function (currMax, cV, cIdx, arr) { return valueOf(cV) < valueOf(arr[currMax]) ? cIdx : currMax; }, 0);
	}
	exports.findMinValueIndex = findMinValueIndex;
	function log10(n) {
	    return Math.log(n) * Math.LOG10E;
	}
	function toSignificantDigits(n, digits) {
	    var multiplier = Math.pow(10, digits - Math.floor(Math.log(n) / Math.LN10) - 1);
	    return Math.round(n * multiplier) / multiplier;
	}
	exports.toSignificantDigits = toSignificantDigits;
	function getNumberOfWholeDigits(n) {
	    return Math.max(Math.floor(log10(Math.abs(n))), 0) + 1;
	}
	exports.getNumberOfWholeDigits = getNumberOfWholeDigits;
	function inlineVars(obj, vs) {
	    return JSON.parse(JSON.stringify(obj).replace(/%\{[\w\-]+\}%/g, function (varName) {
	        varName = varName.substr(2, varName.length - 4);
	        var v = vs[varName];
	        if (typeof v !== 'string')
	            throw new Error("could not find variable '" + varName + "'");
	        var v = JSON.stringify(v);
	        return v.substr(1, v.length - 2);
	    }));
	}
	exports.inlineVars = inlineVars;
	function ensureOneOf(value, values, messagePrefix) {
	    if (values.indexOf(value) !== -1)
	        return;
	    var isMessage = typeof value === 'undefined' ? 'not defined' : "'" + value + "'";
	    throw new Error(messagePrefix + " must be on of '" + values.join("', '") + "' (is " + isMessage + ")");
	}
	exports.ensureOneOf = ensureOneOf;
	function pluralIfNeeded(n, thing) {
	    return n + " " + thing + (n === 1 ? '' : 's');
	}
	exports.pluralIfNeeded = pluralIfNeeded;


/***/ },
/* 210 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 *  Copyright (c) 2014-2015, Facebook, Inc.
	 *  All rights reserved.
	 *
	 *  This source code is licensed under the BSD-style license found in the
	 *  LICENSE file in the root directory of this source tree. An additional grant
	 *  of patent rights can be found in the PATENTS file in the same directory.
	 */

	(function (global, factory) {
	   true ? module.exports = factory() :
	  typeof define === 'function' && define.amd ? define(factory) :
	  (global.Immutable = factory());
	}(this, function () { 'use strict';var SLICE$0 = Array.prototype.slice;

	  function createClass(ctor, superClass) {
	    if (superClass) {
	      ctor.prototype = Object.create(superClass.prototype);
	    }
	    ctor.prototype.constructor = ctor;
	  }

	  function Iterable(value) {
	      return isIterable(value) ? value : Seq(value);
	    }


	  createClass(KeyedIterable, Iterable);
	    function KeyedIterable(value) {
	      return isKeyed(value) ? value : KeyedSeq(value);
	    }


	  createClass(IndexedIterable, Iterable);
	    function IndexedIterable(value) {
	      return isIndexed(value) ? value : IndexedSeq(value);
	    }


	  createClass(SetIterable, Iterable);
	    function SetIterable(value) {
	      return isIterable(value) && !isAssociative(value) ? value : SetSeq(value);
	    }



	  function isIterable(maybeIterable) {
	    return !!(maybeIterable && maybeIterable[IS_ITERABLE_SENTINEL]);
	  }

	  function isKeyed(maybeKeyed) {
	    return !!(maybeKeyed && maybeKeyed[IS_KEYED_SENTINEL]);
	  }

	  function isIndexed(maybeIndexed) {
	    return !!(maybeIndexed && maybeIndexed[IS_INDEXED_SENTINEL]);
	  }

	  function isAssociative(maybeAssociative) {
	    return isKeyed(maybeAssociative) || isIndexed(maybeAssociative);
	  }

	  function isOrdered(maybeOrdered) {
	    return !!(maybeOrdered && maybeOrdered[IS_ORDERED_SENTINEL]);
	  }

	  Iterable.isIterable = isIterable;
	  Iterable.isKeyed = isKeyed;
	  Iterable.isIndexed = isIndexed;
	  Iterable.isAssociative = isAssociative;
	  Iterable.isOrdered = isOrdered;

	  Iterable.Keyed = KeyedIterable;
	  Iterable.Indexed = IndexedIterable;
	  Iterable.Set = SetIterable;


	  var IS_ITERABLE_SENTINEL = '@@__IMMUTABLE_ITERABLE__@@';
	  var IS_KEYED_SENTINEL = '@@__IMMUTABLE_KEYED__@@';
	  var IS_INDEXED_SENTINEL = '@@__IMMUTABLE_INDEXED__@@';
	  var IS_ORDERED_SENTINEL = '@@__IMMUTABLE_ORDERED__@@';

	  // Used for setting prototype methods that IE8 chokes on.
	  var DELETE = 'delete';

	  // Constants describing the size of trie nodes.
	  var SHIFT = 5; // Resulted in best performance after ______?
	  var SIZE = 1 << SHIFT;
	  var MASK = SIZE - 1;

	  // A consistent shared value representing "not set" which equals nothing other
	  // than itself, and nothing that could be provided externally.
	  var NOT_SET = {};

	  // Boolean references, Rough equivalent of `bool &`.
	  var CHANGE_LENGTH = { value: false };
	  var DID_ALTER = { value: false };

	  function MakeRef(ref) {
	    ref.value = false;
	    return ref;
	  }

	  function SetRef(ref) {
	    ref && (ref.value = true);
	  }

	  // A function which returns a value representing an "owner" for transient writes
	  // to tries. The return value will only ever equal itself, and will not equal
	  // the return of any subsequent call of this function.
	  function OwnerID() {}

	  // http://jsperf.com/copy-array-inline
	  function arrCopy(arr, offset) {
	    offset = offset || 0;
	    var len = Math.max(0, arr.length - offset);
	    var newArr = new Array(len);
	    for (var ii = 0; ii < len; ii++) {
	      newArr[ii] = arr[ii + offset];
	    }
	    return newArr;
	  }

	  function ensureSize(iter) {
	    if (iter.size === undefined) {
	      iter.size = iter.__iterate(returnTrue);
	    }
	    return iter.size;
	  }

	  function wrapIndex(iter, index) {
	    // This implements "is array index" which the ECMAString spec defines as:
	    //
	    //     A String property name P is an array index if and only if
	    //     ToString(ToUint32(P)) is equal to P and ToUint32(P) is not equal
	    //     to 2^32−1.
	    //
	    // http://www.ecma-international.org/ecma-262/6.0/#sec-array-exotic-objects
	    if (typeof index !== 'number') {
	      var uint32Index = index >>> 0; // N >>> 0 is shorthand for ToUint32
	      if ('' + uint32Index !== index || uint32Index === 4294967295) {
	        return NaN;
	      }
	      index = uint32Index;
	    }
	    return index < 0 ? ensureSize(iter) + index : index;
	  }

	  function returnTrue() {
	    return true;
	  }

	  function wholeSlice(begin, end, size) {
	    return (begin === 0 || (size !== undefined && begin <= -size)) &&
	      (end === undefined || (size !== undefined && end >= size));
	  }

	  function resolveBegin(begin, size) {
	    return resolveIndex(begin, size, 0);
	  }

	  function resolveEnd(end, size) {
	    return resolveIndex(end, size, size);
	  }

	  function resolveIndex(index, size, defaultIndex) {
	    return index === undefined ?
	      defaultIndex :
	      index < 0 ?
	        Math.max(0, size + index) :
	        size === undefined ?
	          index :
	          Math.min(size, index);
	  }

	  /* global Symbol */

	  var ITERATE_KEYS = 0;
	  var ITERATE_VALUES = 1;
	  var ITERATE_ENTRIES = 2;

	  var REAL_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
	  var FAUX_ITERATOR_SYMBOL = '@@iterator';

	  var ITERATOR_SYMBOL = REAL_ITERATOR_SYMBOL || FAUX_ITERATOR_SYMBOL;


	  function Iterator(next) {
	      this.next = next;
	    }

	    Iterator.prototype.toString = function() {
	      return '[Iterator]';
	    };


	  Iterator.KEYS = ITERATE_KEYS;
	  Iterator.VALUES = ITERATE_VALUES;
	  Iterator.ENTRIES = ITERATE_ENTRIES;

	  Iterator.prototype.inspect =
	  Iterator.prototype.toSource = function () { return this.toString(); }
	  Iterator.prototype[ITERATOR_SYMBOL] = function () {
	    return this;
	  };


	  function iteratorValue(type, k, v, iteratorResult) {
	    var value = type === 0 ? k : type === 1 ? v : [k, v];
	    iteratorResult ? (iteratorResult.value = value) : (iteratorResult = {
	      value: value, done: false
	    });
	    return iteratorResult;
	  }

	  function iteratorDone() {
	    return { value: undefined, done: true };
	  }

	  function hasIterator(maybeIterable) {
	    return !!getIteratorFn(maybeIterable);
	  }

	  function isIterator(maybeIterator) {
	    return maybeIterator && typeof maybeIterator.next === 'function';
	  }

	  function getIterator(iterable) {
	    var iteratorFn = getIteratorFn(iterable);
	    return iteratorFn && iteratorFn.call(iterable);
	  }

	  function getIteratorFn(iterable) {
	    var iteratorFn = iterable && (
	      (REAL_ITERATOR_SYMBOL && iterable[REAL_ITERATOR_SYMBOL]) ||
	      iterable[FAUX_ITERATOR_SYMBOL]
	    );
	    if (typeof iteratorFn === 'function') {
	      return iteratorFn;
	    }
	  }

	  function isArrayLike(value) {
	    return value && typeof value.length === 'number';
	  }

	  createClass(Seq, Iterable);
	    function Seq(value) {
	      return value === null || value === undefined ? emptySequence() :
	        isIterable(value) ? value.toSeq() : seqFromValue(value);
	    }

	    Seq.of = function(/*...values*/) {
	      return Seq(arguments);
	    };

	    Seq.prototype.toSeq = function() {
	      return this;
	    };

	    Seq.prototype.toString = function() {
	      return this.__toString('Seq {', '}');
	    };

	    Seq.prototype.cacheResult = function() {
	      if (!this._cache && this.__iterateUncached) {
	        this._cache = this.entrySeq().toArray();
	        this.size = this._cache.length;
	      }
	      return this;
	    };

	    // abstract __iterateUncached(fn, reverse)

	    Seq.prototype.__iterate = function(fn, reverse) {
	      return seqIterate(this, fn, reverse, true);
	    };

	    // abstract __iteratorUncached(type, reverse)

	    Seq.prototype.__iterator = function(type, reverse) {
	      return seqIterator(this, type, reverse, true);
	    };



	  createClass(KeyedSeq, Seq);
	    function KeyedSeq(value) {
	      return value === null || value === undefined ?
	        emptySequence().toKeyedSeq() :
	        isIterable(value) ?
	          (isKeyed(value) ? value.toSeq() : value.fromEntrySeq()) :
	          keyedSeqFromValue(value);
	    }

	    KeyedSeq.prototype.toKeyedSeq = function() {
	      return this;
	    };



	  createClass(IndexedSeq, Seq);
	    function IndexedSeq(value) {
	      return value === null || value === undefined ? emptySequence() :
	        !isIterable(value) ? indexedSeqFromValue(value) :
	        isKeyed(value) ? value.entrySeq() : value.toIndexedSeq();
	    }

	    IndexedSeq.of = function(/*...values*/) {
	      return IndexedSeq(arguments);
	    };

	    IndexedSeq.prototype.toIndexedSeq = function() {
	      return this;
	    };

	    IndexedSeq.prototype.toString = function() {
	      return this.__toString('Seq [', ']');
	    };

	    IndexedSeq.prototype.__iterate = function(fn, reverse) {
	      return seqIterate(this, fn, reverse, false);
	    };

	    IndexedSeq.prototype.__iterator = function(type, reverse) {
	      return seqIterator(this, type, reverse, false);
	    };



	  createClass(SetSeq, Seq);
	    function SetSeq(value) {
	      return (
	        value === null || value === undefined ? emptySequence() :
	        !isIterable(value) ? indexedSeqFromValue(value) :
	        isKeyed(value) ? value.entrySeq() : value
	      ).toSetSeq();
	    }

	    SetSeq.of = function(/*...values*/) {
	      return SetSeq(arguments);
	    };

	    SetSeq.prototype.toSetSeq = function() {
	      return this;
	    };



	  Seq.isSeq = isSeq;
	  Seq.Keyed = KeyedSeq;
	  Seq.Set = SetSeq;
	  Seq.Indexed = IndexedSeq;

	  var IS_SEQ_SENTINEL = '@@__IMMUTABLE_SEQ__@@';

	  Seq.prototype[IS_SEQ_SENTINEL] = true;



	  createClass(ArraySeq, IndexedSeq);
	    function ArraySeq(array) {
	      this._array = array;
	      this.size = array.length;
	    }

	    ArraySeq.prototype.get = function(index, notSetValue) {
	      return this.has(index) ? this._array[wrapIndex(this, index)] : notSetValue;
	    };

	    ArraySeq.prototype.__iterate = function(fn, reverse) {
	      var array = this._array;
	      var maxIndex = array.length - 1;
	      for (var ii = 0; ii <= maxIndex; ii++) {
	        if (fn(array[reverse ? maxIndex - ii : ii], ii, this) === false) {
	          return ii + 1;
	        }
	      }
	      return ii;
	    };

	    ArraySeq.prototype.__iterator = function(type, reverse) {
	      var array = this._array;
	      var maxIndex = array.length - 1;
	      var ii = 0;
	      return new Iterator(function() 
	        {return ii > maxIndex ?
	          iteratorDone() :
	          iteratorValue(type, ii, array[reverse ? maxIndex - ii++ : ii++])}
	      );
	    };



	  createClass(ObjectSeq, KeyedSeq);
	    function ObjectSeq(object) {
	      var keys = Object.keys(object);
	      this._object = object;
	      this._keys = keys;
	      this.size = keys.length;
	    }

	    ObjectSeq.prototype.get = function(key, notSetValue) {
	      if (notSetValue !== undefined && !this.has(key)) {
	        return notSetValue;
	      }
	      return this._object[key];
	    };

	    ObjectSeq.prototype.has = function(key) {
	      return this._object.hasOwnProperty(key);
	    };

	    ObjectSeq.prototype.__iterate = function(fn, reverse) {
	      var object = this._object;
	      var keys = this._keys;
	      var maxIndex = keys.length - 1;
	      for (var ii = 0; ii <= maxIndex; ii++) {
	        var key = keys[reverse ? maxIndex - ii : ii];
	        if (fn(object[key], key, this) === false) {
	          return ii + 1;
	        }
	      }
	      return ii;
	    };

	    ObjectSeq.prototype.__iterator = function(type, reverse) {
	      var object = this._object;
	      var keys = this._keys;
	      var maxIndex = keys.length - 1;
	      var ii = 0;
	      return new Iterator(function()  {
	        var key = keys[reverse ? maxIndex - ii : ii];
	        return ii++ > maxIndex ?
	          iteratorDone() :
	          iteratorValue(type, key, object[key]);
	      });
	    };

	  ObjectSeq.prototype[IS_ORDERED_SENTINEL] = true;


	  createClass(IterableSeq, IndexedSeq);
	    function IterableSeq(iterable) {
	      this._iterable = iterable;
	      this.size = iterable.length || iterable.size;
	    }

	    IterableSeq.prototype.__iterateUncached = function(fn, reverse) {
	      if (reverse) {
	        return this.cacheResult().__iterate(fn, reverse);
	      }
	      var iterable = this._iterable;
	      var iterator = getIterator(iterable);
	      var iterations = 0;
	      if (isIterator(iterator)) {
	        var step;
	        while (!(step = iterator.next()).done) {
	          if (fn(step.value, iterations++, this) === false) {
	            break;
	          }
	        }
	      }
	      return iterations;
	    };

	    IterableSeq.prototype.__iteratorUncached = function(type, reverse) {
	      if (reverse) {
	        return this.cacheResult().__iterator(type, reverse);
	      }
	      var iterable = this._iterable;
	      var iterator = getIterator(iterable);
	      if (!isIterator(iterator)) {
	        return new Iterator(iteratorDone);
	      }
	      var iterations = 0;
	      return new Iterator(function()  {
	        var step = iterator.next();
	        return step.done ? step : iteratorValue(type, iterations++, step.value);
	      });
	    };



	  createClass(IteratorSeq, IndexedSeq);
	    function IteratorSeq(iterator) {
	      this._iterator = iterator;
	      this._iteratorCache = [];
	    }

	    IteratorSeq.prototype.__iterateUncached = function(fn, reverse) {
	      if (reverse) {
	        return this.cacheResult().__iterate(fn, reverse);
	      }
	      var iterator = this._iterator;
	      var cache = this._iteratorCache;
	      var iterations = 0;
	      while (iterations < cache.length) {
	        if (fn(cache[iterations], iterations++, this) === false) {
	          return iterations;
	        }
	      }
	      var step;
	      while (!(step = iterator.next()).done) {
	        var val = step.value;
	        cache[iterations] = val;
	        if (fn(val, iterations++, this) === false) {
	          break;
	        }
	      }
	      return iterations;
	    };

	    IteratorSeq.prototype.__iteratorUncached = function(type, reverse) {
	      if (reverse) {
	        return this.cacheResult().__iterator(type, reverse);
	      }
	      var iterator = this._iterator;
	      var cache = this._iteratorCache;
	      var iterations = 0;
	      return new Iterator(function()  {
	        if (iterations >= cache.length) {
	          var step = iterator.next();
	          if (step.done) {
	            return step;
	          }
	          cache[iterations] = step.value;
	        }
	        return iteratorValue(type, iterations, cache[iterations++]);
	      });
	    };




	  // # pragma Helper functions

	  function isSeq(maybeSeq) {
	    return !!(maybeSeq && maybeSeq[IS_SEQ_SENTINEL]);
	  }

	  var EMPTY_SEQ;

	  function emptySequence() {
	    return EMPTY_SEQ || (EMPTY_SEQ = new ArraySeq([]));
	  }

	  function keyedSeqFromValue(value) {
	    var seq =
	      Array.isArray(value) ? new ArraySeq(value).fromEntrySeq() :
	      isIterator(value) ? new IteratorSeq(value).fromEntrySeq() :
	      hasIterator(value) ? new IterableSeq(value).fromEntrySeq() :
	      typeof value === 'object' ? new ObjectSeq(value) :
	      undefined;
	    if (!seq) {
	      throw new TypeError(
	        'Expected Array or iterable object of [k, v] entries, '+
	        'or keyed object: ' + value
	      );
	    }
	    return seq;
	  }

	  function indexedSeqFromValue(value) {
	    var seq = maybeIndexedSeqFromValue(value);
	    if (!seq) {
	      throw new TypeError(
	        'Expected Array or iterable object of values: ' + value
	      );
	    }
	    return seq;
	  }

	  function seqFromValue(value) {
	    var seq = maybeIndexedSeqFromValue(value) ||
	      (typeof value === 'object' && new ObjectSeq(value));
	    if (!seq) {
	      throw new TypeError(
	        'Expected Array or iterable object of values, or keyed object: ' + value
	      );
	    }
	    return seq;
	  }

	  function maybeIndexedSeqFromValue(value) {
	    return (
	      isArrayLike(value) ? new ArraySeq(value) :
	      isIterator(value) ? new IteratorSeq(value) :
	      hasIterator(value) ? new IterableSeq(value) :
	      undefined
	    );
	  }

	  function seqIterate(seq, fn, reverse, useKeys) {
	    var cache = seq._cache;
	    if (cache) {
	      var maxIndex = cache.length - 1;
	      for (var ii = 0; ii <= maxIndex; ii++) {
	        var entry = cache[reverse ? maxIndex - ii : ii];
	        if (fn(entry[1], useKeys ? entry[0] : ii, seq) === false) {
	          return ii + 1;
	        }
	      }
	      return ii;
	    }
	    return seq.__iterateUncached(fn, reverse);
	  }

	  function seqIterator(seq, type, reverse, useKeys) {
	    var cache = seq._cache;
	    if (cache) {
	      var maxIndex = cache.length - 1;
	      var ii = 0;
	      return new Iterator(function()  {
	        var entry = cache[reverse ? maxIndex - ii : ii];
	        return ii++ > maxIndex ?
	          iteratorDone() :
	          iteratorValue(type, useKeys ? entry[0] : ii - 1, entry[1]);
	      });
	    }
	    return seq.__iteratorUncached(type, reverse);
	  }

	  function fromJS(json, converter) {
	    return converter ?
	      fromJSWith(converter, json, '', {'': json}) :
	      fromJSDefault(json);
	  }

	  function fromJSWith(converter, json, key, parentJSON) {
	    if (Array.isArray(json)) {
	      return converter.call(parentJSON, key, IndexedSeq(json).map(function(v, k)  {return fromJSWith(converter, v, k, json)}));
	    }
	    if (isPlainObj(json)) {
	      return converter.call(parentJSON, key, KeyedSeq(json).map(function(v, k)  {return fromJSWith(converter, v, k, json)}));
	    }
	    return json;
	  }

	  function fromJSDefault(json) {
	    if (Array.isArray(json)) {
	      return IndexedSeq(json).map(fromJSDefault).toList();
	    }
	    if (isPlainObj(json)) {
	      return KeyedSeq(json).map(fromJSDefault).toMap();
	    }
	    return json;
	  }

	  function isPlainObj(value) {
	    return value && (value.constructor === Object || value.constructor === undefined);
	  }

	  /**
	   * An extension of the "same-value" algorithm as [described for use by ES6 Map
	   * and Set](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map#Key_equality)
	   *
	   * NaN is considered the same as NaN, however -0 and 0 are considered the same
	   * value, which is different from the algorithm described by
	   * [`Object.is`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is).
	   *
	   * This is extended further to allow Objects to describe the values they
	   * represent, by way of `valueOf` or `equals` (and `hashCode`).
	   *
	   * Note: because of this extension, the key equality of Immutable.Map and the
	   * value equality of Immutable.Set will differ from ES6 Map and Set.
	   *
	   * ### Defining custom values
	   *
	   * The easiest way to describe the value an object represents is by implementing
	   * `valueOf`. For example, `Date` represents a value by returning a unix
	   * timestamp for `valueOf`:
	   *
	   *     var date1 = new Date(1234567890000); // Fri Feb 13 2009 ...
	   *     var date2 = new Date(1234567890000);
	   *     date1.valueOf(); // 1234567890000
	   *     assert( date1 !== date2 );
	   *     assert( Immutable.is( date1, date2 ) );
	   *
	   * Note: overriding `valueOf` may have other implications if you use this object
	   * where JavaScript expects a primitive, such as implicit string coercion.
	   *
	   * For more complex types, especially collections, implementing `valueOf` may
	   * not be performant. An alternative is to implement `equals` and `hashCode`.
	   *
	   * `equals` takes another object, presumably of similar type, and returns true
	   * if the it is equal. Equality is symmetrical, so the same result should be
	   * returned if this and the argument are flipped.
	   *
	   *     assert( a.equals(b) === b.equals(a) );
	   *
	   * `hashCode` returns a 32bit integer number representing the object which will
	   * be used to determine how to store the value object in a Map or Set. You must
	   * provide both or neither methods, one must not exist without the other.
	   *
	   * Also, an important relationship between these methods must be upheld: if two
	   * values are equal, they *must* return the same hashCode. If the values are not
	   * equal, they might have the same hashCode; this is called a hash collision,
	   * and while undesirable for performance reasons, it is acceptable.
	   *
	   *     if (a.equals(b)) {
	   *       assert( a.hashCode() === b.hashCode() );
	   *     }
	   *
	   * All Immutable collections implement `equals` and `hashCode`.
	   *
	   */
	  function is(valueA, valueB) {
	    if (valueA === valueB || (valueA !== valueA && valueB !== valueB)) {
	      return true;
	    }
	    if (!valueA || !valueB) {
	      return false;
	    }
	    if (typeof valueA.valueOf === 'function' &&
	        typeof valueB.valueOf === 'function') {
	      valueA = valueA.valueOf();
	      valueB = valueB.valueOf();
	      if (valueA === valueB || (valueA !== valueA && valueB !== valueB)) {
	        return true;
	      }
	      if (!valueA || !valueB) {
	        return false;
	      }
	    }
	    if (typeof valueA.equals === 'function' &&
	        typeof valueB.equals === 'function' &&
	        valueA.equals(valueB)) {
	      return true;
	    }
	    return false;
	  }

	  function deepEqual(a, b) {
	    if (a === b) {
	      return true;
	    }

	    if (
	      !isIterable(b) ||
	      a.size !== undefined && b.size !== undefined && a.size !== b.size ||
	      a.__hash !== undefined && b.__hash !== undefined && a.__hash !== b.__hash ||
	      isKeyed(a) !== isKeyed(b) ||
	      isIndexed(a) !== isIndexed(b) ||
	      isOrdered(a) !== isOrdered(b)
	    ) {
	      return false;
	    }

	    if (a.size === 0 && b.size === 0) {
	      return true;
	    }

	    var notAssociative = !isAssociative(a);

	    if (isOrdered(a)) {
	      var entries = a.entries();
	      return b.every(function(v, k)  {
	        var entry = entries.next().value;
	        return entry && is(entry[1], v) && (notAssociative || is(entry[0], k));
	      }) && entries.next().done;
	    }

	    var flipped = false;

	    if (a.size === undefined) {
	      if (b.size === undefined) {
	        if (typeof a.cacheResult === 'function') {
	          a.cacheResult();
	        }
	      } else {
	        flipped = true;
	        var _ = a;
	        a = b;
	        b = _;
	      }
	    }

	    var allEqual = true;
	    var bSize = b.__iterate(function(v, k)  {
	      if (notAssociative ? !a.has(v) :
	          flipped ? !is(v, a.get(k, NOT_SET)) : !is(a.get(k, NOT_SET), v)) {
	        allEqual = false;
	        return false;
	      }
	    });

	    return allEqual && a.size === bSize;
	  }

	  createClass(Repeat, IndexedSeq);

	    function Repeat(value, times) {
	      if (!(this instanceof Repeat)) {
	        return new Repeat(value, times);
	      }
	      this._value = value;
	      this.size = times === undefined ? Infinity : Math.max(0, times);
	      if (this.size === 0) {
	        if (EMPTY_REPEAT) {
	          return EMPTY_REPEAT;
	        }
	        EMPTY_REPEAT = this;
	      }
	    }

	    Repeat.prototype.toString = function() {
	      if (this.size === 0) {
	        return 'Repeat []';
	      }
	      return 'Repeat [ ' + this._value + ' ' + this.size + ' times ]';
	    };

	    Repeat.prototype.get = function(index, notSetValue) {
	      return this.has(index) ? this._value : notSetValue;
	    };

	    Repeat.prototype.includes = function(searchValue) {
	      return is(this._value, searchValue);
	    };

	    Repeat.prototype.slice = function(begin, end) {
	      var size = this.size;
	      return wholeSlice(begin, end, size) ? this :
	        new Repeat(this._value, resolveEnd(end, size) - resolveBegin(begin, size));
	    };

	    Repeat.prototype.reverse = function() {
	      return this;
	    };

	    Repeat.prototype.indexOf = function(searchValue) {
	      if (is(this._value, searchValue)) {
	        return 0;
	      }
	      return -1;
	    };

	    Repeat.prototype.lastIndexOf = function(searchValue) {
	      if (is(this._value, searchValue)) {
	        return this.size;
	      }
	      return -1;
	    };

	    Repeat.prototype.__iterate = function(fn, reverse) {
	      for (var ii = 0; ii < this.size; ii++) {
	        if (fn(this._value, ii, this) === false) {
	          return ii + 1;
	        }
	      }
	      return ii;
	    };

	    Repeat.prototype.__iterator = function(type, reverse) {var this$0 = this;
	      var ii = 0;
	      return new Iterator(function() 
	        {return ii < this$0.size ? iteratorValue(type, ii++, this$0._value) : iteratorDone()}
	      );
	    };

	    Repeat.prototype.equals = function(other) {
	      return other instanceof Repeat ?
	        is(this._value, other._value) :
	        deepEqual(other);
	    };


	  var EMPTY_REPEAT;

	  function invariant(condition, error) {
	    if (!condition) throw new Error(error);
	  }

	  createClass(Range, IndexedSeq);

	    function Range(start, end, step) {
	      if (!(this instanceof Range)) {
	        return new Range(start, end, step);
	      }
	      invariant(step !== 0, 'Cannot step a Range by 0');
	      start = start || 0;
	      if (end === undefined) {
	        end = Infinity;
	      }
	      step = step === undefined ? 1 : Math.abs(step);
	      if (end < start) {
	        step = -step;
	      }
	      this._start = start;
	      this._end = end;
	      this._step = step;
	      this.size = Math.max(0, Math.ceil((end - start) / step - 1) + 1);
	      if (this.size === 0) {
	        if (EMPTY_RANGE) {
	          return EMPTY_RANGE;
	        }
	        EMPTY_RANGE = this;
	      }
	    }

	    Range.prototype.toString = function() {
	      if (this.size === 0) {
	        return 'Range []';
	      }
	      return 'Range [ ' +
	        this._start + '...' + this._end +
	        (this._step !== 1 ? ' by ' + this._step : '') +
	      ' ]';
	    };

	    Range.prototype.get = function(index, notSetValue) {
	      return this.has(index) ?
	        this._start + wrapIndex(this, index) * this._step :
	        notSetValue;
	    };

	    Range.prototype.includes = function(searchValue) {
	      var possibleIndex = (searchValue - this._start) / this._step;
	      return possibleIndex >= 0 &&
	        possibleIndex < this.size &&
	        possibleIndex === Math.floor(possibleIndex);
	    };

	    Range.prototype.slice = function(begin, end) {
	      if (wholeSlice(begin, end, this.size)) {
	        return this;
	      }
	      begin = resolveBegin(begin, this.size);
	      end = resolveEnd(end, this.size);
	      if (end <= begin) {
	        return new Range(0, 0);
	      }
	      return new Range(this.get(begin, this._end), this.get(end, this._end), this._step);
	    };

	    Range.prototype.indexOf = function(searchValue) {
	      var offsetValue = searchValue - this._start;
	      if (offsetValue % this._step === 0) {
	        var index = offsetValue / this._step;
	        if (index >= 0 && index < this.size) {
	          return index
	        }
	      }
	      return -1;
	    };

	    Range.prototype.lastIndexOf = function(searchValue) {
	      return this.indexOf(searchValue);
	    };

	    Range.prototype.__iterate = function(fn, reverse) {
	      var maxIndex = this.size - 1;
	      var step = this._step;
	      var value = reverse ? this._start + maxIndex * step : this._start;
	      for (var ii = 0; ii <= maxIndex; ii++) {
	        if (fn(value, ii, this) === false) {
	          return ii + 1;
	        }
	        value += reverse ? -step : step;
	      }
	      return ii;
	    };

	    Range.prototype.__iterator = function(type, reverse) {
	      var maxIndex = this.size - 1;
	      var step = this._step;
	      var value = reverse ? this._start + maxIndex * step : this._start;
	      var ii = 0;
	      return new Iterator(function()  {
	        var v = value;
	        value += reverse ? -step : step;
	        return ii > maxIndex ? iteratorDone() : iteratorValue(type, ii++, v);
	      });
	    };

	    Range.prototype.equals = function(other) {
	      return other instanceof Range ?
	        this._start === other._start &&
	        this._end === other._end &&
	        this._step === other._step :
	        deepEqual(this, other);
	    };


	  var EMPTY_RANGE;

	  createClass(Collection, Iterable);
	    function Collection() {
	      throw TypeError('Abstract');
	    }


	  createClass(KeyedCollection, Collection);function KeyedCollection() {}

	  createClass(IndexedCollection, Collection);function IndexedCollection() {}

	  createClass(SetCollection, Collection);function SetCollection() {}


	  Collection.Keyed = KeyedCollection;
	  Collection.Indexed = IndexedCollection;
	  Collection.Set = SetCollection;

	  var imul =
	    typeof Math.imul === 'function' && Math.imul(0xffffffff, 2) === -2 ?
	    Math.imul :
	    function imul(a, b) {
	      a = a | 0; // int
	      b = b | 0; // int
	      var c = a & 0xffff;
	      var d = b & 0xffff;
	      // Shift by 0 fixes the sign on the high part.
	      return (c * d) + ((((a >>> 16) * d + c * (b >>> 16)) << 16) >>> 0) | 0; // int
	    };

	  // v8 has an optimization for storing 31-bit signed numbers.
	  // Values which have either 00 or 11 as the high order bits qualify.
	  // This function drops the highest order bit in a signed number, maintaining
	  // the sign bit.
	  function smi(i32) {
	    return ((i32 >>> 1) & 0x40000000) | (i32 & 0xBFFFFFFF);
	  }

	  function hash(o) {
	    if (o === false || o === null || o === undefined) {
	      return 0;
	    }
	    if (typeof o.valueOf === 'function') {
	      o = o.valueOf();
	      if (o === false || o === null || o === undefined) {
	        return 0;
	      }
	    }
	    if (o === true) {
	      return 1;
	    }
	    var type = typeof o;
	    if (type === 'number') {
	      if (o !== o || o === Infinity) {
	        return 0;
	      }
	      var h = o | 0;
	      if (h !== o) {
	        h ^= o * 0xFFFFFFFF;
	      }
	      while (o > 0xFFFFFFFF) {
	        o /= 0xFFFFFFFF;
	        h ^= o;
	      }
	      return smi(h);
	    }
	    if (type === 'string') {
	      return o.length > STRING_HASH_CACHE_MIN_STRLEN ? cachedHashString(o) : hashString(o);
	    }
	    if (typeof o.hashCode === 'function') {
	      return o.hashCode();
	    }
	    if (type === 'object') {
	      return hashJSObj(o);
	    }
	    if (typeof o.toString === 'function') {
	      return hashString(o.toString());
	    }
	    throw new Error('Value type ' + type + ' cannot be hashed.');
	  }

	  function cachedHashString(string) {
	    var hash = stringHashCache[string];
	    if (hash === undefined) {
	      hash = hashString(string);
	      if (STRING_HASH_CACHE_SIZE === STRING_HASH_CACHE_MAX_SIZE) {
	        STRING_HASH_CACHE_SIZE = 0;
	        stringHashCache = {};
	      }
	      STRING_HASH_CACHE_SIZE++;
	      stringHashCache[string] = hash;
	    }
	    return hash;
	  }

	  // http://jsperf.com/hashing-strings
	  function hashString(string) {
	    // This is the hash from JVM
	    // The hash code for a string is computed as
	    // s[0] * 31 ^ (n - 1) + s[1] * 31 ^ (n - 2) + ... + s[n - 1],
	    // where s[i] is the ith character of the string and n is the length of
	    // the string. We "mod" the result to make it between 0 (inclusive) and 2^31
	    // (exclusive) by dropping high bits.
	    var hash = 0;
	    for (var ii = 0; ii < string.length; ii++) {
	      hash = 31 * hash + string.charCodeAt(ii) | 0;
	    }
	    return smi(hash);
	  }

	  function hashJSObj(obj) {
	    var hash;
	    if (usingWeakMap) {
	      hash = weakMap.get(obj);
	      if (hash !== undefined) {
	        return hash;
	      }
	    }

	    hash = obj[UID_HASH_KEY];
	    if (hash !== undefined) {
	      return hash;
	    }

	    if (!canDefineProperty) {
	      hash = obj.propertyIsEnumerable && obj.propertyIsEnumerable[UID_HASH_KEY];
	      if (hash !== undefined) {
	        return hash;
	      }

	      hash = getIENodeHash(obj);
	      if (hash !== undefined) {
	        return hash;
	      }
	    }

	    hash = ++objHashUID;
	    if (objHashUID & 0x40000000) {
	      objHashUID = 0;
	    }

	    if (usingWeakMap) {
	      weakMap.set(obj, hash);
	    } else if (isExtensible !== undefined && isExtensible(obj) === false) {
	      throw new Error('Non-extensible objects are not allowed as keys.');
	    } else if (canDefineProperty) {
	      Object.defineProperty(obj, UID_HASH_KEY, {
	        'enumerable': false,
	        'configurable': false,
	        'writable': false,
	        'value': hash
	      });
	    } else if (obj.propertyIsEnumerable !== undefined &&
	               obj.propertyIsEnumerable === obj.constructor.prototype.propertyIsEnumerable) {
	      // Since we can't define a non-enumerable property on the object
	      // we'll hijack one of the less-used non-enumerable properties to
	      // save our hash on it. Since this is a function it will not show up in
	      // `JSON.stringify` which is what we want.
	      obj.propertyIsEnumerable = function() {
	        return this.constructor.prototype.propertyIsEnumerable.apply(this, arguments);
	      };
	      obj.propertyIsEnumerable[UID_HASH_KEY] = hash;
	    } else if (obj.nodeType !== undefined) {
	      // At this point we couldn't get the IE `uniqueID` to use as a hash
	      // and we couldn't use a non-enumerable property to exploit the
	      // dontEnum bug so we simply add the `UID_HASH_KEY` on the node
	      // itself.
	      obj[UID_HASH_KEY] = hash;
	    } else {
	      throw new Error('Unable to set a non-enumerable property on object.');
	    }

	    return hash;
	  }

	  // Get references to ES5 object methods.
	  var isExtensible = Object.isExtensible;

	  // True if Object.defineProperty works as expected. IE8 fails this test.
	  var canDefineProperty = (function() {
	    try {
	      Object.defineProperty({}, '@', {});
	      return true;
	    } catch (e) {
	      return false;
	    }
	  }());

	  // IE has a `uniqueID` property on DOM nodes. We can construct the hash from it
	  // and avoid memory leaks from the IE cloneNode bug.
	  function getIENodeHash(node) {
	    if (node && node.nodeType > 0) {
	      switch (node.nodeType) {
	        case 1: // Element
	          return node.uniqueID;
	        case 9: // Document
	          return node.documentElement && node.documentElement.uniqueID;
	      }
	    }
	  }

	  // If possible, use a WeakMap.
	  var usingWeakMap = typeof WeakMap === 'function';
	  var weakMap;
	  if (usingWeakMap) {
	    weakMap = new WeakMap();
	  }

	  var objHashUID = 0;

	  var UID_HASH_KEY = '__immutablehash__';
	  if (typeof Symbol === 'function') {
	    UID_HASH_KEY = Symbol(UID_HASH_KEY);
	  }

	  var STRING_HASH_CACHE_MIN_STRLEN = 16;
	  var STRING_HASH_CACHE_MAX_SIZE = 255;
	  var STRING_HASH_CACHE_SIZE = 0;
	  var stringHashCache = {};

	  function assertNotInfinite(size) {
	    invariant(
	      size !== Infinity,
	      'Cannot perform this action with an infinite size.'
	    );
	  }

	  createClass(Map, KeyedCollection);

	    // @pragma Construction

	    function Map(value) {
	      return value === null || value === undefined ? emptyMap() :
	        isMap(value) && !isOrdered(value) ? value :
	        emptyMap().withMutations(function(map ) {
	          var iter = KeyedIterable(value);
	          assertNotInfinite(iter.size);
	          iter.forEach(function(v, k)  {return map.set(k, v)});
	        });
	    }

	    Map.of = function() {var keyValues = SLICE$0.call(arguments, 0);
	      return emptyMap().withMutations(function(map ) {
	        for (var i = 0; i < keyValues.length; i += 2) {
	          if (i + 1 >= keyValues.length) {
	            throw new Error('Missing value for key: ' + keyValues[i]);
	          }
	          map.set(keyValues[i], keyValues[i + 1]);
	        }
	      });
	    };

	    Map.prototype.toString = function() {
	      return this.__toString('Map {', '}');
	    };

	    // @pragma Access

	    Map.prototype.get = function(k, notSetValue) {
	      return this._root ?
	        this._root.get(0, undefined, k, notSetValue) :
	        notSetValue;
	    };

	    // @pragma Modification

	    Map.prototype.set = function(k, v) {
	      return updateMap(this, k, v);
	    };

	    Map.prototype.setIn = function(keyPath, v) {
	      return this.updateIn(keyPath, NOT_SET, function()  {return v});
	    };

	    Map.prototype.remove = function(k) {
	      return updateMap(this, k, NOT_SET);
	    };

	    Map.prototype.deleteIn = function(keyPath) {
	      return this.updateIn(keyPath, function()  {return NOT_SET});
	    };

	    Map.prototype.update = function(k, notSetValue, updater) {
	      return arguments.length === 1 ?
	        k(this) :
	        this.updateIn([k], notSetValue, updater);
	    };

	    Map.prototype.updateIn = function(keyPath, notSetValue, updater) {
	      if (!updater) {
	        updater = notSetValue;
	        notSetValue = undefined;
	      }
	      var updatedValue = updateInDeepMap(
	        this,
	        forceIterator(keyPath),
	        notSetValue,
	        updater
	      );
	      return updatedValue === NOT_SET ? undefined : updatedValue;
	    };

	    Map.prototype.clear = function() {
	      if (this.size === 0) {
	        return this;
	      }
	      if (this.__ownerID) {
	        this.size = 0;
	        this._root = null;
	        this.__hash = undefined;
	        this.__altered = true;
	        return this;
	      }
	      return emptyMap();
	    };

	    // @pragma Composition

	    Map.prototype.merge = function(/*...iters*/) {
	      return mergeIntoMapWith(this, undefined, arguments);
	    };

	    Map.prototype.mergeWith = function(merger) {var iters = SLICE$0.call(arguments, 1);
	      return mergeIntoMapWith(this, merger, iters);
	    };

	    Map.prototype.mergeIn = function(keyPath) {var iters = SLICE$0.call(arguments, 1);
	      return this.updateIn(
	        keyPath,
	        emptyMap(),
	        function(m ) {return typeof m.merge === 'function' ?
	          m.merge.apply(m, iters) :
	          iters[iters.length - 1]}
	      );
	    };

	    Map.prototype.mergeDeep = function(/*...iters*/) {
	      return mergeIntoMapWith(this, deepMerger, arguments);
	    };

	    Map.prototype.mergeDeepWith = function(merger) {var iters = SLICE$0.call(arguments, 1);
	      return mergeIntoMapWith(this, deepMergerWith(merger), iters);
	    };

	    Map.prototype.mergeDeepIn = function(keyPath) {var iters = SLICE$0.call(arguments, 1);
	      return this.updateIn(
	        keyPath,
	        emptyMap(),
	        function(m ) {return typeof m.mergeDeep === 'function' ?
	          m.mergeDeep.apply(m, iters) :
	          iters[iters.length - 1]}
	      );
	    };

	    Map.prototype.sort = function(comparator) {
	      // Late binding
	      return OrderedMap(sortFactory(this, comparator));
	    };

	    Map.prototype.sortBy = function(mapper, comparator) {
	      // Late binding
	      return OrderedMap(sortFactory(this, comparator, mapper));
	    };

	    // @pragma Mutability

	    Map.prototype.withMutations = function(fn) {
	      var mutable = this.asMutable();
	      fn(mutable);
	      return mutable.wasAltered() ? mutable.__ensureOwner(this.__ownerID) : this;
	    };

	    Map.prototype.asMutable = function() {
	      return this.__ownerID ? this : this.__ensureOwner(new OwnerID());
	    };

	    Map.prototype.asImmutable = function() {
	      return this.__ensureOwner();
	    };

	    Map.prototype.wasAltered = function() {
	      return this.__altered;
	    };

	    Map.prototype.__iterator = function(type, reverse) {
	      return new MapIterator(this, type, reverse);
	    };

	    Map.prototype.__iterate = function(fn, reverse) {var this$0 = this;
	      var iterations = 0;
	      this._root && this._root.iterate(function(entry ) {
	        iterations++;
	        return fn(entry[1], entry[0], this$0);
	      }, reverse);
	      return iterations;
	    };

	    Map.prototype.__ensureOwner = function(ownerID) {
	      if (ownerID === this.__ownerID) {
	        return this;
	      }
	      if (!ownerID) {
	        this.__ownerID = ownerID;
	        this.__altered = false;
	        return this;
	      }
	      return makeMap(this.size, this._root, ownerID, this.__hash);
	    };


	  function isMap(maybeMap) {
	    return !!(maybeMap && maybeMap[IS_MAP_SENTINEL]);
	  }

	  Map.isMap = isMap;

	  var IS_MAP_SENTINEL = '@@__IMMUTABLE_MAP__@@';

	  var MapPrototype = Map.prototype;
	  MapPrototype[IS_MAP_SENTINEL] = true;
	  MapPrototype[DELETE] = MapPrototype.remove;
	  MapPrototype.removeIn = MapPrototype.deleteIn;


	  // #pragma Trie Nodes



	    function ArrayMapNode(ownerID, entries) {
	      this.ownerID = ownerID;
	      this.entries = entries;
	    }

	    ArrayMapNode.prototype.get = function(shift, keyHash, key, notSetValue) {
	      var entries = this.entries;
	      for (var ii = 0, len = entries.length; ii < len; ii++) {
	        if (is(key, entries[ii][0])) {
	          return entries[ii][1];
	        }
	      }
	      return notSetValue;
	    };

	    ArrayMapNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {
	      var removed = value === NOT_SET;

	      var entries = this.entries;
	      var idx = 0;
	      for (var len = entries.length; idx < len; idx++) {
	        if (is(key, entries[idx][0])) {
	          break;
	        }
	      }
	      var exists = idx < len;

	      if (exists ? entries[idx][1] === value : removed) {
	        return this;
	      }

	      SetRef(didAlter);
	      (removed || !exists) && SetRef(didChangeSize);

	      if (removed && entries.length === 1) {
	        return; // undefined
	      }

	      if (!exists && !removed && entries.length >= MAX_ARRAY_MAP_SIZE) {
	        return createNodes(ownerID, entries, key, value);
	      }

	      var isEditable = ownerID && ownerID === this.ownerID;
	      var newEntries = isEditable ? entries : arrCopy(entries);

	      if (exists) {
	        if (removed) {
	          idx === len - 1 ? newEntries.pop() : (newEntries[idx] = newEntries.pop());
	        } else {
	          newEntries[idx] = [key, value];
	        }
	      } else {
	        newEntries.push([key, value]);
	      }

	      if (isEditable) {
	        this.entries = newEntries;
	        return this;
	      }

	      return new ArrayMapNode(ownerID, newEntries);
	    };




	    function BitmapIndexedNode(ownerID, bitmap, nodes) {
	      this.ownerID = ownerID;
	      this.bitmap = bitmap;
	      this.nodes = nodes;
	    }

	    BitmapIndexedNode.prototype.get = function(shift, keyHash, key, notSetValue) {
	      if (keyHash === undefined) {
	        keyHash = hash(key);
	      }
	      var bit = (1 << ((shift === 0 ? keyHash : keyHash >>> shift) & MASK));
	      var bitmap = this.bitmap;
	      return (bitmap & bit) === 0 ? notSetValue :
	        this.nodes[popCount(bitmap & (bit - 1))].get(shift + SHIFT, keyHash, key, notSetValue);
	    };

	    BitmapIndexedNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {
	      if (keyHash === undefined) {
	        keyHash = hash(key);
	      }
	      var keyHashFrag = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;
	      var bit = 1 << keyHashFrag;
	      var bitmap = this.bitmap;
	      var exists = (bitmap & bit) !== 0;

	      if (!exists && value === NOT_SET) {
	        return this;
	      }

	      var idx = popCount(bitmap & (bit - 1));
	      var nodes = this.nodes;
	      var node = exists ? nodes[idx] : undefined;
	      var newNode = updateNode(node, ownerID, shift + SHIFT, keyHash, key, value, didChangeSize, didAlter);

	      if (newNode === node) {
	        return this;
	      }

	      if (!exists && newNode && nodes.length >= MAX_BITMAP_INDEXED_SIZE) {
	        return expandNodes(ownerID, nodes, bitmap, keyHashFrag, newNode);
	      }

	      if (exists && !newNode && nodes.length === 2 && isLeafNode(nodes[idx ^ 1])) {
	        return nodes[idx ^ 1];
	      }

	      if (exists && newNode && nodes.length === 1 && isLeafNode(newNode)) {
	        return newNode;
	      }

	      var isEditable = ownerID && ownerID === this.ownerID;
	      var newBitmap = exists ? newNode ? bitmap : bitmap ^ bit : bitmap | bit;
	      var newNodes = exists ? newNode ?
	        setIn(nodes, idx, newNode, isEditable) :
	        spliceOut(nodes, idx, isEditable) :
	        spliceIn(nodes, idx, newNode, isEditable);

	      if (isEditable) {
	        this.bitmap = newBitmap;
	        this.nodes = newNodes;
	        return this;
	      }

	      return new BitmapIndexedNode(ownerID, newBitmap, newNodes);
	    };




	    function HashArrayMapNode(ownerID, count, nodes) {
	      this.ownerID = ownerID;
	      this.count = count;
	      this.nodes = nodes;
	    }

	    HashArrayMapNode.prototype.get = function(shift, keyHash, key, notSetValue) {
	      if (keyHash === undefined) {
	        keyHash = hash(key);
	      }
	      var idx = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;
	      var node = this.nodes[idx];
	      return node ? node.get(shift + SHIFT, keyHash, key, notSetValue) : notSetValue;
	    };

	    HashArrayMapNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {
	      if (keyHash === undefined) {
	        keyHash = hash(key);
	      }
	      var idx = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;
	      var removed = value === NOT_SET;
	      var nodes = this.nodes;
	      var node = nodes[idx];

	      if (removed && !node) {
	        return this;
	      }

	      var newNode = updateNode(node, ownerID, shift + SHIFT, keyHash, key, value, didChangeSize, didAlter);
	      if (newNode === node) {
	        return this;
	      }

	      var newCount = this.count;
	      if (!node) {
	        newCount++;
	      } else if (!newNode) {
	        newCount--;
	        if (newCount < MIN_HASH_ARRAY_MAP_SIZE) {
	          return packNodes(ownerID, nodes, newCount, idx);
	        }
	      }

	      var isEditable = ownerID && ownerID === this.ownerID;
	      var newNodes = setIn(nodes, idx, newNode, isEditable);

	      if (isEditable) {
	        this.count = newCount;
	        this.nodes = newNodes;
	        return this;
	      }

	      return new HashArrayMapNode(ownerID, newCount, newNodes);
	    };




	    function HashCollisionNode(ownerID, keyHash, entries) {
	      this.ownerID = ownerID;
	      this.keyHash = keyHash;
	      this.entries = entries;
	    }

	    HashCollisionNode.prototype.get = function(shift, keyHash, key, notSetValue) {
	      var entries = this.entries;
	      for (var ii = 0, len = entries.length; ii < len; ii++) {
	        if (is(key, entries[ii][0])) {
	          return entries[ii][1];
	        }
	      }
	      return notSetValue;
	    };

	    HashCollisionNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {
	      if (keyHash === undefined) {
	        keyHash = hash(key);
	      }

	      var removed = value === NOT_SET;

	      if (keyHash !== this.keyHash) {
	        if (removed) {
	          return this;
	        }
	        SetRef(didAlter);
	        SetRef(didChangeSize);
	        return mergeIntoNode(this, ownerID, shift, keyHash, [key, value]);
	      }

	      var entries = this.entries;
	      var idx = 0;
	      for (var len = entries.length; idx < len; idx++) {
	        if (is(key, entries[idx][0])) {
	          break;
	        }
	      }
	      var exists = idx < len;

	      if (exists ? entries[idx][1] === value : removed) {
	        return this;
	      }

	      SetRef(didAlter);
	      (removed || !exists) && SetRef(didChangeSize);

	      if (removed && len === 2) {
	        return new ValueNode(ownerID, this.keyHash, entries[idx ^ 1]);
	      }

	      var isEditable = ownerID && ownerID === this.ownerID;
	      var newEntries = isEditable ? entries : arrCopy(entries);

	      if (exists) {
	        if (removed) {
	          idx === len - 1 ? newEntries.pop() : (newEntries[idx] = newEntries.pop());
	        } else {
	          newEntries[idx] = [key, value];
	        }
	      } else {
	        newEntries.push([key, value]);
	      }

	      if (isEditable) {
	        this.entries = newEntries;
	        return this;
	      }

	      return new HashCollisionNode(ownerID, this.keyHash, newEntries);
	    };




	    function ValueNode(ownerID, keyHash, entry) {
	      this.ownerID = ownerID;
	      this.keyHash = keyHash;
	      this.entry = entry;
	    }

	    ValueNode.prototype.get = function(shift, keyHash, key, notSetValue) {
	      return is(key, this.entry[0]) ? this.entry[1] : notSetValue;
	    };

	    ValueNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {
	      var removed = value === NOT_SET;
	      var keyMatch = is(key, this.entry[0]);
	      if (keyMatch ? value === this.entry[1] : removed) {
	        return this;
	      }

	      SetRef(didAlter);

	      if (removed) {
	        SetRef(didChangeSize);
	        return; // undefined
	      }

	      if (keyMatch) {
	        if (ownerID && ownerID === this.ownerID) {
	          this.entry[1] = value;
	          return this;
	        }
	        return new ValueNode(ownerID, this.keyHash, [key, value]);
	      }

	      SetRef(didChangeSize);
	      return mergeIntoNode(this, ownerID, shift, hash(key), [key, value]);
	    };



	  // #pragma Iterators

	  ArrayMapNode.prototype.iterate =
	  HashCollisionNode.prototype.iterate = function (fn, reverse) {
	    var entries = this.entries;
	    for (var ii = 0, maxIndex = entries.length - 1; ii <= maxIndex; ii++) {
	      if (fn(entries[reverse ? maxIndex - ii : ii]) === false) {
	        return false;
	      }
	    }
	  }

	  BitmapIndexedNode.prototype.iterate =
	  HashArrayMapNode.prototype.iterate = function (fn, reverse) {
	    var nodes = this.nodes;
	    for (var ii = 0, maxIndex = nodes.length - 1; ii <= maxIndex; ii++) {
	      var node = nodes[reverse ? maxIndex - ii : ii];
	      if (node && node.iterate(fn, reverse) === false) {
	        return false;
	      }
	    }
	  }

	  ValueNode.prototype.iterate = function (fn, reverse) {
	    return fn(this.entry);
	  }

	  createClass(MapIterator, Iterator);

	    function MapIterator(map, type, reverse) {
	      this._type = type;
	      this._reverse = reverse;
	      this._stack = map._root && mapIteratorFrame(map._root);
	    }

	    MapIterator.prototype.next = function() {
	      var type = this._type;
	      var stack = this._stack;
	      while (stack) {
	        var node = stack.node;
	        var index = stack.index++;
	        var maxIndex;
	        if (node.entry) {
	          if (index === 0) {
	            return mapIteratorValue(type, node.entry);
	          }
	        } else if (node.entries) {
	          maxIndex = node.entries.length - 1;
	          if (index <= maxIndex) {
	            return mapIteratorValue(type, node.entries[this._reverse ? maxIndex - index : index]);
	          }
	        } else {
	          maxIndex = node.nodes.length - 1;
	          if (index <= maxIndex) {
	            var subNode = node.nodes[this._reverse ? maxIndex - index : index];
	            if (subNode) {
	              if (subNode.entry) {
	                return mapIteratorValue(type, subNode.entry);
	              }
	              stack = this._stack = mapIteratorFrame(subNode, stack);
	            }
	            continue;
	          }
	        }
	        stack = this._stack = this._stack.__prev;
	      }
	      return iteratorDone();
	    };


	  function mapIteratorValue(type, entry) {
	    return iteratorValue(type, entry[0], entry[1]);
	  }

	  function mapIteratorFrame(node, prev) {
	    return {
	      node: node,
	      index: 0,
	      __prev: prev
	    };
	  }

	  function makeMap(size, root, ownerID, hash) {
	    var map = Object.create(MapPrototype);
	    map.size = size;
	    map._root = root;
	    map.__ownerID = ownerID;
	    map.__hash = hash;
	    map.__altered = false;
	    return map;
	  }

	  var EMPTY_MAP;
	  function emptyMap() {
	    return EMPTY_MAP || (EMPTY_MAP = makeMap(0));
	  }

	  function updateMap(map, k, v) {
	    var newRoot;
	    var newSize;
	    if (!map._root) {
	      if (v === NOT_SET) {
	        return map;
	      }
	      newSize = 1;
	      newRoot = new ArrayMapNode(map.__ownerID, [[k, v]]);
	    } else {
	      var didChangeSize = MakeRef(CHANGE_LENGTH);
	      var didAlter = MakeRef(DID_ALTER);
	      newRoot = updateNode(map._root, map.__ownerID, 0, undefined, k, v, didChangeSize, didAlter);
	      if (!didAlter.value) {
	        return map;
	      }
	      newSize = map.size + (didChangeSize.value ? v === NOT_SET ? -1 : 1 : 0);
	    }
	    if (map.__ownerID) {
	      map.size = newSize;
	      map._root = newRoot;
	      map.__hash = undefined;
	      map.__altered = true;
	      return map;
	    }
	    return newRoot ? makeMap(newSize, newRoot) : emptyMap();
	  }

	  function updateNode(node, ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {
	    if (!node) {
	      if (value === NOT_SET) {
	        return node;
	      }
	      SetRef(didAlter);
	      SetRef(didChangeSize);
	      return new ValueNode(ownerID, keyHash, [key, value]);
	    }
	    return node.update(ownerID, shift, keyHash, key, value, didChangeSize, didAlter);
	  }

	  function isLeafNode(node) {
	    return node.constructor === ValueNode || node.constructor === HashCollisionNode;
	  }

	  function mergeIntoNode(node, ownerID, shift, keyHash, entry) {
	    if (node.keyHash === keyHash) {
	      return new HashCollisionNode(ownerID, keyHash, [node.entry, entry]);
	    }

	    var idx1 = (shift === 0 ? node.keyHash : node.keyHash >>> shift) & MASK;
	    var idx2 = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;

	    var newNode;
	    var nodes = idx1 === idx2 ?
	      [mergeIntoNode(node, ownerID, shift + SHIFT, keyHash, entry)] :
	      ((newNode = new ValueNode(ownerID, keyHash, entry)), idx1 < idx2 ? [node, newNode] : [newNode, node]);

	    return new BitmapIndexedNode(ownerID, (1 << idx1) | (1 << idx2), nodes);
	  }

	  function createNodes(ownerID, entries, key, value) {
	    if (!ownerID) {
	      ownerID = new OwnerID();
	    }
	    var node = new ValueNode(ownerID, hash(key), [key, value]);
	    for (var ii = 0; ii < entries.length; ii++) {
	      var entry = entries[ii];
	      node = node.update(ownerID, 0, undefined, entry[0], entry[1]);
	    }
	    return node;
	  }

	  function packNodes(ownerID, nodes, count, excluding) {
	    var bitmap = 0;
	    var packedII = 0;
	    var packedNodes = new Array(count);
	    for (var ii = 0, bit = 1, len = nodes.length; ii < len; ii++, bit <<= 1) {
	      var node = nodes[ii];
	      if (node !== undefined && ii !== excluding) {
	        bitmap |= bit;
	        packedNodes[packedII++] = node;
	      }
	    }
	    return new BitmapIndexedNode(ownerID, bitmap, packedNodes);
	  }

	  function expandNodes(ownerID, nodes, bitmap, including, node) {
	    var count = 0;
	    var expandedNodes = new Array(SIZE);
	    for (var ii = 0; bitmap !== 0; ii++, bitmap >>>= 1) {
	      expandedNodes[ii] = bitmap & 1 ? nodes[count++] : undefined;
	    }
	    expandedNodes[including] = node;
	    return new HashArrayMapNode(ownerID, count + 1, expandedNodes);
	  }

	  function mergeIntoMapWith(map, merger, iterables) {
	    var iters = [];
	    for (var ii = 0; ii < iterables.length; ii++) {
	      var value = iterables[ii];
	      var iter = KeyedIterable(value);
	      if (!isIterable(value)) {
	        iter = iter.map(function(v ) {return fromJS(v)});
	      }
	      iters.push(iter);
	    }
	    return mergeIntoCollectionWith(map, merger, iters);
	  }

	  function deepMerger(existing, value, key) {
	    return existing && existing.mergeDeep && isIterable(value) ?
	      existing.mergeDeep(value) :
	      is(existing, value) ? existing : value;
	  }

	  function deepMergerWith(merger) {
	    return function(existing, value, key)  {
	      if (existing && existing.mergeDeepWith && isIterable(value)) {
	        return existing.mergeDeepWith(merger, value);
	      }
	      var nextValue = merger(existing, value, key);
	      return is(existing, nextValue) ? existing : nextValue;
	    };
	  }

	  function mergeIntoCollectionWith(collection, merger, iters) {
	    iters = iters.filter(function(x ) {return x.size !== 0});
	    if (iters.length === 0) {
	      return collection;
	    }
	    if (collection.size === 0 && !collection.__ownerID && iters.length === 1) {
	      return collection.constructor(iters[0]);
	    }
	    return collection.withMutations(function(collection ) {
	      var mergeIntoMap = merger ?
	        function(value, key)  {
	          collection.update(key, NOT_SET, function(existing )
	            {return existing === NOT_SET ? value : merger(existing, value, key)}
	          );
	        } :
	        function(value, key)  {
	          collection.set(key, value);
	        }
	      for (var ii = 0; ii < iters.length; ii++) {
	        iters[ii].forEach(mergeIntoMap);
	      }
	    });
	  }

	  function updateInDeepMap(existing, keyPathIter, notSetValue, updater) {
	    var isNotSet = existing === NOT_SET;
	    var step = keyPathIter.next();
	    if (step.done) {
	      var existingValue = isNotSet ? notSetValue : existing;
	      var newValue = updater(existingValue);
	      return newValue === existingValue ? existing : newValue;
	    }
	    invariant(
	      isNotSet || (existing && existing.set),
	      'invalid keyPath'
	    );
	    var key = step.value;
	    var nextExisting = isNotSet ? NOT_SET : existing.get(key, NOT_SET);
	    var nextUpdated = updateInDeepMap(
	      nextExisting,
	      keyPathIter,
	      notSetValue,
	      updater
	    );
	    return nextUpdated === nextExisting ? existing :
	      nextUpdated === NOT_SET ? existing.remove(key) :
	      (isNotSet ? emptyMap() : existing).set(key, nextUpdated);
	  }

	  function popCount(x) {
	    x = x - ((x >> 1) & 0x55555555);
	    x = (x & 0x33333333) + ((x >> 2) & 0x33333333);
	    x = (x + (x >> 4)) & 0x0f0f0f0f;
	    x = x + (x >> 8);
	    x = x + (x >> 16);
	    return x & 0x7f;
	  }

	  function setIn(array, idx, val, canEdit) {
	    var newArray = canEdit ? array : arrCopy(array);
	    newArray[idx] = val;
	    return newArray;
	  }

	  function spliceIn(array, idx, val, canEdit) {
	    var newLen = array.length + 1;
	    if (canEdit && idx + 1 === newLen) {
	      array[idx] = val;
	      return array;
	    }
	    var newArray = new Array(newLen);
	    var after = 0;
	    for (var ii = 0; ii < newLen; ii++) {
	      if (ii === idx) {
	        newArray[ii] = val;
	        after = -1;
	      } else {
	        newArray[ii] = array[ii + after];
	      }
	    }
	    return newArray;
	  }

	  function spliceOut(array, idx, canEdit) {
	    var newLen = array.length - 1;
	    if (canEdit && idx === newLen) {
	      array.pop();
	      return array;
	    }
	    var newArray = new Array(newLen);
	    var after = 0;
	    for (var ii = 0; ii < newLen; ii++) {
	      if (ii === idx) {
	        after = 1;
	      }
	      newArray[ii] = array[ii + after];
	    }
	    return newArray;
	  }

	  var MAX_ARRAY_MAP_SIZE = SIZE / 4;
	  var MAX_BITMAP_INDEXED_SIZE = SIZE / 2;
	  var MIN_HASH_ARRAY_MAP_SIZE = SIZE / 4;

	  createClass(List, IndexedCollection);

	    // @pragma Construction

	    function List(value) {
	      var empty = emptyList();
	      if (value === null || value === undefined) {
	        return empty;
	      }
	      if (isList(value)) {
	        return value;
	      }
	      var iter = IndexedIterable(value);
	      var size = iter.size;
	      if (size === 0) {
	        return empty;
	      }
	      assertNotInfinite(size);
	      if (size > 0 && size < SIZE) {
	        return makeList(0, size, SHIFT, null, new VNode(iter.toArray()));
	      }
	      return empty.withMutations(function(list ) {
	        list.setSize(size);
	        iter.forEach(function(v, i)  {return list.set(i, v)});
	      });
	    }

	    List.of = function(/*...values*/) {
	      return this(arguments);
	    };

	    List.prototype.toString = function() {
	      return this.__toString('List [', ']');
	    };

	    // @pragma Access

	    List.prototype.get = function(index, notSetValue) {
	      index = wrapIndex(this, index);
	      if (index >= 0 && index < this.size) {
	        index += this._origin;
	        var node = listNodeFor(this, index);
	        return node && node.array[index & MASK];
	      }
	      return notSetValue;
	    };

	    // @pragma Modification

	    List.prototype.set = function(index, value) {
	      return updateList(this, index, value);
	    };

	    List.prototype.remove = function(index) {
	      return !this.has(index) ? this :
	        index === 0 ? this.shift() :
	        index === this.size - 1 ? this.pop() :
	        this.splice(index, 1);
	    };

	    List.prototype.insert = function(index, value) {
	      return this.splice(index, 0, value);
	    };

	    List.prototype.clear = function() {
	      if (this.size === 0) {
	        return this;
	      }
	      if (this.__ownerID) {
	        this.size = this._origin = this._capacity = 0;
	        this._level = SHIFT;
	        this._root = this._tail = null;
	        this.__hash = undefined;
	        this.__altered = true;
	        return this;
	      }
	      return emptyList();
	    };

	    List.prototype.push = function(/*...values*/) {
	      var values = arguments;
	      var oldSize = this.size;
	      return this.withMutations(function(list ) {
	        setListBounds(list, 0, oldSize + values.length);
	        for (var ii = 0; ii < values.length; ii++) {
	          list.set(oldSize + ii, values[ii]);
	        }
	      });
	    };

	    List.prototype.pop = function() {
	      return setListBounds(this, 0, -1);
	    };

	    List.prototype.unshift = function(/*...values*/) {
	      var values = arguments;
	      return this.withMutations(function(list ) {
	        setListBounds(list, -values.length);
	        for (var ii = 0; ii < values.length; ii++) {
	          list.set(ii, values[ii]);
	        }
	      });
	    };

	    List.prototype.shift = function() {
	      return setListBounds(this, 1);
	    };

	    // @pragma Composition

	    List.prototype.merge = function(/*...iters*/) {
	      return mergeIntoListWith(this, undefined, arguments);
	    };

	    List.prototype.mergeWith = function(merger) {var iters = SLICE$0.call(arguments, 1);
	      return mergeIntoListWith(this, merger, iters);
	    };

	    List.prototype.mergeDeep = function(/*...iters*/) {
	      return mergeIntoListWith(this, deepMerger, arguments);
	    };

	    List.prototype.mergeDeepWith = function(merger) {var iters = SLICE$0.call(arguments, 1);
	      return mergeIntoListWith(this, deepMergerWith(merger), iters);
	    };

	    List.prototype.setSize = function(size) {
	      return setListBounds(this, 0, size);
	    };

	    // @pragma Iteration

	    List.prototype.slice = function(begin, end) {
	      var size = this.size;
	      if (wholeSlice(begin, end, size)) {
	        return this;
	      }
	      return setListBounds(
	        this,
	        resolveBegin(begin, size),
	        resolveEnd(end, size)
	      );
	    };

	    List.prototype.__iterator = function(type, reverse) {
	      var index = 0;
	      var values = iterateList(this, reverse);
	      return new Iterator(function()  {
	        var value = values();
	        return value === DONE ?
	          iteratorDone() :
	          iteratorValue(type, index++, value);
	      });
	    };

	    List.prototype.__iterate = function(fn, reverse) {
	      var index = 0;
	      var values = iterateList(this, reverse);
	      var value;
	      while ((value = values()) !== DONE) {
	        if (fn(value, index++, this) === false) {
	          break;
	        }
	      }
	      return index;
	    };

	    List.prototype.__ensureOwner = function(ownerID) {
	      if (ownerID === this.__ownerID) {
	        return this;
	      }
	      if (!ownerID) {
	        this.__ownerID = ownerID;
	        return this;
	      }
	      return makeList(this._origin, this._capacity, this._level, this._root, this._tail, ownerID, this.__hash);
	    };


	  function isList(maybeList) {
	    return !!(maybeList && maybeList[IS_LIST_SENTINEL]);
	  }

	  List.isList = isList;

	  var IS_LIST_SENTINEL = '@@__IMMUTABLE_LIST__@@';

	  var ListPrototype = List.prototype;
	  ListPrototype[IS_LIST_SENTINEL] = true;
	  ListPrototype[DELETE] = ListPrototype.remove;
	  ListPrototype.setIn = MapPrototype.setIn;
	  ListPrototype.deleteIn =
	  ListPrototype.removeIn = MapPrototype.removeIn;
	  ListPrototype.update = MapPrototype.update;
	  ListPrototype.updateIn = MapPrototype.updateIn;
	  ListPrototype.mergeIn = MapPrototype.mergeIn;
	  ListPrototype.mergeDeepIn = MapPrototype.mergeDeepIn;
	  ListPrototype.withMutations = MapPrototype.withMutations;
	  ListPrototype.asMutable = MapPrototype.asMutable;
	  ListPrototype.asImmutable = MapPrototype.asImmutable;
	  ListPrototype.wasAltered = MapPrototype.wasAltered;



	    function VNode(array, ownerID) {
	      this.array = array;
	      this.ownerID = ownerID;
	    }

	    // TODO: seems like these methods are very similar

	    VNode.prototype.removeBefore = function(ownerID, level, index) {
	      if (index === level ? 1 << level : 0 || this.array.length === 0) {
	        return this;
	      }
	      var originIndex = (index >>> level) & MASK;
	      if (originIndex >= this.array.length) {
	        return new VNode([], ownerID);
	      }
	      var removingFirst = originIndex === 0;
	      var newChild;
	      if (level > 0) {
	        var oldChild = this.array[originIndex];
	        newChild = oldChild && oldChild.removeBefore(ownerID, level - SHIFT, index);
	        if (newChild === oldChild && removingFirst) {
	          return this;
	        }
	      }
	      if (removingFirst && !newChild) {
	        return this;
	      }
	      var editable = editableVNode(this, ownerID);
	      if (!removingFirst) {
	        for (var ii = 0; ii < originIndex; ii++) {
	          editable.array[ii] = undefined;
	        }
	      }
	      if (newChild) {
	        editable.array[originIndex] = newChild;
	      }
	      return editable;
	    };

	    VNode.prototype.removeAfter = function(ownerID, level, index) {
	      if (index === (level ? 1 << level : 0) || this.array.length === 0) {
	        return this;
	      }
	      var sizeIndex = ((index - 1) >>> level) & MASK;
	      if (sizeIndex >= this.array.length) {
	        return this;
	      }

	      var newChild;
	      if (level > 0) {
	        var oldChild = this.array[sizeIndex];
	        newChild = oldChild && oldChild.removeAfter(ownerID, level - SHIFT, index);
	        if (newChild === oldChild && sizeIndex === this.array.length - 1) {
	          return this;
	        }
	      }

	      var editable = editableVNode(this, ownerID);
	      editable.array.splice(sizeIndex + 1);
	      if (newChild) {
	        editable.array[sizeIndex] = newChild;
	      }
	      return editable;
	    };



	  var DONE = {};

	  function iterateList(list, reverse) {
	    var left = list._origin;
	    var right = list._capacity;
	    var tailPos = getTailOffset(right);
	    var tail = list._tail;

	    return iterateNodeOrLeaf(list._root, list._level, 0);

	    function iterateNodeOrLeaf(node, level, offset) {
	      return level === 0 ?
	        iterateLeaf(node, offset) :
	        iterateNode(node, level, offset);
	    }

	    function iterateLeaf(node, offset) {
	      var array = offset === tailPos ? tail && tail.array : node && node.array;
	      var from = offset > left ? 0 : left - offset;
	      var to = right - offset;
	      if (to > SIZE) {
	        to = SIZE;
	      }
	      return function()  {
	        if (from === to) {
	          return DONE;
	        }
	        var idx = reverse ? --to : from++;
	        return array && array[idx];
	      };
	    }

	    function iterateNode(node, level, offset) {
	      var values;
	      var array = node && node.array;
	      var from = offset > left ? 0 : (left - offset) >> level;
	      var to = ((right - offset) >> level) + 1;
	      if (to > SIZE) {
	        to = SIZE;
	      }
	      return function()  {
	        do {
	          if (values) {
	            var value = values();
	            if (value !== DONE) {
	              return value;
	            }
	            values = null;
	          }
	          if (from === to) {
	            return DONE;
	          }
	          var idx = reverse ? --to : from++;
	          values = iterateNodeOrLeaf(
	            array && array[idx], level - SHIFT, offset + (idx << level)
	          );
	        } while (true);
	      };
	    }
	  }

	  function makeList(origin, capacity, level, root, tail, ownerID, hash) {
	    var list = Object.create(ListPrototype);
	    list.size = capacity - origin;
	    list._origin = origin;
	    list._capacity = capacity;
	    list._level = level;
	    list._root = root;
	    list._tail = tail;
	    list.__ownerID = ownerID;
	    list.__hash = hash;
	    list.__altered = false;
	    return list;
	  }

	  var EMPTY_LIST;
	  function emptyList() {
	    return EMPTY_LIST || (EMPTY_LIST = makeList(0, 0, SHIFT));
	  }

	  function updateList(list, index, value) {
	    index = wrapIndex(list, index);

	    if (index !== index) {
	      return list;
	    }

	    if (index >= list.size || index < 0) {
	      return list.withMutations(function(list ) {
	        index < 0 ?
	          setListBounds(list, index).set(0, value) :
	          setListBounds(list, 0, index + 1).set(index, value)
	      });
	    }

	    index += list._origin;

	    var newTail = list._tail;
	    var newRoot = list._root;
	    var didAlter = MakeRef(DID_ALTER);
	    if (index >= getTailOffset(list._capacity)) {
	      newTail = updateVNode(newTail, list.__ownerID, 0, index, value, didAlter);
	    } else {
	      newRoot = updateVNode(newRoot, list.__ownerID, list._level, index, value, didAlter);
	    }

	    if (!didAlter.value) {
	      return list;
	    }

	    if (list.__ownerID) {
	      list._root = newRoot;
	      list._tail = newTail;
	      list.__hash = undefined;
	      list.__altered = true;
	      return list;
	    }
	    return makeList(list._origin, list._capacity, list._level, newRoot, newTail);
	  }

	  function updateVNode(node, ownerID, level, index, value, didAlter) {
	    var idx = (index >>> level) & MASK;
	    var nodeHas = node && idx < node.array.length;
	    if (!nodeHas && value === undefined) {
	      return node;
	    }

	    var newNode;

	    if (level > 0) {
	      var lowerNode = node && node.array[idx];
	      var newLowerNode = updateVNode(lowerNode, ownerID, level - SHIFT, index, value, didAlter);
	      if (newLowerNode === lowerNode) {
	        return node;
	      }
	      newNode = editableVNode(node, ownerID);
	      newNode.array[idx] = newLowerNode;
	      return newNode;
	    }

	    if (nodeHas && node.array[idx] === value) {
	      return node;
	    }

	    SetRef(didAlter);

	    newNode = editableVNode(node, ownerID);
	    if (value === undefined && idx === newNode.array.length - 1) {
	      newNode.array.pop();
	    } else {
	      newNode.array[idx] = value;
	    }
	    return newNode;
	  }

	  function editableVNode(node, ownerID) {
	    if (ownerID && node && ownerID === node.ownerID) {
	      return node;
	    }
	    return new VNode(node ? node.array.slice() : [], ownerID);
	  }

	  function listNodeFor(list, rawIndex) {
	    if (rawIndex >= getTailOffset(list._capacity)) {
	      return list._tail;
	    }
	    if (rawIndex < 1 << (list._level + SHIFT)) {
	      var node = list._root;
	      var level = list._level;
	      while (node && level > 0) {
	        node = node.array[(rawIndex >>> level) & MASK];
	        level -= SHIFT;
	      }
	      return node;
	    }
	  }

	  function setListBounds(list, begin, end) {
	    // Sanitize begin & end using this shorthand for ToInt32(argument)
	    // http://www.ecma-international.org/ecma-262/6.0/#sec-toint32
	    if (begin !== undefined) {
	      begin = begin | 0;
	    }
	    if (end !== undefined) {
	      end = end | 0;
	    }
	    var owner = list.__ownerID || new OwnerID();
	    var oldOrigin = list._origin;
	    var oldCapacity = list._capacity;
	    var newOrigin = oldOrigin + begin;
	    var newCapacity = end === undefined ? oldCapacity : end < 0 ? oldCapacity + end : oldOrigin + end;
	    if (newOrigin === oldOrigin && newCapacity === oldCapacity) {
	      return list;
	    }

	    // If it's going to end after it starts, it's empty.
	    if (newOrigin >= newCapacity) {
	      return list.clear();
	    }

	    var newLevel = list._level;
	    var newRoot = list._root;

	    // New origin might need creating a higher root.
	    var offsetShift = 0;
	    while (newOrigin + offsetShift < 0) {
	      newRoot = new VNode(newRoot && newRoot.array.length ? [undefined, newRoot] : [], owner);
	      newLevel += SHIFT;
	      offsetShift += 1 << newLevel;
	    }
	    if (offsetShift) {
	      newOrigin += offsetShift;
	      oldOrigin += offsetShift;
	      newCapacity += offsetShift;
	      oldCapacity += offsetShift;
	    }

	    var oldTailOffset = getTailOffset(oldCapacity);
	    var newTailOffset = getTailOffset(newCapacity);

	    // New size might need creating a higher root.
	    while (newTailOffset >= 1 << (newLevel + SHIFT)) {
	      newRoot = new VNode(newRoot && newRoot.array.length ? [newRoot] : [], owner);
	      newLevel += SHIFT;
	    }

	    // Locate or create the new tail.
	    var oldTail = list._tail;
	    var newTail = newTailOffset < oldTailOffset ?
	      listNodeFor(list, newCapacity - 1) :
	      newTailOffset > oldTailOffset ? new VNode([], owner) : oldTail;

	    // Merge Tail into tree.
	    if (oldTail && newTailOffset > oldTailOffset && newOrigin < oldCapacity && oldTail.array.length) {
	      newRoot = editableVNode(newRoot, owner);
	      var node = newRoot;
	      for (var level = newLevel; level > SHIFT; level -= SHIFT) {
	        var idx = (oldTailOffset >>> level) & MASK;
	        node = node.array[idx] = editableVNode(node.array[idx], owner);
	      }
	      node.array[(oldTailOffset >>> SHIFT) & MASK] = oldTail;
	    }

	    // If the size has been reduced, there's a chance the tail needs to be trimmed.
	    if (newCapacity < oldCapacity) {
	      newTail = newTail && newTail.removeAfter(owner, 0, newCapacity);
	    }

	    // If the new origin is within the tail, then we do not need a root.
	    if (newOrigin >= newTailOffset) {
	      newOrigin -= newTailOffset;
	      newCapacity -= newTailOffset;
	      newLevel = SHIFT;
	      newRoot = null;
	      newTail = newTail && newTail.removeBefore(owner, 0, newOrigin);

	    // Otherwise, if the root has been trimmed, garbage collect.
	    } else if (newOrigin > oldOrigin || newTailOffset < oldTailOffset) {
	      offsetShift = 0;

	      // Identify the new top root node of the subtree of the old root.
	      while (newRoot) {
	        var beginIndex = (newOrigin >>> newLevel) & MASK;
	        if (beginIndex !== (newTailOffset >>> newLevel) & MASK) {
	          break;
	        }
	        if (beginIndex) {
	          offsetShift += (1 << newLevel) * beginIndex;
	        }
	        newLevel -= SHIFT;
	        newRoot = newRoot.array[beginIndex];
	      }

	      // Trim the new sides of the new root.
	      if (newRoot && newOrigin > oldOrigin) {
	        newRoot = newRoot.removeBefore(owner, newLevel, newOrigin - offsetShift);
	      }
	      if (newRoot && newTailOffset < oldTailOffset) {
	        newRoot = newRoot.removeAfter(owner, newLevel, newTailOffset - offsetShift);
	      }
	      if (offsetShift) {
	        newOrigin -= offsetShift;
	        newCapacity -= offsetShift;
	      }
	    }

	    if (list.__ownerID) {
	      list.size = newCapacity - newOrigin;
	      list._origin = newOrigin;
	      list._capacity = newCapacity;
	      list._level = newLevel;
	      list._root = newRoot;
	      list._tail = newTail;
	      list.__hash = undefined;
	      list.__altered = true;
	      return list;
	    }
	    return makeList(newOrigin, newCapacity, newLevel, newRoot, newTail);
	  }

	  function mergeIntoListWith(list, merger, iterables) {
	    var iters = [];
	    var maxSize = 0;
	    for (var ii = 0; ii < iterables.length; ii++) {
	      var value = iterables[ii];
	      var iter = IndexedIterable(value);
	      if (iter.size > maxSize) {
	        maxSize = iter.size;
	      }
	      if (!isIterable(value)) {
	        iter = iter.map(function(v ) {return fromJS(v)});
	      }
	      iters.push(iter);
	    }
	    if (maxSize > list.size) {
	      list = list.setSize(maxSize);
	    }
	    return mergeIntoCollectionWith(list, merger, iters);
	  }

	  function getTailOffset(size) {
	    return size < SIZE ? 0 : (((size - 1) >>> SHIFT) << SHIFT);
	  }

	  createClass(OrderedMap, Map);

	    // @pragma Construction

	    function OrderedMap(value) {
	      return value === null || value === undefined ? emptyOrderedMap() :
	        isOrderedMap(value) ? value :
	        emptyOrderedMap().withMutations(function(map ) {
	          var iter = KeyedIterable(value);
	          assertNotInfinite(iter.size);
	          iter.forEach(function(v, k)  {return map.set(k, v)});
	        });
	    }

	    OrderedMap.of = function(/*...values*/) {
	      return this(arguments);
	    };

	    OrderedMap.prototype.toString = function() {
	      return this.__toString('OrderedMap {', '}');
	    };

	    // @pragma Access

	    OrderedMap.prototype.get = function(k, notSetValue) {
	      var index = this._map.get(k);
	      return index !== undefined ? this._list.get(index)[1] : notSetValue;
	    };

	    // @pragma Modification

	    OrderedMap.prototype.clear = function() {
	      if (this.size === 0) {
	        return this;
	      }
	      if (this.__ownerID) {
	        this.size = 0;
	        this._map.clear();
	        this._list.clear();
	        return this;
	      }
	      return emptyOrderedMap();
	    };

	    OrderedMap.prototype.set = function(k, v) {
	      return updateOrderedMap(this, k, v);
	    };

	    OrderedMap.prototype.remove = function(k) {
	      return updateOrderedMap(this, k, NOT_SET);
	    };

	    OrderedMap.prototype.wasAltered = function() {
	      return this._map.wasAltered() || this._list.wasAltered();
	    };

	    OrderedMap.prototype.__iterate = function(fn, reverse) {var this$0 = this;
	      return this._list.__iterate(
	        function(entry ) {return entry && fn(entry[1], entry[0], this$0)},
	        reverse
	      );
	    };

	    OrderedMap.prototype.__iterator = function(type, reverse) {
	      return this._list.fromEntrySeq().__iterator(type, reverse);
	    };

	    OrderedMap.prototype.__ensureOwner = function(ownerID) {
	      if (ownerID === this.__ownerID) {
	        return this;
	      }
	      var newMap = this._map.__ensureOwner(ownerID);
	      var newList = this._list.__ensureOwner(ownerID);
	      if (!ownerID) {
	        this.__ownerID = ownerID;
	        this._map = newMap;
	        this._list = newList;
	        return this;
	      }
	      return makeOrderedMap(newMap, newList, ownerID, this.__hash);
	    };


	  function isOrderedMap(maybeOrderedMap) {
	    return isMap(maybeOrderedMap) && isOrdered(maybeOrderedMap);
	  }

	  OrderedMap.isOrderedMap = isOrderedMap;

	  OrderedMap.prototype[IS_ORDERED_SENTINEL] = true;
	  OrderedMap.prototype[DELETE] = OrderedMap.prototype.remove;



	  function makeOrderedMap(map, list, ownerID, hash) {
	    var omap = Object.create(OrderedMap.prototype);
	    omap.size = map ? map.size : 0;
	    omap._map = map;
	    omap._list = list;
	    omap.__ownerID = ownerID;
	    omap.__hash = hash;
	    return omap;
	  }

	  var EMPTY_ORDERED_MAP;
	  function emptyOrderedMap() {
	    return EMPTY_ORDERED_MAP || (EMPTY_ORDERED_MAP = makeOrderedMap(emptyMap(), emptyList()));
	  }

	  function updateOrderedMap(omap, k, v) {
	    var map = omap._map;
	    var list = omap._list;
	    var i = map.get(k);
	    var has = i !== undefined;
	    var newMap;
	    var newList;
	    if (v === NOT_SET) { // removed
	      if (!has) {
	        return omap;
	      }
	      if (list.size >= SIZE && list.size >= map.size * 2) {
	        newList = list.filter(function(entry, idx)  {return entry !== undefined && i !== idx});
	        newMap = newList.toKeyedSeq().map(function(entry ) {return entry[0]}).flip().toMap();
	        if (omap.__ownerID) {
	          newMap.__ownerID = newList.__ownerID = omap.__ownerID;
	        }
	      } else {
	        newMap = map.remove(k);
	        newList = i === list.size - 1 ? list.pop() : list.set(i, undefined);
	      }
	    } else {
	      if (has) {
	        if (v === list.get(i)[1]) {
	          return omap;
	        }
	        newMap = map;
	        newList = list.set(i, [k, v]);
	      } else {
	        newMap = map.set(k, list.size);
	        newList = list.set(list.size, [k, v]);
	      }
	    }
	    if (omap.__ownerID) {
	      omap.size = newMap.size;
	      omap._map = newMap;
	      omap._list = newList;
	      omap.__hash = undefined;
	      return omap;
	    }
	    return makeOrderedMap(newMap, newList);
	  }

	  createClass(ToKeyedSequence, KeyedSeq);
	    function ToKeyedSequence(indexed, useKeys) {
	      this._iter = indexed;
	      this._useKeys = useKeys;
	      this.size = indexed.size;
	    }

	    ToKeyedSequence.prototype.get = function(key, notSetValue) {
	      return this._iter.get(key, notSetValue);
	    };

	    ToKeyedSequence.prototype.has = function(key) {
	      return this._iter.has(key);
	    };

	    ToKeyedSequence.prototype.valueSeq = function() {
	      return this._iter.valueSeq();
	    };

	    ToKeyedSequence.prototype.reverse = function() {var this$0 = this;
	      var reversedSequence = reverseFactory(this, true);
	      if (!this._useKeys) {
	        reversedSequence.valueSeq = function()  {return this$0._iter.toSeq().reverse()};
	      }
	      return reversedSequence;
	    };

	    ToKeyedSequence.prototype.map = function(mapper, context) {var this$0 = this;
	      var mappedSequence = mapFactory(this, mapper, context);
	      if (!this._useKeys) {
	        mappedSequence.valueSeq = function()  {return this$0._iter.toSeq().map(mapper, context)};
	      }
	      return mappedSequence;
	    };

	    ToKeyedSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;
	      var ii;
	      return this._iter.__iterate(
	        this._useKeys ?
	          function(v, k)  {return fn(v, k, this$0)} :
	          ((ii = reverse ? resolveSize(this) : 0),
	            function(v ) {return fn(v, reverse ? --ii : ii++, this$0)}),
	        reverse
	      );
	    };

	    ToKeyedSequence.prototype.__iterator = function(type, reverse) {
	      if (this._useKeys) {
	        return this._iter.__iterator(type, reverse);
	      }
	      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);
	      var ii = reverse ? resolveSize(this) : 0;
	      return new Iterator(function()  {
	        var step = iterator.next();
	        return step.done ? step :
	          iteratorValue(type, reverse ? --ii : ii++, step.value, step);
	      });
	    };

	  ToKeyedSequence.prototype[IS_ORDERED_SENTINEL] = true;


	  createClass(ToIndexedSequence, IndexedSeq);
	    function ToIndexedSequence(iter) {
	      this._iter = iter;
	      this.size = iter.size;
	    }

	    ToIndexedSequence.prototype.includes = function(value) {
	      return this._iter.includes(value);
	    };

	    ToIndexedSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;
	      var iterations = 0;
	      return this._iter.__iterate(function(v ) {return fn(v, iterations++, this$0)}, reverse);
	    };

	    ToIndexedSequence.prototype.__iterator = function(type, reverse) {
	      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);
	      var iterations = 0;
	      return new Iterator(function()  {
	        var step = iterator.next();
	        return step.done ? step :
	          iteratorValue(type, iterations++, step.value, step)
	      });
	    };



	  createClass(ToSetSequence, SetSeq);
	    function ToSetSequence(iter) {
	      this._iter = iter;
	      this.size = iter.size;
	    }

	    ToSetSequence.prototype.has = function(key) {
	      return this._iter.includes(key);
	    };

	    ToSetSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;
	      return this._iter.__iterate(function(v ) {return fn(v, v, this$0)}, reverse);
	    };

	    ToSetSequence.prototype.__iterator = function(type, reverse) {
	      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);
	      return new Iterator(function()  {
	        var step = iterator.next();
	        return step.done ? step :
	          iteratorValue(type, step.value, step.value, step);
	      });
	    };



	  createClass(FromEntriesSequence, KeyedSeq);
	    function FromEntriesSequence(entries) {
	      this._iter = entries;
	      this.size = entries.size;
	    }

	    FromEntriesSequence.prototype.entrySeq = function() {
	      return this._iter.toSeq();
	    };

	    FromEntriesSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;
	      return this._iter.__iterate(function(entry ) {
	        // Check if entry exists first so array access doesn't throw for holes
	        // in the parent iteration.
	        if (entry) {
	          validateEntry(entry);
	          var indexedIterable = isIterable(entry);
	          return fn(
	            indexedIterable ? entry.get(1) : entry[1],
	            indexedIterable ? entry.get(0) : entry[0],
	            this$0
	          );
	        }
	      }, reverse);
	    };

	    FromEntriesSequence.prototype.__iterator = function(type, reverse) {
	      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);
	      return new Iterator(function()  {
	        while (true) {
	          var step = iterator.next();
	          if (step.done) {
	            return step;
	          }
	          var entry = step.value;
	          // Check if entry exists first so array access doesn't throw for holes
	          // in the parent iteration.
	          if (entry) {
	            validateEntry(entry);
	            var indexedIterable = isIterable(entry);
	            return iteratorValue(
	              type,
	              indexedIterable ? entry.get(0) : entry[0],
	              indexedIterable ? entry.get(1) : entry[1],
	              step
	            );
	          }
	        }
	      });
	    };


	  ToIndexedSequence.prototype.cacheResult =
	  ToKeyedSequence.prototype.cacheResult =
	  ToSetSequence.prototype.cacheResult =
	  FromEntriesSequence.prototype.cacheResult =
	    cacheResultThrough;


	  function flipFactory(iterable) {
	    var flipSequence = makeSequence(iterable);
	    flipSequence._iter = iterable;
	    flipSequence.size = iterable.size;
	    flipSequence.flip = function()  {return iterable};
	    flipSequence.reverse = function () {
	      var reversedSequence = iterable.reverse.apply(this); // super.reverse()
	      reversedSequence.flip = function()  {return iterable.reverse()};
	      return reversedSequence;
	    };
	    flipSequence.has = function(key ) {return iterable.includes(key)};
	    flipSequence.includes = function(key ) {return iterable.has(key)};
	    flipSequence.cacheResult = cacheResultThrough;
	    flipSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;
	      return iterable.__iterate(function(v, k)  {return fn(k, v, this$0) !== false}, reverse);
	    }
	    flipSequence.__iteratorUncached = function(type, reverse) {
	      if (type === ITERATE_ENTRIES) {
	        var iterator = iterable.__iterator(type, reverse);
	        return new Iterator(function()  {
	          var step = iterator.next();
	          if (!step.done) {
	            var k = step.value[0];
	            step.value[0] = step.value[1];
	            step.value[1] = k;
	          }
	          return step;
	        });
	      }
	      return iterable.__iterator(
	        type === ITERATE_VALUES ? ITERATE_KEYS : ITERATE_VALUES,
	        reverse
	      );
	    }
	    return flipSequence;
	  }


	  function mapFactory(iterable, mapper, context) {
	    var mappedSequence = makeSequence(iterable);
	    mappedSequence.size = iterable.size;
	    mappedSequence.has = function(key ) {return iterable.has(key)};
	    mappedSequence.get = function(key, notSetValue)  {
	      var v = iterable.get(key, NOT_SET);
	      return v === NOT_SET ?
	        notSetValue :
	        mapper.call(context, v, key, iterable);
	    };
	    mappedSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;
	      return iterable.__iterate(
	        function(v, k, c)  {return fn(mapper.call(context, v, k, c), k, this$0) !== false},
	        reverse
	      );
	    }
	    mappedSequence.__iteratorUncached = function (type, reverse) {
	      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);
	      return new Iterator(function()  {
	        var step = iterator.next();
	        if (step.done) {
	          return step;
	        }
	        var entry = step.value;
	        var key = entry[0];
	        return iteratorValue(
	          type,
	          key,
	          mapper.call(context, entry[1], key, iterable),
	          step
	        );
	      });
	    }
	    return mappedSequence;
	  }


	  function reverseFactory(iterable, useKeys) {
	    var reversedSequence = makeSequence(iterable);
	    reversedSequence._iter = iterable;
	    reversedSequence.size = iterable.size;
	    reversedSequence.reverse = function()  {return iterable};
	    if (iterable.flip) {
	      reversedSequence.flip = function () {
	        var flipSequence = flipFactory(iterable);
	        flipSequence.reverse = function()  {return iterable.flip()};
	        return flipSequence;
	      };
	    }
	    reversedSequence.get = function(key, notSetValue) 
	      {return iterable.get(useKeys ? key : -1 - key, notSetValue)};
	    reversedSequence.has = function(key )
	      {return iterable.has(useKeys ? key : -1 - key)};
	    reversedSequence.includes = function(value ) {return iterable.includes(value)};
	    reversedSequence.cacheResult = cacheResultThrough;
	    reversedSequence.__iterate = function (fn, reverse) {var this$0 = this;
	      return iterable.__iterate(function(v, k)  {return fn(v, k, this$0)}, !reverse);
	    };
	    reversedSequence.__iterator =
	      function(type, reverse)  {return iterable.__iterator(type, !reverse)};
	    return reversedSequence;
	  }


	  function filterFactory(iterable, predicate, context, useKeys) {
	    var filterSequence = makeSequence(iterable);
	    if (useKeys) {
	      filterSequence.has = function(key ) {
	        var v = iterable.get(key, NOT_SET);
	        return v !== NOT_SET && !!predicate.call(context, v, key, iterable);
	      };
	      filterSequence.get = function(key, notSetValue)  {
	        var v = iterable.get(key, NOT_SET);
	        return v !== NOT_SET && predicate.call(context, v, key, iterable) ?
	          v : notSetValue;
	      };
	    }
	    filterSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;
	      var iterations = 0;
	      iterable.__iterate(function(v, k, c)  {
	        if (predicate.call(context, v, k, c)) {
	          iterations++;
	          return fn(v, useKeys ? k : iterations - 1, this$0);
	        }
	      }, reverse);
	      return iterations;
	    };
	    filterSequence.__iteratorUncached = function (type, reverse) {
	      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);
	      var iterations = 0;
	      return new Iterator(function()  {
	        while (true) {
	          var step = iterator.next();
	          if (step.done) {
	            return step;
	          }
	          var entry = step.value;
	          var key = entry[0];
	          var value = entry[1];
	          if (predicate.call(context, value, key, iterable)) {
	            return iteratorValue(type, useKeys ? key : iterations++, value, step);
	          }
	        }
	      });
	    }
	    return filterSequence;
	  }


	  function countByFactory(iterable, grouper, context) {
	    var groups = Map().asMutable();
	    iterable.__iterate(function(v, k)  {
	      groups.update(
	        grouper.call(context, v, k, iterable),
	        0,
	        function(a ) {return a + 1}
	      );
	    });
	    return groups.asImmutable();
	  }


	  function groupByFactory(iterable, grouper, context) {
	    var isKeyedIter = isKeyed(iterable);
	    var groups = (isOrdered(iterable) ? OrderedMap() : Map()).asMutable();
	    iterable.__iterate(function(v, k)  {
	      groups.update(
	        grouper.call(context, v, k, iterable),
	        function(a ) {return (a = a || [], a.push(isKeyedIter ? [k, v] : v), a)}
	      );
	    });
	    var coerce = iterableClass(iterable);
	    return groups.map(function(arr ) {return reify(iterable, coerce(arr))});
	  }


	  function sliceFactory(iterable, begin, end, useKeys) {
	    var originalSize = iterable.size;

	    // Sanitize begin & end using this shorthand for ToInt32(argument)
	    // http://www.ecma-international.org/ecma-262/6.0/#sec-toint32
	    if (begin !== undefined) {
	      begin = begin | 0;
	    }
	    if (end !== undefined) {
	      if (end === Infinity) {
	        end = originalSize;
	      } else {
	        end = end | 0;
	      }
	    }

	    if (wholeSlice(begin, end, originalSize)) {
	      return iterable;
	    }

	    var resolvedBegin = resolveBegin(begin, originalSize);
	    var resolvedEnd = resolveEnd(end, originalSize);

	    // begin or end will be NaN if they were provided as negative numbers and
	    // this iterable's size is unknown. In that case, cache first so there is
	    // a known size and these do not resolve to NaN.
	    if (resolvedBegin !== resolvedBegin || resolvedEnd !== resolvedEnd) {
	      return sliceFactory(iterable.toSeq().cacheResult(), begin, end, useKeys);
	    }

	    // Note: resolvedEnd is undefined when the original sequence's length is
	    // unknown and this slice did not supply an end and should contain all
	    // elements after resolvedBegin.
	    // In that case, resolvedSize will be NaN and sliceSize will remain undefined.
	    var resolvedSize = resolvedEnd - resolvedBegin;
	    var sliceSize;
	    if (resolvedSize === resolvedSize) {
	      sliceSize = resolvedSize < 0 ? 0 : resolvedSize;
	    }

	    var sliceSeq = makeSequence(iterable);

	    // If iterable.size is undefined, the size of the realized sliceSeq is
	    // unknown at this point unless the number of items to slice is 0
	    sliceSeq.size = sliceSize === 0 ? sliceSize : iterable.size && sliceSize || undefined;

	    if (!useKeys && isSeq(iterable) && sliceSize >= 0) {
	      sliceSeq.get = function (index, notSetValue) {
	        index = wrapIndex(this, index);
	        return index >= 0 && index < sliceSize ?
	          iterable.get(index + resolvedBegin, notSetValue) :
	          notSetValue;
	      }
	    }

	    sliceSeq.__iterateUncached = function(fn, reverse) {var this$0 = this;
	      if (sliceSize === 0) {
	        return 0;
	      }
	      if (reverse) {
	        return this.cacheResult().__iterate(fn, reverse);
	      }
	      var skipped = 0;
	      var isSkipping = true;
	      var iterations = 0;
	      iterable.__iterate(function(v, k)  {
	        if (!(isSkipping && (isSkipping = skipped++ < resolvedBegin))) {
	          iterations++;
	          return fn(v, useKeys ? k : iterations - 1, this$0) !== false &&
	                 iterations !== sliceSize;
	        }
	      });
	      return iterations;
	    };

	    sliceSeq.__iteratorUncached = function(type, reverse) {
	      if (sliceSize !== 0 && reverse) {
	        return this.cacheResult().__iterator(type, reverse);
	      }
	      // Don't bother instantiating parent iterator if taking 0.
	      var iterator = sliceSize !== 0 && iterable.__iterator(type, reverse);
	      var skipped = 0;
	      var iterations = 0;
	      return new Iterator(function()  {
	        while (skipped++ < resolvedBegin) {
	          iterator.next();
	        }
	        if (++iterations > sliceSize) {
	          return iteratorDone();
	        }
	        var step = iterator.next();
	        if (useKeys || type === ITERATE_VALUES) {
	          return step;
	        } else if (type === ITERATE_KEYS) {
	          return iteratorValue(type, iterations - 1, undefined, step);
	        } else {
	          return iteratorValue(type, iterations - 1, step.value[1], step);
	        }
	      });
	    }

	    return sliceSeq;
	  }


	  function takeWhileFactory(iterable, predicate, context) {
	    var takeSequence = makeSequence(iterable);
	    takeSequence.__iterateUncached = function(fn, reverse) {var this$0 = this;
	      if (reverse) {
	        return this.cacheResult().__iterate(fn, reverse);
	      }
	      var iterations = 0;
	      iterable.__iterate(function(v, k, c) 
	        {return predicate.call(context, v, k, c) && ++iterations && fn(v, k, this$0)}
	      );
	      return iterations;
	    };
	    takeSequence.__iteratorUncached = function(type, reverse) {var this$0 = this;
	      if (reverse) {
	        return this.cacheResult().__iterator(type, reverse);
	      }
	      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);
	      var iterating = true;
	      return new Iterator(function()  {
	        if (!iterating) {
	          return iteratorDone();
	        }
	        var step = iterator.next();
	        if (step.done) {
	          return step;
	        }
	        var entry = step.value;
	        var k = entry[0];
	        var v = entry[1];
	        if (!predicate.call(context, v, k, this$0)) {
	          iterating = false;
	          return iteratorDone();
	        }
	        return type === ITERATE_ENTRIES ? step :
	          iteratorValue(type, k, v, step);
	      });
	    };
	    return takeSequence;
	  }


	  function skipWhileFactory(iterable, predicate, context, useKeys) {
	    var skipSequence = makeSequence(iterable);
	    skipSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;
	      if (reverse) {
	        return this.cacheResult().__iterate(fn, reverse);
	      }
	      var isSkipping = true;
	      var iterations = 0;
	      iterable.__iterate(function(v, k, c)  {
	        if (!(isSkipping && (isSkipping = predicate.call(context, v, k, c)))) {
	          iterations++;
	          return fn(v, useKeys ? k : iterations - 1, this$0);
	        }
	      });
	      return iterations;
	    };
	    skipSequence.__iteratorUncached = function(type, reverse) {var this$0 = this;
	      if (reverse) {
	        return this.cacheResult().__iterator(type, reverse);
	      }
	      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);
	      var skipping = true;
	      var iterations = 0;
	      return new Iterator(function()  {
	        var step, k, v;
	        do {
	          step = iterator.next();
	          if (step.done) {
	            if (useKeys || type === ITERATE_VALUES) {
	              return step;
	            } else if (type === ITERATE_KEYS) {
	              return iteratorValue(type, iterations++, undefined, step);
	            } else {
	              return iteratorValue(type, iterations++, step.value[1], step);
	            }
	          }
	          var entry = step.value;
	          k = entry[0];
	          v = entry[1];
	          skipping && (skipping = predicate.call(context, v, k, this$0));
	        } while (skipping);
	        return type === ITERATE_ENTRIES ? step :
	          iteratorValue(type, k, v, step);
	      });
	    };
	    return skipSequence;
	  }


	  function concatFactory(iterable, values) {
	    var isKeyedIterable = isKeyed(iterable);
	    var iters = [iterable].concat(values).map(function(v ) {
	      if (!isIterable(v)) {
	        v = isKeyedIterable ?
	          keyedSeqFromValue(v) :
	          indexedSeqFromValue(Array.isArray(v) ? v : [v]);
	      } else if (isKeyedIterable) {
	        v = KeyedIterable(v);
	      }
	      return v;
	    }).filter(function(v ) {return v.size !== 0});

	    if (iters.length === 0) {
	      return iterable;
	    }

	    if (iters.length === 1) {
	      var singleton = iters[0];
	      if (singleton === iterable ||
	          isKeyedIterable && isKeyed(singleton) ||
	          isIndexed(iterable) && isIndexed(singleton)) {
	        return singleton;
	      }
	    }

	    var concatSeq = new ArraySeq(iters);
	    if (isKeyedIterable) {
	      concatSeq = concatSeq.toKeyedSeq();
	    } else if (!isIndexed(iterable)) {
	      concatSeq = concatSeq.toSetSeq();
	    }
	    concatSeq = concatSeq.flatten(true);
	    concatSeq.size = iters.reduce(
	      function(sum, seq)  {
	        if (sum !== undefined) {
	          var size = seq.size;
	          if (size !== undefined) {
	            return sum + size;
	          }
	        }
	      },
	      0
	    );
	    return concatSeq;
	  }


	  function flattenFactory(iterable, depth, useKeys) {
	    var flatSequence = makeSequence(iterable);
	    flatSequence.__iterateUncached = function(fn, reverse) {
	      var iterations = 0;
	      var stopped = false;
	      function flatDeep(iter, currentDepth) {var this$0 = this;
	        iter.__iterate(function(v, k)  {
	          if ((!depth || currentDepth < depth) && isIterable(v)) {
	            flatDeep(v, currentDepth + 1);
	          } else if (fn(v, useKeys ? k : iterations++, this$0) === false) {
	            stopped = true;
	          }
	          return !stopped;
	        }, reverse);
	      }
	      flatDeep(iterable, 0);
	      return iterations;
	    }
	    flatSequence.__iteratorUncached = function(type, reverse) {
	      var iterator = iterable.__iterator(type, reverse);
	      var stack = [];
	      var iterations = 0;
	      return new Iterator(function()  {
	        while (iterator) {
	          var step = iterator.next();
	          if (step.done !== false) {
	            iterator = stack.pop();
	            continue;
	          }
	          var v = step.value;
	          if (type === ITERATE_ENTRIES) {
	            v = v[1];
	          }
	          if ((!depth || stack.length < depth) && isIterable(v)) {
	            stack.push(iterator);
	            iterator = v.__iterator(type, reverse);
	          } else {
	            return useKeys ? step : iteratorValue(type, iterations++, v, step);
	          }
	        }
	        return iteratorDone();
	      });
	    }
	    return flatSequence;
	  }


	  function flatMapFactory(iterable, mapper, context) {
	    var coerce = iterableClass(iterable);
	    return iterable.toSeq().map(
	      function(v, k)  {return coerce(mapper.call(context, v, k, iterable))}
	    ).flatten(true);
	  }


	  function interposeFactory(iterable, separator) {
	    var interposedSequence = makeSequence(iterable);
	    interposedSequence.size = iterable.size && iterable.size * 2 -1;
	    interposedSequence.__iterateUncached = function(fn, reverse) {var this$0 = this;
	      var iterations = 0;
	      iterable.__iterate(function(v, k) 
	        {return (!iterations || fn(separator, iterations++, this$0) !== false) &&
	        fn(v, iterations++, this$0) !== false},
	        reverse
	      );
	      return iterations;
	    };
	    interposedSequence.__iteratorUncached = function(type, reverse) {
	      var iterator = iterable.__iterator(ITERATE_VALUES, reverse);
	      var iterations = 0;
	      var step;
	      return new Iterator(function()  {
	        if (!step || iterations % 2) {
	          step = iterator.next();
	          if (step.done) {
	            return step;
	          }
	        }
	        return iterations % 2 ?
	          iteratorValue(type, iterations++, separator) :
	          iteratorValue(type, iterations++, step.value, step);
	      });
	    };
	    return interposedSequence;
	  }


	  function sortFactory(iterable, comparator, mapper) {
	    if (!comparator) {
	      comparator = defaultComparator;
	    }
	    var isKeyedIterable = isKeyed(iterable);
	    var index = 0;
	    var entries = iterable.toSeq().map(
	      function(v, k)  {return [k, v, index++, mapper ? mapper(v, k, iterable) : v]}
	    ).toArray();
	    entries.sort(function(a, b)  {return comparator(a[3], b[3]) || a[2] - b[2]}).forEach(
	      isKeyedIterable ?
	      function(v, i)  { entries[i].length = 2; } :
	      function(v, i)  { entries[i] = v[1]; }
	    );
	    return isKeyedIterable ? KeyedSeq(entries) :
	      isIndexed(iterable) ? IndexedSeq(entries) :
	      SetSeq(entries);
	  }


	  function maxFactory(iterable, comparator, mapper) {
	    if (!comparator) {
	      comparator = defaultComparator;
	    }
	    if (mapper) {
	      var entry = iterable.toSeq()
	        .map(function(v, k)  {return [v, mapper(v, k, iterable)]})
	        .reduce(function(a, b)  {return maxCompare(comparator, a[1], b[1]) ? b : a});
	      return entry && entry[0];
	    } else {
	      return iterable.reduce(function(a, b)  {return maxCompare(comparator, a, b) ? b : a});
	    }
	  }

	  function maxCompare(comparator, a, b) {
	    var comp = comparator(b, a);
	    // b is considered the new max if the comparator declares them equal, but
	    // they are not equal and b is in fact a nullish value.
	    return (comp === 0 && b !== a && (b === undefined || b === null || b !== b)) || comp > 0;
	  }


	  function zipWithFactory(keyIter, zipper, iters) {
	    var zipSequence = makeSequence(keyIter);
	    zipSequence.size = new ArraySeq(iters).map(function(i ) {return i.size}).min();
	    // Note: this a generic base implementation of __iterate in terms of
	    // __iterator which may be more generically useful in the future.
	    zipSequence.__iterate = function(fn, reverse) {
	      /* generic:
	      var iterator = this.__iterator(ITERATE_ENTRIES, reverse);
	      var step;
	      var iterations = 0;
	      while (!(step = iterator.next()).done) {
	        iterations++;
	        if (fn(step.value[1], step.value[0], this) === false) {
	          break;
	        }
	      }
	      return iterations;
	      */
	      // indexed:
	      var iterator = this.__iterator(ITERATE_VALUES, reverse);
	      var step;
	      var iterations = 0;
	      while (!(step = iterator.next()).done) {
	        if (fn(step.value, iterations++, this) === false) {
	          break;
	        }
	      }
	      return iterations;
	    };
	    zipSequence.__iteratorUncached = function(type, reverse) {
	      var iterators = iters.map(function(i )
	        {return (i = Iterable(i), getIterator(reverse ? i.reverse() : i))}
	      );
	      var iterations = 0;
	      var isDone = false;
	      return new Iterator(function()  {
	        var steps;
	        if (!isDone) {
	          steps = iterators.map(function(i ) {return i.next()});
	          isDone = steps.some(function(s ) {return s.done});
	        }
	        if (isDone) {
	          return iteratorDone();
	        }
	        return iteratorValue(
	          type,
	          iterations++,
	          zipper.apply(null, steps.map(function(s ) {return s.value}))
	        );
	      });
	    };
	    return zipSequence
	  }


	  // #pragma Helper Functions

	  function reify(iter, seq) {
	    return isSeq(iter) ? seq : iter.constructor(seq);
	  }

	  function validateEntry(entry) {
	    if (entry !== Object(entry)) {
	      throw new TypeError('Expected [K, V] tuple: ' + entry);
	    }
	  }

	  function resolveSize(iter) {
	    assertNotInfinite(iter.size);
	    return ensureSize(iter);
	  }

	  function iterableClass(iterable) {
	    return isKeyed(iterable) ? KeyedIterable :
	      isIndexed(iterable) ? IndexedIterable :
	      SetIterable;
	  }

	  function makeSequence(iterable) {
	    return Object.create(
	      (
	        isKeyed(iterable) ? KeyedSeq :
	        isIndexed(iterable) ? IndexedSeq :
	        SetSeq
	      ).prototype
	    );
	  }

	  function cacheResultThrough() {
	    if (this._iter.cacheResult) {
	      this._iter.cacheResult();
	      this.size = this._iter.size;
	      return this;
	    } else {
	      return Seq.prototype.cacheResult.call(this);
	    }
	  }

	  function defaultComparator(a, b) {
	    return a > b ? 1 : a < b ? -1 : 0;
	  }

	  function forceIterator(keyPath) {
	    var iter = getIterator(keyPath);
	    if (!iter) {
	      // Array might not be iterable in this environment, so we need a fallback
	      // to our wrapped type.
	      if (!isArrayLike(keyPath)) {
	        throw new TypeError('Expected iterable or array-like: ' + keyPath);
	      }
	      iter = getIterator(Iterable(keyPath));
	    }
	    return iter;
	  }

	  createClass(Record, KeyedCollection);

	    function Record(defaultValues, name) {
	      var hasInitialized;

	      var RecordType = function Record(values) {
	        if (values instanceof RecordType) {
	          return values;
	        }
	        if (!(this instanceof RecordType)) {
	          return new RecordType(values);
	        }
	        if (!hasInitialized) {
	          hasInitialized = true;
	          var keys = Object.keys(defaultValues);
	          setProps(RecordTypePrototype, keys);
	          RecordTypePrototype.size = keys.length;
	          RecordTypePrototype._name = name;
	          RecordTypePrototype._keys = keys;
	          RecordTypePrototype._defaultValues = defaultValues;
	        }
	        this._map = Map(values);
	      };

	      var RecordTypePrototype = RecordType.prototype = Object.create(RecordPrototype);
	      RecordTypePrototype.constructor = RecordType;

	      return RecordType;
	    }

	    Record.prototype.toString = function() {
	      return this.__toString(recordName(this) + ' {', '}');
	    };

	    // @pragma Access

	    Record.prototype.has = function(k) {
	      return this._defaultValues.hasOwnProperty(k);
	    };

	    Record.prototype.get = function(k, notSetValue) {
	      if (!this.has(k)) {
	        return notSetValue;
	      }
	      var defaultVal = this._defaultValues[k];
	      return this._map ? this._map.get(k, defaultVal) : defaultVal;
	    };

	    // @pragma Modification

	    Record.prototype.clear = function() {
	      if (this.__ownerID) {
	        this._map && this._map.clear();
	        return this;
	      }
	      var RecordType = this.constructor;
	      return RecordType._empty || (RecordType._empty = makeRecord(this, emptyMap()));
	    };

	    Record.prototype.set = function(k, v) {
	      if (!this.has(k)) {
	        throw new Error('Cannot set unknown key "' + k + '" on ' + recordName(this));
	      }
	      if (this._map && !this._map.has(k)) {
	        var defaultVal = this._defaultValues[k];
	        if (v === defaultVal) {
	          return this;
	        }
	      }
	      var newMap = this._map && this._map.set(k, v);
	      if (this.__ownerID || newMap === this._map) {
	        return this;
	      }
	      return makeRecord(this, newMap);
	    };

	    Record.prototype.remove = function(k) {
	      if (!this.has(k)) {
	        return this;
	      }
	      var newMap = this._map && this._map.remove(k);
	      if (this.__ownerID || newMap === this._map) {
	        return this;
	      }
	      return makeRecord(this, newMap);
	    };

	    Record.prototype.wasAltered = function() {
	      return this._map.wasAltered();
	    };

	    Record.prototype.__iterator = function(type, reverse) {var this$0 = this;
	      return KeyedIterable(this._defaultValues).map(function(_, k)  {return this$0.get(k)}).__iterator(type, reverse);
	    };

	    Record.prototype.__iterate = function(fn, reverse) {var this$0 = this;
	      return KeyedIterable(this._defaultValues).map(function(_, k)  {return this$0.get(k)}).__iterate(fn, reverse);
	    };

	    Record.prototype.__ensureOwner = function(ownerID) {
	      if (ownerID === this.__ownerID) {
	        return this;
	      }
	      var newMap = this._map && this._map.__ensureOwner(ownerID);
	      if (!ownerID) {
	        this.__ownerID = ownerID;
	        this._map = newMap;
	        return this;
	      }
	      return makeRecord(this, newMap, ownerID);
	    };


	  var RecordPrototype = Record.prototype;
	  RecordPrototype[DELETE] = RecordPrototype.remove;
	  RecordPrototype.deleteIn =
	  RecordPrototype.removeIn = MapPrototype.removeIn;
	  RecordPrototype.merge = MapPrototype.merge;
	  RecordPrototype.mergeWith = MapPrototype.mergeWith;
	  RecordPrototype.mergeIn = MapPrototype.mergeIn;
	  RecordPrototype.mergeDeep = MapPrototype.mergeDeep;
	  RecordPrototype.mergeDeepWith = MapPrototype.mergeDeepWith;
	  RecordPrototype.mergeDeepIn = MapPrototype.mergeDeepIn;
	  RecordPrototype.setIn = MapPrototype.setIn;
	  RecordPrototype.update = MapPrototype.update;
	  RecordPrototype.updateIn = MapPrototype.updateIn;
	  RecordPrototype.withMutations = MapPrototype.withMutations;
	  RecordPrototype.asMutable = MapPrototype.asMutable;
	  RecordPrototype.asImmutable = MapPrototype.asImmutable;


	  function makeRecord(likeRecord, map, ownerID) {
	    var record = Object.create(Object.getPrototypeOf(likeRecord));
	    record._map = map;
	    record.__ownerID = ownerID;
	    return record;
	  }

	  function recordName(record) {
	    return record._name || record.constructor.name || 'Record';
	  }

	  function setProps(prototype, names) {
	    try {
	      names.forEach(setProp.bind(undefined, prototype));
	    } catch (error) {
	      // Object.defineProperty failed. Probably IE8.
	    }
	  }

	  function setProp(prototype, name) {
	    Object.defineProperty(prototype, name, {
	      get: function() {
	        return this.get(name);
	      },
	      set: function(value) {
	        invariant(this.__ownerID, 'Cannot set on an immutable record.');
	        this.set(name, value);
	      }
	    });
	  }

	  createClass(Set, SetCollection);

	    // @pragma Construction

	    function Set(value) {
	      return value === null || value === undefined ? emptySet() :
	        isSet(value) && !isOrdered(value) ? value :
	        emptySet().withMutations(function(set ) {
	          var iter = SetIterable(value);
	          assertNotInfinite(iter.size);
	          iter.forEach(function(v ) {return set.add(v)});
	        });
	    }

	    Set.of = function(/*...values*/) {
	      return this(arguments);
	    };

	    Set.fromKeys = function(value) {
	      return this(KeyedIterable(value).keySeq());
	    };

	    Set.prototype.toString = function() {
	      return this.__toString('Set {', '}');
	    };

	    // @pragma Access

	    Set.prototype.has = function(value) {
	      return this._map.has(value);
	    };

	    // @pragma Modification

	    Set.prototype.add = function(value) {
	      return updateSet(this, this._map.set(value, true));
	    };

	    Set.prototype.remove = function(value) {
	      return updateSet(this, this._map.remove(value));
	    };

	    Set.prototype.clear = function() {
	      return updateSet(this, this._map.clear());
	    };

	    // @pragma Composition

	    Set.prototype.union = function() {var iters = SLICE$0.call(arguments, 0);
	      iters = iters.filter(function(x ) {return x.size !== 0});
	      if (iters.length === 0) {
	        return this;
	      }
	      if (this.size === 0 && !this.__ownerID && iters.length === 1) {
	        return this.constructor(iters[0]);
	      }
	      return this.withMutations(function(set ) {
	        for (var ii = 0; ii < iters.length; ii++) {
	          SetIterable(iters[ii]).forEach(function(value ) {return set.add(value)});
	        }
	      });
	    };

	    Set.prototype.intersect = function() {var iters = SLICE$0.call(arguments, 0);
	      if (iters.length === 0) {
	        return this;
	      }
	      iters = iters.map(function(iter ) {return SetIterable(iter)});
	      var originalSet = this;
	      return this.withMutations(function(set ) {
	        originalSet.forEach(function(value ) {
	          if (!iters.every(function(iter ) {return iter.includes(value)})) {
	            set.remove(value);
	          }
	        });
	      });
	    };

	    Set.prototype.subtract = function() {var iters = SLICE$0.call(arguments, 0);
	      if (iters.length === 0) {
	        return this;
	      }
	      iters = iters.map(function(iter ) {return SetIterable(iter)});
	      var originalSet = this;
	      return this.withMutations(function(set ) {
	        originalSet.forEach(function(value ) {
	          if (iters.some(function(iter ) {return iter.includes(value)})) {
	            set.remove(value);
	          }
	        });
	      });
	    };

	    Set.prototype.merge = function() {
	      return this.union.apply(this, arguments);
	    };

	    Set.prototype.mergeWith = function(merger) {var iters = SLICE$0.call(arguments, 1);
	      return this.union.apply(this, iters);
	    };

	    Set.prototype.sort = function(comparator) {
	      // Late binding
	      return OrderedSet(sortFactory(this, comparator));
	    };

	    Set.prototype.sortBy = function(mapper, comparator) {
	      // Late binding
	      return OrderedSet(sortFactory(this, comparator, mapper));
	    };

	    Set.prototype.wasAltered = function() {
	      return this._map.wasAltered();
	    };

	    Set.prototype.__iterate = function(fn, reverse) {var this$0 = this;
	      return this._map.__iterate(function(_, k)  {return fn(k, k, this$0)}, reverse);
	    };

	    Set.prototype.__iterator = function(type, reverse) {
	      return this._map.map(function(_, k)  {return k}).__iterator(type, reverse);
	    };

	    Set.prototype.__ensureOwner = function(ownerID) {
	      if (ownerID === this.__ownerID) {
	        return this;
	      }
	      var newMap = this._map.__ensureOwner(ownerID);
	      if (!ownerID) {
	        this.__ownerID = ownerID;
	        this._map = newMap;
	        return this;
	      }
	      return this.__make(newMap, ownerID);
	    };


	  function isSet(maybeSet) {
	    return !!(maybeSet && maybeSet[IS_SET_SENTINEL]);
	  }

	  Set.isSet = isSet;

	  var IS_SET_SENTINEL = '@@__IMMUTABLE_SET__@@';

	  var SetPrototype = Set.prototype;
	  SetPrototype[IS_SET_SENTINEL] = true;
	  SetPrototype[DELETE] = SetPrototype.remove;
	  SetPrototype.mergeDeep = SetPrototype.merge;
	  SetPrototype.mergeDeepWith = SetPrototype.mergeWith;
	  SetPrototype.withMutations = MapPrototype.withMutations;
	  SetPrototype.asMutable = MapPrototype.asMutable;
	  SetPrototype.asImmutable = MapPrototype.asImmutable;

	  SetPrototype.__empty = emptySet;
	  SetPrototype.__make = makeSet;

	  function updateSet(set, newMap) {
	    if (set.__ownerID) {
	      set.size = newMap.size;
	      set._map = newMap;
	      return set;
	    }
	    return newMap === set._map ? set :
	      newMap.size === 0 ? set.__empty() :
	      set.__make(newMap);
	  }

	  function makeSet(map, ownerID) {
	    var set = Object.create(SetPrototype);
	    set.size = map ? map.size : 0;
	    set._map = map;
	    set.__ownerID = ownerID;
	    return set;
	  }

	  var EMPTY_SET;
	  function emptySet() {
	    return EMPTY_SET || (EMPTY_SET = makeSet(emptyMap()));
	  }

	  createClass(OrderedSet, Set);

	    // @pragma Construction

	    function OrderedSet(value) {
	      return value === null || value === undefined ? emptyOrderedSet() :
	        isOrderedSet(value) ? value :
	        emptyOrderedSet().withMutations(function(set ) {
	          var iter = SetIterable(value);
	          assertNotInfinite(iter.size);
	          iter.forEach(function(v ) {return set.add(v)});
	        });
	    }

	    OrderedSet.of = function(/*...values*/) {
	      return this(arguments);
	    };

	    OrderedSet.fromKeys = function(value) {
	      return this(KeyedIterable(value).keySeq());
	    };

	    OrderedSet.prototype.toString = function() {
	      return this.__toString('OrderedSet {', '}');
	    };


	  function isOrderedSet(maybeOrderedSet) {
	    return isSet(maybeOrderedSet) && isOrdered(maybeOrderedSet);
	  }

	  OrderedSet.isOrderedSet = isOrderedSet;

	  var OrderedSetPrototype = OrderedSet.prototype;
	  OrderedSetPrototype[IS_ORDERED_SENTINEL] = true;

	  OrderedSetPrototype.__empty = emptyOrderedSet;
	  OrderedSetPrototype.__make = makeOrderedSet;

	  function makeOrderedSet(map, ownerID) {
	    var set = Object.create(OrderedSetPrototype);
	    set.size = map ? map.size : 0;
	    set._map = map;
	    set.__ownerID = ownerID;
	    return set;
	  }

	  var EMPTY_ORDERED_SET;
	  function emptyOrderedSet() {
	    return EMPTY_ORDERED_SET || (EMPTY_ORDERED_SET = makeOrderedSet(emptyOrderedMap()));
	  }

	  createClass(Stack, IndexedCollection);

	    // @pragma Construction

	    function Stack(value) {
	      return value === null || value === undefined ? emptyStack() :
	        isStack(value) ? value :
	        emptyStack().unshiftAll(value);
	    }

	    Stack.of = function(/*...values*/) {
	      return this(arguments);
	    };

	    Stack.prototype.toString = function() {
	      return this.__toString('Stack [', ']');
	    };

	    // @pragma Access

	    Stack.prototype.get = function(index, notSetValue) {
	      var head = this._head;
	      index = wrapIndex(this, index);
	      while (head && index--) {
	        head = head.next;
	      }
	      return head ? head.value : notSetValue;
	    };

	    Stack.prototype.peek = function() {
	      return this._head && this._head.value;
	    };

	    // @pragma Modification

	    Stack.prototype.push = function(/*...values*/) {
	      if (arguments.length === 0) {
	        return this;
	      }
	      var newSize = this.size + arguments.length;
	      var head = this._head;
	      for (var ii = arguments.length - 1; ii >= 0; ii--) {
	        head = {
	          value: arguments[ii],
	          next: head
	        };
	      }
	      if (this.__ownerID) {
	        this.size = newSize;
	        this._head = head;
	        this.__hash = undefined;
	        this.__altered = true;
	        return this;
	      }
	      return makeStack(newSize, head);
	    };

	    Stack.prototype.pushAll = function(iter) {
	      iter = IndexedIterable(iter);
	      if (iter.size === 0) {
	        return this;
	      }
	      assertNotInfinite(iter.size);
	      var newSize = this.size;
	      var head = this._head;
	      iter.reverse().forEach(function(value ) {
	        newSize++;
	        head = {
	          value: value,
	          next: head
	        };
	      });
	      if (this.__ownerID) {
	        this.size = newSize;
	        this._head = head;
	        this.__hash = undefined;
	        this.__altered = true;
	        return this;
	      }
	      return makeStack(newSize, head);
	    };

	    Stack.prototype.pop = function() {
	      return this.slice(1);
	    };

	    Stack.prototype.unshift = function(/*...values*/) {
	      return this.push.apply(this, arguments);
	    };

	    Stack.prototype.unshiftAll = function(iter) {
	      return this.pushAll(iter);
	    };

	    Stack.prototype.shift = function() {
	      return this.pop.apply(this, arguments);
	    };

	    Stack.prototype.clear = function() {
	      if (this.size === 0) {
	        return this;
	      }
	      if (this.__ownerID) {
	        this.size = 0;
	        this._head = undefined;
	        this.__hash = undefined;
	        this.__altered = true;
	        return this;
	      }
	      return emptyStack();
	    };

	    Stack.prototype.slice = function(begin, end) {
	      if (wholeSlice(begin, end, this.size)) {
	        return this;
	      }
	      var resolvedBegin = resolveBegin(begin, this.size);
	      var resolvedEnd = resolveEnd(end, this.size);
	      if (resolvedEnd !== this.size) {
	        // super.slice(begin, end);
	        return IndexedCollection.prototype.slice.call(this, begin, end);
	      }
	      var newSize = this.size - resolvedBegin;
	      var head = this._head;
	      while (resolvedBegin--) {
	        head = head.next;
	      }
	      if (this.__ownerID) {
	        this.size = newSize;
	        this._head = head;
	        this.__hash = undefined;
	        this.__altered = true;
	        return this;
	      }
	      return makeStack(newSize, head);
	    };

	    // @pragma Mutability

	    Stack.prototype.__ensureOwner = function(ownerID) {
	      if (ownerID === this.__ownerID) {
	        return this;
	      }
	      if (!ownerID) {
	        this.__ownerID = ownerID;
	        this.__altered = false;
	        return this;
	      }
	      return makeStack(this.size, this._head, ownerID, this.__hash);
	    };

	    // @pragma Iteration

	    Stack.prototype.__iterate = function(fn, reverse) {
	      if (reverse) {
	        return this.reverse().__iterate(fn);
	      }
	      var iterations = 0;
	      var node = this._head;
	      while (node) {
	        if (fn(node.value, iterations++, this) === false) {
	          break;
	        }
	        node = node.next;
	      }
	      return iterations;
	    };

	    Stack.prototype.__iterator = function(type, reverse) {
	      if (reverse) {
	        return this.reverse().__iterator(type);
	      }
	      var iterations = 0;
	      var node = this._head;
	      return new Iterator(function()  {
	        if (node) {
	          var value = node.value;
	          node = node.next;
	          return iteratorValue(type, iterations++, value);
	        }
	        return iteratorDone();
	      });
	    };


	  function isStack(maybeStack) {
	    return !!(maybeStack && maybeStack[IS_STACK_SENTINEL]);
	  }

	  Stack.isStack = isStack;

	  var IS_STACK_SENTINEL = '@@__IMMUTABLE_STACK__@@';

	  var StackPrototype = Stack.prototype;
	  StackPrototype[IS_STACK_SENTINEL] = true;
	  StackPrototype.withMutations = MapPrototype.withMutations;
	  StackPrototype.asMutable = MapPrototype.asMutable;
	  StackPrototype.asImmutable = MapPrototype.asImmutable;
	  StackPrototype.wasAltered = MapPrototype.wasAltered;


	  function makeStack(size, head, ownerID, hash) {
	    var map = Object.create(StackPrototype);
	    map.size = size;
	    map._head = head;
	    map.__ownerID = ownerID;
	    map.__hash = hash;
	    map.__altered = false;
	    return map;
	  }

	  var EMPTY_STACK;
	  function emptyStack() {
	    return EMPTY_STACK || (EMPTY_STACK = makeStack(0));
	  }

	  /**
	   * Contributes additional methods to a constructor
	   */
	  function mixin(ctor, methods) {
	    var keyCopier = function(key ) { ctor.prototype[key] = methods[key]; };
	    Object.keys(methods).forEach(keyCopier);
	    Object.getOwnPropertySymbols &&
	      Object.getOwnPropertySymbols(methods).forEach(keyCopier);
	    return ctor;
	  }

	  Iterable.Iterator = Iterator;

	  mixin(Iterable, {

	    // ### Conversion to other types

	    toArray: function() {
	      assertNotInfinite(this.size);
	      var array = new Array(this.size || 0);
	      this.valueSeq().__iterate(function(v, i)  { array[i] = v; });
	      return array;
	    },

	    toIndexedSeq: function() {
	      return new ToIndexedSequence(this);
	    },

	    toJS: function() {
	      return this.toSeq().map(
	        function(value ) {return value && typeof value.toJS === 'function' ? value.toJS() : value}
	      ).__toJS();
	    },

	    toJSON: function() {
	      return this.toSeq().map(
	        function(value ) {return value && typeof value.toJSON === 'function' ? value.toJSON() : value}
	      ).__toJS();
	    },

	    toKeyedSeq: function() {
	      return new ToKeyedSequence(this, true);
	    },

	    toMap: function() {
	      // Use Late Binding here to solve the circular dependency.
	      return Map(this.toKeyedSeq());
	    },

	    toObject: function() {
	      assertNotInfinite(this.size);
	      var object = {};
	      this.__iterate(function(v, k)  { object[k] = v; });
	      return object;
	    },

	    toOrderedMap: function() {
	      // Use Late Binding here to solve the circular dependency.
	      return OrderedMap(this.toKeyedSeq());
	    },

	    toOrderedSet: function() {
	      // Use Late Binding here to solve the circular dependency.
	      return OrderedSet(isKeyed(this) ? this.valueSeq() : this);
	    },

	    toSet: function() {
	      // Use Late Binding here to solve the circular dependency.
	      return Set(isKeyed(this) ? this.valueSeq() : this);
	    },

	    toSetSeq: function() {
	      return new ToSetSequence(this);
	    },

	    toSeq: function() {
	      return isIndexed(this) ? this.toIndexedSeq() :
	        isKeyed(this) ? this.toKeyedSeq() :
	        this.toSetSeq();
	    },

	    toStack: function() {
	      // Use Late Binding here to solve the circular dependency.
	      return Stack(isKeyed(this) ? this.valueSeq() : this);
	    },

	    toList: function() {
	      // Use Late Binding here to solve the circular dependency.
	      return List(isKeyed(this) ? this.valueSeq() : this);
	    },


	    // ### Common JavaScript methods and properties

	    toString: function() {
	      return '[Iterable]';
	    },

	    __toString: function(head, tail) {
	      if (this.size === 0) {
	        return head + tail;
	      }
	      return head + ' ' + this.toSeq().map(this.__toStringMapper).join(', ') + ' ' + tail;
	    },


	    // ### ES6 Collection methods (ES6 Array and Map)

	    concat: function() {var values = SLICE$0.call(arguments, 0);
	      return reify(this, concatFactory(this, values));
	    },

	    includes: function(searchValue) {
	      return this.some(function(value ) {return is(value, searchValue)});
	    },

	    entries: function() {
	      return this.__iterator(ITERATE_ENTRIES);
	    },

	    every: function(predicate, context) {
	      assertNotInfinite(this.size);
	      var returnValue = true;
	      this.__iterate(function(v, k, c)  {
	        if (!predicate.call(context, v, k, c)) {
	          returnValue = false;
	          return false;
	        }
	      });
	      return returnValue;
	    },

	    filter: function(predicate, context) {
	      return reify(this, filterFactory(this, predicate, context, true));
	    },

	    find: function(predicate, context, notSetValue) {
	      var entry = this.findEntry(predicate, context);
	      return entry ? entry[1] : notSetValue;
	    },

	    forEach: function(sideEffect, context) {
	      assertNotInfinite(this.size);
	      return this.__iterate(context ? sideEffect.bind(context) : sideEffect);
	    },

	    join: function(separator) {
	      assertNotInfinite(this.size);
	      separator = separator !== undefined ? '' + separator : ',';
	      var joined = '';
	      var isFirst = true;
	      this.__iterate(function(v ) {
	        isFirst ? (isFirst = false) : (joined += separator);
	        joined += v !== null && v !== undefined ? v.toString() : '';
	      });
	      return joined;
	    },

	    keys: function() {
	      return this.__iterator(ITERATE_KEYS);
	    },

	    map: function(mapper, context) {
	      return reify(this, mapFactory(this, mapper, context));
	    },

	    reduce: function(reducer, initialReduction, context) {
	      assertNotInfinite(this.size);
	      var reduction;
	      var useFirst;
	      if (arguments.length < 2) {
	        useFirst = true;
	      } else {
	        reduction = initialReduction;
	      }
	      this.__iterate(function(v, k, c)  {
	        if (useFirst) {
	          useFirst = false;
	          reduction = v;
	        } else {
	          reduction = reducer.call(context, reduction, v, k, c);
	        }
	      });
	      return reduction;
	    },

	    reduceRight: function(reducer, initialReduction, context) {
	      var reversed = this.toKeyedSeq().reverse();
	      return reversed.reduce.apply(reversed, arguments);
	    },

	    reverse: function() {
	      return reify(this, reverseFactory(this, true));
	    },

	    slice: function(begin, end) {
	      return reify(this, sliceFactory(this, begin, end, true));
	    },

	    some: function(predicate, context) {
	      return !this.every(not(predicate), context);
	    },

	    sort: function(comparator) {
	      return reify(this, sortFactory(this, comparator));
	    },

	    values: function() {
	      return this.__iterator(ITERATE_VALUES);
	    },


	    // ### More sequential methods

	    butLast: function() {
	      return this.slice(0, -1);
	    },

	    isEmpty: function() {
	      return this.size !== undefined ? this.size === 0 : !this.some(function()  {return true});
	    },

	    count: function(predicate, context) {
	      return ensureSize(
	        predicate ? this.toSeq().filter(predicate, context) : this
	      );
	    },

	    countBy: function(grouper, context) {
	      return countByFactory(this, grouper, context);
	    },

	    equals: function(other) {
	      return deepEqual(this, other);
	    },

	    entrySeq: function() {
	      var iterable = this;
	      if (iterable._cache) {
	        // We cache as an entries array, so we can just return the cache!
	        return new ArraySeq(iterable._cache);
	      }
	      var entriesSequence = iterable.toSeq().map(entryMapper).toIndexedSeq();
	      entriesSequence.fromEntrySeq = function()  {return iterable.toSeq()};
	      return entriesSequence;
	    },

	    filterNot: function(predicate, context) {
	      return this.filter(not(predicate), context);
	    },

	    findEntry: function(predicate, context, notSetValue) {
	      var found = notSetValue;
	      this.__iterate(function(v, k, c)  {
	        if (predicate.call(context, v, k, c)) {
	          found = [k, v];
	          return false;
	        }
	      });
	      return found;
	    },

	    findKey: function(predicate, context) {
	      var entry = this.findEntry(predicate, context);
	      return entry && entry[0];
	    },

	    findLast: function(predicate, context, notSetValue) {
	      return this.toKeyedSeq().reverse().find(predicate, context, notSetValue);
	    },

	    findLastEntry: function(predicate, context, notSetValue) {
	      return this.toKeyedSeq().reverse().findEntry(predicate, context, notSetValue);
	    },

	    findLastKey: function(predicate, context) {
	      return this.toKeyedSeq().reverse().findKey(predicate, context);
	    },

	    first: function() {
	      return this.find(returnTrue);
	    },

	    flatMap: function(mapper, context) {
	      return reify(this, flatMapFactory(this, mapper, context));
	    },

	    flatten: function(depth) {
	      return reify(this, flattenFactory(this, depth, true));
	    },

	    fromEntrySeq: function() {
	      return new FromEntriesSequence(this);
	    },

	    get: function(searchKey, notSetValue) {
	      return this.find(function(_, key)  {return is(key, searchKey)}, undefined, notSetValue);
	    },

	    getIn: function(searchKeyPath, notSetValue) {
	      var nested = this;
	      // Note: in an ES6 environment, we would prefer:
	      // for (var key of searchKeyPath) {
	      var iter = forceIterator(searchKeyPath);
	      var step;
	      while (!(step = iter.next()).done) {
	        var key = step.value;
	        nested = nested && nested.get ? nested.get(key, NOT_SET) : NOT_SET;
	        if (nested === NOT_SET) {
	          return notSetValue;
	        }
	      }
	      return nested;
	    },

	    groupBy: function(grouper, context) {
	      return groupByFactory(this, grouper, context);
	    },

	    has: function(searchKey) {
	      return this.get(searchKey, NOT_SET) !== NOT_SET;
	    },

	    hasIn: function(searchKeyPath) {
	      return this.getIn(searchKeyPath, NOT_SET) !== NOT_SET;
	    },

	    isSubset: function(iter) {
	      iter = typeof iter.includes === 'function' ? iter : Iterable(iter);
	      return this.every(function(value ) {return iter.includes(value)});
	    },

	    isSuperset: function(iter) {
	      iter = typeof iter.isSubset === 'function' ? iter : Iterable(iter);
	      return iter.isSubset(this);
	    },

	    keyOf: function(searchValue) {
	      return this.findKey(function(value ) {return is(value, searchValue)});
	    },

	    keySeq: function() {
	      return this.toSeq().map(keyMapper).toIndexedSeq();
	    },

	    last: function() {
	      return this.toSeq().reverse().first();
	    },

	    lastKeyOf: function(searchValue) {
	      return this.toKeyedSeq().reverse().keyOf(searchValue);
	    },

	    max: function(comparator) {
	      return maxFactory(this, comparator);
	    },

	    maxBy: function(mapper, comparator) {
	      return maxFactory(this, comparator, mapper);
	    },

	    min: function(comparator) {
	      return maxFactory(this, comparator ? neg(comparator) : defaultNegComparator);
	    },

	    minBy: function(mapper, comparator) {
	      return maxFactory(this, comparator ? neg(comparator) : defaultNegComparator, mapper);
	    },

	    rest: function() {
	      return this.slice(1);
	    },

	    skip: function(amount) {
	      return this.slice(Math.max(0, amount));
	    },

	    skipLast: function(amount) {
	      return reify(this, this.toSeq().reverse().skip(amount).reverse());
	    },

	    skipWhile: function(predicate, context) {
	      return reify(this, skipWhileFactory(this, predicate, context, true));
	    },

	    skipUntil: function(predicate, context) {
	      return this.skipWhile(not(predicate), context);
	    },

	    sortBy: function(mapper, comparator) {
	      return reify(this, sortFactory(this, comparator, mapper));
	    },

	    take: function(amount) {
	      return this.slice(0, Math.max(0, amount));
	    },

	    takeLast: function(amount) {
	      return reify(this, this.toSeq().reverse().take(amount).reverse());
	    },

	    takeWhile: function(predicate, context) {
	      return reify(this, takeWhileFactory(this, predicate, context));
	    },

	    takeUntil: function(predicate, context) {
	      return this.takeWhile(not(predicate), context);
	    },

	    valueSeq: function() {
	      return this.toIndexedSeq();
	    },


	    // ### Hashable Object

	    hashCode: function() {
	      return this.__hash || (this.__hash = hashIterable(this));
	    }


	    // ### Internal

	    // abstract __iterate(fn, reverse)

	    // abstract __iterator(type, reverse)
	  });

	  // var IS_ITERABLE_SENTINEL = '@@__IMMUTABLE_ITERABLE__@@';
	  // var IS_KEYED_SENTINEL = '@@__IMMUTABLE_KEYED__@@';
	  // var IS_INDEXED_SENTINEL = '@@__IMMUTABLE_INDEXED__@@';
	  // var IS_ORDERED_SENTINEL = '@@__IMMUTABLE_ORDERED__@@';

	  var IterablePrototype = Iterable.prototype;
	  IterablePrototype[IS_ITERABLE_SENTINEL] = true;
	  IterablePrototype[ITERATOR_SYMBOL] = IterablePrototype.values;
	  IterablePrototype.__toJS = IterablePrototype.toArray;
	  IterablePrototype.__toStringMapper = quoteString;
	  IterablePrototype.inspect =
	  IterablePrototype.toSource = function() { return this.toString(); };
	  IterablePrototype.chain = IterablePrototype.flatMap;
	  IterablePrototype.contains = IterablePrototype.includes;

	  mixin(KeyedIterable, {

	    // ### More sequential methods

	    flip: function() {
	      return reify(this, flipFactory(this));
	    },

	    mapEntries: function(mapper, context) {var this$0 = this;
	      var iterations = 0;
	      return reify(this,
	        this.toSeq().map(
	          function(v, k)  {return mapper.call(context, [k, v], iterations++, this$0)}
	        ).fromEntrySeq()
	      );
	    },

	    mapKeys: function(mapper, context) {var this$0 = this;
	      return reify(this,
	        this.toSeq().flip().map(
	          function(k, v)  {return mapper.call(context, k, v, this$0)}
	        ).flip()
	      );
	    }

	  });

	  var KeyedIterablePrototype = KeyedIterable.prototype;
	  KeyedIterablePrototype[IS_KEYED_SENTINEL] = true;
	  KeyedIterablePrototype[ITERATOR_SYMBOL] = IterablePrototype.entries;
	  KeyedIterablePrototype.__toJS = IterablePrototype.toObject;
	  KeyedIterablePrototype.__toStringMapper = function(v, k)  {return JSON.stringify(k) + ': ' + quoteString(v)};



	  mixin(IndexedIterable, {

	    // ### Conversion to other types

	    toKeyedSeq: function() {
	      return new ToKeyedSequence(this, false);
	    },


	    // ### ES6 Collection methods (ES6 Array and Map)

	    filter: function(predicate, context) {
	      return reify(this, filterFactory(this, predicate, context, false));
	    },

	    findIndex: function(predicate, context) {
	      var entry = this.findEntry(predicate, context);
	      return entry ? entry[0] : -1;
	    },

	    indexOf: function(searchValue) {
	      var key = this.keyOf(searchValue);
	      return key === undefined ? -1 : key;
	    },

	    lastIndexOf: function(searchValue) {
	      var key = this.lastKeyOf(searchValue);
	      return key === undefined ? -1 : key;
	    },

	    reverse: function() {
	      return reify(this, reverseFactory(this, false));
	    },

	    slice: function(begin, end) {
	      return reify(this, sliceFactory(this, begin, end, false));
	    },

	    splice: function(index, removeNum /*, ...values*/) {
	      var numArgs = arguments.length;
	      removeNum = Math.max(removeNum | 0, 0);
	      if (numArgs === 0 || (numArgs === 2 && !removeNum)) {
	        return this;
	      }
	      // If index is negative, it should resolve relative to the size of the
	      // collection. However size may be expensive to compute if not cached, so
	      // only call count() if the number is in fact negative.
	      index = resolveBegin(index, index < 0 ? this.count() : this.size);
	      var spliced = this.slice(0, index);
	      return reify(
	        this,
	        numArgs === 1 ?
	          spliced :
	          spliced.concat(arrCopy(arguments, 2), this.slice(index + removeNum))
	      );
	    },


	    // ### More collection methods

	    findLastIndex: function(predicate, context) {
	      var entry = this.findLastEntry(predicate, context);
	      return entry ? entry[0] : -1;
	    },

	    first: function() {
	      return this.get(0);
	    },

	    flatten: function(depth) {
	      return reify(this, flattenFactory(this, depth, false));
	    },

	    get: function(index, notSetValue) {
	      index = wrapIndex(this, index);
	      return (index < 0 || (this.size === Infinity ||
	          (this.size !== undefined && index > this.size))) ?
	        notSetValue :
	        this.find(function(_, key)  {return key === index}, undefined, notSetValue);
	    },

	    has: function(index) {
	      index = wrapIndex(this, index);
	      return index >= 0 && (this.size !== undefined ?
	        this.size === Infinity || index < this.size :
	        this.indexOf(index) !== -1
	      );
	    },

	    interpose: function(separator) {
	      return reify(this, interposeFactory(this, separator));
	    },

	    interleave: function(/*...iterables*/) {
	      var iterables = [this].concat(arrCopy(arguments));
	      var zipped = zipWithFactory(this.toSeq(), IndexedSeq.of, iterables);
	      var interleaved = zipped.flatten(true);
	      if (zipped.size) {
	        interleaved.size = zipped.size * iterables.length;
	      }
	      return reify(this, interleaved);
	    },

	    keySeq: function() {
	      return Range(0, this.size);
	    },

	    last: function() {
	      return this.get(-1);
	    },

	    skipWhile: function(predicate, context) {
	      return reify(this, skipWhileFactory(this, predicate, context, false));
	    },

	    zip: function(/*, ...iterables */) {
	      var iterables = [this].concat(arrCopy(arguments));
	      return reify(this, zipWithFactory(this, defaultZipper, iterables));
	    },

	    zipWith: function(zipper/*, ...iterables */) {
	      var iterables = arrCopy(arguments);
	      iterables[0] = this;
	      return reify(this, zipWithFactory(this, zipper, iterables));
	    }

	  });

	  IndexedIterable.prototype[IS_INDEXED_SENTINEL] = true;
	  IndexedIterable.prototype[IS_ORDERED_SENTINEL] = true;



	  mixin(SetIterable, {

	    // ### ES6 Collection methods (ES6 Array and Map)

	    get: function(value, notSetValue) {
	      return this.has(value) ? value : notSetValue;
	    },

	    includes: function(value) {
	      return this.has(value);
	    },


	    // ### More sequential methods

	    keySeq: function() {
	      return this.valueSeq();
	    }

	  });

	  SetIterable.prototype.has = IterablePrototype.includes;
	  SetIterable.prototype.contains = SetIterable.prototype.includes;


	  // Mixin subclasses

	  mixin(KeyedSeq, KeyedIterable.prototype);
	  mixin(IndexedSeq, IndexedIterable.prototype);
	  mixin(SetSeq, SetIterable.prototype);

	  mixin(KeyedCollection, KeyedIterable.prototype);
	  mixin(IndexedCollection, IndexedIterable.prototype);
	  mixin(SetCollection, SetIterable.prototype);


	  // #pragma Helper functions

	  function keyMapper(v, k) {
	    return k;
	  }

	  function entryMapper(v, k) {
	    return [k, v];
	  }

	  function not(predicate) {
	    return function() {
	      return !predicate.apply(this, arguments);
	    }
	  }

	  function neg(predicate) {
	    return function() {
	      return -predicate.apply(this, arguments);
	    }
	  }

	  function quoteString(value) {
	    return typeof value === 'string' ? JSON.stringify(value) : String(value);
	  }

	  function defaultZipper() {
	    return arrCopy(arguments);
	  }

	  function defaultNegComparator(a, b) {
	    return a < b ? 1 : a > b ? -1 : 0;
	  }

	  function hashIterable(iterable) {
	    if (iterable.size === Infinity) {
	      return 0;
	    }
	    var ordered = isOrdered(iterable);
	    var keyed = isKeyed(iterable);
	    var h = ordered ? 1 : 0;
	    var size = iterable.__iterate(
	      keyed ?
	        ordered ?
	          function(v, k)  { h = 31 * h + hashMerge(hash(v), hash(k)) | 0; } :
	          function(v, k)  { h = h + hashMerge(hash(v), hash(k)) | 0; } :
	        ordered ?
	          function(v ) { h = 31 * h + hash(v) | 0; } :
	          function(v ) { h = h + hash(v) | 0; }
	    );
	    return murmurHashOfSize(size, h);
	  }

	  function murmurHashOfSize(size, h) {
	    h = imul(h, 0xCC9E2D51);
	    h = imul(h << 15 | h >>> -15, 0x1B873593);
	    h = imul(h << 13 | h >>> -13, 5);
	    h = (h + 0xE6546B64 | 0) ^ size;
	    h = imul(h ^ h >>> 16, 0x85EBCA6B);
	    h = imul(h ^ h >>> 13, 0xC2B2AE35);
	    h = smi(h ^ h >>> 16);
	    return h;
	  }

	  function hashMerge(a, b) {
	    return a ^ b + 0x9E3779B9 + (a << 6) + (a >> 2) | 0; // int
	  }

	  var Immutable = {

	    Iterable: Iterable,

	    Seq: Seq,
	    Collection: Collection,
	    Map: Map,
	    OrderedMap: OrderedMap,
	    List: List,
	    Stack: Stack,
	    Set: Set,
	    OrderedSet: OrderedSet,

	    Record: Record,
	    Range: Range,
	    Repeat: Repeat,

	    is: is,
	    fromJS: fromJS

	  };

	  return Immutable;

	}));

/***/ },
/* 211 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var plywood_1 = __webpack_require__(199);
	var chronoshift_1 = __webpack_require__(191);
	var general_1 = __webpack_require__(209);
	var MENU_LENGTH = 5;
	function makeCheckpoint(checkPoint, returnValue) {
	    return {
	        checkPoint: checkPoint,
	        returnValue: returnValue
	    };
	}
	function makeNumberBuckets(centerAround, count, coarse) {
	    var granularities = [];
	    var logTen = Math.log(centerAround) / Math.LN10;
	    var digits = general_1.getNumberOfWholeDigits(centerAround);
	    while (granularities.length <= count) {
	        if (!coarse) {
	            var halfStep = general_1.toSignificantDigits(5 * Math.pow(10, logTen - 1), digits);
	            granularities.push(granularityFromJS(halfStep));
	        }
	        if (granularities.length >= count)
	            break;
	        var wholeStep = general_1.toSignificantDigits(Math.pow(10, logTen), digits);
	        granularities.push(granularityFromJS(wholeStep));
	        logTen++;
	    }
	    return granularities;
	}
	function days(count) {
	    return count * chronoshift_1.day.canonicalLength;
	}
	function hours(count) {
	    return count * chronoshift_1.hour.canonicalLength;
	}
	function minutes(count) {
	    return count * chronoshift_1.minute.canonicalLength;
	}
	var TimeHelper = (function () {
	    function TimeHelper() {
	    }
	    TimeHelper.dimensionKind = 'time';
	    TimeHelper.minGranularity = granularityFromJS('PT1M');
	    TimeHelper.defaultGranularity = granularityFromJS('P1D');
	    TimeHelper.supportedGranularities = function () {
	        return [
	            'PT1S', 'PT1M', 'PT5M', 'PT15M',
	            'PT1H', 'PT6H', 'PT8H', 'PT12H',
	            'P1D', 'P1W', 'P1M', 'P3M', 'P6M',
	            'P1Y', 'P2Y'
	        ].map(granularityFromJS);
	    };
	    TimeHelper.checkers = [
	        makeCheckpoint(days(95), 'P1W'),
	        makeCheckpoint(days(8), 'P1D'),
	        makeCheckpoint(hours(8), 'PT1H'),
	        makeCheckpoint(hours(3), 'PT5M')];
	    TimeHelper.coarseCheckers = [
	        makeCheckpoint(days(95), 'P1M'),
	        makeCheckpoint(days(20), 'P1W'),
	        makeCheckpoint(days(6), 'P1D'),
	        makeCheckpoint(days(2), 'PT12H'),
	        makeCheckpoint(hours(23), 'PT6H'),
	        makeCheckpoint(hours(3), 'PT1H'),
	        makeCheckpoint(minutes(30), 'PT5M')
	    ];
	    TimeHelper.defaultGranularities = TimeHelper.checkers.map(function (c) { return granularityFromJS(c.returnValue); }).concat(TimeHelper.minGranularity).reverse();
	    TimeHelper.coarseGranularities = TimeHelper.coarseCheckers.map(function (c) { return granularityFromJS(c.returnValue); }).concat(TimeHelper.minGranularity).reverse();
	    return TimeHelper;
	}());
	exports.TimeHelper = TimeHelper;
	var NumberHelper = (function () {
	    function NumberHelper() {
	    }
	    NumberHelper.dimensionKind = 'number';
	    NumberHelper.minGranularity = granularityFromJS(1);
	    NumberHelper.defaultGranularity = granularityFromJS(10);
	    NumberHelper.checkers = [
	        makeCheckpoint(5000, 1000),
	        makeCheckpoint(500, 100),
	        makeCheckpoint(100, 10),
	        makeCheckpoint(1, 1),
	        makeCheckpoint(0.1, 0.1)
	    ];
	    NumberHelper.defaultGranularities = NumberHelper.checkers.map(function (c) { return granularityFromJS(c.returnValue); }).reverse();
	    NumberHelper.coarseGranularities = null;
	    NumberHelper.coarseCheckers = [
	        makeCheckpoint(500000, 50000),
	        makeCheckpoint(50000, 10000),
	        makeCheckpoint(5000, 5000),
	        makeCheckpoint(1000, 1000),
	        makeCheckpoint(100, 100),
	        makeCheckpoint(10, 10),
	        makeCheckpoint(1, 1),
	        makeCheckpoint(0.1, 0.1)
	    ];
	    NumberHelper.supportedGranularities = function (bucketedBy) {
	        return makeNumberBuckets(getBucketSize(bucketedBy), 10);
	    };
	    return NumberHelper;
	}());
	exports.NumberHelper = NumberHelper;
	function getHelperForKind(kind) {
	    if (kind === 'time')
	        return TimeHelper;
	    return NumberHelper;
	}
	function getHelperForRange(input) {
	    if (input instanceof plywood_1.TimeRange)
	        return TimeHelper;
	    return NumberHelper;
	}
	function getBucketSize(input) {
	    if (input instanceof plywood_1.TimeBucketAction)
	        return input.duration.getCanonicalLength();
	    if (input instanceof plywood_1.NumberBucketAction)
	        return input.size;
	    throw new Error("unrecognized granularity: " + input + " must be of type TimeBucketAction or NumberBucketAction");
	}
	function getBucketUnit(input) {
	    if (input instanceof plywood_1.TimeBucketAction)
	        return input.duration;
	    if (input instanceof plywood_1.NumberBucketAction)
	        return input.size;
	    throw new Error("unrecognized granularity: " + input + " must be of type TimeBucketAction or NumberBucketAction");
	}
	function bucketUnitToGranularity(input) {
	    if (input instanceof chronoshift_1.Duration) {
	        return new plywood_1.TimeBucketAction({ duration: input });
	    }
	    else if (!isNaN(input)) {
	        return new plywood_1.NumberBucketAction({ size: input, offset: 0 });
	    }
	    throw new Error("unrecognized bucket unit: " + input + " must be of type number or Duration");
	}
	function startValue(input) {
	    return input instanceof plywood_1.TimeRange ? input.start.valueOf() : input.start;
	}
	function endValue(input) {
	    return input instanceof plywood_1.TimeRange ? input.end.valueOf() : input.end;
	}
	function findBestMatch(array, target) {
	    var exactMatch = general_1.findExactIndex(array, target, getBucketSize);
	    if (exactMatch !== -1) {
	        return array[exactMatch];
	    }
	    var minBiggerIdx = general_1.findFirstBiggerIndex(array, target, getBucketSize);
	    if (minBiggerIdx !== -1) {
	        return array[minBiggerIdx];
	    }
	    return array[general_1.findMaxValueIndex(array, getBucketSize)];
	}
	function generateGranularitySet(allGranularities, bucketedBy) {
	    var start = general_1.findFirstBiggerIndex(allGranularities, bucketedBy, getBucketSize);
	    var returnGranularities = allGranularities.slice(start, start + MENU_LENGTH);
	    if (general_1.findExactIndex(returnGranularities, bucketedBy, getBucketSize) === -1) {
	        returnGranularities = [bucketedBy].concat(returnGranularities.slice(0, returnGranularities.length - 1));
	    }
	    return returnGranularities;
	}
	function granularityFromJS(input) {
	    if (typeof input === 'number')
	        return plywood_1.NumberBucketAction.fromJS({ size: input });
	    if (typeof input === 'string')
	        return plywood_1.TimeBucketAction.fromJS({ duration: input });
	    if (typeof input === "object") {
	        if (!general_1.hasOwnProperty(input, 'action')) {
	            throw new Error("could not recognize object as action");
	        }
	        return plywood_1.Action.fromJS(input);
	    }
	    throw new Error("input should be of type number, string, or action");
	}
	exports.granularityFromJS = granularityFromJS;
	function granularityToString(input) {
	    if (input instanceof plywood_1.TimeBucketAction) {
	        return input.duration.toString();
	    }
	    else if (input instanceof plywood_1.NumberBucketAction) {
	        return input.size.toString();
	    }
	    throw new Error("unrecognized granularity: " + input + " must be of type TimeBucketAction or NumberBucketAction");
	}
	exports.granularityToString = granularityToString;
	function granularityEquals(g1, g2) {
	    if (!Boolean(g1) === Boolean(g2))
	        return false;
	    if (g1 === g2)
	        return true;
	    return g1.equals(g2);
	}
	exports.granularityEquals = granularityEquals;
	function granularityToJS(input) {
	    var js = input.toJS();
	    if (js.action === 'timeBucket') {
	        if (Object.keys(js).length === 2)
	            return js.duration;
	    }
	    if (js.action === 'numberBucket') {
	        if (Object.keys(js).length === 2)
	            return js.size;
	    }
	    return js;
	}
	exports.granularityToJS = granularityToJS;
	function updateBucketSize(existing, newInput) {
	    if (newInput instanceof plywood_1.TimeBucketAction) {
	        return new plywood_1.TimeBucketAction({
	            duration: newInput.duration,
	            timezone: existing.timezone
	        });
	    }
	    else if (newInput instanceof plywood_1.NumberBucketAction) {
	        var value = { size: newInput.size };
	        if (existing.offset)
	            value.offset = existing.offset;
	        return new plywood_1.NumberBucketAction(value);
	    }
	    throw new Error("unrecognized granularity: " + newInput + " must be of type TimeBucket or NumberBucket");
	}
	exports.updateBucketSize = updateBucketSize;
	function getGranularities(kind, bucketedBy, coarse) {
	    var kindHelper = getHelperForKind(kind);
	    var coarseGranularities = kindHelper.coarseGranularities;
	    if (!bucketedBy)
	        return coarse && coarseGranularities ? coarseGranularities : kindHelper.defaultGranularities;
	    var allGranularities = kindHelper.supportedGranularities(bucketedBy);
	    return generateGranularitySet(allGranularities, bucketedBy);
	}
	exports.getGranularities = getGranularities;
	function getDefaultGranularityForKind(kind, bucketedBy, customGranularities) {
	    if (bucketedBy)
	        return bucketedBy;
	    if (customGranularities)
	        return customGranularities[2];
	    return getHelperForKind(kind).defaultGranularity;
	}
	exports.getDefaultGranularityForKind = getDefaultGranularityForKind;
	function getBestGranularityForRange(inputRange, bigChecker, bucketedBy, customGranularities) {
	    return bucketUnitToGranularity(getBestBucketUnitForRange(inputRange, bigChecker, bucketedBy, customGranularities));
	}
	exports.getBestGranularityForRange = getBestGranularityForRange;
	function getBestBucketUnitForRange(inputRange, bigChecker, bucketedBy, customGranularities) {
	    var rangeLength = Math.abs(endValue(inputRange) - startValue(inputRange));
	    var rangeHelper = getHelperForRange(inputRange);
	    var bucketLength = bucketedBy ? getBucketSize(bucketedBy) : 0;
	    var checkPoints = bigChecker && rangeHelper.coarseCheckers ? rangeHelper.coarseCheckers : rangeHelper.checkers;
	    for (var i = 0; i < checkPoints.length; i++) {
	        var checkPoint = checkPoints[i].checkPoint;
	        var returnVal = granularityFromJS(checkPoints[i].returnValue);
	        if (rangeLength > checkPoint || bucketLength > checkPoint) {
	            if (bucketedBy) {
	                var granArray = customGranularities || getGranularities(rangeHelper.dimensionKind, bucketedBy);
	                var closest = general_1.findBiggerClosestToIdeal(granArray, bucketedBy, returnVal, getBucketSize);
	                if (closest === null)
	                    return getBucketUnit(rangeHelper.defaultGranularity);
	                return getBucketUnit(closest);
	            }
	            else {
	                if (!customGranularities)
	                    return getBucketUnit(returnVal);
	                return getBucketUnit(findBestMatch(customGranularities, returnVal));
	            }
	        }
	    }
	    var minBucket = customGranularities ? customGranularities[general_1.findMinValueIndex(customGranularities, getBucketSize)] : rangeHelper.minGranularity;
	    var granularity = bucketLength > getBucketSize(minBucket) ? bucketedBy : minBucket;
	    return getBucketUnit(granularity);
	}
	exports.getBestBucketUnitForRange = getBestBucketUnitForRange;
	function getLineChartTicks(range, timezone) {
	    if (range instanceof plywood_1.TimeRange) {
	        var _a = range, start = _a.start, end = _a.end;
	        var tickDuration = getBestBucketUnitForRange(range, true);
	        return tickDuration.materialize(start, end, timezone);
	    }
	    else {
	        var _b = range, start = _b.start, end = _b.end;
	        var unit = getBestBucketUnitForRange(range, true);
	        var values = [];
	        var iter = Math.round(start * unit) / unit;
	        while (iter <= end) {
	            values.push(iter);
	            iter += unit;
	        }
	        return values;
	    }
	}
	exports.getLineChartTicks = getLineChartTicks;


/***/ },
/* 212 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var immutable_class_1 = __webpack_require__(193);
	var numeral = __webpack_require__(213);
	var plywood_1 = __webpack_require__(199);
	var general_1 = __webpack_require__(209);
	function formatFnFactory(format) {
	    return function (n) {
	        if (isNaN(n) || !isFinite(n))
	            return '-';
	        return numeral(n).format(format);
	    };
	}
	var Measure = (function (_super) {
	    __extends(Measure, _super);
	    function Measure(parameters) {
	        _super.call(this, parameters);
	        this.title = this.title || general_1.makeTitle(this.name);
	        this.expression = plywood_1.Expression.parse(this.formula);
	        this.formatFn = formatFnFactory(this.getFormat());
	    }
	    Measure.isMeasure = function (candidate) {
	        return immutable_class_1.isInstanceOf(candidate, Measure);
	    };
	    Measure.getMeasure = function (measures, measureName) {
	        if (!measureName)
	            return null;
	        measureName = measureName.toLowerCase();
	        return measures.find(function (measure) { return measure.name.toLowerCase() === measureName; });
	    };
	    Measure.getAggregateReferences = function (ex) {
	        var references = [];
	        ex.forEach(function (ex) {
	            if (ex instanceof plywood_1.ChainExpression) {
	                var actions = ex.actions;
	                for (var _i = 0, actions_1 = actions; _i < actions_1.length; _i++) {
	                    var action = actions_1[_i];
	                    if (action.isAggregate()) {
	                        references = references.concat(action.getFreeReferences());
	                    }
	                }
	            }
	        });
	        return plywood_1.deduplicateSort(references);
	    };
	    Measure.getCountDistinctReferences = function (ex) {
	        var references = [];
	        ex.forEach(function (ex) {
	            if (ex instanceof plywood_1.ChainExpression) {
	                var actions = ex.actions;
	                for (var _i = 0, actions_2 = actions; _i < actions_2.length; _i++) {
	                    var action = actions_2[_i];
	                    if (action.action === 'countDistinct') {
	                        references = references.concat(action.getFreeReferences());
	                    }
	                }
	            }
	        });
	        return plywood_1.deduplicateSort(references);
	    };
	    Measure.measuresFromAttributeInfo = function (attribute) {
	        var name = attribute.name, special = attribute.special;
	        var $main = plywood_1.$('main');
	        var ref = plywood_1.$(name);
	        if (special) {
	            if (special === 'unique' || special === 'theta') {
	                return [
	                    new Measure({
	                        name: general_1.makeUrlSafeName(name),
	                        formula: $main.countDistinct(ref).toString()
	                    })
	                ];
	            }
	            else if (special === 'histogram') {
	                return [
	                    new Measure({
	                        name: general_1.makeUrlSafeName(name + '_p98'),
	                        formula: $main.quantile(ref, 0.98).toString()
	                    })
	                ];
	            }
	        }
	        var expression = $main.sum(ref);
	        var makerAction = attribute.makerAction;
	        if (makerAction) {
	            switch (makerAction.action) {
	                case 'min':
	                    expression = $main.min(ref);
	                    break;
	                case 'max':
	                    expression = $main.max(ref);
	                    break;
	            }
	        }
	        return [new Measure({
	                name: general_1.makeUrlSafeName(name),
	                formula: expression.toString()
	            })];
	    };
	    Measure.fromJS = function (parameters) {
	        if (!parameters.formula) {
	            var parameterExpression = parameters.expression;
	            parameters.formula = (typeof parameterExpression === 'string' ? parameterExpression : plywood_1.$('main').sum(plywood_1.$(parameters.name)).toString());
	        }
	        return new Measure(immutable_class_1.BaseImmutable.jsToValue(Measure.PROPERTIES, parameters));
	    };
	    Measure.prototype.toApplyAction = function () {
	        var _a = this, name = _a.name, expression = _a.expression;
	        return new plywood_1.ApplyAction({
	            name: name,
	            expression: expression
	        });
	    };
	    Measure.prototype.formatDatum = function (datum) {
	        return this.formatFn(datum[this.name]);
	    };
	    Measure.prototype.getTitleWithUnits = function () {
	        if (this.units) {
	            return this.title + " (" + this.units + ")";
	        }
	        else {
	            return this.title;
	        }
	    };
	    Measure.DEFAULT_FORMAT = '0,0.0 a';
	    Measure.INTEGER_FORMAT = '0,0 a';
	    Measure.PROPERTIES = [
	        { name: 'name', validate: general_1.verifyUrlSafeName },
	        { name: 'title', defaultValue: null },
	        { name: 'units', defaultValue: null },
	        { name: 'formula' },
	        { name: 'format', defaultValue: Measure.DEFAULT_FORMAT }
	    ];
	    return Measure;
	}(immutable_class_1.BaseImmutable));
	exports.Measure = Measure;
	immutable_class_1.BaseImmutable.finalize(Measure);


/***/ },
/* 213 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
	 * numeral.js
	 * version : 1.5.3
	 * author : Adam Draper
	 * license : MIT
	 * http://adamwdraper.github.com/Numeral-js/
	 */

	(function () {

	    /************************************
	        Constants
	    ************************************/

	    var numeral,
	        VERSION = '1.5.3',
	        // internal storage for language config files
	        languages = {},
	        currentLanguage = 'en',
	        zeroFormat = null,
	        defaultFormat = '0,0',
	        // check for nodeJS
	        hasModule = (typeof module !== 'undefined' && module.exports);


	    /************************************
	        Constructors
	    ************************************/


	    // Numeral prototype object
	    function Numeral (number) {
	        this._value = number;
	    }

	    /**
	     * Implementation of toFixed() that treats floats more like decimals
	     *
	     * Fixes binary rounding issues (eg. (0.615).toFixed(2) === '0.61') that present
	     * problems for accounting- and finance-related software.
	     */
	    function toFixed (value, precision, roundingFunction, optionals) {
	        var power = Math.pow(10, precision),
	            optionalsRegExp,
	            output;
	            
	        //roundingFunction = (roundingFunction !== undefined ? roundingFunction : Math.round);
	        // Multiply up by precision, round accurately, then divide and use native toFixed():
	        output = (roundingFunction(value * power) / power).toFixed(precision);

	        if (optionals) {
	            optionalsRegExp = new RegExp('0{1,' + optionals + '}$');
	            output = output.replace(optionalsRegExp, '');
	        }

	        return output;
	    }

	    /************************************
	        Formatting
	    ************************************/

	    // determine what type of formatting we need to do
	    function formatNumeral (n, format, roundingFunction) {
	        var output;

	        // figure out what kind of format we are dealing with
	        if (format.indexOf('$') > -1) { // currency!!!!!
	            output = formatCurrency(n, format, roundingFunction);
	        } else if (format.indexOf('%') > -1) { // percentage
	            output = formatPercentage(n, format, roundingFunction);
	        } else if (format.indexOf(':') > -1) { // time
	            output = formatTime(n, format);
	        } else { // plain ol' numbers or bytes
	            output = formatNumber(n._value, format, roundingFunction);
	        }

	        // return string
	        return output;
	    }

	    // revert to number
	    function unformatNumeral (n, string) {
	        var stringOriginal = string,
	            thousandRegExp,
	            millionRegExp,
	            billionRegExp,
	            trillionRegExp,
	            suffixes = ['KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'],
	            bytesMultiplier = false,
	            power;

	        if (string.indexOf(':') > -1) {
	            n._value = unformatTime(string);
	        } else {
	            if (string === zeroFormat) {
	                n._value = 0;
	            } else {
	                if (languages[currentLanguage].delimiters.decimal !== '.') {
	                    string = string.replace(/\./g,'').replace(languages[currentLanguage].delimiters.decimal, '.');
	                }

	                // see if abbreviations are there so that we can multiply to the correct number
	                thousandRegExp = new RegExp('[^a-zA-Z]' + languages[currentLanguage].abbreviations.thousand + '(?:\\)|(\\' + languages[currentLanguage].currency.symbol + ')?(?:\\))?)?$');
	                millionRegExp = new RegExp('[^a-zA-Z]' + languages[currentLanguage].abbreviations.million + '(?:\\)|(\\' + languages[currentLanguage].currency.symbol + ')?(?:\\))?)?$');
	                billionRegExp = new RegExp('[^a-zA-Z]' + languages[currentLanguage].abbreviations.billion + '(?:\\)|(\\' + languages[currentLanguage].currency.symbol + ')?(?:\\))?)?$');
	                trillionRegExp = new RegExp('[^a-zA-Z]' + languages[currentLanguage].abbreviations.trillion + '(?:\\)|(\\' + languages[currentLanguage].currency.symbol + ')?(?:\\))?)?$');

	                // see if bytes are there so that we can multiply to the correct number
	                for (power = 0; power <= suffixes.length; power++) {
	                    bytesMultiplier = (string.indexOf(suffixes[power]) > -1) ? Math.pow(1024, power + 1) : false;

	                    if (bytesMultiplier) {
	                        break;
	                    }
	                }

	                // do some math to create our number
	                n._value = ((bytesMultiplier) ? bytesMultiplier : 1) * ((stringOriginal.match(thousandRegExp)) ? Math.pow(10, 3) : 1) * ((stringOriginal.match(millionRegExp)) ? Math.pow(10, 6) : 1) * ((stringOriginal.match(billionRegExp)) ? Math.pow(10, 9) : 1) * ((stringOriginal.match(trillionRegExp)) ? Math.pow(10, 12) : 1) * ((string.indexOf('%') > -1) ? 0.01 : 1) * (((string.split('-').length + Math.min(string.split('(').length-1, string.split(')').length-1)) % 2)? 1: -1) * Number(string.replace(/[^0-9\.]+/g, ''));

	                // round if we are talking about bytes
	                n._value = (bytesMultiplier) ? Math.ceil(n._value) : n._value;
	            }
	        }
	        return n._value;
	    }

	    function formatCurrency (n, format, roundingFunction) {
	        var symbolIndex = format.indexOf('$'),
	            openParenIndex = format.indexOf('('),
	            minusSignIndex = format.indexOf('-'),
	            space = '',
	            spliceIndex,
	            output;

	        // check for space before or after currency
	        if (format.indexOf(' $') > -1) {
	            space = ' ';
	            format = format.replace(' $', '');
	        } else if (format.indexOf('$ ') > -1) {
	            space = ' ';
	            format = format.replace('$ ', '');
	        } else {
	            format = format.replace('$', '');
	        }

	        // format the number
	        output = formatNumber(n._value, format, roundingFunction);

	        // position the symbol
	        if (symbolIndex <= 1) {
	            if (output.indexOf('(') > -1 || output.indexOf('-') > -1) {
	                output = output.split('');
	                spliceIndex = 1;
	                if (symbolIndex < openParenIndex || symbolIndex < minusSignIndex){
	                    // the symbol appears before the "(" or "-"
	                    spliceIndex = 0;
	                }
	                output.splice(spliceIndex, 0, languages[currentLanguage].currency.symbol + space);
	                output = output.join('');
	            } else {
	                output = languages[currentLanguage].currency.symbol + space + output;
	            }
	        } else {
	            if (output.indexOf(')') > -1) {
	                output = output.split('');
	                output.splice(-1, 0, space + languages[currentLanguage].currency.symbol);
	                output = output.join('');
	            } else {
	                output = output + space + languages[currentLanguage].currency.symbol;
	            }
	        }

	        return output;
	    }

	    function formatPercentage (n, format, roundingFunction) {
	        var space = '',
	            output,
	            value = n._value * 100;

	        // check for space before %
	        if (format.indexOf(' %') > -1) {
	            space = ' ';
	            format = format.replace(' %', '');
	        } else {
	            format = format.replace('%', '');
	        }

	        output = formatNumber(value, format, roundingFunction);
	        
	        if (output.indexOf(')') > -1 ) {
	            output = output.split('');
	            output.splice(-1, 0, space + '%');
	            output = output.join('');
	        } else {
	            output = output + space + '%';
	        }

	        return output;
	    }

	    function formatTime (n) {
	        var hours = Math.floor(n._value/60/60),
	            minutes = Math.floor((n._value - (hours * 60 * 60))/60),
	            seconds = Math.round(n._value - (hours * 60 * 60) - (minutes * 60));
	        return hours + ':' + ((minutes < 10) ? '0' + minutes : minutes) + ':' + ((seconds < 10) ? '0' + seconds : seconds);
	    }

	    function unformatTime (string) {
	        var timeArray = string.split(':'),
	            seconds = 0;
	        // turn hours and minutes into seconds and add them all up
	        if (timeArray.length === 3) {
	            // hours
	            seconds = seconds + (Number(timeArray[0]) * 60 * 60);
	            // minutes
	            seconds = seconds + (Number(timeArray[1]) * 60);
	            // seconds
	            seconds = seconds + Number(timeArray[2]);
	        } else if (timeArray.length === 2) {
	            // minutes
	            seconds = seconds + (Number(timeArray[0]) * 60);
	            // seconds
	            seconds = seconds + Number(timeArray[1]);
	        }
	        return Number(seconds);
	    }

	    function formatNumber (value, format, roundingFunction) {
	        var negP = false,
	            signed = false,
	            optDec = false,
	            abbr = '',
	            abbrK = false, // force abbreviation to thousands
	            abbrM = false, // force abbreviation to millions
	            abbrB = false, // force abbreviation to billions
	            abbrT = false, // force abbreviation to trillions
	            abbrForce = false, // force abbreviation
	            bytes = '',
	            ord = '',
	            abs = Math.abs(value),
	            suffixes = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'],
	            min,
	            max,
	            power,
	            w,
	            precision,
	            thousands,
	            d = '',
	            neg = false;

	        // check if number is zero and a custom zero format has been set
	        if (value === 0 && zeroFormat !== null) {
	            return zeroFormat;
	        } else {
	            // see if we should use parentheses for negative number or if we should prefix with a sign
	            // if both are present we default to parentheses
	            if (format.indexOf('(') > -1) {
	                negP = true;
	                format = format.slice(1, -1);
	            } else if (format.indexOf('+') > -1) {
	                signed = true;
	                format = format.replace(/\+/g, '');
	            }

	            // see if abbreviation is wanted
	            if (format.indexOf('a') > -1) {
	                // check if abbreviation is specified
	                abbrK = format.indexOf('aK') >= 0;
	                abbrM = format.indexOf('aM') >= 0;
	                abbrB = format.indexOf('aB') >= 0;
	                abbrT = format.indexOf('aT') >= 0;
	                abbrForce = abbrK || abbrM || abbrB || abbrT;

	                // check for space before abbreviation
	                if (format.indexOf(' a') > -1) {
	                    abbr = ' ';
	                    format = format.replace(' a', '');
	                } else {
	                    format = format.replace('a', '');
	                }

	                if (abs >= Math.pow(10, 12) && !abbrForce || abbrT) {
	                    // trillion
	                    abbr = abbr + languages[currentLanguage].abbreviations.trillion;
	                    value = value / Math.pow(10, 12);
	                } else if (abs < Math.pow(10, 12) && abs >= Math.pow(10, 9) && !abbrForce || abbrB) {
	                    // billion
	                    abbr = abbr + languages[currentLanguage].abbreviations.billion;
	                    value = value / Math.pow(10, 9);
	                } else if (abs < Math.pow(10, 9) && abs >= Math.pow(10, 6) && !abbrForce || abbrM) {
	                    // million
	                    abbr = abbr + languages[currentLanguage].abbreviations.million;
	                    value = value / Math.pow(10, 6);
	                } else if (abs < Math.pow(10, 6) && abs >= Math.pow(10, 3) && !abbrForce || abbrK) {
	                    // thousand
	                    abbr = abbr + languages[currentLanguage].abbreviations.thousand;
	                    value = value / Math.pow(10, 3);
	                }
	            }

	            // see if we are formatting bytes
	            if (format.indexOf('b') > -1) {
	                // check for space before
	                if (format.indexOf(' b') > -1) {
	                    bytes = ' ';
	                    format = format.replace(' b', '');
	                } else {
	                    format = format.replace('b', '');
	                }

	                for (power = 0; power <= suffixes.length; power++) {
	                    min = Math.pow(1024, power);
	                    max = Math.pow(1024, power+1);

	                    if (value >= min && value < max) {
	                        bytes = bytes + suffixes[power];
	                        if (min > 0) {
	                            value = value / min;
	                        }
	                        break;
	                    }
	                }
	            }

	            // see if ordinal is wanted
	            if (format.indexOf('o') > -1) {
	                // check for space before
	                if (format.indexOf(' o') > -1) {
	                    ord = ' ';
	                    format = format.replace(' o', '');
	                } else {
	                    format = format.replace('o', '');
	                }

	                ord = ord + languages[currentLanguage].ordinal(value);
	            }

	            if (format.indexOf('[.]') > -1) {
	                optDec = true;
	                format = format.replace('[.]', '.');
	            }

	            w = value.toString().split('.')[0];
	            precision = format.split('.')[1];
	            thousands = format.indexOf(',');

	            if (precision) {
	                if (precision.indexOf('[') > -1) {
	                    precision = precision.replace(']', '');
	                    precision = precision.split('[');
	                    d = toFixed(value, (precision[0].length + precision[1].length), roundingFunction, precision[1].length);
	                } else {
	                    d = toFixed(value, precision.length, roundingFunction);
	                }

	                w = d.split('.')[0];

	                if (d.split('.')[1].length) {
	                    d = languages[currentLanguage].delimiters.decimal + d.split('.')[1];
	                } else {
	                    d = '';
	                }

	                if (optDec && Number(d.slice(1)) === 0) {
	                    d = '';
	                }
	            } else {
	                w = toFixed(value, null, roundingFunction);
	            }

	            // format number
	            if (w.indexOf('-') > -1) {
	                w = w.slice(1);
	                neg = true;
	            }

	            if (thousands > -1) {
	                w = w.toString().replace(/(\d)(?=(\d{3})+(?!\d))/g, '$1' + languages[currentLanguage].delimiters.thousands);
	            }

	            if (format.indexOf('.') === 0) {
	                w = '';
	            }

	            return ((negP && neg) ? '(' : '') + ((!negP && neg) ? '-' : '') + ((!neg && signed) ? '+' : '') + w + d + ((ord) ? ord : '') + ((abbr) ? abbr : '') + ((bytes) ? bytes : '') + ((negP && neg) ? ')' : '');
	        }
	    }

	    /************************************
	        Top Level Functions
	    ************************************/

	    numeral = function (input) {
	        if (numeral.isNumeral(input)) {
	            input = input.value();
	        } else if (input === 0 || typeof input === 'undefined') {
	            input = 0;
	        } else if (!Number(input)) {
	            input = numeral.fn.unformat(input);
	        }

	        return new Numeral(Number(input));
	    };

	    // version number
	    numeral.version = VERSION;

	    // compare numeral object
	    numeral.isNumeral = function (obj) {
	        return obj instanceof Numeral;
	    };

	    // This function will load languages and then set the global language.  If
	    // no arguments are passed in, it will simply return the current global
	    // language key.
	    numeral.language = function (key, values) {
	        if (!key) {
	            return currentLanguage;
	        }

	        if (key && !values) {
	            if(!languages[key]) {
	                throw new Error('Unknown language : ' + key);
	            }
	            currentLanguage = key;
	        }

	        if (values || !languages[key]) {
	            loadLanguage(key, values);
	        }

	        return numeral;
	    };
	    
	    // This function provides access to the loaded language data.  If
	    // no arguments are passed in, it will simply return the current
	    // global language object.
	    numeral.languageData = function (key) {
	        if (!key) {
	            return languages[currentLanguage];
	        }
	        
	        if (!languages[key]) {
	            throw new Error('Unknown language : ' + key);
	        }
	        
	        return languages[key];
	    };

	    numeral.language('en', {
	        delimiters: {
	            thousands: ',',
	            decimal: '.'
	        },
	        abbreviations: {
	            thousand: 'k',
	            million: 'm',
	            billion: 'b',
	            trillion: 't'
	        },
	        ordinal: function (number) {
	            var b = number % 10;
	            return (~~ (number % 100 / 10) === 1) ? 'th' :
	                (b === 1) ? 'st' :
	                (b === 2) ? 'nd' :
	                (b === 3) ? 'rd' : 'th';
	        },
	        currency: {
	            symbol: '$'
	        }
	    });

	    numeral.zeroFormat = function (format) {
	        zeroFormat = typeof(format) === 'string' ? format : null;
	    };

	    numeral.defaultFormat = function (format) {
	        defaultFormat = typeof(format) === 'string' ? format : '0.0';
	    };

	    /************************************
	        Helpers
	    ************************************/

	    function loadLanguage(key, values) {
	        languages[key] = values;
	    }

	    /************************************
	        Floating-point helpers
	    ************************************/

	    // The floating-point helper functions and implementation
	    // borrows heavily from sinful.js: http://guipn.github.io/sinful.js/

	    /**
	     * Array.prototype.reduce for browsers that don't support it
	     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce#Compatibility
	     */
	    if ('function' !== typeof Array.prototype.reduce) {
	        Array.prototype.reduce = function (callback, opt_initialValue) {
	            'use strict';
	            
	            if (null === this || 'undefined' === typeof this) {
	                // At the moment all modern browsers, that support strict mode, have
	                // native implementation of Array.prototype.reduce. For instance, IE8
	                // does not support strict mode, so this check is actually useless.
	                throw new TypeError('Array.prototype.reduce called on null or undefined');
	            }
	            
	            if ('function' !== typeof callback) {
	                throw new TypeError(callback + ' is not a function');
	            }

	            var index,
	                value,
	                length = this.length >>> 0,
	                isValueSet = false;

	            if (1 < arguments.length) {
	                value = opt_initialValue;
	                isValueSet = true;
	            }

	            for (index = 0; length > index; ++index) {
	                if (this.hasOwnProperty(index)) {
	                    if (isValueSet) {
	                        value = callback(value, this[index], index, this);
	                    } else {
	                        value = this[index];
	                        isValueSet = true;
	                    }
	                }
	            }

	            if (!isValueSet) {
	                throw new TypeError('Reduce of empty array with no initial value');
	            }

	            return value;
	        };
	    }

	    
	    /**
	     * Computes the multiplier necessary to make x >= 1,
	     * effectively eliminating miscalculations caused by
	     * finite precision.
	     */
	    function multiplier(x) {
	        var parts = x.toString().split('.');
	        if (parts.length < 2) {
	            return 1;
	        }
	        return Math.pow(10, parts[1].length);
	    }

	    /**
	     * Given a variable number of arguments, returns the maximum
	     * multiplier that must be used to normalize an operation involving
	     * all of them.
	     */
	    function correctionFactor() {
	        var args = Array.prototype.slice.call(arguments);
	        return args.reduce(function (prev, next) {
	            var mp = multiplier(prev),
	                mn = multiplier(next);
	        return mp > mn ? mp : mn;
	        }, -Infinity);
	    }        


	    /************************************
	        Numeral Prototype
	    ************************************/


	    numeral.fn = Numeral.prototype = {

	        clone : function () {
	            return numeral(this);
	        },

	        format : function (inputString, roundingFunction) {
	            return formatNumeral(this, 
	                  inputString ? inputString : defaultFormat, 
	                  (roundingFunction !== undefined) ? roundingFunction : Math.round
	              );
	        },

	        unformat : function (inputString) {
	            if (Object.prototype.toString.call(inputString) === '[object Number]') { 
	                return inputString; 
	            }
	            return unformatNumeral(this, inputString ? inputString : defaultFormat);
	        },

	        value : function () {
	            return this._value;
	        },

	        valueOf : function () {
	            return this._value;
	        },

	        set : function (value) {
	            this._value = Number(value);
	            return this;
	        },

	        add : function (value) {
	            var corrFactor = correctionFactor.call(null, this._value, value);
	            function cback(accum, curr, currI, O) {
	                return accum + corrFactor * curr;
	            }
	            this._value = [this._value, value].reduce(cback, 0) / corrFactor;
	            return this;
	        },

	        subtract : function (value) {
	            var corrFactor = correctionFactor.call(null, this._value, value);
	            function cback(accum, curr, currI, O) {
	                return accum - corrFactor * curr;
	            }
	            this._value = [value].reduce(cback, this._value * corrFactor) / corrFactor;            
	            return this;
	        },

	        multiply : function (value) {
	            function cback(accum, curr, currI, O) {
	                var corrFactor = correctionFactor(accum, curr);
	                return (accum * corrFactor) * (curr * corrFactor) /
	                    (corrFactor * corrFactor);
	            }
	            this._value = [this._value, value].reduce(cback, 1);
	            return this;
	        },

	        divide : function (value) {
	            function cback(accum, curr, currI, O) {
	                var corrFactor = correctionFactor(accum, curr);
	                return (accum * corrFactor) / (curr * corrFactor);
	            }
	            this._value = [this._value, value].reduce(cback);            
	            return this;
	        },

	        difference : function (value) {
	            return Math.abs(numeral(this._value).subtract(value).value());
	        }

	    };

	    /************************************
	        Exposing Numeral
	    ************************************/

	    // CommonJS module is defined
	    if (hasModule) {
	        module.exports = numeral;
	    }

	    /*global ender:false */
	    if (typeof ender === 'undefined') {
	        // here, `this` means `window` in the browser, or `global` on the server
	        // add `numeral` as a global object via a string identifier,
	        // for Closure Compiler 'advanced' mode
	        this['numeral'] = numeral;
	    }

	    /*global define:false */
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {
	            return numeral;
	        }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	    }
	}).call(this);


/***/ },
/* 214 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var immutable_class_1 = __webpack_require__(193);
	var chronoshift_1 = __webpack_require__(191);
	var plywood_1 = __webpack_require__(199);
	function isLiteral(ex) {
	    if (ex instanceof plywood_1.LiteralExpression)
	        return plywood_1.TimeRange.isTimeRange(ex.value) || plywood_1.Set.isSet(ex.value) || plywood_1.NumberRange.isNumberRange(ex.value);
	    return false;
	}
	function isRelative(ex) {
	    if (ex instanceof plywood_1.ChainExpression) {
	        if (ex.type !== 'TIME_RANGE')
	            return false;
	        var expression = ex.expression;
	        if (expression instanceof plywood_1.RefExpression) {
	            return expression.name === FilterClause.NOW_REF_NAME || expression.name === FilterClause.MAX_TIME_REF_NAME;
	        }
	    }
	    return false;
	}
	function selectionsEqual(a, b) {
	    if (!Boolean(a) === Boolean(b))
	        return false;
	    if (a === b)
	        return true;
	    if (!a !== !b)
	        return false;
	    if (typeof a !== typeof b)
	        return false;
	    if (typeof a === 'string' && typeof b === 'string')
	        return a === b;
	    return a.equals(b);
	}
	var check;
	var FilterClause = (function () {
	    function FilterClause(parameters) {
	        var expression = parameters.expression, selection = parameters.selection, exclude = parameters.exclude, action = parameters.action;
	        if (action)
	            this.action = action;
	        this.expression = expression;
	        if (isRelative(selection)) {
	            this.relative = true;
	        }
	        else if (isLiteral(selection)) {
	            this.relative = false;
	        }
	        else if (action === 'match' && typeof selection !== 'string') {
	            throw new Error("invalid match selection: " + selection);
	        }
	        else if (action === 'contains' && !(selection instanceof plywood_1.Expression)) {
	            throw new Error("invalid contains expression: " + selection);
	        }
	        this.selection = selection;
	        this.exclude = exclude || false;
	    }
	    FilterClause.isFilterClause = function (candidate) {
	        return immutable_class_1.isInstanceOf(candidate, FilterClause);
	    };
	    FilterClause.evaluate = function (selection, now, maxTime, timezone) {
	        if (!selection)
	            return null;
	        var maxTimeMinuteTop = chronoshift_1.minute.ceil(maxTime || now, timezone);
	        var datum = {};
	        datum[FilterClause.NOW_REF_NAME] = now;
	        datum[FilterClause.MAX_TIME_REF_NAME] = maxTimeMinuteTop;
	        return selection.defineEnvironment({ timezone: timezone }).getFn()(datum, {});
	    };
	    FilterClause.fromExpression = function (ex) {
	        var exclude = false;
	        if (ex.lastAction() instanceof plywood_1.NotAction) {
	            ex = ex.popAction();
	            exclude = true;
	        }
	        var lastAction = ex.lastAction();
	        var dimExpression = ex.popAction();
	        if (lastAction instanceof plywood_1.InAction || lastAction instanceof plywood_1.OverlapAction || lastAction instanceof plywood_1.ContainsAction) {
	            var selection = lastAction.expression;
	            var action = lastAction.action;
	            return new FilterClause({
	                action: action,
	                expression: dimExpression,
	                selection: selection,
	                exclude: exclude
	            });
	        }
	        if (lastAction instanceof plywood_1.MatchAction) {
	            var regexp = lastAction.regexp;
	            return new FilterClause({
	                action: 'match',
	                expression: dimExpression,
	                selection: regexp,
	                exclude: exclude
	            });
	        }
	        throw new Error("invalid expression " + ex.toString());
	    };
	    FilterClause.fromJS = function (parameters) {
	        var selection = parameters.selection, action = parameters.action;
	        var value = {
	            action: action,
	            expression: plywood_1.Expression.fromJS(parameters.expression),
	            selection: (typeof selection !== "string") ? plywood_1.Expression.fromJS(selection) : selection,
	            exclude: Boolean(parameters.exclude)
	        };
	        return new FilterClause(value);
	    };
	    FilterClause.prototype.valueOf = function () {
	        return {
	            action: this.action,
	            expression: this.expression,
	            selection: this.selection,
	            exclude: this.exclude
	        };
	    };
	    FilterClause.prototype.toJS = function () {
	        var _a = this, selection = _a.selection, action = _a.action;
	        var js = {
	            expression: this.expression.toJS(),
	            selection: selection instanceof plywood_1.Expression ? selection.toJS() : selection
	        };
	        if (this.exclude)
	            js.exclude = true;
	        if (action)
	            js.action = action;
	        return js;
	    };
	    FilterClause.prototype.toJSON = function () {
	        return this.toJS();
	    };
	    FilterClause.prototype.toString = function () {
	        return "[FilterClause: " + this.expression.toString() + "]";
	    };
	    FilterClause.prototype.equals = function (other) {
	        return FilterClause.isFilterClause(other) &&
	            this.action === other.action &&
	            this.expression.equals(other.expression) &&
	            selectionsEqual(this.selection, other.selection) &&
	            this.exclude === other.exclude;
	    };
	    FilterClause.prototype.toExpression = function () {
	        var _a = this, expression = _a.expression, selection = _a.selection, action = _a.action;
	        var ex = null;
	        if (selection instanceof plywood_1.Expression) {
	            var selectionType = selection.type;
	            if (selectionType === 'TIME_RANGE' || selectionType === 'SET/TIME_RANGE' || selectionType === 'NUMBER_RANGE' || selectionType === 'SET/NUMBER_RANGE') {
	                ex = expression.in(selection);
	            }
	            else if (action === 'contains') {
	                ex = expression.contains(selection);
	            }
	            else {
	                ex = expression.overlap(selection);
	            }
	        }
	        else if (action === 'match') {
	            ex = expression.match(selection);
	        }
	        if (this.exclude)
	            ex = ex.not();
	        return ex;
	    };
	    FilterClause.prototype.getLiteralSet = function () {
	        var selection = this.selection;
	        if (this.relative)
	            return null;
	        if (selection instanceof plywood_1.Expression) {
	            var v = selection.getLiteralValue();
	            return plywood_1.Set.isSet(v) ? v : plywood_1.Set.fromJS([v]);
	        }
	        else {
	            return plywood_1.Set.fromJS([selection]);
	        }
	    };
	    FilterClause.prototype.getExtent = function () {
	        var mySet = this.getLiteralSet();
	        return mySet ? mySet.extent() : null;
	    };
	    FilterClause.prototype.isLessThanFullDay = function () {
	        var extent = this.getExtent();
	        if (!extent)
	            return false;
	        return extent.end.valueOf() - extent.start.valueOf() < chronoshift_1.day.canonicalLength;
	    };
	    FilterClause.prototype.changeSelection = function (selection) {
	        var value = this.valueOf();
	        value.selection = selection;
	        return new FilterClause(value);
	    };
	    FilterClause.prototype.changeExclude = function (exclude) {
	        var value = this.valueOf();
	        value.exclude = exclude;
	        return new FilterClause(value);
	    };
	    FilterClause.prototype.evaluate = function (now, maxTime, timezone) {
	        if (!this.relative)
	            return this;
	        return this.changeSelection(plywood_1.r(FilterClause.evaluate(this.selection, now, maxTime, timezone)));
	    };
	    FilterClause.NOW_REF_NAME = 'n';
	    FilterClause.MAX_TIME_REF_NAME = 'm';
	    return FilterClause;
	}());
	exports.FilterClause = FilterClause;
	check = FilterClause;


/***/ },
/* 215 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var immutable_1 = __webpack_require__(210);
	var immutable_class_1 = __webpack_require__(193);
	var plywood_1 = __webpack_require__(199);
	var general_1 = __webpack_require__(209);
	var dimension_1 = __webpack_require__(208);
	var filter_clause_1 = __webpack_require__(214);
	function withholdClause(clauses, clause, allowIndex) {
	    return clauses.filter(function (c, i) {
	        return i === allowIndex || !c.equals(clause);
	    });
	}
	function swapClause(clauses, clause, other, allowIndex) {
	    return clauses.map(function (c, i) {
	        return (i === allowIndex || !c.equals(clause)) ? c : other;
	    });
	}
	function dateToFileString(date) {
	    return date.toISOString()
	        .replace('T', '_')
	        .replace('Z', '')
	        .replace('.000', '');
	}
	var check;
	var Filter = (function () {
	    function Filter(parameters) {
	        this.clauses = parameters;
	    }
	    Filter.isFilter = function (candidate) {
	        return immutable_class_1.isInstanceOf(candidate, Filter);
	    };
	    Filter.fromClause = function (clause) {
	        if (!clause)
	            throw new Error('must have clause');
	        return new Filter(immutable_1.List([clause]));
	    };
	    Filter.fromJS = function (parameters) {
	        var expression = plywood_1.Expression.fromJSLoose(parameters);
	        var clauses = null;
	        if (expression.equals(plywood_1.Expression.TRUE)) {
	            clauses = [];
	        }
	        else {
	            clauses = (expression.getExpressionPattern('and') || [expression]).map(function (c) { return filter_clause_1.FilterClause.fromExpression(c); });
	        }
	        return new Filter(immutable_1.List(clauses));
	    };
	    Filter.prototype.valueOf = function () {
	        return this.clauses;
	    };
	    Filter.prototype.toJS = function () {
	        return this.toExpression().toJS();
	    };
	    Filter.prototype.toJSON = function () {
	        return this.toJS();
	    };
	    Filter.prototype.toString = function () {
	        return this.clauses.map(function (clause) { return clause.toString(); }).join(' and ');
	    };
	    Filter.prototype.equals = function (other) {
	        return Filter.isFilter(other) &&
	            general_1.immutableListsEqual(this.clauses, other.clauses);
	    };
	    Filter.prototype.replaceByIndex = function (index, replace) {
	        var clauses = this.clauses;
	        if (clauses.size === index)
	            return this.insertByIndex(index, replace);
	        var replacedClause = clauses.get(index);
	        clauses = clauses.map(function (c, i) { return i === index ? replace : c; });
	        clauses = swapClause(clauses, replace, replacedClause, index);
	        return new Filter(clauses);
	    };
	    Filter.prototype.insertByIndex = function (index, insert) {
	        var clauses = this.clauses;
	        clauses = clauses.splice(index, 0, insert);
	        clauses = withholdClause(clauses, insert, index);
	        return new Filter(clauses);
	    };
	    Filter.prototype.empty = function () {
	        return this.clauses.size === 0;
	    };
	    Filter.prototype.single = function () {
	        return this.clauses.size === 1;
	    };
	    Filter.prototype.length = function () {
	        return this.clauses.size;
	    };
	    Filter.prototype.toExpression = function () {
	        var clauses = this.clauses.toArray().map(function (clause) {
	            return clause.toExpression();
	        });
	        switch (clauses.length) {
	            case 0:
	                return plywood_1.Expression.TRUE;
	            case 1:
	                return clauses[0];
	            default:
	                return plywood_1.Expression.and(clauses);
	        }
	    };
	    Filter.prototype.isEmpty = function () {
	        return this.clauses.isEmpty();
	    };
	    Filter.prototype.isRelative = function () {
	        return this.clauses.some(function (clause) { return clause.relative; });
	    };
	    Filter.prototype.getSpecificFilter = function (now, maxTime, timezone) {
	        if (!this.isRelative())
	            return this;
	        return new Filter(this.clauses.map(function (c) { return c.evaluate(now, maxTime, timezone); }));
	    };
	    Filter.prototype.indexOfClause = function (attribute) {
	        return this.clauses.findIndex(function (clause) { return clause.expression.equals(attribute); });
	    };
	    Filter.prototype.clauseForExpression = function (attribute) {
	        return this.clauses.find(function (clause) { return clause.expression.equals(attribute); });
	    };
	    Filter.prototype.filteredOn = function (attribute) {
	        return this.indexOfClause(attribute) !== -1;
	    };
	    Filter.prototype.filteredOnValue = function (attribute, value) {
	        var clauses = this.clauses;
	        var index = this.indexOfClause(attribute);
	        if (index === -1)
	            return false;
	        return clauses.get(index).getLiteralSet().contains(value);
	    };
	    Filter.prototype.addValue = function (attribute, value) {
	        var clauses = this.clauses;
	        var index = this.indexOfClause(attribute);
	        if (index === -1) {
	            return new Filter(clauses.concat(new filter_clause_1.FilterClause({
	                expression: attribute,
	                selection: plywood_1.r(plywood_1.Set.fromJS([value]))
	            })));
	        }
	        else {
	            var clause = clauses.get(index);
	            var newSet = clause.getLiteralSet().add(value);
	            return new Filter(clauses.splice(index, 1, clause.changeSelection(plywood_1.r(newSet))));
	        }
	    };
	    Filter.prototype.remove = function (attribute) {
	        var clauses = this.clauses;
	        var index = this.indexOfClause(attribute);
	        if (index === -1)
	            return this;
	        return new Filter(clauses.delete(index));
	    };
	    Filter.prototype.removeValue = function (attribute, value) {
	        var clauses = this.clauses;
	        var index = this.indexOfClause(attribute);
	        if (index === -1)
	            return this;
	        var clause = clauses.get(index);
	        var newSet = clause.getLiteralSet().remove(value);
	        if (newSet.empty()) {
	            return new Filter(clauses.delete(index));
	        }
	        else {
	            clauses = clauses.splice(index, 1, clause.changeSelection(plywood_1.r(newSet)));
	            return new Filter(clauses);
	        }
	    };
	    Filter.prototype.toggleValue = function (attribute, value) {
	        return this.filteredOnValue(attribute, value) ? this.removeValue(attribute, value) : this.addValue(attribute, value);
	    };
	    Filter.prototype.getSelection = function (attribute) {
	        var clauses = this.clauses;
	        var index = this.indexOfClause(attribute);
	        if (index === -1)
	            return null;
	        return clauses.get(index).selection;
	    };
	    Filter.prototype.setSelection = function (attribute, selection) {
	        var clauses = this.clauses;
	        var index = this.indexOfClause(attribute);
	        var newClause = new filter_clause_1.FilterClause({
	            expression: attribute,
	            selection: selection
	        });
	        if (index === -1) {
	            clauses = clauses.push(newClause);
	        }
	        else {
	            clauses = clauses.splice(index, 1, newClause);
	        }
	        return new Filter(clauses);
	    };
	    Filter.prototype.getExtent = function (attribute) {
	        var clauses = this.clauses;
	        var index = this.indexOfClause(attribute);
	        if (index === -1)
	            return null;
	        return clauses.get(index).getExtent();
	    };
	    Filter.prototype.getFileString = function (timeAttribute) {
	        var nonTimeClauseSize = this.clauses.size;
	        var timeRange = this.getExtent(timeAttribute);
	        var nonTimeFilters = (function (nonTimeClauseSize) {
	            return nonTimeClauseSize === 0 ? "" : "_filters-" + nonTimeClauseSize;
	        });
	        if (timeRange) {
	            var start = timeRange.start, end = timeRange.end;
	            nonTimeClauseSize--;
	            return dateToFileString(start) + "_" + dateToFileString(end) + nonTimeFilters(nonTimeClauseSize);
	        }
	        return nonTimeFilters(nonTimeClauseSize);
	    };
	    Filter.prototype.getLiteralSet = function (attribute) {
	        var clauses = this.clauses;
	        var index = this.indexOfClause(attribute);
	        if (index === -1)
	            return null;
	        return clauses.get(index).getLiteralSet();
	    };
	    Filter.prototype.getClausesForDimension = function (dimension) {
	        return this.clauses.filter(function (clause) {
	            return clause.expression.equals(dimension.expression);
	        });
	    };
	    Filter.prototype.getModeForDimension = function (dimension) {
	        var dimensionClauses = this.getClausesForDimension(dimension);
	        if (dimensionClauses.size > 0) {
	            if (dimensionClauses.every(function (clause) { return clause.action === 'match'; }))
	                return 'regex';
	            if (dimensionClauses.every(function (clause) { return clause.action === 'contains'; }))
	                return 'contains';
	            if (dimensionClauses.every(function (clause) { return clause.exclude; }))
	                return 'exclude';
	            return 'include';
	        }
	        return undefined;
	    };
	    Filter.prototype.setClause = function (expression) {
	        var expressionAttribute = expression.expression;
	        var added = false;
	        var newOperands = this.clauses.map(function (clause) {
	            if (clause.expression.equals(expressionAttribute)) {
	                added = true;
	                return expression;
	            }
	            else {
	                return clause;
	            }
	        });
	        if (!added) {
	            newOperands = newOperands.push(expression);
	        }
	        return new Filter(newOperands);
	    };
	    Filter.prototype.applyDelta = function (delta) {
	        var newFilter = this;
	        var deltaClauses = delta.clauses;
	        deltaClauses.forEach(function (deltaClause) {
	            newFilter = newFilter.setClause(deltaClause);
	        });
	        return newFilter;
	    };
	    Filter.prototype.getSingleClauseSet = function () {
	        var clauses = this.clauses;
	        if (clauses.size !== 1)
	            return null;
	        return clauses.get(0).getLiteralSet();
	    };
	    Filter.prototype.constrainToDimensions = function (dimensions, timeAttribute, oldTimeAttribute) {
	        if (oldTimeAttribute === void 0) { oldTimeAttribute = null; }
	        var hasChanged = false;
	        var clauses = [];
	        this.clauses.forEach(function (clause) {
	            var clauseExpression = clause.expression;
	            if (dimension_1.Dimension.getDimensionByExpression(dimensions, clauseExpression)) {
	                clauses.push(clause);
	            }
	            else {
	                hasChanged = true;
	                if (timeAttribute && oldTimeAttribute && oldTimeAttribute.equals(clauseExpression)) {
	                    clauses.push(new filter_clause_1.FilterClause({
	                        expression: timeAttribute,
	                        selection: clause.selection
	                    }));
	                }
	            }
	        });
	        return hasChanged ? new Filter(immutable_1.List(clauses)) : this;
	    };
	    Filter.prototype.getDifferentAttributes = function (other) {
	        var diff = [];
	        this.clauses.forEach(function (clause) {
	            var clauseExpression = clause.expression;
	            var otherClause = other.clauseForExpression(clauseExpression);
	            if (!clause.equals(otherClause)) {
	                diff.push(clauseExpression);
	            }
	        });
	        return diff;
	    };
	    Filter.prototype.overQuery = function (duration, timezone, timeAttribute) {
	        if (!timeAttribute)
	            return this;
	        return new Filter(this.clauses.map(function (clause) {
	            if (clause.expression.equals(timeAttribute)) {
	                var timeRange = clause.getExtent();
	                var newTimeRange = new plywood_1.TimeRange({
	                    start: duration.shift(timeRange.start, timezone, -1),
	                    end: duration.shift(timeRange.end, timezone, 1)
	                });
	                return clause.changeSelection(plywood_1.r(newTimeRange));
	            }
	            else {
	                return clause;
	            }
	        }));
	    };
	    Filter.prototype.setExclusionforDimension = function (exclusion, dimension) {
	        var clauses = this.clauses.map(function (clause) {
	            if (!clause.expression.equals(dimension.expression))
	                return clause;
	            return clause.changeExclude(exclusion);
	        });
	        return new Filter(clauses);
	    };
	    Filter.EXCLUDED = 'exclude';
	    Filter.INCLUDED = 'include';
	    Filter.REGEX = 'regex';
	    Filter.CONTAINS = 'contains';
	    return Filter;
	}());
	exports.Filter = Filter;
	check = Filter;
	Filter.EMPTY = new Filter(immutable_1.List());


/***/ },
/* 216 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var immutable_class_1 = __webpack_require__(193);
	var plywood_1 = __webpack_require__(199);
	var dimension_1 = __webpack_require__(208);
	var check;
	var SplitCombine = (function () {
	    function SplitCombine(parameters) {
	        this.expression = parameters.expression;
	        if (!this.expression)
	            throw new Error('must have expression');
	        this.bucketAction = parameters.bucketAction;
	        this.sortAction = parameters.sortAction;
	        this.limitAction = parameters.limitAction;
	    }
	    SplitCombine.isSplitCombine = function (candidate) {
	        return immutable_class_1.isInstanceOf(candidate, SplitCombine);
	    };
	    SplitCombine.fromExpression = function (expression) {
	        return new SplitCombine({
	            expression: expression,
	            bucketAction: null,
	            sortAction: null,
	            limitAction: null
	        });
	    };
	    SplitCombine.fromJS = function (parameters, context) {
	        if (typeof parameters === 'string') {
	            if (!context)
	                throw new Error('must have context for string split');
	            var dimension = context.dimensions.find(function (d) { return d.name === parameters; });
	            if (!dimension)
	                throw new Error("can not find dimension " + parameters);
	            return new SplitCombine({
	                expression: dimension.expression,
	                bucketAction: null,
	                sortAction: null,
	                limitAction: null
	            });
	        }
	        else {
	            var value = {
	                expression: plywood_1.Expression.fromJSLoose(parameters.expression),
	                bucketAction: null,
	                sortAction: null,
	                limitAction: null
	            };
	            if (parameters.bucketAction)
	                value.bucketAction = plywood_1.Action.fromJS(parameters.bucketAction);
	            if (parameters.sortAction)
	                value.sortAction = plywood_1.SortAction.fromJS(parameters.sortAction);
	            if (parameters.limitAction)
	                value.limitAction = plywood_1.LimitAction.fromJS(parameters.limitAction);
	            return new SplitCombine(value);
	        }
	    };
	    SplitCombine.prototype.valueOf = function () {
	        return {
	            expression: this.expression,
	            bucketAction: this.bucketAction,
	            sortAction: this.sortAction,
	            limitAction: this.limitAction
	        };
	    };
	    SplitCombine.prototype.toJS = function () {
	        var js = {
	            expression: this.expression.toJS()
	        };
	        if (this.bucketAction)
	            js.bucketAction = this.bucketAction.toJS();
	        if (this.sortAction)
	            js.sortAction = this.sortAction.toJS();
	        if (this.limitAction)
	            js.limitAction = this.limitAction.toJS();
	        return js;
	    };
	    SplitCombine.prototype.toJSON = function () {
	        return this.toJS();
	    };
	    SplitCombine.prototype.toString = function () {
	        return "[SplitCombine: " + this.expression + "]";
	    };
	    SplitCombine.prototype.equals = function (other) {
	        var _a = this, expression = _a.expression, bucketAction = _a.bucketAction, sortAction = _a.sortAction, limitAction = _a.limitAction;
	        return SplitCombine.isSplitCombine(other) &&
	            expression.equals(other.expression) &&
	            Boolean(bucketAction) === Boolean(other.bucketAction) &&
	            (!bucketAction || bucketAction.equals(other.bucketAction)) &&
	            Boolean(sortAction) === Boolean(other.sortAction) &&
	            (!sortAction || sortAction.equals(other.sortAction)) &&
	            Boolean(limitAction) === Boolean(other.limitAction) &&
	            (!limitAction || limitAction.equals(other.limitAction));
	    };
	    SplitCombine.prototype.equalsByExpression = function (other) {
	        var expression = this.expression;
	        return SplitCombine.isSplitCombine(other) && expression.equals(other.expression);
	    };
	    SplitCombine.prototype.toSplitExpression = function () {
	        var _a = this, expression = _a.expression, bucketAction = _a.bucketAction;
	        if (!bucketAction)
	            return expression;
	        return expression.performAction(bucketAction);
	    };
	    SplitCombine.prototype.toKey = function () {
	        return this.toSplitExpression().toString();
	    };
	    SplitCombine.prototype.getNormalizedSortAction = function (dimensions) {
	        var sortAction = this.sortAction;
	        var dimension = this.getDimension(dimensions);
	        if (!sortAction)
	            return null;
	        if (sortAction.refName() === dimension.name) {
	            return sortAction.changeExpression(plywood_1.$(SplitCombine.SORT_ON_DIMENSION_PLACEHOLDER));
	        }
	        return sortAction;
	    };
	    SplitCombine.prototype.changeBucketAction = function (bucketAction) {
	        var value = this.valueOf();
	        value.bucketAction = bucketAction;
	        return new SplitCombine(value);
	    };
	    SplitCombine.prototype.changeSortAction = function (sortAction) {
	        var value = this.valueOf();
	        value.sortAction = sortAction;
	        return new SplitCombine(value);
	    };
	    SplitCombine.prototype.changeSortActionFromNormalized = function (sortAction, dimensions) {
	        if (sortAction.refName() === SplitCombine.SORT_ON_DIMENSION_PLACEHOLDER) {
	            var dimension = dimension_1.Dimension.getDimensionByExpression(dimensions, this.expression);
	            if (!dimension)
	                throw new Error('can not find dimension for split');
	            sortAction = sortAction.changeExpression(plywood_1.$(dimension.name));
	        }
	        return this.changeSortAction(sortAction);
	    };
	    SplitCombine.prototype.changeLimitAction = function (limitAction) {
	        var value = this.valueOf();
	        value.limitAction = limitAction;
	        return new SplitCombine(value);
	    };
	    SplitCombine.prototype.changeLimit = function (limit) {
	        var limitAction = limit === null ? null : new plywood_1.LimitAction({ limit: limit });
	        return this.changeLimitAction(limitAction);
	    };
	    SplitCombine.prototype.timezoneDependant = function () {
	        var bucketAction = this.bucketAction;
	        if (!bucketAction)
	            return false;
	        return bucketAction.needsEnvironment();
	    };
	    SplitCombine.prototype.getDimension = function (dimensions) {
	        return dimension_1.Dimension.getDimensionByExpression(dimensions, this.expression);
	    };
	    SplitCombine.prototype.getTitle = function (dimensions) {
	        var dimension = this.getDimension(dimensions);
	        return (dimension ? dimension.title : '?') + this.getBucketTitle();
	    };
	    SplitCombine.prototype.getBucketTitle = function () {
	        var bucketAction = this.bucketAction;
	        if (bucketAction instanceof plywood_1.TimeBucketAction) {
	            return " (" + bucketAction.duration.getDescription(true) + ")";
	        }
	        else if (bucketAction instanceof plywood_1.NumberBucketAction) {
	            return " (by " + bucketAction.size + ")";
	        }
	        return '';
	    };
	    SplitCombine.SORT_ON_DIMENSION_PLACEHOLDER = '__PIVOT_SORT_ON_DIMENSIONS__';
	    return SplitCombine;
	}());
	exports.SplitCombine = SplitCombine;


/***/ },
/* 217 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var immutable_1 = __webpack_require__(210);
	var immutable_class_1 = __webpack_require__(193);
	var chronoshift_1 = __webpack_require__(191);
	var plywood_1 = __webpack_require__(199);
	var general_1 = __webpack_require__(209);
	var timekeeper_1 = __webpack_require__(205);
	var split_combine_1 = __webpack_require__(216);
	var plywood_2 = __webpack_require__(199);
	var granularity_1 = __webpack_require__(211);
	function withholdSplit(splits, split, allowIndex) {
	    return splits.filter(function (s, i) {
	        return i === allowIndex || !s.equalsByExpression(split);
	    });
	}
	function swapSplit(splits, split, other, allowIndex) {
	    return splits.map(function (s, i) {
	        return (i === allowIndex || !s.equalsByExpression(split)) ? s : other;
	    });
	}
	var check;
	var Splits = (function () {
	    function Splits(parameters) {
	        this.splitCombines = parameters;
	    }
	    Splits.isSplits = function (candidate) {
	        return immutable_class_1.isInstanceOf(candidate, Splits);
	    };
	    Splits.fromSplitCombine = function (splitCombine) {
	        return new Splits(immutable_1.List([splitCombine]));
	    };
	    Splits.fromJS = function (parameters, context) {
	        if (!Array.isArray(parameters))
	            parameters = [parameters];
	        return new Splits(immutable_1.List(parameters.map(function (splitCombine) { return split_combine_1.SplitCombine.fromJS(splitCombine, context); })));
	    };
	    Splits.prototype.valueOf = function () {
	        return this.splitCombines;
	    };
	    Splits.prototype.toJS = function () {
	        return this.splitCombines.toArray().map(function (splitCombine) { return splitCombine.toJS(); });
	    };
	    Splits.prototype.toJSON = function () {
	        return this.toJS();
	    };
	    Splits.prototype.toString = function () {
	        return this.splitCombines.map(function (splitCombine) { return splitCombine.toString(); }).join(',');
	    };
	    Splits.prototype.equals = function (other) {
	        return Splits.isSplits(other) &&
	            general_1.immutableListsEqual(this.splitCombines, other.splitCombines);
	    };
	    Splits.prototype.replaceByIndex = function (index, replace) {
	        var splitCombines = this.splitCombines;
	        if (splitCombines.size === index)
	            return this.insertByIndex(index, replace);
	        var replacedSplit = splitCombines.get(index);
	        splitCombines = splitCombines.map(function (s, i) { return i === index ? replace : s; });
	        splitCombines = swapSplit(splitCombines, replace, replacedSplit, index);
	        return new Splits(splitCombines);
	    };
	    Splits.prototype.insertByIndex = function (index, insert) {
	        var splitCombines = this.splitCombines;
	        splitCombines = splitCombines.splice(index, 0, insert);
	        splitCombines = withholdSplit(splitCombines, insert, index);
	        return new Splits(splitCombines);
	    };
	    Splits.prototype.addSplit = function (split) {
	        var splitCombines = this.splitCombines;
	        return this.insertByIndex(splitCombines.size, split);
	    };
	    Splits.prototype.removeSplit = function (split) {
	        return new Splits(this.splitCombines.filter(function (s) { return s !== split; }));
	    };
	    Splits.prototype.changeSortAction = function (sort) {
	        return new Splits(this.splitCombines.map(function (s) { return s.changeSortAction(sort); }));
	    };
	    Splits.prototype.changeSortActionFromNormalized = function (sort, dimensions) {
	        return new Splits(this.splitCombines.map(function (s) { return s.changeSortActionFromNormalized(sort, dimensions); }));
	    };
	    Splits.prototype.getTitle = function (dimensions) {
	        return this.splitCombines.map(function (s) { return s.getDimension(dimensions).title; }).join(', ');
	    };
	    Splits.prototype.length = function () {
	        return this.splitCombines.size;
	    };
	    Splits.prototype.forEach = function (sideEffect, context) {
	        return this.splitCombines.forEach(sideEffect, context);
	    };
	    Splits.prototype.get = function (index) {
	        return this.splitCombines.get(index);
	    };
	    Splits.prototype.first = function () {
	        return this.splitCombines.first();
	    };
	    Splits.prototype.last = function () {
	        return this.splitCombines.last();
	    };
	    Splits.prototype.findSplitForDimension = function (dimension) {
	        var dimensionExpression = dimension.expression;
	        return this.splitCombines.find(function (s) { return s.expression.equals(dimensionExpression); });
	    };
	    Splits.prototype.hasSplitOn = function (dimension) {
	        return Boolean(this.findSplitForDimension(dimension));
	    };
	    Splits.prototype.replace = function (search, replace) {
	        return new Splits(this.splitCombines.map(function (s) { return s.equals(search) ? replace : s; }));
	    };
	    Splits.prototype.map = function (mapper, context) {
	        return new Splits(this.splitCombines.map(mapper, context));
	    };
	    Splits.prototype.toArray = function () {
	        return this.splitCombines.toArray();
	    };
	    Splits.prototype.removeBucketingFrom = function (expressions) {
	        var changed = false;
	        var newSplitCombines = this.splitCombines.map(function (splitCombine) {
	            if (!splitCombine.bucketAction)
	                return splitCombine;
	            var splitCombineExpression = splitCombine.expression;
	            if (expressions.every(function (ex) { return !ex.equals(splitCombineExpression); }))
	                return splitCombine;
	            changed = true;
	            return splitCombine.changeBucketAction(null);
	        });
	        return changed ? new Splits(newSplitCombines) : this;
	    };
	    Splits.prototype.updateWithFilter = function (filter, dimensions) {
	        if (filter.isRelative()) {
	            filter = filter.getSpecificFilter(timekeeper_1.Timekeeper.globalNow(), timekeeper_1.Timekeeper.globalNow(), chronoshift_1.Timezone.UTC);
	        }
	        var changed = false;
	        var newSplitCombines = this.splitCombines.map(function (splitCombine) {
	            if (splitCombine.bucketAction)
	                return splitCombine;
	            var splitExpression = splitCombine.expression;
	            var splitDimension = dimensions.find(function (d) { return splitExpression.equals(d.expression); });
	            var splitKind = splitDimension.kind;
	            if (!splitDimension || !(splitKind === 'time' || splitKind === 'number') || !splitDimension.canBucketByDefault())
	                return splitCombine;
	            changed = true;
	            var selectionSet = filter.getLiteralSet(splitExpression);
	            var extent = selectionSet ? selectionSet.extent() : null;
	            if (splitKind === 'time') {
	                return splitCombine.changeBucketAction(new plywood_1.TimeBucketAction({
	                    duration: plywood_1.TimeRange.isTimeRange(extent) ? granularity_1.getBestBucketUnitForRange(extent, false, splitDimension.bucketedBy, splitDimension.granularities) :
	                        granularity_1.getDefaultGranularityForKind('time', splitDimension.bucketedBy, splitDimension.granularities).duration
	                }));
	            }
	            else if (splitKind === 'number') {
	                return splitCombine.changeBucketAction(new plywood_2.NumberBucketAction({
	                    size: extent ? granularity_1.getBestBucketUnitForRange(extent, false, splitDimension.bucketedBy, splitDimension.granularities) :
	                        granularity_1.getDefaultGranularityForKind('number', splitDimension.bucketedBy, splitDimension.granularities).size
	                }));
	            }
	            throw new Error('unknown extent type');
	        });
	        return changed ? new Splits(newSplitCombines) : this;
	    };
	    Splits.prototype.constrainToDimensionsAndMeasures = function (dimensions, measures) {
	        function validSplit(split) {
	            if (!split.getDimension(dimensions))
	                return false;
	            if (!split.sortAction)
	                return true;
	            var sortRef = split.sortAction.refName();
	            if (!dimensions.find(function (d) { return d.name === sortRef; }) && !measures.find(function (m) { return m.name === sortRef; }))
	                return false;
	            return true;
	        }
	        var changed = false;
	        var splitCombines = [];
	        this.splitCombines.forEach(function (split) {
	            if (validSplit(split)) {
	                splitCombines.push(split);
	            }
	            else {
	                changed = true;
	            }
	        });
	        return changed ? new Splits(immutable_1.List(splitCombines)) : this;
	    };
	    Splits.prototype.timezoneDependant = function () {
	        return this.splitCombines.some(function (splitCombine) { return splitCombine.timezoneDependant(); });
	    };
	    Splits.prototype.changeSortIfOnMeasure = function (fromMeasure, toMeasure) {
	        var changed = false;
	        var newSplitCombines = this.splitCombines.map(function (splitCombine) {
	            var sortAction = splitCombine.sortAction;
	            if (!sortAction || sortAction.refName() !== fromMeasure)
	                return splitCombine;
	            changed = true;
	            return splitCombine.changeSortAction(new plywood_1.SortAction({
	                expression: plywood_1.$(toMeasure),
	                direction: sortAction.direction
	            }));
	        });
	        return changed ? new Splits(newSplitCombines) : this;
	    };
	    Splits.prototype.getCommonSort = function (dimensions) {
	        var splitCombines = this.splitCombines.toArray();
	        var commonSort = null;
	        for (var _i = 0, splitCombines_1 = splitCombines; _i < splitCombines_1.length; _i++) {
	            var splitCombine = splitCombines_1[_i];
	            var sort = splitCombine.getNormalizedSortAction(dimensions);
	            if (commonSort) {
	                if (!commonSort.equals(sort))
	                    return null;
	            }
	            else {
	                commonSort = sort;
	            }
	        }
	        return commonSort;
	    };
	    return Splits;
	}());
	exports.Splits = Splits;
	check = Splits;
	Splits.EMPTY = new Splits(immutable_1.List());


/***/ },
/* 218 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var immutable_class_1 = __webpack_require__(193);
	var filter_1 = __webpack_require__(215);
	var check;
	var Highlight = (function () {
	    function Highlight(parameters) {
	        var owner = parameters.owner;
	        if (typeof owner !== 'string')
	            throw new TypeError('owner must be a string');
	        this.owner = owner;
	        this.delta = parameters.delta;
	        this.measure = parameters.measure || null;
	    }
	    Highlight.isHighlight = function (candidate) {
	        return immutable_class_1.isInstanceOf(candidate, Highlight);
	    };
	    Highlight.fromJS = function (parameters) {
	        return new Highlight({
	            owner: parameters.owner,
	            delta: filter_1.Filter.fromJS(parameters.delta),
	            measure: parameters.measure
	        });
	    };
	    Highlight.prototype.valueOf = function () {
	        return {
	            owner: this.owner,
	            delta: this.delta,
	            measure: this.measure
	        };
	    };
	    Highlight.prototype.toJS = function () {
	        var js = {
	            owner: this.owner,
	            delta: this.delta.toJS()
	        };
	        if (this.measure)
	            js.measure = this.measure;
	        return js;
	    };
	    Highlight.prototype.toJSON = function () {
	        return this.toJS();
	    };
	    Highlight.prototype.toString = function () {
	        return "[Highlight " + this.owner + "]";
	    };
	    Highlight.prototype.equals = function (other) {
	        return Highlight.isHighlight(other) &&
	            this.owner === other.owner &&
	            this.delta.equals(other.delta) &&
	            this.measure === other.measure;
	    };
	    Highlight.prototype.applyToFilter = function (filter) {
	        return filter.applyDelta(this.delta);
	    };
	    Highlight.prototype.constrainToDimensions = function (dimensions, timeAttribute) {
	        var delta = this.delta;
	        var newDelta = delta.constrainToDimensions(dimensions, timeAttribute);
	        if (newDelta === delta)
	            return this;
	        if (newDelta.length() === 0)
	            return null;
	        var value = this.valueOf();
	        value.delta = newDelta;
	        return new Highlight(value);
	    };
	    return Highlight;
	}());
	exports.Highlight = Highlight;
	check = Highlight;


/***/ },
/* 219 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var immutable_class_1 = __webpack_require__(193);
	var plywood_1 = __webpack_require__(199);
	var general_1 = __webpack_require__(209);
	function ensureNotNative(name) {
	    if (name === 'native') {
	        throw new Error("can not be 'native'");
	    }
	}
	function ensureNotTiny(v) {
	    if (v === 0)
	        return;
	    if (v < 1000) {
	        throw new Error("can not be < 1000 (is " + v + ")");
	    }
	}
	var Cluster = (function (_super) {
	    __extends(Cluster, _super);
	    function Cluster(parameters) {
	        _super.call(this, parameters);
	        switch (this.type) {
	            case 'druid':
	                this.database = null;
	                this.user = null;
	                this.password = null;
	                break;
	            case 'mysql':
	            case 'postgres':
	                this.introspectionStrategy = null;
	                this.requestDecorator = null;
	                this.decoratorOptions = null;
	                break;
	        }
	    }
	    Cluster.isCluster = function (candidate) {
	        return immutable_class_1.isInstanceOf(candidate, Cluster);
	    };
	    Cluster.fromJS = function (parameters) {
	        if (!parameters.host && (parameters.druidHost || parameters.brokerHost)) {
	            parameters.host = parameters.druidHost || parameters.brokerHost;
	        }
	        if (typeof parameters.timeout === 'string') {
	            parameters.timeout = parseInt(parameters.timeout, 10);
	        }
	        if (typeof parameters.sourceListRefreshInterval === 'string') {
	            parameters.sourceListRefreshInterval = parseInt(parameters.sourceListRefreshInterval, 10);
	        }
	        if (typeof parameters.sourceReintrospectInterval === 'string') {
	            parameters.sourceReintrospectInterval = parseInt(parameters.sourceReintrospectInterval, 10);
	        }
	        return new Cluster(immutable_class_1.BaseImmutable.jsToValue(Cluster.PROPERTIES, parameters));
	    };
	    Cluster.prototype.toClientCluster = function () {
	        return new Cluster({
	            name: this.name,
	            type: this.type
	        });
	    };
	    Cluster.prototype.makeExternalFromSourceName = function (source, version) {
	        return plywood_1.External.fromValue({
	            engine: this.type,
	            source: source,
	            version: version,
	            allowSelectQueries: true,
	            allowEternity: false
	        });
	    };
	    Cluster.prototype.shouldScanSources = function () {
	        return this.getSourceListScan() === 'auto';
	    };
	    Cluster.TYPE_VALUES = ['druid', 'mysql', 'postgres'];
	    Cluster.DEFAULT_TIMEOUT = 40000;
	    Cluster.DEFAULT_SOURCE_LIST_SCAN = 'auto';
	    Cluster.SOURCE_LIST_SCAN_VALUES = ['disable', 'auto'];
	    Cluster.DEFAULT_SOURCE_LIST_REFRESH_INTERVAL = 15000;
	    Cluster.DEFAULT_SOURCE_REINTROSPECT_INTERVAL = 120000;
	    Cluster.DEFAULT_INTROSPECTION_STRATEGY = 'segment-metadata-fallback';
	    Cluster.PROPERTIES = [
	        { name: 'name', validate: [general_1.verifyUrlSafeName, ensureNotNative] },
	        { name: 'type', possibleValues: Cluster.TYPE_VALUES },
	        { name: 'host', defaultValue: null },
	        { name: 'title', defaultValue: '' },
	        { name: 'version', defaultValue: null },
	        { name: 'timeout', defaultValue: Cluster.DEFAULT_TIMEOUT },
	        { name: 'sourceListScan', defaultValue: Cluster.DEFAULT_SOURCE_LIST_SCAN, possibleValues: Cluster.SOURCE_LIST_SCAN_VALUES },
	        { name: 'sourceListRefreshOnLoad', defaultValue: false },
	        { name: 'sourceListRefreshInterval', defaultValue: Cluster.DEFAULT_SOURCE_LIST_REFRESH_INTERVAL, validate: [immutable_class_1.BaseImmutable.ensure.number, ensureNotTiny] },
	        { name: 'sourceReintrospectOnLoad', defaultValue: false },
	        { name: 'sourceReintrospectInterval', defaultValue: Cluster.DEFAULT_SOURCE_REINTROSPECT_INTERVAL, validate: [immutable_class_1.BaseImmutable.ensure.number, ensureNotTiny] },
	        { name: 'introspectionStrategy', defaultValue: Cluster.DEFAULT_INTROSPECTION_STRATEGY },
	        { name: 'requestDecorator', defaultValue: null },
	        { name: 'decoratorOptions', defaultValue: null },
	        { name: 'database', defaultValue: null },
	        { name: 'user', defaultValue: null },
	        { name: 'password', defaultValue: null }
	    ];
	    return Cluster;
	}(immutable_class_1.BaseImmutable));
	exports.Cluster = Cluster;
	immutable_class_1.BaseImmutable.finalize(Cluster);


/***/ },
/* 220 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var Q = __webpack_require__(182);
	var immutable_1 = __webpack_require__(210);
	var immutable_class_1 = __webpack_require__(193);
	var chronoshift_1 = __webpack_require__(191);
	var plywood_1 = __webpack_require__(199);
	var general_1 = __webpack_require__(209);
	var time_1 = __webpack_require__(221);
	var dimension_1 = __webpack_require__(208);
	var measure_1 = __webpack_require__(212);
	var filter_clause_1 = __webpack_require__(214);
	var filter_1 = __webpack_require__(215);
	var splits_1 = __webpack_require__(217);
	var refresh_rule_1 = __webpack_require__(207);
	function formatTimeDiff(diff) {
	    diff = Math.round(Math.abs(diff) / 1000);
	    if (diff < 60)
	        return 'less than 1 minute';
	    diff = Math.floor(diff / 60);
	    if (diff === 1)
	        return '1 minute';
	    if (diff < 60)
	        return diff + ' minutes';
	    diff = Math.floor(diff / 60);
	    if (diff === 1)
	        return '1 hour';
	    if (diff <= 24)
	        return diff + ' hours';
	    diff = Math.floor(diff / 24);
	    return diff + ' days';
	}
	function checkUnique(dimensions, measures, dataCubeName) {
	    var seenDimensions = {};
	    var seenMeasures = {};
	    if (dimensions) {
	        dimensions.forEach(function (d) {
	            var dimensionName = d.name.toLowerCase();
	            if (seenDimensions[dimensionName])
	                throw new Error("duplicate dimension name '" + d.name + "' found in data cube: '" + dataCubeName + "'");
	            seenDimensions[dimensionName] = 1;
	        });
	    }
	    if (measures) {
	        measures.forEach(function (m) {
	            var measureName = m.name.toLowerCase();
	            if (seenMeasures[measureName])
	                throw new Error("duplicate measure name '" + m.name + "' found in data cube: '" + dataCubeName + "'");
	            if (seenDimensions[measureName])
	                throw new Error("name '" + m.name + "' found in both dimensions and measures in data cube: '" + dataCubeName + "'");
	            seenMeasures[measureName] = 1;
	        });
	    }
	}
	function measuresFromLongForm(longForm) {
	    var metricColumn = longForm.metricColumn, measures = longForm.measures, possibleAggregates = longForm.possibleAggregates;
	    var myPossibleAggregates = {};
	    for (var agg in possibleAggregates) {
	        if (!general_1.hasOwnProperty(possibleAggregates, agg))
	            continue;
	        myPossibleAggregates[agg] = plywood_1.Expression.fromJSLoose(possibleAggregates[agg]);
	    }
	    return measures.map(function (measure) {
	        if (general_1.hasOwnProperty(measure, 'name')) {
	            return measure_1.Measure.fromJS(measure);
	        }
	        var title = measure.title;
	        if (!title) {
	            throw new Error('must have title in longForm value');
	        }
	        var value = measure.value;
	        var aggregate = measure.aggregate;
	        if (!aggregate) {
	            throw new Error('must have aggregates in longForm value');
	        }
	        var myExpression = myPossibleAggregates[aggregate];
	        if (!myExpression)
	            throw new Error("can not find aggregate " + aggregate + " for value " + value);
	        var name = general_1.makeUrlSafeName(aggregate + "_" + value);
	        return new measure_1.Measure({
	            name: name,
	            title: title,
	            units: measure.units,
	            formula: myExpression.substitute(function (ex) {
	                if (ex instanceof plywood_1.RefExpression && ex.name === 'filtered') {
	                    return plywood_1.$('main').filter(plywood_1.$(metricColumn).is(plywood_1.r(value)));
	                }
	                return null;
	            }).toString()
	        });
	    });
	}
	function filterFromLongForm(longForm) {
	    var metricColumn = longForm.metricColumn, measures = longForm.measures;
	    var values = [];
	    for (var _i = 0, measures_1 = measures; _i < measures_1.length; _i++) {
	        var measure = measures_1[_i];
	        if (general_1.hasOwnProperty(measure, 'aggregate'))
	            values.push(measure.value);
	    }
	    return plywood_1.$(metricColumn).in(values).simplify();
	}
	var check;
	var DataCube = (function () {
	    function DataCube(parameters) {
	        var name = parameters.name;
	        if (typeof name !== 'string')
	            throw new Error("DataCube must have a name");
	        general_1.verifyUrlSafeName(name);
	        this.name = name;
	        this.title = parameters.title;
	        this.description = parameters.description || '';
	        this.clusterName = parameters.clusterName || 'druid';
	        this.source = parameters.source || name;
	        this.group = parameters.group || null;
	        this.subsetFormula = parameters.subsetFormula;
	        this.subsetExpression = parameters.subsetFormula ? plywood_1.Expression.fromJSLoose(parameters.subsetFormula) : plywood_1.Expression.TRUE;
	        this.rollup = Boolean(parameters.rollup);
	        this.options = parameters.options || {};
	        this.introspection = parameters.introspection;
	        this.attributes = parameters.attributes || [];
	        this.attributeOverrides = parameters.attributeOverrides || [];
	        this.derivedAttributes = parameters.derivedAttributes;
	        this.timeAttribute = parameters.timeAttribute;
	        this.defaultTimezone = parameters.defaultTimezone;
	        this.defaultFilter = parameters.defaultFilter;
	        this.defaultSplits = parameters.defaultSplits;
	        this.defaultDuration = parameters.defaultDuration;
	        this.defaultSortMeasure = parameters.defaultSortMeasure;
	        this.defaultSelectedMeasures = parameters.defaultSelectedMeasures;
	        this.defaultPinnedDimensions = parameters.defaultPinnedDimensions;
	        var refreshRule = parameters.refreshRule || refresh_rule_1.RefreshRule.query();
	        this.refreshRule = refreshRule;
	        this.cluster = parameters.cluster;
	        this.executor = parameters.executor;
	        var dimensions = parameters.dimensions;
	        var measures = parameters.measures;
	        checkUnique(dimensions, measures, name);
	        this.dimensions = dimensions || immutable_1.List([]);
	        this.measures = measures || immutable_1.List([]);
	        this._validateDefaults();
	    }
	    DataCube.isDataCube = function (candidate) {
	        return immutable_class_1.isInstanceOf(candidate, DataCube);
	    };
	    DataCube.queryMaxTime = function (dataCube) {
	        if (!dataCube.executor) {
	            return Q.reject(new Error('dataCube not ready'));
	        }
	        var ex = plywood_1.ply().apply('maxTime', plywood_1.$('main').max(dataCube.timeAttribute));
	        return dataCube.executor(ex).then(function (dataset) {
	            var maxTimeDate = dataset.data[0]['maxTime'];
	            if (isNaN(maxTimeDate))
	                return null;
	            return maxTimeDate;
	        });
	    };
	    DataCube.fromClusterAndExternal = function (name, cluster, external) {
	        var dataCube = DataCube.fromJS({
	            name: name,
	            clusterName: cluster.name,
	            source: String(external.source),
	            refreshRule: refresh_rule_1.RefreshRule.query().toJS()
	        });
	        return dataCube.updateCluster(cluster).updateWithExternal(external);
	    };
	    DataCube.fromJS = function (parameters, context) {
	        if (context === void 0) { context = {}; }
	        var cluster = context.cluster, executor = context.executor;
	        var clusterName = parameters.clusterName;
	        var introspection = parameters.introspection;
	        var defaultSplitsJS = parameters.defaultSplits;
	        var attributeOverrideJSs = parameters.attributeOverrides;
	        if (!clusterName) {
	            clusterName = parameters.engine;
	        }
	        var options = parameters.options || {};
	        if (options.skipIntrospection) {
	            if (!introspection)
	                introspection = 'none';
	            delete options.skipIntrospection;
	        }
	        if (options.disableAutofill) {
	            if (!introspection)
	                introspection = 'no-autofill';
	            delete options.disableAutofill;
	        }
	        if (options.attributeOverrides) {
	            if (!attributeOverrideJSs)
	                attributeOverrideJSs = options.attributeOverrides;
	            delete options.attributeOverrides;
	        }
	        if (options.defaultSplitDimension) {
	            options.defaultSplits = options.defaultSplitDimension;
	            delete options.defaultSplitDimension;
	        }
	        if (options.defaultSplits) {
	            if (!defaultSplitsJS)
	                defaultSplitsJS = options.defaultSplits;
	            delete options.defaultSplits;
	        }
	        if (introspection && DataCube.INTROSPECTION_VALUES.indexOf(introspection) === -1) {
	            throw new Error("invalid introspection value " + introspection + ", must be one of " + DataCube.INTROSPECTION_VALUES.join(', '));
	        }
	        var refreshRule = parameters.refreshRule ? refresh_rule_1.RefreshRule.fromJS(parameters.refreshRule) : null;
	        var timeAttributeName = parameters.timeAttribute;
	        if (cluster && cluster.type === 'druid' && !timeAttributeName) {
	            timeAttributeName = '__time';
	        }
	        var timeAttribute = timeAttributeName ? plywood_1.$(timeAttributeName) : null;
	        var attributeOverrides = plywood_1.AttributeInfo.fromJSs(attributeOverrideJSs || []);
	        var attributes = plywood_1.AttributeInfo.fromJSs(parameters.attributes || []);
	        var derivedAttributes = null;
	        if (parameters.derivedAttributes) {
	            derivedAttributes = plywood_1.Expression.expressionLookupFromJS(parameters.derivedAttributes);
	        }
	        var dimensions = immutable_1.List((parameters.dimensions || []).map(function (d) { return dimension_1.Dimension.fromJS(d); }));
	        var measures = immutable_1.List((parameters.measures || []).map(function (m) { return measure_1.Measure.fromJS(m); }));
	        if (timeAttribute && !dimension_1.Dimension.getDimensionByExpression(dimensions, timeAttribute)) {
	            dimensions = dimensions.unshift(new dimension_1.Dimension({
	                name: timeAttributeName,
	                kind: 'time',
	                formula: timeAttribute.toString()
	            }));
	        }
	        var subsetFormula = parameters.subsetFormula || parameters.subsetFilter;
	        var longForm = parameters.longForm;
	        if (longForm) {
	            measures = measures.concat(measuresFromLongForm(longForm));
	            if (longForm.addSubsetFilter) {
	                var subsetExpression = subsetFormula ? plywood_1.Expression.fromJSLoose(parameters.subsetFormula) : plywood_1.Expression.TRUE;
	                subsetFormula = JSON.stringify(subsetExpression.and(filterFromLongForm(longForm)).simplify());
	            }
	        }
	        var value = {
	            executor: null,
	            name: parameters.name,
	            title: parameters.title,
	            description: parameters.description,
	            clusterName: clusterName,
	            source: parameters.source,
	            group: parameters.group,
	            subsetFormula: subsetFormula,
	            rollup: parameters.rollup,
	            options: options,
	            introspection: introspection,
	            attributeOverrides: attributeOverrides,
	            attributes: attributes,
	            derivedAttributes: derivedAttributes,
	            dimensions: dimensions,
	            measures: measures,
	            timeAttribute: timeAttribute,
	            defaultTimezone: parameters.defaultTimezone ? chronoshift_1.Timezone.fromJS(parameters.defaultTimezone) : null,
	            defaultFilter: parameters.defaultFilter ? filter_1.Filter.fromJS(parameters.defaultFilter) : null,
	            defaultSplits: defaultSplitsJS ? splits_1.Splits.fromJS(defaultSplitsJS, { dimensions: dimensions }) : null,
	            defaultDuration: parameters.defaultDuration ? chronoshift_1.Duration.fromJS(parameters.defaultDuration) : null,
	            defaultSortMeasure: parameters.defaultSortMeasure || (measures.size ? measures.first().name : null),
	            defaultSelectedMeasures: parameters.defaultSelectedMeasures ? immutable_1.OrderedSet(parameters.defaultSelectedMeasures) : null,
	            defaultPinnedDimensions: parameters.defaultPinnedDimensions ? immutable_1.OrderedSet(parameters.defaultPinnedDimensions) : null,
	            refreshRule: refreshRule
	        };
	        if (cluster) {
	            if (clusterName !== cluster.name)
	                throw new Error("Cluster name '" + clusterName + "' was given but '" + cluster.name + "' cluster was supplied (must match)");
	            value.cluster = cluster;
	        }
	        if (executor)
	            value.executor = executor;
	        return new DataCube(value);
	    };
	    DataCube.prototype.valueOf = function () {
	        var value = {
	            name: this.name,
	            title: this.title,
	            description: this.description,
	            clusterName: this.clusterName,
	            source: this.source,
	            group: this.group,
	            subsetFormula: this.subsetFormula,
	            rollup: this.rollup,
	            options: this.options,
	            introspection: this.introspection,
	            attributeOverrides: this.attributeOverrides,
	            attributes: this.attributes,
	            derivedAttributes: this.derivedAttributes,
	            dimensions: this.dimensions,
	            measures: this.measures,
	            timeAttribute: this.timeAttribute,
	            defaultTimezone: this.defaultTimezone,
	            defaultFilter: this.defaultFilter,
	            defaultSplits: this.defaultSplits,
	            defaultDuration: this.defaultDuration,
	            defaultSortMeasure: this.defaultSortMeasure,
	            defaultSelectedMeasures: this.defaultSelectedMeasures,
	            defaultPinnedDimensions: this.defaultPinnedDimensions,
	            refreshRule: this.refreshRule
	        };
	        if (this.cluster)
	            value.cluster = this.cluster;
	        if (this.executor)
	            value.executor = this.executor;
	        return value;
	    };
	    DataCube.prototype.toJS = function () {
	        var js = {
	            name: this.name,
	            title: this.title,
	            description: this.description,
	            clusterName: this.clusterName,
	            source: this.source,
	            dimensions: this.dimensions.toArray().map(function (dimension) { return dimension.toJS(); }),
	            measures: this.measures.toArray().map(function (measure) { return measure.toJS(); }),
	            refreshRule: this.refreshRule.toJS()
	        };
	        if (this.group)
	            js.group = this.group;
	        if (this.introspection)
	            js.introspection = this.introspection;
	        if (this.subsetFormula)
	            js.subsetFormula = this.subsetFormula;
	        if (this.defaultTimezone)
	            js.defaultTimezone = this.defaultTimezone.toJS();
	        if (this.defaultFilter)
	            js.defaultFilter = this.defaultFilter.toJS();
	        if (this.defaultSplits)
	            js.defaultSplits = this.defaultSplits.toJS();
	        if (this.defaultDuration)
	            js.defaultDuration = this.defaultDuration.toJS();
	        if (this.defaultSortMeasure)
	            js.defaultSortMeasure = this.defaultSortMeasure;
	        if (this.defaultSelectedMeasures)
	            js.defaultSelectedMeasures = this.defaultSelectedMeasures.toArray();
	        if (this.defaultPinnedDimensions)
	            js.defaultPinnedDimensions = this.defaultPinnedDimensions.toArray();
	        if (this.rollup)
	            js.rollup = true;
	        if (this.timeAttribute)
	            js.timeAttribute = this.timeAttribute.name;
	        if (this.attributeOverrides.length)
	            js.attributeOverrides = plywood_1.AttributeInfo.toJSs(this.attributeOverrides);
	        if (this.attributes.length)
	            js.attributes = plywood_1.AttributeInfo.toJSs(this.attributes);
	        if (this.derivedAttributes)
	            js.derivedAttributes = plywood_1.Expression.expressionLookupToJS(this.derivedAttributes);
	        if (Object.keys(this.options).length)
	            js.options = this.options;
	        return js;
	    };
	    DataCube.prototype.toJSON = function () {
	        return this.toJS();
	    };
	    DataCube.prototype.toString = function () {
	        return "[DataCube: " + this.name + "]";
	    };
	    DataCube.prototype.equals = function (other) {
	        return DataCube.isDataCube(other) &&
	            this.name === other.name &&
	            this.title === other.title &&
	            this.description === other.description &&
	            this.clusterName === other.clusterName &&
	            this.source === other.source &&
	            this.group === other.group &&
	            this.subsetFormula === other.subsetFormula &&
	            this.rollup === other.rollup &&
	            JSON.stringify(this.options) === JSON.stringify(other.options) &&
	            this.introspection === other.introspection &&
	            immutable_class_1.immutableArraysEqual(this.attributeOverrides, other.attributeOverrides) &&
	            immutable_class_1.immutableArraysEqual(this.attributes, other.attributes) &&
	            immutable_class_1.immutableLookupsEqual(this.derivedAttributes, other.derivedAttributes) &&
	            general_1.immutableListsEqual(this.dimensions, other.dimensions) &&
	            general_1.immutableListsEqual(this.measures, other.measures) &&
	            immutable_class_1.immutableEqual(this.timeAttribute, other.timeAttribute) &&
	            immutable_class_1.immutableEqual(this.defaultTimezone, other.defaultTimezone) &&
	            immutable_class_1.immutableEqual(this.defaultFilter, other.defaultFilter) &&
	            immutable_class_1.immutableEqual(this.defaultSplits, other.defaultSplits) &&
	            immutable_class_1.immutableEqual(this.defaultDuration, other.defaultDuration) &&
	            this.defaultSortMeasure === other.defaultSortMeasure &&
	            Boolean(this.defaultSelectedMeasures) === Boolean(other.defaultSelectedMeasures) &&
	            (!this.defaultSelectedMeasures || this.defaultSelectedMeasures.equals(other.defaultSelectedMeasures)) &&
	            Boolean(this.defaultPinnedDimensions) === Boolean(other.defaultPinnedDimensions) &&
	            (!this.defaultPinnedDimensions || this.defaultPinnedDimensions.equals(other.defaultPinnedDimensions)) &&
	            this.refreshRule.equals(other.refreshRule);
	    };
	    DataCube.prototype._validateDefaults = function () {
	        var _a = this, measures = _a.measures, defaultSortMeasure = _a.defaultSortMeasure;
	        if (defaultSortMeasure) {
	            if (!measures.find(function (measure) { return measure.name === defaultSortMeasure; })) {
	                throw new Error("can not find defaultSortMeasure '" + defaultSortMeasure + "' in data cube '" + this.name + "'");
	            }
	        }
	    };
	    DataCube.prototype.toExternal = function () {
	        if (this.clusterName === 'native')
	            throw new Error("there is no external on a native data cube");
	        var _a = this, cluster = _a.cluster, options = _a.options;
	        if (!cluster)
	            throw new Error('must have a cluster');
	        var externalValue = {
	            engine: cluster.type,
	            suppress: true,
	            source: this.source,
	            version: cluster.version,
	            derivedAttributes: this.derivedAttributes,
	            customAggregations: options.customAggregations,
	            customTransforms: options.customTransforms,
	            filter: this.subsetExpression
	        };
	        if (cluster.type === 'druid') {
	            externalValue.rollup = this.rollup;
	            externalValue.timeAttribute = this.timeAttribute.name;
	            externalValue.introspectionStrategy = cluster.getIntrospectionStrategy();
	            externalValue.allowSelectQueries = true;
	            var externalContext = options.druidContext || {};
	            externalContext['timeout'] = cluster.getTimeout();
	            if (options.priority)
	                externalContext['priority'] = options.priority;
	            externalValue.context = externalContext;
	        }
	        if (this.introspection === 'none') {
	            externalValue.attributes = plywood_1.AttributeInfo.override(this.deduceAttributes(), this.attributeOverrides);
	            externalValue.derivedAttributes = this.derivedAttributes;
	        }
	        else {
	            externalValue.attributeOverrides = this.attributeOverrides;
	        }
	        return plywood_1.External.fromValue(externalValue);
	    };
	    DataCube.prototype.getMainTypeContext = function () {
	        var _a = this, attributes = _a.attributes, derivedAttributes = _a.derivedAttributes;
	        if (!attributes)
	            return null;
	        var datasetType = {};
	        for (var _i = 0, attributes_1 = attributes; _i < attributes_1.length; _i++) {
	            var attribute = attributes_1[_i];
	            datasetType[attribute.name] = attribute;
	        }
	        for (var name in derivedAttributes) {
	            datasetType[name] = {
	                type: derivedAttributes[name].type
	            };
	        }
	        return {
	            type: 'DATASET',
	            datasetType: datasetType
	        };
	    };
	    DataCube.prototype.getIssues = function () {
	        var _a = this, dimensions = _a.dimensions, measures = _a.measures;
	        var mainTypeContext = this.getMainTypeContext();
	        var issues = [];
	        dimensions.forEach(function (dimension) {
	            try {
	                dimension.expression.referenceCheckInTypeContext(mainTypeContext);
	            }
	            catch (e) {
	                issues.push("failed to validate dimension '" + dimension.name + "': " + e.message);
	            }
	        });
	        var measureTypeContext = {
	            type: 'DATASET',
	            datasetType: {
	                main: mainTypeContext
	            }
	        };
	        measures.forEach(function (measure) {
	            try {
	                measure.expression.referenceCheckInTypeContext(measureTypeContext);
	            }
	            catch (e) {
	                var message = e.message;
	                if (measure.expression.getFreeReferences().indexOf('main') === -1) {
	                    message = 'measure must contain a $main reference';
	                }
	                issues.push("failed to validate measure '" + measure.name + "': " + message);
	            }
	        });
	        return issues;
	    };
	    DataCube.prototype.updateCluster = function (cluster) {
	        var value = this.valueOf();
	        value.cluster = cluster;
	        return new DataCube(value);
	    };
	    DataCube.prototype.updateWithDataset = function (dataset) {
	        if (this.clusterName !== 'native')
	            throw new Error('must be native to have a dataset');
	        var executor = plywood_1.basicExecutorFactory({
	            datasets: { main: dataset }
	        });
	        return this.addAttributes(dataset.attributes).attachExecutor(executor);
	    };
	    DataCube.prototype.updateWithExternal = function (external) {
	        if (this.clusterName === 'native')
	            throw new Error('can not be native and have an external');
	        var executor = plywood_1.basicExecutorFactory({
	            datasets: { main: external }
	        });
	        return this.addAttributes(external.attributes).attachExecutor(executor);
	    };
	    DataCube.prototype.attachExecutor = function (executor) {
	        var value = this.valueOf();
	        value.executor = executor;
	        return new DataCube(value);
	    };
	    DataCube.prototype.toClientDataCube = function () {
	        var value = this.valueOf();
	        value.subsetFormula = null;
	        value.introspection = null;
	        value.attributeOverrides = null;
	        value.options = null;
	        return new DataCube(value);
	    };
	    DataCube.prototype.isQueryable = function () {
	        return Boolean(this.executor);
	    };
	    DataCube.prototype.getMaxTime = function (timekeeper) {
	        var _a = this, name = _a.name, refreshRule = _a.refreshRule;
	        if (refreshRule.isRealtime()) {
	            return timekeeper.now();
	        }
	        else if (refreshRule.isFixed()) {
	            return refreshRule.time;
	        }
	        else {
	            return timekeeper.getTime(name);
	        }
	    };
	    DataCube.prototype.updatedText = function (timekeeper, timezone) {
	        var refreshRule = this.refreshRule;
	        if (refreshRule.isRealtime()) {
	            return 'Updated ~1 second ago';
	        }
	        else if (refreshRule.isFixed()) {
	            return "Fixed to " + time_1.getWallTimeString(refreshRule.time, timezone, true);
	        }
	        else {
	            var maxTime = this.getMaxTime(timekeeper);
	            if (maxTime) {
	                return "Updated " + formatTimeDiff(timekeeper.now().valueOf() - maxTime.valueOf().valueOf()) + " ago";
	            }
	            else {
	                return null;
	            }
	        }
	    };
	    DataCube.prototype.getDimension = function (dimensionName) {
	        return dimension_1.Dimension.getDimension(this.dimensions, dimensionName);
	    };
	    DataCube.prototype.getDimensionByExpression = function (expression) {
	        return dimension_1.Dimension.getDimensionByExpression(this.dimensions, expression);
	    };
	    DataCube.prototype.getDimensionByKind = function (kind) {
	        return this.dimensions.filter(function (d) { return d.kind === kind; });
	    };
	    DataCube.prototype.getTimeDimension = function () {
	        return this.getDimensionByExpression(this.timeAttribute);
	    };
	    DataCube.prototype.isTimeAttribute = function (ex) {
	        return ex.equals(this.timeAttribute);
	    };
	    DataCube.prototype.getMeasure = function (measureName) {
	        return measure_1.Measure.getMeasure(this.measures, measureName);
	    };
	    DataCube.prototype.getMeasureByExpression = function (expression) {
	        return this.measures.find(function (measure) { return measure.expression.equals(expression); });
	    };
	    DataCube.prototype.changeDimensions = function (dimensions) {
	        var value = this.valueOf();
	        value.dimensions = dimensions;
	        return new DataCube(value);
	    };
	    DataCube.prototype.rolledUp = function () {
	        return this.clusterName === 'druid';
	    };
	    DataCube.prototype.deduceAttributes = function () {
	        var _a = this, dimensions = _a.dimensions, measures = _a.measures, timeAttribute = _a.timeAttribute, attributeOverrides = _a.attributeOverrides;
	        var attributes = [];
	        if (timeAttribute) {
	            attributes.push(plywood_1.AttributeInfo.fromJS({ name: timeAttribute.name, type: 'TIME' }));
	        }
	        dimensions.forEach(function (dimension) {
	            var expression = dimension.expression;
	            if (expression.equals(timeAttribute))
	                return;
	            var references = expression.getFreeReferences();
	            for (var _i = 0, references_1 = references; _i < references_1.length; _i++) {
	                var reference = references_1[_i];
	                if (plywood_1.findByName(attributes, reference))
	                    continue;
	                attributes.push(plywood_1.AttributeInfo.fromJS({ name: reference, type: 'STRING' }));
	            }
	        });
	        measures.forEach(function (measure) {
	            var expression = measure.expression;
	            var references = measure_1.Measure.getAggregateReferences(expression);
	            var countDistinctReferences = measure_1.Measure.getCountDistinctReferences(expression);
	            for (var _i = 0, references_2 = references; _i < references_2.length; _i++) {
	                var reference = references_2[_i];
	                if (plywood_1.findByName(attributes, reference))
	                    continue;
	                if (countDistinctReferences.indexOf(reference) !== -1) {
	                    attributes.push(plywood_1.AttributeInfo.fromJS({ name: reference, special: 'unique' }));
	                }
	                else {
	                    attributes.push(plywood_1.AttributeInfo.fromJS({ name: reference, type: 'NUMBER' }));
	                }
	            }
	        });
	        if (attributeOverrides.length) {
	            attributes = plywood_1.AttributeInfo.override(attributes, attributeOverrides);
	        }
	        return attributes;
	    };
	    DataCube.prototype.addAttributes = function (newAttributes) {
	        var _this = this;
	        var _a = this, dimensions = _a.dimensions, measures = _a.measures, attributes = _a.attributes;
	        var introspection = this.getIntrospection();
	        if (introspection === 'none')
	            return this;
	        var autofillDimensions = introspection === 'autofill-dimensions-only' || introspection === 'autofill-all';
	        var autofillMeasures = introspection === 'autofill-measures-only' || introspection === 'autofill-all';
	        var $main = plywood_1.$('main');
	        for (var _i = 0, newAttributes_1 = newAttributes; _i < newAttributes_1.length; _i++) {
	            var newAttribute = newAttributes_1[_i];
	            var name = newAttribute.name, type = newAttribute.type, special = newAttribute.special;
	            if (attributes && plywood_1.findByName(attributes, name))
	                continue;
	            var urlSafeName = general_1.makeUrlSafeName(name);
	            if (this.getDimension(urlSafeName) || this.getMeasure(urlSafeName))
	                continue;
	            var expression;
	            switch (type) {
	                case 'TIME':
	                    if (!autofillDimensions)
	                        continue;
	                    expression = plywood_1.$(name);
	                    if (this.getDimensionByExpression(expression))
	                        continue;
	                    dimensions = dimensions.unshift(new dimension_1.Dimension({
	                        name: urlSafeName,
	                        kind: 'time',
	                        formula: expression.toString()
	                    }));
	                    break;
	                case 'STRING':
	                    if (special === 'unique' || special === 'theta') {
	                        if (!autofillMeasures)
	                            continue;
	                        var newMeasures = measure_1.Measure.measuresFromAttributeInfo(newAttribute);
	                        newMeasures.forEach(function (newMeasure) {
	                            if (_this.getMeasureByExpression(newMeasure.expression))
	                                return;
	                            measures = measures.push(newMeasure);
	                        });
	                    }
	                    else {
	                        if (!autofillDimensions)
	                            continue;
	                        expression = plywood_1.$(name);
	                        if (this.getDimensionByExpression(expression))
	                            continue;
	                        dimensions = dimensions.push(new dimension_1.Dimension({
	                            name: urlSafeName,
	                            formula: expression.toString()
	                        }));
	                    }
	                    break;
	                case 'SET/STRING':
	                    if (!autofillDimensions)
	                        continue;
	                    expression = plywood_1.$(name);
	                    if (this.getDimensionByExpression(expression))
	                        continue;
	                    dimensions = dimensions.push(new dimension_1.Dimension({
	                        name: urlSafeName,
	                        formula: expression.toString()
	                    }));
	                    break;
	                case 'BOOLEAN':
	                    if (!autofillDimensions)
	                        continue;
	                    expression = plywood_1.$(name);
	                    if (this.getDimensionByExpression(expression))
	                        continue;
	                    dimensions = dimensions.push(new dimension_1.Dimension({
	                        name: urlSafeName,
	                        kind: 'boolean',
	                        formula: expression.toString()
	                    }));
	                    break;
	                case 'NUMBER':
	                    if (!autofillMeasures)
	                        continue;
	                    var newMeasures = measure_1.Measure.measuresFromAttributeInfo(newAttribute);
	                    newMeasures.forEach(function (newMeasure) {
	                        if (_this.getMeasureByExpression(newMeasure.expression))
	                            return;
	                        measures = (name === 'count') ? measures.unshift(newMeasure) : measures.push(newMeasure);
	                    });
	                    break;
	                default:
	                    throw new Error("unsupported type " + type);
	            }
	        }
	        if (!this.rolledUp() && !measures.find(function (m) { return m.name === 'count'; })) {
	            measures = measures.unshift(new measure_1.Measure({
	                name: 'count',
	                formula: $main.count().toString()
	            }));
	        }
	        var value = this.valueOf();
	        value.attributes = attributes ? plywood_1.AttributeInfo.override(attributes, newAttributes) : newAttributes;
	        value.dimensions = dimensions;
	        value.measures = measures;
	        if (!value.defaultSortMeasure) {
	            value.defaultSortMeasure = measures.size ? measures.first().name : null;
	        }
	        if (!value.timeAttribute && dimensions.size && dimensions.first().kind === 'time') {
	            value.timeAttribute = dimensions.first().expression;
	        }
	        return new DataCube(value);
	    };
	    DataCube.prototype.getIntrospection = function () {
	        return this.introspection || DataCube.DEFAULT_INTROSPECTION;
	    };
	    DataCube.prototype.getDefaultTimezone = function () {
	        return this.defaultTimezone || DataCube.DEFAULT_DEFAULT_TIMEZONE;
	    };
	    DataCube.prototype.getDefaultFilter = function () {
	        var filter = this.defaultFilter || DataCube.DEFAULT_DEFAULT_FILTER;
	        if (this.timeAttribute) {
	            filter = filter.setSelection(this.timeAttribute, plywood_1.$(filter_clause_1.FilterClause.MAX_TIME_REF_NAME).timeRange(this.getDefaultDuration(), -1));
	        }
	        return filter;
	    };
	    DataCube.prototype.getDefaultSplits = function () {
	        return this.defaultSplits || DataCube.DEFAULT_DEFAULT_SPLITS;
	    };
	    DataCube.prototype.getDefaultDuration = function () {
	        return this.defaultDuration || DataCube.DEFAULT_DEFAULT_DURATION;
	    };
	    DataCube.prototype.getDefaultSortMeasure = function () {
	        if (this.defaultSortMeasure) {
	            return this.defaultSortMeasure;
	        }
	        if (this.measures.size > 0) {
	            this.measures.first().name;
	        }
	        return null;
	    };
	    DataCube.prototype.getDefaultSelectedMeasures = function () {
	        return this.defaultSelectedMeasures || immutable_1.OrderedSet(this.measures.slice(0, 4).map(function (m) { return m.name; }));
	    };
	    DataCube.prototype.getDefaultPinnedDimensions = function () {
	        return this.defaultPinnedDimensions || immutable_1.OrderedSet([]);
	    };
	    DataCube.prototype.change = function (propertyName, newValue) {
	        var v = this.valueOf();
	        if (!v.hasOwnProperty(propertyName)) {
	            throw new Error("Unknown property : " + propertyName);
	        }
	        v[propertyName] = newValue;
	        return new DataCube(v);
	    };
	    DataCube.prototype.changeDefaultSortMeasure = function (defaultSortMeasure) {
	        return this.change('defaultSortMeasure', defaultSortMeasure);
	    };
	    DataCube.prototype.changeTitle = function (title) {
	        return this.change('title', title);
	    };
	    DataCube.prototype.changeDescription = function (description) {
	        return this.change('description', description);
	    };
	    DataCube.prototype.changeMeasures = function (measures) {
	        return this.change('measures', measures);
	    };
	    DataCube.prototype.getDefaultSortAction = function () {
	        return new plywood_1.SortAction({
	            expression: plywood_1.$(this.defaultSortMeasure),
	            direction: plywood_1.SortAction.DESCENDING
	        });
	    };
	    DataCube.prototype.sameGroup = function (otherDataCube) {
	        return Boolean(this.group && this.group === otherDataCube.group);
	    };
	    DataCube.DEFAULT_INTROSPECTION = 'autofill-all';
	    DataCube.INTROSPECTION_VALUES = ['none', 'no-autofill', 'autofill-dimensions-only', 'autofill-measures-only', 'autofill-all'];
	    DataCube.DEFAULT_DEFAULT_TIMEZONE = chronoshift_1.Timezone.UTC;
	    DataCube.DEFAULT_DEFAULT_FILTER = filter_1.Filter.EMPTY;
	    DataCube.DEFAULT_DEFAULT_SPLITS = splits_1.Splits.EMPTY;
	    DataCube.DEFAULT_DEFAULT_DURATION = chronoshift_1.Duration.fromJS('P1D');
	    return DataCube;
	}());
	exports.DataCube = DataCube;
	check = DataCube;


/***/ },
/* 221 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var d3 = __webpack_require__(222);
	var chronoshift_1 = __webpack_require__(191);
	var FORMAT_WITH_YEAR = d3.time.format('%b %-d, %Y');
	var FORMAT_WITHOUT_YEAR = d3.time.format('%b %-d');
	var FORMAT_TIME_OF_DAY_WITHOUT_MINUTES = d3.time.format('%-I%p');
	var FORMAT_TIME_OF_DAY_WITH_MINUTES = d3.time.format('%-I:%M%p');
	var FORMAT_FULL_MONTH_WITH_YEAR = d3.time.format('%B %Y');
	function formatTimeOfDay(d) {
	    return d.getMinutes() ? FORMAT_TIME_OF_DAY_WITH_MINUTES(d) : FORMAT_TIME_OF_DAY_WITHOUT_MINUTES(d);
	}
	function isCurrentYear(year, timezone) {
	    var nowWallTime = chronoshift_1.WallTime.UTCToWallTime(new Date(), timezone.toString());
	    return nowWallTime.getFullYear() === year;
	}
	(function (DisplayYear) {
	    DisplayYear[DisplayYear["ALWAYS"] = 0] = "ALWAYS";
	    DisplayYear[DisplayYear["NEVER"] = 1] = "NEVER";
	    DisplayYear[DisplayYear["IF_DIFF"] = 2] = "IF_DIFF";
	})(exports.DisplayYear || (exports.DisplayYear = {}));
	var DisplayYear = exports.DisplayYear;
	function getEndWallTimeInclusive(exclusiveEnd, timezone) {
	    return chronoshift_1.WallTime.UTCToWallTime(exclusiveToInclusiveEnd(exclusiveEnd), timezone.toString());
	}
	exports.getEndWallTimeInclusive = getEndWallTimeInclusive;
	function exclusiveToInclusiveEnd(exclusiveEnd) {
	    return new Date(exclusiveEnd.valueOf() - 1);
	}
	exports.exclusiveToInclusiveEnd = exclusiveToInclusiveEnd;
	function formatTimeRange(timeRange, timezone, displayYear) {
	    var start = timeRange.start, end = timeRange.end;
	    var startWallTime = chronoshift_1.WallTime.UTCToWallTime(start, timezone.toString());
	    var endWallTime = chronoshift_1.WallTime.UTCToWallTime(end, timezone.toString());
	    var endWallTimeInclusive = getEndWallTimeInclusive(end, timezone);
	    var showingYear = true;
	    var formatted;
	    if (startWallTime.getFullYear() !== endWallTimeInclusive.getFullYear()) {
	        formatted = [FORMAT_WITH_YEAR(startWallTime), FORMAT_WITH_YEAR(endWallTimeInclusive)].join(' - ');
	    }
	    else {
	        showingYear = displayYear === DisplayYear.ALWAYS || (displayYear === DisplayYear.IF_DIFF && !isCurrentYear(endWallTimeInclusive.getFullYear(), timezone));
	        var fmt = showingYear ? FORMAT_WITH_YEAR : FORMAT_WITHOUT_YEAR;
	        if (startWallTime.getMonth() !== endWallTimeInclusive.getMonth() || startWallTime.getDate() !== endWallTimeInclusive.getDate()) {
	            formatted = [FORMAT_WITHOUT_YEAR(startWallTime), fmt(endWallTimeInclusive)].join(' - ');
	        }
	        else {
	            formatted = fmt(startWallTime);
	        }
	    }
	    if (startWallTime.getHours() || startWallTime.getMinutes() || endWallTime.getHours() || endWallTime.getMinutes()) {
	        formatted += (showingYear ? ' ' : ', ');
	        var startTimeStr = formatTimeOfDay(startWallTime).toLowerCase();
	        var endTimeStr = formatTimeOfDay(endWallTime).toLowerCase();
	        if (startTimeStr === endTimeStr) {
	            formatted += startTimeStr;
	        }
	        else {
	            if (startTimeStr.substr(-2) === endTimeStr.substr(-2)) {
	                startTimeStr = startTimeStr.substr(0, startTimeStr.length - 2);
	            }
	            formatted += [startTimeStr, endTimeStr].join('-');
	        }
	    }
	    return formatted;
	}
	exports.formatTimeRange = formatTimeRange;
	function monthToWeeks(firstDayOfMonth, timezone, locale) {
	    var weeks = [];
	    var firstDayNextMonth = chronoshift_1.month.shift(firstDayOfMonth, timezone, 1);
	    var week = [];
	    var currentPointer = chronoshift_1.day.floor(firstDayOfMonth, timezone);
	    while (currentPointer < firstDayNextMonth) {
	        var wallTime = chronoshift_1.WallTime.UTCToWallTime(currentPointer, timezone.toString());
	        if ((wallTime.getDay() === locale.weekStart || 0) && week.length > 0) {
	            weeks.push(week);
	            week = [];
	        }
	        week.push(currentPointer);
	        currentPointer = chronoshift_1.day.shift(currentPointer, timezone, 1);
	    }
	    if (week.length > 0)
	        weeks.push(week);
	    return weeks;
	}
	exports.monthToWeeks = monthToWeeks;
	function prependDays(timezone, weekPrependTo, countPrepend) {
	    for (var i = 0; i < countPrepend; i++) {
	        var firstDate = weekPrependTo[0];
	        var shiftedDate = chronoshift_1.day.shift(firstDate, timezone, -1);
	        weekPrependTo.unshift(shiftedDate);
	    }
	    return weekPrependTo;
	}
	exports.prependDays = prependDays;
	function appendDays(timezone, weekAppendTo, countAppend) {
	    for (var i = 0; i < countAppend; i++) {
	        var lastDate = weekAppendTo[weekAppendTo.length - 1];
	        var shiftedDate = chronoshift_1.day.shift(lastDate, timezone, 1);
	        weekAppendTo.push(shiftedDate);
	    }
	    return weekAppendTo;
	}
	exports.appendDays = appendDays;
	function shiftOneDay(floored, timezone) {
	    return chronoshift_1.day.shift(floored, timezone, 1);
	}
	exports.shiftOneDay = shiftOneDay;
	function datesEqual(d1, d2) {
	    if (!Boolean(d1) === Boolean(d2))
	        return false;
	    if (d1 === d2)
	        return true;
	    return d1.valueOf() === d2.valueOf();
	}
	exports.datesEqual = datesEqual;
	function getWallTimeDay(date, timezone) {
	    return chronoshift_1.WallTime.UTCToWallTime(date, timezone.toString()).getDate();
	}
	exports.getWallTimeDay = getWallTimeDay;
	function getWallTimeMonthWithYear(date, timezone) {
	    return FORMAT_FULL_MONTH_WITH_YEAR(chronoshift_1.WallTime.UTCToWallTime(date, timezone.toString()));
	}
	exports.getWallTimeMonthWithYear = getWallTimeMonthWithYear;
	function wallTimeInclusiveEndEqual(d1, d2, timezone) {
	    if (!Boolean(d1) === Boolean(d2))
	        return false;
	    if (d1 === d2)
	        return true;
	    var d1InclusiveEnd = wallTimeHelper(getEndWallTimeInclusive(d1, timezone));
	    var d2InclusiveEnd = wallTimeHelper(getEndWallTimeInclusive(d2, timezone));
	    return datesEqual(d1InclusiveEnd, d2InclusiveEnd);
	}
	exports.wallTimeInclusiveEndEqual = wallTimeInclusiveEndEqual;
	function getWallTimeString(date, timezone, includeTime, delimiter) {
	    var wallTimeISOString = cleanISOString(wallTimeHelper(chronoshift_1.WallTime.UTCToWallTime(date, timezone.toString())).toISOString());
	    if (includeTime) {
	        return wallTimeISOString.replace('T', delimiter || ', ');
	    }
	    return wallTimeISOString.replace(/:\d\d/, '').split('T')[0];
	}
	exports.getWallTimeString = getWallTimeString;
	function wallTimeHelper(wallTime) {
	    return wallTime['wallTime'];
	}
	function cleanISOString(input) {
	    return input.replace(/(\.\d\d\d)?Z?$/, '');
	}
	function pad(input) {
	    if (input < 10)
	        return "0" + input;
	    return String(input);
	}
	function formatTimeBasedOnGranularity(range, granularity, timezone, locale) {
	    var wallTimeStart = chronoshift_1.WallTime.UTCToWallTime(range.start, timezone.toString());
	    var year = wallTimeStart.getFullYear();
	    var month = wallTimeStart.getMonth();
	    var day = wallTimeStart.getDate();
	    var hour = wallTimeStart.getHours();
	    var minute = wallTimeStart.getMinutes();
	    var second = wallTimeStart.getSeconds();
	    var monthString = locale.shortMonths[month];
	    var hourToTwelve = hour % 12 === 0 ? 12 : hour % 12;
	    var amPm = (hour / 12) >= 1 ? 'pm' : 'am';
	    var granularityString = granularity.toJS();
	    var unit = granularityString.substring(granularityString.length - 1);
	    switch (unit) {
	        case 'S':
	            return monthString + " " + day + ", " + pad(hour) + ":" + pad(minute) + ":" + pad(second);
	        case 'M':
	            var prefix = granularityString.substring(0, 2);
	            return prefix === "PT" ? monthString + " " + day + ", " + hourToTwelve + ":" + pad(minute) + amPm : monthString + ", " + year;
	        case 'H':
	            return monthString + " " + day + ", " + year + ", " + hourToTwelve + amPm;
	        case 'D':
	            return monthString + " " + day + ", " + year;
	        case 'W':
	            return "" + formatTimeRange(range, timezone, DisplayYear.ALWAYS);
	        default:
	            return cleanISOString(wallTimeHelper(wallTimeStart).toISOString());
	    }
	}
	exports.formatTimeBasedOnGranularity = formatTimeBasedOnGranularity;
	function formatGranularity(granularity) {
	    return granularity.replace(/^PT?/, '');
	}
	exports.formatGranularity = formatGranularity;


/***/ },
/* 222 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;!function() {
	  var d3 = {
	    version: "3.5.17"
	  };
	  var d3_arraySlice = [].slice, d3_array = function(list) {
	    return d3_arraySlice.call(list);
	  };
	  var d3_document = this.document;
	  function d3_documentElement(node) {
	    return node && (node.ownerDocument || node.document || node).documentElement;
	  }
	  function d3_window(node) {
	    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);
	  }
	  if (d3_document) {
	    try {
	      d3_array(d3_document.documentElement.childNodes)[0].nodeType;
	    } catch (e) {
	      d3_array = function(list) {
	        var i = list.length, array = new Array(i);
	        while (i--) array[i] = list[i];
	        return array;
	      };
	    }
	  }
	  if (!Date.now) Date.now = function() {
	    return +new Date();
	  };
	  if (d3_document) {
	    try {
	      d3_document.createElement("DIV").style.setProperty("opacity", 0, "");
	    } catch (error) {
	      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;
	      d3_element_prototype.setAttribute = function(name, value) {
	        d3_element_setAttribute.call(this, name, value + "");
	      };
	      d3_element_prototype.setAttributeNS = function(space, local, value) {
	        d3_element_setAttributeNS.call(this, space, local, value + "");
	      };
	      d3_style_prototype.setProperty = function(name, value, priority) {
	        d3_style_setProperty.call(this, name, value + "", priority);
	      };
	    }
	  }
	  d3.ascending = d3_ascending;
	  function d3_ascending(a, b) {
	    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;
	  }
	  d3.descending = function(a, b) {
	    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;
	  };
	  d3.min = function(array, f) {
	    var i = -1, n = array.length, a, b;
	    if (arguments.length === 1) {
	      while (++i < n) if ((b = array[i]) != null && b >= b) {
	        a = b;
	        break;
	      }
	      while (++i < n) if ((b = array[i]) != null && a > b) a = b;
	    } else {
	      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {
	        a = b;
	        break;
	      }
	      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;
	    }
	    return a;
	  };
	  d3.max = function(array, f) {
	    var i = -1, n = array.length, a, b;
	    if (arguments.length === 1) {
	      while (++i < n) if ((b = array[i]) != null && b >= b) {
	        a = b;
	        break;
	      }
	      while (++i < n) if ((b = array[i]) != null && b > a) a = b;
	    } else {
	      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {
	        a = b;
	        break;
	      }
	      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;
	    }
	    return a;
	  };
	  d3.extent = function(array, f) {
	    var i = -1, n = array.length, a, b, c;
	    if (arguments.length === 1) {
	      while (++i < n) if ((b = array[i]) != null && b >= b) {
	        a = c = b;
	        break;
	      }
	      while (++i < n) if ((b = array[i]) != null) {
	        if (a > b) a = b;
	        if (c < b) c = b;
	      }
	    } else {
	      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {
	        a = c = b;
	        break;
	      }
	      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {
	        if (a > b) a = b;
	        if (c < b) c = b;
	      }
	    }
	    return [ a, c ];
	  };
	  function d3_number(x) {
	    return x === null ? NaN : +x;
	  }
	  function d3_numeric(x) {
	    return !isNaN(x);
	  }
	  d3.sum = function(array, f) {
	    var s = 0, n = array.length, a, i = -1;
	    if (arguments.length === 1) {
	      while (++i < n) if (d3_numeric(a = +array[i])) s += a;
	    } else {
	      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;
	    }
	    return s;
	  };
	  d3.mean = function(array, f) {
	    var s = 0, n = array.length, a, i = -1, j = n;
	    if (arguments.length === 1) {
	      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;
	    } else {
	      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;
	    }
	    if (j) return s / j;
	  };
	  d3.quantile = function(values, p) {
	    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;
	    return e ? v + e * (values[h] - v) : v;
	  };
	  d3.median = function(array, f) {
	    var numbers = [], n = array.length, a, i = -1;
	    if (arguments.length === 1) {
	      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);
	    } else {
	      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);
	    }
	    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);
	  };
	  d3.variance = function(array, f) {
	    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;
	    if (arguments.length === 1) {
	      while (++i < n) {
	        if (d3_numeric(a = d3_number(array[i]))) {
	          d = a - m;
	          m += d / ++j;
	          s += d * (a - m);
	        }
	      }
	    } else {
	      while (++i < n) {
	        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {
	          d = a - m;
	          m += d / ++j;
	          s += d * (a - m);
	        }
	      }
	    }
	    if (j > 1) return s / (j - 1);
	  };
	  d3.deviation = function() {
	    var v = d3.variance.apply(this, arguments);
	    return v ? Math.sqrt(v) : v;
	  };
	  function d3_bisector(compare) {
	    return {
	      left: function(a, x, lo, hi) {
	        if (arguments.length < 3) lo = 0;
	        if (arguments.length < 4) hi = a.length;
	        while (lo < hi) {
	          var mid = lo + hi >>> 1;
	          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;
	        }
	        return lo;
	      },
	      right: function(a, x, lo, hi) {
	        if (arguments.length < 3) lo = 0;
	        if (arguments.length < 4) hi = a.length;
	        while (lo < hi) {
	          var mid = lo + hi >>> 1;
	          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;
	        }
	        return lo;
	      }
	    };
	  }
	  var d3_bisect = d3_bisector(d3_ascending);
	  d3.bisectLeft = d3_bisect.left;
	  d3.bisect = d3.bisectRight = d3_bisect.right;
	  d3.bisector = function(f) {
	    return d3_bisector(f.length === 1 ? function(d, x) {
	      return d3_ascending(f(d), x);
	    } : f);
	  };
	  d3.shuffle = function(array, i0, i1) {
	    if ((m = arguments.length) < 3) {
	      i1 = array.length;
	      if (m < 2) i0 = 0;
	    }
	    var m = i1 - i0, t, i;
	    while (m) {
	      i = Math.random() * m-- | 0;
	      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;
	    }
	    return array;
	  };
	  d3.permute = function(array, indexes) {
	    var i = indexes.length, permutes = new Array(i);
	    while (i--) permutes[i] = array[indexes[i]];
	    return permutes;
	  };
	  d3.pairs = function(array) {
	    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);
	    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];
	    return pairs;
	  };
	  d3.transpose = function(matrix) {
	    if (!(n = matrix.length)) return [];
	    for (var i = -1, m = d3.min(matrix, d3_transposeLength), transpose = new Array(m); ++i < m; ) {
	      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n; ) {
	        row[j] = matrix[j][i];
	      }
	    }
	    return transpose;
	  };
	  function d3_transposeLength(d) {
	    return d.length;
	  }
	  d3.zip = function() {
	    return d3.transpose(arguments);
	  };
	  d3.keys = function(map) {
	    var keys = [];
	    for (var key in map) keys.push(key);
	    return keys;
	  };
	  d3.values = function(map) {
	    var values = [];
	    for (var key in map) values.push(map[key]);
	    return values;
	  };
	  d3.entries = function(map) {
	    var entries = [];
	    for (var key in map) entries.push({
	      key: key,
	      value: map[key]
	    });
	    return entries;
	  };
	  d3.merge = function(arrays) {
	    var n = arrays.length, m, i = -1, j = 0, merged, array;
	    while (++i < n) j += arrays[i].length;
	    merged = new Array(j);
	    while (--n >= 0) {
	      array = arrays[n];
	      m = array.length;
	      while (--m >= 0) {
	        merged[--j] = array[m];
	      }
	    }
	    return merged;
	  };
	  var abs = Math.abs;
	  d3.range = function(start, stop, step) {
	    if (arguments.length < 3) {
	      step = 1;
	      if (arguments.length < 2) {
	        stop = start;
	        start = 0;
	      }
	    }
	    if ((stop - start) / step === Infinity) throw new Error("infinite range");
	    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;
	    start *= k, stop *= k, step *= k;
	    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);
	    return range;
	  };
	  function d3_range_integerScale(x) {
	    var k = 1;
	    while (x * k % 1) k *= 10;
	    return k;
	  }
	  function d3_class(ctor, properties) {
	    for (var key in properties) {
	      Object.defineProperty(ctor.prototype, key, {
	        value: properties[key],
	        enumerable: false
	      });
	    }
	  }
	  d3.map = function(object, f) {
	    var map = new d3_Map();
	    if (object instanceof d3_Map) {
	      object.forEach(function(key, value) {
	        map.set(key, value);
	      });
	    } else if (Array.isArray(object)) {
	      var i = -1, n = object.length, o;
	      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);
	    } else {
	      for (var key in object) map.set(key, object[key]);
	    }
	    return map;
	  };
	  function d3_Map() {
	    this._ = Object.create(null);
	  }
	  var d3_map_proto = "__proto__", d3_map_zero = "\x00";
	  d3_class(d3_Map, {
	    has: d3_map_has,
	    get: function(key) {
	      return this._[d3_map_escape(key)];
	    },
	    set: function(key, value) {
	      return this._[d3_map_escape(key)] = value;
	    },
	    remove: d3_map_remove,
	    keys: d3_map_keys,
	    values: function() {
	      var values = [];
	      for (var key in this._) values.push(this._[key]);
	      return values;
	    },
	    entries: function() {
	      var entries = [];
	      for (var key in this._) entries.push({
	        key: d3_map_unescape(key),
	        value: this._[key]
	      });
	      return entries;
	    },
	    size: d3_map_size,
	    empty: d3_map_empty,
	    forEach: function(f) {
	      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);
	    }
	  });
	  function d3_map_escape(key) {
	    return (key += "") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;
	  }
	  function d3_map_unescape(key) {
	    return (key += "")[0] === d3_map_zero ? key.slice(1) : key;
	  }
	  function d3_map_has(key) {
	    return d3_map_escape(key) in this._;
	  }
	  function d3_map_remove(key) {
	    return (key = d3_map_escape(key)) in this._ && delete this._[key];
	  }
	  function d3_map_keys() {
	    var keys = [];
	    for (var key in this._) keys.push(d3_map_unescape(key));
	    return keys;
	  }
	  function d3_map_size() {
	    var size = 0;
	    for (var key in this._) ++size;
	    return size;
	  }
	  function d3_map_empty() {
	    for (var key in this._) return false;
	    return true;
	  }
	  d3.nest = function() {
	    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;
	    function map(mapType, array, depth) {
	      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;
	      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;
	      while (++i < n) {
	        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {
	          values.push(object);
	        } else {
	          valuesByKey.set(keyValue, [ object ]);
	        }
	      }
	      if (mapType) {
	        object = mapType();
	        setter = function(keyValue, values) {
	          object.set(keyValue, map(mapType, values, depth));
	        };
	      } else {
	        object = {};
	        setter = function(keyValue, values) {
	          object[keyValue] = map(mapType, values, depth);
	        };
	      }
	      valuesByKey.forEach(setter);
	      return object;
	    }
	    function entries(map, depth) {
	      if (depth >= keys.length) return map;
	      var array = [], sortKey = sortKeys[depth++];
	      map.forEach(function(key, keyMap) {
	        array.push({
	          key: key,
	          values: entries(keyMap, depth)
	        });
	      });
	      return sortKey ? array.sort(function(a, b) {
	        return sortKey(a.key, b.key);
	      }) : array;
	    }
	    nest.map = function(array, mapType) {
	      return map(mapType, array, 0);
	    };
	    nest.entries = function(array) {
	      return entries(map(d3.map, array, 0), 0);
	    };
	    nest.key = function(d) {
	      keys.push(d);
	      return nest;
	    };
	    nest.sortKeys = function(order) {
	      sortKeys[keys.length - 1] = order;
	      return nest;
	    };
	    nest.sortValues = function(order) {
	      sortValues = order;
	      return nest;
	    };
	    nest.rollup = function(f) {
	      rollup = f;
	      return nest;
	    };
	    return nest;
	  };
	  d3.set = function(array) {
	    var set = new d3_Set();
	    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);
	    return set;
	  };
	  function d3_Set() {
	    this._ = Object.create(null);
	  }
	  d3_class(d3_Set, {
	    has: d3_map_has,
	    add: function(key) {
	      this._[d3_map_escape(key += "")] = true;
	      return key;
	    },
	    remove: d3_map_remove,
	    values: d3_map_keys,
	    size: d3_map_size,
	    empty: d3_map_empty,
	    forEach: function(f) {
	      for (var key in this._) f.call(this, d3_map_unescape(key));
	    }
	  });
	  d3.behavior = {};
	  function d3_identity(d) {
	    return d;
	  }
	  d3.rebind = function(target, source) {
	    var i = 1, n = arguments.length, method;
	    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);
	    return target;
	  };
	  function d3_rebind(target, source, method) {
	    return function() {
	      var value = method.apply(source, arguments);
	      return value === source ? target : value;
	    };
	  }
	  function d3_vendorSymbol(object, name) {
	    if (name in object) return name;
	    name = name.charAt(0).toUpperCase() + name.slice(1);
	    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {
	      var prefixName = d3_vendorPrefixes[i] + name;
	      if (prefixName in object) return prefixName;
	    }
	  }
	  var d3_vendorPrefixes = [ "webkit", "ms", "moz", "Moz", "o", "O" ];
	  function d3_noop() {}
	  d3.dispatch = function() {
	    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;
	    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);
	    return dispatch;
	  };
	  function d3_dispatch() {}
	  d3_dispatch.prototype.on = function(type, listener) {
	    var i = type.indexOf("."), name = "";
	    if (i >= 0) {
	      name = type.slice(i + 1);
	      type = type.slice(0, i);
	    }
	    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);
	    if (arguments.length === 2) {
	      if (listener == null) for (type in this) {
	        if (this.hasOwnProperty(type)) this[type].on(name, null);
	      }
	      return this;
	    }
	  };
	  function d3_dispatch_event(dispatch) {
	    var listeners = [], listenerByName = new d3_Map();
	    function event() {
	      var z = listeners, i = -1, n = z.length, l;
	      while (++i < n) if (l = z[i].on) l.apply(this, arguments);
	      return dispatch;
	    }
	    event.on = function(name, listener) {
	      var l = listenerByName.get(name), i;
	      if (arguments.length < 2) return l && l.on;
	      if (l) {
	        l.on = null;
	        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));
	        listenerByName.remove(name);
	      }
	      if (listener) listeners.push(listenerByName.set(name, {
	        on: listener
	      }));
	      return dispatch;
	    };
	    return event;
	  }
	  d3.event = null;
	  function d3_eventPreventDefault() {
	    d3.event.preventDefault();
	  }
	  function d3_eventSource() {
	    var e = d3.event, s;
	    while (s = e.sourceEvent) e = s;
	    return e;
	  }
	  function d3_eventDispatch(target) {
	    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;
	    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);
	    dispatch.of = function(thiz, argumentz) {
	      return function(e1) {
	        try {
	          var e0 = e1.sourceEvent = d3.event;
	          e1.target = target;
	          d3.event = e1;
	          dispatch[e1.type].apply(thiz, argumentz);
	        } finally {
	          d3.event = e0;
	        }
	      };
	    };
	    return dispatch;
	  }
	  d3.requote = function(s) {
	    return s.replace(d3_requote_re, "\\$&");
	  };
	  var d3_requote_re = /[\\\^\$\*\+\?\|\[\]\(\)\.\{\}]/g;
	  var d3_subclass = {}.__proto__ ? function(object, prototype) {
	    object.__proto__ = prototype;
	  } : function(object, prototype) {
	    for (var property in prototype) object[property] = prototype[property];
	  };
	  function d3_selection(groups) {
	    d3_subclass(groups, d3_selectionPrototype);
	    return groups;
	  }
	  var d3_select = function(s, n) {
	    return n.querySelector(s);
	  }, d3_selectAll = function(s, n) {
	    return n.querySelectorAll(s);
	  }, d3_selectMatches = function(n, s) {
	    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, "matchesSelector")];
	    d3_selectMatches = function(n, s) {
	      return d3_selectMatcher.call(n, s);
	    };
	    return d3_selectMatches(n, s);
	  };
	  if (typeof Sizzle === "function") {
	    d3_select = function(s, n) {
	      return Sizzle(s, n)[0] || null;
	    };
	    d3_selectAll = Sizzle;
	    d3_selectMatches = Sizzle.matchesSelector;
	  }
	  d3.selection = function() {
	    return d3.select(d3_document.documentElement);
	  };
	  var d3_selectionPrototype = d3.selection.prototype = [];
	  d3_selectionPrototype.select = function(selector) {
	    var subgroups = [], subgroup, subnode, group, node;
	    selector = d3_selection_selector(selector);
	    for (var j = -1, m = this.length; ++j < m; ) {
	      subgroups.push(subgroup = []);
	      subgroup.parentNode = (group = this[j]).parentNode;
	      for (var i = -1, n = group.length; ++i < n; ) {
	        if (node = group[i]) {
	          subgroup.push(subnode = selector.call(node, node.__data__, i, j));
	          if (subnode && "__data__" in node) subnode.__data__ = node.__data__;
	        } else {
	          subgroup.push(null);
	        }
	      }
	    }
	    return d3_selection(subgroups);
	  };
	  function d3_selection_selector(selector) {
	    return typeof selector === "function" ? selector : function() {
	      return d3_select(selector, this);
	    };
	  }
	  d3_selectionPrototype.selectAll = function(selector) {
	    var subgroups = [], subgroup, node;
	    selector = d3_selection_selectorAll(selector);
	    for (var j = -1, m = this.length; ++j < m; ) {
	      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {
	        if (node = group[i]) {
	          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));
	          subgroup.parentNode = node;
	        }
	      }
	    }
	    return d3_selection(subgroups);
	  };
	  function d3_selection_selectorAll(selector) {
	    return typeof selector === "function" ? selector : function() {
	      return d3_selectAll(selector, this);
	    };
	  }
	  var d3_nsXhtml = "http://www.w3.org/1999/xhtml";
	  var d3_nsPrefix = {
	    svg: "http://www.w3.org/2000/svg",
	    xhtml: d3_nsXhtml,
	    xlink: "http://www.w3.org/1999/xlink",
	    xml: "http://www.w3.org/XML/1998/namespace",
	    xmlns: "http://www.w3.org/2000/xmlns/"
	  };
	  d3.ns = {
	    prefix: d3_nsPrefix,
	    qualify: function(name) {
	      var i = name.indexOf(":"), prefix = name;
	      if (i >= 0 && (prefix = name.slice(0, i)) !== "xmlns") name = name.slice(i + 1);
	      return d3_nsPrefix.hasOwnProperty(prefix) ? {
	        space: d3_nsPrefix[prefix],
	        local: name
	      } : name;
	    }
	  };
	  d3_selectionPrototype.attr = function(name, value) {
	    if (arguments.length < 2) {
	      if (typeof name === "string") {
	        var node = this.node();
	        name = d3.ns.qualify(name);
	        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);
	      }
	      for (value in name) this.each(d3_selection_attr(value, name[value]));
	      return this;
	    }
	    return this.each(d3_selection_attr(name, value));
	  };
	  function d3_selection_attr(name, value) {
	    name = d3.ns.qualify(name);
	    function attrNull() {
	      this.removeAttribute(name);
	    }
	    function attrNullNS() {
	      this.removeAttributeNS(name.space, name.local);
	    }
	    function attrConstant() {
	      this.setAttribute(name, value);
	    }
	    function attrConstantNS() {
	      this.setAttributeNS(name.space, name.local, value);
	    }
	    function attrFunction() {
	      var x = value.apply(this, arguments);
	      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);
	    }
	    function attrFunctionNS() {
	      var x = value.apply(this, arguments);
	      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);
	    }
	    return value == null ? name.local ? attrNullNS : attrNull : typeof value === "function" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;
	  }
	  function d3_collapse(s) {
	    return s.trim().replace(/\s+/g, " ");
	  }
	  d3_selectionPrototype.classed = function(name, value) {
	    if (arguments.length < 2) {
	      if (typeof name === "string") {
	        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;
	        if (value = node.classList) {
	          while (++i < n) if (!value.contains(name[i])) return false;
	        } else {
	          value = node.getAttribute("class");
	          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;
	        }
	        return true;
	      }
	      for (value in name) this.each(d3_selection_classed(value, name[value]));
	      return this;
	    }
	    return this.each(d3_selection_classed(name, value));
	  };
	  function d3_selection_classedRe(name) {
	    return new RegExp("(?:^|\\s+)" + d3.requote(name) + "(?:\\s+|$)", "g");
	  }
	  function d3_selection_classes(name) {
	    return (name + "").trim().split(/^|\s+/);
	  }
	  function d3_selection_classed(name, value) {
	    name = d3_selection_classes(name).map(d3_selection_classedName);
	    var n = name.length;
	    function classedConstant() {
	      var i = -1;
	      while (++i < n) name[i](this, value);
	    }
	    function classedFunction() {
	      var i = -1, x = value.apply(this, arguments);
	      while (++i < n) name[i](this, x);
	    }
	    return typeof value === "function" ? classedFunction : classedConstant;
	  }
	  function d3_selection_classedName(name) {
	    var re = d3_selection_classedRe(name);
	    return function(node, value) {
	      if (c = node.classList) return value ? c.add(name) : c.remove(name);
	      var c = node.getAttribute("class") || "";
	      if (value) {
	        re.lastIndex = 0;
	        if (!re.test(c)) node.setAttribute("class", d3_collapse(c + " " + name));
	      } else {
	        node.setAttribute("class", d3_collapse(c.replace(re, " ")));
	      }
	    };
	  }
	  d3_selectionPrototype.style = function(name, value, priority) {
	    var n = arguments.length;
	    if (n < 3) {
	      if (typeof name !== "string") {
	        if (n < 2) value = "";
	        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));
	        return this;
	      }
	      if (n < 2) {
	        var node = this.node();
	        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);
	      }
	      priority = "";
	    }
	    return this.each(d3_selection_style(name, value, priority));
	  };
	  function d3_selection_style(name, value, priority) {
	    function styleNull() {
	      this.style.removeProperty(name);
	    }
	    function styleConstant() {
	      this.style.setProperty(name, value, priority);
	    }
	    function styleFunction() {
	      var x = value.apply(this, arguments);
	      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);
	    }
	    return value == null ? styleNull : typeof value === "function" ? styleFunction : styleConstant;
	  }
	  d3_selectionPrototype.property = function(name, value) {
	    if (arguments.length < 2) {
	      if (typeof name === "string") return this.node()[name];
	      for (value in name) this.each(d3_selection_property(value, name[value]));
	      return this;
	    }
	    return this.each(d3_selection_property(name, value));
	  };
	  function d3_selection_property(name, value) {
	    function propertyNull() {
	      delete this[name];
	    }
	    function propertyConstant() {
	      this[name] = value;
	    }
	    function propertyFunction() {
	      var x = value.apply(this, arguments);
	      if (x == null) delete this[name]; else this[name] = x;
	    }
	    return value == null ? propertyNull : typeof value === "function" ? propertyFunction : propertyConstant;
	  }
	  d3_selectionPrototype.text = function(value) {
	    return arguments.length ? this.each(typeof value === "function" ? function() {
	      var v = value.apply(this, arguments);
	      this.textContent = v == null ? "" : v;
	    } : value == null ? function() {
	      this.textContent = "";
	    } : function() {
	      this.textContent = value;
	    }) : this.node().textContent;
	  };
	  d3_selectionPrototype.html = function(value) {
	    return arguments.length ? this.each(typeof value === "function" ? function() {
	      var v = value.apply(this, arguments);
	      this.innerHTML = v == null ? "" : v;
	    } : value == null ? function() {
	      this.innerHTML = "";
	    } : function() {
	      this.innerHTML = value;
	    }) : this.node().innerHTML;
	  };
	  d3_selectionPrototype.append = function(name) {
	    name = d3_selection_creator(name);
	    return this.select(function() {
	      return this.appendChild(name.apply(this, arguments));
	    });
	  };
	  function d3_selection_creator(name) {
	    function create() {
	      var document = this.ownerDocument, namespace = this.namespaceURI;
	      return namespace === d3_nsXhtml && document.documentElement.namespaceURI === d3_nsXhtml ? document.createElement(name) : document.createElementNS(namespace, name);
	    }
	    function createNS() {
	      return this.ownerDocument.createElementNS(name.space, name.local);
	    }
	    return typeof name === "function" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;
	  }
	  d3_selectionPrototype.insert = function(name, before) {
	    name = d3_selection_creator(name);
	    before = d3_selection_selector(before);
	    return this.select(function() {
	      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);
	    });
	  };
	  d3_selectionPrototype.remove = function() {
	    return this.each(d3_selectionRemove);
	  };
	  function d3_selectionRemove() {
	    var parent = this.parentNode;
	    if (parent) parent.removeChild(this);
	  }
	  d3_selectionPrototype.data = function(value, key) {
	    var i = -1, n = this.length, group, node;
	    if (!arguments.length) {
	      value = new Array(n = (group = this[0]).length);
	      while (++i < n) {
	        if (node = group[i]) {
	          value[i] = node.__data__;
	        }
	      }
	      return value;
	    }
	    function bind(group, groupData) {
	      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;
	      if (key) {
	        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;
	        for (i = -1; ++i < n; ) {
	          if (node = group[i]) {
	            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {
	              exitNodes[i] = node;
	            } else {
	              nodeByKeyValue.set(keyValue, node);
	            }
	            keyValues[i] = keyValue;
	          }
	        }
	        for (i = -1; ++i < m; ) {
	          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {
	            enterNodes[i] = d3_selection_dataNode(nodeData);
	          } else if (node !== true) {
	            updateNodes[i] = node;
	            node.__data__ = nodeData;
	          }
	          nodeByKeyValue.set(keyValue, true);
	        }
	        for (i = -1; ++i < n; ) {
	          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {
	            exitNodes[i] = group[i];
	          }
	        }
	      } else {
	        for (i = -1; ++i < n0; ) {
	          node = group[i];
	          nodeData = groupData[i];
	          if (node) {
	            node.__data__ = nodeData;
	            updateNodes[i] = node;
	          } else {
	            enterNodes[i] = d3_selection_dataNode(nodeData);
	          }
	        }
	        for (;i < m; ++i) {
	          enterNodes[i] = d3_selection_dataNode(groupData[i]);
	        }
	        for (;i < n; ++i) {
	          exitNodes[i] = group[i];
	        }
	      }
	      enterNodes.update = updateNodes;
	      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;
	      enter.push(enterNodes);
	      update.push(updateNodes);
	      exit.push(exitNodes);
	    }
	    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);
	    if (typeof value === "function") {
	      while (++i < n) {
	        bind(group = this[i], value.call(group, group.parentNode.__data__, i));
	      }
	    } else {
	      while (++i < n) {
	        bind(group = this[i], value);
	      }
	    }
	    update.enter = function() {
	      return enter;
	    };
	    update.exit = function() {
	      return exit;
	    };
	    return update;
	  };
	  function d3_selection_dataNode(data) {
	    return {
	      __data__: data
	    };
	  }
	  d3_selectionPrototype.datum = function(value) {
	    return arguments.length ? this.property("__data__", value) : this.property("__data__");
	  };
	  d3_selectionPrototype.filter = function(filter) {
	    var subgroups = [], subgroup, group, node;
	    if (typeof filter !== "function") filter = d3_selection_filter(filter);
	    for (var j = 0, m = this.length; j < m; j++) {
	      subgroups.push(subgroup = []);
	      subgroup.parentNode = (group = this[j]).parentNode;
	      for (var i = 0, n = group.length; i < n; i++) {
	        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {
	          subgroup.push(node);
	        }
	      }
	    }
	    return d3_selection(subgroups);
	  };
	  function d3_selection_filter(selector) {
	    return function() {
	      return d3_selectMatches(this, selector);
	    };
	  }
	  d3_selectionPrototype.order = function() {
	    for (var j = -1, m = this.length; ++j < m; ) {
	      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {
	        if (node = group[i]) {
	          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);
	          next = node;
	        }
	      }
	    }
	    return this;
	  };
	  d3_selectionPrototype.sort = function(comparator) {
	    comparator = d3_selection_sortComparator.apply(this, arguments);
	    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);
	    return this.order();
	  };
	  function d3_selection_sortComparator(comparator) {
	    if (!arguments.length) comparator = d3_ascending;
	    return function(a, b) {
	      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;
	    };
	  }
	  d3_selectionPrototype.each = function(callback) {
	    return d3_selection_each(this, function(node, i, j) {
	      callback.call(node, node.__data__, i, j);
	    });
	  };
	  function d3_selection_each(groups, callback) {
	    for (var j = 0, m = groups.length; j < m; j++) {
	      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {
	        if (node = group[i]) callback(node, i, j);
	      }
	    }
	    return groups;
	  }
	  d3_selectionPrototype.call = function(callback) {
	    var args = d3_array(arguments);
	    callback.apply(args[0] = this, args);
	    return this;
	  };
	  d3_selectionPrototype.empty = function() {
	    return !this.node();
	  };
	  d3_selectionPrototype.node = function() {
	    for (var j = 0, m = this.length; j < m; j++) {
	      for (var group = this[j], i = 0, n = group.length; i < n; i++) {
	        var node = group[i];
	        if (node) return node;
	      }
	    }
	    return null;
	  };
	  d3_selectionPrototype.size = function() {
	    var n = 0;
	    d3_selection_each(this, function() {
	      ++n;
	    });
	    return n;
	  };
	  function d3_selection_enter(selection) {
	    d3_subclass(selection, d3_selection_enterPrototype);
	    return selection;
	  }
	  var d3_selection_enterPrototype = [];
	  d3.selection.enter = d3_selection_enter;
	  d3.selection.enter.prototype = d3_selection_enterPrototype;
	  d3_selection_enterPrototype.append = d3_selectionPrototype.append;
	  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;
	  d3_selection_enterPrototype.node = d3_selectionPrototype.node;
	  d3_selection_enterPrototype.call = d3_selectionPrototype.call;
	  d3_selection_enterPrototype.size = d3_selectionPrototype.size;
	  d3_selection_enterPrototype.select = function(selector) {
	    var subgroups = [], subgroup, subnode, upgroup, group, node;
	    for (var j = -1, m = this.length; ++j < m; ) {
	      upgroup = (group = this[j]).update;
	      subgroups.push(subgroup = []);
	      subgroup.parentNode = group.parentNode;
	      for (var i = -1, n = group.length; ++i < n; ) {
	        if (node = group[i]) {
	          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));
	          subnode.__data__ = node.__data__;
	        } else {
	          subgroup.push(null);
	        }
	      }
	    }
	    return d3_selection(subgroups);
	  };
	  d3_selection_enterPrototype.insert = function(name, before) {
	    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);
	    return d3_selectionPrototype.insert.call(this, name, before);
	  };
	  function d3_selection_enterInsertBefore(enter) {
	    var i0, j0;
	    return function(d, i, j) {
	      var group = enter[j].update, n = group.length, node;
	      if (j != j0) j0 = j, i0 = 0;
	      if (i >= i0) i0 = i + 1;
	      while (!(node = group[i0]) && ++i0 < n) ;
	      return node;
	    };
	  }
	  d3.select = function(node) {
	    var group;
	    if (typeof node === "string") {
	      group = [ d3_select(node, d3_document) ];
	      group.parentNode = d3_document.documentElement;
	    } else {
	      group = [ node ];
	      group.parentNode = d3_documentElement(node);
	    }
	    return d3_selection([ group ]);
	  };
	  d3.selectAll = function(nodes) {
	    var group;
	    if (typeof nodes === "string") {
	      group = d3_array(d3_selectAll(nodes, d3_document));
	      group.parentNode = d3_document.documentElement;
	    } else {
	      group = d3_array(nodes);
	      group.parentNode = null;
	    }
	    return d3_selection([ group ]);
	  };
	  d3_selectionPrototype.on = function(type, listener, capture) {
	    var n = arguments.length;
	    if (n < 3) {
	      if (typeof type !== "string") {
	        if (n < 2) listener = false;
	        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));
	        return this;
	      }
	      if (n < 2) return (n = this.node()["__on" + type]) && n._;
	      capture = false;
	    }
	    return this.each(d3_selection_on(type, listener, capture));
	  };
	  function d3_selection_on(type, listener, capture) {
	    var name = "__on" + type, i = type.indexOf("."), wrap = d3_selection_onListener;
	    if (i > 0) type = type.slice(0, i);
	    var filter = d3_selection_onFilters.get(type);
	    if (filter) type = filter, wrap = d3_selection_onFilter;
	    function onRemove() {
	      var l = this[name];
	      if (l) {
	        this.removeEventListener(type, l, l.$);
	        delete this[name];
	      }
	    }
	    function onAdd() {
	      var l = wrap(listener, d3_array(arguments));
	      onRemove.call(this);
	      this.addEventListener(type, this[name] = l, l.$ = capture);
	      l._ = listener;
	    }
	    function removeAll() {
	      var re = new RegExp("^__on([^.]+)" + d3.requote(type) + "$"), match;
	      for (var name in this) {
	        if (match = name.match(re)) {
	          var l = this[name];
	          this.removeEventListener(match[1], l, l.$);
	          delete this[name];
	        }
	      }
	    }
	    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;
	  }
	  var d3_selection_onFilters = d3.map({
	    mouseenter: "mouseover",
	    mouseleave: "mouseout"
	  });
	  if (d3_document) {
	    d3_selection_onFilters.forEach(function(k) {
	      if ("on" + k in d3_document) d3_selection_onFilters.remove(k);
	    });
	  }
	  function d3_selection_onListener(listener, argumentz) {
	    return function(e) {
	      var o = d3.event;
	      d3.event = e;
	      argumentz[0] = this.__data__;
	      try {
	        listener.apply(this, argumentz);
	      } finally {
	        d3.event = o;
	      }
	    };
	  }
	  function d3_selection_onFilter(listener, argumentz) {
	    var l = d3_selection_onListener(listener, argumentz);
	    return function(e) {
	      var target = this, related = e.relatedTarget;
	      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {
	        l.call(target, e);
	      }
	    };
	  }
	  var d3_event_dragSelect, d3_event_dragId = 0;
	  function d3_event_dragSuppress(node) {
	    var name = ".dragsuppress-" + ++d3_event_dragId, click = "click" + name, w = d3.select(d3_window(node)).on("touchmove" + name, d3_eventPreventDefault).on("dragstart" + name, d3_eventPreventDefault).on("selectstart" + name, d3_eventPreventDefault);
	    if (d3_event_dragSelect == null) {
	      d3_event_dragSelect = "onselectstart" in node ? false : d3_vendorSymbol(node.style, "userSelect");
	    }
	    if (d3_event_dragSelect) {
	      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];
	      style[d3_event_dragSelect] = "none";
	    }
	    return function(suppressClick) {
	      w.on(name, null);
	      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;
	      if (suppressClick) {
	        var off = function() {
	          w.on(click, null);
	        };
	        w.on(click, function() {
	          d3_eventPreventDefault();
	          off();
	        }, true);
	        setTimeout(off, 0);
	      }
	    };
	  }
	  d3.mouse = function(container) {
	    return d3_mousePoint(container, d3_eventSource());
	  };
	  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;
	  function d3_mousePoint(container, e) {
	    if (e.changedTouches) e = e.changedTouches[0];
	    var svg = container.ownerSVGElement || container;
	    if (svg.createSVGPoint) {
	      var point = svg.createSVGPoint();
	      if (d3_mouse_bug44083 < 0) {
	        var window = d3_window(container);
	        if (window.scrollX || window.scrollY) {
	          svg = d3.select("body").append("svg").style({
	            position: "absolute",
	            top: 0,
	            left: 0,
	            margin: 0,
	            padding: 0,
	            border: "none"
	          }, "important");
	          var ctm = svg[0][0].getScreenCTM();
	          d3_mouse_bug44083 = !(ctm.f || ctm.e);
	          svg.remove();
	        }
	      }
	      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, 
	      point.y = e.clientY;
	      point = point.matrixTransform(container.getScreenCTM().inverse());
	      return [ point.x, point.y ];
	    }
	    var rect = container.getBoundingClientRect();
	    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];
	  }
	  d3.touch = function(container, touches, identifier) {
	    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;
	    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {
	      if ((touch = touches[i]).identifier === identifier) {
	        return d3_mousePoint(container, touch);
	      }
	    }
	  };
	  d3.behavior.drag = function() {
	    var event = d3_eventDispatch(drag, "drag", "dragstart", "dragend"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, "mousemove", "mouseup"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, "touchmove", "touchend");
	    function drag() {
	      this.on("mousedown.drag", mousedown).on("touchstart.drag", touchstart);
	    }
	    function dragstart(id, position, subject, move, end) {
	      return function() {
	        var that = this, target = d3.event.target.correspondingElement || d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = ".drag" + (dragId == null ? "" : "-" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);
	        if (origin) {
	          dragOffset = origin.apply(that, arguments);
	          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];
	        } else {
	          dragOffset = [ 0, 0 ];
	        }
	        dispatch({
	          type: "dragstart"
	        });
	        function moved() {
	          var position1 = position(parent, dragId), dx, dy;
	          if (!position1) return;
	          dx = position1[0] - position0[0];
	          dy = position1[1] - position0[1];
	          dragged |= dx | dy;
	          position0 = position1;
	          dispatch({
	            type: "drag",
	            x: position1[0] + dragOffset[0],
	            y: position1[1] + dragOffset[1],
	            dx: dx,
	            dy: dy
	          });
	        }
	        function ended() {
	          if (!position(parent, dragId)) return;
	          dragSubject.on(move + dragName, null).on(end + dragName, null);
	          dragRestore(dragged);
	          dispatch({
	            type: "dragend"
	          });
	        }
	      };
	    }
	    drag.origin = function(x) {
	      if (!arguments.length) return origin;
	      origin = x;
	      return drag;
	    };
	    return d3.rebind(drag, event, "on");
	  };
	  function d3_behavior_dragTouchId() {
	    return d3.event.changedTouches[0].identifier;
	  }
	  d3.touches = function(container, touches) {
	    if (arguments.length < 2) touches = d3_eventSource().touches;
	    return touches ? d3_array(touches).map(function(touch) {
	      var point = d3_mousePoint(container, touch);
	      point.identifier = touch.identifier;
	      return point;
	    }) : [];
	  };
	  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;
	  function d3_sgn(x) {
	    return x > 0 ? 1 : x < 0 ? -1 : 0;
	  }
	  function d3_cross2d(a, b, c) {
	    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);
	  }
	  function d3_acos(x) {
	    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);
	  }
	  function d3_asin(x) {
	    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);
	  }
	  function d3_sinh(x) {
	    return ((x = Math.exp(x)) - 1 / x) / 2;
	  }
	  function d3_cosh(x) {
	    return ((x = Math.exp(x)) + 1 / x) / 2;
	  }
	  function d3_tanh(x) {
	    return ((x = Math.exp(2 * x)) - 1) / (x + 1);
	  }
	  function d3_haversin(x) {
	    return (x = Math.sin(x / 2)) * x;
	  }
	  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;
	  d3.interpolateZoom = function(p0, p1) {
	    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;
	    if (d2 < ε2) {
	      S = Math.log(w1 / w0) / ρ;
	      i = function(t) {
	        return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S) ];
	      };
	    } else {
	      var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);
	      S = (r1 - r0) / ρ;
	      i = function(t) {
	        var s = t * S, coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));
	        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];
	      };
	    }
	    i.duration = S * 1e3;
	    return i;
	  };
	  d3.behavior.zoom = function() {
	    var view = {
	      x: 0,
	      y: 0,
	      k: 1
	    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = "mousedown.zoom", mousemove = "mousemove.zoom", mouseup = "mouseup.zoom", mousewheelTimer, touchstart = "touchstart.zoom", touchtime, event = d3_eventDispatch(zoom, "zoomstart", "zoom", "zoomend"), x0, x1, y0, y1;
	    if (!d3_behavior_zoomWheel) {
	      d3_behavior_zoomWheel = "onwheel" in d3_document ? (d3_behavior_zoomDelta = function() {
	        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);
	      }, "wheel") : "onmousewheel" in d3_document ? (d3_behavior_zoomDelta = function() {
	        return d3.event.wheelDelta;
	      }, "mousewheel") : (d3_behavior_zoomDelta = function() {
	        return -d3.event.detail;
	      }, "MozMousePixelScroll");
	    }
	    function zoom(g) {
	      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + ".zoom", mousewheeled).on("dblclick.zoom", dblclicked).on(touchstart, touchstarted);
	    }
	    zoom.event = function(g) {
	      g.each(function() {
	        var dispatch = event.of(this, arguments), view1 = view;
	        if (d3_transitionInheritId) {
	          d3.select(this).transition().each("start.zoom", function() {
	            view = this.__chart__ || {
	              x: 0,
	              y: 0,
	              k: 1
	            };
	            zoomstarted(dispatch);
	          }).tween("zoom:zoom", function() {
	            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);
	            return function(t) {
	              var l = i(t), k = dx / l[2];
	              this.__chart__ = view = {
	                x: cx - l[0] * k,
	                y: cy - l[1] * k,
	                k: k
	              };
	              zoomed(dispatch);
	            };
	          }).each("interrupt.zoom", function() {
	            zoomended(dispatch);
	          }).each("end.zoom", function() {
	            zoomended(dispatch);
	          });
	        } else {
	          this.__chart__ = view;
	          zoomstarted(dispatch);
	          zoomed(dispatch);
	          zoomended(dispatch);
	        }
	      });
	    };
	    zoom.translate = function(_) {
	      if (!arguments.length) return [ view.x, view.y ];
	      view = {
	        x: +_[0],
	        y: +_[1],
	        k: view.k
	      };
	      rescale();
	      return zoom;
	    };
	    zoom.scale = function(_) {
	      if (!arguments.length) return view.k;
	      view = {
	        x: view.x,
	        y: view.y,
	        k: null
	      };
	      scaleTo(+_);
	      rescale();
	      return zoom;
	    };
	    zoom.scaleExtent = function(_) {
	      if (!arguments.length) return scaleExtent;
	      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];
	      return zoom;
	    };
	    zoom.center = function(_) {
	      if (!arguments.length) return center;
	      center = _ && [ +_[0], +_[1] ];
	      return zoom;
	    };
	    zoom.size = function(_) {
	      if (!arguments.length) return size;
	      size = _ && [ +_[0], +_[1] ];
	      return zoom;
	    };
	    zoom.duration = function(_) {
	      if (!arguments.length) return duration;
	      duration = +_;
	      return zoom;
	    };
	    zoom.x = function(z) {
	      if (!arguments.length) return x1;
	      x1 = z;
	      x0 = z.copy();
	      view = {
	        x: 0,
	        y: 0,
	        k: 1
	      };
	      return zoom;
	    };
	    zoom.y = function(z) {
	      if (!arguments.length) return y1;
	      y1 = z;
	      y0 = z.copy();
	      view = {
	        x: 0,
	        y: 0,
	        k: 1
	      };
	      return zoom;
	    };
	    function location(p) {
	      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];
	    }
	    function point(l) {
	      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];
	    }
	    function scaleTo(s) {
	      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));
	    }
	    function translateTo(p, l) {
	      l = point(l);
	      view.x += p[0] - l[0];
	      view.y += p[1] - l[1];
	    }
	    function zoomTo(that, p, l, k) {
	      that.__chart__ = {
	        x: view.x,
	        y: view.y,
	        k: view.k
	      };
	      scaleTo(Math.pow(2, k));
	      translateTo(center0 = p, l);
	      that = d3.select(that);
	      if (duration > 0) that = that.transition().duration(duration);
	      that.call(zoom.event);
	    }
	    function rescale() {
	      if (x1) x1.domain(x0.range().map(function(x) {
	        return (x - view.x) / view.k;
	      }).map(x0.invert));
	      if (y1) y1.domain(y0.range().map(function(y) {
	        return (y - view.y) / view.k;
	      }).map(y0.invert));
	    }
	    function zoomstarted(dispatch) {
	      if (!zooming++) dispatch({
	        type: "zoomstart"
	      });
	    }
	    function zoomed(dispatch) {
	      rescale();
	      dispatch({
	        type: "zoom",
	        scale: view.k,
	        translate: [ view.x, view.y ]
	      });
	    }
	    function zoomended(dispatch) {
	      if (!--zooming) dispatch({
	        type: "zoomend"
	      }), center0 = null;
	    }
	    function mousedowned() {
	      var that = this, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);
	      d3_selection_interrupt.call(that);
	      zoomstarted(dispatch);
	      function moved() {
	        dragged = 1;
	        translateTo(d3.mouse(that), location0);
	        zoomed(dispatch);
	      }
	      function ended() {
	        subject.on(mousemove, null).on(mouseup, null);
	        dragRestore(dragged);
	        zoomended(dispatch);
	      }
	    }
	    function touchstarted() {
	      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = ".zoom-" + d3.event.changedTouches[0].identifier, touchmove = "touchmove" + zoomName, touchend = "touchend" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);
	      started();
	      zoomstarted(dispatch);
	      subject.on(mousedown, null).on(touchstart, started);
	      function relocate() {
	        var touches = d3.touches(that);
	        scale0 = view.k;
	        touches.forEach(function(t) {
	          if (t.identifier in locations0) locations0[t.identifier] = location(t);
	        });
	        return touches;
	      }
	      function started() {
	        var target = d3.event.target;
	        d3.select(target).on(touchmove, moved).on(touchend, ended);
	        targets.push(target);
	        var changed = d3.event.changedTouches;
	        for (var i = 0, n = changed.length; i < n; ++i) {
	          locations0[changed[i].identifier] = null;
	        }
	        var touches = relocate(), now = Date.now();
	        if (touches.length === 1) {
	          if (now - touchtime < 500) {
	            var p = touches[0];
	            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);
	            d3_eventPreventDefault();
	          }
	          touchtime = now;
	        } else if (touches.length > 1) {
	          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];
	          distance0 = dx * dx + dy * dy;
	        }
	      }
	      function moved() {
	        var touches = d3.touches(that), p0, l0, p1, l1;
	        d3_selection_interrupt.call(that);
	        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {
	          p1 = touches[i];
	          if (l1 = locations0[p1.identifier]) {
	            if (l0) break;
	            p0 = p1, l0 = l1;
	          }
	        }
	        if (l1) {
	          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);
	          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];
	          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];
	          scaleTo(scale1 * scale0);
	        }
	        touchtime = null;
	        translateTo(p0, l0);
	        zoomed(dispatch);
	      }
	      function ended() {
	        if (d3.event.touches.length) {
	          var changed = d3.event.changedTouches;
	          for (var i = 0, n = changed.length; i < n; ++i) {
	            delete locations0[changed[i].identifier];
	          }
	          for (var identifier in locations0) {
	            return void relocate();
	          }
	        }
	        d3.selectAll(targets).on(zoomName, null);
	        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);
	        dragRestore();
	        zoomended(dispatch);
	      }
	    }
	    function mousewheeled() {
	      var dispatch = event.of(this, arguments);
	      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), 
	      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);
	      mousewheelTimer = setTimeout(function() {
	        mousewheelTimer = null;
	        zoomended(dispatch);
	      }, 50);
	      d3_eventPreventDefault();
	      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);
	      translateTo(center0, translate0);
	      zoomed(dispatch);
	    }
	    function dblclicked() {
	      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;
	      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);
	    }
	    return d3.rebind(zoom, event, "on");
	  };
	  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;
	  d3.color = d3_color;
	  function d3_color() {}
	  d3_color.prototype.toString = function() {
	    return this.rgb() + "";
	  };
	  d3.hsl = d3_hsl;
	  function d3_hsl(h, s, l) {
	    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse("" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);
	  }
	  var d3_hslPrototype = d3_hsl.prototype = new d3_color();
	  d3_hslPrototype.brighter = function(k) {
	    k = Math.pow(.7, arguments.length ? k : 1);
	    return new d3_hsl(this.h, this.s, this.l / k);
	  };
	  d3_hslPrototype.darker = function(k) {
	    k = Math.pow(.7, arguments.length ? k : 1);
	    return new d3_hsl(this.h, this.s, k * this.l);
	  };
	  d3_hslPrototype.rgb = function() {
	    return d3_hsl_rgb(this.h, this.s, this.l);
	  };
	  function d3_hsl_rgb(h, s, l) {
	    var m1, m2;
	    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;
	    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;
	    l = l < 0 ? 0 : l > 1 ? 1 : l;
	    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;
	    m1 = 2 * l - m2;
	    function v(h) {
	      if (h > 360) h -= 360; else if (h < 0) h += 360;
	      if (h < 60) return m1 + (m2 - m1) * h / 60;
	      if (h < 180) return m2;
	      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;
	      return m1;
	    }
	    function vv(h) {
	      return Math.round(v(h) * 255);
	    }
	    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));
	  }
	  d3.hcl = d3_hcl;
	  function d3_hcl(h, c, l) {
	    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);
	  }
	  var d3_hclPrototype = d3_hcl.prototype = new d3_color();
	  d3_hclPrototype.brighter = function(k) {
	    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));
	  };
	  d3_hclPrototype.darker = function(k) {
	    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));
	  };
	  d3_hclPrototype.rgb = function() {
	    return d3_hcl_lab(this.h, this.c, this.l).rgb();
	  };
	  function d3_hcl_lab(h, c, l) {
	    if (isNaN(h)) h = 0;
	    if (isNaN(c)) c = 0;
	    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);
	  }
	  d3.lab = d3_lab;
	  function d3_lab(l, a, b) {
	    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);
	  }
	  var d3_lab_K = 18;
	  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;
	  var d3_labPrototype = d3_lab.prototype = new d3_color();
	  d3_labPrototype.brighter = function(k) {
	    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);
	  };
	  d3_labPrototype.darker = function(k) {
	    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);
	  };
	  d3_labPrototype.rgb = function() {
	    return d3_lab_rgb(this.l, this.a, this.b);
	  };
	  function d3_lab_rgb(l, a, b) {
	    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;
	    x = d3_lab_xyz(x) * d3_lab_X;
	    y = d3_lab_xyz(y) * d3_lab_Y;
	    z = d3_lab_xyz(z) * d3_lab_Z;
	    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));
	  }
	  function d3_lab_hcl(l, a, b) {
	    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);
	  }
	  function d3_lab_xyz(x) {
	    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;
	  }
	  function d3_xyz_lab(x) {
	    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;
	  }
	  function d3_xyz_rgb(r) {
	    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));
	  }
	  d3.rgb = d3_rgb;
	  function d3_rgb(r, g, b) {
	    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse("" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);
	  }
	  function d3_rgbNumber(value) {
	    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);
	  }
	  function d3_rgbString(value) {
	    return d3_rgbNumber(value) + "";
	  }
	  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();
	  d3_rgbPrototype.brighter = function(k) {
	    k = Math.pow(.7, arguments.length ? k : 1);
	    var r = this.r, g = this.g, b = this.b, i = 30;
	    if (!r && !g && !b) return new d3_rgb(i, i, i);
	    if (r && r < i) r = i;
	    if (g && g < i) g = i;
	    if (b && b < i) b = i;
	    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));
	  };
	  d3_rgbPrototype.darker = function(k) {
	    k = Math.pow(.7, arguments.length ? k : 1);
	    return new d3_rgb(k * this.r, k * this.g, k * this.b);
	  };
	  d3_rgbPrototype.hsl = function() {
	    return d3_rgb_hsl(this.r, this.g, this.b);
	  };
	  d3_rgbPrototype.toString = function() {
	    return "#" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);
	  };
	  function d3_rgb_hex(v) {
	    return v < 16 ? "0" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);
	  }
	  function d3_rgb_parse(format, rgb, hsl) {
	    var r = 0, g = 0, b = 0, m1, m2, color;
	    m1 = /([a-z]+)\((.*)\)/.exec(format = format.toLowerCase());
	    if (m1) {
	      m2 = m1[2].split(",");
	      switch (m1[1]) {
	       case "hsl":
	        {
	          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);
	        }

	       case "rgb":
	        {
	          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));
	        }
	      }
	    }
	    if (color = d3_rgb_names.get(format)) {
	      return rgb(color.r, color.g, color.b);
	    }
	    if (format != null && format.charAt(0) === "#" && !isNaN(color = parseInt(format.slice(1), 16))) {
	      if (format.length === 4) {
	        r = (color & 3840) >> 4;
	        r = r >> 4 | r;
	        g = color & 240;
	        g = g >> 4 | g;
	        b = color & 15;
	        b = b << 4 | b;
	      } else if (format.length === 7) {
	        r = (color & 16711680) >> 16;
	        g = (color & 65280) >> 8;
	        b = color & 255;
	      }
	    }
	    return rgb(r, g, b);
	  }
	  function d3_rgb_hsl(r, g, b) {
	    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;
	    if (d) {
	      s = l < .5 ? d / (max + min) : d / (2 - max - min);
	      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;
	      h *= 60;
	    } else {
	      h = NaN;
	      s = l > 0 && l < 1 ? 0 : h;
	    }
	    return new d3_hsl(h, s, l);
	  }
	  function d3_rgb_lab(r, g, b) {
	    r = d3_rgb_xyz(r);
	    g = d3_rgb_xyz(g);
	    b = d3_rgb_xyz(b);
	    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);
	    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));
	  }
	  function d3_rgb_xyz(r) {
	    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);
	  }
	  function d3_rgb_parseNumber(c) {
	    var f = parseFloat(c);
	    return c.charAt(c.length - 1) === "%" ? Math.round(f * 2.55) : f;
	  }
	  var d3_rgb_names = d3.map({
	    aliceblue: 15792383,
	    antiquewhite: 16444375,
	    aqua: 65535,
	    aquamarine: 8388564,
	    azure: 15794175,
	    beige: 16119260,
	    bisque: 16770244,
	    black: 0,
	    blanchedalmond: 16772045,
	    blue: 255,
	    blueviolet: 9055202,
	    brown: 10824234,
	    burlywood: 14596231,
	    cadetblue: 6266528,
	    chartreuse: 8388352,
	    chocolate: 13789470,
	    coral: 16744272,
	    cornflowerblue: 6591981,
	    cornsilk: 16775388,
	    crimson: 14423100,
	    cyan: 65535,
	    darkblue: 139,
	    darkcyan: 35723,
	    darkgoldenrod: 12092939,
	    darkgray: 11119017,
	    darkgreen: 25600,
	    darkgrey: 11119017,
	    darkkhaki: 12433259,
	    darkmagenta: 9109643,
	    darkolivegreen: 5597999,
	    darkorange: 16747520,
	    darkorchid: 10040012,
	    darkred: 9109504,
	    darksalmon: 15308410,
	    darkseagreen: 9419919,
	    darkslateblue: 4734347,
	    darkslategray: 3100495,
	    darkslategrey: 3100495,
	    darkturquoise: 52945,
	    darkviolet: 9699539,
	    deeppink: 16716947,
	    deepskyblue: 49151,
	    dimgray: 6908265,
	    dimgrey: 6908265,
	    dodgerblue: 2003199,
	    firebrick: 11674146,
	    floralwhite: 16775920,
	    forestgreen: 2263842,
	    fuchsia: 16711935,
	    gainsboro: 14474460,
	    ghostwhite: 16316671,
	    gold: 16766720,
	    goldenrod: 14329120,
	    gray: 8421504,
	    green: 32768,
	    greenyellow: 11403055,
	    grey: 8421504,
	    honeydew: 15794160,
	    hotpink: 16738740,
	    indianred: 13458524,
	    indigo: 4915330,
	    ivory: 16777200,
	    khaki: 15787660,
	    lavender: 15132410,
	    lavenderblush: 16773365,
	    lawngreen: 8190976,
	    lemonchiffon: 16775885,
	    lightblue: 11393254,
	    lightcoral: 15761536,
	    lightcyan: 14745599,
	    lightgoldenrodyellow: 16448210,
	    lightgray: 13882323,
	    lightgreen: 9498256,
	    lightgrey: 13882323,
	    lightpink: 16758465,
	    lightsalmon: 16752762,
	    lightseagreen: 2142890,
	    lightskyblue: 8900346,
	    lightslategray: 7833753,
	    lightslategrey: 7833753,
	    lightsteelblue: 11584734,
	    lightyellow: 16777184,
	    lime: 65280,
	    limegreen: 3329330,
	    linen: 16445670,
	    magenta: 16711935,
	    maroon: 8388608,
	    mediumaquamarine: 6737322,
	    mediumblue: 205,
	    mediumorchid: 12211667,
	    mediumpurple: 9662683,
	    mediumseagreen: 3978097,
	    mediumslateblue: 8087790,
	    mediumspringgreen: 64154,
	    mediumturquoise: 4772300,
	    mediumvioletred: 13047173,
	    midnightblue: 1644912,
	    mintcream: 16121850,
	    mistyrose: 16770273,
	    moccasin: 16770229,
	    navajowhite: 16768685,
	    navy: 128,
	    oldlace: 16643558,
	    olive: 8421376,
	    olivedrab: 7048739,
	    orange: 16753920,
	    orangered: 16729344,
	    orchid: 14315734,
	    palegoldenrod: 15657130,
	    palegreen: 10025880,
	    paleturquoise: 11529966,
	    palevioletred: 14381203,
	    papayawhip: 16773077,
	    peachpuff: 16767673,
	    peru: 13468991,
	    pink: 16761035,
	    plum: 14524637,
	    powderblue: 11591910,
	    purple: 8388736,
	    rebeccapurple: 6697881,
	    red: 16711680,
	    rosybrown: 12357519,
	    royalblue: 4286945,
	    saddlebrown: 9127187,
	    salmon: 16416882,
	    sandybrown: 16032864,
	    seagreen: 3050327,
	    seashell: 16774638,
	    sienna: 10506797,
	    silver: 12632256,
	    skyblue: 8900331,
	    slateblue: 6970061,
	    slategray: 7372944,
	    slategrey: 7372944,
	    snow: 16775930,
	    springgreen: 65407,
	    steelblue: 4620980,
	    tan: 13808780,
	    teal: 32896,
	    thistle: 14204888,
	    tomato: 16737095,
	    turquoise: 4251856,
	    violet: 15631086,
	    wheat: 16113331,
	    white: 16777215,
	    whitesmoke: 16119285,
	    yellow: 16776960,
	    yellowgreen: 10145074
	  });
	  d3_rgb_names.forEach(function(key, value) {
	    d3_rgb_names.set(key, d3_rgbNumber(value));
	  });
	  function d3_functor(v) {
	    return typeof v === "function" ? v : function() {
	      return v;
	    };
	  }
	  d3.functor = d3_functor;
	  d3.xhr = d3_xhrType(d3_identity);
	  function d3_xhrType(response) {
	    return function(url, mimeType, callback) {
	      if (arguments.length === 2 && typeof mimeType === "function") callback = mimeType, 
	      mimeType = null;
	      return d3_xhr(url, mimeType, response, callback);
	    };
	  }
	  function d3_xhr(url, mimeType, response, callback) {
	    var xhr = {}, dispatch = d3.dispatch("beforesend", "progress", "load", "error"), headers = {}, request = new XMLHttpRequest(), responseType = null;
	    if (this.XDomainRequest && !("withCredentials" in request) && /^(http(s)?:)?\/\//.test(url)) request = new XDomainRequest();
	    "onload" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {
	      request.readyState > 3 && respond();
	    };
	    function respond() {
	      var status = request.status, result;
	      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {
	        try {
	          result = response.call(xhr, request);
	        } catch (e) {
	          dispatch.error.call(xhr, e);
	          return;
	        }
	        dispatch.load.call(xhr, result);
	      } else {
	        dispatch.error.call(xhr, request);
	      }
	    }
	    request.onprogress = function(event) {
	      var o = d3.event;
	      d3.event = event;
	      try {
	        dispatch.progress.call(xhr, request);
	      } finally {
	        d3.event = o;
	      }
	    };
	    xhr.header = function(name, value) {
	      name = (name + "").toLowerCase();
	      if (arguments.length < 2) return headers[name];
	      if (value == null) delete headers[name]; else headers[name] = value + "";
	      return xhr;
	    };
	    xhr.mimeType = function(value) {
	      if (!arguments.length) return mimeType;
	      mimeType = value == null ? null : value + "";
	      return xhr;
	    };
	    xhr.responseType = function(value) {
	      if (!arguments.length) return responseType;
	      responseType = value;
	      return xhr;
	    };
	    xhr.response = function(value) {
	      response = value;
	      return xhr;
	    };
	    [ "get", "post" ].forEach(function(method) {
	      xhr[method] = function() {
	        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));
	      };
	    });
	    xhr.send = function(method, data, callback) {
	      if (arguments.length === 2 && typeof data === "function") callback = data, data = null;
	      request.open(method, url, true);
	      if (mimeType != null && !("accept" in headers)) headers["accept"] = mimeType + ",*/*";
	      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);
	      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);
	      if (responseType != null) request.responseType = responseType;
	      if (callback != null) xhr.on("error", callback).on("load", function(request) {
	        callback(null, request);
	      });
	      dispatch.beforesend.call(xhr, request);
	      request.send(data == null ? null : data);
	      return xhr;
	    };
	    xhr.abort = function() {
	      request.abort();
	      return xhr;
	    };
	    d3.rebind(xhr, dispatch, "on");
	    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));
	  }
	  function d3_xhr_fixCallback(callback) {
	    return callback.length === 1 ? function(error, request) {
	      callback(error == null ? request : null);
	    } : callback;
	  }
	  function d3_xhrHasResponse(request) {
	    var type = request.responseType;
	    return type && type !== "text" ? request.response : request.responseText;
	  }
	  d3.dsv = function(delimiter, mimeType) {
	    var reFormat = new RegExp('["' + delimiter + "\n]"), delimiterCode = delimiter.charCodeAt(0);
	    function dsv(url, row, callback) {
	      if (arguments.length < 3) callback = row, row = null;
	      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);
	      xhr.row = function(_) {
	        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;
	      };
	      return xhr;
	    }
	    function response(request) {
	      return dsv.parse(request.responseText);
	    }
	    function typedResponse(f) {
	      return function(request) {
	        return dsv.parse(request.responseText, f);
	      };
	    }
	    dsv.parse = function(text, f) {
	      var o;
	      return dsv.parseRows(text, function(row, i) {
	        if (o) return o(row, i - 1);
	        var a = new Function("d", "return {" + row.map(function(name, i) {
	          return JSON.stringify(name) + ": d[" + i + "]";
	        }).join(",") + "}");
	        o = f ? function(row, i) {
	          return f(a(row), i);
	        } : a;
	      });
	    };
	    dsv.parseRows = function(text, f) {
	      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;
	      function token() {
	        if (I >= N) return EOF;
	        if (eol) return eol = false, EOL;
	        var j = I;
	        if (text.charCodeAt(j) === 34) {
	          var i = j;
	          while (i++ < N) {
	            if (text.charCodeAt(i) === 34) {
	              if (text.charCodeAt(i + 1) !== 34) break;
	              ++i;
	            }
	          }
	          I = i + 2;
	          var c = text.charCodeAt(i + 1);
	          if (c === 13) {
	            eol = true;
	            if (text.charCodeAt(i + 2) === 10) ++I;
	          } else if (c === 10) {
	            eol = true;
	          }
	          return text.slice(j + 1, i).replace(/""/g, '"');
	        }
	        while (I < N) {
	          var c = text.charCodeAt(I++), k = 1;
	          if (c === 10) eol = true; else if (c === 13) {
	            eol = true;
	            if (text.charCodeAt(I) === 10) ++I, ++k;
	          } else if (c !== delimiterCode) continue;
	          return text.slice(j, I - k);
	        }
	        return text.slice(j);
	      }
	      while ((t = token()) !== EOF) {
	        var a = [];
	        while (t !== EOL && t !== EOF) {
	          a.push(t);
	          t = token();
	        }
	        if (f && (a = f(a, n++)) == null) continue;
	        rows.push(a);
	      }
	      return rows;
	    };
	    dsv.format = function(rows) {
	      if (Array.isArray(rows[0])) return dsv.formatRows(rows);
	      var fieldSet = new d3_Set(), fields = [];
	      rows.forEach(function(row) {
	        for (var field in row) {
	          if (!fieldSet.has(field)) {
	            fields.push(fieldSet.add(field));
	          }
	        }
	      });
	      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {
	        return fields.map(function(field) {
	          return formatValue(row[field]);
	        }).join(delimiter);
	      })).join("\n");
	    };
	    dsv.formatRows = function(rows) {
	      return rows.map(formatRow).join("\n");
	    };
	    function formatRow(row) {
	      return row.map(formatValue).join(delimiter);
	    }
	    function formatValue(text) {
	      return reFormat.test(text) ? '"' + text.replace(/\"/g, '""') + '"' : text;
	    }
	    return dsv;
	  };
	  d3.csv = d3.dsv(",", "text/csv");
	  d3.tsv = d3.dsv("	", "text/tab-separated-values");
	  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_frame = this[d3_vendorSymbol(this, "requestAnimationFrame")] || function(callback) {
	    setTimeout(callback, 17);
	  };
	  d3.timer = function() {
	    d3_timer.apply(this, arguments);
	  };
	  function d3_timer(callback, delay, then) {
	    var n = arguments.length;
	    if (n < 2) delay = 0;
	    if (n < 3) then = Date.now();
	    var time = then + delay, timer = {
	      c: callback,
	      t: time,
	      n: null
	    };
	    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;
	    d3_timer_queueTail = timer;
	    if (!d3_timer_interval) {
	      d3_timer_timeout = clearTimeout(d3_timer_timeout);
	      d3_timer_interval = 1;
	      d3_timer_frame(d3_timer_step);
	    }
	    return timer;
	  }
	  function d3_timer_step() {
	    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;
	    if (delay > 24) {
	      if (isFinite(delay)) {
	        clearTimeout(d3_timer_timeout);
	        d3_timer_timeout = setTimeout(d3_timer_step, delay);
	      }
	      d3_timer_interval = 0;
	    } else {
	      d3_timer_interval = 1;
	      d3_timer_frame(d3_timer_step);
	    }
	  }
	  d3.timer.flush = function() {
	    d3_timer_mark();
	    d3_timer_sweep();
	  };
	  function d3_timer_mark() {
	    var now = Date.now(), timer = d3_timer_queueHead;
	    while (timer) {
	      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;
	      timer = timer.n;
	    }
	    return now;
	  }
	  function d3_timer_sweep() {
	    var t0, t1 = d3_timer_queueHead, time = Infinity;
	    while (t1) {
	      if (t1.c) {
	        if (t1.t < time) time = t1.t;
	        t1 = (t0 = t1).n;
	      } else {
	        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;
	      }
	    }
	    d3_timer_queueTail = t0;
	    return time;
	  }
	  function d3_format_precision(x, p) {
	    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);
	  }
	  d3.round = function(x, n) {
	    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);
	  };
	  var d3_formatPrefixes = [ "y", "z", "a", "f", "p", "n", "µ", "m", "", "k", "M", "G", "T", "P", "E", "Z", "Y" ].map(d3_formatPrefix);
	  d3.formatPrefix = function(value, precision) {
	    var i = 0;
	    if (value = +value) {
	      if (value < 0) value *= -1;
	      if (precision) value = d3.round(value, d3_format_precision(value, precision));
	      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);
	      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));
	    }
	    return d3_formatPrefixes[8 + i / 3];
	  };
	  function d3_formatPrefix(d, i) {
	    var k = Math.pow(10, abs(8 - i) * 3);
	    return {
	      scale: i > 8 ? function(d) {
	        return d / k;
	      } : function(d) {
	        return d * k;
	      },
	      symbol: d
	    };
	  }
	  function d3_locale_numberFormat(locale) {
	    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {
	      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;
	      while (i > 0 && g > 0) {
	        if (length + g + 1 > width) g = Math.max(1, width - length);
	        t.push(value.substring(i -= g, i + g));
	        if ((length += g + 1) > width) break;
	        g = locale_grouping[j = (j + 1) % locale_grouping.length];
	      }
	      return t.reverse().join(locale_thousands);
	    } : d3_identity;
	    return function(specifier) {
	      var match = d3_format_re.exec(specifier), fill = match[1] || " ", align = match[2] || ">", sign = match[3] || "-", symbol = match[4] || "", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = "", suffix = "", integer = false, exponent = true;
	      if (precision) precision = +precision.substring(1);
	      if (zfill || fill === "0" && align === "=") {
	        zfill = fill = "0";
	        align = "=";
	      }
	      switch (type) {
	       case "n":
	        comma = true;
	        type = "g";
	        break;

	       case "%":
	        scale = 100;
	        suffix = "%";
	        type = "f";
	        break;

	       case "p":
	        scale = 100;
	        suffix = "%";
	        type = "r";
	        break;

	       case "b":
	       case "o":
	       case "x":
	       case "X":
	        if (symbol === "#") prefix = "0" + type.toLowerCase();

	       case "c":
	        exponent = false;

	       case "d":
	        integer = true;
	        precision = 0;
	        break;

	       case "s":
	        scale = -1;
	        type = "r";
	        break;
	      }
	      if (symbol === "$") prefix = locale_currency[0], suffix = locale_currency[1];
	      if (type == "r" && !precision) type = "g";
	      if (precision != null) {
	        if (type == "g") precision = Math.max(1, Math.min(21, precision)); else if (type == "e" || type == "f") precision = Math.max(0, Math.min(20, precision));
	      }
	      type = d3_format_types.get(type) || d3_format_typeDefault;
	      var zcomma = zfill && comma;
	      return function(value) {
	        var fullSuffix = suffix;
	        if (integer && value % 1) return "";
	        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, "-") : sign === "-" ? "" : sign;
	        if (scale < 0) {
	          var unit = d3.formatPrefix(value, precision);
	          value = unit.scale(value);
	          fullSuffix = unit.symbol + suffix;
	        } else {
	          value *= scale;
	        }
	        value = type(value, precision);
	        var i = value.lastIndexOf("."), before, after;
	        if (i < 0) {
	          var j = exponent ? value.lastIndexOf("e") : -1;
	          if (j < 0) before = value, after = ""; else before = value.substring(0, j), after = value.substring(j);
	        } else {
	          before = value.substring(0, i);
	          after = locale_decimal + value.substring(i + 1);
	        }
	        if (!zfill && comma) before = formatGroup(before, Infinity);
	        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : "";
	        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);
	        negative += prefix;
	        value = before + after;
	        return (align === "<" ? negative + value + padding : align === ">" ? padding + negative + value : align === "^" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;
	      };
	    };
	  }
	  var d3_format_re = /(?:([^{])?([<>=^]))?([+\- ])?([$#])?(0)?(\d+)?(,)?(\.-?\d+)?([a-z%])?/i;
	  var d3_format_types = d3.map({
	    b: function(x) {
	      return x.toString(2);
	    },
	    c: function(x) {
	      return String.fromCharCode(x);
	    },
	    o: function(x) {
	      return x.toString(8);
	    },
	    x: function(x) {
	      return x.toString(16);
	    },
	    X: function(x) {
	      return x.toString(16).toUpperCase();
	    },
	    g: function(x, p) {
	      return x.toPrecision(p);
	    },
	    e: function(x, p) {
	      return x.toExponential(p);
	    },
	    f: function(x, p) {
	      return x.toFixed(p);
	    },
	    r: function(x, p) {
	      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));
	    }
	  });
	  function d3_format_typeDefault(x) {
	    return x + "";
	  }
	  var d3_time = d3.time = {}, d3_date = Date;
	  function d3_date_utc() {
	    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);
	  }
	  d3_date_utc.prototype = {
	    getDate: function() {
	      return this._.getUTCDate();
	    },
	    getDay: function() {
	      return this._.getUTCDay();
	    },
	    getFullYear: function() {
	      return this._.getUTCFullYear();
	    },
	    getHours: function() {
	      return this._.getUTCHours();
	    },
	    getMilliseconds: function() {
	      return this._.getUTCMilliseconds();
	    },
	    getMinutes: function() {
	      return this._.getUTCMinutes();
	    },
	    getMonth: function() {
	      return this._.getUTCMonth();
	    },
	    getSeconds: function() {
	      return this._.getUTCSeconds();
	    },
	    getTime: function() {
	      return this._.getTime();
	    },
	    getTimezoneOffset: function() {
	      return 0;
	    },
	    valueOf: function() {
	      return this._.valueOf();
	    },
	    setDate: function() {
	      d3_time_prototype.setUTCDate.apply(this._, arguments);
	    },
	    setDay: function() {
	      d3_time_prototype.setUTCDay.apply(this._, arguments);
	    },
	    setFullYear: function() {
	      d3_time_prototype.setUTCFullYear.apply(this._, arguments);
	    },
	    setHours: function() {
	      d3_time_prototype.setUTCHours.apply(this._, arguments);
	    },
	    setMilliseconds: function() {
	      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);
	    },
	    setMinutes: function() {
	      d3_time_prototype.setUTCMinutes.apply(this._, arguments);
	    },
	    setMonth: function() {
	      d3_time_prototype.setUTCMonth.apply(this._, arguments);
	    },
	    setSeconds: function() {
	      d3_time_prototype.setUTCSeconds.apply(this._, arguments);
	    },
	    setTime: function() {
	      d3_time_prototype.setTime.apply(this._, arguments);
	    }
	  };
	  var d3_time_prototype = Date.prototype;
	  function d3_time_interval(local, step, number) {
	    function round(date) {
	      var d0 = local(date), d1 = offset(d0, 1);
	      return date - d0 < d1 - date ? d0 : d1;
	    }
	    function ceil(date) {
	      step(date = local(new d3_date(date - 1)), 1);
	      return date;
	    }
	    function offset(date, k) {
	      step(date = new d3_date(+date), k);
	      return date;
	    }
	    function range(t0, t1, dt) {
	      var time = ceil(t0), times = [];
	      if (dt > 1) {
	        while (time < t1) {
	          if (!(number(time) % dt)) times.push(new Date(+time));
	          step(time, 1);
	        }
	      } else {
	        while (time < t1) times.push(new Date(+time)), step(time, 1);
	      }
	      return times;
	    }
	    function range_utc(t0, t1, dt) {
	      try {
	        d3_date = d3_date_utc;
	        var utc = new d3_date_utc();
	        utc._ = t0;
	        return range(utc, t1, dt);
	      } finally {
	        d3_date = Date;
	      }
	    }
	    local.floor = local;
	    local.round = round;
	    local.ceil = ceil;
	    local.offset = offset;
	    local.range = range;
	    var utc = local.utc = d3_time_interval_utc(local);
	    utc.floor = utc;
	    utc.round = d3_time_interval_utc(round);
	    utc.ceil = d3_time_interval_utc(ceil);
	    utc.offset = d3_time_interval_utc(offset);
	    utc.range = range_utc;
	    return local;
	  }
	  function d3_time_interval_utc(method) {
	    return function(date, k) {
	      try {
	        d3_date = d3_date_utc;
	        var utc = new d3_date_utc();
	        utc._ = date;
	        return method(utc, k)._;
	      } finally {
	        d3_date = Date;
	      }
	    };
	  }
	  d3_time.year = d3_time_interval(function(date) {
	    date = d3_time.day(date);
	    date.setMonth(0, 1);
	    return date;
	  }, function(date, offset) {
	    date.setFullYear(date.getFullYear() + offset);
	  }, function(date) {
	    return date.getFullYear();
	  });
	  d3_time.years = d3_time.year.range;
	  d3_time.years.utc = d3_time.year.utc.range;
	  d3_time.day = d3_time_interval(function(date) {
	    var day = new d3_date(2e3, 0);
	    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());
	    return day;
	  }, function(date, offset) {
	    date.setDate(date.getDate() + offset);
	  }, function(date) {
	    return date.getDate() - 1;
	  });
	  d3_time.days = d3_time.day.range;
	  d3_time.days.utc = d3_time.day.utc.range;
	  d3_time.dayOfYear = function(date) {
	    var year = d3_time.year(date);
	    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);
	  };
	  [ "sunday", "monday", "tuesday", "wednesday", "thursday", "friday", "saturday" ].forEach(function(day, i) {
	    i = 7 - i;
	    var interval = d3_time[day] = d3_time_interval(function(date) {
	      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);
	      return date;
	    }, function(date, offset) {
	      date.setDate(date.getDate() + Math.floor(offset) * 7);
	    }, function(date) {
	      var day = d3_time.year(date).getDay();
	      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);
	    });
	    d3_time[day + "s"] = interval.range;
	    d3_time[day + "s"].utc = interval.utc.range;
	    d3_time[day + "OfYear"] = function(date) {
	      var day = d3_time.year(date).getDay();
	      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);
	    };
	  });
	  d3_time.week = d3_time.sunday;
	  d3_time.weeks = d3_time.sunday.range;
	  d3_time.weeks.utc = d3_time.sunday.utc.range;
	  d3_time.weekOfYear = d3_time.sundayOfYear;
	  function d3_locale_timeFormat(locale) {
	    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;
	    function d3_time_format(template) {
	      var n = template.length;
	      function format(date) {
	        var string = [], i = -1, j = 0, c, p, f;
	        while (++i < n) {
	          if (template.charCodeAt(i) === 37) {
	            string.push(template.slice(j, i));
	            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);
	            if (f = d3_time_formats[c]) c = f(date, p == null ? c === "e" ? " " : "0" : p);
	            string.push(c);
	            j = i + 1;
	          }
	        }
	        string.push(template.slice(j, i));
	        return string.join("");
	      }
	      format.parse = function(string) {
	        var d = {
	          y: 1900,
	          m: 0,
	          d: 1,
	          H: 0,
	          M: 0,
	          S: 0,
	          L: 0,
	          Z: null
	        }, i = d3_time_parse(d, template, string, 0);
	        if (i != string.length) return null;
	        if ("p" in d) d.H = d.H % 12 + d.p * 12;
	        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();
	        if ("j" in d) date.setFullYear(d.y, 0, d.j); else if ("W" in d || "U" in d) {
	          if (!("w" in d)) d.w = "W" in d ? 1 : 0;
	          date.setFullYear(d.y, 0, 1);
	          date.setFullYear(d.y, 0, "W" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);
	        } else date.setFullYear(d.y, d.m, d.d);
	        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);
	        return localZ ? date._ : date;
	      };
	      format.toString = function() {
	        return template;
	      };
	      return format;
	    }
	    function d3_time_parse(date, template, string, j) {
	      var c, p, t, i = 0, n = template.length, m = string.length;
	      while (i < n) {
	        if (j >= m) return -1;
	        c = template.charCodeAt(i++);
	        if (c === 37) {
	          t = template.charAt(i++);
	          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];
	          if (!p || (j = p(date, string, j)) < 0) return -1;
	        } else if (c != string.charCodeAt(j++)) {
	          return -1;
	        }
	      }
	      return j;
	    }
	    d3_time_format.utc = function(template) {
	      var local = d3_time_format(template);
	      function format(date) {
	        try {
	          d3_date = d3_date_utc;
	          var utc = new d3_date();
	          utc._ = date;
	          return local(utc);
	        } finally {
	          d3_date = Date;
	        }
	      }
	      format.parse = function(string) {
	        try {
	          d3_date = d3_date_utc;
	          var date = local.parse(string);
	          return date && date._;
	        } finally {
	          d3_date = Date;
	        }
	      };
	      format.toString = local.toString;
	      return format;
	    };
	    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;
	    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);
	    locale_periods.forEach(function(p, i) {
	      d3_time_periodLookup.set(p.toLowerCase(), i);
	    });
	    var d3_time_formats = {
	      a: function(d) {
	        return locale_shortDays[d.getDay()];
	      },
	      A: function(d) {
	        return locale_days[d.getDay()];
	      },
	      b: function(d) {
	        return locale_shortMonths[d.getMonth()];
	      },
	      B: function(d) {
	        return locale_months[d.getMonth()];
	      },
	      c: d3_time_format(locale_dateTime),
	      d: function(d, p) {
	        return d3_time_formatPad(d.getDate(), p, 2);
	      },
	      e: function(d, p) {
	        return d3_time_formatPad(d.getDate(), p, 2);
	      },
	      H: function(d, p) {
	        return d3_time_formatPad(d.getHours(), p, 2);
	      },
	      I: function(d, p) {
	        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);
	      },
	      j: function(d, p) {
	        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);
	      },
	      L: function(d, p) {
	        return d3_time_formatPad(d.getMilliseconds(), p, 3);
	      },
	      m: function(d, p) {
	        return d3_time_formatPad(d.getMonth() + 1, p, 2);
	      },
	      M: function(d, p) {
	        return d3_time_formatPad(d.getMinutes(), p, 2);
	      },
	      p: function(d) {
	        return locale_periods[+(d.getHours() >= 12)];
	      },
	      S: function(d, p) {
	        return d3_time_formatPad(d.getSeconds(), p, 2);
	      },
	      U: function(d, p) {
	        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);
	      },
	      w: function(d) {
	        return d.getDay();
	      },
	      W: function(d, p) {
	        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);
	      },
	      x: d3_time_format(locale_date),
	      X: d3_time_format(locale_time),
	      y: function(d, p) {
	        return d3_time_formatPad(d.getFullYear() % 100, p, 2);
	      },
	      Y: function(d, p) {
	        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);
	      },
	      Z: d3_time_zone,
	      "%": function() {
	        return "%";
	      }
	    };
	    var d3_time_parsers = {
	      a: d3_time_parseWeekdayAbbrev,
	      A: d3_time_parseWeekday,
	      b: d3_time_parseMonthAbbrev,
	      B: d3_time_parseMonth,
	      c: d3_time_parseLocaleFull,
	      d: d3_time_parseDay,
	      e: d3_time_parseDay,
	      H: d3_time_parseHour24,
	      I: d3_time_parseHour24,
	      j: d3_time_parseDayOfYear,
	      L: d3_time_parseMilliseconds,
	      m: d3_time_parseMonthNumber,
	      M: d3_time_parseMinutes,
	      p: d3_time_parseAmPm,
	      S: d3_time_parseSeconds,
	      U: d3_time_parseWeekNumberSunday,
	      w: d3_time_parseWeekdayNumber,
	      W: d3_time_parseWeekNumberMonday,
	      x: d3_time_parseLocaleDate,
	      X: d3_time_parseLocaleTime,
	      y: d3_time_parseYear,
	      Y: d3_time_parseFullYear,
	      Z: d3_time_parseZone,
	      "%": d3_time_parseLiteralPercent
	    };
	    function d3_time_parseWeekdayAbbrev(date, string, i) {
	      d3_time_dayAbbrevRe.lastIndex = 0;
	      var n = d3_time_dayAbbrevRe.exec(string.slice(i));
	      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
	    }
	    function d3_time_parseWeekday(date, string, i) {
	      d3_time_dayRe.lastIndex = 0;
	      var n = d3_time_dayRe.exec(string.slice(i));
	      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
	    }
	    function d3_time_parseMonthAbbrev(date, string, i) {
	      d3_time_monthAbbrevRe.lastIndex = 0;
	      var n = d3_time_monthAbbrevRe.exec(string.slice(i));
	      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
	    }
	    function d3_time_parseMonth(date, string, i) {
	      d3_time_monthRe.lastIndex = 0;
	      var n = d3_time_monthRe.exec(string.slice(i));
	      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
	    }
	    function d3_time_parseLocaleFull(date, string, i) {
	      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);
	    }
	    function d3_time_parseLocaleDate(date, string, i) {
	      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);
	    }
	    function d3_time_parseLocaleTime(date, string, i) {
	      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);
	    }
	    function d3_time_parseAmPm(date, string, i) {
	      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());
	      return n == null ? -1 : (date.p = n, i);
	    }
	    return d3_time_format;
	  }
	  var d3_time_formatPads = {
	    "-": "",
	    _: " ",
	    "0": "0"
	  }, d3_time_numberRe = /^\s*\d+/, d3_time_percentRe = /^%/;
	  function d3_time_formatPad(value, fill, width) {
	    var sign = value < 0 ? "-" : "", string = (sign ? -value : value) + "", length = string.length;
	    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);
	  }
	  function d3_time_formatRe(names) {
	    return new RegExp("^(?:" + names.map(d3.requote).join("|") + ")", "i");
	  }
	  function d3_time_formatLookup(names) {
	    var map = new d3_Map(), i = -1, n = names.length;
	    while (++i < n) map.set(names[i].toLowerCase(), i);
	    return map;
	  }
	  function d3_time_parseWeekdayNumber(date, string, i) {
	    d3_time_numberRe.lastIndex = 0;
	    var n = d3_time_numberRe.exec(string.slice(i, i + 1));
	    return n ? (date.w = +n[0], i + n[0].length) : -1;
	  }
	  function d3_time_parseWeekNumberSunday(date, string, i) {
	    d3_time_numberRe.lastIndex = 0;
	    var n = d3_time_numberRe.exec(string.slice(i));
	    return n ? (date.U = +n[0], i + n[0].length) : -1;
	  }
	  function d3_time_parseWeekNumberMonday(date, string, i) {
	    d3_time_numberRe.lastIndex = 0;
	    var n = d3_time_numberRe.exec(string.slice(i));
	    return n ? (date.W = +n[0], i + n[0].length) : -1;
	  }
	  function d3_time_parseFullYear(date, string, i) {
	    d3_time_numberRe.lastIndex = 0;
	    var n = d3_time_numberRe.exec(string.slice(i, i + 4));
	    return n ? (date.y = +n[0], i + n[0].length) : -1;
	  }
	  function d3_time_parseYear(date, string, i) {
	    d3_time_numberRe.lastIndex = 0;
	    var n = d3_time_numberRe.exec(string.slice(i, i + 2));
	    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;
	  }
	  function d3_time_parseZone(date, string, i) {
	    return /^[+-]\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, 
	    i + 5) : -1;
	  }
	  function d3_time_expandYear(d) {
	    return d + (d > 68 ? 1900 : 2e3);
	  }
	  function d3_time_parseMonthNumber(date, string, i) {
	    d3_time_numberRe.lastIndex = 0;
	    var n = d3_time_numberRe.exec(string.slice(i, i + 2));
	    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;
	  }
	  function d3_time_parseDay(date, string, i) {
	    d3_time_numberRe.lastIndex = 0;
	    var n = d3_time_numberRe.exec(string.slice(i, i + 2));
	    return n ? (date.d = +n[0], i + n[0].length) : -1;
	  }
	  function d3_time_parseDayOfYear(date, string, i) {
	    d3_time_numberRe.lastIndex = 0;
	    var n = d3_time_numberRe.exec(string.slice(i, i + 3));
	    return n ? (date.j = +n[0], i + n[0].length) : -1;
	  }
	  function d3_time_parseHour24(date, string, i) {
	    d3_time_numberRe.lastIndex = 0;
	    var n = d3_time_numberRe.exec(string.slice(i, i + 2));
	    return n ? (date.H = +n[0], i + n[0].length) : -1;
	  }
	  function d3_time_parseMinutes(date, string, i) {
	    d3_time_numberRe.lastIndex = 0;
	    var n = d3_time_numberRe.exec(string.slice(i, i + 2));
	    return n ? (date.M = +n[0], i + n[0].length) : -1;
	  }
	  function d3_time_parseSeconds(date, string, i) {
	    d3_time_numberRe.lastIndex = 0;
	    var n = d3_time_numberRe.exec(string.slice(i, i + 2));
	    return n ? (date.S = +n[0], i + n[0].length) : -1;
	  }
	  function d3_time_parseMilliseconds(date, string, i) {
	    d3_time_numberRe.lastIndex = 0;
	    var n = d3_time_numberRe.exec(string.slice(i, i + 3));
	    return n ? (date.L = +n[0], i + n[0].length) : -1;
	  }
	  function d3_time_zone(d) {
	    var z = d.getTimezoneOffset(), zs = z > 0 ? "-" : "+", zh = abs(z) / 60 | 0, zm = abs(z) % 60;
	    return zs + d3_time_formatPad(zh, "0", 2) + d3_time_formatPad(zm, "0", 2);
	  }
	  function d3_time_parseLiteralPercent(date, string, i) {
	    d3_time_percentRe.lastIndex = 0;
	    var n = d3_time_percentRe.exec(string.slice(i, i + 1));
	    return n ? i + n[0].length : -1;
	  }
	  function d3_time_formatMulti(formats) {
	    var n = formats.length, i = -1;
	    while (++i < n) formats[i][0] = this(formats[i][0]);
	    return function(date) {
	      var i = 0, f = formats[i];
	      while (!f[1](date)) f = formats[++i];
	      return f[0](date);
	    };
	  }
	  d3.locale = function(locale) {
	    return {
	      numberFormat: d3_locale_numberFormat(locale),
	      timeFormat: d3_locale_timeFormat(locale)
	    };
	  };
	  var d3_locale_enUS = d3.locale({
	    decimal: ".",
	    thousands: ",",
	    grouping: [ 3 ],
	    currency: [ "$", "" ],
	    dateTime: "%a %b %e %X %Y",
	    date: "%m/%d/%Y",
	    time: "%H:%M:%S",
	    periods: [ "AM", "PM" ],
	    days: [ "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday" ],
	    shortDays: [ "Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat" ],
	    months: [ "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" ],
	    shortMonths: [ "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec" ]
	  });
	  d3.format = d3_locale_enUS.numberFormat;
	  d3.geo = {};
	  function d3_adder() {}
	  d3_adder.prototype = {
	    s: 0,
	    t: 0,
	    add: function(y) {
	      d3_adderSum(y, this.t, d3_adderTemp);
	      d3_adderSum(d3_adderTemp.s, this.s, this);
	      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;
	    },
	    reset: function() {
	      this.s = this.t = 0;
	    },
	    valueOf: function() {
	      return this.s;
	    }
	  };
	  var d3_adderTemp = new d3_adder();
	  function d3_adderSum(a, b, o) {
	    var x = o.s = a + b, bv = x - a, av = x - bv;
	    o.t = a - av + (b - bv);
	  }
	  d3.geo.stream = function(object, listener) {
	    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {
	      d3_geo_streamObjectType[object.type](object, listener);
	    } else {
	      d3_geo_streamGeometry(object, listener);
	    }
	  };
	  function d3_geo_streamGeometry(geometry, listener) {
	    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {
	      d3_geo_streamGeometryType[geometry.type](geometry, listener);
	    }
	  }
	  var d3_geo_streamObjectType = {
	    Feature: function(feature, listener) {
	      d3_geo_streamGeometry(feature.geometry, listener);
	    },
	    FeatureCollection: function(object, listener) {
	      var features = object.features, i = -1, n = features.length;
	      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);
	    }
	  };
	  var d3_geo_streamGeometryType = {
	    Sphere: function(object, listener) {
	      listener.sphere();
	    },
	    Point: function(object, listener) {
	      object = object.coordinates;
	      listener.point(object[0], object[1], object[2]);
	    },
	    MultiPoint: function(object, listener) {
	      var coordinates = object.coordinates, i = -1, n = coordinates.length;
	      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);
	    },
	    LineString: function(object, listener) {
	      d3_geo_streamLine(object.coordinates, listener, 0);
	    },
	    MultiLineString: function(object, listener) {
	      var coordinates = object.coordinates, i = -1, n = coordinates.length;
	      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);
	    },
	    Polygon: function(object, listener) {
	      d3_geo_streamPolygon(object.coordinates, listener);
	    },
	    MultiPolygon: function(object, listener) {
	      var coordinates = object.coordinates, i = -1, n = coordinates.length;
	      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);
	    },
	    GeometryCollection: function(object, listener) {
	      var geometries = object.geometries, i = -1, n = geometries.length;
	      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);
	    }
	  };
	  function d3_geo_streamLine(coordinates, listener, closed) {
	    var i = -1, n = coordinates.length - closed, coordinate;
	    listener.lineStart();
	    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);
	    listener.lineEnd();
	  }
	  function d3_geo_streamPolygon(coordinates, listener) {
	    var i = -1, n = coordinates.length;
	    listener.polygonStart();
	    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);
	    listener.polygonEnd();
	  }
	  d3.geo.area = function(object) {
	    d3_geo_areaSum = 0;
	    d3.geo.stream(object, d3_geo_area);
	    return d3_geo_areaSum;
	  };
	  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();
	  var d3_geo_area = {
	    sphere: function() {
	      d3_geo_areaSum += 4 * π;
	    },
	    point: d3_noop,
	    lineStart: d3_noop,
	    lineEnd: d3_noop,
	    polygonStart: function() {
	      d3_geo_areaRingSum.reset();
	      d3_geo_area.lineStart = d3_geo_areaRingStart;
	    },
	    polygonEnd: function() {
	      var area = 2 * d3_geo_areaRingSum;
	      d3_geo_areaSum += area < 0 ? 4 * π + area : area;
	      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;
	    }
	  };
	  function d3_geo_areaRingStart() {
	    var λ00, φ00, λ0, cosφ0, sinφ0;
	    d3_geo_area.point = function(λ, φ) {
	      d3_geo_area.point = nextPoint;
	      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), 
	      sinφ0 = Math.sin(φ);
	    };
	    function nextPoint(λ, φ) {
	      λ *= d3_radians;
	      φ = φ * d3_radians / 2 + π / 4;
	      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);
	      d3_geo_areaRingSum.add(Math.atan2(v, u));
	      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;
	    }
	    d3_geo_area.lineEnd = function() {
	      nextPoint(λ00, φ00);
	    };
	  }
	  function d3_geo_cartesian(spherical) {
	    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);
	    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];
	  }
	  function d3_geo_cartesianDot(a, b) {
	    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];
	  }
	  function d3_geo_cartesianCross(a, b) {
	    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];
	  }
	  function d3_geo_cartesianAdd(a, b) {
	    a[0] += b[0];
	    a[1] += b[1];
	    a[2] += b[2];
	  }
	  function d3_geo_cartesianScale(vector, k) {
	    return [ vector[0] * k, vector[1] * k, vector[2] * k ];
	  }
	  function d3_geo_cartesianNormalize(d) {
	    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);
	    d[0] /= l;
	    d[1] /= l;
	    d[2] /= l;
	  }
	  function d3_geo_spherical(cartesian) {
	    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];
	  }
	  function d3_geo_sphericalEqual(a, b) {
	    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;
	  }
	  d3.geo.bounds = function() {
	    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;
	    var bound = {
	      point: point,
	      lineStart: lineStart,
	      lineEnd: lineEnd,
	      polygonStart: function() {
	        bound.point = ringPoint;
	        bound.lineStart = ringStart;
	        bound.lineEnd = ringEnd;
	        dλSum = 0;
	        d3_geo_area.polygonStart();
	      },
	      polygonEnd: function() {
	        d3_geo_area.polygonEnd();
	        bound.point = point;
	        bound.lineStart = lineStart;
	        bound.lineEnd = lineEnd;
	        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;
	        range[0] = λ0, range[1] = λ1;
	      }
	    };
	    function point(λ, φ) {
	      ranges.push(range = [ λ0 = λ, λ1 = λ ]);
	      if (φ < φ0) φ0 = φ;
	      if (φ > φ1) φ1 = φ;
	    }
	    function linePoint(λ, φ) {
	      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);
	      if (p0) {
	        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);
	        d3_geo_cartesianNormalize(inflection);
	        inflection = d3_geo_spherical(inflection);
	        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;
	        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {
	          var φi = inflection[1] * d3_degrees;
	          if (φi > φ1) φ1 = φi;
	        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {
	          var φi = -inflection[1] * d3_degrees;
	          if (φi < φ0) φ0 = φi;
	        } else {
	          if (φ < φ0) φ0 = φ;
	          if (φ > φ1) φ1 = φ;
	        }
	        if (antimeridian) {
	          if (λ < λ_) {
	            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;
	          } else {
	            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;
	          }
	        } else {
	          if (λ1 >= λ0) {
	            if (λ < λ0) λ0 = λ;
	            if (λ > λ1) λ1 = λ;
	          } else {
	            if (λ > λ_) {
	              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;
	            } else {
	              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;
	            }
	          }
	        }
	      } else {
	        point(λ, φ);
	      }
	      p0 = p, λ_ = λ;
	    }
	    function lineStart() {
	      bound.point = linePoint;
	    }
	    function lineEnd() {
	      range[0] = λ0, range[1] = λ1;
	      bound.point = point;
	      p0 = null;
	    }
	    function ringPoint(λ, φ) {
	      if (p0) {
	        var dλ = λ - λ_;
	        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;
	      } else λ__ = λ, φ__ = φ;
	      d3_geo_area.point(λ, φ);
	      linePoint(λ, φ);
	    }
	    function ringStart() {
	      d3_geo_area.lineStart();
	    }
	    function ringEnd() {
	      ringPoint(λ__, φ__);
	      d3_geo_area.lineEnd();
	      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);
	      range[0] = λ0, range[1] = λ1;
	      p0 = null;
	    }
	    function angle(λ0, λ1) {
	      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;
	    }
	    function compareRanges(a, b) {
	      return a[0] - b[0];
	    }
	    function withinRange(x, range) {
	      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;
	    }
	    return function(feature) {
	      φ1 = λ1 = -(λ0 = φ0 = Infinity);
	      ranges = [];
	      d3.geo.stream(feature, bound);
	      var n = ranges.length;
	      if (n) {
	        ranges.sort(compareRanges);
	        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {
	          b = ranges[i];
	          if (withinRange(b[0], a) || withinRange(b[1], a)) {
	            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];
	            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];
	          } else {
	            merged.push(a = b);
	          }
	        }
	        var best = -Infinity, dλ;
	        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {
	          b = merged[i];
	          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];
	        }
	      }
	      ranges = range = null;
	      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];
	    };
	  }();
	  d3.geo.centroid = function(object) {
	    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;
	    d3.geo.stream(object, d3_geo_centroid);
	    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;
	    if (m < ε2) {
	      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;
	      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;
	      m = x * x + y * y + z * z;
	      if (m < ε2) return [ NaN, NaN ];
	    }
	    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];
	  };
	  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;
	  var d3_geo_centroid = {
	    sphere: d3_noop,
	    point: d3_geo_centroidPoint,
	    lineStart: d3_geo_centroidLineStart,
	    lineEnd: d3_geo_centroidLineEnd,
	    polygonStart: function() {
	      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;
	    },
	    polygonEnd: function() {
	      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;
	    }
	  };
	  function d3_geo_centroidPoint(λ, φ) {
	    λ *= d3_radians;
	    var cosφ = Math.cos(φ *= d3_radians);
	    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));
	  }
	  function d3_geo_centroidPointXYZ(x, y, z) {
	    ++d3_geo_centroidW0;
	    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;
	    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;
	    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;
	  }
	  function d3_geo_centroidLineStart() {
	    var x0, y0, z0;
	    d3_geo_centroid.point = function(λ, φ) {
	      λ *= d3_radians;
	      var cosφ = Math.cos(φ *= d3_radians);
	      x0 = cosφ * Math.cos(λ);
	      y0 = cosφ * Math.sin(λ);
	      z0 = Math.sin(φ);
	      d3_geo_centroid.point = nextPoint;
	      d3_geo_centroidPointXYZ(x0, y0, z0);
	    };
	    function nextPoint(λ, φ) {
	      λ *= d3_radians;
	      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);
	      d3_geo_centroidW1 += w;
	      d3_geo_centroidX1 += w * (x0 + (x0 = x));
	      d3_geo_centroidY1 += w * (y0 + (y0 = y));
	      d3_geo_centroidZ1 += w * (z0 + (z0 = z));
	      d3_geo_centroidPointXYZ(x0, y0, z0);
	    }
	  }
	  function d3_geo_centroidLineEnd() {
	    d3_geo_centroid.point = d3_geo_centroidPoint;
	  }
	  function d3_geo_centroidRingStart() {
	    var λ00, φ00, x0, y0, z0;
	    d3_geo_centroid.point = function(λ, φ) {
	      λ00 = λ, φ00 = φ;
	      d3_geo_centroid.point = nextPoint;
	      λ *= d3_radians;
	      var cosφ = Math.cos(φ *= d3_radians);
	      x0 = cosφ * Math.cos(λ);
	      y0 = cosφ * Math.sin(λ);
	      z0 = Math.sin(φ);
	      d3_geo_centroidPointXYZ(x0, y0, z0);
	    };
	    d3_geo_centroid.lineEnd = function() {
	      nextPoint(λ00, φ00);
	      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;
	      d3_geo_centroid.point = d3_geo_centroidPoint;
	    };
	    function nextPoint(λ, φ) {
	      λ *= d3_radians;
	      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);
	      d3_geo_centroidX2 += v * cx;
	      d3_geo_centroidY2 += v * cy;
	      d3_geo_centroidZ2 += v * cz;
	      d3_geo_centroidW1 += w;
	      d3_geo_centroidX1 += w * (x0 + (x0 = x));
	      d3_geo_centroidY1 += w * (y0 + (y0 = y));
	      d3_geo_centroidZ1 += w * (z0 + (z0 = z));
	      d3_geo_centroidPointXYZ(x0, y0, z0);
	    }
	  }
	  function d3_geo_compose(a, b) {
	    function compose(x, y) {
	      return x = a(x, y), b(x[0], x[1]);
	    }
	    if (a.invert && b.invert) compose.invert = function(x, y) {
	      return x = b.invert(x, y), x && a.invert(x[0], x[1]);
	    };
	    return compose;
	  }
	  function d3_true() {
	    return true;
	  }
	  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {
	    var subject = [], clip = [];
	    segments.forEach(function(segment) {
	      if ((n = segment.length - 1) <= 0) return;
	      var n, p0 = segment[0], p1 = segment[n];
	      if (d3_geo_sphericalEqual(p0, p1)) {
	        listener.lineStart();
	        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);
	        listener.lineEnd();
	        return;
	      }
	      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);
	      a.o = b;
	      subject.push(a);
	      clip.push(b);
	      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);
	      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);
	      a.o = b;
	      subject.push(a);
	      clip.push(b);
	    });
	    clip.sort(compare);
	    d3_geo_clipPolygonLinkCircular(subject);
	    d3_geo_clipPolygonLinkCircular(clip);
	    if (!subject.length) return;
	    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {
	      clip[i].e = entry = !entry;
	    }
	    var start = subject[0], points, point;
	    while (1) {
	      var current = start, isSubject = true;
	      while (current.v) if ((current = current.n) === start) return;
	      points = current.z;
	      listener.lineStart();
	      do {
	        current.v = current.o.v = true;
	        if (current.e) {
	          if (isSubject) {
	            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);
	          } else {
	            interpolate(current.x, current.n.x, 1, listener);
	          }
	          current = current.n;
	        } else {
	          if (isSubject) {
	            points = current.p.z;
	            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);
	          } else {
	            interpolate(current.x, current.p.x, -1, listener);
	          }
	          current = current.p;
	        }
	        current = current.o;
	        points = current.z;
	        isSubject = !isSubject;
	      } while (!current.v);
	      listener.lineEnd();
	    }
	  }
	  function d3_geo_clipPolygonLinkCircular(array) {
	    if (!(n = array.length)) return;
	    var n, i = 0, a = array[0], b;
	    while (++i < n) {
	      a.n = b = array[i];
	      b.p = a;
	      a = b;
	    }
	    a.n = b = array[0];
	    b.p = a;
	  }
	  function d3_geo_clipPolygonIntersection(point, points, other, entry) {
	    this.x = point;
	    this.z = points;
	    this.o = other;
	    this.e = entry;
	    this.v = false;
	    this.n = this.p = null;
	  }
	  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {
	    return function(rotate, listener) {
	      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);
	      var clip = {
	        point: point,
	        lineStart: lineStart,
	        lineEnd: lineEnd,
	        polygonStart: function() {
	          clip.point = pointRing;
	          clip.lineStart = ringStart;
	          clip.lineEnd = ringEnd;
	          segments = [];
	          polygon = [];
	        },
	        polygonEnd: function() {
	          clip.point = point;
	          clip.lineStart = lineStart;
	          clip.lineEnd = lineEnd;
	          segments = d3.merge(segments);
	          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);
	          if (segments.length) {
	            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;
	            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);
	          } else if (clipStartInside) {
	            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;
	            listener.lineStart();
	            interpolate(null, null, 1, listener);
	            listener.lineEnd();
	          }
	          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;
	          segments = polygon = null;
	        },
	        sphere: function() {
	          listener.polygonStart();
	          listener.lineStart();
	          interpolate(null, null, 1, listener);
	          listener.lineEnd();
	          listener.polygonEnd();
	        }
	      };
	      function point(λ, φ) {
	        var point = rotate(λ, φ);
	        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);
	      }
	      function pointLine(λ, φ) {
	        var point = rotate(λ, φ);
	        line.point(point[0], point[1]);
	      }
	      function lineStart() {
	        clip.point = pointLine;
	        line.lineStart();
	      }
	      function lineEnd() {
	        clip.point = point;
	        line.lineEnd();
	      }
	      var segments;
	      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;
	      function pointRing(λ, φ) {
	        ring.push([ λ, φ ]);
	        var point = rotate(λ, φ);
	        ringListener.point(point[0], point[1]);
	      }
	      function ringStart() {
	        ringListener.lineStart();
	        ring = [];
	      }
	      function ringEnd() {
	        pointRing(ring[0][0], ring[0][1]);
	        ringListener.lineEnd();
	        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;
	        ring.pop();
	        polygon.push(ring);
	        ring = null;
	        if (!n) return;
	        if (clean & 1) {
	          segment = ringSegments[0];
	          var n = segment.length - 1, i = -1, point;
	          if (n > 0) {
	            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;
	            listener.lineStart();
	            while (++i < n) listener.point((point = segment[i])[0], point[1]);
	            listener.lineEnd();
	          }
	          return;
	        }
	        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));
	        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));
	      }
	      return clip;
	    };
	  }
	  function d3_geo_clipSegmentLength1(segment) {
	    return segment.length > 1;
	  }
	  function d3_geo_clipBufferListener() {
	    var lines = [], line;
	    return {
	      lineStart: function() {
	        lines.push(line = []);
	      },
	      point: function(λ, φ) {
	        line.push([ λ, φ ]);
	      },
	      lineEnd: d3_noop,
	      buffer: function() {
	        var buffer = lines;
	        lines = [];
	        line = null;
	        return buffer;
	      },
	      rejoin: function() {
	        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));
	      }
	    };
	  }
	  function d3_geo_clipSort(a, b) {
	    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);
	  }
	  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);
	  function d3_geo_clipAntimeridianLine(listener) {
	    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;
	    return {
	      lineStart: function() {
	        listener.lineStart();
	        clean = 1;
	      },
	      point: function(λ1, φ1) {
	        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);
	        if (abs(dλ - π) < ε) {
	          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);
	          listener.point(sλ0, φ0);
	          listener.lineEnd();
	          listener.lineStart();
	          listener.point(sλ1, φ0);
	          listener.point(λ1, φ0);
	          clean = 0;
	        } else if (sλ0 !== sλ1 && dλ >= π) {
	          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;
	          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;
	          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);
	          listener.point(sλ0, φ0);
	          listener.lineEnd();
	          listener.lineStart();
	          listener.point(sλ1, φ0);
	          clean = 0;
	        }
	        listener.point(λ0 = λ1, φ0 = φ1);
	        sλ0 = sλ1;
	      },
	      lineEnd: function() {
	        listener.lineEnd();
	        λ0 = φ0 = NaN;
	      },
	      clean: function() {
	        return 2 - clean;
	      }
	    };
	  }
	  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {
	    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);
	    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;
	  }
	  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {
	    var φ;
	    if (from == null) {
	      φ = direction * halfπ;
	      listener.point(-π, φ);
	      listener.point(0, φ);
	      listener.point(π, φ);
	      listener.point(π, 0);
	      listener.point(π, -φ);
	      listener.point(0, -φ);
	      listener.point(-π, -φ);
	      listener.point(-π, 0);
	      listener.point(-π, φ);
	    } else if (abs(from[0] - to[0]) > ε) {
	      var s = from[0] < to[0] ? π : -π;
	      φ = direction * s / 2;
	      listener.point(-s, φ);
	      listener.point(0, φ);
	      listener.point(s, φ);
	    } else {
	      listener.point(to[0], to[1]);
	    }
	  }
	  function d3_geo_pointInPolygon(point, polygon) {
	    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;
	    d3_geo_areaRingSum.reset();
	    for (var i = 0, n = polygon.length; i < n; ++i) {
	      var ring = polygon[i], m = ring.length;
	      if (!m) continue;
	      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;
	      while (true) {
	        if (j === m) j = 0;
	        point = ring[j];
	        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;
	        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));
	        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;
	        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {
	          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));
	          d3_geo_cartesianNormalize(arc);
	          var intersection = d3_geo_cartesianCross(meridianNormal, arc);
	          d3_geo_cartesianNormalize(intersection);
	          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);
	          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {
	            winding += antimeridian ^ dλ >= 0 ? 1 : -1;
	          }
	        }
	        if (!j++) break;
	        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;
	      }
	    }
	    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < -ε) ^ winding & 1;
	  }
	  function d3_geo_clipCircle(radius) {
	    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);
	    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);
	    function visible(λ, φ) {
	      return Math.cos(λ) * Math.cos(φ) > cr;
	    }
	    function clipLine(listener) {
	      var point0, c0, v0, v00, clean;
	      return {
	        lineStart: function() {
	          v00 = v0 = false;
	          clean = 1;
	        },
	        point: function(λ, φ) {
	          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;
	          if (!point0 && (v00 = v0 = v)) listener.lineStart();
	          if (v !== v0) {
	            point2 = intersect(point0, point1);
	            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {
	              point1[0] += ε;
	              point1[1] += ε;
	              v = visible(point1[0], point1[1]);
	            }
	          }
	          if (v !== v0) {
	            clean = 0;
	            if (v) {
	              listener.lineStart();
	              point2 = intersect(point1, point0);
	              listener.point(point2[0], point2[1]);
	            } else {
	              point2 = intersect(point0, point1);
	              listener.point(point2[0], point2[1]);
	              listener.lineEnd();
	            }
	            point0 = point2;
	          } else if (notHemisphere && point0 && smallRadius ^ v) {
	            var t;
	            if (!(c & c0) && (t = intersect(point1, point0, true))) {
	              clean = 0;
	              if (smallRadius) {
	                listener.lineStart();
	                listener.point(t[0][0], t[0][1]);
	                listener.point(t[1][0], t[1][1]);
	                listener.lineEnd();
	              } else {
	                listener.point(t[1][0], t[1][1]);
	                listener.lineEnd();
	                listener.lineStart();
	                listener.point(t[0][0], t[0][1]);
	              }
	            }
	          }
	          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {
	            listener.point(point1[0], point1[1]);
	          }
	          point0 = point1, v0 = v, c0 = c;
	        },
	        lineEnd: function() {
	          if (v0) listener.lineEnd();
	          point0 = null;
	        },
	        clean: function() {
	          return clean | (v00 && v0) << 1;
	        }
	      };
	    }
	    function intersect(a, b, two) {
	      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);
	      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;
	      if (!determinant) return !two && a;
	      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);
	      d3_geo_cartesianAdd(A, B);
	      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);
	      if (t2 < 0) return;
	      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);
	      d3_geo_cartesianAdd(q, A);
	      q = d3_geo_spherical(q);
	      if (!two) return q;
	      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;
	      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;
	      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;
	      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;
	      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {
	        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);
	        d3_geo_cartesianAdd(q1, A);
	        return [ q, d3_geo_spherical(q1) ];
	      }
	    }
	    function code(λ, φ) {
	      var r = smallRadius ? radius : π - radius, code = 0;
	      if (λ < -r) code |= 1; else if (λ > r) code |= 2;
	      if (φ < -r) code |= 4; else if (φ > r) code |= 8;
	      return code;
	    }
	  }
	  function d3_geom_clipLine(x0, y0, x1, y1) {
	    return function(line) {
	      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;
	      r = x0 - ax;
	      if (!dx && r > 0) return;
	      r /= dx;
	      if (dx < 0) {
	        if (r < t0) return;
	        if (r < t1) t1 = r;
	      } else if (dx > 0) {
	        if (r > t1) return;
	        if (r > t0) t0 = r;
	      }
	      r = x1 - ax;
	      if (!dx && r < 0) return;
	      r /= dx;
	      if (dx < 0) {
	        if (r > t1) return;
	        if (r > t0) t0 = r;
	      } else if (dx > 0) {
	        if (r < t0) return;
	        if (r < t1) t1 = r;
	      }
	      r = y0 - ay;
	      if (!dy && r > 0) return;
	      r /= dy;
	      if (dy < 0) {
	        if (r < t0) return;
	        if (r < t1) t1 = r;
	      } else if (dy > 0) {
	        if (r > t1) return;
	        if (r > t0) t0 = r;
	      }
	      r = y1 - ay;
	      if (!dy && r < 0) return;
	      r /= dy;
	      if (dy < 0) {
	        if (r > t1) return;
	        if (r > t0) t0 = r;
	      } else if (dy > 0) {
	        if (r < t0) return;
	        if (r < t1) t1 = r;
	      }
	      if (t0 > 0) line.a = {
	        x: ax + t0 * dx,
	        y: ay + t0 * dy
	      };
	      if (t1 < 1) line.b = {
	        x: ax + t1 * dx,
	        y: ay + t1 * dy
	      };
	      return line;
	    };
	  }
	  var d3_geo_clipExtentMAX = 1e9;
	  d3.geo.clipExtent = function() {
	    var x0, y0, x1, y1, stream, clip, clipExtent = {
	      stream: function(output) {
	        if (stream) stream.valid = false;
	        stream = clip(output);
	        stream.valid = true;
	        return stream;
	      },
	      extent: function(_) {
	        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];
	        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);
	        if (stream) stream.valid = false, stream = null;
	        return clipExtent;
	      }
	    };
	    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);
	  };
	  function d3_geo_clipExtent(x0, y0, x1, y1) {
	    return function(listener) {
	      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;
	      var clip = {
	        point: point,
	        lineStart: lineStart,
	        lineEnd: lineEnd,
	        polygonStart: function() {
	          listener = bufferListener;
	          segments = [];
	          polygon = [];
	          clean = true;
	        },
	        polygonEnd: function() {
	          listener = listener_;
	          segments = d3.merge(segments);
	          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;
	          if (inside || visible) {
	            listener.polygonStart();
	            if (inside) {
	              listener.lineStart();
	              interpolate(null, null, 1, listener);
	              listener.lineEnd();
	            }
	            if (visible) {
	              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);
	            }
	            listener.polygonEnd();
	          }
	          segments = polygon = ring = null;
	        }
	      };
	      function insidePolygon(p) {
	        var wn = 0, n = polygon.length, y = p[1];
	        for (var i = 0; i < n; ++i) {
	          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {
	            b = v[j];
	            if (a[1] <= y) {
	              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;
	            } else {
	              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;
	            }
	            a = b;
	          }
	        }
	        return wn !== 0;
	      }
	      function interpolate(from, to, direction, listener) {
	        var a = 0, a1 = 0;
	        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {
	          do {
	            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);
	          } while ((a = (a + direction + 4) % 4) !== a1);
	        } else {
	          listener.point(to[0], to[1]);
	        }
	      }
	      function pointVisible(x, y) {
	        return x0 <= x && x <= x1 && y0 <= y && y <= y1;
	      }
	      function point(x, y) {
	        if (pointVisible(x, y)) listener.point(x, y);
	      }
	      var x__, y__, v__, x_, y_, v_, first, clean;
	      function lineStart() {
	        clip.point = linePoint;
	        if (polygon) polygon.push(ring = []);
	        first = true;
	        v_ = false;
	        x_ = y_ = NaN;
	      }
	      function lineEnd() {
	        if (segments) {
	          linePoint(x__, y__);
	          if (v__ && v_) bufferListener.rejoin();
	          segments.push(bufferListener.buffer());
	        }
	        clip.point = point;
	        if (v_) listener.lineEnd();
	      }
	      function linePoint(x, y) {
	        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));
	        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));
	        var v = pointVisible(x, y);
	        if (polygon) ring.push([ x, y ]);
	        if (first) {
	          x__ = x, y__ = y, v__ = v;
	          first = false;
	          if (v) {
	            listener.lineStart();
	            listener.point(x, y);
	          }
	        } else {
	          if (v && v_) listener.point(x, y); else {
	            var l = {
	              a: {
	                x: x_,
	                y: y_
	              },
	              b: {
	                x: x,
	                y: y
	              }
	            };
	            if (clipLine(l)) {
	              if (!v_) {
	                listener.lineStart();
	                listener.point(l.a.x, l.a.y);
	              }
	              listener.point(l.b.x, l.b.y);
	              if (!v) listener.lineEnd();
	              clean = false;
	            } else if (v) {
	              listener.lineStart();
	              listener.point(x, y);
	              clean = false;
	            }
	          }
	        }
	        x_ = x, y_ = y, v_ = v;
	      }
	      return clip;
	    };
	    function corner(p, direction) {
	      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;
	    }
	    function compare(a, b) {
	      return comparePoints(a.x, b.x);
	    }
	    function comparePoints(a, b) {
	      var ca = corner(a, 1), cb = corner(b, 1);
	      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];
	    }
	  }
	  function d3_geo_conic(projectAt) {
	    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);
	    p.parallels = function(_) {
	      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];
	      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);
	    };
	    return p;
	  }
	  function d3_geo_conicEqualArea(φ0, φ1) {
	    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;
	    function forward(λ, φ) {
	      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;
	      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];
	    }
	    forward.invert = function(x, y) {
	      var ρ0_y = ρ0 - y;
	      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];
	    };
	    return forward;
	  }
	  (d3.geo.conicEqualArea = function() {
	    return d3_geo_conic(d3_geo_conicEqualArea);
	  }).raw = d3_geo_conicEqualArea;
	  d3.geo.albers = function() {
	    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);
	  };
	  d3.geo.albersUsa = function() {
	    var lower48 = d3.geo.albers();
	    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);
	    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);
	    var point, pointStream = {
	      point: function(x, y) {
	        point = [ x, y ];
	      }
	    }, lower48Point, alaskaPoint, hawaiiPoint;
	    function albersUsa(coordinates) {
	      var x = coordinates[0], y = coordinates[1];
	      point = null;
	      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);
	      return point;
	    }
	    albersUsa.invert = function(coordinates) {
	      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;
	      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);
	    };
	    albersUsa.stream = function(stream) {
	      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);
	      return {
	        point: function(x, y) {
	          lower48Stream.point(x, y);
	          alaskaStream.point(x, y);
	          hawaiiStream.point(x, y);
	        },
	        sphere: function() {
	          lower48Stream.sphere();
	          alaskaStream.sphere();
	          hawaiiStream.sphere();
	        },
	        lineStart: function() {
	          lower48Stream.lineStart();
	          alaskaStream.lineStart();
	          hawaiiStream.lineStart();
	        },
	        lineEnd: function() {
	          lower48Stream.lineEnd();
	          alaskaStream.lineEnd();
	          hawaiiStream.lineEnd();
	        },
	        polygonStart: function() {
	          lower48Stream.polygonStart();
	          alaskaStream.polygonStart();
	          hawaiiStream.polygonStart();
	        },
	        polygonEnd: function() {
	          lower48Stream.polygonEnd();
	          alaskaStream.polygonEnd();
	          hawaiiStream.polygonEnd();
	        }
	      };
	    };
	    albersUsa.precision = function(_) {
	      if (!arguments.length) return lower48.precision();
	      lower48.precision(_);
	      alaska.precision(_);
	      hawaii.precision(_);
	      return albersUsa;
	    };
	    albersUsa.scale = function(_) {
	      if (!arguments.length) return lower48.scale();
	      lower48.scale(_);
	      alaska.scale(_ * .35);
	      hawaii.scale(_);
	      return albersUsa.translate(lower48.translate());
	    };
	    albersUsa.translate = function(_) {
	      if (!arguments.length) return lower48.translate();
	      var k = lower48.scale(), x = +_[0], y = +_[1];
	      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;
	      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;
	      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;
	      return albersUsa;
	    };
	    return albersUsa.scale(1070);
	  };
	  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {
	    point: d3_noop,
	    lineStart: d3_noop,
	    lineEnd: d3_noop,
	    polygonStart: function() {
	      d3_geo_pathAreaPolygon = 0;
	      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;
	    },
	    polygonEnd: function() {
	      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;
	      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);
	    }
	  };
	  function d3_geo_pathAreaRingStart() {
	    var x00, y00, x0, y0;
	    d3_geo_pathArea.point = function(x, y) {
	      d3_geo_pathArea.point = nextPoint;
	      x00 = x0 = x, y00 = y0 = y;
	    };
	    function nextPoint(x, y) {
	      d3_geo_pathAreaPolygon += y0 * x - x0 * y;
	      x0 = x, y0 = y;
	    }
	    d3_geo_pathArea.lineEnd = function() {
	      nextPoint(x00, y00);
	    };
	  }
	  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;
	  var d3_geo_pathBounds = {
	    point: d3_geo_pathBoundsPoint,
	    lineStart: d3_noop,
	    lineEnd: d3_noop,
	    polygonStart: d3_noop,
	    polygonEnd: d3_noop
	  };
	  function d3_geo_pathBoundsPoint(x, y) {
	    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;
	    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;
	    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;
	    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;
	  }
	  function d3_geo_pathBuffer() {
	    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];
	    var stream = {
	      point: point,
	      lineStart: function() {
	        stream.point = pointLineStart;
	      },
	      lineEnd: lineEnd,
	      polygonStart: function() {
	        stream.lineEnd = lineEndPolygon;
	      },
	      polygonEnd: function() {
	        stream.lineEnd = lineEnd;
	        stream.point = point;
	      },
	      pointRadius: function(_) {
	        pointCircle = d3_geo_pathBufferCircle(_);
	        return stream;
	      },
	      result: function() {
	        if (buffer.length) {
	          var result = buffer.join("");
	          buffer = [];
	          return result;
	        }
	      }
	    };
	    function point(x, y) {
	      buffer.push("M", x, ",", y, pointCircle);
	    }
	    function pointLineStart(x, y) {
	      buffer.push("M", x, ",", y);
	      stream.point = pointLine;
	    }
	    function pointLine(x, y) {
	      buffer.push("L", x, ",", y);
	    }
	    function lineEnd() {
	      stream.point = point;
	    }
	    function lineEndPolygon() {
	      buffer.push("Z");
	    }
	    return stream;
	  }
	  function d3_geo_pathBufferCircle(radius) {
	    return "m0," + radius + "a" + radius + "," + radius + " 0 1,1 0," + -2 * radius + "a" + radius + "," + radius + " 0 1,1 0," + 2 * radius + "z";
	  }
	  var d3_geo_pathCentroid = {
	    point: d3_geo_pathCentroidPoint,
	    lineStart: d3_geo_pathCentroidLineStart,
	    lineEnd: d3_geo_pathCentroidLineEnd,
	    polygonStart: function() {
	      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;
	    },
	    polygonEnd: function() {
	      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;
	      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;
	      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;
	    }
	  };
	  function d3_geo_pathCentroidPoint(x, y) {
	    d3_geo_centroidX0 += x;
	    d3_geo_centroidY0 += y;
	    ++d3_geo_centroidZ0;
	  }
	  function d3_geo_pathCentroidLineStart() {
	    var x0, y0;
	    d3_geo_pathCentroid.point = function(x, y) {
	      d3_geo_pathCentroid.point = nextPoint;
	      d3_geo_pathCentroidPoint(x0 = x, y0 = y);
	    };
	    function nextPoint(x, y) {
	      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);
	      d3_geo_centroidX1 += z * (x0 + x) / 2;
	      d3_geo_centroidY1 += z * (y0 + y) / 2;
	      d3_geo_centroidZ1 += z;
	      d3_geo_pathCentroidPoint(x0 = x, y0 = y);
	    }
	  }
	  function d3_geo_pathCentroidLineEnd() {
	    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;
	  }
	  function d3_geo_pathCentroidRingStart() {
	    var x00, y00, x0, y0;
	    d3_geo_pathCentroid.point = function(x, y) {
	      d3_geo_pathCentroid.point = nextPoint;
	      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);
	    };
	    function nextPoint(x, y) {
	      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);
	      d3_geo_centroidX1 += z * (x0 + x) / 2;
	      d3_geo_centroidY1 += z * (y0 + y) / 2;
	      d3_geo_centroidZ1 += z;
	      z = y0 * x - x0 * y;
	      d3_geo_centroidX2 += z * (x0 + x);
	      d3_geo_centroidY2 += z * (y0 + y);
	      d3_geo_centroidZ2 += z * 3;
	      d3_geo_pathCentroidPoint(x0 = x, y0 = y);
	    }
	    d3_geo_pathCentroid.lineEnd = function() {
	      nextPoint(x00, y00);
	    };
	  }
	  function d3_geo_pathContext(context) {
	    var pointRadius = 4.5;
	    var stream = {
	      point: point,
	      lineStart: function() {
	        stream.point = pointLineStart;
	      },
	      lineEnd: lineEnd,
	      polygonStart: function() {
	        stream.lineEnd = lineEndPolygon;
	      },
	      polygonEnd: function() {
	        stream.lineEnd = lineEnd;
	        stream.point = point;
	      },
	      pointRadius: function(_) {
	        pointRadius = _;
	        return stream;
	      },
	      result: d3_noop
	    };
	    function point(x, y) {
	      context.moveTo(x + pointRadius, y);
	      context.arc(x, y, pointRadius, 0, τ);
	    }
	    function pointLineStart(x, y) {
	      context.moveTo(x, y);
	      stream.point = pointLine;
	    }
	    function pointLine(x, y) {
	      context.lineTo(x, y);
	    }
	    function lineEnd() {
	      stream.point = point;
	    }
	    function lineEndPolygon() {
	      context.closePath();
	    }
	    return stream;
	  }
	  function d3_geo_resample(project) {
	    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;
	    function resample(stream) {
	      return (maxDepth ? resampleRecursive : resampleNone)(stream);
	    }
	    function resampleNone(stream) {
	      return d3_geo_transformPoint(stream, function(x, y) {
	        x = project(x, y);
	        stream.point(x[0], x[1]);
	      });
	    }
	    function resampleRecursive(stream) {
	      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;
	      var resample = {
	        point: point,
	        lineStart: lineStart,
	        lineEnd: lineEnd,
	        polygonStart: function() {
	          stream.polygonStart();
	          resample.lineStart = ringStart;
	        },
	        polygonEnd: function() {
	          stream.polygonEnd();
	          resample.lineStart = lineStart;
	        }
	      };
	      function point(x, y) {
	        x = project(x, y);
	        stream.point(x[0], x[1]);
	      }
	      function lineStart() {
	        x0 = NaN;
	        resample.point = linePoint;
	        stream.lineStart();
	      }
	      function linePoint(λ, φ) {
	        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);
	        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);
	        stream.point(x0, y0);
	      }
	      function lineEnd() {
	        resample.point = point;
	        stream.lineEnd();
	      }
	      function ringStart() {
	        lineStart();
	        resample.point = ringPoint;
	        resample.lineEnd = ringEnd;
	      }
	      function ringPoint(λ, φ) {
	        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;
	        resample.point = linePoint;
	      }
	      function ringEnd() {
	        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);
	        resample.lineEnd = lineEnd;
	        lineEnd();
	      }
	      return resample;
	    }
	    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {
	      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;
	      if (d2 > 4 * δ2 && depth--) {
	        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;
	        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {
	          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);
	          stream.point(x2, y2);
	          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);
	        }
	      }
	    }
	    resample.precision = function(_) {
	      if (!arguments.length) return Math.sqrt(δ2);
	      maxDepth = (δ2 = _ * _) > 0 && 16;
	      return resample;
	    };
	    return resample;
	  }
	  d3.geo.path = function() {
	    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;
	    function path(object) {
	      if (object) {
	        if (typeof pointRadius === "function") contextStream.pointRadius(+pointRadius.apply(this, arguments));
	        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);
	        d3.geo.stream(object, cacheStream);
	      }
	      return contextStream.result();
	    }
	    path.area = function(object) {
	      d3_geo_pathAreaSum = 0;
	      d3.geo.stream(object, projectStream(d3_geo_pathArea));
	      return d3_geo_pathAreaSum;
	    };
	    path.centroid = function(object) {
	      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;
	      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));
	      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];
	    };
	    path.bounds = function(object) {
	      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);
	      d3.geo.stream(object, projectStream(d3_geo_pathBounds));
	      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];
	    };
	    path.projection = function(_) {
	      if (!arguments.length) return projection;
	      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;
	      return reset();
	    };
	    path.context = function(_) {
	      if (!arguments.length) return context;
	      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);
	      if (typeof pointRadius !== "function") contextStream.pointRadius(pointRadius);
	      return reset();
	    };
	    path.pointRadius = function(_) {
	      if (!arguments.length) return pointRadius;
	      pointRadius = typeof _ === "function" ? _ : (contextStream.pointRadius(+_), +_);
	      return path;
	    };
	    function reset() {
	      cacheStream = null;
	      return path;
	    }
	    return path.projection(d3.geo.albersUsa()).context(null);
	  };
	  function d3_geo_pathProjectStream(project) {
	    var resample = d3_geo_resample(function(x, y) {
	      return project([ x * d3_degrees, y * d3_degrees ]);
	    });
	    return function(stream) {
	      return d3_geo_projectionRadians(resample(stream));
	    };
	  }
	  d3.geo.transform = function(methods) {
	    return {
	      stream: function(stream) {
	        var transform = new d3_geo_transform(stream);
	        for (var k in methods) transform[k] = methods[k];
	        return transform;
	      }
	    };
	  };
	  function d3_geo_transform(stream) {
	    this.stream = stream;
	  }
	  d3_geo_transform.prototype = {
	    point: function(x, y) {
	      this.stream.point(x, y);
	    },
	    sphere: function() {
	      this.stream.sphere();
	    },
	    lineStart: function() {
	      this.stream.lineStart();
	    },
	    lineEnd: function() {
	      this.stream.lineEnd();
	    },
	    polygonStart: function() {
	      this.stream.polygonStart();
	    },
	    polygonEnd: function() {
	      this.stream.polygonEnd();
	    }
	  };
	  function d3_geo_transformPoint(stream, point) {
	    return {
	      point: point,
	      sphere: function() {
	        stream.sphere();
	      },
	      lineStart: function() {
	        stream.lineStart();
	      },
	      lineEnd: function() {
	        stream.lineEnd();
	      },
	      polygonStart: function() {
	        stream.polygonStart();
	      },
	      polygonEnd: function() {
	        stream.polygonEnd();
	      }
	    };
	  }
	  d3.geo.projection = d3_geo_projection;
	  d3.geo.projectionMutator = d3_geo_projectionMutator;
	  function d3_geo_projection(project) {
	    return d3_geo_projectionMutator(function() {
	      return project;
	    })();
	  }
	  function d3_geo_projectionMutator(projectAt) {
	    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {
	      x = project(x, y);
	      return [ x[0] * k + δx, δy - x[1] * k ];
	    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;
	    function projection(point) {
	      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);
	      return [ point[0] * k + δx, δy - point[1] * k ];
	    }
	    function invert(point) {
	      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);
	      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];
	    }
	    projection.stream = function(output) {
	      if (stream) stream.valid = false;
	      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));
	      stream.valid = true;
	      return stream;
	    };
	    projection.clipAngle = function(_) {
	      if (!arguments.length) return clipAngle;
	      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);
	      return invalidate();
	    };
	    projection.clipExtent = function(_) {
	      if (!arguments.length) return clipExtent;
	      clipExtent = _;
	      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;
	      return invalidate();
	    };
	    projection.scale = function(_) {
	      if (!arguments.length) return k;
	      k = +_;
	      return reset();
	    };
	    projection.translate = function(_) {
	      if (!arguments.length) return [ x, y ];
	      x = +_[0];
	      y = +_[1];
	      return reset();
	    };
	    projection.center = function(_) {
	      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];
	      λ = _[0] % 360 * d3_radians;
	      φ = _[1] % 360 * d3_radians;
	      return reset();
	    };
	    projection.rotate = function(_) {
	      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];
	      δλ = _[0] % 360 * d3_radians;
	      δφ = _[1] % 360 * d3_radians;
	      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;
	      return reset();
	    };
	    d3.rebind(projection, projectResample, "precision");
	    function reset() {
	      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);
	      var center = project(λ, φ);
	      δx = x - center[0] * k;
	      δy = y + center[1] * k;
	      return invalidate();
	    }
	    function invalidate() {
	      if (stream) stream.valid = false, stream = null;
	      return projection;
	    }
	    return function() {
	      project = projectAt.apply(this, arguments);
	      projection.invert = project.invert && invert;
	      return reset();
	    };
	  }
	  function d3_geo_projectionRadians(stream) {
	    return d3_geo_transformPoint(stream, function(x, y) {
	      stream.point(x * d3_radians, y * d3_radians);
	    });
	  }
	  function d3_geo_equirectangular(λ, φ) {
	    return [ λ, φ ];
	  }
	  (d3.geo.equirectangular = function() {
	    return d3_geo_projection(d3_geo_equirectangular);
	  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;
	  d3.geo.rotation = function(rotate) {
	    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);
	    function forward(coordinates) {
	      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);
	      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;
	    }
	    forward.invert = function(coordinates) {
	      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);
	      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;
	    };
	    return forward;
	  };
	  function d3_geo_identityRotation(λ, φ) {
	    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];
	  }
	  d3_geo_identityRotation.invert = d3_geo_equirectangular;
	  function d3_geo_rotation(δλ, δφ, δγ) {
	    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;
	  }
	  function d3_geo_forwardRotationλ(δλ) {
	    return function(λ, φ) {
	      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];
	    };
	  }
	  function d3_geo_rotationλ(δλ) {
	    var rotation = d3_geo_forwardRotationλ(δλ);
	    rotation.invert = d3_geo_forwardRotationλ(-δλ);
	    return rotation;
	  }
	  function d3_geo_rotationφγ(δφ, δγ) {
	    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);
	    function rotation(λ, φ) {
	      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;
	      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];
	    }
	    rotation.invert = function(λ, φ) {
	      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;
	      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];
	    };
	    return rotation;
	  }
	  d3.geo.circle = function() {
	    var origin = [ 0, 0 ], angle, precision = 6, interpolate;
	    function circle() {
	      var center = typeof origin === "function" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];
	      interpolate(null, null, 1, {
	        point: function(x, y) {
	          ring.push(x = rotate(x, y));
	          x[0] *= d3_degrees, x[1] *= d3_degrees;
	        }
	      });
	      return {
	        type: "Polygon",
	        coordinates: [ ring ]
	      };
	    }
	    circle.origin = function(x) {
	      if (!arguments.length) return origin;
	      origin = x;
	      return circle;
	    };
	    circle.angle = function(x) {
	      if (!arguments.length) return angle;
	      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);
	      return circle;
	    };
	    circle.precision = function(_) {
	      if (!arguments.length) return precision;
	      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);
	      return circle;
	    };
	    return circle.angle(90);
	  };
	  function d3_geo_circleInterpolate(radius, precision) {
	    var cr = Math.cos(radius), sr = Math.sin(radius);
	    return function(from, to, direction, listener) {
	      var step = direction * precision;
	      if (from != null) {
	        from = d3_geo_circleAngle(cr, from);
	        to = d3_geo_circleAngle(cr, to);
	        if (direction > 0 ? from < to : from > to) from += direction * τ;
	      } else {
	        from = radius + direction * τ;
	        to = radius - .5 * step;
	      }
	      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {
	        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);
	      }
	    };
	  }
	  function d3_geo_circleAngle(cr, point) {
	    var a = d3_geo_cartesian(point);
	    a[0] -= cr;
	    d3_geo_cartesianNormalize(a);
	    var angle = d3_acos(-a[1]);
	    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);
	  }
	  d3.geo.distance = function(a, b) {
	    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;
	    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);
	  };
	  d3.geo.graticule = function() {
	    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;
	    function graticule() {
	      return {
	        type: "MultiLineString",
	        coordinates: lines()
	      };
	    }
	    function lines() {
	      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {
	        return abs(x % DX) > ε;
	      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {
	        return abs(y % DY) > ε;
	      }).map(y));
	    }
	    graticule.lines = function() {
	      return lines().map(function(coordinates) {
	        return {
	          type: "LineString",
	          coordinates: coordinates
	        };
	      });
	    };
	    graticule.outline = function() {
	      return {
	        type: "Polygon",
	        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]
	      };
	    };
	    graticule.extent = function(_) {
	      if (!arguments.length) return graticule.minorExtent();
	      return graticule.majorExtent(_).minorExtent(_);
	    };
	    graticule.majorExtent = function(_) {
	      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];
	      X0 = +_[0][0], X1 = +_[1][0];
	      Y0 = +_[0][1], Y1 = +_[1][1];
	      if (X0 > X1) _ = X0, X0 = X1, X1 = _;
	      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;
	      return graticule.precision(precision);
	    };
	    graticule.minorExtent = function(_) {
	      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];
	      x0 = +_[0][0], x1 = +_[1][0];
	      y0 = +_[0][1], y1 = +_[1][1];
	      if (x0 > x1) _ = x0, x0 = x1, x1 = _;
	      if (y0 > y1) _ = y0, y0 = y1, y1 = _;
	      return graticule.precision(precision);
	    };
	    graticule.step = function(_) {
	      if (!arguments.length) return graticule.minorStep();
	      return graticule.majorStep(_).minorStep(_);
	    };
	    graticule.majorStep = function(_) {
	      if (!arguments.length) return [ DX, DY ];
	      DX = +_[0], DY = +_[1];
	      return graticule;
	    };
	    graticule.minorStep = function(_) {
	      if (!arguments.length) return [ dx, dy ];
	      dx = +_[0], dy = +_[1];
	      return graticule;
	    };
	    graticule.precision = function(_) {
	      if (!arguments.length) return precision;
	      precision = +_;
	      x = d3_geo_graticuleX(y0, y1, 90);
	      y = d3_geo_graticuleY(x0, x1, precision);
	      X = d3_geo_graticuleX(Y0, Y1, 90);
	      Y = d3_geo_graticuleY(X0, X1, precision);
	      return graticule;
	    };
	    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);
	  };
	  function d3_geo_graticuleX(y0, y1, dy) {
	    var y = d3.range(y0, y1 - ε, dy).concat(y1);
	    return function(x) {
	      return y.map(function(y) {
	        return [ x, y ];
	      });
	    };
	  }
	  function d3_geo_graticuleY(x0, x1, dx) {
	    var x = d3.range(x0, x1 - ε, dx).concat(x1);
	    return function(y) {
	      return x.map(function(x) {
	        return [ x, y ];
	      });
	    };
	  }
	  function d3_source(d) {
	    return d.source;
	  }
	  function d3_target(d) {
	    return d.target;
	  }
	  d3.geo.greatArc = function() {
	    var source = d3_source, source_, target = d3_target, target_;
	    function greatArc() {
	      return {
	        type: "LineString",
	        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]
	      };
	    }
	    greatArc.distance = function() {
	      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));
	    };
	    greatArc.source = function(_) {
	      if (!arguments.length) return source;
	      source = _, source_ = typeof _ === "function" ? null : _;
	      return greatArc;
	    };
	    greatArc.target = function(_) {
	      if (!arguments.length) return target;
	      target = _, target_ = typeof _ === "function" ? null : _;
	      return greatArc;
	    };
	    greatArc.precision = function() {
	      return arguments.length ? greatArc : 0;
	    };
	    return greatArc;
	  };
	  d3.geo.interpolate = function(source, target) {
	    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);
	  };
	  function d3_geo_interpolate(x0, y0, x1, y1) {
	    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);
	    var interpolate = d ? function(t) {
	      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;
	      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];
	    } : function() {
	      return [ x0 * d3_degrees, y0 * d3_degrees ];
	    };
	    interpolate.distance = d;
	    return interpolate;
	  }
	  d3.geo.length = function(object) {
	    d3_geo_lengthSum = 0;
	    d3.geo.stream(object, d3_geo_length);
	    return d3_geo_lengthSum;
	  };
	  var d3_geo_lengthSum;
	  var d3_geo_length = {
	    sphere: d3_noop,
	    point: d3_noop,
	    lineStart: d3_geo_lengthLineStart,
	    lineEnd: d3_noop,
	    polygonStart: d3_noop,
	    polygonEnd: d3_noop
	  };
	  function d3_geo_lengthLineStart() {
	    var λ0, sinφ0, cosφ0;
	    d3_geo_length.point = function(λ, φ) {
	      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);
	      d3_geo_length.point = nextPoint;
	    };
	    d3_geo_length.lineEnd = function() {
	      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;
	    };
	    function nextPoint(λ, φ) {
	      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);
	      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);
	      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;
	    }
	  }
	  function d3_geo_azimuthal(scale, angle) {
	    function azimuthal(λ, φ) {
	      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);
	      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];
	    }
	    azimuthal.invert = function(x, y) {
	      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);
	      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];
	    };
	    return azimuthal;
	  }
	  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {
	    return Math.sqrt(2 / (1 + cosλcosφ));
	  }, function(ρ) {
	    return 2 * Math.asin(ρ / 2);
	  });
	  (d3.geo.azimuthalEqualArea = function() {
	    return d3_geo_projection(d3_geo_azimuthalEqualArea);
	  }).raw = d3_geo_azimuthalEqualArea;
	  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {
	    var c = Math.acos(cosλcosφ);
	    return c && c / Math.sin(c);
	  }, d3_identity);
	  (d3.geo.azimuthalEquidistant = function() {
	    return d3_geo_projection(d3_geo_azimuthalEquidistant);
	  }).raw = d3_geo_azimuthalEquidistant;
	  function d3_geo_conicConformal(φ0, φ1) {
	    var cosφ0 = Math.cos(φ0), t = function(φ) {
	      return Math.tan(π / 4 + φ / 2);
	    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;
	    if (!n) return d3_geo_mercator;
	    function forward(λ, φ) {
	      if (F > 0) {
	        if (φ < -halfπ + ε) φ = -halfπ + ε;
	      } else {
	        if (φ > halfπ - ε) φ = halfπ - ε;
	      }
	      var ρ = F / Math.pow(t(φ), n);
	      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];
	    }
	    forward.invert = function(x, y) {
	      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);
	      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];
	    };
	    return forward;
	  }
	  (d3.geo.conicConformal = function() {
	    return d3_geo_conic(d3_geo_conicConformal);
	  }).raw = d3_geo_conicConformal;
	  function d3_geo_conicEquidistant(φ0, φ1) {
	    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;
	    if (abs(n) < ε) return d3_geo_equirectangular;
	    function forward(λ, φ) {
	      var ρ = G - φ;
	      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];
	    }
	    forward.invert = function(x, y) {
	      var ρ0_y = G - y;
	      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];
	    };
	    return forward;
	  }
	  (d3.geo.conicEquidistant = function() {
	    return d3_geo_conic(d3_geo_conicEquidistant);
	  }).raw = d3_geo_conicEquidistant;
	  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {
	    return 1 / cosλcosφ;
	  }, Math.atan);
	  (d3.geo.gnomonic = function() {
	    return d3_geo_projection(d3_geo_gnomonic);
	  }).raw = d3_geo_gnomonic;
	  function d3_geo_mercator(λ, φ) {
	    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];
	  }
	  d3_geo_mercator.invert = function(x, y) {
	    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];
	  };
	  function d3_geo_mercatorProjection(project) {
	    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;
	    m.scale = function() {
	      var v = scale.apply(m, arguments);
	      return v === m ? clipAuto ? m.clipExtent(null) : m : v;
	    };
	    m.translate = function() {
	      var v = translate.apply(m, arguments);
	      return v === m ? clipAuto ? m.clipExtent(null) : m : v;
	    };
	    m.clipExtent = function(_) {
	      var v = clipExtent.apply(m, arguments);
	      if (v === m) {
	        if (clipAuto = _ == null) {
	          var k = π * scale(), t = translate();
	          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);
	        }
	      } else if (clipAuto) {
	        v = null;
	      }
	      return v;
	    };
	    return m.clipExtent(null);
	  }
	  (d3.geo.mercator = function() {
	    return d3_geo_mercatorProjection(d3_geo_mercator);
	  }).raw = d3_geo_mercator;
	  var d3_geo_orthographic = d3_geo_azimuthal(function() {
	    return 1;
	  }, Math.asin);
	  (d3.geo.orthographic = function() {
	    return d3_geo_projection(d3_geo_orthographic);
	  }).raw = d3_geo_orthographic;
	  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {
	    return 1 / (1 + cosλcosφ);
	  }, function(ρ) {
	    return 2 * Math.atan(ρ);
	  });
	  (d3.geo.stereographic = function() {
	    return d3_geo_projection(d3_geo_stereographic);
	  }).raw = d3_geo_stereographic;
	  function d3_geo_transverseMercator(λ, φ) {
	    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];
	  }
	  d3_geo_transverseMercator.invert = function(x, y) {
	    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];
	  };
	  (d3.geo.transverseMercator = function() {
	    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;
	    projection.center = function(_) {
	      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);
	    };
	    projection.rotate = function(_) {
	      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), 
	      [ _[0], _[1], _[2] - 90 ]);
	    };
	    return rotate([ 0, 0, 90 ]);
	  }).raw = d3_geo_transverseMercator;
	  d3.geom = {};
	  function d3_geom_pointX(d) {
	    return d[0];
	  }
	  function d3_geom_pointY(d) {
	    return d[1];
	  }
	  d3.geom.hull = function(vertices) {
	    var x = d3_geom_pointX, y = d3_geom_pointY;
	    if (arguments.length) return hull(vertices);
	    function hull(data) {
	      if (data.length < 3) return [];
	      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];
	      for (i = 0; i < n; i++) {
	        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);
	      }
	      points.sort(d3_geom_hullOrder);
	      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);
	      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);
	      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];
	      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);
	      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);
	      return polygon;
	    }
	    hull.x = function(_) {
	      return arguments.length ? (x = _, hull) : x;
	    };
	    hull.y = function(_) {
	      return arguments.length ? (y = _, hull) : y;
	    };
	    return hull;
	  };
	  function d3_geom_hullUpper(points) {
	    var n = points.length, hull = [ 0, 1 ], hs = 2;
	    for (var i = 2; i < n; i++) {
	      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;
	      hull[hs++] = i;
	    }
	    return hull.slice(0, hs);
	  }
	  function d3_geom_hullOrder(a, b) {
	    return a[0] - b[0] || a[1] - b[1];
	  }
	  d3.geom.polygon = function(coordinates) {
	    d3_subclass(coordinates, d3_geom_polygonPrototype);
	    return coordinates;
	  };
	  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];
	  d3_geom_polygonPrototype.area = function() {
	    var i = -1, n = this.length, a, b = this[n - 1], area = 0;
	    while (++i < n) {
	      a = b;
	      b = this[i];
	      area += a[1] * b[0] - a[0] * b[1];
	    }
	    return area * .5;
	  };
	  d3_geom_polygonPrototype.centroid = function(k) {
	    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;
	    if (!arguments.length) k = -1 / (6 * this.area());
	    while (++i < n) {
	      a = b;
	      b = this[i];
	      c = a[0] * b[1] - b[0] * a[1];
	      x += (a[0] + b[0]) * c;
	      y += (a[1] + b[1]) * c;
	    }
	    return [ x * k, y * k ];
	  };
	  d3_geom_polygonPrototype.clip = function(subject) {
	    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;
	    while (++i < n) {
	      input = subject.slice();
	      subject.length = 0;
	      b = this[i];
	      c = input[(m = input.length - closed) - 1];
	      j = -1;
	      while (++j < m) {
	        d = input[j];
	        if (d3_geom_polygonInside(d, a, b)) {
	          if (!d3_geom_polygonInside(c, a, b)) {
	            subject.push(d3_geom_polygonIntersect(c, d, a, b));
	          }
	          subject.push(d);
	        } else if (d3_geom_polygonInside(c, a, b)) {
	          subject.push(d3_geom_polygonIntersect(c, d, a, b));
	        }
	        c = d;
	      }
	      if (closed) subject.push(subject[0]);
	      a = b;
	    }
	    return subject;
	  };
	  function d3_geom_polygonInside(p, a, b) {
	    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);
	  }
	  function d3_geom_polygonIntersect(c, d, a, b) {
	    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);
	    return [ x1 + ua * x21, y1 + ua * y21 ];
	  }
	  function d3_geom_polygonClosed(coordinates) {
	    var a = coordinates[0], b = coordinates[coordinates.length - 1];
	    return !(a[0] - b[0] || a[1] - b[1]);
	  }
	  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];
	  function d3_geom_voronoiBeach() {
	    d3_geom_voronoiRedBlackNode(this);
	    this.edge = this.site = this.circle = null;
	  }
	  function d3_geom_voronoiCreateBeach(site) {
	    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();
	    beach.site = site;
	    return beach;
	  }
	  function d3_geom_voronoiDetachBeach(beach) {
	    d3_geom_voronoiDetachCircle(beach);
	    d3_geom_voronoiBeaches.remove(beach);
	    d3_geom_voronoiBeachPool.push(beach);
	    d3_geom_voronoiRedBlackNode(beach);
	  }
	  function d3_geom_voronoiRemoveBeach(beach) {
	    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {
	      x: x,
	      y: y
	    }, previous = beach.P, next = beach.N, disappearing = [ beach ];
	    d3_geom_voronoiDetachBeach(beach);
	    var lArc = previous;
	    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {
	      previous = lArc.P;
	      disappearing.unshift(lArc);
	      d3_geom_voronoiDetachBeach(lArc);
	      lArc = previous;
	    }
	    disappearing.unshift(lArc);
	    d3_geom_voronoiDetachCircle(lArc);
	    var rArc = next;
	    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {
	      next = rArc.N;
	      disappearing.push(rArc);
	      d3_geom_voronoiDetachBeach(rArc);
	      rArc = next;
	    }
	    disappearing.push(rArc);
	    d3_geom_voronoiDetachCircle(rArc);
	    var nArcs = disappearing.length, iArc;
	    for (iArc = 1; iArc < nArcs; ++iArc) {
	      rArc = disappearing[iArc];
	      lArc = disappearing[iArc - 1];
	      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);
	    }
	    lArc = disappearing[0];
	    rArc = disappearing[nArcs - 1];
	    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);
	    d3_geom_voronoiAttachCircle(lArc);
	    d3_geom_voronoiAttachCircle(rArc);
	  }
	  function d3_geom_voronoiAddBeach(site) {
	    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;
	    while (node) {
	      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;
	      if (dxl > ε) node = node.L; else {
	        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);
	        if (dxr > ε) {
	          if (!node.R) {
	            lArc = node;
	            break;
	          }
	          node = node.R;
	        } else {
	          if (dxl > -ε) {
	            lArc = node.P;
	            rArc = node;
	          } else if (dxr > -ε) {
	            lArc = node;
	            rArc = node.N;
	          } else {
	            lArc = rArc = node;
	          }
	          break;
	        }
	      }
	    }
	    var newArc = d3_geom_voronoiCreateBeach(site);
	    d3_geom_voronoiBeaches.insert(lArc, newArc);
	    if (!lArc && !rArc) return;
	    if (lArc === rArc) {
	      d3_geom_voronoiDetachCircle(lArc);
	      rArc = d3_geom_voronoiCreateBeach(lArc.site);
	      d3_geom_voronoiBeaches.insert(newArc, rArc);
	      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);
	      d3_geom_voronoiAttachCircle(lArc);
	      d3_geom_voronoiAttachCircle(rArc);
	      return;
	    }
	    if (!rArc) {
	      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);
	      return;
	    }
	    d3_geom_voronoiDetachCircle(lArc);
	    d3_geom_voronoiDetachCircle(rArc);
	    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {
	      x: (cy * hb - by * hc) / d + ax,
	      y: (bx * hc - cx * hb) / d + ay
	    };
	    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);
	    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);
	    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);
	    d3_geom_voronoiAttachCircle(lArc);
	    d3_geom_voronoiAttachCircle(rArc);
	  }
	  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {
	    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;
	    if (!pby2) return rfocx;
	    var lArc = arc.P;
	    if (!lArc) return -Infinity;
	    site = lArc.site;
	    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;
	    if (!plby2) return lfocx;
	    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;
	    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;
	    return (rfocx + lfocx) / 2;
	  }
	  function d3_geom_voronoiRightBreakPoint(arc, directrix) {
	    var rArc = arc.N;
	    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);
	    var site = arc.site;
	    return site.y === directrix ? site.x : Infinity;
	  }
	  function d3_geom_voronoiCell(site) {
	    this.site = site;
	    this.edges = [];
	  }
	  d3_geom_voronoiCell.prototype.prepare = function() {
	    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;
	    while (iHalfEdge--) {
	      edge = halfEdges[iHalfEdge].edge;
	      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);
	    }
	    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);
	    return halfEdges.length;
	  };
	  function d3_geom_voronoiCloseCells(extent) {
	    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;
	    while (iCell--) {
	      cell = cells[iCell];
	      if (!cell || !cell.prepare()) continue;
	      halfEdges = cell.edges;
	      nHalfEdges = halfEdges.length;
	      iHalfEdge = 0;
	      while (iHalfEdge < nHalfEdges) {
	        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;
	        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;
	        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {
	          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {
	            x: x0,
	            y: abs(x2 - x0) < ε ? y2 : y1
	          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {
	            x: abs(y2 - y1) < ε ? x2 : x1,
	            y: y1
	          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {
	            x: x1,
	            y: abs(x2 - x1) < ε ? y2 : y0
	          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {
	            x: abs(y2 - y0) < ε ? x2 : x0,
	            y: y0
	          } : null), cell.site, null));
	          ++nHalfEdges;
	        }
	      }
	    }
	  }
	  function d3_geom_voronoiHalfEdgeOrder(a, b) {
	    return b.angle - a.angle;
	  }
	  function d3_geom_voronoiCircle() {
	    d3_geom_voronoiRedBlackNode(this);
	    this.x = this.y = this.arc = this.site = this.cy = null;
	  }
	  function d3_geom_voronoiAttachCircle(arc) {
	    var lArc = arc.P, rArc = arc.N;
	    if (!lArc || !rArc) return;
	    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;
	    if (lSite === rSite) return;
	    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;
	    var d = 2 * (ax * cy - ay * cx);
	    if (d >= -ε2) return;
	    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;
	    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();
	    circle.arc = arc;
	    circle.site = cSite;
	    circle.x = x + bx;
	    circle.y = cy + Math.sqrt(x * x + y * y);
	    circle.cy = cy;
	    arc.circle = circle;
	    var before = null, node = d3_geom_voronoiCircles._;
	    while (node) {
	      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {
	        if (node.L) node = node.L; else {
	          before = node.P;
	          break;
	        }
	      } else {
	        if (node.R) node = node.R; else {
	          before = node;
	          break;
	        }
	      }
	    }
	    d3_geom_voronoiCircles.insert(before, circle);
	    if (!before) d3_geom_voronoiFirstCircle = circle;
	  }
	  function d3_geom_voronoiDetachCircle(arc) {
	    var circle = arc.circle;
	    if (circle) {
	      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;
	      d3_geom_voronoiCircles.remove(circle);
	      d3_geom_voronoiCirclePool.push(circle);
	      d3_geom_voronoiRedBlackNode(circle);
	      arc.circle = null;
	    }
	  }
	  function d3_geom_voronoiClipEdges(extent) {
	    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;
	    while (i--) {
	      e = edges[i];
	      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {
	        e.a = e.b = null;
	        edges.splice(i, 1);
	      }
	    }
	  }
	  function d3_geom_voronoiConnectEdge(edge, extent) {
	    var vb = edge.b;
	    if (vb) return true;
	    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;
	    if (ry === ly) {
	      if (fx < x0 || fx >= x1) return;
	      if (lx > rx) {
	        if (!va) va = {
	          x: fx,
	          y: y0
	        }; else if (va.y >= y1) return;
	        vb = {
	          x: fx,
	          y: y1
	        };
	      } else {
	        if (!va) va = {
	          x: fx,
	          y: y1
	        }; else if (va.y < y0) return;
	        vb = {
	          x: fx,
	          y: y0
	        };
	      }
	    } else {
	      fm = (lx - rx) / (ry - ly);
	      fb = fy - fm * fx;
	      if (fm < -1 || fm > 1) {
	        if (lx > rx) {
	          if (!va) va = {
	            x: (y0 - fb) / fm,
	            y: y0
	          }; else if (va.y >= y1) return;
	          vb = {
	            x: (y1 - fb) / fm,
	            y: y1
	          };
	        } else {
	          if (!va) va = {
	            x: (y1 - fb) / fm,
	            y: y1
	          }; else if (va.y < y0) return;
	          vb = {
	            x: (y0 - fb) / fm,
	            y: y0
	          };
	        }
	      } else {
	        if (ly < ry) {
	          if (!va) va = {
	            x: x0,
	            y: fm * x0 + fb
	          }; else if (va.x >= x1) return;
	          vb = {
	            x: x1,
	            y: fm * x1 + fb
	          };
	        } else {
	          if (!va) va = {
	            x: x1,
	            y: fm * x1 + fb
	          }; else if (va.x < x0) return;
	          vb = {
	            x: x0,
	            y: fm * x0 + fb
	          };
	        }
	      }
	    }
	    edge.a = va;
	    edge.b = vb;
	    return true;
	  }
	  function d3_geom_voronoiEdge(lSite, rSite) {
	    this.l = lSite;
	    this.r = rSite;
	    this.a = this.b = null;
	  }
	  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {
	    var edge = new d3_geom_voronoiEdge(lSite, rSite);
	    d3_geom_voronoiEdges.push(edge);
	    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);
	    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);
	    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));
	    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));
	    return edge;
	  }
	  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {
	    var edge = new d3_geom_voronoiEdge(lSite, null);
	    edge.a = va;
	    edge.b = vb;
	    d3_geom_voronoiEdges.push(edge);
	    return edge;
	  }
	  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {
	    if (!edge.a && !edge.b) {
	      edge.a = vertex;
	      edge.l = lSite;
	      edge.r = rSite;
	    } else if (edge.l === rSite) {
	      edge.b = vertex;
	    } else {
	      edge.a = vertex;
	    }
	  }
	  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {
	    var va = edge.a, vb = edge.b;
	    this.edge = edge;
	    this.site = lSite;
	    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);
	  }
	  d3_geom_voronoiHalfEdge.prototype = {
	    start: function() {
	      return this.edge.l === this.site ? this.edge.a : this.edge.b;
	    },
	    end: function() {
	      return this.edge.l === this.site ? this.edge.b : this.edge.a;
	    }
	  };
	  function d3_geom_voronoiRedBlackTree() {
	    this._ = null;
	  }
	  function d3_geom_voronoiRedBlackNode(node) {
	    node.U = node.C = node.L = node.R = node.P = node.N = null;
	  }
	  d3_geom_voronoiRedBlackTree.prototype = {
	    insert: function(after, node) {
	      var parent, grandpa, uncle;
	      if (after) {
	        node.P = after;
	        node.N = after.N;
	        if (after.N) after.N.P = node;
	        after.N = node;
	        if (after.R) {
	          after = after.R;
	          while (after.L) after = after.L;
	          after.L = node;
	        } else {
	          after.R = node;
	        }
	        parent = after;
	      } else if (this._) {
	        after = d3_geom_voronoiRedBlackFirst(this._);
	        node.P = null;
	        node.N = after;
	        after.P = after.L = node;
	        parent = after;
	      } else {
	        node.P = node.N = null;
	        this._ = node;
	        parent = null;
	      }
	      node.L = node.R = null;
	      node.U = parent;
	      node.C = true;
	      after = node;
	      while (parent && parent.C) {
	        grandpa = parent.U;
	        if (parent === grandpa.L) {
	          uncle = grandpa.R;
	          if (uncle && uncle.C) {
	            parent.C = uncle.C = false;
	            grandpa.C = true;
	            after = grandpa;
	          } else {
	            if (after === parent.R) {
	              d3_geom_voronoiRedBlackRotateLeft(this, parent);
	              after = parent;
	              parent = after.U;
	            }
	            parent.C = false;
	            grandpa.C = true;
	            d3_geom_voronoiRedBlackRotateRight(this, grandpa);
	          }
	        } else {
	          uncle = grandpa.L;
	          if (uncle && uncle.C) {
	            parent.C = uncle.C = false;
	            grandpa.C = true;
	            after = grandpa;
	          } else {
	            if (after === parent.L) {
	              d3_geom_voronoiRedBlackRotateRight(this, parent);
	              after = parent;
	              parent = after.U;
	            }
	            parent.C = false;
	            grandpa.C = true;
	            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);
	          }
	        }
	        parent = after.U;
	      }
	      this._.C = false;
	    },
	    remove: function(node) {
	      if (node.N) node.N.P = node.P;
	      if (node.P) node.P.N = node.N;
	      node.N = node.P = null;
	      var parent = node.U, sibling, left = node.L, right = node.R, next, red;
	      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);
	      if (parent) {
	        if (parent.L === node) parent.L = next; else parent.R = next;
	      } else {
	        this._ = next;
	      }
	      if (left && right) {
	        red = next.C;
	        next.C = node.C;
	        next.L = left;
	        left.U = next;
	        if (next !== right) {
	          parent = next.U;
	          next.U = node.U;
	          node = next.R;
	          parent.L = node;
	          next.R = right;
	          right.U = next;
	        } else {
	          next.U = parent;
	          parent = next;
	          node = next.R;
	        }
	      } else {
	        red = node.C;
	        node = next;
	      }
	      if (node) node.U = parent;
	      if (red) return;
	      if (node && node.C) {
	        node.C = false;
	        return;
	      }
	      do {
	        if (node === this._) break;
	        if (node === parent.L) {
	          sibling = parent.R;
	          if (sibling.C) {
	            sibling.C = false;
	            parent.C = true;
	            d3_geom_voronoiRedBlackRotateLeft(this, parent);
	            sibling = parent.R;
	          }
	          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {
	            if (!sibling.R || !sibling.R.C) {
	              sibling.L.C = false;
	              sibling.C = true;
	              d3_geom_voronoiRedBlackRotateRight(this, sibling);
	              sibling = parent.R;
	            }
	            sibling.C = parent.C;
	            parent.C = sibling.R.C = false;
	            d3_geom_voronoiRedBlackRotateLeft(this, parent);
	            node = this._;
	            break;
	          }
	        } else {
	          sibling = parent.L;
	          if (sibling.C) {
	            sibling.C = false;
	            parent.C = true;
	            d3_geom_voronoiRedBlackRotateRight(this, parent);
	            sibling = parent.L;
	          }
	          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {
	            if (!sibling.L || !sibling.L.C) {
	              sibling.R.C = false;
	              sibling.C = true;
	              d3_geom_voronoiRedBlackRotateLeft(this, sibling);
	              sibling = parent.L;
	            }
	            sibling.C = parent.C;
	            parent.C = sibling.L.C = false;
	            d3_geom_voronoiRedBlackRotateRight(this, parent);
	            node = this._;
	            break;
	          }
	        }
	        sibling.C = true;
	        node = parent;
	        parent = parent.U;
	      } while (!node.C);
	      if (node) node.C = false;
	    }
	  };
	  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {
	    var p = node, q = node.R, parent = p.U;
	    if (parent) {
	      if (parent.L === p) parent.L = q; else parent.R = q;
	    } else {
	      tree._ = q;
	    }
	    q.U = parent;
	    p.U = q;
	    p.R = q.L;
	    if (p.R) p.R.U = p;
	    q.L = p;
	  }
	  function d3_geom_voronoiRedBlackRotateRight(tree, node) {
	    var p = node, q = node.L, parent = p.U;
	    if (parent) {
	      if (parent.L === p) parent.L = q; else parent.R = q;
	    } else {
	      tree._ = q;
	    }
	    q.U = parent;
	    p.U = q;
	    p.L = q.R;
	    if (p.L) p.L.U = p;
	    q.R = p;
	  }
	  function d3_geom_voronoiRedBlackFirst(node) {
	    while (node.L) node = node.L;
	    return node;
	  }
	  function d3_geom_voronoi(sites, bbox) {
	    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;
	    d3_geom_voronoiEdges = [];
	    d3_geom_voronoiCells = new Array(sites.length);
	    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();
	    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();
	    while (true) {
	      circle = d3_geom_voronoiFirstCircle;
	      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {
	        if (site.x !== x0 || site.y !== y0) {
	          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);
	          d3_geom_voronoiAddBeach(site);
	          x0 = site.x, y0 = site.y;
	        }
	        site = sites.pop();
	      } else if (circle) {
	        d3_geom_voronoiRemoveBeach(circle.arc);
	      } else {
	        break;
	      }
	    }
	    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);
	    var diagram = {
	      cells: d3_geom_voronoiCells,
	      edges: d3_geom_voronoiEdges
	    };
	    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;
	    return diagram;
	  }
	  function d3_geom_voronoiVertexOrder(a, b) {
	    return b.y - a.y || b.x - a.x;
	  }
	  d3.geom.voronoi = function(points) {
	    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;
	    if (points) return voronoi(points);
	    function voronoi(data) {
	      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];
	      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {
	        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {
	          var s = e.start();
	          return [ s.x, s.y ];
	        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];
	        polygon.point = data[i];
	      });
	      return polygons;
	    }
	    function sites(data) {
	      return data.map(function(d, i) {
	        return {
	          x: Math.round(fx(d, i) / ε) * ε,
	          y: Math.round(fy(d, i) / ε) * ε,
	          i: i
	        };
	      });
	    }
	    voronoi.links = function(data) {
	      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {
	        return edge.l && edge.r;
	      }).map(function(edge) {
	        return {
	          source: data[edge.l.i],
	          target: data[edge.r.i]
	        };
	      });
	    };
	    voronoi.triangles = function(data) {
	      var triangles = [];
	      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {
	        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;
	        while (++j < m) {
	          e0 = e1;
	          s0 = s1;
	          e1 = edges[j].edge;
	          s1 = e1.l === site ? e1.r : e1.l;
	          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {
	            triangles.push([ data[i], data[s0.i], data[s1.i] ]);
	          }
	        }
	      });
	      return triangles;
	    };
	    voronoi.x = function(_) {
	      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;
	    };
	    voronoi.y = function(_) {
	      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;
	    };
	    voronoi.clipExtent = function(_) {
	      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;
	      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;
	      return voronoi;
	    };
	    voronoi.size = function(_) {
	      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];
	      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);
	    };
	    return voronoi;
	  };
	  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];
	  function d3_geom_voronoiTriangleArea(a, b, c) {
	    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);
	  }
	  d3.geom.delaunay = function(vertices) {
	    return d3.geom.voronoi().triangles(vertices);
	  };
	  d3.geom.quadtree = function(points, x1, y1, x2, y2) {
	    var x = d3_geom_pointX, y = d3_geom_pointY, compat;
	    if (compat = arguments.length) {
	      x = d3_geom_quadtreeCompatX;
	      y = d3_geom_quadtreeCompatY;
	      if (compat === 3) {
	        y2 = y1;
	        x2 = x1;
	        y1 = x1 = 0;
	      }
	      return quadtree(points);
	    }
	    function quadtree(data) {
	      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;
	      if (x1 != null) {
	        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;
	      } else {
	        x2_ = y2_ = -(x1_ = y1_ = Infinity);
	        xs = [], ys = [];
	        n = data.length;
	        if (compat) for (i = 0; i < n; ++i) {
	          d = data[i];
	          if (d.x < x1_) x1_ = d.x;
	          if (d.y < y1_) y1_ = d.y;
	          if (d.x > x2_) x2_ = d.x;
	          if (d.y > y2_) y2_ = d.y;
	          xs.push(d.x);
	          ys.push(d.y);
	        } else for (i = 0; i < n; ++i) {
	          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);
	          if (x_ < x1_) x1_ = x_;
	          if (y_ < y1_) y1_ = y_;
	          if (x_ > x2_) x2_ = x_;
	          if (y_ > y2_) y2_ = y_;
	          xs.push(x_);
	          ys.push(y_);
	        }
	      }
	      var dx = x2_ - x1_, dy = y2_ - y1_;
	      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;
	      function insert(n, d, x, y, x1, y1, x2, y2) {
	        if (isNaN(x) || isNaN(y)) return;
	        if (n.leaf) {
	          var nx = n.x, ny = n.y;
	          if (nx != null) {
	            if (abs(nx - x) + abs(ny - y) < .01) {
	              insertChild(n, d, x, y, x1, y1, x2, y2);
	            } else {
	              var nPoint = n.point;
	              n.x = n.y = n.point = null;
	              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);
	              insertChild(n, d, x, y, x1, y1, x2, y2);
	            }
	          } else {
	            n.x = x, n.y = y, n.point = d;
	          }
	        } else {
	          insertChild(n, d, x, y, x1, y1, x2, y2);
	        }
	      }
	      function insertChild(n, d, x, y, x1, y1, x2, y2) {
	        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;
	        n.leaf = false;
	        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());
	        if (right) x1 = xm; else x2 = xm;
	        if (below) y1 = ym; else y2 = ym;
	        insert(n, d, x, y, x1, y1, x2, y2);
	      }
	      var root = d3_geom_quadtreeNode();
	      root.add = function(d) {
	        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);
	      };
	      root.visit = function(f) {
	        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);
	      };
	      root.find = function(point) {
	        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);
	      };
	      i = -1;
	      if (x1 == null) {
	        while (++i < n) {
	          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);
	        }
	        --i;
	      } else data.forEach(root.add);
	      xs = ys = data = d = null;
	      return root;
	    }
	    quadtree.x = function(_) {
	      return arguments.length ? (x = _, quadtree) : x;
	    };
	    quadtree.y = function(_) {
	      return arguments.length ? (y = _, quadtree) : y;
	    };
	    quadtree.extent = function(_) {
	      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];
	      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], 
	      y2 = +_[1][1];
	      return quadtree;
	    };
	    quadtree.size = function(_) {
	      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];
	      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];
	      return quadtree;
	    };
	    return quadtree;
	  };
	  function d3_geom_quadtreeCompatX(d) {
	    return d.x;
	  }
	  function d3_geom_quadtreeCompatY(d) {
	    return d.y;
	  }
	  function d3_geom_quadtreeNode() {
	    return {
	      leaf: true,
	      nodes: [],
	      point: null,
	      x: null,
	      y: null
	    };
	  }
	  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {
	    if (!f(node, x1, y1, x2, y2)) {
	      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;
	      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);
	      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);
	      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);
	      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);
	    }
	  }
	  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {
	    var minDistance2 = Infinity, closestPoint;
	    (function find(node, x1, y1, x2, y2) {
	      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;
	      if (point = node.point) {
	        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;
	        if (distance2 < minDistance2) {
	          var distance = Math.sqrt(minDistance2 = distance2);
	          x0 = x - distance, y0 = y - distance;
	          x3 = x + distance, y3 = y + distance;
	          closestPoint = point;
	        }
	      }
	      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;
	      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {
	        if (node = children[i & 3]) switch (i & 3) {
	         case 0:
	          find(node, x1, y1, xm, ym);
	          break;

	         case 1:
	          find(node, xm, y1, x2, ym);
	          break;

	         case 2:
	          find(node, x1, ym, xm, y2);
	          break;

	         case 3:
	          find(node, xm, ym, x2, y2);
	          break;
	        }
	      }
	    })(root, x0, y0, x3, y3);
	    return closestPoint;
	  }
	  d3.interpolateRgb = d3_interpolateRgb;
	  function d3_interpolateRgb(a, b) {
	    a = d3.rgb(a);
	    b = d3.rgb(b);
	    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;
	    return function(t) {
	      return "#" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));
	    };
	  }
	  d3.interpolateObject = d3_interpolateObject;
	  function d3_interpolateObject(a, b) {
	    var i = {}, c = {}, k;
	    for (k in a) {
	      if (k in b) {
	        i[k] = d3_interpolate(a[k], b[k]);
	      } else {
	        c[k] = a[k];
	      }
	    }
	    for (k in b) {
	      if (!(k in a)) {
	        c[k] = b[k];
	      }
	    }
	    return function(t) {
	      for (k in i) c[k] = i[k](t);
	      return c;
	    };
	  }
	  d3.interpolateNumber = d3_interpolateNumber;
	  function d3_interpolateNumber(a, b) {
	    a = +a, b = +b;
	    return function(t) {
	      return a * (1 - t) + b * t;
	    };
	  }
	  d3.interpolateString = d3_interpolateString;
	  function d3_interpolateString(a, b) {
	    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];
	    a = a + "", b = b + "";
	    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {
	      if ((bs = bm.index) > bi) {
	        bs = b.slice(bi, bs);
	        if (s[i]) s[i] += bs; else s[++i] = bs;
	      }
	      if ((am = am[0]) === (bm = bm[0])) {
	        if (s[i]) s[i] += bm; else s[++i] = bm;
	      } else {
	        s[++i] = null;
	        q.push({
	          i: i,
	          x: d3_interpolateNumber(am, bm)
	        });
	      }
	      bi = d3_interpolate_numberB.lastIndex;
	    }
	    if (bi < b.length) {
	      bs = b.slice(bi);
	      if (s[i]) s[i] += bs; else s[++i] = bs;
	    }
	    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {
	      return b(t) + "";
	    }) : function() {
	      return b;
	    } : (b = q.length, function(t) {
	      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);
	      return s.join("");
	    });
	  }
	  var d3_interpolate_numberA = /[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, "g");
	  d3.interpolate = d3_interpolate;
	  function d3_interpolate(a, b) {
	    var i = d3.interpolators.length, f;
	    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;
	    return f;
	  }
	  d3.interpolators = [ function(a, b) {
	    var t = typeof b;
	    return (t === "string" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\(|hsl\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === "object" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);
	  } ];
	  d3.interpolateArray = d3_interpolateArray;
	  function d3_interpolateArray(a, b) {
	    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;
	    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));
	    for (;i < na; ++i) c[i] = a[i];
	    for (;i < nb; ++i) c[i] = b[i];
	    return function(t) {
	      for (i = 0; i < n0; ++i) c[i] = x[i](t);
	      return c;
	    };
	  }
	  var d3_ease_default = function() {
	    return d3_identity;
	  };
	  var d3_ease = d3.map({
	    linear: d3_ease_default,
	    poly: d3_ease_poly,
	    quad: function() {
	      return d3_ease_quad;
	    },
	    cubic: function() {
	      return d3_ease_cubic;
	    },
	    sin: function() {
	      return d3_ease_sin;
	    },
	    exp: function() {
	      return d3_ease_exp;
	    },
	    circle: function() {
	      return d3_ease_circle;
	    },
	    elastic: d3_ease_elastic,
	    back: d3_ease_back,
	    bounce: function() {
	      return d3_ease_bounce;
	    }
	  });
	  var d3_ease_mode = d3.map({
	    "in": d3_identity,
	    out: d3_ease_reverse,
	    "in-out": d3_ease_reflect,
	    "out-in": function(f) {
	      return d3_ease_reflect(d3_ease_reverse(f));
	    }
	  });
	  d3.ease = function(name) {
	    var i = name.indexOf("-"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : "in";
	    t = d3_ease.get(t) || d3_ease_default;
	    m = d3_ease_mode.get(m) || d3_identity;
	    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));
	  };
	  function d3_ease_clamp(f) {
	    return function(t) {
	      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);
	    };
	  }
	  function d3_ease_reverse(f) {
	    return function(t) {
	      return 1 - f(1 - t);
	    };
	  }
	  function d3_ease_reflect(f) {
	    return function(t) {
	      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));
	    };
	  }
	  function d3_ease_quad(t) {
	    return t * t;
	  }
	  function d3_ease_cubic(t) {
	    return t * t * t;
	  }
	  function d3_ease_cubicInOut(t) {
	    if (t <= 0) return 0;
	    if (t >= 1) return 1;
	    var t2 = t * t, t3 = t2 * t;
	    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);
	  }
	  function d3_ease_poly(e) {
	    return function(t) {
	      return Math.pow(t, e);
	    };
	  }
	  function d3_ease_sin(t) {
	    return 1 - Math.cos(t * halfπ);
	  }
	  function d3_ease_exp(t) {
	    return Math.pow(2, 10 * (t - 1));
	  }
	  function d3_ease_circle(t) {
	    return 1 - Math.sqrt(1 - t * t);
	  }
	  function d3_ease_elastic(a, p) {
	    var s;
	    if (arguments.length < 2) p = .45;
	    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;
	    return function(t) {
	      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);
	    };
	  }
	  function d3_ease_back(s) {
	    if (!s) s = 1.70158;
	    return function(t) {
	      return t * t * ((s + 1) * t - s);
	    };
	  }
	  function d3_ease_bounce(t) {
	    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;
	  }
	  d3.interpolateHcl = d3_interpolateHcl;
	  function d3_interpolateHcl(a, b) {
	    a = d3.hcl(a);
	    b = d3.hcl(b);
	    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;
	    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;
	    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;
	    return function(t) {
	      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + "";
	    };
	  }
	  d3.interpolateHsl = d3_interpolateHsl;
	  function d3_interpolateHsl(a, b) {
	    a = d3.hsl(a);
	    b = d3.hsl(b);
	    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;
	    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;
	    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;
	    return function(t) {
	      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + "";
	    };
	  }
	  d3.interpolateLab = d3_interpolateLab;
	  function d3_interpolateLab(a, b) {
	    a = d3.lab(a);
	    b = d3.lab(b);
	    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;
	    return function(t) {
	      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + "";
	    };
	  }
	  d3.interpolateRound = d3_interpolateRound;
	  function d3_interpolateRound(a, b) {
	    b -= a;
	    return function(t) {
	      return Math.round(a + b * t);
	    };
	  }
	  d3.transform = function(string) {
	    var g = d3_document.createElementNS(d3.ns.prefix.svg, "g");
	    return (d3.transform = function(string) {
	      if (string != null) {
	        g.setAttribute("transform", string);
	        var t = g.transform.baseVal.consolidate();
	      }
	      return new d3_transform(t ? t.matrix : d3_transformIdentity);
	    })(string);
	  };
	  function d3_transform(m) {
	    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;
	    if (r0[0] * r1[1] < r1[0] * r0[1]) {
	      r0[0] *= -1;
	      r0[1] *= -1;
	      kx *= -1;
	      kz *= -1;
	    }
	    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;
	    this.translate = [ m.e, m.f ];
	    this.scale = [ kx, ky ];
	    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;
	  }
	  d3_transform.prototype.toString = function() {
	    return "translate(" + this.translate + ")rotate(" + this.rotate + ")skewX(" + this.skew + ")scale(" + this.scale + ")";
	  };
	  function d3_transformDot(a, b) {
	    return a[0] * b[0] + a[1] * b[1];
	  }
	  function d3_transformNormalize(a) {
	    var k = Math.sqrt(d3_transformDot(a, a));
	    if (k) {
	      a[0] /= k;
	      a[1] /= k;
	    }
	    return k;
	  }
	  function d3_transformCombine(a, b, k) {
	    a[0] += k * b[0];
	    a[1] += k * b[1];
	    return a;
	  }
	  var d3_transformIdentity = {
	    a: 1,
	    b: 0,
	    c: 0,
	    d: 1,
	    e: 0,
	    f: 0
	  };
	  d3.interpolateTransform = d3_interpolateTransform;
	  function d3_interpolateTransformPop(s) {
	    return s.length ? s.pop() + "," : "";
	  }
	  function d3_interpolateTranslate(ta, tb, s, q) {
	    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {
	      var i = s.push("translate(", null, ",", null, ")");
	      q.push({
	        i: i - 4,
	        x: d3_interpolateNumber(ta[0], tb[0])
	      }, {
	        i: i - 2,
	        x: d3_interpolateNumber(ta[1], tb[1])
	      });
	    } else if (tb[0] || tb[1]) {
	      s.push("translate(" + tb + ")");
	    }
	  }
	  function d3_interpolateRotate(ra, rb, s, q) {
	    if (ra !== rb) {
	      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;
	      q.push({
	        i: s.push(d3_interpolateTransformPop(s) + "rotate(", null, ")") - 2,
	        x: d3_interpolateNumber(ra, rb)
	      });
	    } else if (rb) {
	      s.push(d3_interpolateTransformPop(s) + "rotate(" + rb + ")");
	    }
	  }
	  function d3_interpolateSkew(wa, wb, s, q) {
	    if (wa !== wb) {
	      q.push({
	        i: s.push(d3_interpolateTransformPop(s) + "skewX(", null, ")") - 2,
	        x: d3_interpolateNumber(wa, wb)
	      });
	    } else if (wb) {
	      s.push(d3_interpolateTransformPop(s) + "skewX(" + wb + ")");
	    }
	  }
	  function d3_interpolateScale(ka, kb, s, q) {
	    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {
	      var i = s.push(d3_interpolateTransformPop(s) + "scale(", null, ",", null, ")");
	      q.push({
	        i: i - 4,
	        x: d3_interpolateNumber(ka[0], kb[0])
	      }, {
	        i: i - 2,
	        x: d3_interpolateNumber(ka[1], kb[1])
	      });
	    } else if (kb[0] !== 1 || kb[1] !== 1) {
	      s.push(d3_interpolateTransformPop(s) + "scale(" + kb + ")");
	    }
	  }
	  function d3_interpolateTransform(a, b) {
	    var s = [], q = [];
	    a = d3.transform(a), b = d3.transform(b);
	    d3_interpolateTranslate(a.translate, b.translate, s, q);
	    d3_interpolateRotate(a.rotate, b.rotate, s, q);
	    d3_interpolateSkew(a.skew, b.skew, s, q);
	    d3_interpolateScale(a.scale, b.scale, s, q);
	    a = b = null;
	    return function(t) {
	      var i = -1, n = q.length, o;
	      while (++i < n) s[(o = q[i]).i] = o.x(t);
	      return s.join("");
	    };
	  }
	  function d3_uninterpolateNumber(a, b) {
	    b = (b -= a = +a) || 1 / b;
	    return function(x) {
	      return (x - a) / b;
	    };
	  }
	  function d3_uninterpolateClamp(a, b) {
	    b = (b -= a = +a) || 1 / b;
	    return function(x) {
	      return Math.max(0, Math.min(1, (x - a) / b));
	    };
	  }
	  d3.layout = {};
	  d3.layout.bundle = function() {
	    return function(links) {
	      var paths = [], i = -1, n = links.length;
	      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));
	      return paths;
	    };
	  };
	  function d3_layout_bundlePath(link) {
	    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];
	    while (start !== lca) {
	      start = start.parent;
	      points.push(start);
	    }
	    var k = points.length;
	    while (end !== lca) {
	      points.splice(k, 0, end);
	      end = end.parent;
	    }
	    return points;
	  }
	  function d3_layout_bundleAncestors(node) {
	    var ancestors = [], parent = node.parent;
	    while (parent != null) {
	      ancestors.push(node);
	      node = parent;
	      parent = parent.parent;
	    }
	    ancestors.push(node);
	    return ancestors;
	  }
	  function d3_layout_bundleLeastCommonAncestor(a, b) {
	    if (a === b) return a;
	    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;
	    while (aNode === bNode) {
	      sharedNode = aNode;
	      aNode = aNodes.pop();
	      bNode = bNodes.pop();
	    }
	    return sharedNode;
	  }
	  d3.layout.chord = function() {
	    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;
	    function relayout() {
	      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;
	      chords = [];
	      groups = [];
	      k = 0, i = -1;
	      while (++i < n) {
	        x = 0, j = -1;
	        while (++j < n) {
	          x += matrix[i][j];
	        }
	        groupSums.push(x);
	        subgroupIndex.push(d3.range(n));
	        k += x;
	      }
	      if (sortGroups) {
	        groupIndex.sort(function(a, b) {
	          return sortGroups(groupSums[a], groupSums[b]);
	        });
	      }
	      if (sortSubgroups) {
	        subgroupIndex.forEach(function(d, i) {
	          d.sort(function(a, b) {
	            return sortSubgroups(matrix[i][a], matrix[i][b]);
	          });
	        });
	      }
	      k = (τ - padding * n) / k;
	      x = 0, i = -1;
	      while (++i < n) {
	        x0 = x, j = -1;
	        while (++j < n) {
	          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;
	          subgroups[di + "-" + dj] = {
	            index: di,
	            subindex: dj,
	            startAngle: a0,
	            endAngle: a1,
	            value: v
	          };
	        }
	        groups[di] = {
	          index: di,
	          startAngle: x0,
	          endAngle: x,
	          value: groupSums[di]
	        };
	        x += padding;
	      }
	      i = -1;
	      while (++i < n) {
	        j = i - 1;
	        while (++j < n) {
	          var source = subgroups[i + "-" + j], target = subgroups[j + "-" + i];
	          if (source.value || target.value) {
	            chords.push(source.value < target.value ? {
	              source: target,
	              target: source
	            } : {
	              source: source,
	              target: target
	            });
	          }
	        }
	      }
	      if (sortChords) resort();
	    }
	    function resort() {
	      chords.sort(function(a, b) {
	        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);
	      });
	    }
	    chord.matrix = function(x) {
	      if (!arguments.length) return matrix;
	      n = (matrix = x) && matrix.length;
	      chords = groups = null;
	      return chord;
	    };
	    chord.padding = function(x) {
	      if (!arguments.length) return padding;
	      padding = x;
	      chords = groups = null;
	      return chord;
	    };
	    chord.sortGroups = function(x) {
	      if (!arguments.length) return sortGroups;
	      sortGroups = x;
	      chords = groups = null;
	      return chord;
	    };
	    chord.sortSubgroups = function(x) {
	      if (!arguments.length) return sortSubgroups;
	      sortSubgroups = x;
	      chords = null;
	      return chord;
	    };
	    chord.sortChords = function(x) {
	      if (!arguments.length) return sortChords;
	      sortChords = x;
	      if (chords) resort();
	      return chord;
	    };
	    chord.chords = function() {
	      if (!chords) relayout();
	      return chords;
	    };
	    chord.groups = function() {
	      if (!groups) relayout();
	      return groups;
	    };
	    return chord;
	  };
	  d3.layout.force = function() {
	    var force = {}, event = d3.dispatch("start", "tick", "end"), timer, size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;
	    function repulse(node) {
	      return function(quad, x1, _, x2) {
	        if (quad.point !== node) {
	          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;
	          if (dw * dw / theta2 < dn) {
	            if (dn < chargeDistance2) {
	              var k = quad.charge / dn;
	              node.px -= dx * k;
	              node.py -= dy * k;
	            }
	            return true;
	          }
	          if (quad.point && dn && dn < chargeDistance2) {
	            var k = quad.pointCharge / dn;
	            node.px -= dx * k;
	            node.py -= dy * k;
	          }
	        }
	        return !quad.charge;
	      };
	    }
	    force.tick = function() {
	      if ((alpha *= .99) < .005) {
	        timer = null;
	        event.end({
	          type: "end",
	          alpha: alpha = 0
	        });
	        return true;
	      }
	      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;
	      for (i = 0; i < m; ++i) {
	        o = links[i];
	        s = o.source;
	        t = o.target;
	        x = t.x - s.x;
	        y = t.y - s.y;
	        if (l = x * x + y * y) {
	          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;
	          x *= l;
	          y *= l;
	          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);
	          t.y -= y * k;
	          s.x += x * (k = 1 - k);
	          s.y += y * k;
	        }
	      }
	      if (k = alpha * gravity) {
	        x = size[0] / 2;
	        y = size[1] / 2;
	        i = -1;
	        if (k) while (++i < n) {
	          o = nodes[i];
	          o.x += (x - o.x) * k;
	          o.y += (y - o.y) * k;
	        }
	      }
	      if (charge) {
	        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);
	        i = -1;
	        while (++i < n) {
	          if (!(o = nodes[i]).fixed) {
	            q.visit(repulse(o));
	          }
	        }
	      }
	      i = -1;
	      while (++i < n) {
	        o = nodes[i];
	        if (o.fixed) {
	          o.x = o.px;
	          o.y = o.py;
	        } else {
	          o.x -= (o.px - (o.px = o.x)) * friction;
	          o.y -= (o.py - (o.py = o.y)) * friction;
	        }
	      }
	      event.tick({
	        type: "tick",
	        alpha: alpha
	      });
	    };
	    force.nodes = function(x) {
	      if (!arguments.length) return nodes;
	      nodes = x;
	      return force;
	    };
	    force.links = function(x) {
	      if (!arguments.length) return links;
	      links = x;
	      return force;
	    };
	    force.size = function(x) {
	      if (!arguments.length) return size;
	      size = x;
	      return force;
	    };
	    force.linkDistance = function(x) {
	      if (!arguments.length) return linkDistance;
	      linkDistance = typeof x === "function" ? x : +x;
	      return force;
	    };
	    force.distance = force.linkDistance;
	    force.linkStrength = function(x) {
	      if (!arguments.length) return linkStrength;
	      linkStrength = typeof x === "function" ? x : +x;
	      return force;
	    };
	    force.friction = function(x) {
	      if (!arguments.length) return friction;
	      friction = +x;
	      return force;
	    };
	    force.charge = function(x) {
	      if (!arguments.length) return charge;
	      charge = typeof x === "function" ? x : +x;
	      return force;
	    };
	    force.chargeDistance = function(x) {
	      if (!arguments.length) return Math.sqrt(chargeDistance2);
	      chargeDistance2 = x * x;
	      return force;
	    };
	    force.gravity = function(x) {
	      if (!arguments.length) return gravity;
	      gravity = +x;
	      return force;
	    };
	    force.theta = function(x) {
	      if (!arguments.length) return Math.sqrt(theta2);
	      theta2 = x * x;
	      return force;
	    };
	    force.alpha = function(x) {
	      if (!arguments.length) return alpha;
	      x = +x;
	      if (alpha) {
	        if (x > 0) {
	          alpha = x;
	        } else {
	          timer.c = null, timer.t = NaN, timer = null;
	          event.end({
	            type: "end",
	            alpha: alpha = 0
	          });
	        }
	      } else if (x > 0) {
	        event.start({
	          type: "start",
	          alpha: alpha = x
	        });
	        timer = d3_timer(force.tick);
	      }
	      return force;
	    };
	    force.start = function() {
	      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;
	      for (i = 0; i < n; ++i) {
	        (o = nodes[i]).index = i;
	        o.weight = 0;
	      }
	      for (i = 0; i < m; ++i) {
	        o = links[i];
	        if (typeof o.source == "number") o.source = nodes[o.source];
	        if (typeof o.target == "number") o.target = nodes[o.target];
	        ++o.source.weight;
	        ++o.target.weight;
	      }
	      for (i = 0; i < n; ++i) {
	        o = nodes[i];
	        if (isNaN(o.x)) o.x = position("x", w);
	        if (isNaN(o.y)) o.y = position("y", h);
	        if (isNaN(o.px)) o.px = o.x;
	        if (isNaN(o.py)) o.py = o.y;
	      }
	      distances = [];
	      if (typeof linkDistance === "function") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;
	      strengths = [];
	      if (typeof linkStrength === "function") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;
	      charges = [];
	      if (typeof charge === "function") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;
	      function position(dimension, size) {
	        if (!neighbors) {
	          neighbors = new Array(n);
	          for (j = 0; j < n; ++j) {
	            neighbors[j] = [];
	          }
	          for (j = 0; j < m; ++j) {
	            var o = links[j];
	            neighbors[o.source.index].push(o.target);
	            neighbors[o.target.index].push(o.source);
	          }
	        }
	        var candidates = neighbors[i], j = -1, l = candidates.length, x;
	        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;
	        return Math.random() * size;
	      }
	      return force.resume();
	    };
	    force.resume = function() {
	      return force.alpha(.1);
	    };
	    force.stop = function() {
	      return force.alpha(0);
	    };
	    force.drag = function() {
	      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on("dragstart.force", d3_layout_forceDragstart).on("drag.force", dragmove).on("dragend.force", d3_layout_forceDragend);
	      if (!arguments.length) return drag;
	      this.on("mouseover.force", d3_layout_forceMouseover).on("mouseout.force", d3_layout_forceMouseout).call(drag);
	    };
	    function dragmove(d) {
	      d.px = d3.event.x, d.py = d3.event.y;
	      force.resume();
	    }
	    return d3.rebind(force, event, "on");
	  };
	  function d3_layout_forceDragstart(d) {
	    d.fixed |= 2;
	  }
	  function d3_layout_forceDragend(d) {
	    d.fixed &= ~6;
	  }
	  function d3_layout_forceMouseover(d) {
	    d.fixed |= 4;
	    d.px = d.x, d.py = d.y;
	  }
	  function d3_layout_forceMouseout(d) {
	    d.fixed &= ~4;
	  }
	  function d3_layout_forceAccumulate(quad, alpha, charges) {
	    var cx = 0, cy = 0;
	    quad.charge = 0;
	    if (!quad.leaf) {
	      var nodes = quad.nodes, n = nodes.length, i = -1, c;
	      while (++i < n) {
	        c = nodes[i];
	        if (c == null) continue;
	        d3_layout_forceAccumulate(c, alpha, charges);
	        quad.charge += c.charge;
	        cx += c.charge * c.cx;
	        cy += c.charge * c.cy;
	      }
	    }
	    if (quad.point) {
	      if (!quad.leaf) {
	        quad.point.x += Math.random() - .5;
	        quad.point.y += Math.random() - .5;
	      }
	      var k = alpha * charges[quad.point.index];
	      quad.charge += quad.pointCharge = k;
	      cx += k * quad.point.x;
	      cy += k * quad.point.y;
	    }
	    quad.cx = cx / quad.charge;
	    quad.cy = cy / quad.charge;
	  }
	  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;
	  d3.layout.hierarchy = function() {
	    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;
	    function hierarchy(root) {
	      var stack = [ root ], nodes = [], node;
	      root.depth = 0;
	      while ((node = stack.pop()) != null) {
	        nodes.push(node);
	        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {
	          var n, childs, child;
	          while (--n >= 0) {
	            stack.push(child = childs[n]);
	            child.parent = node;
	            child.depth = node.depth + 1;
	          }
	          if (value) node.value = 0;
	          node.children = childs;
	        } else {
	          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;
	          delete node.children;
	        }
	      }
	      d3_layout_hierarchyVisitAfter(root, function(node) {
	        var childs, parent;
	        if (sort && (childs = node.children)) childs.sort(sort);
	        if (value && (parent = node.parent)) parent.value += node.value;
	      });
	      return nodes;
	    }
	    hierarchy.sort = function(x) {
	      if (!arguments.length) return sort;
	      sort = x;
	      return hierarchy;
	    };
	    hierarchy.children = function(x) {
	      if (!arguments.length) return children;
	      children = x;
	      return hierarchy;
	    };
	    hierarchy.value = function(x) {
	      if (!arguments.length) return value;
	      value = x;
	      return hierarchy;
	    };
	    hierarchy.revalue = function(root) {
	      if (value) {
	        d3_layout_hierarchyVisitBefore(root, function(node) {
	          if (node.children) node.value = 0;
	        });
	        d3_layout_hierarchyVisitAfter(root, function(node) {
	          var parent;
	          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;
	          if (parent = node.parent) parent.value += node.value;
	        });
	      }
	      return root;
	    };
	    return hierarchy;
	  };
	  function d3_layout_hierarchyRebind(object, hierarchy) {
	    d3.rebind(object, hierarchy, "sort", "children", "value");
	    object.nodes = object;
	    object.links = d3_layout_hierarchyLinks;
	    return object;
	  }
	  function d3_layout_hierarchyVisitBefore(node, callback) {
	    var nodes = [ node ];
	    while ((node = nodes.pop()) != null) {
	      callback(node);
	      if ((children = node.children) && (n = children.length)) {
	        var n, children;
	        while (--n >= 0) nodes.push(children[n]);
	      }
	    }
	  }
	  function d3_layout_hierarchyVisitAfter(node, callback) {
	    var nodes = [ node ], nodes2 = [];
	    while ((node = nodes.pop()) != null) {
	      nodes2.push(node);
	      if ((children = node.children) && (n = children.length)) {
	        var i = -1, n, children;
	        while (++i < n) nodes.push(children[i]);
	      }
	    }
	    while ((node = nodes2.pop()) != null) {
	      callback(node);
	    }
	  }
	  function d3_layout_hierarchyChildren(d) {
	    return d.children;
	  }
	  function d3_layout_hierarchyValue(d) {
	    return d.value;
	  }
	  function d3_layout_hierarchySort(a, b) {
	    return b.value - a.value;
	  }
	  function d3_layout_hierarchyLinks(nodes) {
	    return d3.merge(nodes.map(function(parent) {
	      return (parent.children || []).map(function(child) {
	        return {
	          source: parent,
	          target: child
	        };
	      });
	    }));
	  }
	  d3.layout.partition = function() {
	    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];
	    function position(node, x, dx, dy) {
	      var children = node.children;
	      node.x = x;
	      node.y = node.depth * dy;
	      node.dx = dx;
	      node.dy = dy;
	      if (children && (n = children.length)) {
	        var i = -1, n, c, d;
	        dx = node.value ? dx / node.value : 0;
	        while (++i < n) {
	          position(c = children[i], x, d = c.value * dx, dy);
	          x += d;
	        }
	      }
	    }
	    function depth(node) {
	      var children = node.children, d = 0;
	      if (children && (n = children.length)) {
	        var i = -1, n;
	        while (++i < n) d = Math.max(d, depth(children[i]));
	      }
	      return 1 + d;
	    }
	    function partition(d, i) {
	      var nodes = hierarchy.call(this, d, i);
	      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));
	      return nodes;
	    }
	    partition.size = function(x) {
	      if (!arguments.length) return size;
	      size = x;
	      return partition;
	    };
	    return d3_layout_hierarchyRebind(partition, hierarchy);
	  };
	  d3.layout.pie = function() {
	    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;
	    function pie(data) {
	      var n = data.length, values = data.map(function(d, i) {
	        return +value.call(pie, d, i);
	      }), a = +(typeof startAngle === "function" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === "function" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === "function" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), sum = d3.sum(values), k = sum ? (da - n * pa) / sum : 0, index = d3.range(n), arcs = [], v;
	      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {
	        return values[j] - values[i];
	      } : function(i, j) {
	        return sort(data[i], data[j]);
	      });
	      index.forEach(function(i) {
	        arcs[i] = {
	          data: data[i],
	          value: v = values[i],
	          startAngle: a,
	          endAngle: a += v * k + pa,
	          padAngle: p
	        };
	      });
	      return arcs;
	    }
	    pie.value = function(_) {
	      if (!arguments.length) return value;
	      value = _;
	      return pie;
	    };
	    pie.sort = function(_) {
	      if (!arguments.length) return sort;
	      sort = _;
	      return pie;
	    };
	    pie.startAngle = function(_) {
	      if (!arguments.length) return startAngle;
	      startAngle = _;
	      return pie;
	    };
	    pie.endAngle = function(_) {
	      if (!arguments.length) return endAngle;
	      endAngle = _;
	      return pie;
	    };
	    pie.padAngle = function(_) {
	      if (!arguments.length) return padAngle;
	      padAngle = _;
	      return pie;
	    };
	    return pie;
	  };
	  var d3_layout_pieSortByValue = {};
	  d3.layout.stack = function() {
	    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;
	    function stack(data, index) {
	      if (!(n = data.length)) return data;
	      var series = data.map(function(d, i) {
	        return values.call(stack, d, i);
	      });
	      var points = series.map(function(d) {
	        return d.map(function(v, i) {
	          return [ x.call(stack, v, i), y.call(stack, v, i) ];
	        });
	      });
	      var orders = order.call(stack, points, index);
	      series = d3.permute(series, orders);
	      points = d3.permute(points, orders);
	      var offsets = offset.call(stack, points, index);
	      var m = series[0].length, n, i, j, o;
	      for (j = 0; j < m; ++j) {
	        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);
	        for (i = 1; i < n; ++i) {
	          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);
	        }
	      }
	      return data;
	    }
	    stack.values = function(x) {
	      if (!arguments.length) return values;
	      values = x;
	      return stack;
	    };
	    stack.order = function(x) {
	      if (!arguments.length) return order;
	      order = typeof x === "function" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;
	      return stack;
	    };
	    stack.offset = function(x) {
	      if (!arguments.length) return offset;
	      offset = typeof x === "function" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;
	      return stack;
	    };
	    stack.x = function(z) {
	      if (!arguments.length) return x;
	      x = z;
	      return stack;
	    };
	    stack.y = function(z) {
	      if (!arguments.length) return y;
	      y = z;
	      return stack;
	    };
	    stack.out = function(z) {
	      if (!arguments.length) return out;
	      out = z;
	      return stack;
	    };
	    return stack;
	  };
	  function d3_layout_stackX(d) {
	    return d.x;
	  }
	  function d3_layout_stackY(d) {
	    return d.y;
	  }
	  function d3_layout_stackOut(d, y0, y) {
	    d.y0 = y0;
	    d.y = y;
	  }
	  var d3_layout_stackOrders = d3.map({
	    "inside-out": function(data) {
	      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {
	        return max[a] - max[b];
	      }), top = 0, bottom = 0, tops = [], bottoms = [];
	      for (i = 0; i < n; ++i) {
	        j = index[i];
	        if (top < bottom) {
	          top += sums[j];
	          tops.push(j);
	        } else {
	          bottom += sums[j];
	          bottoms.push(j);
	        }
	      }
	      return bottoms.reverse().concat(tops);
	    },
	    reverse: function(data) {
	      return d3.range(data.length).reverse();
	    },
	    "default": d3_layout_stackOrderDefault
	  });
	  var d3_layout_stackOffsets = d3.map({
	    silhouette: function(data) {
	      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];
	      for (j = 0; j < m; ++j) {
	        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];
	        if (o > max) max = o;
	        sums.push(o);
	      }
	      for (j = 0; j < m; ++j) {
	        y0[j] = (max - sums[j]) / 2;
	      }
	      return y0;
	    },
	    wiggle: function(data) {
	      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];
	      y0[0] = o = o0 = 0;
	      for (j = 1; j < m; ++j) {
	        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];
	        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {
	          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {
	            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;
	          }
	          s2 += s3 * data[i][j][1];
	        }
	        y0[j] = o -= s1 ? s2 / s1 * dx : 0;
	        if (o < o0) o0 = o;
	      }
	      for (j = 0; j < m; ++j) y0[j] -= o0;
	      return y0;
	    },
	    expand: function(data) {
	      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];
	      for (j = 0; j < m; ++j) {
	        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];
	        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;
	      }
	      for (j = 0; j < m; ++j) y0[j] = 0;
	      return y0;
	    },
	    zero: d3_layout_stackOffsetZero
	  });
	  function d3_layout_stackOrderDefault(data) {
	    return d3.range(data.length);
	  }
	  function d3_layout_stackOffsetZero(data) {
	    var j = -1, m = data[0].length, y0 = [];
	    while (++j < m) y0[j] = 0;
	    return y0;
	  }
	  function d3_layout_stackMaxIndex(array) {
	    var i = 1, j = 0, v = array[0][1], k, n = array.length;
	    for (;i < n; ++i) {
	      if ((k = array[i][1]) > v) {
	        j = i;
	        v = k;
	      }
	    }
	    return j;
	  }
	  function d3_layout_stackReduceSum(d) {
	    return d.reduce(d3_layout_stackSum, 0);
	  }
	  function d3_layout_stackSum(p, d) {
	    return p + d[1];
	  }
	  d3.layout.histogram = function() {
	    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;
	    function histogram(data, i) {
	      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;
	      while (++i < m) {
	        bin = bins[i] = [];
	        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);
	        bin.y = 0;
	      }
	      if (m > 0) {
	        i = -1;
	        while (++i < n) {
	          x = values[i];
	          if (x >= range[0] && x <= range[1]) {
	            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];
	            bin.y += k;
	            bin.push(data[i]);
	          }
	        }
	      }
	      return bins;
	    }
	    histogram.value = function(x) {
	      if (!arguments.length) return valuer;
	      valuer = x;
	      return histogram;
	    };
	    histogram.range = function(x) {
	      if (!arguments.length) return ranger;
	      ranger = d3_functor(x);
	      return histogram;
	    };
	    histogram.bins = function(x) {
	      if (!arguments.length) return binner;
	      binner = typeof x === "number" ? function(range) {
	        return d3_layout_histogramBinFixed(range, x);
	      } : d3_functor(x);
	      return histogram;
	    };
	    histogram.frequency = function(x) {
	      if (!arguments.length) return frequency;
	      frequency = !!x;
	      return histogram;
	    };
	    return histogram;
	  };
	  function d3_layout_histogramBinSturges(range, values) {
	    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));
	  }
	  function d3_layout_histogramBinFixed(range, n) {
	    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];
	    while (++x <= n) f[x] = m * x + b;
	    return f;
	  }
	  function d3_layout_histogramRange(values) {
	    return [ d3.min(values), d3.max(values) ];
	  }
	  d3.layout.pack = function() {
	    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;
	    function pack(d, i) {
	      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === "function" ? radius : function() {
	        return radius;
	      };
	      root.x = root.y = 0;
	      d3_layout_hierarchyVisitAfter(root, function(d) {
	        d.r = +r(d.value);
	      });
	      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);
	      if (padding) {
	        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;
	        d3_layout_hierarchyVisitAfter(root, function(d) {
	          d.r += dr;
	        });
	        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);
	        d3_layout_hierarchyVisitAfter(root, function(d) {
	          d.r -= dr;
	        });
	      }
	      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));
	      return nodes;
	    }
	    pack.size = function(_) {
	      if (!arguments.length) return size;
	      size = _;
	      return pack;
	    };
	    pack.radius = function(_) {
	      if (!arguments.length) return radius;
	      radius = _ == null || typeof _ === "function" ? _ : +_;
	      return pack;
	    };
	    pack.padding = function(_) {
	      if (!arguments.length) return padding;
	      padding = +_;
	      return pack;
	    };
	    return d3_layout_hierarchyRebind(pack, hierarchy);
	  };
	  function d3_layout_packSort(a, b) {
	    return a.value - b.value;
	  }
	  function d3_layout_packInsert(a, b) {
	    var c = a._pack_next;
	    a._pack_next = b;
	    b._pack_prev = a;
	    b._pack_next = c;
	    c._pack_prev = b;
	  }
	  function d3_layout_packSplice(a, b) {
	    a._pack_next = b;
	    b._pack_prev = a;
	  }
	  function d3_layout_packIntersects(a, b) {
	    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;
	    return .999 * dr * dr > dx * dx + dy * dy;
	  }
	  function d3_layout_packSiblings(node) {
	    if (!(nodes = node.children) || !(n = nodes.length)) return;
	    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;
	    function bound(node) {
	      xMin = Math.min(node.x - node.r, xMin);
	      xMax = Math.max(node.x + node.r, xMax);
	      yMin = Math.min(node.y - node.r, yMin);
	      yMax = Math.max(node.y + node.r, yMax);
	    }
	    nodes.forEach(d3_layout_packLink);
	    a = nodes[0];
	    a.x = -a.r;
	    a.y = 0;
	    bound(a);
	    if (n > 1) {
	      b = nodes[1];
	      b.x = b.r;
	      b.y = 0;
	      bound(b);
	      if (n > 2) {
	        c = nodes[2];
	        d3_layout_packPlace(a, b, c);
	        bound(c);
	        d3_layout_packInsert(a, c);
	        a._pack_prev = c;
	        d3_layout_packInsert(c, b);
	        b = a._pack_next;
	        for (i = 3; i < n; i++) {
	          d3_layout_packPlace(a, b, c = nodes[i]);
	          var isect = 0, s1 = 1, s2 = 1;
	          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {
	            if (d3_layout_packIntersects(j, c)) {
	              isect = 1;
	              break;
	            }
	          }
	          if (isect == 1) {
	            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {
	              if (d3_layout_packIntersects(k, c)) {
	                break;
	              }
	            }
	          }
	          if (isect) {
	            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);
	            i--;
	          } else {
	            d3_layout_packInsert(a, c);
	            b = c;
	            bound(c);
	          }
	        }
	      }
	    }
	    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;
	    for (i = 0; i < n; i++) {
	      c = nodes[i];
	      c.x -= cx;
	      c.y -= cy;
	      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));
	    }
	    node.r = cr;
	    nodes.forEach(d3_layout_packUnlink);
	  }
	  function d3_layout_packLink(node) {
	    node._pack_next = node._pack_prev = node;
	  }
	  function d3_layout_packUnlink(node) {
	    delete node._pack_next;
	    delete node._pack_prev;
	  }
	  function d3_layout_packTransform(node, x, y, k) {
	    var children = node.children;
	    node.x = x += k * node.x;
	    node.y = y += k * node.y;
	    node.r *= k;
	    if (children) {
	      var i = -1, n = children.length;
	      while (++i < n) d3_layout_packTransform(children[i], x, y, k);
	    }
	  }
	  function d3_layout_packPlace(a, b, c) {
	    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;
	    if (db && (dx || dy)) {
	      var da = b.r + c.r, dc = dx * dx + dy * dy;
	      da *= da;
	      db *= db;
	      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);
	      c.x = a.x + x * dx + y * dy;
	      c.y = a.y + x * dy - y * dx;
	    } else {
	      c.x = a.x + db;
	      c.y = a.y;
	    }
	  }
	  d3.layout.tree = function() {
	    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;
	    function tree(d, i) {
	      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);
	      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;
	      d3_layout_hierarchyVisitBefore(root1, secondWalk);
	      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {
	        var left = root0, right = root0, bottom = root0;
	        d3_layout_hierarchyVisitBefore(root0, function(node) {
	          if (node.x < left.x) left = node;
	          if (node.x > right.x) right = node;
	          if (node.depth > bottom.depth) bottom = node;
	        });
	        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);
	        d3_layout_hierarchyVisitBefore(root0, function(node) {
	          node.x = (node.x + tx) * kx;
	          node.y = node.depth * ky;
	        });
	      }
	      return nodes;
	    }
	    function wrapTree(root0) {
	      var root1 = {
	        A: null,
	        children: [ root0 ]
	      }, queue = [ root1 ], node1;
	      while ((node1 = queue.pop()) != null) {
	        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {
	          queue.push((children[i] = child = {
	            _: children[i],
	            parent: node1,
	            children: (child = children[i].children) && child.slice() || [],
	            A: null,
	            a: null,
	            z: 0,
	            m: 0,
	            c: 0,
	            s: 0,
	            t: null,
	            i: i
	          }).a = child);
	        }
	      }
	      return root1.children[0];
	    }
	    function firstWalk(v) {
	      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;
	      if (children.length) {
	        d3_layout_treeShift(v);
	        var midpoint = (children[0].z + children[children.length - 1].z) / 2;
	        if (w) {
	          v.z = w.z + separation(v._, w._);
	          v.m = v.z - midpoint;
	        } else {
	          v.z = midpoint;
	        }
	      } else if (w) {
	        v.z = w.z + separation(v._, w._);
	      }
	      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);
	    }
	    function secondWalk(v) {
	      v._.x = v.z + v.parent.m;
	      v.m += v.parent.m;
	    }
	    function apportion(v, w, ancestor) {
	      if (w) {
	        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;
	        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {
	          vom = d3_layout_treeLeft(vom);
	          vop = d3_layout_treeRight(vop);
	          vop.a = v;
	          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);
	          if (shift > 0) {
	            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);
	            sip += shift;
	            sop += shift;
	          }
	          sim += vim.m;
	          sip += vip.m;
	          som += vom.m;
	          sop += vop.m;
	        }
	        if (vim && !d3_layout_treeRight(vop)) {
	          vop.t = vim;
	          vop.m += sim - sop;
	        }
	        if (vip && !d3_layout_treeLeft(vom)) {
	          vom.t = vip;
	          vom.m += sip - som;
	          ancestor = v;
	        }
	      }
	      return ancestor;
	    }
	    function sizeNode(node) {
	      node.x *= size[0];
	      node.y = node.depth * size[1];
	    }
	    tree.separation = function(x) {
	      if (!arguments.length) return separation;
	      separation = x;
	      return tree;
	    };
	    tree.size = function(x) {
	      if (!arguments.length) return nodeSize ? null : size;
	      nodeSize = (size = x) == null ? sizeNode : null;
	      return tree;
	    };
	    tree.nodeSize = function(x) {
	      if (!arguments.length) return nodeSize ? size : null;
	      nodeSize = (size = x) == null ? null : sizeNode;
	      return tree;
	    };
	    return d3_layout_hierarchyRebind(tree, hierarchy);
	  };
	  function d3_layout_treeSeparation(a, b) {
	    return a.parent == b.parent ? 1 : 2;
	  }
	  function d3_layout_treeLeft(v) {
	    var children = v.children;
	    return children.length ? children[0] : v.t;
	  }
	  function d3_layout_treeRight(v) {
	    var children = v.children, n;
	    return (n = children.length) ? children[n - 1] : v.t;
	  }
	  function d3_layout_treeMove(wm, wp, shift) {
	    var change = shift / (wp.i - wm.i);
	    wp.c -= change;
	    wp.s += shift;
	    wm.c += change;
	    wp.z += shift;
	    wp.m += shift;
	  }
	  function d3_layout_treeShift(v) {
	    var shift = 0, change = 0, children = v.children, i = children.length, w;
	    while (--i >= 0) {
	      w = children[i];
	      w.z += shift;
	      w.m += shift;
	      shift += w.s + (change += w.c);
	    }
	  }
	  function d3_layout_treeAncestor(vim, v, ancestor) {
	    return vim.a.parent === v.parent ? vim.a : ancestor;
	  }
	  d3.layout.cluster = function() {
	    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;
	    function cluster(d, i) {
	      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;
	      d3_layout_hierarchyVisitAfter(root, function(node) {
	        var children = node.children;
	        if (children && children.length) {
	          node.x = d3_layout_clusterX(children);
	          node.y = d3_layout_clusterY(children);
	        } else {
	          node.x = previousNode ? x += separation(node, previousNode) : 0;
	          node.y = 0;
	          previousNode = node;
	        }
	      });
	      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;
	      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {
	        node.x = (node.x - root.x) * size[0];
	        node.y = (root.y - node.y) * size[1];
	      } : function(node) {
	        node.x = (node.x - x0) / (x1 - x0) * size[0];
	        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];
	      });
	      return nodes;
	    }
	    cluster.separation = function(x) {
	      if (!arguments.length) return separation;
	      separation = x;
	      return cluster;
	    };
	    cluster.size = function(x) {
	      if (!arguments.length) return nodeSize ? null : size;
	      nodeSize = (size = x) == null;
	      return cluster;
	    };
	    cluster.nodeSize = function(x) {
	      if (!arguments.length) return nodeSize ? size : null;
	      nodeSize = (size = x) != null;
	      return cluster;
	    };
	    return d3_layout_hierarchyRebind(cluster, hierarchy);
	  };
	  function d3_layout_clusterY(children) {
	    return 1 + d3.max(children, function(child) {
	      return child.y;
	    });
	  }
	  function d3_layout_clusterX(children) {
	    return children.reduce(function(x, child) {
	      return x + child.x;
	    }, 0) / children.length;
	  }
	  function d3_layout_clusterLeft(node) {
	    var children = node.children;
	    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;
	  }
	  function d3_layout_clusterRight(node) {
	    var children = node.children, n;
	    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;
	  }
	  d3.layout.treemap = function() {
	    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = "squarify", ratio = .5 * (1 + Math.sqrt(5));
	    function scale(children, k) {
	      var i = -1, n = children.length, child, area;
	      while (++i < n) {
	        area = (child = children[i]).value * (k < 0 ? 0 : k);
	        child.area = isNaN(area) || area <= 0 ? 0 : area;
	      }
	    }
	    function squarify(node) {
	      var children = node.children;
	      if (children && children.length) {
	        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === "slice" ? rect.dx : mode === "dice" ? rect.dy : mode === "slice-dice" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;
	        scale(remaining, rect.dx * rect.dy / node.value);
	        row.area = 0;
	        while ((n = remaining.length) > 0) {
	          row.push(child = remaining[n - 1]);
	          row.area += child.area;
	          if (mode !== "squarify" || (score = worst(row, u)) <= best) {
	            remaining.pop();
	            best = score;
	          } else {
	            row.area -= row.pop().area;
	            position(row, u, rect, false);
	            u = Math.min(rect.dx, rect.dy);
	            row.length = row.area = 0;
	            best = Infinity;
	          }
	        }
	        if (row.length) {
	          position(row, u, rect, true);
	          row.length = row.area = 0;
	        }
	        children.forEach(squarify);
	      }
	    }
	    function stickify(node) {
	      var children = node.children;
	      if (children && children.length) {
	        var rect = pad(node), remaining = children.slice(), child, row = [];
	        scale(remaining, rect.dx * rect.dy / node.value);
	        row.area = 0;
	        while (child = remaining.pop()) {
	          row.push(child);
	          row.area += child.area;
	          if (child.z != null) {
	            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);
	            row.length = row.area = 0;
	          }
	        }
	        children.forEach(stickify);
	      }
	    }
	    function worst(row, u) {
	      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;
	      while (++i < n) {
	        if (!(r = row[i].area)) continue;
	        if (r < rmin) rmin = r;
	        if (r > rmax) rmax = r;
	      }
	      s *= s;
	      u *= u;
	      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;
	    }
	    function position(row, u, rect, flush) {
	      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;
	      if (u == rect.dx) {
	        if (flush || v > rect.dy) v = rect.dy;
	        while (++i < n) {
	          o = row[i];
	          o.x = x;
	          o.y = y;
	          o.dy = v;
	          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);
	        }
	        o.z = true;
	        o.dx += rect.x + rect.dx - x;
	        rect.y += v;
	        rect.dy -= v;
	      } else {
	        if (flush || v > rect.dx) v = rect.dx;
	        while (++i < n) {
	          o = row[i];
	          o.x = x;
	          o.y = y;
	          o.dx = v;
	          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);
	        }
	        o.z = false;
	        o.dy += rect.y + rect.dy - y;
	        rect.x += v;
	        rect.dx -= v;
	      }
	    }
	    function treemap(d) {
	      var nodes = stickies || hierarchy(d), root = nodes[0];
	      root.x = root.y = 0;
	      if (root.value) root.dx = size[0], root.dy = size[1]; else root.dx = root.dy = 0;
	      if (stickies) hierarchy.revalue(root);
	      scale([ root ], root.dx * root.dy / root.value);
	      (stickies ? stickify : squarify)(root);
	      if (sticky) stickies = nodes;
	      return nodes;
	    }
	    treemap.size = function(x) {
	      if (!arguments.length) return size;
	      size = x;
	      return treemap;
	    };
	    treemap.padding = function(x) {
	      if (!arguments.length) return padding;
	      function padFunction(node) {
	        var p = x.call(treemap, node, node.depth);
	        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === "number" ? [ p, p, p, p ] : p);
	      }
	      function padConstant(node) {
	        return d3_layout_treemapPad(node, x);
	      }
	      var type;
	      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === "function" ? padFunction : type === "number" ? (x = [ x, x, x, x ], 
	      padConstant) : padConstant;
	      return treemap;
	    };
	    treemap.round = function(x) {
	      if (!arguments.length) return round != Number;
	      round = x ? Math.round : Number;
	      return treemap;
	    };
	    treemap.sticky = function(x) {
	      if (!arguments.length) return sticky;
	      sticky = x;
	      stickies = null;
	      return treemap;
	    };
	    treemap.ratio = function(x) {
	      if (!arguments.length) return ratio;
	      ratio = x;
	      return treemap;
	    };
	    treemap.mode = function(x) {
	      if (!arguments.length) return mode;
	      mode = x + "";
	      return treemap;
	    };
	    return d3_layout_hierarchyRebind(treemap, hierarchy);
	  };
	  function d3_layout_treemapPadNull(node) {
	    return {
	      x: node.x,
	      y: node.y,
	      dx: node.dx,
	      dy: node.dy
	    };
	  }
	  function d3_layout_treemapPad(node, padding) {
	    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];
	    if (dx < 0) {
	      x += dx / 2;
	      dx = 0;
	    }
	    if (dy < 0) {
	      y += dy / 2;
	      dy = 0;
	    }
	    return {
	      x: x,
	      y: y,
	      dx: dx,
	      dy: dy
	    };
	  }
	  d3.random = {
	    normal: function(µ, σ) {
	      var n = arguments.length;
	      if (n < 2) σ = 1;
	      if (n < 1) µ = 0;
	      return function() {
	        var x, y, r;
	        do {
	          x = Math.random() * 2 - 1;
	          y = Math.random() * 2 - 1;
	          r = x * x + y * y;
	        } while (!r || r > 1);
	        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);
	      };
	    },
	    logNormal: function() {
	      var random = d3.random.normal.apply(d3, arguments);
	      return function() {
	        return Math.exp(random());
	      };
	    },
	    bates: function(m) {
	      var random = d3.random.irwinHall(m);
	      return function() {
	        return random() / m;
	      };
	    },
	    irwinHall: function(m) {
	      return function() {
	        for (var s = 0, j = 0; j < m; j++) s += Math.random();
	        return s;
	      };
	    }
	  };
	  d3.scale = {};
	  function d3_scaleExtent(domain) {
	    var start = domain[0], stop = domain[domain.length - 1];
	    return start < stop ? [ start, stop ] : [ stop, start ];
	  }
	  function d3_scaleRange(scale) {
	    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());
	  }
	  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {
	    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);
	    return function(x) {
	      return i(u(x));
	    };
	  }
	  function d3_scale_nice(domain, nice) {
	    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;
	    if (x1 < x0) {
	      dx = i0, i0 = i1, i1 = dx;
	      dx = x0, x0 = x1, x1 = dx;
	    }
	    domain[i0] = nice.floor(x0);
	    domain[i1] = nice.ceil(x1);
	    return domain;
	  }
	  function d3_scale_niceStep(step) {
	    return step ? {
	      floor: function(x) {
	        return Math.floor(x / step) * step;
	      },
	      ceil: function(x) {
	        return Math.ceil(x / step) * step;
	      }
	    } : d3_scale_niceIdentity;
	  }
	  var d3_scale_niceIdentity = {
	    floor: d3_identity,
	    ceil: d3_identity
	  };
	  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {
	    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;
	    if (domain[k] < domain[0]) {
	      domain = domain.slice().reverse();
	      range = range.slice().reverse();
	    }
	    while (++j <= k) {
	      u.push(uninterpolate(domain[j - 1], domain[j]));
	      i.push(interpolate(range[j - 1], range[j]));
	    }
	    return function(x) {
	      var j = d3.bisect(domain, x, 1, k) - 1;
	      return i[j](u[j](x));
	    };
	  }
	  d3.scale.linear = function() {
	    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);
	  };
	  function d3_scale_linear(domain, range, interpolate, clamp) {
	    var output, input;
	    function rescale() {
	      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;
	      output = linear(domain, range, uninterpolate, interpolate);
	      input = linear(range, domain, uninterpolate, d3_interpolate);
	      return scale;
	    }
	    function scale(x) {
	      return output(x);
	    }
	    scale.invert = function(y) {
	      return input(y);
	    };
	    scale.domain = function(x) {
	      if (!arguments.length) return domain;
	      domain = x.map(Number);
	      return rescale();
	    };
	    scale.range = function(x) {
	      if (!arguments.length) return range;
	      range = x;
	      return rescale();
	    };
	    scale.rangeRound = function(x) {
	      return scale.range(x).interpolate(d3_interpolateRound);
	    };
	    scale.clamp = function(x) {
	      if (!arguments.length) return clamp;
	      clamp = x;
	      return rescale();
	    };
	    scale.interpolate = function(x) {
	      if (!arguments.length) return interpolate;
	      interpolate = x;
	      return rescale();
	    };
	    scale.ticks = function(m) {
	      return d3_scale_linearTicks(domain, m);
	    };
	    scale.tickFormat = function(m, format) {
	      return d3_scale_linearTickFormat(domain, m, format);
	    };
	    scale.nice = function(m) {
	      d3_scale_linearNice(domain, m);
	      return rescale();
	    };
	    scale.copy = function() {
	      return d3_scale_linear(domain, range, interpolate, clamp);
	    };
	    return rescale();
	  }
	  function d3_scale_linearRebind(scale, linear) {
	    return d3.rebind(scale, linear, "range", "rangeRound", "interpolate", "clamp");
	  }
	  function d3_scale_linearNice(domain, m) {
	    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));
	    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));
	    return domain;
	  }
	  function d3_scale_linearTickRange(domain, m) {
	    if (m == null) m = 10;
	    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;
	    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;
	    extent[0] = Math.ceil(extent[0] / step) * step;
	    extent[1] = Math.floor(extent[1] / step) * step + step * .5;
	    extent[2] = step;
	    return extent;
	  }
	  function d3_scale_linearTicks(domain, m) {
	    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));
	  }
	  function d3_scale_linearTickFormat(domain, m, format) {
	    var range = d3_scale_linearTickRange(domain, m);
	    if (format) {
	      var match = d3_format_re.exec(format);
	      match.shift();
	      if (match[8] === "s") {
	        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));
	        if (!match[7]) match[7] = "." + d3_scale_linearPrecision(prefix.scale(range[2]));
	        match[8] = "f";
	        format = d3.format(match.join(""));
	        return function(d) {
	          return format(prefix.scale(d)) + prefix.symbol;
	        };
	      }
	      if (!match[7]) match[7] = "." + d3_scale_linearFormatPrecision(match[8], range);
	      format = match.join("");
	    } else {
	      format = ",." + d3_scale_linearPrecision(range[2]) + "f";
	    }
	    return d3.format(format);
	  }
	  var d3_scale_linearFormatSignificant = {
	    s: 1,
	    g: 1,
	    p: 1,
	    r: 1,
	    e: 1
	  };
	  function d3_scale_linearPrecision(value) {
	    return -Math.floor(Math.log(value) / Math.LN10 + .01);
	  }
	  function d3_scale_linearFormatPrecision(type, range) {
	    var p = d3_scale_linearPrecision(range[2]);
	    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== "e") : p - (type === "%") * 2;
	  }
	  d3.scale.log = function() {
	    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);
	  };
	  function d3_scale_log(linear, base, positive, domain) {
	    function log(x) {
	      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);
	    }
	    function pow(x) {
	      return positive ? Math.pow(base, x) : -Math.pow(base, -x);
	    }
	    function scale(x) {
	      return linear(log(x));
	    }
	    scale.invert = function(x) {
	      return pow(linear.invert(x));
	    };
	    scale.domain = function(x) {
	      if (!arguments.length) return domain;
	      positive = x[0] >= 0;
	      linear.domain((domain = x.map(Number)).map(log));
	      return scale;
	    };
	    scale.base = function(_) {
	      if (!arguments.length) return base;
	      base = +_;
	      linear.domain(domain.map(log));
	      return scale;
	    };
	    scale.nice = function() {
	      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);
	      linear.domain(niced);
	      domain = niced.map(pow);
	      return scale;
	    };
	    scale.ticks = function() {
	      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;
	      if (isFinite(j - i)) {
	        if (positive) {
	          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);
	          ticks.push(pow(i));
	        } else {
	          ticks.push(pow(i));
	          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);
	        }
	        for (i = 0; ticks[i] < u; i++) {}
	        for (j = ticks.length; ticks[j - 1] > v; j--) {}
	        ticks = ticks.slice(i, j);
	      }
	      return ticks;
	    };
	    scale.tickFormat = function(n, format) {
	      if (!arguments.length) return d3_scale_logFormat;
	      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== "function") format = d3.format(format);
	      var k = Math.max(1, base * n / scale.ticks().length);
	      return function(d) {
	        var i = d / pow(Math.round(log(d)));
	        if (i * base < base - .5) i *= base;
	        return i <= k ? format(d) : "";
	      };
	    };
	    scale.copy = function() {
	      return d3_scale_log(linear.copy(), base, positive, domain);
	    };
	    return d3_scale_linearRebind(scale, linear);
	  }
	  var d3_scale_logFormat = d3.format(".0e"), d3_scale_logNiceNegative = {
	    floor: function(x) {
	      return -Math.ceil(-x);
	    },
	    ceil: function(x) {
	      return -Math.floor(-x);
	    }
	  };
	  d3.scale.pow = function() {
	    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);
	  };
	  function d3_scale_pow(linear, exponent, domain) {
	    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);
	    function scale(x) {
	      return linear(powp(x));
	    }
	    scale.invert = function(x) {
	      return powb(linear.invert(x));
	    };
	    scale.domain = function(x) {
	      if (!arguments.length) return domain;
	      linear.domain((domain = x.map(Number)).map(powp));
	      return scale;
	    };
	    scale.ticks = function(m) {
	      return d3_scale_linearTicks(domain, m);
	    };
	    scale.tickFormat = function(m, format) {
	      return d3_scale_linearTickFormat(domain, m, format);
	    };
	    scale.nice = function(m) {
	      return scale.domain(d3_scale_linearNice(domain, m));
	    };
	    scale.exponent = function(x) {
	      if (!arguments.length) return exponent;
	      powp = d3_scale_powPow(exponent = x);
	      powb = d3_scale_powPow(1 / exponent);
	      linear.domain(domain.map(powp));
	      return scale;
	    };
	    scale.copy = function() {
	      return d3_scale_pow(linear.copy(), exponent, domain);
	    };
	    return d3_scale_linearRebind(scale, linear);
	  }
	  function d3_scale_powPow(e) {
	    return function(x) {
	      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);
	    };
	  }
	  d3.scale.sqrt = function() {
	    return d3.scale.pow().exponent(.5);
	  };
	  d3.scale.ordinal = function() {
	    return d3_scale_ordinal([], {
	      t: "range",
	      a: [ [] ]
	    });
	  };
	  function d3_scale_ordinal(domain, ranger) {
	    var index, range, rangeBand;
	    function scale(x) {
	      return range[((index.get(x) || (ranger.t === "range" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];
	    }
	    function steps(start, step) {
	      return d3.range(domain.length).map(function(i) {
	        return start + step * i;
	      });
	    }
	    scale.domain = function(x) {
	      if (!arguments.length) return domain;
	      domain = [];
	      index = new d3_Map();
	      var i = -1, n = x.length, xi;
	      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));
	      return scale[ranger.t].apply(scale, ranger.a);
	    };
	    scale.range = function(x) {
	      if (!arguments.length) return range;
	      range = x;
	      rangeBand = 0;
	      ranger = {
	        t: "range",
	        a: arguments
	      };
	      return scale;
	    };
	    scale.rangePoints = function(x, padding) {
	      if (arguments.length < 2) padding = 0;
	      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, 
	      0) : (stop - start) / (domain.length - 1 + padding);
	      range = steps(start + step * padding / 2, step);
	      rangeBand = 0;
	      ranger = {
	        t: "rangePoints",
	        a: arguments
	      };
	      return scale;
	    };
	    scale.rangeRoundPoints = function(x, padding) {
	      if (arguments.length < 2) padding = 0;
	      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), 
	      0) : (stop - start) / (domain.length - 1 + padding) | 0;
	      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);
	      rangeBand = 0;
	      ranger = {
	        t: "rangeRoundPoints",
	        a: arguments
	      };
	      return scale;
	    };
	    scale.rangeBands = function(x, padding, outerPadding) {
	      if (arguments.length < 2) padding = 0;
	      if (arguments.length < 3) outerPadding = padding;
	      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);
	      range = steps(start + step * outerPadding, step);
	      if (reverse) range.reverse();
	      rangeBand = step * (1 - padding);
	      ranger = {
	        t: "rangeBands",
	        a: arguments
	      };
	      return scale;
	    };
	    scale.rangeRoundBands = function(x, padding, outerPadding) {
	      if (arguments.length < 2) padding = 0;
	      if (arguments.length < 3) outerPadding = padding;
	      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));
	      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);
	      if (reverse) range.reverse();
	      rangeBand = Math.round(step * (1 - padding));
	      ranger = {
	        t: "rangeRoundBands",
	        a: arguments
	      };
	      return scale;
	    };
	    scale.rangeBand = function() {
	      return rangeBand;
	    };
	    scale.rangeExtent = function() {
	      return d3_scaleExtent(ranger.a[0]);
	    };
	    scale.copy = function() {
	      return d3_scale_ordinal(domain, ranger);
	    };
	    return scale.domain(domain);
	  }
	  d3.scale.category10 = function() {
	    return d3.scale.ordinal().range(d3_category10);
	  };
	  d3.scale.category20 = function() {
	    return d3.scale.ordinal().range(d3_category20);
	  };
	  d3.scale.category20b = function() {
	    return d3.scale.ordinal().range(d3_category20b);
	  };
	  d3.scale.category20c = function() {
	    return d3.scale.ordinal().range(d3_category20c);
	  };
	  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);
	  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);
	  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);
	  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);
	  d3.scale.quantile = function() {
	    return d3_scale_quantile([], []);
	  };
	  function d3_scale_quantile(domain, range) {
	    var thresholds;
	    function rescale() {
	      var k = 0, q = range.length;
	      thresholds = [];
	      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);
	      return scale;
	    }
	    function scale(x) {
	      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];
	    }
	    scale.domain = function(x) {
	      if (!arguments.length) return domain;
	      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);
	      return rescale();
	    };
	    scale.range = function(x) {
	      if (!arguments.length) return range;
	      range = x;
	      return rescale();
	    };
	    scale.quantiles = function() {
	      return thresholds;
	    };
	    scale.invertExtent = function(y) {
	      y = range.indexOf(y);
	      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];
	    };
	    scale.copy = function() {
	      return d3_scale_quantile(domain, range);
	    };
	    return rescale();
	  }
	  d3.scale.quantize = function() {
	    return d3_scale_quantize(0, 1, [ 0, 1 ]);
	  };
	  function d3_scale_quantize(x0, x1, range) {
	    var kx, i;
	    function scale(x) {
	      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];
	    }
	    function rescale() {
	      kx = range.length / (x1 - x0);
	      i = range.length - 1;
	      return scale;
	    }
	    scale.domain = function(x) {
	      if (!arguments.length) return [ x0, x1 ];
	      x0 = +x[0];
	      x1 = +x[x.length - 1];
	      return rescale();
	    };
	    scale.range = function(x) {
	      if (!arguments.length) return range;
	      range = x;
	      return rescale();
	    };
	    scale.invertExtent = function(y) {
	      y = range.indexOf(y);
	      y = y < 0 ? NaN : y / kx + x0;
	      return [ y, y + 1 / kx ];
	    };
	    scale.copy = function() {
	      return d3_scale_quantize(x0, x1, range);
	    };
	    return rescale();
	  }
	  d3.scale.threshold = function() {
	    return d3_scale_threshold([ .5 ], [ 0, 1 ]);
	  };
	  function d3_scale_threshold(domain, range) {
	    function scale(x) {
	      if (x <= x) return range[d3.bisect(domain, x)];
	    }
	    scale.domain = function(_) {
	      if (!arguments.length) return domain;
	      domain = _;
	      return scale;
	    };
	    scale.range = function(_) {
	      if (!arguments.length) return range;
	      range = _;
	      return scale;
	    };
	    scale.invertExtent = function(y) {
	      y = range.indexOf(y);
	      return [ domain[y - 1], domain[y] ];
	    };
	    scale.copy = function() {
	      return d3_scale_threshold(domain, range);
	    };
	    return scale;
	  }
	  d3.scale.identity = function() {
	    return d3_scale_identity([ 0, 1 ]);
	  };
	  function d3_scale_identity(domain) {
	    function identity(x) {
	      return +x;
	    }
	    identity.invert = identity;
	    identity.domain = identity.range = function(x) {
	      if (!arguments.length) return domain;
	      domain = x.map(identity);
	      return identity;
	    };
	    identity.ticks = function(m) {
	      return d3_scale_linearTicks(domain, m);
	    };
	    identity.tickFormat = function(m, format) {
	      return d3_scale_linearTickFormat(domain, m, format);
	    };
	    identity.copy = function() {
	      return d3_scale_identity(domain);
	    };
	    return identity;
	  }
	  d3.svg = {};
	  function d3_zero() {
	    return 0;
	  }
	  d3.svg.arc = function() {
	    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;
	    function arc() {
	      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;
	      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;
	      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : "") + "Z";
	      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];
	      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {
	        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);
	        if (!cw) p1 *= -1;
	        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));
	        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));
	      }
	      if (r1) {
	        x0 = r1 * Math.cos(a0 + p1);
	        y0 = r1 * Math.sin(a0 + p1);
	        x1 = r1 * Math.cos(a1 - p1);
	        y1 = r1 * Math.sin(a1 - p1);
	        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;
	        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {
	          var h1 = (a0 + a1) / 2;
	          x0 = r1 * Math.cos(h1);
	          y0 = r1 * Math.sin(h1);
	          x1 = y1 = null;
	        }
	      } else {
	        x0 = y0 = 0;
	      }
	      if (r0) {
	        x2 = r0 * Math.cos(a1 - p0);
	        y2 = r0 * Math.sin(a1 - p0);
	        x3 = r0 * Math.cos(a0 + p0);
	        y3 = r0 * Math.sin(a0 + p0);
	        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;
	        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {
	          var h0 = (a0 + a1) / 2;
	          x2 = r0 * Math.cos(h0);
	          y2 = r0 * Math.sin(h0);
	          x3 = y3 = null;
	        }
	      } else {
	        x2 = y2 = 0;
	      }
	      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {
	        cr = r0 < r1 ^ cw ? 0 : 1;
	        var rc1 = rc, rc0 = rc;
	        if (da < π) {
	          var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);
	          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));
	          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));
	        }
	        if (x1 != null) {
	          var t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);
	          if (rc === rc1) {
	            path.push("M", t30[0], "A", rc1, ",", rc1, " 0 0,", cr, " ", t30[1], "A", r1, ",", r1, " 0 ", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), ",", cw, " ", t12[1], "A", rc1, ",", rc1, " 0 0,", cr, " ", t12[0]);
	          } else {
	            path.push("M", t30[0], "A", rc1, ",", rc1, " 0 1,", cr, " ", t12[0]);
	          }
	        } else {
	          path.push("M", x0, ",", y0);
	        }
	        if (x3 != null) {
	          var t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);
	          if (rc === rc0) {
	            path.push("L", t21[0], "A", rc0, ",", rc0, " 0 0,", cr, " ", t21[1], "A", r0, ",", r0, " 0 ", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), ",", 1 - cw, " ", t03[1], "A", rc0, ",", rc0, " 0 0,", cr, " ", t03[0]);
	          } else {
	            path.push("L", t21[0], "A", rc0, ",", rc0, " 0 0,", cr, " ", t03[0]);
	          }
	        } else {
	          path.push("L", x2, ",", y2);
	        }
	      } else {
	        path.push("M", x0, ",", y0);
	        if (x1 != null) path.push("A", r1, ",", r1, " 0 ", l1, ",", cw, " ", x1, ",", y1);
	        path.push("L", x2, ",", y2);
	        if (x3 != null) path.push("A", r0, ",", r0, " 0 ", l0, ",", 1 - cw, " ", x3, ",", y3);
	      }
	      path.push("Z");
	      return path.join("");
	    }
	    function circleSegment(r1, cw) {
	      return "M0," + r1 + "A" + r1 + "," + r1 + " 0 1," + cw + " 0," + -r1 + "A" + r1 + "," + r1 + " 0 1," + cw + " 0," + r1;
	    }
	    arc.innerRadius = function(v) {
	      if (!arguments.length) return innerRadius;
	      innerRadius = d3_functor(v);
	      return arc;
	    };
	    arc.outerRadius = function(v) {
	      if (!arguments.length) return outerRadius;
	      outerRadius = d3_functor(v);
	      return arc;
	    };
	    arc.cornerRadius = function(v) {
	      if (!arguments.length) return cornerRadius;
	      cornerRadius = d3_functor(v);
	      return arc;
	    };
	    arc.padRadius = function(v) {
	      if (!arguments.length) return padRadius;
	      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);
	      return arc;
	    };
	    arc.startAngle = function(v) {
	      if (!arguments.length) return startAngle;
	      startAngle = d3_functor(v);
	      return arc;
	    };
	    arc.endAngle = function(v) {
	      if (!arguments.length) return endAngle;
	      endAngle = d3_functor(v);
	      return arc;
	    };
	    arc.padAngle = function(v) {
	      if (!arguments.length) return padAngle;
	      padAngle = d3_functor(v);
	      return arc;
	    };
	    arc.centroid = function() {
	      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;
	      return [ Math.cos(a) * r, Math.sin(a) * r ];
	    };
	    return arc;
	  };
	  var d3_svg_arcAuto = "auto";
	  function d3_svg_arcInnerRadius(d) {
	    return d.innerRadius;
	  }
	  function d3_svg_arcOuterRadius(d) {
	    return d.outerRadius;
	  }
	  function d3_svg_arcStartAngle(d) {
	    return d.startAngle;
	  }
	  function d3_svg_arcEndAngle(d) {
	    return d.endAngle;
	  }
	  function d3_svg_arcPadAngle(d) {
	    return d && d.padAngle;
	  }
	  function d3_svg_arcSweep(x0, y0, x1, y1) {
	    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;
	  }
	  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {
	    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;
	    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;
	    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];
	  }
	  function d3_svg_line(projection) {
	    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;
	    function line(data) {
	      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);
	      function segment() {
	        segments.push("M", interpolate(projection(points), tension));
	      }
	      while (++i < n) {
	        if (defined.call(this, d = data[i], i)) {
	          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);
	        } else if (points.length) {
	          segment();
	          points = [];
	        }
	      }
	      if (points.length) segment();
	      return segments.length ? segments.join("") : null;
	    }
	    line.x = function(_) {
	      if (!arguments.length) return x;
	      x = _;
	      return line;
	    };
	    line.y = function(_) {
	      if (!arguments.length) return y;
	      y = _;
	      return line;
	    };
	    line.defined = function(_) {
	      if (!arguments.length) return defined;
	      defined = _;
	      return line;
	    };
	    line.interpolate = function(_) {
	      if (!arguments.length) return interpolateKey;
	      if (typeof _ === "function") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;
	      return line;
	    };
	    line.tension = function(_) {
	      if (!arguments.length) return tension;
	      tension = _;
	      return line;
	    };
	    return line;
	  }
	  d3.svg.line = function() {
	    return d3_svg_line(d3_identity);
	  };
	  var d3_svg_lineInterpolators = d3.map({
	    linear: d3_svg_lineLinear,
	    "linear-closed": d3_svg_lineLinearClosed,
	    step: d3_svg_lineStep,
	    "step-before": d3_svg_lineStepBefore,
	    "step-after": d3_svg_lineStepAfter,
	    basis: d3_svg_lineBasis,
	    "basis-open": d3_svg_lineBasisOpen,
	    "basis-closed": d3_svg_lineBasisClosed,
	    bundle: d3_svg_lineBundle,
	    cardinal: d3_svg_lineCardinal,
	    "cardinal-open": d3_svg_lineCardinalOpen,
	    "cardinal-closed": d3_svg_lineCardinalClosed,
	    monotone: d3_svg_lineMonotone
	  });
	  d3_svg_lineInterpolators.forEach(function(key, value) {
	    value.key = key;
	    value.closed = /-closed$/.test(key);
	  });
	  function d3_svg_lineLinear(points) {
	    return points.length > 1 ? points.join("L") : points + "Z";
	  }
	  function d3_svg_lineLinearClosed(points) {
	    return points.join("L") + "Z";
	  }
	  function d3_svg_lineStep(points) {
	    var i = 0, n = points.length, p = points[0], path = [ p[0], ",", p[1] ];
	    while (++i < n) path.push("H", (p[0] + (p = points[i])[0]) / 2, "V", p[1]);
	    if (n > 1) path.push("H", p[0]);
	    return path.join("");
	  }
	  function d3_svg_lineStepBefore(points) {
	    var i = 0, n = points.length, p = points[0], path = [ p[0], ",", p[1] ];
	    while (++i < n) path.push("V", (p = points[i])[1], "H", p[0]);
	    return path.join("");
	  }
	  function d3_svg_lineStepAfter(points) {
	    var i = 0, n = points.length, p = points[0], path = [ p[0], ",", p[1] ];
	    while (++i < n) path.push("H", (p = points[i])[0], "V", p[1]);
	    return path.join("");
	  }
	  function d3_svg_lineCardinalOpen(points, tension) {
	    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));
	  }
	  function d3_svg_lineCardinalClosed(points, tension) {
	    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), 
	    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));
	  }
	  function d3_svg_lineCardinal(points, tension) {
	    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));
	  }
	  function d3_svg_lineHermite(points, tangents) {
	    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {
	      return d3_svg_lineLinear(points);
	    }
	    var quad = points.length != tangents.length, path = "", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;
	    if (quad) {
	      path += "Q" + (p[0] - t0[0] * 2 / 3) + "," + (p[1] - t0[1] * 2 / 3) + "," + p[0] + "," + p[1];
	      p0 = points[1];
	      pi = 2;
	    }
	    if (tangents.length > 1) {
	      t = tangents[1];
	      p = points[pi];
	      pi++;
	      path += "C" + (p0[0] + t0[0]) + "," + (p0[1] + t0[1]) + "," + (p[0] - t[0]) + "," + (p[1] - t[1]) + "," + p[0] + "," + p[1];
	      for (var i = 2; i < tangents.length; i++, pi++) {
	        p = points[pi];
	        t = tangents[i];
	        path += "S" + (p[0] - t[0]) + "," + (p[1] - t[1]) + "," + p[0] + "," + p[1];
	      }
	    }
	    if (quad) {
	      var lp = points[pi];
	      path += "Q" + (p[0] + t[0] * 2 / 3) + "," + (p[1] + t[1] * 2 / 3) + "," + lp[0] + "," + lp[1];
	    }
	    return path;
	  }
	  function d3_svg_lineCardinalTangents(points, tension) {
	    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;
	    while (++i < n) {
	      p0 = p1;
	      p1 = p2;
	      p2 = points[i];
	      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);
	    }
	    return tangents;
	  }
	  function d3_svg_lineBasis(points) {
	    if (points.length < 3) return d3_svg_lineLinear(points);
	    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, ",", y0, "L", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];
	    points.push(points[n - 1]);
	    while (++i <= n) {
	      pi = points[i];
	      px.shift();
	      px.push(pi[0]);
	      py.shift();
	      py.push(pi[1]);
	      d3_svg_lineBasisBezier(path, px, py);
	    }
	    points.pop();
	    path.push("L", pi);
	    return path.join("");
	  }
	  function d3_svg_lineBasisOpen(points) {
	    if (points.length < 4) return d3_svg_lineLinear(points);
	    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];
	    while (++i < 3) {
	      pi = points[i];
	      px.push(pi[0]);
	      py.push(pi[1]);
	    }
	    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + "," + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));
	    --i;
	    while (++i < n) {
	      pi = points[i];
	      px.shift();
	      px.push(pi[0]);
	      py.shift();
	      py.push(pi[1]);
	      d3_svg_lineBasisBezier(path, px, py);
	    }
	    return path.join("");
	  }
	  function d3_svg_lineBasisClosed(points) {
	    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];
	    while (++i < 4) {
	      pi = points[i % n];
	      px.push(pi[0]);
	      py.push(pi[1]);
	    }
	    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];
	    --i;
	    while (++i < m) {
	      pi = points[i % n];
	      px.shift();
	      px.push(pi[0]);
	      py.shift();
	      py.push(pi[1]);
	      d3_svg_lineBasisBezier(path, px, py);
	    }
	    return path.join("");
	  }
	  function d3_svg_lineBundle(points, tension) {
	    var n = points.length - 1;
	    if (n) {
	      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;
	      while (++i <= n) {
	        p = points[i];
	        t = i / n;
	        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);
	        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);
	      }
	    }
	    return d3_svg_lineBasis(points);
	  }
	  function d3_svg_lineDot4(a, b) {
	    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];
	  }
	  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];
	  function d3_svg_lineBasisBezier(path, x, y) {
	    path.push("C", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));
	  }
	  function d3_svg_lineSlope(p0, p1) {
	    return (p1[1] - p0[1]) / (p1[0] - p0[0]);
	  }
	  function d3_svg_lineFiniteDifferences(points) {
	    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);
	    while (++i < j) {
	      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;
	    }
	    m[i] = d;
	    return m;
	  }
	  function d3_svg_lineMonotoneTangents(points) {
	    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;
	    while (++i < j) {
	      d = d3_svg_lineSlope(points[i], points[i + 1]);
	      if (abs(d) < ε) {
	        m[i] = m[i + 1] = 0;
	      } else {
	        a = m[i] / d;
	        b = m[i + 1] / d;
	        s = a * a + b * b;
	        if (s > 9) {
	          s = d * 3 / Math.sqrt(s);
	          m[i] = s * a;
	          m[i + 1] = s * b;
	        }
	      }
	    }
	    i = -1;
	    while (++i <= j) {
	      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));
	      tangents.push([ s || 0, m[i] * s || 0 ]);
	    }
	    return tangents;
	  }
	  function d3_svg_lineMonotone(points) {
	    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));
	  }
	  d3.svg.line.radial = function() {
	    var line = d3_svg_line(d3_svg_lineRadial);
	    line.radius = line.x, delete line.x;
	    line.angle = line.y, delete line.y;
	    return line;
	  };
	  function d3_svg_lineRadial(points) {
	    var point, i = -1, n = points.length, r, a;
	    while (++i < n) {
	      point = points[i];
	      r = point[0];
	      a = point[1] - halfπ;
	      point[0] = r * Math.cos(a);
	      point[1] = r * Math.sin(a);
	    }
	    return points;
	  }
	  function d3_svg_area(projection) {
	    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = "L", tension = .7;
	    function area(data) {
	      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {
	        return x;
	      } : d3_functor(x1), fy1 = y0 === y1 ? function() {
	        return y;
	      } : d3_functor(y1), x, y;
	      function segment() {
	        segments.push("M", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), "Z");
	      }
	      while (++i < n) {
	        if (defined.call(this, d = data[i], i)) {
	          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);
	          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);
	        } else if (points0.length) {
	          segment();
	          points0 = [];
	          points1 = [];
	        }
	      }
	      if (points0.length) segment();
	      return segments.length ? segments.join("") : null;
	    }
	    area.x = function(_) {
	      if (!arguments.length) return x1;
	      x0 = x1 = _;
	      return area;
	    };
	    area.x0 = function(_) {
	      if (!arguments.length) return x0;
	      x0 = _;
	      return area;
	    };
	    area.x1 = function(_) {
	      if (!arguments.length) return x1;
	      x1 = _;
	      return area;
	    };
	    area.y = function(_) {
	      if (!arguments.length) return y1;
	      y0 = y1 = _;
	      return area;
	    };
	    area.y0 = function(_) {
	      if (!arguments.length) return y0;
	      y0 = _;
	      return area;
	    };
	    area.y1 = function(_) {
	      if (!arguments.length) return y1;
	      y1 = _;
	      return area;
	    };
	    area.defined = function(_) {
	      if (!arguments.length) return defined;
	      defined = _;
	      return area;
	    };
	    area.interpolate = function(_) {
	      if (!arguments.length) return interpolateKey;
	      if (typeof _ === "function") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;
	      interpolateReverse = interpolate.reverse || interpolate;
	      L = interpolate.closed ? "M" : "L";
	      return area;
	    };
	    area.tension = function(_) {
	      if (!arguments.length) return tension;
	      tension = _;
	      return area;
	    };
	    return area;
	  }
	  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;
	  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;
	  d3.svg.area = function() {
	    return d3_svg_area(d3_identity);
	  };
	  d3.svg.area.radial = function() {
	    var area = d3_svg_area(d3_svg_lineRadial);
	    area.radius = area.x, delete area.x;
	    area.innerRadius = area.x0, delete area.x0;
	    area.outerRadius = area.x1, delete area.x1;
	    area.angle = area.y, delete area.y;
	    area.startAngle = area.y0, delete area.y0;
	    area.endAngle = area.y1, delete area.y1;
	    return area;
	  };
	  d3.svg.chord = function() {
	    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;
	    function chord(d, i) {
	      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);
	      return "M" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + "Z";
	    }
	    function subgroup(self, f, d, i) {
	      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;
	      return {
	        r: r,
	        a0: a0,
	        a1: a1,
	        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],
	        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]
	      };
	    }
	    function equals(a, b) {
	      return a.a0 == b.a0 && a.a1 == b.a1;
	    }
	    function arc(r, p, a) {
	      return "A" + r + "," + r + " 0 " + +(a > π) + ",1 " + p;
	    }
	    function curve(r0, p0, r1, p1) {
	      return "Q 0,0 " + p1;
	    }
	    chord.radius = function(v) {
	      if (!arguments.length) return radius;
	      radius = d3_functor(v);
	      return chord;
	    };
	    chord.source = function(v) {
	      if (!arguments.length) return source;
	      source = d3_functor(v);
	      return chord;
	    };
	    chord.target = function(v) {
	      if (!arguments.length) return target;
	      target = d3_functor(v);
	      return chord;
	    };
	    chord.startAngle = function(v) {
	      if (!arguments.length) return startAngle;
	      startAngle = d3_functor(v);
	      return chord;
	    };
	    chord.endAngle = function(v) {
	      if (!arguments.length) return endAngle;
	      endAngle = d3_functor(v);
	      return chord;
	    };
	    return chord;
	  };
	  function d3_svg_chordRadius(d) {
	    return d.radius;
	  }
	  d3.svg.diagonal = function() {
	    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;
	    function diagonal(d, i) {
	      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {
	        x: p0.x,
	        y: m
	      }, {
	        x: p3.x,
	        y: m
	      }, p3 ];
	      p = p.map(projection);
	      return "M" + p[0] + "C" + p[1] + " " + p[2] + " " + p[3];
	    }
	    diagonal.source = function(x) {
	      if (!arguments.length) return source;
	      source = d3_functor(x);
	      return diagonal;
	    };
	    diagonal.target = function(x) {
	      if (!arguments.length) return target;
	      target = d3_functor(x);
	      return diagonal;
	    };
	    diagonal.projection = function(x) {
	      if (!arguments.length) return projection;
	      projection = x;
	      return diagonal;
	    };
	    return diagonal;
	  };
	  function d3_svg_diagonalProjection(d) {
	    return [ d.x, d.y ];
	  }
	  d3.svg.diagonal.radial = function() {
	    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;
	    diagonal.projection = function(x) {
	      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;
	    };
	    return diagonal;
	  };
	  function d3_svg_diagonalRadialProjection(projection) {
	    return function() {
	      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;
	      return [ r * Math.cos(a), r * Math.sin(a) ];
	    };
	  }
	  d3.svg.symbol = function() {
	    var type = d3_svg_symbolType, size = d3_svg_symbolSize;
	    function symbol(d, i) {
	      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));
	    }
	    symbol.type = function(x) {
	      if (!arguments.length) return type;
	      type = d3_functor(x);
	      return symbol;
	    };
	    symbol.size = function(x) {
	      if (!arguments.length) return size;
	      size = d3_functor(x);
	      return symbol;
	    };
	    return symbol;
	  };
	  function d3_svg_symbolSize() {
	    return 64;
	  }
	  function d3_svg_symbolType() {
	    return "circle";
	  }
	  function d3_svg_symbolCircle(size) {
	    var r = Math.sqrt(size / π);
	    return "M0," + r + "A" + r + "," + r + " 0 1,1 0," + -r + "A" + r + "," + r + " 0 1,1 0," + r + "Z";
	  }
	  var d3_svg_symbols = d3.map({
	    circle: d3_svg_symbolCircle,
	    cross: function(size) {
	      var r = Math.sqrt(size / 5) / 2;
	      return "M" + -3 * r + "," + -r + "H" + -r + "V" + -3 * r + "H" + r + "V" + -r + "H" + 3 * r + "V" + r + "H" + r + "V" + 3 * r + "H" + -r + "V" + r + "H" + -3 * r + "Z";
	    },
	    diamond: function(size) {
	      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;
	      return "M0," + -ry + "L" + rx + ",0" + " 0," + ry + " " + -rx + ",0" + "Z";
	    },
	    square: function(size) {
	      var r = Math.sqrt(size) / 2;
	      return "M" + -r + "," + -r + "L" + r + "," + -r + " " + r + "," + r + " " + -r + "," + r + "Z";
	    },
	    "triangle-down": function(size) {
	      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;
	      return "M0," + ry + "L" + rx + "," + -ry + " " + -rx + "," + -ry + "Z";
	    },
	    "triangle-up": function(size) {
	      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;
	      return "M0," + -ry + "L" + rx + "," + ry + " " + -rx + "," + ry + "Z";
	    }
	  });
	  d3.svg.symbolTypes = d3_svg_symbols.keys();
	  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);
	  d3_selectionPrototype.transition = function(name) {
	    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {
	      time: Date.now(),
	      ease: d3_ease_cubicInOut,
	      delay: 0,
	      duration: 250
	    };
	    for (var j = -1, m = this.length; ++j < m; ) {
	      subgroups.push(subgroup = []);
	      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {
	        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);
	        subgroup.push(node);
	      }
	    }
	    return d3_transition(subgroups, ns, id);
	  };
	  d3_selectionPrototype.interrupt = function(name) {
	    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));
	  };
	  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());
	  function d3_selection_interruptNS(ns) {
	    return function() {
	      var lock, activeId, active;
	      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {
	        active.timer.c = null;
	        active.timer.t = NaN;
	        if (--lock.count) delete lock[activeId]; else delete this[ns];
	        lock.active += .5;
	        active.event && active.event.interrupt.call(this, this.__data__, active.index);
	      }
	    };
	  }
	  function d3_transition(groups, ns, id) {
	    d3_subclass(groups, d3_transitionPrototype);
	    groups.namespace = ns;
	    groups.id = id;
	    return groups;
	  }
	  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;
	  d3_transitionPrototype.call = d3_selectionPrototype.call;
	  d3_transitionPrototype.empty = d3_selectionPrototype.empty;
	  d3_transitionPrototype.node = d3_selectionPrototype.node;
	  d3_transitionPrototype.size = d3_selectionPrototype.size;
	  d3.transition = function(selection, name) {
	    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);
	  };
	  d3.transition.prototype = d3_transitionPrototype;
	  d3_transitionPrototype.select = function(selector) {
	    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;
	    selector = d3_selection_selector(selector);
	    for (var j = -1, m = this.length; ++j < m; ) {
	      subgroups.push(subgroup = []);
	      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {
	        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {
	          if ("__data__" in node) subnode.__data__ = node.__data__;
	          d3_transitionNode(subnode, i, ns, id, node[ns][id]);
	          subgroup.push(subnode);
	        } else {
	          subgroup.push(null);
	        }
	      }
	    }
	    return d3_transition(subgroups, ns, id);
	  };
	  d3_transitionPrototype.selectAll = function(selector) {
	    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;
	    selector = d3_selection_selectorAll(selector);
	    for (var j = -1, m = this.length; ++j < m; ) {
	      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {
	        if (node = group[i]) {
	          transition = node[ns][id];
	          subnodes = selector.call(node, node.__data__, i, j);
	          subgroups.push(subgroup = []);
	          for (var k = -1, o = subnodes.length; ++k < o; ) {
	            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);
	            subgroup.push(subnode);
	          }
	        }
	      }
	    }
	    return d3_transition(subgroups, ns, id);
	  };
	  d3_transitionPrototype.filter = function(filter) {
	    var subgroups = [], subgroup, group, node;
	    if (typeof filter !== "function") filter = d3_selection_filter(filter);
	    for (var j = 0, m = this.length; j < m; j++) {
	      subgroups.push(subgroup = []);
	      for (var group = this[j], i = 0, n = group.length; i < n; i++) {
	        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {
	          subgroup.push(node);
	        }
	      }
	    }
	    return d3_transition(subgroups, this.namespace, this.id);
	  };
	  d3_transitionPrototype.tween = function(name, tween) {
	    var id = this.id, ns = this.namespace;
	    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);
	    return d3_selection_each(this, tween == null ? function(node) {
	      node[ns][id].tween.remove(name);
	    } : function(node) {
	      node[ns][id].tween.set(name, tween);
	    });
	  };
	  function d3_transition_tween(groups, name, value, tween) {
	    var id = groups.id, ns = groups.namespace;
	    return d3_selection_each(groups, typeof value === "function" ? function(node, i, j) {
	      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));
	    } : (value = tween(value), function(node) {
	      node[ns][id].tween.set(name, value);
	    }));
	  }
	  d3_transitionPrototype.attr = function(nameNS, value) {
	    if (arguments.length < 2) {
	      for (value in nameNS) this.attr(value, nameNS[value]);
	      return this;
	    }
	    var interpolate = nameNS == "transform" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);
	    function attrNull() {
	      this.removeAttribute(name);
	    }
	    function attrNullNS() {
	      this.removeAttributeNS(name.space, name.local);
	    }
	    function attrTween(b) {
	      return b == null ? attrNull : (b += "", function() {
	        var a = this.getAttribute(name), i;
	        return a !== b && (i = interpolate(a, b), function(t) {
	          this.setAttribute(name, i(t));
	        });
	      });
	    }
	    function attrTweenNS(b) {
	      return b == null ? attrNullNS : (b += "", function() {
	        var a = this.getAttributeNS(name.space, name.local), i;
	        return a !== b && (i = interpolate(a, b), function(t) {
	          this.setAttributeNS(name.space, name.local, i(t));
	        });
	      });
	    }
	    return d3_transition_tween(this, "attr." + nameNS, value, name.local ? attrTweenNS : attrTween);
	  };
	  d3_transitionPrototype.attrTween = function(nameNS, tween) {
	    var name = d3.ns.qualify(nameNS);
	    function attrTween(d, i) {
	      var f = tween.call(this, d, i, this.getAttribute(name));
	      return f && function(t) {
	        this.setAttribute(name, f(t));
	      };
	    }
	    function attrTweenNS(d, i) {
	      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));
	      return f && function(t) {
	        this.setAttributeNS(name.space, name.local, f(t));
	      };
	    }
	    return this.tween("attr." + nameNS, name.local ? attrTweenNS : attrTween);
	  };
	  d3_transitionPrototype.style = function(name, value, priority) {
	    var n = arguments.length;
	    if (n < 3) {
	      if (typeof name !== "string") {
	        if (n < 2) value = "";
	        for (priority in name) this.style(priority, name[priority], value);
	        return this;
	      }
	      priority = "";
	    }
	    function styleNull() {
	      this.style.removeProperty(name);
	    }
	    function styleString(b) {
	      return b == null ? styleNull : (b += "", function() {
	        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;
	        return a !== b && (i = d3_interpolate(a, b), function(t) {
	          this.style.setProperty(name, i(t), priority);
	        });
	      });
	    }
	    return d3_transition_tween(this, "style." + name, value, styleString);
	  };
	  d3_transitionPrototype.styleTween = function(name, tween, priority) {
	    if (arguments.length < 3) priority = "";
	    function styleTween(d, i) {
	      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));
	      return f && function(t) {
	        this.style.setProperty(name, f(t), priority);
	      };
	    }
	    return this.tween("style." + name, styleTween);
	  };
	  d3_transitionPrototype.text = function(value) {
	    return d3_transition_tween(this, "text", value, d3_transition_text);
	  };
	  function d3_transition_text(b) {
	    if (b == null) b = "";
	    return function() {
	      this.textContent = b;
	    };
	  }
	  d3_transitionPrototype.remove = function() {
	    var ns = this.namespace;
	    return this.each("end.transition", function() {
	      var p;
	      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);
	    });
	  };
	  d3_transitionPrototype.ease = function(value) {
	    var id = this.id, ns = this.namespace;
	    if (arguments.length < 1) return this.node()[ns][id].ease;
	    if (typeof value !== "function") value = d3.ease.apply(d3, arguments);
	    return d3_selection_each(this, function(node) {
	      node[ns][id].ease = value;
	    });
	  };
	  d3_transitionPrototype.delay = function(value) {
	    var id = this.id, ns = this.namespace;
	    if (arguments.length < 1) return this.node()[ns][id].delay;
	    return d3_selection_each(this, typeof value === "function" ? function(node, i, j) {
	      node[ns][id].delay = +value.call(node, node.__data__, i, j);
	    } : (value = +value, function(node) {
	      node[ns][id].delay = value;
	    }));
	  };
	  d3_transitionPrototype.duration = function(value) {
	    var id = this.id, ns = this.namespace;
	    if (arguments.length < 1) return this.node()[ns][id].duration;
	    return d3_selection_each(this, typeof value === "function" ? function(node, i, j) {
	      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));
	    } : (value = Math.max(1, value), function(node) {
	      node[ns][id].duration = value;
	    }));
	  };
	  d3_transitionPrototype.each = function(type, listener) {
	    var id = this.id, ns = this.namespace;
	    if (arguments.length < 2) {
	      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;
	      try {
	        d3_transitionInheritId = id;
	        d3_selection_each(this, function(node, i, j) {
	          d3_transitionInherit = node[ns][id];
	          type.call(node, node.__data__, i, j);
	        });
	      } finally {
	        d3_transitionInherit = inherit;
	        d3_transitionInheritId = inheritId;
	      }
	    } else {
	      d3_selection_each(this, function(node) {
	        var transition = node[ns][id];
	        (transition.event || (transition.event = d3.dispatch("start", "end", "interrupt"))).on(type, listener);
	      });
	    }
	    return this;
	  };
	  d3_transitionPrototype.transition = function() {
	    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;
	    for (var j = 0, m = this.length; j < m; j++) {
	      subgroups.push(subgroup = []);
	      for (var group = this[j], i = 0, n = group.length; i < n; i++) {
	        if (node = group[i]) {
	          transition = node[ns][id0];
	          d3_transitionNode(node, i, ns, id1, {
	            time: transition.time,
	            ease: transition.ease,
	            delay: transition.delay + transition.duration,
	            duration: transition.duration
	          });
	        }
	        subgroup.push(node);
	      }
	    }
	    return d3_transition(subgroups, ns, id1);
	  };
	  function d3_transitionNamespace(name) {
	    return name == null ? "__transition__" : "__transition_" + name + "__";
	  }
	  function d3_transitionNode(node, i, ns, id, inherit) {
	    var lock = node[ns] || (node[ns] = {
	      active: 0,
	      count: 0
	    }), transition = lock[id], time, timer, duration, ease, tweens;
	    function schedule(elapsed) {
	      var delay = transition.delay;
	      timer.t = delay + time;
	      if (delay <= elapsed) return start(elapsed - delay);
	      timer.c = start;
	    }
	    function start(elapsed) {
	      var activeId = lock.active, active = lock[activeId];
	      if (active) {
	        active.timer.c = null;
	        active.timer.t = NaN;
	        --lock.count;
	        delete lock[activeId];
	        active.event && active.event.interrupt.call(node, node.__data__, active.index);
	      }
	      for (var cancelId in lock) {
	        if (+cancelId < id) {
	          var cancel = lock[cancelId];
	          cancel.timer.c = null;
	          cancel.timer.t = NaN;
	          --lock.count;
	          delete lock[cancelId];
	        }
	      }
	      timer.c = tick;
	      d3_timer(function() {
	        if (timer.c && tick(elapsed || 1)) {
	          timer.c = null;
	          timer.t = NaN;
	        }
	        return 1;
	      }, 0, time);
	      lock.active = id;
	      transition.event && transition.event.start.call(node, node.__data__, i);
	      tweens = [];
	      transition.tween.forEach(function(key, value) {
	        if (value = value.call(node, node.__data__, i)) {
	          tweens.push(value);
	        }
	      });
	      ease = transition.ease;
	      duration = transition.duration;
	    }
	    function tick(elapsed) {
	      var t = elapsed / duration, e = ease(t), n = tweens.length;
	      while (n > 0) {
	        tweens[--n].call(node, e);
	      }
	      if (t >= 1) {
	        transition.event && transition.event.end.call(node, node.__data__, i);
	        if (--lock.count) delete lock[id]; else delete node[ns];
	        return 1;
	      }
	    }
	    if (!transition) {
	      time = inherit.time;
	      timer = d3_timer(schedule, 0, time);
	      transition = lock[id] = {
	        tween: new d3_Map(),
	        time: time,
	        timer: timer,
	        delay: inherit.delay,
	        duration: inherit.duration,
	        ease: inherit.ease,
	        index: i
	      };
	      inherit = null;
	      ++lock.count;
	    }
	  }
	  d3.svg.axis = function() {
	    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;
	    function axis(g) {
	      g.each(function() {
	        var g = d3.select(this);
	        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();
	        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(".tick").data(ticks, scale1), tickEnter = tick.enter().insert("g", ".domain").attr("class", "tick").style("opacity", ε), tickExit = d3.transition(tick.exit()).style("opacity", ε).remove(), tickUpdate = d3.transition(tick.order()).style("opacity", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;
	        var range = d3_scaleRange(scale1), path = g.selectAll(".domain").data([ 0 ]), pathUpdate = (path.enter().append("path").attr("class", "domain"), 
	        d3.transition(path));
	        tickEnter.append("line");
	        tickEnter.append("text");
	        var lineEnter = tickEnter.select("line"), lineUpdate = tickUpdate.select("line"), text = tick.select("text").text(tickFormat), textEnter = tickEnter.select("text"), textUpdate = tickUpdate.select("text"), sign = orient === "top" || orient === "left" ? -1 : 1, x1, x2, y1, y2;
	        if (orient === "bottom" || orient === "top") {
	          tickTransform = d3_svg_axisX, x1 = "x", y1 = "y", x2 = "x2", y2 = "y2";
	          text.attr("dy", sign < 0 ? "0em" : ".71em").style("text-anchor", "middle");
	          pathUpdate.attr("d", "M" + range[0] + "," + sign * outerTickSize + "V0H" + range[1] + "V" + sign * outerTickSize);
	        } else {
	          tickTransform = d3_svg_axisY, x1 = "y", y1 = "x", x2 = "y2", y2 = "x2";
	          text.attr("dy", ".32em").style("text-anchor", sign < 0 ? "end" : "start");
	          pathUpdate.attr("d", "M" + sign * outerTickSize + "," + range[0] + "H0V" + range[1] + "H" + sign * outerTickSize);
	        }
	        lineEnter.attr(y2, sign * innerTickSize);
	        textEnter.attr(y1, sign * tickSpacing);
	        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);
	        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);
	        if (scale1.rangeBand) {
	          var x = scale1, dx = x.rangeBand() / 2;
	          scale0 = scale1 = function(d) {
	            return x(d) + dx;
	          };
	        } else if (scale0.rangeBand) {
	          scale0 = scale1;
	        } else {
	          tickExit.call(tickTransform, scale1, scale0);
	        }
	        tickEnter.call(tickTransform, scale0, scale1);
	        tickUpdate.call(tickTransform, scale1, scale1);
	      });
	    }
	    axis.scale = function(x) {
	      if (!arguments.length) return scale;
	      scale = x;
	      return axis;
	    };
	    axis.orient = function(x) {
	      if (!arguments.length) return orient;
	      orient = x in d3_svg_axisOrients ? x + "" : d3_svg_axisDefaultOrient;
	      return axis;
	    };
	    axis.ticks = function() {
	      if (!arguments.length) return tickArguments_;
	      tickArguments_ = d3_array(arguments);
	      return axis;
	    };
	    axis.tickValues = function(x) {
	      if (!arguments.length) return tickValues;
	      tickValues = x;
	      return axis;
	    };
	    axis.tickFormat = function(x) {
	      if (!arguments.length) return tickFormat_;
	      tickFormat_ = x;
	      return axis;
	    };
	    axis.tickSize = function(x) {
	      var n = arguments.length;
	      if (!n) return innerTickSize;
	      innerTickSize = +x;
	      outerTickSize = +arguments[n - 1];
	      return axis;
	    };
	    axis.innerTickSize = function(x) {
	      if (!arguments.length) return innerTickSize;
	      innerTickSize = +x;
	      return axis;
	    };
	    axis.outerTickSize = function(x) {
	      if (!arguments.length) return outerTickSize;
	      outerTickSize = +x;
	      return axis;
	    };
	    axis.tickPadding = function(x) {
	      if (!arguments.length) return tickPadding;
	      tickPadding = +x;
	      return axis;
	    };
	    axis.tickSubdivide = function() {
	      return arguments.length && axis;
	    };
	    return axis;
	  };
	  var d3_svg_axisDefaultOrient = "bottom", d3_svg_axisOrients = {
	    top: 1,
	    right: 1,
	    bottom: 1,
	    left: 1
	  };
	  function d3_svg_axisX(selection, x0, x1) {
	    selection.attr("transform", function(d) {
	      var v0 = x0(d);
	      return "translate(" + (isFinite(v0) ? v0 : x1(d)) + ",0)";
	    });
	  }
	  function d3_svg_axisY(selection, y0, y1) {
	    selection.attr("transform", function(d) {
	      var v0 = y0(d);
	      return "translate(0," + (isFinite(v0) ? v0 : y1(d)) + ")";
	    });
	  }
	  d3.svg.brush = function() {
	    var event = d3_eventDispatch(brush, "brushstart", "brush", "brushend"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];
	    function brush(g) {
	      g.each(function() {
	        var g = d3.select(this).style("pointer-events", "all").style("-webkit-tap-highlight-color", "rgba(0,0,0,0)").on("mousedown.brush", brushstart).on("touchstart.brush", brushstart);
	        var background = g.selectAll(".background").data([ 0 ]);
	        background.enter().append("rect").attr("class", "background").style("visibility", "hidden").style("cursor", "crosshair");
	        g.selectAll(".extent").data([ 0 ]).enter().append("rect").attr("class", "extent").style("cursor", "move");
	        var resize = g.selectAll(".resize").data(resizes, d3_identity);
	        resize.exit().remove();
	        resize.enter().append("g").attr("class", function(d) {
	          return "resize " + d;
	        }).style("cursor", function(d) {
	          return d3_svg_brushCursor[d];
	        }).append("rect").attr("x", function(d) {
	          return /[ew]$/.test(d) ? -3 : null;
	        }).attr("y", function(d) {
	          return /^[ns]/.test(d) ? -3 : null;
	        }).attr("width", 6).attr("height", 6).style("visibility", "hidden");
	        resize.style("display", brush.empty() ? "none" : null);
	        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;
	        if (x) {
	          range = d3_scaleRange(x);
	          backgroundUpdate.attr("x", range[0]).attr("width", range[1] - range[0]);
	          redrawX(gUpdate);
	        }
	        if (y) {
	          range = d3_scaleRange(y);
	          backgroundUpdate.attr("y", range[0]).attr("height", range[1] - range[0]);
	          redrawY(gUpdate);
	        }
	        redraw(gUpdate);
	      });
	    }
	    brush.event = function(g) {
	      g.each(function() {
	        var event_ = event.of(this, arguments), extent1 = {
	          x: xExtent,
	          y: yExtent,
	          i: xExtentDomain,
	          j: yExtentDomain
	        }, extent0 = this.__chart__ || extent1;
	        this.__chart__ = extent1;
	        if (d3_transitionInheritId) {
	          d3.select(this).transition().each("start.brush", function() {
	            xExtentDomain = extent0.i;
	            yExtentDomain = extent0.j;
	            xExtent = extent0.x;
	            yExtent = extent0.y;
	            event_({
	              type: "brushstart"
	            });
	          }).tween("brush:brush", function() {
	            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);
	            xExtentDomain = yExtentDomain = null;
	            return function(t) {
	              xExtent = extent1.x = xi(t);
	              yExtent = extent1.y = yi(t);
	              event_({
	                type: "brush",
	                mode: "resize"
	              });
	            };
	          }).each("end.brush", function() {
	            xExtentDomain = extent1.i;
	            yExtentDomain = extent1.j;
	            event_({
	              type: "brush",
	              mode: "resize"
	            });
	            event_({
	              type: "brushend"
	            });
	          });
	        } else {
	          event_({
	            type: "brushstart"
	          });
	          event_({
	            type: "brush",
	            mode: "resize"
	          });
	          event_({
	            type: "brushend"
	          });
	        }
	      });
	    };
	    function redraw(g) {
	      g.selectAll(".resize").attr("transform", function(d) {
	        return "translate(" + xExtent[+/e$/.test(d)] + "," + yExtent[+/^s/.test(d)] + ")";
	      });
	    }
	    function redrawX(g) {
	      g.select(".extent").attr("x", xExtent[0]);
	      g.selectAll(".extent,.n>rect,.s>rect").attr("width", xExtent[1] - xExtent[0]);
	    }
	    function redrawY(g) {
	      g.select(".extent").attr("y", yExtent[0]);
	      g.selectAll(".extent,.e>rect,.w>rect").attr("height", yExtent[1] - yExtent[0]);
	    }
	    function brushstart() {
	      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed("extent"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;
	      var w = d3.select(d3_window(target)).on("keydown.brush", keydown).on("keyup.brush", keyup);
	      if (d3.event.changedTouches) {
	        w.on("touchmove.brush", brushmove).on("touchend.brush", brushend);
	      } else {
	        w.on("mousemove.brush", brushmove).on("mouseup.brush", brushend);
	      }
	      g.interrupt().selectAll("*").interrupt();
	      if (dragging) {
	        origin[0] = xExtent[0] - origin[0];
	        origin[1] = yExtent[0] - origin[1];
	      } else if (resizing) {
	        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);
	        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];
	        origin[0] = xExtent[ex];
	        origin[1] = yExtent[ey];
	      } else if (d3.event.altKey) center = origin.slice();
	      g.style("pointer-events", "none").selectAll(".resize").style("display", null);
	      d3.select("body").style("cursor", eventTarget.style("cursor"));
	      event_({
	        type: "brushstart"
	      });
	      brushmove();
	      function keydown() {
	        if (d3.event.keyCode == 32) {
	          if (!dragging) {
	            center = null;
	            origin[0] -= xExtent[1];
	            origin[1] -= yExtent[1];
	            dragging = 2;
	          }
	          d3_eventPreventDefault();
	        }
	      }
	      function keyup() {
	        if (d3.event.keyCode == 32 && dragging == 2) {
	          origin[0] += xExtent[1];
	          origin[1] += yExtent[1];
	          dragging = 0;
	          d3_eventPreventDefault();
	        }
	      }
	      function brushmove() {
	        var point = d3.mouse(target), moved = false;
	        if (offset) {
	          point[0] += offset[0];
	          point[1] += offset[1];
	        }
	        if (!dragging) {
	          if (d3.event.altKey) {
	            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];
	            origin[0] = xExtent[+(point[0] < center[0])];
	            origin[1] = yExtent[+(point[1] < center[1])];
	          } else center = null;
	        }
	        if (resizingX && move1(point, x, 0)) {
	          redrawX(g);
	          moved = true;
	        }
	        if (resizingY && move1(point, y, 1)) {
	          redrawY(g);
	          moved = true;
	        }
	        if (moved) {
	          redraw(g);
	          event_({
	            type: "brush",
	            mode: dragging ? "move" : "resize"
	          });
	        }
	      }
	      function move1(point, scale, i) {
	        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;
	        if (dragging) {
	          r0 -= position;
	          r1 -= size + position;
	        }
	        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];
	        if (dragging) {
	          max = (min += position) + size;
	        } else {
	          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));
	          if (position < min) {
	            max = min;
	            min = position;
	          } else {
	            max = position;
	          }
	        }
	        if (extent[0] != min || extent[1] != max) {
	          if (i) yExtentDomain = null; else xExtentDomain = null;
	          extent[0] = min;
	          extent[1] = max;
	          return true;
	        }
	      }
	      function brushend() {
	        brushmove();
	        g.style("pointer-events", "all").selectAll(".resize").style("display", brush.empty() ? "none" : null);
	        d3.select("body").style("cursor", null);
	        w.on("mousemove.brush", null).on("mouseup.brush", null).on("touchmove.brush", null).on("touchend.brush", null).on("keydown.brush", null).on("keyup.brush", null);
	        dragRestore();
	        event_({
	          type: "brushend"
	        });
	      }
	    }
	    brush.x = function(z) {
	      if (!arguments.length) return x;
	      x = z;
	      resizes = d3_svg_brushResizes[!x << 1 | !y];
	      return brush;
	    };
	    brush.y = function(z) {
	      if (!arguments.length) return y;
	      y = z;
	      resizes = d3_svg_brushResizes[!x << 1 | !y];
	      return brush;
	    };
	    brush.clamp = function(z) {
	      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;
	      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;
	      return brush;
	    };
	    brush.extent = function(z) {
	      var x0, x1, y0, y1, t;
	      if (!arguments.length) {
	        if (x) {
	          if (xExtentDomain) {
	            x0 = xExtentDomain[0], x1 = xExtentDomain[1];
	          } else {
	            x0 = xExtent[0], x1 = xExtent[1];
	            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);
	            if (x1 < x0) t = x0, x0 = x1, x1 = t;
	          }
	        }
	        if (y) {
	          if (yExtentDomain) {
	            y0 = yExtentDomain[0], y1 = yExtentDomain[1];
	          } else {
	            y0 = yExtent[0], y1 = yExtent[1];
	            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);
	            if (y1 < y0) t = y0, y0 = y1, y1 = t;
	          }
	        }
	        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];
	      }
	      if (x) {
	        x0 = z[0], x1 = z[1];
	        if (y) x0 = x0[0], x1 = x1[0];
	        xExtentDomain = [ x0, x1 ];
	        if (x.invert) x0 = x(x0), x1 = x(x1);
	        if (x1 < x0) t = x0, x0 = x1, x1 = t;
	        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];
	      }
	      if (y) {
	        y0 = z[0], y1 = z[1];
	        if (x) y0 = y0[1], y1 = y1[1];
	        yExtentDomain = [ y0, y1 ];
	        if (y.invert) y0 = y(y0), y1 = y(y1);
	        if (y1 < y0) t = y0, y0 = y1, y1 = t;
	        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];
	      }
	      return brush;
	    };
	    brush.clear = function() {
	      if (!brush.empty()) {
	        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];
	        xExtentDomain = yExtentDomain = null;
	      }
	      return brush;
	    };
	    brush.empty = function() {
	      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];
	    };
	    return d3.rebind(brush, event, "on");
	  };
	  var d3_svg_brushCursor = {
	    n: "ns-resize",
	    e: "ew-resize",
	    s: "ns-resize",
	    w: "ew-resize",
	    nw: "nwse-resize",
	    ne: "nesw-resize",
	    se: "nwse-resize",
	    sw: "nesw-resize"
	  };
	  var d3_svg_brushResizes = [ [ "n", "e", "s", "w", "nw", "ne", "se", "sw" ], [ "e", "w" ], [ "n", "s" ], [] ];
	  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;
	  var d3_time_formatUtc = d3_time_format.utc;
	  var d3_time_formatIso = d3_time_formatUtc("%Y-%m-%dT%H:%M:%S.%LZ");
	  d3_time_format.iso = Date.prototype.toISOString && +new Date("2000-01-01T00:00:00.000Z") ? d3_time_formatIsoNative : d3_time_formatIso;
	  function d3_time_formatIsoNative(date) {
	    return date.toISOString();
	  }
	  d3_time_formatIsoNative.parse = function(string) {
	    var date = new Date(string);
	    return isNaN(date) ? null : date;
	  };
	  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;
	  d3_time.second = d3_time_interval(function(date) {
	    return new d3_date(Math.floor(date / 1e3) * 1e3);
	  }, function(date, offset) {
	    date.setTime(date.getTime() + Math.floor(offset) * 1e3);
	  }, function(date) {
	    return date.getSeconds();
	  });
	  d3_time.seconds = d3_time.second.range;
	  d3_time.seconds.utc = d3_time.second.utc.range;
	  d3_time.minute = d3_time_interval(function(date) {
	    return new d3_date(Math.floor(date / 6e4) * 6e4);
	  }, function(date, offset) {
	    date.setTime(date.getTime() + Math.floor(offset) * 6e4);
	  }, function(date) {
	    return date.getMinutes();
	  });
	  d3_time.minutes = d3_time.minute.range;
	  d3_time.minutes.utc = d3_time.minute.utc.range;
	  d3_time.hour = d3_time_interval(function(date) {
	    var timezone = date.getTimezoneOffset() / 60;
	    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);
	  }, function(date, offset) {
	    date.setTime(date.getTime() + Math.floor(offset) * 36e5);
	  }, function(date) {
	    return date.getHours();
	  });
	  d3_time.hours = d3_time.hour.range;
	  d3_time.hours.utc = d3_time.hour.utc.range;
	  d3_time.month = d3_time_interval(function(date) {
	    date = d3_time.day(date);
	    date.setDate(1);
	    return date;
	  }, function(date, offset) {
	    date.setMonth(date.getMonth() + offset);
	  }, function(date) {
	    return date.getMonth();
	  });
	  d3_time.months = d3_time.month.range;
	  d3_time.months.utc = d3_time.month.utc.range;
	  function d3_time_scale(linear, methods, format) {
	    function scale(x) {
	      return linear(x);
	    }
	    scale.invert = function(x) {
	      return d3_time_scaleDate(linear.invert(x));
	    };
	    scale.domain = function(x) {
	      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);
	      linear.domain(x);
	      return scale;
	    };
	    function tickMethod(extent, count) {
	      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);
	      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {
	        return d / 31536e6;
	      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];
	    }
	    scale.nice = function(interval, skip) {
	      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === "number" && tickMethod(extent, interval);
	      if (method) interval = method[0], skip = method[1];
	      function skipped(date) {
	        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;
	      }
	      return scale.domain(d3_scale_nice(domain, skip > 1 ? {
	        floor: function(date) {
	          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);
	          return date;
	        },
	        ceil: function(date) {
	          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);
	          return date;
	        }
	      } : interval));
	    };
	    scale.ticks = function(interval, skip) {
	      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === "number" ? tickMethod(extent, interval) : !interval.range && [ {
	        range: interval
	      }, skip ];
	      if (method) interval = method[0], skip = method[1];
	      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);
	    };
	    scale.tickFormat = function() {
	      return format;
	    };
	    scale.copy = function() {
	      return d3_time_scale(linear.copy(), methods, format);
	    };
	    return d3_scale_linearRebind(scale, linear);
	  }
	  function d3_time_scaleDate(t) {
	    return new Date(t);
	  }
	  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];
	  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];
	  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ ".%L", function(d) {
	    return d.getMilliseconds();
	  } ], [ ":%S", function(d) {
	    return d.getSeconds();
	  } ], [ "%I:%M", function(d) {
	    return d.getMinutes();
	  } ], [ "%I %p", function(d) {
	    return d.getHours();
	  } ], [ "%a %d", function(d) {
	    return d.getDay() && d.getDate() != 1;
	  } ], [ "%b %d", function(d) {
	    return d.getDate() != 1;
	  } ], [ "%B", function(d) {
	    return d.getMonth();
	  } ], [ "%Y", d3_true ] ]);
	  var d3_time_scaleMilliseconds = {
	    range: function(start, stop, step) {
	      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);
	    },
	    floor: d3_identity,
	    ceil: d3_identity
	  };
	  d3_time_scaleLocalMethods.year = d3_time.year;
	  d3_time.scale = function() {
	    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);
	  };
	  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {
	    return [ m[0].utc, m[1] ];
	  });
	  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ ".%L", function(d) {
	    return d.getUTCMilliseconds();
	  } ], [ ":%S", function(d) {
	    return d.getUTCSeconds();
	  } ], [ "%I:%M", function(d) {
	    return d.getUTCMinutes();
	  } ], [ "%I %p", function(d) {
	    return d.getUTCHours();
	  } ], [ "%a %d", function(d) {
	    return d.getUTCDay() && d.getUTCDate() != 1;
	  } ], [ "%b %d", function(d) {
	    return d.getUTCDate() != 1;
	  } ], [ "%B", function(d) {
	    return d.getUTCMonth();
	  } ], [ "%Y", d3_true ] ]);
	  d3_time_scaleUtcMethods.year = d3_time.year.utc;
	  d3_time.scale.utc = function() {
	    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);
	  };
	  d3.text = d3_xhrType(function(request) {
	    return request.responseText;
	  });
	  d3.json = function(url, callback) {
	    return d3_xhr(url, "application/json", d3_json, callback);
	  };
	  function d3_json(request) {
	    return JSON.parse(request.responseText);
	  }
	  d3.html = function(url, callback) {
	    return d3_xhr(url, "text/html", d3_html, callback);
	  };
	  function d3_html(request) {
	    var range = d3_document.createRange();
	    range.selectNode(d3_document.body);
	    return range.createContextualFragment(request.responseText);
	  }
	  d3.xml = d3_xhrType(function(request) {
	    return request.responseXML;
	  });
	  if (true) this.d3 = d3, !(__WEBPACK_AMD_DEFINE_FACTORY__ = (d3), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); else if (typeof module === "object" && module.exports) module.exports = d3; else this.d3 = d3;
	}();

/***/ },
/* 223 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var immutable_class_1 = __webpack_require__(193);
	var plywood_1 = __webpack_require__(199);
	var dimension_1 = __webpack_require__(208);
	var measure_1 = __webpack_require__(212);
	var check;
	var SortOn = (function () {
	    function SortOn(parameters) {
	        this.dimension = parameters.dimension;
	        this.measure = parameters.measure;
	    }
	    SortOn.isSortOn = function (candidate) {
	        return immutable_class_1.isInstanceOf(candidate, SortOn);
	    };
	    SortOn.equal = function (s1, s2) {
	        return s1 === s2 || s1.equals(s2);
	    };
	    SortOn.getName = function (s) {
	        return s.toName();
	    };
	    SortOn.getTitle = function (s) {
	        return s.getTitle();
	    };
	    SortOn.fromDimension = function (dimension) {
	        return new SortOn({ dimension: dimension });
	    };
	    SortOn.fromMeasure = function (measure) {
	        return new SortOn({ measure: measure });
	    };
	    SortOn.fromSortAction = function (sortAction, dataCube, fallbackDimension) {
	        if (!sortAction)
	            return SortOn.fromDimension(fallbackDimension);
	        var sortOnName = sortAction.expression.name;
	        var measure = dataCube.getMeasure(sortOnName);
	        if (measure)
	            return SortOn.fromMeasure(measure);
	        return SortOn.fromDimension(fallbackDimension);
	    };
	    SortOn.fromJS = function (parameters) {
	        var value = {};
	        if (parameters.dimension) {
	            value.dimension = dimension_1.Dimension.fromJS(parameters.dimension);
	        }
	        else {
	            value.measure = measure_1.Measure.fromJS(parameters.measure);
	        }
	        return new SortOn(value);
	    };
	    SortOn.prototype.valueOf = function () {
	        return {
	            dimension: this.dimension,
	            measure: this.measure
	        };
	    };
	    SortOn.prototype.toJS = function () {
	        var js = {};
	        if (this.dimension) {
	            js.dimension = this.dimension.toJS();
	        }
	        else {
	            js.measure = this.measure.toJS();
	        }
	        return js;
	    };
	    SortOn.prototype.toJSON = function () {
	        return this.toJS();
	    };
	    SortOn.prototype.toString = function () {
	        return "[SortOn: " + this.toName() + "]";
	    };
	    SortOn.prototype.equals = function (other) {
	        return SortOn.isSortOn(other) &&
	            (this.dimension ? this.dimension.equals(other.dimension) : this.measure.equals(other.measure));
	    };
	    SortOn.prototype.toName = function () {
	        var measure = this.measure;
	        return measure ? measure.name : this.dimension.name;
	    };
	    SortOn.prototype.getTitle = function () {
	        var measure = this.measure;
	        return measure ? measure.title : this.dimension.title;
	    };
	    SortOn.prototype.getExpression = function () {
	        return plywood_1.$(this.toName());
	    };
	    return SortOn;
	}());
	exports.SortOn = SortOn;
	check = SortOn;


/***/ },
/* 224 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var immutable_class_1 = __webpack_require__(193);
	var plywood_1 = __webpack_require__(199);
	var general_1 = __webpack_require__(209);
	var NULL_COLOR = '#666666';
	var NORMAL_COLORS = [
	    '#2D95CA',
	    '#EFB925',
	    '#DA4E99',
	    '#4CC873',
	    '#745CBD',
	    '#EA7136',
	    '#E68EE0',
	    '#218C35',
	    '#B0B510',
	    '#904064'
	];
	function valuesToJS(values) {
	    var valuesJS = {};
	    for (var i = 0; i < NORMAL_COLORS.length; i++) {
	        if (!general_1.hasOwnProperty(values, i))
	            continue;
	        valuesJS[i] = plywood_1.valueToJS(values[i]);
	    }
	    return valuesJS;
	}
	function valueEquals(v1, v2) {
	    if (v1 === v2)
	        return true;
	    if (!v1 !== !v2)
	        return false;
	    if (v1.toISOString && v2.toISOString)
	        return v1.valueOf() === v2.valueOf();
	    if (immutable_class_1.isImmutableClass(v1))
	        return v1.equals(v2);
	    return false;
	}
	function valuesEqual(values1, values2) {
	    if (!Boolean(values1) === Boolean(values2))
	        return false;
	    if (values1 === values2)
	        return true;
	    if (!values1 !== !values2)
	        return false;
	    if (typeof values1 !== typeof values2)
	        return false;
	    for (var i = 0; i < NORMAL_COLORS.length; i++) {
	        var v1 = values1[i];
	        var v2 = values2[i];
	        if (general_1.hasOwnProperty(values1, i) !== general_1.hasOwnProperty(values2, i))
	            return false;
	        if (!valueEquals(v1, v2))
	            return false;
	    }
	    return true;
	}
	function cloneValues(values) {
	    var newValues = {};
	    for (var i = 0; i < NORMAL_COLORS.length; i++) {
	        if (!general_1.hasOwnProperty(values, i))
	            continue;
	        newValues[i] = values[i];
	    }
	    return newValues;
	}
	var check;
	var Colors = (function () {
	    function Colors(parameters) {
	        this.dimension = parameters.dimension;
	        if (!this.dimension)
	            throw new Error('must have a dimension');
	        this.values = parameters.values;
	        this.hasNull = parameters.hasNull;
	        this.limit = parameters.limit;
	        if (!this.values && !this.limit)
	            throw new Error('must have values or limit');
	    }
	    Colors.isColors = function (candidate) {
	        return immutable_class_1.isInstanceOf(candidate, Colors);
	    };
	    Colors.fromLimit = function (dimension, limit) {
	        return new Colors({ dimension: dimension, limit: limit });
	    };
	    Colors.fromValues = function (dimension, values) {
	        var valueLookup = {};
	        var hasNull = false;
	        var n = Math.min(values.length, NORMAL_COLORS.length + 1);
	        var i = 0;
	        var j = 0;
	        while (i < n) {
	            var v = values[i];
	            if (v === null) {
	                hasNull = true;
	            }
	            else {
	                valueLookup[j] = v;
	                j++;
	            }
	            i++;
	        }
	        return new Colors({
	            dimension: dimension,
	            hasNull: hasNull,
	            values: valueLookup
	        });
	    };
	    Colors.fromJS = function (parameters) {
	        var value = {
	            dimension: parameters.dimension,
	            limit: parameters.limit
	        };
	        var valuesJS = parameters.values;
	        if (valuesJS) {
	            var hasNull = Boolean(parameters.hasNull);
	            var values = {};
	            for (var i = 0; i < NORMAL_COLORS.length; i++) {
	                if (!general_1.hasOwnProperty(valuesJS, i))
	                    continue;
	                var vJS = valuesJS[i];
	                if (vJS === null) {
	                    hasNull = true;
	                }
	                else {
	                    values[i] = plywood_1.valueFromJS(vJS);
	                }
	            }
	            value.values = values;
	            value.hasNull = hasNull;
	        }
	        return new Colors(value);
	    };
	    Colors.prototype.valueOf = function () {
	        return {
	            dimension: this.dimension,
	            values: this.values,
	            hasNull: this.hasNull,
	            limit: this.limit
	        };
	    };
	    Colors.prototype.toJS = function () {
	        var js = {
	            dimension: this.dimension
	        };
	        if (this.values)
	            js.values = valuesToJS(this.values);
	        if (this.hasNull)
	            js.hasNull = true;
	        if (this.limit)
	            js.limit = this.limit;
	        return js;
	    };
	    Colors.prototype.toJSON = function () {
	        return this.toJS();
	    };
	    Colors.prototype.toString = function () {
	        return "[Colors: " + this.dimension + "]";
	    };
	    Colors.prototype.equals = function (other) {
	        return Colors.isColors(other) &&
	            valuesEqual(this.values, other.values) &&
	            this.hasNull === other.hasNull &&
	            this.limit === other.limit;
	    };
	    Colors.prototype.numColors = function () {
	        var _a = this, values = _a.values, limit = _a.limit;
	        if (values) {
	            return Object.keys(values).length + Number(this.hasNull);
	        }
	        return limit;
	    };
	    Colors.prototype.toArray = function () {
	        var _a = this, values = _a.values, hasNull = _a.hasNull;
	        if (!values)
	            return null;
	        var vs = [];
	        if (hasNull)
	            vs.push(null);
	        for (var i = 0; i < NORMAL_COLORS.length; i++) {
	            if (!general_1.hasOwnProperty(values, i))
	                continue;
	            vs.push(values[i]);
	        }
	        return vs;
	    };
	    Colors.prototype.toSet = function () {
	        if (!this.values)
	            return null;
	        return plywood_1.Set.fromJS(this.toArray());
	    };
	    Colors.prototype.toHavingFilter = function (segmentName) {
	        var _a = this, dimension = _a.dimension, values = _a.values;
	        if (!segmentName)
	            segmentName = dimension;
	        if (!values)
	            return null;
	        return new plywood_1.FilterAction({
	            expression: plywood_1.$(segmentName).in(this.toSet())
	        });
	    };
	    Colors.prototype.toLimitAction = function () {
	        return new plywood_1.LimitAction({
	            limit: this.numColors()
	        });
	    };
	    Colors.prototype.toggle = function (v) {
	        return this.has(v) ? this.remove(v) : this.add(v);
	    };
	    Colors.prototype.valueIndex = function (v) {
	        var values = this.values;
	        if (!values)
	            return -1;
	        for (var i = 0; i < NORMAL_COLORS.length; i++) {
	            if (!general_1.hasOwnProperty(values, i))
	                continue;
	            if (valueEquals(values[i], v))
	                return i;
	        }
	        return -1;
	    };
	    Colors.prototype.nextIndex = function () {
	        var values = this.values;
	        if (!values)
	            return 0;
	        for (var i = 0; i < NORMAL_COLORS.length; i++) {
	            if (general_1.hasOwnProperty(values, i))
	                continue;
	            return i;
	        }
	        return -1;
	    };
	    Colors.prototype.has = function (v) {
	        if (v == null)
	            return this.hasNull;
	        return this.valueIndex(v) !== -1;
	    };
	    Colors.prototype.add = function (v) {
	        if (this.has(v))
	            return this;
	        var value = this.valueOf();
	        if (v === null) {
	            value.hasNull = true;
	        }
	        else {
	            var idx = this.nextIndex();
	            if (idx === -1)
	                return this;
	            value.values = value.values ? cloneValues(value.values) : {};
	            value.values[idx] = v;
	            delete value.limit;
	        }
	        return new Colors(value);
	    };
	    Colors.prototype.remove = function (v) {
	        if (!this.has(v))
	            return this;
	        var value = this.valueOf();
	        if (v == null) {
	            value.hasNull = false;
	        }
	        else {
	            var idx = this.valueIndex(v);
	            if (idx === -1)
	                return this;
	            value.values = cloneValues(value.values);
	            delete value.values[idx];
	            delete value.limit;
	        }
	        return new Colors(value);
	    };
	    Colors.prototype.getColors = function (valuesToColor) {
	        var _this = this;
	        var _a = this, values = _a.values, limit = _a.limit, hasNull = _a.hasNull;
	        if (values) {
	            return valuesToColor.map(function (value) {
	                if (value === null && hasNull)
	                    return NULL_COLOR;
	                var colorIdx = _this.valueIndex(value);
	                return colorIdx === -1 ? null : NORMAL_COLORS[colorIdx];
	            });
	        }
	        else {
	            var colors = [];
	            var colorIdx = 0;
	            for (var i = 0; i < valuesToColor.length; i++) {
	                if (i < limit) {
	                    var v = valuesToColor[i];
	                    if (v === null) {
	                        colors.push(NULL_COLOR);
	                    }
	                    else {
	                        colors.push(NORMAL_COLORS[colorIdx]);
	                        colorIdx++;
	                    }
	                }
	                else {
	                    colors.push(null);
	                }
	            }
	            return colors;
	        }
	    };
	    return Colors;
	}());
	exports.Colors = Colors;
	check = Colors;


/***/ },
/* 225 */
/***/ function(module, exports) {

	"use strict";
	var Resolve = (function () {
	    function Resolve(score, state, adjustment, message, resolutions) {
	        this.score = Math.max(1, Math.min(10, score));
	        this.state = state;
	        this.adjustment = adjustment;
	        this.message = message;
	        this.resolutions = resolutions;
	    }
	    Resolve.compare = function (r1, r2) {
	        return r2.score - r1.score;
	    };
	    Resolve.automatic = function (score, adjustment) {
	        return new Resolve(score, 'automatic', adjustment, null, null);
	    };
	    Resolve.manual = function (score, message, resolutions) {
	        return new Resolve(score, 'manual', null, message, resolutions);
	    };
	    Resolve.ready = function (score) {
	        return new Resolve(score, 'ready', null, null, null);
	    };
	    Resolve.prototype.toString = function () {
	        return this.state;
	    };
	    Resolve.prototype.valueOf = function () {
	        return this.state;
	    };
	    Resolve.prototype.isReady = function () {
	        return this.state === 'ready';
	    };
	    Resolve.prototype.isAutomatic = function () {
	        return this.state === 'automatic';
	    };
	    Resolve.prototype.isManual = function () {
	        return this.state === 'manual';
	    };
	    Resolve.NEVER = new Resolve(-1, 'never', null, null, null);
	    return Resolve;
	}());
	exports.Resolve = Resolve;
	var Manifest = (function () {
	    function Manifest(name, title, handleCircumstance, measureModeNeed) {
	        if (measureModeNeed === void 0) { measureModeNeed = 'any'; }
	        this.name = name;
	        this.title = title;
	        this.handleCircumstance = handleCircumstance;
	        this.measureModeNeed = measureModeNeed;
	    }
	    return Manifest;
	}());
	exports.Manifest = Manifest;


/***/ },
/* 226 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var immutable_1 = __webpack_require__(210);
	var lz_string_1 = __webpack_require__(227);
	var immutable_class_1 = __webpack_require__(193);
	var chronoshift_1 = __webpack_require__(191);
	var plywood_1 = __webpack_require__(199);
	var general_1 = __webpack_require__(209);
	var filter_1 = __webpack_require__(215);
	var filter_clause_1 = __webpack_require__(214);
	var highlight_1 = __webpack_require__(218);
	var splits_1 = __webpack_require__(217);
	var colors_1 = __webpack_require__(224);
	var manifest_1 = __webpack_require__(225);
	var HASH_VERSION = 2;
	function constrainDimensions(dimensions, dataCube) {
	    return dimensions.filter(function (dimensionName) { return Boolean(dataCube.getDimension(dimensionName)); });
	}
	function constrainMeasures(measures, dataCube) {
	    return measures.filter(function (measureName) { return Boolean(dataCube.getMeasure(measureName)); });
	}
	function addToSetInOrder(order, setToAdd, thing) {
	    return immutable_1.OrderedSet(order.toArray().filter(function (name) { return setToAdd.has(name) || name === thing; }));
	}
	(function (VisStrategy) {
	    VisStrategy[VisStrategy["FairGame"] = 0] = "FairGame";
	    VisStrategy[VisStrategy["UnfairGame"] = 1] = "UnfairGame";
	    VisStrategy[VisStrategy["KeepAlways"] = 2] = "KeepAlways";
	})(exports.VisStrategy || (exports.VisStrategy = {}));
	var VisStrategy = exports.VisStrategy;
	var check;
	var Essence = (function () {
	    function Essence(parameters) {
	        var visualizations = parameters.visualizations, dataCube = parameters.dataCube, visualization = parameters.visualization, timezone = parameters.timezone, filter = parameters.filter, splits = parameters.splits, multiMeasureMode = parameters.multiMeasureMode, singleMeasure = parameters.singleMeasure, selectedMeasures = parameters.selectedMeasures, pinnedDimensions = parameters.pinnedDimensions, colors = parameters.colors, pinnedSort = parameters.pinnedSort, compare = parameters.compare, highlight = parameters.highlight;
	        if (!dataCube)
	            throw new Error('Essence must have a dataCube');
	        timezone = timezone || chronoshift_1.Timezone.UTC;
	        if (!filter) {
	            filter = dataCube.getDefaultFilter();
	        }
	        multiMeasureMode = Boolean(multiMeasureMode);
	        function visibleMeasure(measureName) {
	            return multiMeasureMode ? selectedMeasures.has(measureName) : measureName === singleMeasure;
	        }
	        if (highlight && highlight.measure && !visibleMeasure(highlight.measure)) {
	            highlight = null;
	        }
	        if (visualizations) {
	            if (!visualization) {
	                var visAndResolve = Essence.getBestVisualization(visualizations, dataCube, splits, colors, null);
	                visualization = visAndResolve.visualization;
	            }
	            var visResolve = visualization.handleCircumstance(dataCube, splits, colors, true);
	            if (visResolve.isAutomatic()) {
	                var adjustment = visResolve.adjustment;
	                splits = adjustment.splits;
	                colors = adjustment.colors || null;
	                visResolve = visualization.handleCircumstance(dataCube, splits, colors, true);
	                if (!visResolve.isReady()) {
	                    console.log(visResolve);
	                    throw new Error(visualization.title + ' must be ready after automatic adjustment');
	                }
	            }
	        }
	        this.visualizations = visualizations;
	        this.dataCube = dataCube;
	        this.visualization = visualization;
	        this.dataCube = dataCube;
	        this.timezone = timezone;
	        this.filter = filter;
	        this.splits = splits;
	        this.multiMeasureMode = multiMeasureMode;
	        this.singleMeasure = singleMeasure;
	        this.selectedMeasures = selectedMeasures;
	        this.pinnedDimensions = pinnedDimensions;
	        this.colors = colors;
	        this.pinnedSort = pinnedSort;
	        this.highlight = highlight;
	        this.compare = compare;
	        this.visResolve = visResolve;
	    }
	    Essence.isEssence = function (candidate) {
	        return immutable_class_1.isInstanceOf(candidate, Essence);
	    };
	    Essence.getBestVisualization = function (visualizations, dataCube, splits, colors, currentVisualization) {
	        var visAndResolves = visualizations.map(function (visualization) {
	            return {
	                visualization: visualization,
	                resolve: visualization.handleCircumstance(dataCube, splits, colors, visualization === currentVisualization)
	            };
	        });
	        return visAndResolves.sort(function (vr1, vr2) { return manifest_1.Resolve.compare(vr1.resolve, vr2.resolve); })[0];
	    };
	    Essence.fromHash = function (hash, context) {
	        var parts = hash.split('/');
	        if (parts.length < 3)
	            return null;
	        var visualization = parts.shift();
	        var version = parseInt(parts.shift(), 10);
	        if (version > HASH_VERSION)
	            return null;
	        var jsArray = null;
	        try {
	            jsArray = JSON.parse('[' + lz_string_1.decompressFromBase64(parts.join('/')) + ']');
	        }
	        catch (e) {
	            return null;
	        }
	        if (!Array.isArray(jsArray))
	            return null;
	        if (version === 1) {
	            jsArray.splice(3, 0, false, null);
	        }
	        var jsArrayLength = jsArray.length;
	        if (!(8 <= jsArrayLength && jsArrayLength <= 11))
	            return null;
	        var essence;
	        try {
	            essence = Essence.fromJS({
	                visualization: visualization,
	                timezone: jsArray[0],
	                filter: jsArray[1],
	                splits: jsArray[2],
	                multiMeasureMode: jsArray[3],
	                singleMeasure: jsArray[4],
	                selectedMeasures: jsArray[5],
	                pinnedDimensions: jsArray[6],
	                pinnedSort: jsArray[7],
	                colors: jsArray[8] || null,
	                compare: jsArray[9] || null,
	                highlight: jsArray[10] || null
	            }, context);
	        }
	        catch (e) {
	            return null;
	        }
	        return essence;
	    };
	    Essence.fromDataCube = function (dataCube, context) {
	        var essence = new Essence({
	            dataCube: context.dataCube,
	            visualizations: context.visualizations,
	            visualization: null,
	            timezone: dataCube.getDefaultTimezone(),
	            filter: null,
	            splits: dataCube.getDefaultSplits(),
	            multiMeasureMode: false,
	            singleMeasure: dataCube.getDefaultSortMeasure(),
	            selectedMeasures: dataCube.getDefaultSelectedMeasures(),
	            pinnedDimensions: dataCube.getDefaultPinnedDimensions(),
	            colors: null,
	            pinnedSort: dataCube.getDefaultSortMeasure(),
	            compare: null,
	            highlight: null
	        });
	        return essence.updateSplitsWithFilter();
	    };
	    Essence.fromJS = function (parameters, context) {
	        if (!context)
	            throw new Error('Essence must have context');
	        var dataCube = context.dataCube, visualizations = context.visualizations;
	        var visualizationName = parameters.visualization;
	        if (visualizationName === 'time-series')
	            visualizationName = 'line-chart';
	        var visualization = plywood_1.findByName(visualizations, visualizationName);
	        var timezone = parameters.timezone ? chronoshift_1.Timezone.fromJS(parameters.timezone) : null;
	        var filter = parameters.filter ? filter_1.Filter.fromJS(parameters.filter).constrainToDimensions(dataCube.dimensions, dataCube.timeAttribute) : null;
	        var splits = splits_1.Splits.fromJS(parameters.splits || [], dataCube).constrainToDimensionsAndMeasures(dataCube.dimensions, dataCube.measures);
	        var defaultSortMeasureName = dataCube.getDefaultSortMeasure();
	        var multiMeasureMode = general_1.hasOwnProperty(parameters, 'multiMeasureMode') ? parameters.multiMeasureMode : !general_1.hasOwnProperty(parameters, 'singleMeasure');
	        var singleMeasure = dataCube.getMeasure(parameters.singleMeasure) ? parameters.singleMeasure : defaultSortMeasureName;
	        var selectedMeasures = constrainMeasures(immutable_1.OrderedSet(parameters.selectedMeasures || []), dataCube);
	        var pinnedDimensions = constrainDimensions(immutable_1.OrderedSet(parameters.pinnedDimensions || []), dataCube);
	        var colors = parameters.colors ? colors_1.Colors.fromJS(parameters.colors) : null;
	        var pinnedSort = dataCube.getMeasure(parameters.pinnedSort) ? parameters.pinnedSort : defaultSortMeasureName;
	        var compare = null;
	        var compareJS = parameters.compare;
	        if (compareJS) {
	            compare = filter_1.Filter.fromJS(compareJS).constrainToDimensions(dataCube.dimensions, dataCube.timeAttribute);
	        }
	        var highlight = null;
	        var highlightJS = parameters.highlight;
	        if (highlightJS) {
	            highlight = highlight_1.Highlight.fromJS(highlightJS).constrainToDimensions(dataCube.dimensions, dataCube.timeAttribute);
	        }
	        return new Essence({
	            dataCube: dataCube,
	            visualizations: visualizations,
	            visualization: visualization,
	            timezone: timezone,
	            filter: filter,
	            splits: splits,
	            multiMeasureMode: multiMeasureMode,
	            singleMeasure: singleMeasure,
	            selectedMeasures: selectedMeasures,
	            pinnedDimensions: pinnedDimensions,
	            colors: colors,
	            pinnedSort: pinnedSort,
	            compare: compare,
	            highlight: highlight
	        });
	    };
	    Essence.prototype.valueOf = function () {
	        return {
	            dataCube: this.dataCube,
	            visualizations: this.visualizations,
	            visualization: this.visualization,
	            timezone: this.timezone,
	            filter: this.filter,
	            splits: this.splits,
	            multiMeasureMode: this.multiMeasureMode,
	            singleMeasure: this.singleMeasure,
	            selectedMeasures: this.selectedMeasures,
	            pinnedDimensions: this.pinnedDimensions,
	            colors: this.colors,
	            pinnedSort: this.pinnedSort,
	            compare: this.compare,
	            highlight: this.highlight
	        };
	    };
	    Essence.prototype.toJS = function () {
	        var js = {
	            visualization: this.visualization.name,
	            timezone: this.timezone.toJS(),
	            filter: this.filter.toJS(),
	            splits: this.splits.toJS(),
	            singleMeasure: this.singleMeasure,
	            selectedMeasures: this.selectedMeasures.toArray(),
	            pinnedDimensions: this.pinnedDimensions.toArray()
	        };
	        if (this.multiMeasureMode)
	            js.multiMeasureMode = true;
	        if (this.colors)
	            js.colors = this.colors.toJS();
	        var defaultSortMeasure = this.dataCube.getDefaultSortMeasure();
	        if (this.pinnedSort !== defaultSortMeasure)
	            js.pinnedSort = this.pinnedSort;
	        if (this.compare)
	            js.compare = this.compare.toJS();
	        if (this.highlight)
	            js.highlight = this.highlight.toJS();
	        return js;
	    };
	    Essence.prototype.toJSON = function () {
	        return this.toJS();
	    };
	    Essence.prototype.toString = function () {
	        return "[Essence]";
	    };
	    Essence.prototype.equals = function (other) {
	        return Essence.isEssence(other) &&
	            this.dataCube.equals(other.dataCube) &&
	            this.visualization.name === other.visualization.name &&
	            this.timezone.equals(other.timezone) &&
	            this.filter.equals(other.filter) &&
	            this.splits.equals(other.splits) &&
	            this.multiMeasureMode === other.multiMeasureMode &&
	            this.singleMeasure === other.singleMeasure &&
	            this.selectedMeasures.equals(other.selectedMeasures) &&
	            this.pinnedDimensions.equals(other.pinnedDimensions) &&
	            immutable_class_1.immutableEqual(this.colors, other.colors) &&
	            this.pinnedSort === other.pinnedSort &&
	            immutable_class_1.immutableEqual(this.compare, other.compare) &&
	            immutable_class_1.immutableEqual(this.highlight, other.highlight);
	    };
	    Essence.prototype.toHash = function () {
	        var js = this.toJS();
	        var compressed = [
	            js.timezone,
	            js.filter,
	            js.splits,
	            js.multiMeasureMode,
	            js.singleMeasure,
	            js.selectedMeasures,
	            js.pinnedDimensions,
	            js.pinnedSort
	        ];
	        if (js.colors)
	            compressed[8] = js.colors;
	        if (js.compare)
	            compressed[9] = js.compare;
	        if (js.highlight)
	            compressed[10] = js.highlight;
	        var restJSON = [];
	        for (var i = 0; i < compressed.length; i++) {
	            restJSON.push(JSON.stringify(compressed[i] || null));
	        }
	        return [
	            js.visualization,
	            HASH_VERSION,
	            lz_string_1.compressToBase64(restJSON.join(','))
	        ].join('/');
	    };
	    Essence.prototype.getURL = function (urlPrefix) {
	        return urlPrefix + this.toHash();
	    };
	    Essence.prototype.getTimeAttribute = function () {
	        return this.dataCube.timeAttribute;
	    };
	    Essence.prototype.getTimeDimension = function () {
	        return this.dataCube.getTimeDimension();
	    };
	    Essence.prototype.evaluateSelection = function (selection, timekeeper) {
	        var _a = this, timezone = _a.timezone, dataCube = _a.dataCube;
	        return filter_clause_1.FilterClause.evaluate(selection, timekeeper.now(), dataCube.getMaxTime(timekeeper), timezone);
	    };
	    Essence.prototype.evaluateClause = function (clause, timekeeper) {
	        var _a = this, timezone = _a.timezone, dataCube = _a.dataCube;
	        return clause.evaluate(timekeeper.now(), dataCube.getMaxTime(timekeeper), timezone);
	    };
	    Essence.prototype.getEffectiveFilter = function (timekeeper, highlightId, unfilterDimension) {
	        if (highlightId === void 0) { highlightId = null; }
	        if (unfilterDimension === void 0) { unfilterDimension = null; }
	        var _a = this, dataCube = _a.dataCube, filter = _a.filter, highlight = _a.highlight, timezone = _a.timezone;
	        if (highlight && (highlightId !== highlight.owner))
	            filter = highlight.applyToFilter(filter);
	        if (unfilterDimension)
	            filter = filter.remove(unfilterDimension.expression);
	        return filter.getSpecificFilter(timekeeper.now(), dataCube.getMaxTime(timekeeper), timezone);
	    };
	    Essence.prototype.getTimeSelection = function () {
	        var timeAttribute = this.getTimeAttribute();
	        return this.filter.getSelection(timeAttribute);
	    };
	    Essence.prototype.isFixedMeasureMode = function () {
	        return this.visualization.measureModeNeed !== 'any';
	    };
	    Essence.prototype.getEffectiveMultiMeasureMode = function () {
	        var measureModeNeed = this.visualization.measureModeNeed;
	        if (measureModeNeed !== 'any') {
	            return measureModeNeed === 'multi';
	        }
	        return this.multiMeasureMode;
	    };
	    Essence.prototype.getEffectiveMeasures = function () {
	        if (this.getEffectiveMultiMeasureMode()) {
	            return this.getMeasures();
	        }
	        else {
	            return immutable_1.List([this.dataCube.getMeasure(this.singleMeasure)]);
	        }
	    };
	    Essence.prototype.getMeasures = function () {
	        var dataCube = this.dataCube;
	        return this.selectedMeasures.toList().map(function (measureName) { return dataCube.getMeasure(measureName); });
	    };
	    Essence.prototype.getEffectiveSelectedMeasure = function () {
	        if (this.getEffectiveMultiMeasureMode()) {
	            return this.selectedMeasures;
	        }
	        else {
	            return immutable_1.OrderedSet([this.singleMeasure]);
	        }
	    };
	    Essence.prototype.differentDataCube = function (other) {
	        return this.dataCube !== other.dataCube;
	    };
	    Essence.prototype.differentTimezone = function (other) {
	        return !this.timezone.equals(other.timezone);
	    };
	    Essence.prototype.differentTimezoneMatters = function (other) {
	        return this.splits.timezoneDependant() && this.differentTimezone(other);
	    };
	    Essence.prototype.differentFilter = function (other) {
	        return !this.filter.equals(other.filter);
	    };
	    Essence.prototype.differentSplits = function (other) {
	        return !this.splits.equals(other.splits);
	    };
	    Essence.prototype.differentEffectiveSplits = function (other) {
	        return this.differentSplits(other) || this.differentTimezoneMatters(other);
	    };
	    Essence.prototype.differentColors = function (other) {
	        if (Boolean(this.colors) !== Boolean(other.colors))
	            return true;
	        if (!this.colors)
	            return false;
	        return !this.colors.equals(other.colors);
	    };
	    Essence.prototype.differentSelectedMeasures = function (other) {
	        return !this.selectedMeasures.equals(other.selectedMeasures);
	    };
	    Essence.prototype.differentEffectiveMeasures = function (other) {
	        return !this.getEffectiveSelectedMeasure().equals(other.getEffectiveSelectedMeasure());
	    };
	    Essence.prototype.newSelectedMeasures = function (other) {
	        return !this.selectedMeasures.isSubset(other.selectedMeasures);
	    };
	    Essence.prototype.newEffectiveMeasures = function (other) {
	        return !this.getEffectiveSelectedMeasure().isSubset(other.getEffectiveSelectedMeasure());
	    };
	    Essence.prototype.differentPinnedDimensions = function (other) {
	        return !this.pinnedDimensions.equals(other.pinnedDimensions);
	    };
	    Essence.prototype.differentPinnedSort = function (other) {
	        return this.pinnedSort !== other.pinnedSort;
	    };
	    Essence.prototype.differentCompare = function (other) {
	        if (Boolean(this.compare) !== Boolean(other.compare))
	            return true;
	        return Boolean(this.compare && !this.compare.equals(other.compare));
	    };
	    Essence.prototype.differentHighligh = function (other) {
	        if (Boolean(this.highlight) !== Boolean(other.highlight))
	            return true;
	        return Boolean(this.highlight && !this.highlight.equals(other.highlight));
	    };
	    Essence.prototype.differentEffectiveFilter = function (other, myTimekeeper, otherTimekeeper, highlightId, unfilterDimension) {
	        if (highlightId === void 0) { highlightId = null; }
	        if (unfilterDimension === void 0) { unfilterDimension = null; }
	        var myEffectiveFilter = this.getEffectiveFilter(myTimekeeper, highlightId, unfilterDimension);
	        var otherEffectiveFilter = other.getEffectiveFilter(otherTimekeeper, highlightId, unfilterDimension);
	        return !myEffectiveFilter.equals(otherEffectiveFilter);
	    };
	    Essence.prototype.highlightOn = function (owner, measure) {
	        var highlight = this.highlight;
	        if (!highlight)
	            return false;
	        return highlight.owner === owner && (!measure || highlight.measure === measure);
	    };
	    Essence.prototype.highlightOnDifferentMeasure = function (owner, measure) {
	        var highlight = this.highlight;
	        if (!highlight)
	            return false;
	        return highlight.owner === owner && measure && highlight.measure !== measure;
	    };
	    Essence.prototype.getSingleHighlightSet = function () {
	        var highlight = this.highlight;
	        if (!highlight)
	            return null;
	        return highlight.delta.getSingleClauseSet();
	    };
	    Essence.prototype.getApplyForSort = function (sort) {
	        var sortOn = sort.expression.name;
	        var sortMeasure = this.dataCube.getMeasure(sortOn);
	        if (!sortMeasure)
	            return null;
	        return sortMeasure.toApplyAction();
	    };
	    Essence.prototype.getCommonSort = function () {
	        return this.splits.getCommonSort(this.dataCube.dimensions);
	    };
	    Essence.prototype.updateDataCube = function (newDataCube) {
	        var _a = this, dataCube = _a.dataCube, visualizations = _a.visualizations;
	        if (dataCube.equals(newDataCube))
	            return this;
	        var value = this.valueOf();
	        value.dataCube = newDataCube;
	        value.filter = value.filter.constrainToDimensions(newDataCube.dimensions, newDataCube.timeAttribute, dataCube.timeAttribute);
	        value.splits = value.splits.constrainToDimensionsAndMeasures(newDataCube.dimensions, newDataCube.measures);
	        value.selectedMeasures = constrainMeasures(value.selectedMeasures, newDataCube);
	        if (value.selectedMeasures.size === 0) {
	            value.selectedMeasures = newDataCube.getDefaultSelectedMeasures();
	        }
	        value.pinnedDimensions = constrainDimensions(value.pinnedDimensions, newDataCube);
	        if (value.colors && !newDataCube.getDimension(value.colors.dimension)) {
	            value.colors = null;
	        }
	        if (!newDataCube.getMeasure(value.pinnedSort))
	            value.pinnedSort = newDataCube.getDefaultSortMeasure();
	        if (value.compare) {
	            value.compare = value.compare.constrainToDimensions(newDataCube.dimensions, newDataCube.timeAttribute);
	        }
	        if (value.highlight) {
	            value.highlight = value.highlight.constrainToDimensions(newDataCube.dimensions, newDataCube.timeAttribute);
	        }
	        return new Essence(value);
	    };
	    Essence.prototype.changeFilter = function (filter, removeHighlight) {
	        if (removeHighlight === void 0) { removeHighlight = false; }
	        var value = this.valueOf();
	        value.filter = filter;
	        if (removeHighlight) {
	            value.highlight = null;
	        }
	        var differentAttributes = filter.getDifferentAttributes(this.filter);
	        value.splits = value.splits.removeBucketingFrom(differentAttributes);
	        return (new Essence(value)).updateSplitsWithFilter();
	    };
	    Essence.prototype.changeTimezone = function (newTimezone) {
	        var timezone = this.timezone;
	        if (timezone === newTimezone)
	            return this;
	        var value = this.valueOf();
	        value.timezone = newTimezone;
	        return new Essence(value);
	    };
	    Essence.prototype.changeTimeSelection = function (check) {
	        var filter = this.filter;
	        var timeAttribute = this.getTimeAttribute();
	        return this.changeFilter(filter.setSelection(timeAttribute, check));
	    };
	    Essence.prototype.convertToSpecificFilter = function (timekeeper) {
	        var _a = this, dataCube = _a.dataCube, filter = _a.filter, timezone = _a.timezone;
	        if (!filter.isRelative())
	            return this;
	        return this.changeFilter(filter.getSpecificFilter(timekeeper.now(), dataCube.getMaxTime(timekeeper), timezone));
	    };
	    Essence.prototype.changeSplits = function (splits, strategy) {
	        var _a = this, visualizations = _a.visualizations, dataCube = _a.dataCube, visualization = _a.visualization, visResolve = _a.visResolve, filter = _a.filter, colors = _a.colors;
	        splits = splits.updateWithFilter(filter, dataCube.dimensions);
	        if (visResolve.isManual()) {
	            strategy = VisStrategy.KeepAlways;
	        }
	        if (this.splits.length() > 0 && splits.length() !== 0)
	            strategy = VisStrategy.UnfairGame;
	        if (strategy !== VisStrategy.KeepAlways && strategy !== VisStrategy.UnfairGame) {
	            var visAndResolve = Essence.getBestVisualization(visualizations, dataCube, splits, colors, (strategy === VisStrategy.FairGame ? null : visualization));
	            visualization = visAndResolve.visualization;
	        }
	        var value = this.valueOf();
	        value.splits = splits;
	        value.visualization = visualization;
	        if (value.highlight) {
	            value.filter = value.highlight.applyToFilter(value.filter);
	            value.highlight = null;
	        }
	        return new Essence(value);
	    };
	    Essence.prototype.changeSplit = function (splitCombine, strategy) {
	        return this.changeSplits(splits_1.Splits.fromSplitCombine(splitCombine), strategy);
	    };
	    Essence.prototype.addSplit = function (split, strategy) {
	        var splits = this.splits;
	        return this.changeSplits(splits.addSplit(split), strategy);
	    };
	    Essence.prototype.removeSplit = function (split, strategy) {
	        var splits = this.splits;
	        return this.changeSplits(splits.removeSplit(split), strategy);
	    };
	    Essence.prototype.updateSplitsWithFilter = function () {
	        var value = this.valueOf();
	        var newSplits = value.splits.updateWithFilter(this.filter, this.dataCube.dimensions);
	        if (value.splits === newSplits)
	            return this;
	        value.splits = newSplits;
	        return new Essence(value);
	    };
	    Essence.prototype.changeColors = function (colors) {
	        var value = this.valueOf();
	        value.colors = colors;
	        return new Essence(value);
	    };
	    Essence.prototype.changeVisualization = function (visualization) {
	        var value = this.valueOf();
	        value.visualization = visualization;
	        return new Essence(value);
	    };
	    Essence.prototype.pin = function (dimension) {
	        var value = this.valueOf();
	        value.pinnedDimensions = value.pinnedDimensions.add(dimension.name);
	        return new Essence(value);
	    };
	    Essence.prototype.unpin = function (dimension) {
	        var value = this.valueOf();
	        value.pinnedDimensions = value.pinnedDimensions.remove(dimension.name);
	        return new Essence(value);
	    };
	    Essence.prototype.getPinnedSortMeasure = function () {
	        return this.dataCube.getMeasure(this.pinnedSort);
	    };
	    Essence.prototype.changePinnedSortMeasure = function (measure) {
	        var value = this.valueOf();
	        value.pinnedSort = measure.name;
	        return new Essence(value);
	    };
	    Essence.prototype.toggleMultiMeasureMode = function () {
	        var _a = this, dataCube = _a.dataCube, multiMeasureMode = _a.multiMeasureMode, selectedMeasures = _a.selectedMeasures, singleMeasure = _a.singleMeasure;
	        var value = this.valueOf();
	        value.multiMeasureMode = !multiMeasureMode;
	        if (multiMeasureMode) {
	            if (selectedMeasures.size && !selectedMeasures.has(singleMeasure)) {
	                value.singleMeasure = selectedMeasures.first();
	            }
	        }
	        else {
	            value.selectedMeasures = addToSetInOrder(dataCube.measures.map(function (m) { return m.name; }), value.selectedMeasures, singleMeasure);
	        }
	        return new Essence(value);
	    };
	    Essence.prototype.changeSingleMeasure = function (measure) {
	        if (measure.name === this.singleMeasure)
	            return this;
	        var value = this.valueOf();
	        value.singleMeasure = measure.name;
	        value.splits = value.splits.changeSortIfOnMeasure(this.singleMeasure, measure.name);
	        value.pinnedSort = measure.name;
	        return new Essence(value);
	    };
	    Essence.prototype.toggleSelectedMeasure = function (measure) {
	        var dataCube = this.dataCube;
	        var value = this.valueOf();
	        var selectedMeasures = value.selectedMeasures;
	        var measureName = measure.name;
	        if (selectedMeasures.has(measureName)) {
	            value.selectedMeasures = selectedMeasures.delete(measureName);
	        }
	        else {
	            value.selectedMeasures = addToSetInOrder(dataCube.measures.map(function (m) { return m.name; }), selectedMeasures, measureName);
	        }
	        return new Essence(value);
	    };
	    Essence.prototype.toggleEffectiveMeasure = function (measure) {
	        if (this.getEffectiveMultiMeasureMode()) {
	            return this.toggleSelectedMeasure(measure);
	        }
	        else {
	            return this.changeSingleMeasure(measure);
	        }
	    };
	    Essence.prototype.acceptHighlight = function () {
	        var highlight = this.highlight;
	        if (!highlight)
	            return this;
	        return this.changeFilter(highlight.applyToFilter(this.filter), true);
	    };
	    Essence.prototype.changeHighlight = function (owner, measure, delta) {
	        var highlight = this.highlight;
	        var value;
	        if (highlight && highlight.owner !== owner) {
	            value = this.changeFilter(highlight.applyToFilter(this.filter)).valueOf();
	        }
	        else {
	            value = this.valueOf();
	        }
	        value.highlight = new highlight_1.Highlight({
	            owner: owner,
	            delta: delta,
	            measure: measure
	        });
	        return new Essence(value);
	    };
	    Essence.prototype.dropHighlight = function () {
	        var value = this.valueOf();
	        value.highlight = null;
	        return new Essence(value);
	    };
	    return Essence;
	}());
	exports.Essence = Essence;
	check = Essence;


/***/ },
/* 227 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_RESULT__;// Copyright (c) 2013 Pieroxy <pieroxy@pieroxy.net>
	// This work is free. You can redistribute it and/or modify it
	// under the terms of the WTFPL, Version 2
	// For more information see LICENSE.txt or http://www.wtfpl.net/
	//
	// For more information, the home page:
	// http://pieroxy.net/blog/pages/lz-string/testing.html
	//
	// LZ-based compression algorithm, version 1.4.4
	var LZString = (function() {

	// private property
	var f = String.fromCharCode;
	var keyStrBase64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
	var keyStrUriSafe = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+-$";
	var baseReverseDic = {};

	function getBaseValue(alphabet, character) {
	  if (!baseReverseDic[alphabet]) {
	    baseReverseDic[alphabet] = {};
	    for (var i=0 ; i<alphabet.length ; i++) {
	      baseReverseDic[alphabet][alphabet.charAt(i)] = i;
	    }
	  }
	  return baseReverseDic[alphabet][character];
	}

	var LZString = {
	  compressToBase64 : function (input) {
	    if (input == null) return "";
	    var res = LZString._compress(input, 6, function(a){return keyStrBase64.charAt(a);});
	    switch (res.length % 4) { // To produce valid Base64
	    default: // When could this happen ?
	    case 0 : return res;
	    case 1 : return res+"===";
	    case 2 : return res+"==";
	    case 3 : return res+"=";
	    }
	  },

	  decompressFromBase64 : function (input) {
	    if (input == null) return "";
	    if (input == "") return null;
	    return LZString._decompress(input.length, 32, function(index) { return getBaseValue(keyStrBase64, input.charAt(index)); });
	  },

	  compressToUTF16 : function (input) {
	    if (input == null) return "";
	    return LZString._compress(input, 15, function(a){return f(a+32);}) + " ";
	  },

	  decompressFromUTF16: function (compressed) {
	    if (compressed == null) return "";
	    if (compressed == "") return null;
	    return LZString._decompress(compressed.length, 16384, function(index) { return compressed.charCodeAt(index) - 32; });
	  },

	  //compress into uint8array (UCS-2 big endian format)
	  compressToUint8Array: function (uncompressed) {
	    var compressed = LZString.compress(uncompressed);
	    var buf=new Uint8Array(compressed.length*2); // 2 bytes per character

	    for (var i=0, TotalLen=compressed.length; i<TotalLen; i++) {
	      var current_value = compressed.charCodeAt(i);
	      buf[i*2] = current_value >>> 8;
	      buf[i*2+1] = current_value % 256;
	    }
	    return buf;
	  },

	  //decompress from uint8array (UCS-2 big endian format)
	  decompressFromUint8Array:function (compressed) {
	    if (compressed===null || compressed===undefined){
	        return LZString.decompress(compressed);
	    } else {
	        var buf=new Array(compressed.length/2); // 2 bytes per character
	        for (var i=0, TotalLen=buf.length; i<TotalLen; i++) {
	          buf[i]=compressed[i*2]*256+compressed[i*2+1];
	        }

	        var result = [];
	        buf.forEach(function (c) {
	          result.push(f(c));
	        });
	        return LZString.decompress(result.join(''));

	    }

	  },


	  //compress into a string that is already URI encoded
	  compressToEncodedURIComponent: function (input) {
	    if (input == null) return "";
	    return LZString._compress(input, 6, function(a){return keyStrUriSafe.charAt(a);});
	  },

	  //decompress from an output of compressToEncodedURIComponent
	  decompressFromEncodedURIComponent:function (input) {
	    if (input == null) return "";
	    if (input == "") return null;
	    input = input.replace(/ /g, "+");
	    return LZString._decompress(input.length, 32, function(index) { return getBaseValue(keyStrUriSafe, input.charAt(index)); });
	  },

	  compress: function (uncompressed) {
	    return LZString._compress(uncompressed, 16, function(a){return f(a);});
	  },
	  _compress: function (uncompressed, bitsPerChar, getCharFromInt) {
	    if (uncompressed == null) return "";
	    var i, value,
	        context_dictionary= {},
	        context_dictionaryToCreate= {},
	        context_c="",
	        context_wc="",
	        context_w="",
	        context_enlargeIn= 2, // Compensate for the first entry which should not count
	        context_dictSize= 3,
	        context_numBits= 2,
	        context_data=[],
	        context_data_val=0,
	        context_data_position=0,
	        ii;

	    for (ii = 0; ii < uncompressed.length; ii += 1) {
	      context_c = uncompressed.charAt(ii);
	      if (!Object.prototype.hasOwnProperty.call(context_dictionary,context_c)) {
	        context_dictionary[context_c] = context_dictSize++;
	        context_dictionaryToCreate[context_c] = true;
	      }

	      context_wc = context_w + context_c;
	      if (Object.prototype.hasOwnProperty.call(context_dictionary,context_wc)) {
	        context_w = context_wc;
	      } else {
	        if (Object.prototype.hasOwnProperty.call(context_dictionaryToCreate,context_w)) {
	          if (context_w.charCodeAt(0)<256) {
	            for (i=0 ; i<context_numBits ; i++) {
	              context_data_val = (context_data_val << 1);
	              if (context_data_position == bitsPerChar-1) {
	                context_data_position = 0;
	                context_data.push(getCharFromInt(context_data_val));
	                context_data_val = 0;
	              } else {
	                context_data_position++;
	              }
	            }
	            value = context_w.charCodeAt(0);
	            for (i=0 ; i<8 ; i++) {
	              context_data_val = (context_data_val << 1) | (value&1);
	              if (context_data_position == bitsPerChar-1) {
	                context_data_position = 0;
	                context_data.push(getCharFromInt(context_data_val));
	                context_data_val = 0;
	              } else {
	                context_data_position++;
	              }
	              value = value >> 1;
	            }
	          } else {
	            value = 1;
	            for (i=0 ; i<context_numBits ; i++) {
	              context_data_val = (context_data_val << 1) | value;
	              if (context_data_position ==bitsPerChar-1) {
	                context_data_position = 0;
	                context_data.push(getCharFromInt(context_data_val));
	                context_data_val = 0;
	              } else {
	                context_data_position++;
	              }
	              value = 0;
	            }
	            value = context_w.charCodeAt(0);
	            for (i=0 ; i<16 ; i++) {
	              context_data_val = (context_data_val << 1) | (value&1);
	              if (context_data_position == bitsPerChar-1) {
	                context_data_position = 0;
	                context_data.push(getCharFromInt(context_data_val));
	                context_data_val = 0;
	              } else {
	                context_data_position++;
	              }
	              value = value >> 1;
	            }
	          }
	          context_enlargeIn--;
	          if (context_enlargeIn == 0) {
	            context_enlargeIn = Math.pow(2, context_numBits);
	            context_numBits++;
	          }
	          delete context_dictionaryToCreate[context_w];
	        } else {
	          value = context_dictionary[context_w];
	          for (i=0 ; i<context_numBits ; i++) {
	            context_data_val = (context_data_val << 1) | (value&1);
	            if (context_data_position == bitsPerChar-1) {
	              context_data_position = 0;
	              context_data.push(getCharFromInt(context_data_val));
	              context_data_val = 0;
	            } else {
	              context_data_position++;
	            }
	            value = value >> 1;
	          }


	        }
	        context_enlargeIn--;
	        if (context_enlargeIn == 0) {
	          context_enlargeIn = Math.pow(2, context_numBits);
	          context_numBits++;
	        }
	        // Add wc to the dictionary.
	        context_dictionary[context_wc] = context_dictSize++;
	        context_w = String(context_c);
	      }
	    }

	    // Output the code for w.
	    if (context_w !== "") {
	      if (Object.prototype.hasOwnProperty.call(context_dictionaryToCreate,context_w)) {
	        if (context_w.charCodeAt(0)<256) {
	          for (i=0 ; i<context_numBits ; i++) {
	            context_data_val = (context_data_val << 1);
	            if (context_data_position == bitsPerChar-1) {
	              context_data_position = 0;
	              context_data.push(getCharFromInt(context_data_val));
	              context_data_val = 0;
	            } else {
	              context_data_position++;
	            }
	          }
	          value = context_w.charCodeAt(0);
	          for (i=0 ; i<8 ; i++) {
	            context_data_val = (context_data_val << 1) | (value&1);
	            if (context_data_position == bitsPerChar-1) {
	              context_data_position = 0;
	              context_data.push(getCharFromInt(context_data_val));
	              context_data_val = 0;
	            } else {
	              context_data_position++;
	            }
	            value = value >> 1;
	          }
	        } else {
	          value = 1;
	          for (i=0 ; i<context_numBits ; i++) {
	            context_data_val = (context_data_val << 1) | value;
	            if (context_data_position == bitsPerChar-1) {
	              context_data_position = 0;
	              context_data.push(getCharFromInt(context_data_val));
	              context_data_val = 0;
	            } else {
	              context_data_position++;
	            }
	            value = 0;
	          }
	          value = context_w.charCodeAt(0);
	          for (i=0 ; i<16 ; i++) {
	            context_data_val = (context_data_val << 1) | (value&1);
	            if (context_data_position == bitsPerChar-1) {
	              context_data_position = 0;
	              context_data.push(getCharFromInt(context_data_val));
	              context_data_val = 0;
	            } else {
	              context_data_position++;
	            }
	            value = value >> 1;
	          }
	        }
	        context_enlargeIn--;
	        if (context_enlargeIn == 0) {
	          context_enlargeIn = Math.pow(2, context_numBits);
	          context_numBits++;
	        }
	        delete context_dictionaryToCreate[context_w];
	      } else {
	        value = context_dictionary[context_w];
	        for (i=0 ; i<context_numBits ; i++) {
	          context_data_val = (context_data_val << 1) | (value&1);
	          if (context_data_position == bitsPerChar-1) {
	            context_data_position = 0;
	            context_data.push(getCharFromInt(context_data_val));
	            context_data_val = 0;
	          } else {
	            context_data_position++;
	          }
	          value = value >> 1;
	        }


	      }
	      context_enlargeIn--;
	      if (context_enlargeIn == 0) {
	        context_enlargeIn = Math.pow(2, context_numBits);
	        context_numBits++;
	      }
	    }

	    // Mark the end of the stream
	    value = 2;
	    for (i=0 ; i<context_numBits ; i++) {
	      context_data_val = (context_data_val << 1) | (value&1);
	      if (context_data_position == bitsPerChar-1) {
	        context_data_position = 0;
	        context_data.push(getCharFromInt(context_data_val));
	        context_data_val = 0;
	      } else {
	        context_data_position++;
	      }
	      value = value >> 1;
	    }

	    // Flush the last char
	    while (true) {
	      context_data_val = (context_data_val << 1);
	      if (context_data_position == bitsPerChar-1) {
	        context_data.push(getCharFromInt(context_data_val));
	        break;
	      }
	      else context_data_position++;
	    }
	    return context_data.join('');
	  },

	  decompress: function (compressed) {
	    if (compressed == null) return "";
	    if (compressed == "") return null;
	    return LZString._decompress(compressed.length, 32768, function(index) { return compressed.charCodeAt(index); });
	  },

	  _decompress: function (length, resetValue, getNextValue) {
	    var dictionary = [],
	        next,
	        enlargeIn = 4,
	        dictSize = 4,
	        numBits = 3,
	        entry = "",
	        result = [],
	        i,
	        w,
	        bits, resb, maxpower, power,
	        c,
	        data = {val:getNextValue(0), position:resetValue, index:1};

	    for (i = 0; i < 3; i += 1) {
	      dictionary[i] = i;
	    }

	    bits = 0;
	    maxpower = Math.pow(2,2);
	    power=1;
	    while (power!=maxpower) {
	      resb = data.val & data.position;
	      data.position >>= 1;
	      if (data.position == 0) {
	        data.position = resetValue;
	        data.val = getNextValue(data.index++);
	      }
	      bits |= (resb>0 ? 1 : 0) * power;
	      power <<= 1;
	    }

	    switch (next = bits) {
	      case 0:
	          bits = 0;
	          maxpower = Math.pow(2,8);
	          power=1;
	          while (power!=maxpower) {
	            resb = data.val & data.position;
	            data.position >>= 1;
	            if (data.position == 0) {
	              data.position = resetValue;
	              data.val = getNextValue(data.index++);
	            }
	            bits |= (resb>0 ? 1 : 0) * power;
	            power <<= 1;
	          }
	        c = f(bits);
	        break;
	      case 1:
	          bits = 0;
	          maxpower = Math.pow(2,16);
	          power=1;
	          while (power!=maxpower) {
	            resb = data.val & data.position;
	            data.position >>= 1;
	            if (data.position == 0) {
	              data.position = resetValue;
	              data.val = getNextValue(data.index++);
	            }
	            bits |= (resb>0 ? 1 : 0) * power;
	            power <<= 1;
	          }
	        c = f(bits);
	        break;
	      case 2:
	        return "";
	    }
	    dictionary[3] = c;
	    w = c;
	    result.push(c);
	    while (true) {
	      if (data.index > length) {
	        return "";
	      }

	      bits = 0;
	      maxpower = Math.pow(2,numBits);
	      power=1;
	      while (power!=maxpower) {
	        resb = data.val & data.position;
	        data.position >>= 1;
	        if (data.position == 0) {
	          data.position = resetValue;
	          data.val = getNextValue(data.index++);
	        }
	        bits |= (resb>0 ? 1 : 0) * power;
	        power <<= 1;
	      }

	      switch (c = bits) {
	        case 0:
	          bits = 0;
	          maxpower = Math.pow(2,8);
	          power=1;
	          while (power!=maxpower) {
	            resb = data.val & data.position;
	            data.position >>= 1;
	            if (data.position == 0) {
	              data.position = resetValue;
	              data.val = getNextValue(data.index++);
	            }
	            bits |= (resb>0 ? 1 : 0) * power;
	            power <<= 1;
	          }

	          dictionary[dictSize++] = f(bits);
	          c = dictSize-1;
	          enlargeIn--;
	          break;
	        case 1:
	          bits = 0;
	          maxpower = Math.pow(2,16);
	          power=1;
	          while (power!=maxpower) {
	            resb = data.val & data.position;
	            data.position >>= 1;
	            if (data.position == 0) {
	              data.position = resetValue;
	              data.val = getNextValue(data.index++);
	            }
	            bits |= (resb>0 ? 1 : 0) * power;
	            power <<= 1;
	          }
	          dictionary[dictSize++] = f(bits);
	          c = dictSize-1;
	          enlargeIn--;
	          break;
	        case 2:
	          return result.join('');
	      }

	      if (enlargeIn == 0) {
	        enlargeIn = Math.pow(2, numBits);
	        numBits++;
	      }

	      if (dictionary[c]) {
	        entry = dictionary[c];
	      } else {
	        if (c === dictSize) {
	          entry = w + w.charAt(0);
	        } else {
	          return null;
	        }
	      }
	      result.push(entry);

	      // Add w+entry[0] to the dictionary.
	      dictionary[dictSize++] = w + entry.charAt(0);
	      enlargeIn--;

	      w = entry;

	      if (enlargeIn == 0) {
	        enlargeIn = Math.pow(2, numBits);
	        numBits++;
	      }

	    }
	  }
	};
	  return LZString;
	})();

	if (true) {
	  !(__WEBPACK_AMD_DEFINE_RESULT__ = function () { return LZString; }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	} else if( typeof module !== 'undefined' && module != null ) {
	  module.exports = LZString
	}


/***/ },
/* 228 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var immutable_class_1 = __webpack_require__(193);
	var plywood_1 = __webpack_require__(199);
	var general_1 = __webpack_require__(209);
	var essence_1 = __webpack_require__(226);
	var check;
	var CollectionTile = (function () {
	    function CollectionTile(parameters) {
	        var name = parameters.name;
	        general_1.verifyUrlSafeName(name);
	        this.name = name;
	        this.title = parameters.title || general_1.makeTitle(name);
	        this.description = parameters.description || '';
	        this.group = parameters.group;
	        this.dataCube = parameters.dataCube;
	        this.essence = parameters.essence;
	    }
	    CollectionTile.isCollectionTile = function (candidate) {
	        return immutable_class_1.isInstanceOf(candidate, CollectionTile);
	    };
	    CollectionTile.fromJS = function (parameters, context) {
	        if (!context)
	            throw new Error('CollectionTile must have context');
	        var dataCubes = context.dataCubes, visualizations = context.visualizations;
	        var dataCubeName = parameters.dataCube;
	        var dataCube = plywood_1.find(dataCubes, function (d) { return d.name === dataCubeName; });
	        if (!dataCube)
	            throw new Error("can not find dataCube '" + dataCubeName + "'");
	        var essence = essence_1.Essence.fromJS(parameters.essence, { dataCube: dataCube, visualizations: visualizations }).updateSplitsWithFilter();
	        return new CollectionTile({
	            name: parameters.name,
	            title: parameters.title,
	            description: parameters.description,
	            group: parameters.group,
	            dataCube: dataCube,
	            essence: essence
	        });
	    };
	    CollectionTile.prototype.valueOf = function () {
	        return {
	            name: this.name,
	            title: this.title,
	            description: this.description,
	            group: this.group,
	            dataCube: this.dataCube,
	            essence: this.essence
	        };
	    };
	    CollectionTile.prototype.toJS = function () {
	        return {
	            name: this.name,
	            title: this.title,
	            description: this.description,
	            group: this.group,
	            dataCube: this.dataCube.name,
	            essence: this.essence.toJS()
	        };
	    };
	    CollectionTile.prototype.toJSON = function () {
	        return this.toJS();
	    };
	    CollectionTile.prototype.toString = function () {
	        return "[LinkItem: " + this.name + "]";
	    };
	    CollectionTile.prototype.equals = function (other) {
	        return CollectionTile.isCollectionTile(other) &&
	            this.name === other.name &&
	            this.title === other.title &&
	            this.description === other.description &&
	            this.group === other.group &&
	            this.dataCube.equals(other.dataCube) &&
	            this.essence.equals(other.essence);
	    };
	    CollectionTile.prototype.change = function (propertyName, newValue) {
	        var v = this.valueOf();
	        if (!v.hasOwnProperty(propertyName)) {
	            throw new Error("Unknown property : " + propertyName);
	        }
	        v[propertyName] = newValue;
	        return new CollectionTile(v);
	    };
	    CollectionTile.prototype.changeEssence = function (essence) {
	        return this.change('essence', essence);
	    };
	    CollectionTile.prototype.changeName = function (name) {
	        return this.change('name', name);
	    };
	    CollectionTile.prototype.changeTitle = function (title) {
	        return this.change('title', title);
	    };
	    return CollectionTile;
	}());
	exports.CollectionTile = CollectionTile;
	check = CollectionTile;


/***/ },
/* 229 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var immutable_class_1 = __webpack_require__(193);
	var plywood_1 = __webpack_require__(199);
	var index_1 = __webpack_require__(202);
	var check;
	var Collection = (function () {
	    function Collection(parameters) {
	        this.title = parameters.title;
	        this.name = parameters.name;
	        this.tiles = parameters.tiles;
	        this.description = parameters.description;
	        this.isNameAvailable = this.isNameAvailable.bind(this);
	    }
	    Collection.isCollection = function (candidate) {
	        return immutable_class_1.isInstanceOf(candidate, Collection);
	    };
	    Collection.fromJS = function (parameters, context) {
	        if (!context)
	            throw new Error('Collection must have context');
	        if (!parameters.name)
	            throw new Error('Collection must have a name');
	        var tiles = parameters.tiles || parameters.items || parameters.linkItems || [];
	        return new Collection({
	            title: parameters.title,
	            name: parameters.name,
	            description: parameters.description,
	            tiles: tiles.map(function (linkItem) { return index_1.CollectionTile.fromJS(linkItem, context); })
	        });
	    };
	    Collection.prototype.valueOf = function () {
	        return {
	            title: this.title,
	            name: this.name,
	            description: this.description,
	            tiles: this.tiles
	        };
	    };
	    Collection.prototype.toJS = function () {
	        var o = {
	            name: this.name,
	            tiles: this.tiles.map(function (linkItem) { return linkItem.toJS(); })
	        };
	        if (this.description)
	            o.description = this.description;
	        if (this.title)
	            o.title = this.title;
	        return o;
	    };
	    Collection.prototype.toJSON = function () {
	        return this.toJS();
	    };
	    Collection.prototype.toString = function () {
	        return "[Collection: " + this.title + "]";
	    };
	    Collection.prototype.equals = function (other) {
	        return Collection.isCollection(other) &&
	            this.title === other.title &&
	            this.name === other.name &&
	            this.description === other.description &&
	            immutable_class_1.immutableArraysEqual(this.tiles, other.tiles);
	    };
	    Collection.prototype.getDefaultTile = function () {
	        return this.tiles[0];
	    };
	    Collection.prototype.findByName = function (name) {
	        return plywood_1.findByName(this.tiles, name);
	    };
	    Collection.prototype.isNameAvailable = function (name) {
	        return !this.findByName(name);
	    };
	    Collection.prototype.deleteTile = function (item) {
	        var index = this.tiles.indexOf(item);
	        if (index === -1)
	            return this;
	        var newTiles = this.tiles.concat();
	        newTiles.splice(index, 1);
	        return this.change('tiles', newTiles);
	    };
	    Collection.prototype.change = function (propertyName, newValue) {
	        var v = this.valueOf();
	        if (!v.hasOwnProperty(propertyName)) {
	            throw new Error("Unknown property : " + propertyName);
	        }
	        v[propertyName] = newValue;
	        return new Collection(v);
	    };
	    Collection.prototype.updateTile = function (tile) {
	        var index = -1;
	        this.tiles.forEach(function (_a, i) {
	            var name = _a.name;
	            if (name === tile.name) {
	                index = i;
	                return;
	            }
	        });
	        if (index === -1) {
	            throw new Error("Can't add unknown tile : " + tile.toString());
	        }
	        var newTiles = this.tiles.concat();
	        newTiles[index] = tile;
	        return this.change('tiles', newTiles);
	    };
	    Collection.prototype.changeTiles = function (tiles) {
	        return this.change('tiles', tiles);
	    };
	    Collection.prototype.changeTitle = function (title) {
	        return this.change('title', title);
	    };
	    return Collection;
	}());
	exports.Collection = Collection;
	check = Collection;


/***/ },
/* 230 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var immutable_class_1 = __webpack_require__(193);
	var index_1 = __webpack_require__(231);
	var chronoshift_1 = __webpack_require__(191);
	var external_view_1 = __webpack_require__(273);
	var WallTime = __webpack_require__(191).WallTime;
	if (!WallTime.rules) {
	    var tzData = __webpack_require__(197);
	    WallTime.init(tzData.rules, tzData.zones);
	}
	var check;
	var Customization = (function () {
	    function Customization(parameters) {
	        this.title = parameters.title || null;
	        this.headerBackground = parameters.headerBackground || null;
	        this.customLogoSvg = parameters.customLogoSvg || null;
	        if (parameters.externalViews)
	            this.externalViews = parameters.externalViews;
	        if (parameters.timezones)
	            this.timezones = parameters.timezones;
	        this.logoutHref = parameters.logoutHref;
	    }
	    Customization.isCustomization = function (candidate) {
	        return immutable_class_1.isInstanceOf(candidate, Customization);
	    };
	    Customization.fromJS = function (parameters) {
	        var value = {
	            title: parameters.title,
	            headerBackground: parameters.headerBackground,
	            customLogoSvg: parameters.customLogoSvg,
	            logoutHref: parameters.logoutHref
	        };
	        var paramViewsJS = parameters.externalViews;
	        var externalViews = null;
	        if (Array.isArray(paramViewsJS)) {
	            externalViews = paramViewsJS.map(function (view, i) { return external_view_1.ExternalView.fromJS(view); });
	            value.externalViews = externalViews;
	        }
	        var timezonesJS = parameters.timezones;
	        var timezones = null;
	        if (Array.isArray(timezonesJS)) {
	            timezones = timezonesJS.map(chronoshift_1.Timezone.fromJS);
	            value.timezones = timezones;
	        }
	        return new Customization(value);
	    };
	    Customization.prototype.valueOf = function () {
	        return {
	            title: this.title,
	            headerBackground: this.headerBackground,
	            customLogoSvg: this.customLogoSvg,
	            externalViews: this.externalViews,
	            timezones: this.timezones,
	            logoutHref: this.logoutHref
	        };
	    };
	    Customization.prototype.toJS = function () {
	        var js = {};
	        if (this.title)
	            js.title = this.title;
	        if (this.headerBackground)
	            js.headerBackground = this.headerBackground;
	        if (this.customLogoSvg)
	            js.customLogoSvg = this.customLogoSvg;
	        if (this.externalViews) {
	            js.externalViews = this.externalViews.map(function (view) { return view.toJS(); });
	        }
	        if (this.timezones) {
	            js.timezones = this.timezones.map(function (tz) { return tz.toJS(); });
	        }
	        if (this.logoutHref)
	            js.logoutHref = this.logoutHref;
	        return js;
	    };
	    Customization.prototype.toJSON = function () {
	        return this.toJS();
	    };
	    Customization.prototype.toString = function () {
	        return "[custom: (" + this.headerBackground + ") logo: " + Boolean(this.customLogoSvg) + ", externalViews: " + Boolean(this.externalViews) + ", timezones: " + Boolean(this.timezones) + "]";
	    };
	    Customization.prototype.equals = function (other) {
	        return Customization.isCustomization(other) &&
	            this.title === other.title &&
	            this.headerBackground === other.headerBackground &&
	            this.customLogoSvg === other.customLogoSvg &&
	            immutable_class_1.immutableArraysEqual(this.externalViews, other.externalViews) &&
	            immutable_class_1.immutableArraysEqual(this.timezones, other.timezones) &&
	            this.logoutHref === other.logoutHref;
	    };
	    Customization.prototype.getTitle = function (version) {
	        var title = this.title || Customization.DEFAULT_TITLE;
	        return title.replace(/%v/g, version);
	    };
	    Customization.prototype.change = function (propertyName, newValue) {
	        return index_1.ImmutableUtils.change(this, propertyName, newValue);
	    };
	    Customization.prototype.changeTitle = function (title) {
	        return this.change('title', title);
	    };
	    Customization.prototype.getTimezones = function () {
	        return this.timezones || Customization.DEFAULT_TIMEZONES;
	    };
	    Customization.prototype.getLogoutHref = function () {
	        return this.logoutHref || Customization.DEFAULT_LOGOUT_HREF;
	    };
	    Customization.DEFAULT_TITLE = 'Pivot (%v)';
	    Customization.DEFAULT_TIMEZONES = [
	        new chronoshift_1.Timezone("America/Juneau"),
	        new chronoshift_1.Timezone("America/Los_Angeles"),
	        new chronoshift_1.Timezone("America/Yellowknife"),
	        new chronoshift_1.Timezone("America/Phoenix"),
	        new chronoshift_1.Timezone("America/Denver"),
	        new chronoshift_1.Timezone("America/Mexico_City"),
	        new chronoshift_1.Timezone("America/Chicago"),
	        new chronoshift_1.Timezone("America/New_York"),
	        new chronoshift_1.Timezone("America/Argentina/Buenos_Aires"),
	        chronoshift_1.Timezone.UTC,
	        new chronoshift_1.Timezone("Asia/Jerusalem"),
	        new chronoshift_1.Timezone("Europe/Paris"),
	        new chronoshift_1.Timezone("Asia/Kathmandu"),
	        new chronoshift_1.Timezone("Asia/Hong_Kong"),
	        new chronoshift_1.Timezone("Asia/Seoul"),
	        new chronoshift_1.Timezone("Pacific/Guam")
	    ];
	    Customization.DEFAULT_LOGOUT_HREF = 'logout';
	    return Customization;
	}());
	exports.Customization = Customization;
	check = Customization;


/***/ },
/* 231 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	function __export(m) {
	    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
	}
	__export(__webpack_require__(232));
	__export(__webpack_require__(233));
	__export(__webpack_require__(209));
	__export(__webpack_require__(234));
	__export(__webpack_require__(221));
	__export(__webpack_require__(235));
	__export(__webpack_require__(236));


/***/ },
/* 232 */
/***/ function(module, exports) {

	"use strict";
	function extend(source, target) {
	    for (var key in source) {
	        target[key] = source[key];
	    }
	    return target;
	}
	exports.extend = extend;


/***/ },
/* 233 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var numeral = __webpack_require__(213);
	var plywood_1 = __webpack_require__(199);
	var index_1 = __webpack_require__(202);
	var time_1 = __webpack_require__(221);
	var scales = {
	    'a': {
	        '': 1,
	        'k': 1e3,
	        'm': 1e6,
	        'b': 1e9,
	        't': 1e12
	    },
	    'b': {
	        'B': 1,
	        'KB': 1024,
	        'MB': 1024 * 1024,
	        'GB': 1024 * 1024 * 1024,
	        'TB': 1024 * 1024 * 1024 * 1024,
	        'PB': 1024 * 1024 * 1024 * 1024 * 1024,
	        'EB': 1024 * 1024 * 1024 * 1024 * 1024 * 1024,
	        'ZB': 1024 * 1024 * 1024 * 1024 * 1024 * 1024 * 1024,
	        'YB': 1024 * 1024 * 1024 * 1024 * 1024 * 1024 * 1024 * 1024
	    }
	};
	function getMiddleNumber(values) {
	    var filteredAbsData = [];
	    for (var _i = 0, values_1 = values; _i < values_1.length; _i++) {
	        var v = values_1[_i];
	        if (v === 0 || isNaN(v) || !isFinite(v))
	            continue;
	        filteredAbsData.push(Math.abs(v));
	    }
	    var n = filteredAbsData.length;
	    if (n) {
	        filteredAbsData.sort(function (a, b) { return b - a; });
	        return filteredAbsData[Math.ceil((n - 1) / 2)];
	    }
	    else {
	        return 0;
	    }
	}
	exports.getMiddleNumber = getMiddleNumber;
	function formatterFromData(values, format) {
	    var match = format.match(/^(\S*)( ?)([ab])$/);
	    if (match) {
	        var numberFormat = match[1];
	        var space = match[2];
	        var formatType = match[3];
	        var middle = getMiddleNumber(values);
	        var formatMiddle = numeral(middle).format('0 ' + formatType);
	        var unit = formatMiddle.split(' ')[1] || '';
	        var scale = scales[formatType][unit];
	        var append = unit ? space + unit : '';
	        return function (n) {
	            if (isNaN(n) || !isFinite(n))
	                return '-';
	            return numeral(n / scale).format(numberFormat) + append;
	        };
	    }
	    else {
	        return function (n) {
	            if (isNaN(n) || !isFinite(n))
	                return '-';
	            return numeral(n).format(format);
	        };
	    }
	}
	exports.formatterFromData = formatterFromData;
	function formatNumberRange(value) {
	    return formatValue(value.start || "any") + " to " + formatValue(value.end || "any");
	}
	exports.formatNumberRange = formatNumberRange;
	function formatValue(value, timezone, displayYear) {
	    if (plywood_1.NumberRange.isNumberRange(value)) {
	        return formatNumberRange(value);
	    }
	    else if (plywood_1.TimeRange.isTimeRange(value)) {
	        return time_1.formatTimeRange(value, timezone, displayYear);
	    }
	    else {
	        return '' + value;
	    }
	}
	exports.formatValue = formatValue;
	function formatFilterClause(dimension, clause, timezone, verbose) {
	    var _a = this.getFormattedClause(dimension, clause, timezone, verbose), title = _a.title, values = _a.values;
	    return title ? title + " " + values : values;
	}
	exports.formatFilterClause = formatFilterClause;
	function getFormattedClause(dimension, clause, timezone, verbose) {
	    var dimKind = dimension.kind;
	    var values;
	    var clauseSet = clause.getLiteralSet();
	    function getClauseLabel() {
	        var dimTitle = dimension.title;
	        if (dimKind === 'time' && !verbose)
	            return '';
	        var delimiter = ["regex", "contains"].indexOf(clause.action) !== -1 ? ' ~' : ":";
	        if (clauseSet && clauseSet.elements.length > 1 && !verbose)
	            return "" + dimTitle;
	        return "" + dimTitle + delimiter;
	    }
	    switch (dimKind) {
	        case 'boolean':
	        case 'number':
	        case 'string':
	            if (verbose) {
	                values = clauseSet.toString();
	            }
	            else {
	                var setElements = clauseSet.elements;
	                if (setElements.length > 1) {
	                    values = "(" + setElements.length + ")";
	                }
	                else {
	                    values = formatValue(setElements[0]);
	                }
	            }
	            if (clause.action === 'match')
	                values = "/" + values + "/";
	            if (clause.action === index_1.Filter.CONTAINS)
	                values = "\"" + values + "\"";
	            break;
	        case 'time':
	            var selection = clause.selection;
	            var selectionType = selection.type;
	            if (selectionType === 'TIME_RANGE') {
	                var timeRange = selection.value;
	                values = time_1.formatTimeRange(timeRange, timezone, time_1.DisplayYear.IF_DIFF);
	            }
	            else if (selectionType === "SET/TIME") {
	                values = clauseSet.toString();
	            }
	            break;
	        default:
	            throw new Error("unknown kind " + dimKind);
	    }
	    return { title: getClauseLabel(), values: values };
	}
	exports.getFormattedClause = getFormattedClause;


/***/ },
/* 234 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var d3 = __webpack_require__(222);
	function parseCSV(text) {
	    return d3.csv.parse(text);
	}
	exports.parseCSV = parseCSV;
	function parseTSV(text) {
	    return d3.tsv.parse(text);
	}
	exports.parseTSV = parseTSV;
	function parseJSON(text) {
	    text = text.trim();
	    var firstChar = text[0];
	    if (firstChar[0] === '[') {
	        try {
	            return JSON.parse(text);
	        }
	        catch (e) {
	            throw new Error("could not parse");
	        }
	    }
	    else if (firstChar[0] === '{') {
	        return text.split(/\r?\n/).map(function (line, i) {
	            try {
	                return JSON.parse(line);
	            }
	            catch (e) {
	                throw new Error("problem in line: " + i + ": '" + line + "'");
	            }
	        });
	    }
	    else {
	        throw new Error("Unsupported start, starts with '" + firstChar[0] + "'");
	    }
	}
	exports.parseJSON = parseJSON;
	function parseData(text, type) {
	    type = type.replace('.', '');
	    switch (type) {
	        case 'csv':
	        case 'text/csv':
	            return parseCSV(text);
	        case 'tsv':
	        case 'text/tsv':
	        case 'text/tab-separated-values':
	            return parseTSV(text);
	        case 'json':
	        case 'application/json':
	            return parseJSON(text);
	        default:
	            throw new Error("Unsupported file type '" + type + "'");
	    }
	}
	exports.parseData = parseData;


/***/ },
/* 235 */
/***/ function(module, exports) {

	"use strict";
	var ImmutableUtils = (function () {
	    function ImmutableUtils() {
	    }
	    ImmutableUtils.setProperty = function (instance, path, newValue) {
	        var bits = path.split('.');
	        var lastObject = newValue;
	        var currentObject;
	        var getLastObject = function () {
	            var o = instance;
	            for (var i = 0; i < bits.length; i++) {
	                o = o[bits[i]];
	            }
	            return o;
	        };
	        while (bits.length) {
	            var bit = bits.pop();
	            currentObject = getLastObject();
	            if (currentObject.change instanceof Function) {
	                lastObject = currentObject.change(bit, lastObject);
	            }
	            else {
	                var message = 'Can\'t find \`change()\` method on ' + currentObject.constructor.name;
	                console.error(message);
	                throw new Error(message);
	            }
	        }
	        return lastObject;
	    };
	    ImmutableUtils.getProperty = function (instance, path) {
	        var value = instance;
	        var bits = path.split('.');
	        var bit;
	        while (bit = bits.shift())
	            value = value[bit];
	        return value;
	    };
	    ImmutableUtils.change = function (instance, propertyName, newValue) {
	        var v = instance.valueOf();
	        if (!v.hasOwnProperty(propertyName)) {
	            throw new Error("Unknown property : " + propertyName);
	        }
	        v[propertyName] = newValue;
	        return new instance.constructor(v);
	    };
	    ImmutableUtils.addInArray = function (instance, propertyName, newItem, index) {
	        if (index === void 0) { index = -1; }
	        var newArray = instance[propertyName];
	        if (index === -1) {
	            newArray.push(newItem);
	        }
	        else {
	            newArray[index] = newItem;
	        }
	        return ImmutableUtils.change(instance, propertyName, newArray);
	    };
	    return ImmutableUtils;
	}());
	exports.ImmutableUtils = ImmutableUtils;


/***/ },
/* 236 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var yaml = __webpack_require__(237);
	var index_1 = __webpack_require__(202);
	var labels_1 = __webpack_require__(272);
	function spaces(n) {
	    return (new Array(n + 1)).join(' ');
	}
	function extend(a, b) {
	    for (var key in a) {
	        b[key] = a[key];
	    }
	    return b;
	}
	function yamlObject(lines, indent) {
	    if (indent === void 0) { indent = 2; }
	    var pad = spaces(indent);
	    return lines.map(function (line, i) {
	        if (line === '')
	            return '';
	        return pad + (i ? '  ' : '- ') + line;
	    });
	}
	function yamlPropAdder(lines, withComments, options) {
	    var object = options.object, propName = options.propName, defaultValue = options.defaultValue, comment = options.comment;
	    var value = object[propName];
	    if (value == null) {
	        if (withComments && typeof defaultValue !== "undefined") {
	            lines.push('', "# " + comment, "#" + propName + ": " + defaultValue + " # <- default");
	        }
	    }
	    else {
	        if (withComments)
	            lines.push('', "# " + comment);
	        lines.push(propName + ": " + value);
	    }
	}
	function getYamlPropAdder(object, labels, lines, withComments) {
	    if (withComments === void 0) { withComments = false; }
	    var adder = function (propName, additionalOptions) {
	        var propVerbiage = labels[propName];
	        var comment;
	        if (!propVerbiage) {
	            console.warn("No labels for " + propName + ", please fix this in 'common/models/labels.ts'");
	            comment = '';
	        }
	        else {
	            comment = propVerbiage.description;
	        }
	        var options = { object: object, propName: propName, comment: comment };
	        if (additionalOptions)
	            options = extend(additionalOptions, options);
	        yamlPropAdder(lines, withComments, options);
	        return { add: adder };
	    };
	    return { add: adder };
	}
	function clusterToYAML(cluster, withComments) {
	    var lines = [
	        ("name: " + cluster.name)
	    ];
	    var props = getYamlPropAdder(cluster, labels_1.CLUSTER, lines, withComments);
	    props
	        .add('type')
	        .add('host')
	        .add('version')
	        .add('timeout', { defaultValue: index_1.Cluster.DEFAULT_TIMEOUT })
	        .add('sourceListScan', { defaultValue: index_1.Cluster.DEFAULT_SOURCE_LIST_SCAN })
	        .add('sourceListRefreshOnLoad', { defaultValue: false })
	        .add('sourceListRefreshInterval', { defaultValue: index_1.Cluster.DEFAULT_SOURCE_LIST_REFRESH_INTERVAL })
	        .add('sourceReintrospectOnLoad', { defaultValue: false })
	        .add('sourceReintrospectInterval', { defaultValue: index_1.Cluster.DEFAULT_SOURCE_REINTROSPECT_INTERVAL });
	    if (withComments) {
	        lines.push('', "# Database specific (" + cluster.type + ") ===============");
	    }
	    switch (cluster.type) {
	        case 'druid':
	            props
	                .add('introspectionStrategy', { defaultValue: index_1.Cluster.DEFAULT_INTROSPECTION_STRATEGY })
	                .add('requestDecorator');
	            break;
	        case 'postgres':
	        case 'mysql':
	            props
	                .add('database')
	                .add('user')
	                .add('password');
	            break;
	    }
	    lines.push('');
	    return yamlObject(lines);
	}
	exports.clusterToYAML = clusterToYAML;
	function collectionToYAML(collection, withComments) {
	    var lines = [
	        ("name: " + collection.name)
	    ];
	    var addProps = getYamlPropAdder(collection, labels_1.COLLECTION, lines, withComments);
	    addProps
	        .add('title')
	        .add('description');
	    lines.push('tiles:');
	    lines = lines.concat.apply(lines, collection.tiles.map(CollectionTileToYAML));
	    lines.push('');
	    return yamlObject(lines);
	}
	exports.collectionToYAML = collectionToYAML;
	function CollectionTileToYAML(item) {
	    var lines = [
	        ("name: " + item.name)
	    ];
	    var addProps = getYamlPropAdder(item, labels_1.COLLECTION_ITEM, lines);
	    addProps
	        .add('title')
	        .add('description')
	        .add('group')
	        .add('dataCube');
	    lines.push("essence:");
	    lines.push(yaml.safeDump(item.essence.toJSON()));
	    lines.push('');
	    return yamlObject(lines);
	}
	exports.CollectionTileToYAML = CollectionTileToYAML;
	function attributeToYAML(attribute) {
	    var lines = [
	        ("name: " + attribute.name),
	        ("type: " + attribute.type)
	    ];
	    if (attribute.special) {
	        lines.push("special: " + attribute.special);
	    }
	    lines.push('');
	    return yamlObject(lines);
	}
	exports.attributeToYAML = attributeToYAML;
	function dimensionToYAML(dimension) {
	    var lines = [
	        ("name: " + dimension.name),
	        ("title: " + dimension.title)
	    ];
	    if (dimension.kind !== 'string') {
	        lines.push("kind: " + dimension.kind);
	    }
	    lines.push("formula: " + dimension.formula);
	    lines.push('');
	    return yamlObject(lines);
	}
	exports.dimensionToYAML = dimensionToYAML;
	function measureToYAML(measure) {
	    var lines = [
	        ("name: " + measure.name),
	        ("title: " + measure.title)
	    ];
	    if (measure.units) {
	        lines.push("units: " + measure.units);
	    }
	    lines.push("formula: " + measure.formula);
	    var format = measure.format;
	    if (!!format) {
	        lines.push("format: " + format);
	    }
	    lines.push('');
	    return yamlObject(lines);
	}
	exports.measureToYAML = measureToYAML;
	function dataCubeToYAML(dataCube, withComments) {
	    var lines = [
	        ("name: " + dataCube.name),
	        ("title: " + dataCube.title),
	        ("clusterName: " + dataCube.clusterName),
	        ("source: " + dataCube.source)
	    ];
	    var timeAttribute = dataCube.timeAttribute;
	    if (timeAttribute && !(dataCube.clusterName === 'druid' && timeAttribute.name === '__time')) {
	        if (withComments) {
	            lines.push("# The primary time attribute of the data refers to the attribute that must always be filtered on");
	            lines.push("# This is particularly useful for Druid data cubes as they must always have a time filter.");
	        }
	        lines.push("timeAttribute: " + timeAttribute.name, '');
	    }
	    var refreshRule = dataCube.refreshRule;
	    if (withComments) {
	        lines.push("# The refresh rule describes how often the data cube looks for new data. Default: 'query'/PT1M (every minute)");
	    }
	    lines.push("refreshRule:");
	    lines.push("  rule: " + refreshRule.rule);
	    if (refreshRule.time) {
	        lines.push("  time: " + refreshRule.time.toISOString());
	    }
	    lines.push('');
	    var addProps = getYamlPropAdder(dataCube, labels_1.DATA_CUBE, lines, withComments);
	    addProps
	        .add('defaultTimezone', { defaultValue: index_1.DataCube.DEFAULT_DEFAULT_TIMEZONE })
	        .add('defaultDuration', { defaultValue: index_1.DataCube.DEFAULT_DEFAULT_DURATION })
	        .add('defaultSortMeasure', { defaultValue: dataCube.getDefaultSortMeasure() });
	    var defaultSelectedMeasures = dataCube.defaultSelectedMeasures ? dataCube.defaultSelectedMeasures.toArray() : null;
	    if (withComments) {
	        lines.push('', "# The names of measures that are selected by default");
	    }
	    if (defaultSelectedMeasures) {
	        lines.push("defaultSelectedMeasures: " + JSON.stringify(defaultSelectedMeasures));
	    }
	    else if (withComments) {
	        lines.push("#defaultSelectedMeasures: []");
	    }
	    var defaultPinnedDimensions = dataCube.defaultPinnedDimensions ? dataCube.defaultPinnedDimensions.toArray() : null;
	    if (withComments) {
	        lines.push('', "# The names of dimensions that are pinned by default (in order that they will appear in the pin bar)");
	    }
	    if (defaultPinnedDimensions) {
	        lines.push('', "defaultPinnedDimensions: " + JSON.stringify(defaultPinnedDimensions));
	    }
	    else if (withComments) {
	        lines.push('', "#defaultPinnedDimensions: []");
	    }
	    var introspection = dataCube.getIntrospection();
	    if (withComments) {
	        lines.push("", "# How the dataset should be introspected", "# possible options are:", "# * none - Do not do any introspection, take what is written in the config as the rule of law.", "# * no-autofill - Introspect the datasource but do not automatically generate dimensions or measures", "# * autofill-dimensions-only - Introspect the datasource, automatically generate dimensions only", "# * autofill-measures-only - Introspect the datasource, automatically generate measures only", "# * autofill-all - (default) Introspect the datasource, automatically generate dimensions and measures");
	    }
	    lines.push("introspection: " + introspection);
	    var attributeOverrides = dataCube.attributeOverrides;
	    if (withComments) {
	        lines.push('', "# The list of attribute overrides in case introspection get something wrong");
	    }
	    lines.push('attributeOverrides:');
	    if (withComments) {
	        lines.push("  # A general attribute override looks like so:", "  #", "  # name: user_unique", "  # ^ the name of the attribute (the column in the database)", "  #", "  # type: STRING", "  # ^ (optional) plywood type of the attribute", "  #", "  # special: unique", "  # ^ (optional) any kind of special significance associated with this attribute", "");
	    }
	    lines = lines.concat.apply(lines, attributeOverrides.map(attributeToYAML));
	    var dimensions = dataCube.dimensions.toArray();
	    if (withComments) {
	        lines.push('', "# The list of dimensions defined in the UI. The order here will be reflected in the UI");
	    }
	    lines.push('dimensions:');
	    if (withComments) {
	        lines.push("  # A general dimension looks like so:", "  #", "  # name: channel", "  # ^ the name of the dimension as used in the URL (you should try not to change these)", "  #", "  # title: The Channel", "  # ^ (optional) the human readable title. If not set a title is generated from the 'name'", "  #", "  # kind: string", "  # ^ (optional) the kind of the dimension. Can be 'string', 'time', 'number', or 'boolean'. Defaults to 'string'", "  #", "  # formula: $channel", "  # ^ (optional) the Plywood bucketing expression for this dimension. Defaults to '$name'", "  #   if, say, channel was called 'cnl' in the data you would put '$cnl' here", "  #   See also the expressions API reference: https://plywood.imply.io/expressions", "  #", "  # url: string", "  # ^ (optional) a url (including protocol) associated with the dimension, with optional token '%s'", "  #   that is replaced by the dimension value to generate links specific to each value.", "");
	    }
	    lines = lines.concat.apply(lines, dimensions.map(dimensionToYAML));
	    if (withComments) {
	        lines.push("  # This is the place where you might want to add derived dimensions.", "  #", "  # Here are some examples of possible derived dimensions:", "  #", "  # - name: is_usa", "  #   title: Is USA?", "  #   formula: $country == 'United States'", "  #", "  # - name: file_version", "  #   formula: $filename.extract('(\\d+\\.\\d+\\.\\d+)')", "");
	    }
	    var measures = dataCube.measures.toArray();
	    if (withComments) {
	        lines.push('', "# The list of measures defined in the UI. The order here will be reflected in the UI");
	    }
	    lines.push("measures:");
	    if (withComments) {
	        lines.push("  # A general measure looks like so:", "  #", "  # name: avg_revenue", "  # ^ the name of the dimension as used in the URL (you should try not to change these)", "  #", "  # title: Average Revenue", "  # ^ (optional) the human readable title. If not set a title is generated from the 'name'", "  #", "  # formula: $main.sum($revenue) / $main.sum($volume) * 10", "  # ^ (optional) the Plywood bucketing expression for this dimension.", "  #   Usually defaults to '$main.sum($name)' but if the name contains 'min' or 'max' will use that as the aggregate instead of sum.", "  #   this is the place to define your fancy formulas", "");
	    }
	    lines = lines.concat.apply(lines, measures.map(measureToYAML));
	    if (withComments) {
	        lines.push("  # This is the place where you might want to add derived measures (a.k.a Post Aggregators).", "  #", "  # Here are some examples of possible derived measures:", "  #", "  # - name: ecpm", "  #   title: eCPM", "  #   formula: $main.sum($revenue) / $main.sum($impressions) * 1000", "  #", "  # - name: usa_revenue", "  #   title: USA Revenue", "  #   formula: $main.filter($country == 'United States').sum($revenue)", "");
	    }
	    lines.push('');
	    return yamlObject(lines);
	}
	exports.dataCubeToYAML = dataCubeToYAML;
	function appSettingsToYAML(appSettings, withComments, extra) {
	    if (extra === void 0) { extra = {}; }
	    var dataCubes = appSettings.dataCubes, clusters = appSettings.clusters, collections = appSettings.collections;
	    if (!dataCubes.length)
	        throw new Error('Could not find any data cubes, please verify network connectivity');
	    var lines = [];
	    if (extra.header && extra.version) {
	        lines.push("# generated by Pivot version " + extra.version, "# for a more detailed walk-through go to: https://github.com/implydata/pivot/blob/v" + extra.version + "/docs/configuration.md", '');
	    }
	    if (extra.verbose) {
	        if (withComments) {
	            lines.push("# Run Pivot in verbose mode so it prints out the queries that it issues");
	        }
	        lines.push("verbose: true", '');
	    }
	    if (extra.port) {
	        if (withComments) {
	            lines.push("# The port on which the Pivot server will listen on");
	        }
	        lines.push("port: " + extra.port, '');
	    }
	    if (clusters.length) {
	        lines.push('clusters:');
	        lines = lines.concat.apply(lines, clusters.map(function (c) { return clusterToYAML(c, withComments); }));
	    }
	    lines.push('dataCubes:');
	    lines = lines.concat.apply(lines, dataCubes.map(function (d) { return dataCubeToYAML(d, withComments); }));
	    return lines.join('\n');
	}
	exports.appSettingsToYAML = appSettingsToYAML;


/***/ },
/* 237 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';


	var yaml = __webpack_require__(238);


	module.exports = yaml;


/***/ },
/* 238 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';


	var loader = __webpack_require__(239);
	var dumper = __webpack_require__(271);


	function deprecated(name) {
	  return function () {
	    throw new Error('Function ' + name + ' is deprecated and cannot be used.');
	  };
	}


	module.exports.Type                = __webpack_require__(245);
	module.exports.Schema              = __webpack_require__(244);
	module.exports.FAILSAFE_SCHEMA     = __webpack_require__(248);
	module.exports.JSON_SCHEMA         = __webpack_require__(247);
	module.exports.CORE_SCHEMA         = __webpack_require__(246);
	module.exports.DEFAULT_SAFE_SCHEMA = __webpack_require__(243);
	module.exports.DEFAULT_FULL_SCHEMA = __webpack_require__(266);
	module.exports.load                = loader.load;
	module.exports.loadAll             = loader.loadAll;
	module.exports.safeLoad            = loader.safeLoad;
	module.exports.safeLoadAll         = loader.safeLoadAll;
	module.exports.dump                = dumper.dump;
	module.exports.safeDump            = dumper.safeDump;
	module.exports.YAMLException       = __webpack_require__(241);

	// Deprecated schema names from JS-YAML 2.0.x
	module.exports.MINIMAL_SCHEMA = __webpack_require__(248);
	module.exports.SAFE_SCHEMA    = __webpack_require__(243);
	module.exports.DEFAULT_SCHEMA = __webpack_require__(266);

	// Deprecated functions from JS-YAML 1.x.x
	module.exports.scan           = deprecated('scan');
	module.exports.parse          = deprecated('parse');
	module.exports.compose        = deprecated('compose');
	module.exports.addConstructor = deprecated('addConstructor');


/***/ },
/* 239 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	/*eslint-disable max-len,no-use-before-define*/

	var common              = __webpack_require__(240);
	var YAMLException       = __webpack_require__(241);
	var Mark                = __webpack_require__(242);
	var DEFAULT_SAFE_SCHEMA = __webpack_require__(243);
	var DEFAULT_FULL_SCHEMA = __webpack_require__(266);


	var _hasOwnProperty = Object.prototype.hasOwnProperty;


	var CONTEXT_FLOW_IN   = 1;
	var CONTEXT_FLOW_OUT  = 2;
	var CONTEXT_BLOCK_IN  = 3;
	var CONTEXT_BLOCK_OUT = 4;


	var CHOMPING_CLIP  = 1;
	var CHOMPING_STRIP = 2;
	var CHOMPING_KEEP  = 3;


	var PATTERN_NON_PRINTABLE         = /[\x00-\x08\x0B\x0C\x0E-\x1F\x7F-\x84\x86-\x9F\uFFFE\uFFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/;
	var PATTERN_NON_ASCII_LINE_BREAKS = /[\x85\u2028\u2029]/;
	var PATTERN_FLOW_INDICATORS       = /[,\[\]\{\}]/;
	var PATTERN_TAG_HANDLE            = /^(?:!|!!|![a-z\-]+!)$/i;
	var PATTERN_TAG_URI               = /^(?:!|[^,\[\]\{\}])(?:%[0-9a-f]{2}|[0-9a-z\-#;\/\?:@&=\+\$,_\.!~\*'\(\)\[\]])*$/i;


	function is_EOL(c) {
	  return (c === 0x0A/* LF */) || (c === 0x0D/* CR */);
	}

	function is_WHITE_SPACE(c) {
	  return (c === 0x09/* Tab */) || (c === 0x20/* Space */);
	}

	function is_WS_OR_EOL(c) {
	  return (c === 0x09/* Tab */) ||
	         (c === 0x20/* Space */) ||
	         (c === 0x0A/* LF */) ||
	         (c === 0x0D/* CR */);
	}

	function is_FLOW_INDICATOR(c) {
	  return c === 0x2C/* , */ ||
	         c === 0x5B/* [ */ ||
	         c === 0x5D/* ] */ ||
	         c === 0x7B/* { */ ||
	         c === 0x7D/* } */;
	}

	function fromHexCode(c) {
	  var lc;

	  if ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) {
	    return c - 0x30;
	  }

	  /*eslint-disable no-bitwise*/
	  lc = c | 0x20;

	  if ((0x61/* a */ <= lc) && (lc <= 0x66/* f */)) {
	    return lc - 0x61 + 10;
	  }

	  return -1;
	}

	function escapedHexLen(c) {
	  if (c === 0x78/* x */) { return 2; }
	  if (c === 0x75/* u */) { return 4; }
	  if (c === 0x55/* U */) { return 8; }
	  return 0;
	}

	function fromDecimalCode(c) {
	  if ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) {
	    return c - 0x30;
	  }

	  return -1;
	}

	function simpleEscapeSequence(c) {
	  return (c === 0x30/* 0 */) ? '\x00' :
	        (c === 0x61/* a */) ? '\x07' :
	        (c === 0x62/* b */) ? '\x08' :
	        (c === 0x74/* t */) ? '\x09' :
	        (c === 0x09/* Tab */) ? '\x09' :
	        (c === 0x6E/* n */) ? '\x0A' :
	        (c === 0x76/* v */) ? '\x0B' :
	        (c === 0x66/* f */) ? '\x0C' :
	        (c === 0x72/* r */) ? '\x0D' :
	        (c === 0x65/* e */) ? '\x1B' :
	        (c === 0x20/* Space */) ? ' ' :
	        (c === 0x22/* " */) ? '\x22' :
	        (c === 0x2F/* / */) ? '/' :
	        (c === 0x5C/* \ */) ? '\x5C' :
	        (c === 0x4E/* N */) ? '\x85' :
	        (c === 0x5F/* _ */) ? '\xA0' :
	        (c === 0x4C/* L */) ? '\u2028' :
	        (c === 0x50/* P */) ? '\u2029' : '';
	}

	function charFromCodepoint(c) {
	  if (c <= 0xFFFF) {
	    return String.fromCharCode(c);
	  }
	  // Encode UTF-16 surrogate pair
	  // https://en.wikipedia.org/wiki/UTF-16#Code_points_U.2B010000_to_U.2B10FFFF
	  return String.fromCharCode(((c - 0x010000) >> 10) + 0xD800,
	                             ((c - 0x010000) & 0x03FF) + 0xDC00);
	}

	var simpleEscapeCheck = new Array(256); // integer, for fast access
	var simpleEscapeMap = new Array(256);
	for (var i = 0; i < 256; i++) {
	  simpleEscapeCheck[i] = simpleEscapeSequence(i) ? 1 : 0;
	  simpleEscapeMap[i] = simpleEscapeSequence(i);
	}


	function State(input, options) {
	  this.input = input;

	  this.filename  = options['filename']  || null;
	  this.schema    = options['schema']    || DEFAULT_FULL_SCHEMA;
	  this.onWarning = options['onWarning'] || null;
	  this.legacy    = options['legacy']    || false;
	  this.json      = options['json']      || false;
	  this.listener  = options['listener']  || null;

	  this.implicitTypes = this.schema.compiledImplicit;
	  this.typeMap       = this.schema.compiledTypeMap;

	  this.length     = input.length;
	  this.position   = 0;
	  this.line       = 0;
	  this.lineStart  = 0;
	  this.lineIndent = 0;

	  this.documents = [];

	  /*
	  this.version;
	  this.checkLineBreaks;
	  this.tagMap;
	  this.anchorMap;
	  this.tag;
	  this.anchor;
	  this.kind;
	  this.result;*/

	}


	function generateError(state, message) {
	  return new YAMLException(
	    message,
	    new Mark(state.filename, state.input, state.position, state.line, (state.position - state.lineStart)));
	}

	function throwError(state, message) {
	  throw generateError(state, message);
	}

	function throwWarning(state, message) {
	  if (state.onWarning) {
	    state.onWarning.call(null, generateError(state, message));
	  }
	}


	var directiveHandlers = {

	  YAML: function handleYamlDirective(state, name, args) {

	    var match, major, minor;

	    if (state.version !== null) {
	      throwError(state, 'duplication of %YAML directive');
	    }

	    if (args.length !== 1) {
	      throwError(state, 'YAML directive accepts exactly one argument');
	    }

	    match = /^([0-9]+)\.([0-9]+)$/.exec(args[0]);

	    if (match === null) {
	      throwError(state, 'ill-formed argument of the YAML directive');
	    }

	    major = parseInt(match[1], 10);
	    minor = parseInt(match[2], 10);

	    if (major !== 1) {
	      throwError(state, 'unacceptable YAML version of the document');
	    }

	    state.version = args[0];
	    state.checkLineBreaks = (minor < 2);

	    if (minor !== 1 && minor !== 2) {
	      throwWarning(state, 'unsupported YAML version of the document');
	    }
	  },

	  TAG: function handleTagDirective(state, name, args) {

	    var handle, prefix;

	    if (args.length !== 2) {
	      throwError(state, 'TAG directive accepts exactly two arguments');
	    }

	    handle = args[0];
	    prefix = args[1];

	    if (!PATTERN_TAG_HANDLE.test(handle)) {
	      throwError(state, 'ill-formed tag handle (first argument) of the TAG directive');
	    }

	    if (_hasOwnProperty.call(state.tagMap, handle)) {
	      throwError(state, 'there is a previously declared suffix for "' + handle + '" tag handle');
	    }

	    if (!PATTERN_TAG_URI.test(prefix)) {
	      throwError(state, 'ill-formed tag prefix (second argument) of the TAG directive');
	    }

	    state.tagMap[handle] = prefix;
	  }
	};


	function captureSegment(state, start, end, checkJson) {
	  var _position, _length, _character, _result;

	  if (start < end) {
	    _result = state.input.slice(start, end);

	    if (checkJson) {
	      for (_position = 0, _length = _result.length;
	           _position < _length;
	           _position += 1) {
	        _character = _result.charCodeAt(_position);
	        if (!(_character === 0x09 ||
	              (0x20 <= _character && _character <= 0x10FFFF))) {
	          throwError(state, 'expected valid JSON character');
	        }
	      }
	    } else if (PATTERN_NON_PRINTABLE.test(_result)) {
	      throwError(state, 'the stream contains non-printable characters');
	    }

	    state.result += _result;
	  }
	}

	function mergeMappings(state, destination, source, overridableKeys) {
	  var sourceKeys, key, index, quantity;

	  if (!common.isObject(source)) {
	    throwError(state, 'cannot merge mappings; the provided source object is unacceptable');
	  }

	  sourceKeys = Object.keys(source);

	  for (index = 0, quantity = sourceKeys.length; index < quantity; index += 1) {
	    key = sourceKeys[index];

	    if (!_hasOwnProperty.call(destination, key)) {
	      destination[key] = source[key];
	      overridableKeys[key] = true;
	    }
	  }
	}

	function storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode) {
	  var index, quantity;

	  keyNode = String(keyNode);

	  if (_result === null) {
	    _result = {};
	  }

	  if (keyTag === 'tag:yaml.org,2002:merge') {
	    if (Array.isArray(valueNode)) {
	      for (index = 0, quantity = valueNode.length; index < quantity; index += 1) {
	        mergeMappings(state, _result, valueNode[index], overridableKeys);
	      }
	    } else {
	      mergeMappings(state, _result, valueNode, overridableKeys);
	    }
	  } else {
	    if (!state.json &&
	        !_hasOwnProperty.call(overridableKeys, keyNode) &&
	        _hasOwnProperty.call(_result, keyNode)) {
	      throwError(state, 'duplicated mapping key');
	    }
	    _result[keyNode] = valueNode;
	    delete overridableKeys[keyNode];
	  }

	  return _result;
	}

	function readLineBreak(state) {
	  var ch;

	  ch = state.input.charCodeAt(state.position);

	  if (ch === 0x0A/* LF */) {
	    state.position++;
	  } else if (ch === 0x0D/* CR */) {
	    state.position++;
	    if (state.input.charCodeAt(state.position) === 0x0A/* LF */) {
	      state.position++;
	    }
	  } else {
	    throwError(state, 'a line break is expected');
	  }

	  state.line += 1;
	  state.lineStart = state.position;
	}

	function skipSeparationSpace(state, allowComments, checkIndent) {
	  var lineBreaks = 0,
	      ch = state.input.charCodeAt(state.position);

	  while (ch !== 0) {
	    while (is_WHITE_SPACE(ch)) {
	      ch = state.input.charCodeAt(++state.position);
	    }

	    if (allowComments && ch === 0x23/* # */) {
	      do {
	        ch = state.input.charCodeAt(++state.position);
	      } while (ch !== 0x0A/* LF */ && ch !== 0x0D/* CR */ && ch !== 0);
	    }

	    if (is_EOL(ch)) {
	      readLineBreak(state);

	      ch = state.input.charCodeAt(state.position);
	      lineBreaks++;
	      state.lineIndent = 0;

	      while (ch === 0x20/* Space */) {
	        state.lineIndent++;
	        ch = state.input.charCodeAt(++state.position);
	      }
	    } else {
	      break;
	    }
	  }

	  if (checkIndent !== -1 && lineBreaks !== 0 && state.lineIndent < checkIndent) {
	    throwWarning(state, 'deficient indentation');
	  }

	  return lineBreaks;
	}

	function testDocumentSeparator(state) {
	  var _position = state.position,
	      ch;

	  ch = state.input.charCodeAt(_position);

	  // Condition state.position === state.lineStart is tested
	  // in parent on each call, for efficiency. No needs to test here again.
	  if ((ch === 0x2D/* - */ || ch === 0x2E/* . */) &&
	      ch === state.input.charCodeAt(_position + 1) &&
	      ch === state.input.charCodeAt(_position + 2)) {

	    _position += 3;

	    ch = state.input.charCodeAt(_position);

	    if (ch === 0 || is_WS_OR_EOL(ch)) {
	      return true;
	    }
	  }

	  return false;
	}

	function writeFoldedLines(state, count) {
	  if (count === 1) {
	    state.result += ' ';
	  } else if (count > 1) {
	    state.result += common.repeat('\n', count - 1);
	  }
	}


	function readPlainScalar(state, nodeIndent, withinFlowCollection) {
	  var preceding,
	      following,
	      captureStart,
	      captureEnd,
	      hasPendingContent,
	      _line,
	      _lineStart,
	      _lineIndent,
	      _kind = state.kind,
	      _result = state.result,
	      ch;

	  ch = state.input.charCodeAt(state.position);

	  if (is_WS_OR_EOL(ch)      ||
	      is_FLOW_INDICATOR(ch) ||
	      ch === 0x23/* # */    ||
	      ch === 0x26/* & */    ||
	      ch === 0x2A/* * */    ||
	      ch === 0x21/* ! */    ||
	      ch === 0x7C/* | */    ||
	      ch === 0x3E/* > */    ||
	      ch === 0x27/* ' */    ||
	      ch === 0x22/* " */    ||
	      ch === 0x25/* % */    ||
	      ch === 0x40/* @ */    ||
	      ch === 0x60/* ` */) {
	    return false;
	  }

	  if (ch === 0x3F/* ? */ || ch === 0x2D/* - */) {
	    following = state.input.charCodeAt(state.position + 1);

	    if (is_WS_OR_EOL(following) ||
	        withinFlowCollection && is_FLOW_INDICATOR(following)) {
	      return false;
	    }
	  }

	  state.kind = 'scalar';
	  state.result = '';
	  captureStart = captureEnd = state.position;
	  hasPendingContent = false;

	  while (ch !== 0) {
	    if (ch === 0x3A/* : */) {
	      following = state.input.charCodeAt(state.position + 1);

	      if (is_WS_OR_EOL(following) ||
	          withinFlowCollection && is_FLOW_INDICATOR(following)) {
	        break;
	      }

	    } else if (ch === 0x23/* # */) {
	      preceding = state.input.charCodeAt(state.position - 1);

	      if (is_WS_OR_EOL(preceding)) {
	        break;
	      }

	    } else if ((state.position === state.lineStart && testDocumentSeparator(state)) ||
	               withinFlowCollection && is_FLOW_INDICATOR(ch)) {
	      break;

	    } else if (is_EOL(ch)) {
	      _line = state.line;
	      _lineStart = state.lineStart;
	      _lineIndent = state.lineIndent;
	      skipSeparationSpace(state, false, -1);

	      if (state.lineIndent >= nodeIndent) {
	        hasPendingContent = true;
	        ch = state.input.charCodeAt(state.position);
	        continue;
	      } else {
	        state.position = captureEnd;
	        state.line = _line;
	        state.lineStart = _lineStart;
	        state.lineIndent = _lineIndent;
	        break;
	      }
	    }

	    if (hasPendingContent) {
	      captureSegment(state, captureStart, captureEnd, false);
	      writeFoldedLines(state, state.line - _line);
	      captureStart = captureEnd = state.position;
	      hasPendingContent = false;
	    }

	    if (!is_WHITE_SPACE(ch)) {
	      captureEnd = state.position + 1;
	    }

	    ch = state.input.charCodeAt(++state.position);
	  }

	  captureSegment(state, captureStart, captureEnd, false);

	  if (state.result) {
	    return true;
	  }

	  state.kind = _kind;
	  state.result = _result;
	  return false;
	}

	function readSingleQuotedScalar(state, nodeIndent) {
	  var ch,
	      captureStart, captureEnd;

	  ch = state.input.charCodeAt(state.position);

	  if (ch !== 0x27/* ' */) {
	    return false;
	  }

	  state.kind = 'scalar';
	  state.result = '';
	  state.position++;
	  captureStart = captureEnd = state.position;

	  while ((ch = state.input.charCodeAt(state.position)) !== 0) {
	    if (ch === 0x27/* ' */) {
	      captureSegment(state, captureStart, state.position, true);
	      ch = state.input.charCodeAt(++state.position);

	      if (ch === 0x27/* ' */) {
	        captureStart = captureEnd = state.position;
	        state.position++;
	      } else {
	        return true;
	      }

	    } else if (is_EOL(ch)) {
	      captureSegment(state, captureStart, captureEnd, true);
	      writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));
	      captureStart = captureEnd = state.position;

	    } else if (state.position === state.lineStart && testDocumentSeparator(state)) {
	      throwError(state, 'unexpected end of the document within a single quoted scalar');

	    } else {
	      state.position++;
	      captureEnd = state.position;
	    }
	  }

	  throwError(state, 'unexpected end of the stream within a single quoted scalar');
	}

	function readDoubleQuotedScalar(state, nodeIndent) {
	  var captureStart,
	      captureEnd,
	      hexLength,
	      hexResult,
	      tmp,
	      ch;

	  ch = state.input.charCodeAt(state.position);

	  if (ch !== 0x22/* " */) {
	    return false;
	  }

	  state.kind = 'scalar';
	  state.result = '';
	  state.position++;
	  captureStart = captureEnd = state.position;

	  while ((ch = state.input.charCodeAt(state.position)) !== 0) {
	    if (ch === 0x22/* " */) {
	      captureSegment(state, captureStart, state.position, true);
	      state.position++;
	      return true;

	    } else if (ch === 0x5C/* \ */) {
	      captureSegment(state, captureStart, state.position, true);
	      ch = state.input.charCodeAt(++state.position);

	      if (is_EOL(ch)) {
	        skipSeparationSpace(state, false, nodeIndent);

	        // TODO: rework to inline fn with no type cast?
	      } else if (ch < 256 && simpleEscapeCheck[ch]) {
	        state.result += simpleEscapeMap[ch];
	        state.position++;

	      } else if ((tmp = escapedHexLen(ch)) > 0) {
	        hexLength = tmp;
	        hexResult = 0;

	        for (; hexLength > 0; hexLength--) {
	          ch = state.input.charCodeAt(++state.position);

	          if ((tmp = fromHexCode(ch)) >= 0) {
	            hexResult = (hexResult << 4) + tmp;

	          } else {
	            throwError(state, 'expected hexadecimal character');
	          }
	        }

	        state.result += charFromCodepoint(hexResult);

	        state.position++;

	      } else {
	        throwError(state, 'unknown escape sequence');
	      }

	      captureStart = captureEnd = state.position;

	    } else if (is_EOL(ch)) {
	      captureSegment(state, captureStart, captureEnd, true);
	      writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));
	      captureStart = captureEnd = state.position;

	    } else if (state.position === state.lineStart && testDocumentSeparator(state)) {
	      throwError(state, 'unexpected end of the document within a double quoted scalar');

	    } else {
	      state.position++;
	      captureEnd = state.position;
	    }
	  }

	  throwError(state, 'unexpected end of the stream within a double quoted scalar');
	}

	function readFlowCollection(state, nodeIndent) {
	  var readNext = true,
	      _line,
	      _tag     = state.tag,
	      _result,
	      _anchor  = state.anchor,
	      following,
	      terminator,
	      isPair,
	      isExplicitPair,
	      isMapping,
	      overridableKeys = {},
	      keyNode,
	      keyTag,
	      valueNode,
	      ch;

	  ch = state.input.charCodeAt(state.position);

	  if (ch === 0x5B/* [ */) {
	    terminator = 0x5D;/* ] */
	    isMapping = false;
	    _result = [];
	  } else if (ch === 0x7B/* { */) {
	    terminator = 0x7D;/* } */
	    isMapping = true;
	    _result = {};
	  } else {
	    return false;
	  }

	  if (state.anchor !== null) {
	    state.anchorMap[state.anchor] = _result;
	  }

	  ch = state.input.charCodeAt(++state.position);

	  while (ch !== 0) {
	    skipSeparationSpace(state, true, nodeIndent);

	    ch = state.input.charCodeAt(state.position);

	    if (ch === terminator) {
	      state.position++;
	      state.tag = _tag;
	      state.anchor = _anchor;
	      state.kind = isMapping ? 'mapping' : 'sequence';
	      state.result = _result;
	      return true;
	    } else if (!readNext) {
	      throwError(state, 'missed comma between flow collection entries');
	    }

	    keyTag = keyNode = valueNode = null;
	    isPair = isExplicitPair = false;

	    if (ch === 0x3F/* ? */) {
	      following = state.input.charCodeAt(state.position + 1);

	      if (is_WS_OR_EOL(following)) {
	        isPair = isExplicitPair = true;
	        state.position++;
	        skipSeparationSpace(state, true, nodeIndent);
	      }
	    }

	    _line = state.line;
	    composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);
	    keyTag = state.tag;
	    keyNode = state.result;
	    skipSeparationSpace(state, true, nodeIndent);

	    ch = state.input.charCodeAt(state.position);

	    if ((isExplicitPair || state.line === _line) && ch === 0x3A/* : */) {
	      isPair = true;
	      ch = state.input.charCodeAt(++state.position);
	      skipSeparationSpace(state, true, nodeIndent);
	      composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);
	      valueNode = state.result;
	    }

	    if (isMapping) {
	      storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode);
	    } else if (isPair) {
	      _result.push(storeMappingPair(state, null, overridableKeys, keyTag, keyNode, valueNode));
	    } else {
	      _result.push(keyNode);
	    }

	    skipSeparationSpace(state, true, nodeIndent);

	    ch = state.input.charCodeAt(state.position);

	    if (ch === 0x2C/* , */) {
	      readNext = true;
	      ch = state.input.charCodeAt(++state.position);
	    } else {
	      readNext = false;
	    }
	  }

	  throwError(state, 'unexpected end of the stream within a flow collection');
	}

	function readBlockScalar(state, nodeIndent) {
	  var captureStart,
	      folding,
	      chomping       = CHOMPING_CLIP,
	      didReadContent = false,
	      detectedIndent = false,
	      textIndent     = nodeIndent,
	      emptyLines     = 0,
	      atMoreIndented = false,
	      tmp,
	      ch;

	  ch = state.input.charCodeAt(state.position);

	  if (ch === 0x7C/* | */) {
	    folding = false;
	  } else if (ch === 0x3E/* > */) {
	    folding = true;
	  } else {
	    return false;
	  }

	  state.kind = 'scalar';
	  state.result = '';

	  while (ch !== 0) {
	    ch = state.input.charCodeAt(++state.position);

	    if (ch === 0x2B/* + */ || ch === 0x2D/* - */) {
	      if (CHOMPING_CLIP === chomping) {
	        chomping = (ch === 0x2B/* + */) ? CHOMPING_KEEP : CHOMPING_STRIP;
	      } else {
	        throwError(state, 'repeat of a chomping mode identifier');
	      }

	    } else if ((tmp = fromDecimalCode(ch)) >= 0) {
	      if (tmp === 0) {
	        throwError(state, 'bad explicit indentation width of a block scalar; it cannot be less than one');
	      } else if (!detectedIndent) {
	        textIndent = nodeIndent + tmp - 1;
	        detectedIndent = true;
	      } else {
	        throwError(state, 'repeat of an indentation width identifier');
	      }

	    } else {
	      break;
	    }
	  }

	  if (is_WHITE_SPACE(ch)) {
	    do { ch = state.input.charCodeAt(++state.position); }
	    while (is_WHITE_SPACE(ch));

	    if (ch === 0x23/* # */) {
	      do { ch = state.input.charCodeAt(++state.position); }
	      while (!is_EOL(ch) && (ch !== 0));
	    }
	  }

	  while (ch !== 0) {
	    readLineBreak(state);
	    state.lineIndent = 0;

	    ch = state.input.charCodeAt(state.position);

	    while ((!detectedIndent || state.lineIndent < textIndent) &&
	           (ch === 0x20/* Space */)) {
	      state.lineIndent++;
	      ch = state.input.charCodeAt(++state.position);
	    }

	    if (!detectedIndent && state.lineIndent > textIndent) {
	      textIndent = state.lineIndent;
	    }

	    if (is_EOL(ch)) {
	      emptyLines++;
	      continue;
	    }

	    // End of the scalar.
	    if (state.lineIndent < textIndent) {

	      // Perform the chomping.
	      if (chomping === CHOMPING_KEEP) {
	        state.result += common.repeat('\n', didReadContent ? 1 + emptyLines : emptyLines);
	      } else if (chomping === CHOMPING_CLIP) {
	        if (didReadContent) { // i.e. only if the scalar is not empty.
	          state.result += '\n';
	        }
	      }

	      // Break this `while` cycle and go to the funciton's epilogue.
	      break;
	    }

	    // Folded style: use fancy rules to handle line breaks.
	    if (folding) {

	      // Lines starting with white space characters (more-indented lines) are not folded.
	      if (is_WHITE_SPACE(ch)) {
	        atMoreIndented = true;
	        // except for the first content line (cf. Example 8.1)
	        state.result += common.repeat('\n', didReadContent ? 1 + emptyLines : emptyLines);

	      // End of more-indented block.
	      } else if (atMoreIndented) {
	        atMoreIndented = false;
	        state.result += common.repeat('\n', emptyLines + 1);

	      // Just one line break - perceive as the same line.
	      } else if (emptyLines === 0) {
	        if (didReadContent) { // i.e. only if we have already read some scalar content.
	          state.result += ' ';
	        }

	      // Several line breaks - perceive as different lines.
	      } else {
	        state.result += common.repeat('\n', emptyLines);
	      }

	    // Literal style: just add exact number of line breaks between content lines.
	    } else {
	      // Keep all line breaks except the header line break.
	      state.result += common.repeat('\n', didReadContent ? 1 + emptyLines : emptyLines);
	    }

	    didReadContent = true;
	    detectedIndent = true;
	    emptyLines = 0;
	    captureStart = state.position;

	    while (!is_EOL(ch) && (ch !== 0)) {
	      ch = state.input.charCodeAt(++state.position);
	    }

	    captureSegment(state, captureStart, state.position, false);
	  }

	  return true;
	}

	function readBlockSequence(state, nodeIndent) {
	  var _line,
	      _tag      = state.tag,
	      _anchor   = state.anchor,
	      _result   = [],
	      following,
	      detected  = false,
	      ch;

	  if (state.anchor !== null) {
	    state.anchorMap[state.anchor] = _result;
	  }

	  ch = state.input.charCodeAt(state.position);

	  while (ch !== 0) {

	    if (ch !== 0x2D/* - */) {
	      break;
	    }

	    following = state.input.charCodeAt(state.position + 1);

	    if (!is_WS_OR_EOL(following)) {
	      break;
	    }

	    detected = true;
	    state.position++;

	    if (skipSeparationSpace(state, true, -1)) {
	      if (state.lineIndent <= nodeIndent) {
	        _result.push(null);
	        ch = state.input.charCodeAt(state.position);
	        continue;
	      }
	    }

	    _line = state.line;
	    composeNode(state, nodeIndent, CONTEXT_BLOCK_IN, false, true);
	    _result.push(state.result);
	    skipSeparationSpace(state, true, -1);

	    ch = state.input.charCodeAt(state.position);

	    if ((state.line === _line || state.lineIndent > nodeIndent) && (ch !== 0)) {
	      throwError(state, 'bad indentation of a sequence entry');
	    } else if (state.lineIndent < nodeIndent) {
	      break;
	    }
	  }

	  if (detected) {
	    state.tag = _tag;
	    state.anchor = _anchor;
	    state.kind = 'sequence';
	    state.result = _result;
	    return true;
	  }
	  return false;
	}

	function readBlockMapping(state, nodeIndent, flowIndent) {
	  var following,
	      allowCompact,
	      _line,
	      _tag          = state.tag,
	      _anchor       = state.anchor,
	      _result       = {},
	      overridableKeys = {},
	      keyTag        = null,
	      keyNode       = null,
	      valueNode     = null,
	      atExplicitKey = false,
	      detected      = false,
	      ch;

	  if (state.anchor !== null) {
	    state.anchorMap[state.anchor] = _result;
	  }

	  ch = state.input.charCodeAt(state.position);

	  while (ch !== 0) {
	    following = state.input.charCodeAt(state.position + 1);
	    _line = state.line; // Save the current line.

	    //
	    // Explicit notation case. There are two separate blocks:
	    // first for the key (denoted by "?") and second for the value (denoted by ":")
	    //
	    if ((ch === 0x3F/* ? */ || ch === 0x3A/* : */) && is_WS_OR_EOL(following)) {

	      if (ch === 0x3F/* ? */) {
	        if (atExplicitKey) {
	          storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null);
	          keyTag = keyNode = valueNode = null;
	        }

	        detected = true;
	        atExplicitKey = true;
	        allowCompact = true;

	      } else if (atExplicitKey) {
	        // i.e. 0x3A/* : */ === character after the explicit key.
	        atExplicitKey = false;
	        allowCompact = true;

	      } else {
	        throwError(state, 'incomplete explicit mapping pair; a key node is missed');
	      }

	      state.position += 1;
	      ch = following;

	    //
	    // Implicit notation case. Flow-style node as the key first, then ":", and the value.
	    //
	    } else if (composeNode(state, flowIndent, CONTEXT_FLOW_OUT, false, true)) {

	      if (state.line === _line) {
	        ch = state.input.charCodeAt(state.position);

	        while (is_WHITE_SPACE(ch)) {
	          ch = state.input.charCodeAt(++state.position);
	        }

	        if (ch === 0x3A/* : */) {
	          ch = state.input.charCodeAt(++state.position);

	          if (!is_WS_OR_EOL(ch)) {
	            throwError(state, 'a whitespace character is expected after the key-value separator within a block mapping');
	          }

	          if (atExplicitKey) {
	            storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null);
	            keyTag = keyNode = valueNode = null;
	          }

	          detected = true;
	          atExplicitKey = false;
	          allowCompact = false;
	          keyTag = state.tag;
	          keyNode = state.result;

	        } else if (detected) {
	          throwError(state, 'can not read an implicit mapping pair; a colon is missed');

	        } else {
	          state.tag = _tag;
	          state.anchor = _anchor;
	          return true; // Keep the result of `composeNode`.
	        }

	      } else if (detected) {
	        throwError(state, 'can not read a block mapping entry; a multiline key may not be an implicit key');

	      } else {
	        state.tag = _tag;
	        state.anchor = _anchor;
	        return true; // Keep the result of `composeNode`.
	      }

	    } else {
	      break; // Reading is done. Go to the epilogue.
	    }

	    //
	    // Common reading code for both explicit and implicit notations.
	    //
	    if (state.line === _line || state.lineIndent > nodeIndent) {
	      if (composeNode(state, nodeIndent, CONTEXT_BLOCK_OUT, true, allowCompact)) {
	        if (atExplicitKey) {
	          keyNode = state.result;
	        } else {
	          valueNode = state.result;
	        }
	      }

	      if (!atExplicitKey) {
	        storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode);
	        keyTag = keyNode = valueNode = null;
	      }

	      skipSeparationSpace(state, true, -1);
	      ch = state.input.charCodeAt(state.position);
	    }

	    if (state.lineIndent > nodeIndent && (ch !== 0)) {
	      throwError(state, 'bad indentation of a mapping entry');
	    } else if (state.lineIndent < nodeIndent) {
	      break;
	    }
	  }

	  //
	  // Epilogue.
	  //

	  // Special case: last mapping's node contains only the key in explicit notation.
	  if (atExplicitKey) {
	    storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null);
	  }

	  // Expose the resulting mapping.
	  if (detected) {
	    state.tag = _tag;
	    state.anchor = _anchor;
	    state.kind = 'mapping';
	    state.result = _result;
	  }

	  return detected;
	}

	function readTagProperty(state) {
	  var _position,
	      isVerbatim = false,
	      isNamed    = false,
	      tagHandle,
	      tagName,
	      ch;

	  ch = state.input.charCodeAt(state.position);

	  if (ch !== 0x21/* ! */) return false;

	  if (state.tag !== null) {
	    throwError(state, 'duplication of a tag property');
	  }

	  ch = state.input.charCodeAt(++state.position);

	  if (ch === 0x3C/* < */) {
	    isVerbatim = true;
	    ch = state.input.charCodeAt(++state.position);

	  } else if (ch === 0x21/* ! */) {
	    isNamed = true;
	    tagHandle = '!!';
	    ch = state.input.charCodeAt(++state.position);

	  } else {
	    tagHandle = '!';
	  }

	  _position = state.position;

	  if (isVerbatim) {
	    do { ch = state.input.charCodeAt(++state.position); }
	    while (ch !== 0 && ch !== 0x3E/* > */);

	    if (state.position < state.length) {
	      tagName = state.input.slice(_position, state.position);
	      ch = state.input.charCodeAt(++state.position);
	    } else {
	      throwError(state, 'unexpected end of the stream within a verbatim tag');
	    }
	  } else {
	    while (ch !== 0 && !is_WS_OR_EOL(ch)) {

	      if (ch === 0x21/* ! */) {
	        if (!isNamed) {
	          tagHandle = state.input.slice(_position - 1, state.position + 1);

	          if (!PATTERN_TAG_HANDLE.test(tagHandle)) {
	            throwError(state, 'named tag handle cannot contain such characters');
	          }

	          isNamed = true;
	          _position = state.position + 1;
	        } else {
	          throwError(state, 'tag suffix cannot contain exclamation marks');
	        }
	      }

	      ch = state.input.charCodeAt(++state.position);
	    }

	    tagName = state.input.slice(_position, state.position);

	    if (PATTERN_FLOW_INDICATORS.test(tagName)) {
	      throwError(state, 'tag suffix cannot contain flow indicator characters');
	    }
	  }

	  if (tagName && !PATTERN_TAG_URI.test(tagName)) {
	    throwError(state, 'tag name cannot contain such characters: ' + tagName);
	  }

	  if (isVerbatim) {
	    state.tag = tagName;

	  } else if (_hasOwnProperty.call(state.tagMap, tagHandle)) {
	    state.tag = state.tagMap[tagHandle] + tagName;

	  } else if (tagHandle === '!') {
	    state.tag = '!' + tagName;

	  } else if (tagHandle === '!!') {
	    state.tag = 'tag:yaml.org,2002:' + tagName;

	  } else {
	    throwError(state, 'undeclared tag handle "' + tagHandle + '"');
	  }

	  return true;
	}

	function readAnchorProperty(state) {
	  var _position,
	      ch;

	  ch = state.input.charCodeAt(state.position);

	  if (ch !== 0x26/* & */) return false;

	  if (state.anchor !== null) {
	    throwError(state, 'duplication of an anchor property');
	  }

	  ch = state.input.charCodeAt(++state.position);
	  _position = state.position;

	  while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {
	    ch = state.input.charCodeAt(++state.position);
	  }

	  if (state.position === _position) {
	    throwError(state, 'name of an anchor node must contain at least one character');
	  }

	  state.anchor = state.input.slice(_position, state.position);
	  return true;
	}

	function readAlias(state) {
	  var _position, alias,
	      ch;

	  ch = state.input.charCodeAt(state.position);

	  if (ch !== 0x2A/* * */) return false;

	  ch = state.input.charCodeAt(++state.position);
	  _position = state.position;

	  while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {
	    ch = state.input.charCodeAt(++state.position);
	  }

	  if (state.position === _position) {
	    throwError(state, 'name of an alias node must contain at least one character');
	  }

	  alias = state.input.slice(_position, state.position);

	  if (!state.anchorMap.hasOwnProperty(alias)) {
	    throwError(state, 'unidentified alias "' + alias + '"');
	  }

	  state.result = state.anchorMap[alias];
	  skipSeparationSpace(state, true, -1);
	  return true;
	}

	function composeNode(state, parentIndent, nodeContext, allowToSeek, allowCompact) {
	  var allowBlockStyles,
	      allowBlockScalars,
	      allowBlockCollections,
	      indentStatus = 1, // 1: this>parent, 0: this=parent, -1: this<parent
	      atNewLine  = false,
	      hasContent = false,
	      typeIndex,
	      typeQuantity,
	      type,
	      flowIndent,
	      blockIndent;

	  if (state.listener !== null) {
	    state.listener('open', state);
	  }

	  state.tag    = null;
	  state.anchor = null;
	  state.kind   = null;
	  state.result = null;

	  allowBlockStyles = allowBlockScalars = allowBlockCollections =
	    CONTEXT_BLOCK_OUT === nodeContext ||
	    CONTEXT_BLOCK_IN  === nodeContext;

	  if (allowToSeek) {
	    if (skipSeparationSpace(state, true, -1)) {
	      atNewLine = true;

	      if (state.lineIndent > parentIndent) {
	        indentStatus = 1;
	      } else if (state.lineIndent === parentIndent) {
	        indentStatus = 0;
	      } else if (state.lineIndent < parentIndent) {
	        indentStatus = -1;
	      }
	    }
	  }

	  if (indentStatus === 1) {
	    while (readTagProperty(state) || readAnchorProperty(state)) {
	      if (skipSeparationSpace(state, true, -1)) {
	        atNewLine = true;
	        allowBlockCollections = allowBlockStyles;

	        if (state.lineIndent > parentIndent) {
	          indentStatus = 1;
	        } else if (state.lineIndent === parentIndent) {
	          indentStatus = 0;
	        } else if (state.lineIndent < parentIndent) {
	          indentStatus = -1;
	        }
	      } else {
	        allowBlockCollections = false;
	      }
	    }
	  }

	  if (allowBlockCollections) {
	    allowBlockCollections = atNewLine || allowCompact;
	  }

	  if (indentStatus === 1 || CONTEXT_BLOCK_OUT === nodeContext) {
	    if (CONTEXT_FLOW_IN === nodeContext || CONTEXT_FLOW_OUT === nodeContext) {
	      flowIndent = parentIndent;
	    } else {
	      flowIndent = parentIndent + 1;
	    }

	    blockIndent = state.position - state.lineStart;

	    if (indentStatus === 1) {
	      if (allowBlockCollections &&
	          (readBlockSequence(state, blockIndent) ||
	           readBlockMapping(state, blockIndent, flowIndent)) ||
	          readFlowCollection(state, flowIndent)) {
	        hasContent = true;
	      } else {
	        if ((allowBlockScalars && readBlockScalar(state, flowIndent)) ||
	            readSingleQuotedScalar(state, flowIndent) ||
	            readDoubleQuotedScalar(state, flowIndent)) {
	          hasContent = true;

	        } else if (readAlias(state)) {
	          hasContent = true;

	          if (state.tag !== null || state.anchor !== null) {
	            throwError(state, 'alias node should not have any properties');
	          }

	        } else if (readPlainScalar(state, flowIndent, CONTEXT_FLOW_IN === nodeContext)) {
	          hasContent = true;

	          if (state.tag === null) {
	            state.tag = '?';
	          }
	        }

	        if (state.anchor !== null) {
	          state.anchorMap[state.anchor] = state.result;
	        }
	      }
	    } else if (indentStatus === 0) {
	      // Special case: block sequences are allowed to have same indentation level as the parent.
	      // http://www.yaml.org/spec/1.2/spec.html#id2799784
	      hasContent = allowBlockCollections && readBlockSequence(state, blockIndent);
	    }
	  }

	  if (state.tag !== null && state.tag !== '!') {
	    if (state.tag === '?') {
	      for (typeIndex = 0, typeQuantity = state.implicitTypes.length;
	           typeIndex < typeQuantity;
	           typeIndex += 1) {
	        type = state.implicitTypes[typeIndex];

	        // Implicit resolving is not allowed for non-scalar types, and '?'
	        // non-specific tag is only assigned to plain scalars. So, it isn't
	        // needed to check for 'kind' conformity.

	        if (type.resolve(state.result)) { // `state.result` updated in resolver if matched
	          state.result = type.construct(state.result);
	          state.tag = type.tag;
	          if (state.anchor !== null) {
	            state.anchorMap[state.anchor] = state.result;
	          }
	          break;
	        }
	      }
	    } else if (_hasOwnProperty.call(state.typeMap, state.tag)) {
	      type = state.typeMap[state.tag];

	      if (state.result !== null && type.kind !== state.kind) {
	        throwError(state, 'unacceptable node kind for !<' + state.tag + '> tag; it should be "' + type.kind + '", not "' + state.kind + '"');
	      }

	      if (!type.resolve(state.result)) { // `state.result` updated in resolver if matched
	        throwError(state, 'cannot resolve a node with !<' + state.tag + '> explicit tag');
	      } else {
	        state.result = type.construct(state.result);
	        if (state.anchor !== null) {
	          state.anchorMap[state.anchor] = state.result;
	        }
	      }
	    } else {
	      throwError(state, 'unknown tag !<' + state.tag + '>');
	    }
	  }

	  if (state.listener !== null) {
	    state.listener('close', state);
	  }
	  return state.tag !== null ||  state.anchor !== null || hasContent;
	}

	function readDocument(state) {
	  var documentStart = state.position,
	      _position,
	      directiveName,
	      directiveArgs,
	      hasDirectives = false,
	      ch;

	  state.version = null;
	  state.checkLineBreaks = state.legacy;
	  state.tagMap = {};
	  state.anchorMap = {};

	  while ((ch = state.input.charCodeAt(state.position)) !== 0) {
	    skipSeparationSpace(state, true, -1);

	    ch = state.input.charCodeAt(state.position);

	    if (state.lineIndent > 0 || ch !== 0x25/* % */) {
	      break;
	    }

	    hasDirectives = true;
	    ch = state.input.charCodeAt(++state.position);
	    _position = state.position;

	    while (ch !== 0 && !is_WS_OR_EOL(ch)) {
	      ch = state.input.charCodeAt(++state.position);
	    }

	    directiveName = state.input.slice(_position, state.position);
	    directiveArgs = [];

	    if (directiveName.length < 1) {
	      throwError(state, 'directive name must not be less than one character in length');
	    }

	    while (ch !== 0) {
	      while (is_WHITE_SPACE(ch)) {
	        ch = state.input.charCodeAt(++state.position);
	      }

	      if (ch === 0x23/* # */) {
	        do { ch = state.input.charCodeAt(++state.position); }
	        while (ch !== 0 && !is_EOL(ch));
	        break;
	      }

	      if (is_EOL(ch)) break;

	      _position = state.position;

	      while (ch !== 0 && !is_WS_OR_EOL(ch)) {
	        ch = state.input.charCodeAt(++state.position);
	      }

	      directiveArgs.push(state.input.slice(_position, state.position));
	    }

	    if (ch !== 0) readLineBreak(state);

	    if (_hasOwnProperty.call(directiveHandlers, directiveName)) {
	      directiveHandlers[directiveName](state, directiveName, directiveArgs);
	    } else {
	      throwWarning(state, 'unknown document directive "' + directiveName + '"');
	    }
	  }

	  skipSeparationSpace(state, true, -1);

	  if (state.lineIndent === 0 &&
	      state.input.charCodeAt(state.position)     === 0x2D/* - */ &&
	      state.input.charCodeAt(state.position + 1) === 0x2D/* - */ &&
	      state.input.charCodeAt(state.position + 2) === 0x2D/* - */) {
	    state.position += 3;
	    skipSeparationSpace(state, true, -1);

	  } else if (hasDirectives) {
	    throwError(state, 'directives end mark is expected');
	  }

	  composeNode(state, state.lineIndent - 1, CONTEXT_BLOCK_OUT, false, true);
	  skipSeparationSpace(state, true, -1);

	  if (state.checkLineBreaks &&
	      PATTERN_NON_ASCII_LINE_BREAKS.test(state.input.slice(documentStart, state.position))) {
	    throwWarning(state, 'non-ASCII line breaks are interpreted as content');
	  }

	  state.documents.push(state.result);

	  if (state.position === state.lineStart && testDocumentSeparator(state)) {

	    if (state.input.charCodeAt(state.position) === 0x2E/* . */) {
	      state.position += 3;
	      skipSeparationSpace(state, true, -1);
	    }
	    return;
	  }

	  if (state.position < (state.length - 1)) {
	    throwError(state, 'end of the stream or a document separator is expected');
	  } else {
	    return;
	  }
	}


	function loadDocuments(input, options) {
	  input = String(input);
	  options = options || {};

	  if (input.length !== 0) {

	    // Add tailing `\n` if not exists
	    if (input.charCodeAt(input.length - 1) !== 0x0A/* LF */ &&
	        input.charCodeAt(input.length - 1) !== 0x0D/* CR */) {
	      input += '\n';
	    }

	    // Strip BOM
	    if (input.charCodeAt(0) === 0xFEFF) {
	      input = input.slice(1);
	    }
	  }

	  var state = new State(input, options);

	  // Use 0 as string terminator. That significantly simplifies bounds check.
	  state.input += '\0';

	  while (state.input.charCodeAt(state.position) === 0x20/* Space */) {
	    state.lineIndent += 1;
	    state.position += 1;
	  }

	  while (state.position < (state.length - 1)) {
	    readDocument(state);
	  }

	  return state.documents;
	}


	function loadAll(input, iterator, options) {
	  var documents = loadDocuments(input, options), index, length;

	  for (index = 0, length = documents.length; index < length; index += 1) {
	    iterator(documents[index]);
	  }
	}


	function load(input, options) {
	  var documents = loadDocuments(input, options);

	  if (documents.length === 0) {
	    /*eslint-disable no-undefined*/
	    return undefined;
	  } else if (documents.length === 1) {
	    return documents[0];
	  }
	  throw new YAMLException('expected a single document in the stream, but found more');
	}


	function safeLoadAll(input, output, options) {
	  loadAll(input, output, common.extend({ schema: DEFAULT_SAFE_SCHEMA }, options));
	}


	function safeLoad(input, options) {
	  return load(input, common.extend({ schema: DEFAULT_SAFE_SCHEMA }, options));
	}


	module.exports.loadAll     = loadAll;
	module.exports.load        = load;
	module.exports.safeLoadAll = safeLoadAll;
	module.exports.safeLoad    = safeLoad;


/***/ },
/* 240 */
/***/ function(module, exports) {

	'use strict';


	function isNothing(subject) {
	  return (typeof subject === 'undefined') || (subject === null);
	}


	function isObject(subject) {
	  return (typeof subject === 'object') && (subject !== null);
	}


	function toArray(sequence) {
	  if (Array.isArray(sequence)) return sequence;
	  else if (isNothing(sequence)) return [];

	  return [ sequence ];
	}


	function extend(target, source) {
	  var index, length, key, sourceKeys;

	  if (source) {
	    sourceKeys = Object.keys(source);

	    for (index = 0, length = sourceKeys.length; index < length; index += 1) {
	      key = sourceKeys[index];
	      target[key] = source[key];
	    }
	  }

	  return target;
	}


	function repeat(string, count) {
	  var result = '', cycle;

	  for (cycle = 0; cycle < count; cycle += 1) {
	    result += string;
	  }

	  return result;
	}


	function isNegativeZero(number) {
	  return (number === 0) && (Number.NEGATIVE_INFINITY === 1 / number);
	}


	module.exports.isNothing      = isNothing;
	module.exports.isObject       = isObject;
	module.exports.toArray        = toArray;
	module.exports.repeat         = repeat;
	module.exports.isNegativeZero = isNegativeZero;
	module.exports.extend         = extend;


/***/ },
/* 241 */
/***/ function(module, exports) {

	// YAML error class. http://stackoverflow.com/questions/8458984
	//
	'use strict';

	function YAMLException(reason, mark) {
	  // Super constructor
	  Error.call(this);

	  // Include stack trace in error object
	  if (Error.captureStackTrace) {
	    // Chrome and NodeJS
	    Error.captureStackTrace(this, this.constructor);
	  } else {
	    // FF, IE 10+ and Safari 6+. Fallback for others
	    this.stack = (new Error()).stack || '';
	  }

	  this.name = 'YAMLException';
	  this.reason = reason;
	  this.mark = mark;
	  this.message = (this.reason || '(unknown reason)') + (this.mark ? ' ' + this.mark.toString() : '');
	}


	// Inherit from Error
	YAMLException.prototype = Object.create(Error.prototype);
	YAMLException.prototype.constructor = YAMLException;


	YAMLException.prototype.toString = function toString(compact) {
	  var result = this.name + ': ';

	  result += this.reason || '(unknown reason)';

	  if (!compact && this.mark) {
	    result += ' ' + this.mark.toString();
	  }

	  return result;
	};


	module.exports = YAMLException;


/***/ },
/* 242 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';


	var common = __webpack_require__(240);


	function Mark(name, buffer, position, line, column) {
	  this.name     = name;
	  this.buffer   = buffer;
	  this.position = position;
	  this.line     = line;
	  this.column   = column;
	}


	Mark.prototype.getSnippet = function getSnippet(indent, maxLength) {
	  var head, start, tail, end, snippet;

	  if (!this.buffer) return null;

	  indent = indent || 4;
	  maxLength = maxLength || 75;

	  head = '';
	  start = this.position;

	  while (start > 0 && '\x00\r\n\x85\u2028\u2029'.indexOf(this.buffer.charAt(start - 1)) === -1) {
	    start -= 1;
	    if (this.position - start > (maxLength / 2 - 1)) {
	      head = ' ... ';
	      start += 5;
	      break;
	    }
	  }

	  tail = '';
	  end = this.position;

	  while (end < this.buffer.length && '\x00\r\n\x85\u2028\u2029'.indexOf(this.buffer.charAt(end)) === -1) {
	    end += 1;
	    if (end - this.position > (maxLength / 2 - 1)) {
	      tail = ' ... ';
	      end -= 5;
	      break;
	    }
	  }

	  snippet = this.buffer.slice(start, end);

	  return common.repeat(' ', indent) + head + snippet + tail + '\n' +
	         common.repeat(' ', indent + this.position - start + head.length) + '^';
	};


	Mark.prototype.toString = function toString(compact) {
	  var snippet, where = '';

	  if (this.name) {
	    where += 'in "' + this.name + '" ';
	  }

	  where += 'at line ' + (this.line + 1) + ', column ' + (this.column + 1);

	  if (!compact) {
	    snippet = this.getSnippet();

	    if (snippet) {
	      where += ':\n' + snippet;
	    }
	  }

	  return where;
	};


	module.exports = Mark;


/***/ },
/* 243 */
/***/ function(module, exports, __webpack_require__) {

	// JS-YAML's default schema for `safeLoad` function.
	// It is not described in the YAML specification.
	//
	// This schema is based on standard YAML's Core schema and includes most of
	// extra types described at YAML tag repository. (http://yaml.org/type/)


	'use strict';


	var Schema = __webpack_require__(244);


	module.exports = new Schema({
	  include: [
	    __webpack_require__(246)
	  ],
	  implicit: [
	    __webpack_require__(256),
	    __webpack_require__(257)
	  ],
	  explicit: [
	    __webpack_require__(258),
	    __webpack_require__(263),
	    __webpack_require__(264),
	    __webpack_require__(265)
	  ]
	});


/***/ },
/* 244 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	/*eslint-disable max-len*/

	var common        = __webpack_require__(240);
	var YAMLException = __webpack_require__(241);
	var Type          = __webpack_require__(245);


	function compileList(schema, name, result) {
	  var exclude = [];

	  schema.include.forEach(function (includedSchema) {
	    result = compileList(includedSchema, name, result);
	  });

	  schema[name].forEach(function (currentType) {
	    result.forEach(function (previousType, previousIndex) {
	      if (previousType.tag === currentType.tag) {
	        exclude.push(previousIndex);
	      }
	    });

	    result.push(currentType);
	  });

	  return result.filter(function (type, index) {
	    return exclude.indexOf(index) === -1;
	  });
	}


	function compileMap(/* lists... */) {
	  var result = {}, index, length;

	  function collectType(type) {
	    result[type.tag] = type;
	  }

	  for (index = 0, length = arguments.length; index < length; index += 1) {
	    arguments[index].forEach(collectType);
	  }

	  return result;
	}


	function Schema(definition) {
	  this.include  = definition.include  || [];
	  this.implicit = definition.implicit || [];
	  this.explicit = definition.explicit || [];

	  this.implicit.forEach(function (type) {
	    if (type.loadKind && type.loadKind !== 'scalar') {
	      throw new YAMLException('There is a non-scalar type in the implicit list of a schema. Implicit resolving of such types is not supported.');
	    }
	  });

	  this.compiledImplicit = compileList(this, 'implicit', []);
	  this.compiledExplicit = compileList(this, 'explicit', []);
	  this.compiledTypeMap  = compileMap(this.compiledImplicit, this.compiledExplicit);
	}


	Schema.DEFAULT = null;


	Schema.create = function createSchema() {
	  var schemas, types;

	  switch (arguments.length) {
	    case 1:
	      schemas = Schema.DEFAULT;
	      types = arguments[0];
	      break;

	    case 2:
	      schemas = arguments[0];
	      types = arguments[1];
	      break;

	    default:
	      throw new YAMLException('Wrong number of arguments for Schema.create function');
	  }

	  schemas = common.toArray(schemas);
	  types = common.toArray(types);

	  if (!schemas.every(function (schema) { return schema instanceof Schema; })) {
	    throw new YAMLException('Specified list of super schemas (or a single Schema object) contains a non-Schema object.');
	  }

	  if (!types.every(function (type) { return type instanceof Type; })) {
	    throw new YAMLException('Specified list of YAML types (or a single Type object) contains a non-Type object.');
	  }

	  return new Schema({
	    include: schemas,
	    explicit: types
	  });
	};


	module.exports = Schema;


/***/ },
/* 245 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var YAMLException = __webpack_require__(241);

	var TYPE_CONSTRUCTOR_OPTIONS = [
	  'kind',
	  'resolve',
	  'construct',
	  'instanceOf',
	  'predicate',
	  'represent',
	  'defaultStyle',
	  'styleAliases'
	];

	var YAML_NODE_KINDS = [
	  'scalar',
	  'sequence',
	  'mapping'
	];

	function compileStyleAliases(map) {
	  var result = {};

	  if (map !== null) {
	    Object.keys(map).forEach(function (style) {
	      map[style].forEach(function (alias) {
	        result[String(alias)] = style;
	      });
	    });
	  }

	  return result;
	}

	function Type(tag, options) {
	  options = options || {};

	  Object.keys(options).forEach(function (name) {
	    if (TYPE_CONSTRUCTOR_OPTIONS.indexOf(name) === -1) {
	      throw new YAMLException('Unknown option "' + name + '" is met in definition of "' + tag + '" YAML type.');
	    }
	  });

	  // TODO: Add tag format check.
	  this.tag          = tag;
	  this.kind         = options['kind']         || null;
	  this.resolve      = options['resolve']      || function () { return true; };
	  this.construct    = options['construct']    || function (data) { return data; };
	  this.instanceOf   = options['instanceOf']   || null;
	  this.predicate    = options['predicate']    || null;
	  this.represent    = options['represent']    || null;
	  this.defaultStyle = options['defaultStyle'] || null;
	  this.styleAliases = compileStyleAliases(options['styleAliases'] || null);

	  if (YAML_NODE_KINDS.indexOf(this.kind) === -1) {
	    throw new YAMLException('Unknown kind "' + this.kind + '" is specified for "' + tag + '" YAML type.');
	  }
	}

	module.exports = Type;


/***/ },
/* 246 */
/***/ function(module, exports, __webpack_require__) {

	// Standard YAML's Core schema.
	// http://www.yaml.org/spec/1.2/spec.html#id2804923
	//
	// NOTE: JS-YAML does not support schema-specific tag resolution restrictions.
	// So, Core schema has no distinctions from JSON schema is JS-YAML.


	'use strict';


	var Schema = __webpack_require__(244);


	module.exports = new Schema({
	  include: [
	    __webpack_require__(247)
	  ]
	});


/***/ },
/* 247 */
/***/ function(module, exports, __webpack_require__) {

	// Standard YAML's JSON schema.
	// http://www.yaml.org/spec/1.2/spec.html#id2803231
	//
	// NOTE: JS-YAML does not support schema-specific tag resolution restrictions.
	// So, this schema is not such strict as defined in the YAML specification.
	// It allows numbers in binary notaion, use `Null` and `NULL` as `null`, etc.


	'use strict';


	var Schema = __webpack_require__(244);


	module.exports = new Schema({
	  include: [
	    __webpack_require__(248)
	  ],
	  implicit: [
	    __webpack_require__(252),
	    __webpack_require__(253),
	    __webpack_require__(254),
	    __webpack_require__(255)
	  ]
	});


/***/ },
/* 248 */
/***/ function(module, exports, __webpack_require__) {

	// Standard YAML's Failsafe schema.
	// http://www.yaml.org/spec/1.2/spec.html#id2802346


	'use strict';


	var Schema = __webpack_require__(244);


	module.exports = new Schema({
	  explicit: [
	    __webpack_require__(249),
	    __webpack_require__(250),
	    __webpack_require__(251)
	  ]
	});


/***/ },
/* 249 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Type = __webpack_require__(245);

	module.exports = new Type('tag:yaml.org,2002:str', {
	  kind: 'scalar',
	  construct: function (data) { return data !== null ? data : ''; }
	});


/***/ },
/* 250 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Type = __webpack_require__(245);

	module.exports = new Type('tag:yaml.org,2002:seq', {
	  kind: 'sequence',
	  construct: function (data) { return data !== null ? data : []; }
	});


/***/ },
/* 251 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Type = __webpack_require__(245);

	module.exports = new Type('tag:yaml.org,2002:map', {
	  kind: 'mapping',
	  construct: function (data) { return data !== null ? data : {}; }
	});


/***/ },
/* 252 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Type = __webpack_require__(245);

	function resolveYamlNull(data) {
	  if (data === null) return true;

	  var max = data.length;

	  return (max === 1 && data === '~') ||
	         (max === 4 && (data === 'null' || data === 'Null' || data === 'NULL'));
	}

	function constructYamlNull() {
	  return null;
	}

	function isNull(object) {
	  return object === null;
	}

	module.exports = new Type('tag:yaml.org,2002:null', {
	  kind: 'scalar',
	  resolve: resolveYamlNull,
	  construct: constructYamlNull,
	  predicate: isNull,
	  represent: {
	    canonical: function () { return '~';    },
	    lowercase: function () { return 'null'; },
	    uppercase: function () { return 'NULL'; },
	    camelcase: function () { return 'Null'; }
	  },
	  defaultStyle: 'lowercase'
	});


/***/ },
/* 253 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Type = __webpack_require__(245);

	function resolveYamlBoolean(data) {
	  if (data === null) return false;

	  var max = data.length;

	  return (max === 4 && (data === 'true' || data === 'True' || data === 'TRUE')) ||
	         (max === 5 && (data === 'false' || data === 'False' || data === 'FALSE'));
	}

	function constructYamlBoolean(data) {
	  return data === 'true' ||
	         data === 'True' ||
	         data === 'TRUE';
	}

	function isBoolean(object) {
	  return Object.prototype.toString.call(object) === '[object Boolean]';
	}

	module.exports = new Type('tag:yaml.org,2002:bool', {
	  kind: 'scalar',
	  resolve: resolveYamlBoolean,
	  construct: constructYamlBoolean,
	  predicate: isBoolean,
	  represent: {
	    lowercase: function (object) { return object ? 'true' : 'false'; },
	    uppercase: function (object) { return object ? 'TRUE' : 'FALSE'; },
	    camelcase: function (object) { return object ? 'True' : 'False'; }
	  },
	  defaultStyle: 'lowercase'
	});


/***/ },
/* 254 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var common = __webpack_require__(240);
	var Type   = __webpack_require__(245);

	function isHexCode(c) {
	  return ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) ||
	         ((0x41/* A */ <= c) && (c <= 0x46/* F */)) ||
	         ((0x61/* a */ <= c) && (c <= 0x66/* f */));
	}

	function isOctCode(c) {
	  return ((0x30/* 0 */ <= c) && (c <= 0x37/* 7 */));
	}

	function isDecCode(c) {
	  return ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */));
	}

	function resolveYamlInteger(data) {
	  if (data === null) return false;

	  var max = data.length,
	      index = 0,
	      hasDigits = false,
	      ch;

	  if (!max) return false;

	  ch = data[index];

	  // sign
	  if (ch === '-' || ch === '+') {
	    ch = data[++index];
	  }

	  if (ch === '0') {
	    // 0
	    if (index + 1 === max) return true;
	    ch = data[++index];

	    // base 2, base 8, base 16

	    if (ch === 'b') {
	      // base 2
	      index++;

	      for (; index < max; index++) {
	        ch = data[index];
	        if (ch === '_') continue;
	        if (ch !== '0' && ch !== '1') return false;
	        hasDigits = true;
	      }
	      return hasDigits;
	    }


	    if (ch === 'x') {
	      // base 16
	      index++;

	      for (; index < max; index++) {
	        ch = data[index];
	        if (ch === '_') continue;
	        if (!isHexCode(data.charCodeAt(index))) return false;
	        hasDigits = true;
	      }
	      return hasDigits;
	    }

	    // base 8
	    for (; index < max; index++) {
	      ch = data[index];
	      if (ch === '_') continue;
	      if (!isOctCode(data.charCodeAt(index))) return false;
	      hasDigits = true;
	    }
	    return hasDigits;
	  }

	  // base 10 (except 0) or base 60

	  for (; index < max; index++) {
	    ch = data[index];
	    if (ch === '_') continue;
	    if (ch === ':') break;
	    if (!isDecCode(data.charCodeAt(index))) {
	      return false;
	    }
	    hasDigits = true;
	  }

	  if (!hasDigits) return false;

	  // if !base60 - done;
	  if (ch !== ':') return true;

	  // base60 almost not used, no needs to optimize
	  return /^(:[0-5]?[0-9])+$/.test(data.slice(index));
	}

	function constructYamlInteger(data) {
	  var value = data, sign = 1, ch, base, digits = [];

	  if (value.indexOf('_') !== -1) {
	    value = value.replace(/_/g, '');
	  }

	  ch = value[0];

	  if (ch === '-' || ch === '+') {
	    if (ch === '-') sign = -1;
	    value = value.slice(1);
	    ch = value[0];
	  }

	  if (value === '0') return 0;

	  if (ch === '0') {
	    if (value[1] === 'b') return sign * parseInt(value.slice(2), 2);
	    if (value[1] === 'x') return sign * parseInt(value, 16);
	    return sign * parseInt(value, 8);
	  }

	  if (value.indexOf(':') !== -1) {
	    value.split(':').forEach(function (v) {
	      digits.unshift(parseInt(v, 10));
	    });

	    value = 0;
	    base = 1;

	    digits.forEach(function (d) {
	      value += (d * base);
	      base *= 60;
	    });

	    return sign * value;

	  }

	  return sign * parseInt(value, 10);
	}

	function isInteger(object) {
	  return (Object.prototype.toString.call(object)) === '[object Number]' &&
	         (object % 1 === 0 && !common.isNegativeZero(object));
	}

	module.exports = new Type('tag:yaml.org,2002:int', {
	  kind: 'scalar',
	  resolve: resolveYamlInteger,
	  construct: constructYamlInteger,
	  predicate: isInteger,
	  represent: {
	    binary:      function (object) { return '0b' + object.toString(2); },
	    octal:       function (object) { return '0'  + object.toString(8); },
	    decimal:     function (object) { return        object.toString(10); },
	    hexadecimal: function (object) { return '0x' + object.toString(16).toUpperCase(); }
	  },
	  defaultStyle: 'decimal',
	  styleAliases: {
	    binary:      [ 2,  'bin' ],
	    octal:       [ 8,  'oct' ],
	    decimal:     [ 10, 'dec' ],
	    hexadecimal: [ 16, 'hex' ]
	  }
	});


/***/ },
/* 255 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var common = __webpack_require__(240);
	var Type   = __webpack_require__(245);

	var YAML_FLOAT_PATTERN = new RegExp(
	  '^(?:[-+]?(?:[0-9][0-9_]*)\\.[0-9_]*(?:[eE][-+][0-9]+)?' +
	  '|\\.[0-9_]+(?:[eE][-+][0-9]+)?' +
	  '|[-+]?[0-9][0-9_]*(?::[0-5]?[0-9])+\\.[0-9_]*' +
	  '|[-+]?\\.(?:inf|Inf|INF)' +
	  '|\\.(?:nan|NaN|NAN))$');

	function resolveYamlFloat(data) {
	  if (data === null) return false;

	  if (!YAML_FLOAT_PATTERN.test(data)) return false;

	  return true;
	}

	function constructYamlFloat(data) {
	  var value, sign, base, digits;

	  value  = data.replace(/_/g, '').toLowerCase();
	  sign   = value[0] === '-' ? -1 : 1;
	  digits = [];

	  if ('+-'.indexOf(value[0]) >= 0) {
	    value = value.slice(1);
	  }

	  if (value === '.inf') {
	    return (sign === 1) ? Number.POSITIVE_INFINITY : Number.NEGATIVE_INFINITY;

	  } else if (value === '.nan') {
	    return NaN;

	  } else if (value.indexOf(':') >= 0) {
	    value.split(':').forEach(function (v) {
	      digits.unshift(parseFloat(v, 10));
	    });

	    value = 0.0;
	    base = 1;

	    digits.forEach(function (d) {
	      value += d * base;
	      base *= 60;
	    });

	    return sign * value;

	  }
	  return sign * parseFloat(value, 10);
	}


	var SCIENTIFIC_WITHOUT_DOT = /^[-+]?[0-9]+e/;

	function representYamlFloat(object, style) {
	  var res;

	  if (isNaN(object)) {
	    switch (style) {
	      case 'lowercase': return '.nan';
	      case 'uppercase': return '.NAN';
	      case 'camelcase': return '.NaN';
	    }
	  } else if (Number.POSITIVE_INFINITY === object) {
	    switch (style) {
	      case 'lowercase': return '.inf';
	      case 'uppercase': return '.INF';
	      case 'camelcase': return '.Inf';
	    }
	  } else if (Number.NEGATIVE_INFINITY === object) {
	    switch (style) {
	      case 'lowercase': return '-.inf';
	      case 'uppercase': return '-.INF';
	      case 'camelcase': return '-.Inf';
	    }
	  } else if (common.isNegativeZero(object)) {
	    return '-0.0';
	  }

	  res = object.toString(10);

	  // JS stringifier can build scientific format without dots: 5e-100,
	  // while YAML requres dot: 5.e-100. Fix it with simple hack

	  return SCIENTIFIC_WITHOUT_DOT.test(res) ? res.replace('e', '.e') : res;
	}

	function isFloat(object) {
	  return (Object.prototype.toString.call(object) === '[object Number]') &&
	         (object % 1 !== 0 || common.isNegativeZero(object));
	}

	module.exports = new Type('tag:yaml.org,2002:float', {
	  kind: 'scalar',
	  resolve: resolveYamlFloat,
	  construct: constructYamlFloat,
	  predicate: isFloat,
	  represent: representYamlFloat,
	  defaultStyle: 'lowercase'
	});


/***/ },
/* 256 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Type = __webpack_require__(245);

	var YAML_DATE_REGEXP = new RegExp(
	  '^([0-9][0-9][0-9][0-9])'          + // [1] year
	  '-([0-9][0-9])'                    + // [2] month
	  '-([0-9][0-9])$');                   // [3] day

	var YAML_TIMESTAMP_REGEXP = new RegExp(
	  '^([0-9][0-9][0-9][0-9])'          + // [1] year
	  '-([0-9][0-9]?)'                   + // [2] month
	  '-([0-9][0-9]?)'                   + // [3] day
	  '(?:[Tt]|[ \\t]+)'                 + // ...
	  '([0-9][0-9]?)'                    + // [4] hour
	  ':([0-9][0-9])'                    + // [5] minute
	  ':([0-9][0-9])'                    + // [6] second
	  '(?:\\.([0-9]*))?'                 + // [7] fraction
	  '(?:[ \\t]*(Z|([-+])([0-9][0-9]?)' + // [8] tz [9] tz_sign [10] tz_hour
	  '(?::([0-9][0-9]))?))?$');           // [11] tz_minute

	function resolveYamlTimestamp(data) {
	  if (data === null) return false;
	  if (YAML_DATE_REGEXP.exec(data) !== null) return true;
	  if (YAML_TIMESTAMP_REGEXP.exec(data) !== null) return true;
	  return false;
	}

	function constructYamlTimestamp(data) {
	  var match, year, month, day, hour, minute, second, fraction = 0,
	      delta = null, tz_hour, tz_minute, date;

	  match = YAML_DATE_REGEXP.exec(data);
	  if (match === null) match = YAML_TIMESTAMP_REGEXP.exec(data);

	  if (match === null) throw new Error('Date resolve error');

	  // match: [1] year [2] month [3] day

	  year = +(match[1]);
	  month = +(match[2]) - 1; // JS month starts with 0
	  day = +(match[3]);

	  if (!match[4]) { // no hour
	    return new Date(Date.UTC(year, month, day));
	  }

	  // match: [4] hour [5] minute [6] second [7] fraction

	  hour = +(match[4]);
	  minute = +(match[5]);
	  second = +(match[6]);

	  if (match[7]) {
	    fraction = match[7].slice(0, 3);
	    while (fraction.length < 3) { // milli-seconds
	      fraction += '0';
	    }
	    fraction = +fraction;
	  }

	  // match: [8] tz [9] tz_sign [10] tz_hour [11] tz_minute

	  if (match[9]) {
	    tz_hour = +(match[10]);
	    tz_minute = +(match[11] || 0);
	    delta = (tz_hour * 60 + tz_minute) * 60000; // delta in mili-seconds
	    if (match[9] === '-') delta = -delta;
	  }

	  date = new Date(Date.UTC(year, month, day, hour, minute, second, fraction));

	  if (delta) date.setTime(date.getTime() - delta);

	  return date;
	}

	function representYamlTimestamp(object /*, style*/) {
	  return object.toISOString();
	}

	module.exports = new Type('tag:yaml.org,2002:timestamp', {
	  kind: 'scalar',
	  resolve: resolveYamlTimestamp,
	  construct: constructYamlTimestamp,
	  instanceOf: Date,
	  represent: representYamlTimestamp
	});


/***/ },
/* 257 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Type = __webpack_require__(245);

	function resolveYamlMerge(data) {
	  return data === '<<' || data === null;
	}

	module.exports = new Type('tag:yaml.org,2002:merge', {
	  kind: 'scalar',
	  resolve: resolveYamlMerge
	});


/***/ },
/* 258 */
/***/ function(module, exports, __webpack_require__) {

	var require;'use strict';

	/*eslint-disable no-bitwise*/

	var NodeBuffer;

	try {
	  // A trick for browserified version, to not include `Buffer` shim
	  var _require = require;
	  NodeBuffer = __webpack_require__(259).Buffer;
	} catch (__) {}

	var Type       = __webpack_require__(245);


	// [ 64, 65, 66 ] -> [ padding, CR, LF ]
	var BASE64_MAP = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\n\r';


	function resolveYamlBinary(data) {
	  if (data === null) return false;

	  var code, idx, bitlen = 0, max = data.length, map = BASE64_MAP;

	  // Convert one by one.
	  for (idx = 0; idx < max; idx++) {
	    code = map.indexOf(data.charAt(idx));

	    // Skip CR/LF
	    if (code > 64) continue;

	    // Fail on illegal characters
	    if (code < 0) return false;

	    bitlen += 6;
	  }

	  // If there are any bits left, source was corrupted
	  return (bitlen % 8) === 0;
	}

	function constructYamlBinary(data) {
	  var idx, tailbits,
	      input = data.replace(/[\r\n=]/g, ''), // remove CR/LF & padding to simplify scan
	      max = input.length,
	      map = BASE64_MAP,
	      bits = 0,
	      result = [];

	  // Collect by 6*4 bits (3 bytes)

	  for (idx = 0; idx < max; idx++) {
	    if ((idx % 4 === 0) && idx) {
	      result.push((bits >> 16) & 0xFF);
	      result.push((bits >> 8) & 0xFF);
	      result.push(bits & 0xFF);
	    }

	    bits = (bits << 6) | map.indexOf(input.charAt(idx));
	  }

	  // Dump tail

	  tailbits = (max % 4) * 6;

	  if (tailbits === 0) {
	    result.push((bits >> 16) & 0xFF);
	    result.push((bits >> 8) & 0xFF);
	    result.push(bits & 0xFF);
	  } else if (tailbits === 18) {
	    result.push((bits >> 10) & 0xFF);
	    result.push((bits >> 2) & 0xFF);
	  } else if (tailbits === 12) {
	    result.push((bits >> 4) & 0xFF);
	  }

	  // Wrap into Buffer for NodeJS and leave Array for browser
	  if (NodeBuffer) return new NodeBuffer(result);

	  return result;
	}

	function representYamlBinary(object /*, style*/) {
	  var result = '', bits = 0, idx, tail,
	      max = object.length,
	      map = BASE64_MAP;

	  // Convert every three bytes to 4 ASCII characters.

	  for (idx = 0; idx < max; idx++) {
	    if ((idx % 3 === 0) && idx) {
	      result += map[(bits >> 18) & 0x3F];
	      result += map[(bits >> 12) & 0x3F];
	      result += map[(bits >> 6) & 0x3F];
	      result += map[bits & 0x3F];
	    }

	    bits = (bits << 8) + object[idx];
	  }

	  // Dump tail

	  tail = max % 3;

	  if (tail === 0) {
	    result += map[(bits >> 18) & 0x3F];
	    result += map[(bits >> 12) & 0x3F];
	    result += map[(bits >> 6) & 0x3F];
	    result += map[bits & 0x3F];
	  } else if (tail === 2) {
	    result += map[(bits >> 10) & 0x3F];
	    result += map[(bits >> 4) & 0x3F];
	    result += map[(bits << 2) & 0x3F];
	    result += map[64];
	  } else if (tail === 1) {
	    result += map[(bits >> 2) & 0x3F];
	    result += map[(bits << 4) & 0x3F];
	    result += map[64];
	    result += map[64];
	  }

	  return result;
	}

	function isBinary(object) {
	  return NodeBuffer && NodeBuffer.isBuffer(object);
	}

	module.exports = new Type('tag:yaml.org,2002:binary', {
	  kind: 'scalar',
	  resolve: resolveYamlBinary,
	  construct: constructYamlBinary,
	  predicate: isBinary,
	  represent: representYamlBinary
	});


/***/ },
/* 259 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Buffer, global) {/*!
	 * The buffer module from node.js, for the browser.
	 *
	 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
	 * @license  MIT
	 */
	/* eslint-disable no-proto */

	'use strict'

	var base64 = __webpack_require__(260)
	var ieee754 = __webpack_require__(261)
	var isArray = __webpack_require__(262)

	exports.Buffer = Buffer
	exports.SlowBuffer = SlowBuffer
	exports.INSPECT_MAX_BYTES = 50

	/**
	 * If `Buffer.TYPED_ARRAY_SUPPORT`:
	 *   === true    Use Uint8Array implementation (fastest)
	 *   === false   Use Object implementation (most compatible, even IE6)
	 *
	 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
	 * Opera 11.6+, iOS 4.2+.
	 *
	 * Due to various browser bugs, sometimes the Object implementation will be used even
	 * when the browser supports typed arrays.
	 *
	 * Note:
	 *
	 *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,
	 *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.
	 *
	 *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.
	 *
	 *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of
	 *     incorrect length in some situations.

	 * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they
	 * get the Object implementation, which is slower but behaves correctly.
	 */
	Buffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined
	  ? global.TYPED_ARRAY_SUPPORT
	  : typedArraySupport()

	/*
	 * Export kMaxLength after typed array support is determined.
	 */
	exports.kMaxLength = kMaxLength()

	function typedArraySupport () {
	  try {
	    var arr = new Uint8Array(1)
	    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}
	    return arr.foo() === 42 && // typed array instances can be augmented
	        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`
	        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`
	  } catch (e) {
	    return false
	  }
	}

	function kMaxLength () {
	  return Buffer.TYPED_ARRAY_SUPPORT
	    ? 0x7fffffff
	    : 0x3fffffff
	}

	function createBuffer (that, length) {
	  if (kMaxLength() < length) {
	    throw new RangeError('Invalid typed array length')
	  }
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    // Return an augmented `Uint8Array` instance, for best performance
	    that = new Uint8Array(length)
	    that.__proto__ = Buffer.prototype
	  } else {
	    // Fallback: Return an object instance of the Buffer class
	    if (that === null) {
	      that = new Buffer(length)
	    }
	    that.length = length
	  }

	  return that
	}

	/**
	 * The Buffer constructor returns instances of `Uint8Array` that have their
	 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
	 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
	 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
	 * returns a single octet.
	 *
	 * The `Uint8Array` prototype remains unmodified.
	 */

	function Buffer (arg, encodingOrOffset, length) {
	  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {
	    return new Buffer(arg, encodingOrOffset, length)
	  }

	  // Common case.
	  if (typeof arg === 'number') {
	    if (typeof encodingOrOffset === 'string') {
	      throw new Error(
	        'If encoding is specified then the first argument must be a string'
	      )
	    }
	    return allocUnsafe(this, arg)
	  }
	  return from(this, arg, encodingOrOffset, length)
	}

	Buffer.poolSize = 8192 // not used by this implementation

	// TODO: Legacy, not needed anymore. Remove in next major version.
	Buffer._augment = function (arr) {
	  arr.__proto__ = Buffer.prototype
	  return arr
	}

	function from (that, value, encodingOrOffset, length) {
	  if (typeof value === 'number') {
	    throw new TypeError('"value" argument must not be a number')
	  }

	  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {
	    return fromArrayBuffer(that, value, encodingOrOffset, length)
	  }

	  if (typeof value === 'string') {
	    return fromString(that, value, encodingOrOffset)
	  }

	  return fromObject(that, value)
	}

	/**
	 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
	 * if value is a number.
	 * Buffer.from(str[, encoding])
	 * Buffer.from(array)
	 * Buffer.from(buffer)
	 * Buffer.from(arrayBuffer[, byteOffset[, length]])
	 **/
	Buffer.from = function (value, encodingOrOffset, length) {
	  return from(null, value, encodingOrOffset, length)
	}

	if (Buffer.TYPED_ARRAY_SUPPORT) {
	  Buffer.prototype.__proto__ = Uint8Array.prototype
	  Buffer.__proto__ = Uint8Array
	  if (typeof Symbol !== 'undefined' && Symbol.species &&
	      Buffer[Symbol.species] === Buffer) {
	    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97
	    Object.defineProperty(Buffer, Symbol.species, {
	      value: null,
	      configurable: true
	    })
	  }
	}

	function assertSize (size) {
	  if (typeof size !== 'number') {
	    throw new TypeError('"size" argument must be a number')
	  } else if (size < 0) {
	    throw new RangeError('"size" argument must not be negative')
	  }
	}

	function alloc (that, size, fill, encoding) {
	  assertSize(size)
	  if (size <= 0) {
	    return createBuffer(that, size)
	  }
	  if (fill !== undefined) {
	    // Only pay attention to encoding if it's a string. This
	    // prevents accidentally sending in a number that would
	    // be interpretted as a start offset.
	    return typeof encoding === 'string'
	      ? createBuffer(that, size).fill(fill, encoding)
	      : createBuffer(that, size).fill(fill)
	  }
	  return createBuffer(that, size)
	}

	/**
	 * Creates a new filled Buffer instance.
	 * alloc(size[, fill[, encoding]])
	 **/
	Buffer.alloc = function (size, fill, encoding) {
	  return alloc(null, size, fill, encoding)
	}

	function allocUnsafe (that, size) {
	  assertSize(size)
	  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)
	  if (!Buffer.TYPED_ARRAY_SUPPORT) {
	    for (var i = 0; i < size; ++i) {
	      that[i] = 0
	    }
	  }
	  return that
	}

	/**
	 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
	 * */
	Buffer.allocUnsafe = function (size) {
	  return allocUnsafe(null, size)
	}
	/**
	 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
	 */
	Buffer.allocUnsafeSlow = function (size) {
	  return allocUnsafe(null, size)
	}

	function fromString (that, string, encoding) {
	  if (typeof encoding !== 'string' || encoding === '') {
	    encoding = 'utf8'
	  }

	  if (!Buffer.isEncoding(encoding)) {
	    throw new TypeError('"encoding" must be a valid string encoding')
	  }

	  var length = byteLength(string, encoding) | 0
	  that = createBuffer(that, length)

	  var actual = that.write(string, encoding)

	  if (actual !== length) {
	    // Writing a hex string, for example, that contains invalid characters will
	    // cause everything after the first invalid character to be ignored. (e.g.
	    // 'abxxcd' will be treated as 'ab')
	    that = that.slice(0, actual)
	  }

	  return that
	}

	function fromArrayLike (that, array) {
	  var length = array.length < 0 ? 0 : checked(array.length) | 0
	  that = createBuffer(that, length)
	  for (var i = 0; i < length; i += 1) {
	    that[i] = array[i] & 255
	  }
	  return that
	}

	function fromArrayBuffer (that, array, byteOffset, length) {
	  array.byteLength // this throws if `array` is not a valid ArrayBuffer

	  if (byteOffset < 0 || array.byteLength < byteOffset) {
	    throw new RangeError('\'offset\' is out of bounds')
	  }

	  if (array.byteLength < byteOffset + (length || 0)) {
	    throw new RangeError('\'length\' is out of bounds')
	  }

	  if (byteOffset === undefined && length === undefined) {
	    array = new Uint8Array(array)
	  } else if (length === undefined) {
	    array = new Uint8Array(array, byteOffset)
	  } else {
	    array = new Uint8Array(array, byteOffset, length)
	  }

	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    // Return an augmented `Uint8Array` instance, for best performance
	    that = array
	    that.__proto__ = Buffer.prototype
	  } else {
	    // Fallback: Return an object instance of the Buffer class
	    that = fromArrayLike(that, array)
	  }
	  return that
	}

	function fromObject (that, obj) {
	  if (Buffer.isBuffer(obj)) {
	    var len = checked(obj.length) | 0
	    that = createBuffer(that, len)

	    if (that.length === 0) {
	      return that
	    }

	    obj.copy(that, 0, 0, len)
	    return that
	  }

	  if (obj) {
	    if ((typeof ArrayBuffer !== 'undefined' &&
	        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {
	      if (typeof obj.length !== 'number' || isnan(obj.length)) {
	        return createBuffer(that, 0)
	      }
	      return fromArrayLike(that, obj)
	    }

	    if (obj.type === 'Buffer' && isArray(obj.data)) {
	      return fromArrayLike(that, obj.data)
	    }
	  }

	  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')
	}

	function checked (length) {
	  // Note: cannot use `length < kMaxLength()` here because that fails when
	  // length is NaN (which is otherwise coerced to zero.)
	  if (length >= kMaxLength()) {
	    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
	                         'size: 0x' + kMaxLength().toString(16) + ' bytes')
	  }
	  return length | 0
	}

	function SlowBuffer (length) {
	  if (+length != length) { // eslint-disable-line eqeqeq
	    length = 0
	  }
	  return Buffer.alloc(+length)
	}

	Buffer.isBuffer = function isBuffer (b) {
	  return !!(b != null && b._isBuffer)
	}

	Buffer.compare = function compare (a, b) {
	  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
	    throw new TypeError('Arguments must be Buffers')
	  }

	  if (a === b) return 0

	  var x = a.length
	  var y = b.length

	  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
	    if (a[i] !== b[i]) {
	      x = a[i]
	      y = b[i]
	      break
	    }
	  }

	  if (x < y) return -1
	  if (y < x) return 1
	  return 0
	}

	Buffer.isEncoding = function isEncoding (encoding) {
	  switch (String(encoding).toLowerCase()) {
	    case 'hex':
	    case 'utf8':
	    case 'utf-8':
	    case 'ascii':
	    case 'latin1':
	    case 'binary':
	    case 'base64':
	    case 'ucs2':
	    case 'ucs-2':
	    case 'utf16le':
	    case 'utf-16le':
	      return true
	    default:
	      return false
	  }
	}

	Buffer.concat = function concat (list, length) {
	  if (!isArray(list)) {
	    throw new TypeError('"list" argument must be an Array of Buffers')
	  }

	  if (list.length === 0) {
	    return Buffer.alloc(0)
	  }

	  var i
	  if (length === undefined) {
	    length = 0
	    for (i = 0; i < list.length; ++i) {
	      length += list[i].length
	    }
	  }

	  var buffer = Buffer.allocUnsafe(length)
	  var pos = 0
	  for (i = 0; i < list.length; ++i) {
	    var buf = list[i]
	    if (!Buffer.isBuffer(buf)) {
	      throw new TypeError('"list" argument must be an Array of Buffers')
	    }
	    buf.copy(buffer, pos)
	    pos += buf.length
	  }
	  return buffer
	}

	function byteLength (string, encoding) {
	  if (Buffer.isBuffer(string)) {
	    return string.length
	  }
	  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&
	      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {
	    return string.byteLength
	  }
	  if (typeof string !== 'string') {
	    string = '' + string
	  }

	  var len = string.length
	  if (len === 0) return 0

	  // Use a for loop to avoid recursion
	  var loweredCase = false
	  for (;;) {
	    switch (encoding) {
	      case 'ascii':
	      case 'latin1':
	      case 'binary':
	        return len
	      case 'utf8':
	      case 'utf-8':
	      case undefined:
	        return utf8ToBytes(string).length
	      case 'ucs2':
	      case 'ucs-2':
	      case 'utf16le':
	      case 'utf-16le':
	        return len * 2
	      case 'hex':
	        return len >>> 1
	      case 'base64':
	        return base64ToBytes(string).length
	      default:
	        if (loweredCase) return utf8ToBytes(string).length // assume utf8
	        encoding = ('' + encoding).toLowerCase()
	        loweredCase = true
	    }
	  }
	}
	Buffer.byteLength = byteLength

	function slowToString (encoding, start, end) {
	  var loweredCase = false

	  // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
	  // property of a typed array.

	  // This behaves neither like String nor Uint8Array in that we set start/end
	  // to their upper/lower bounds if the value passed is out of range.
	  // undefined is handled specially as per ECMA-262 6th Edition,
	  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
	  if (start === undefined || start < 0) {
	    start = 0
	  }
	  // Return early if start > this.length. Done here to prevent potential uint32
	  // coercion fail below.
	  if (start > this.length) {
	    return ''
	  }

	  if (end === undefined || end > this.length) {
	    end = this.length
	  }

	  if (end <= 0) {
	    return ''
	  }

	  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.
	  end >>>= 0
	  start >>>= 0

	  if (end <= start) {
	    return ''
	  }

	  if (!encoding) encoding = 'utf8'

	  while (true) {
	    switch (encoding) {
	      case 'hex':
	        return hexSlice(this, start, end)

	      case 'utf8':
	      case 'utf-8':
	        return utf8Slice(this, start, end)

	      case 'ascii':
	        return asciiSlice(this, start, end)

	      case 'latin1':
	      case 'binary':
	        return latin1Slice(this, start, end)

	      case 'base64':
	        return base64Slice(this, start, end)

	      case 'ucs2':
	      case 'ucs-2':
	      case 'utf16le':
	      case 'utf-16le':
	        return utf16leSlice(this, start, end)

	      default:
	        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
	        encoding = (encoding + '').toLowerCase()
	        loweredCase = true
	    }
	  }
	}

	// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect
	// Buffer instances.
	Buffer.prototype._isBuffer = true

	function swap (b, n, m) {
	  var i = b[n]
	  b[n] = b[m]
	  b[m] = i
	}

	Buffer.prototype.swap16 = function swap16 () {
	  var len = this.length
	  if (len % 2 !== 0) {
	    throw new RangeError('Buffer size must be a multiple of 16-bits')
	  }
	  for (var i = 0; i < len; i += 2) {
	    swap(this, i, i + 1)
	  }
	  return this
	}

	Buffer.prototype.swap32 = function swap32 () {
	  var len = this.length
	  if (len % 4 !== 0) {
	    throw new RangeError('Buffer size must be a multiple of 32-bits')
	  }
	  for (var i = 0; i < len; i += 4) {
	    swap(this, i, i + 3)
	    swap(this, i + 1, i + 2)
	  }
	  return this
	}

	Buffer.prototype.swap64 = function swap64 () {
	  var len = this.length
	  if (len % 8 !== 0) {
	    throw new RangeError('Buffer size must be a multiple of 64-bits')
	  }
	  for (var i = 0; i < len; i += 8) {
	    swap(this, i, i + 7)
	    swap(this, i + 1, i + 6)
	    swap(this, i + 2, i + 5)
	    swap(this, i + 3, i + 4)
	  }
	  return this
	}

	Buffer.prototype.toString = function toString () {
	  var length = this.length | 0
	  if (length === 0) return ''
	  if (arguments.length === 0) return utf8Slice(this, 0, length)
	  return slowToString.apply(this, arguments)
	}

	Buffer.prototype.equals = function equals (b) {
	  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
	  if (this === b) return true
	  return Buffer.compare(this, b) === 0
	}

	Buffer.prototype.inspect = function inspect () {
	  var str = ''
	  var max = exports.INSPECT_MAX_BYTES
	  if (this.length > 0) {
	    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')
	    if (this.length > max) str += ' ... '
	  }
	  return '<Buffer ' + str + '>'
	}

	Buffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {
	  if (!Buffer.isBuffer(target)) {
	    throw new TypeError('Argument must be a Buffer')
	  }

	  if (start === undefined) {
	    start = 0
	  }
	  if (end === undefined) {
	    end = target ? target.length : 0
	  }
	  if (thisStart === undefined) {
	    thisStart = 0
	  }
	  if (thisEnd === undefined) {
	    thisEnd = this.length
	  }

	  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
	    throw new RangeError('out of range index')
	  }

	  if (thisStart >= thisEnd && start >= end) {
	    return 0
	  }
	  if (thisStart >= thisEnd) {
	    return -1
	  }
	  if (start >= end) {
	    return 1
	  }

	  start >>>= 0
	  end >>>= 0
	  thisStart >>>= 0
	  thisEnd >>>= 0

	  if (this === target) return 0

	  var x = thisEnd - thisStart
	  var y = end - start
	  var len = Math.min(x, y)

	  var thisCopy = this.slice(thisStart, thisEnd)
	  var targetCopy = target.slice(start, end)

	  for (var i = 0; i < len; ++i) {
	    if (thisCopy[i] !== targetCopy[i]) {
	      x = thisCopy[i]
	      y = targetCopy[i]
	      break
	    }
	  }

	  if (x < y) return -1
	  if (y < x) return 1
	  return 0
	}

	// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
	// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
	//
	// Arguments:
	// - buffer - a Buffer to search
	// - val - a string, Buffer, or number
	// - byteOffset - an index into `buffer`; will be clamped to an int32
	// - encoding - an optional encoding, relevant is val is a string
	// - dir - true for indexOf, false for lastIndexOf
	function bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {
	  // Empty buffer means no match
	  if (buffer.length === 0) return -1

	  // Normalize byteOffset
	  if (typeof byteOffset === 'string') {
	    encoding = byteOffset
	    byteOffset = 0
	  } else if (byteOffset > 0x7fffffff) {
	    byteOffset = 0x7fffffff
	  } else if (byteOffset < -0x80000000) {
	    byteOffset = -0x80000000
	  }
	  byteOffset = +byteOffset  // Coerce to Number.
	  if (isNaN(byteOffset)) {
	    // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
	    byteOffset = dir ? 0 : (buffer.length - 1)
	  }

	  // Normalize byteOffset: negative offsets start from the end of the buffer
	  if (byteOffset < 0) byteOffset = buffer.length + byteOffset
	  if (byteOffset >= buffer.length) {
	    if (dir) return -1
	    else byteOffset = buffer.length - 1
	  } else if (byteOffset < 0) {
	    if (dir) byteOffset = 0
	    else return -1
	  }

	  // Normalize val
	  if (typeof val === 'string') {
	    val = Buffer.from(val, encoding)
	  }

	  // Finally, search either indexOf (if dir is true) or lastIndexOf
	  if (Buffer.isBuffer(val)) {
	    // Special case: looking for empty string/buffer always fails
	    if (val.length === 0) {
	      return -1
	    }
	    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)
	  } else if (typeof val === 'number') {
	    val = val & 0xFF // Search for a byte value [0-255]
	    if (Buffer.TYPED_ARRAY_SUPPORT &&
	        typeof Uint8Array.prototype.indexOf === 'function') {
	      if (dir) {
	        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)
	      } else {
	        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)
	      }
	    }
	    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)
	  }

	  throw new TypeError('val must be string, number or Buffer')
	}

	function arrayIndexOf (arr, val, byteOffset, encoding, dir) {
	  var indexSize = 1
	  var arrLength = arr.length
	  var valLength = val.length

	  if (encoding !== undefined) {
	    encoding = String(encoding).toLowerCase()
	    if (encoding === 'ucs2' || encoding === 'ucs-2' ||
	        encoding === 'utf16le' || encoding === 'utf-16le') {
	      if (arr.length < 2 || val.length < 2) {
	        return -1
	      }
	      indexSize = 2
	      arrLength /= 2
	      valLength /= 2
	      byteOffset /= 2
	    }
	  }

	  function read (buf, i) {
	    if (indexSize === 1) {
	      return buf[i]
	    } else {
	      return buf.readUInt16BE(i * indexSize)
	    }
	  }

	  var i
	  if (dir) {
	    var foundIndex = -1
	    for (i = byteOffset; i < arrLength; i++) {
	      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
	        if (foundIndex === -1) foundIndex = i
	        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize
	      } else {
	        if (foundIndex !== -1) i -= i - foundIndex
	        foundIndex = -1
	      }
	    }
	  } else {
	    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength
	    for (i = byteOffset; i >= 0; i--) {
	      var found = true
	      for (var j = 0; j < valLength; j++) {
	        if (read(arr, i + j) !== read(val, j)) {
	          found = false
	          break
	        }
	      }
	      if (found) return i
	    }
	  }

	  return -1
	}

	Buffer.prototype.includes = function includes (val, byteOffset, encoding) {
	  return this.indexOf(val, byteOffset, encoding) !== -1
	}

	Buffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {
	  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)
	}

	Buffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {
	  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)
	}

	function hexWrite (buf, string, offset, length) {
	  offset = Number(offset) || 0
	  var remaining = buf.length - offset
	  if (!length) {
	    length = remaining
	  } else {
	    length = Number(length)
	    if (length > remaining) {
	      length = remaining
	    }
	  }

	  // must be an even number of digits
	  var strLen = string.length
	  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')

	  if (length > strLen / 2) {
	    length = strLen / 2
	  }
	  for (var i = 0; i < length; ++i) {
	    var parsed = parseInt(string.substr(i * 2, 2), 16)
	    if (isNaN(parsed)) return i
	    buf[offset + i] = parsed
	  }
	  return i
	}

	function utf8Write (buf, string, offset, length) {
	  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
	}

	function asciiWrite (buf, string, offset, length) {
	  return blitBuffer(asciiToBytes(string), buf, offset, length)
	}

	function latin1Write (buf, string, offset, length) {
	  return asciiWrite(buf, string, offset, length)
	}

	function base64Write (buf, string, offset, length) {
	  return blitBuffer(base64ToBytes(string), buf, offset, length)
	}

	function ucs2Write (buf, string, offset, length) {
	  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
	}

	Buffer.prototype.write = function write (string, offset, length, encoding) {
	  // Buffer#write(string)
	  if (offset === undefined) {
	    encoding = 'utf8'
	    length = this.length
	    offset = 0
	  // Buffer#write(string, encoding)
	  } else if (length === undefined && typeof offset === 'string') {
	    encoding = offset
	    length = this.length
	    offset = 0
	  // Buffer#write(string, offset[, length][, encoding])
	  } else if (isFinite(offset)) {
	    offset = offset | 0
	    if (isFinite(length)) {
	      length = length | 0
	      if (encoding === undefined) encoding = 'utf8'
	    } else {
	      encoding = length
	      length = undefined
	    }
	  // legacy write(string, encoding, offset, length) - remove in v0.13
	  } else {
	    throw new Error(
	      'Buffer.write(string, encoding, offset[, length]) is no longer supported'
	    )
	  }

	  var remaining = this.length - offset
	  if (length === undefined || length > remaining) length = remaining

	  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
	    throw new RangeError('Attempt to write outside buffer bounds')
	  }

	  if (!encoding) encoding = 'utf8'

	  var loweredCase = false
	  for (;;) {
	    switch (encoding) {
	      case 'hex':
	        return hexWrite(this, string, offset, length)

	      case 'utf8':
	      case 'utf-8':
	        return utf8Write(this, string, offset, length)

	      case 'ascii':
	        return asciiWrite(this, string, offset, length)

	      case 'latin1':
	      case 'binary':
	        return latin1Write(this, string, offset, length)

	      case 'base64':
	        // Warning: maxLength not taken into account in base64Write
	        return base64Write(this, string, offset, length)

	      case 'ucs2':
	      case 'ucs-2':
	      case 'utf16le':
	      case 'utf-16le':
	        return ucs2Write(this, string, offset, length)

	      default:
	        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
	        encoding = ('' + encoding).toLowerCase()
	        loweredCase = true
	    }
	  }
	}

	Buffer.prototype.toJSON = function toJSON () {
	  return {
	    type: 'Buffer',
	    data: Array.prototype.slice.call(this._arr || this, 0)
	  }
	}

	function base64Slice (buf, start, end) {
	  if (start === 0 && end === buf.length) {
	    return base64.fromByteArray(buf)
	  } else {
	    return base64.fromByteArray(buf.slice(start, end))
	  }
	}

	function utf8Slice (buf, start, end) {
	  end = Math.min(buf.length, end)
	  var res = []

	  var i = start
	  while (i < end) {
	    var firstByte = buf[i]
	    var codePoint = null
	    var bytesPerSequence = (firstByte > 0xEF) ? 4
	      : (firstByte > 0xDF) ? 3
	      : (firstByte > 0xBF) ? 2
	      : 1

	    if (i + bytesPerSequence <= end) {
	      var secondByte, thirdByte, fourthByte, tempCodePoint

	      switch (bytesPerSequence) {
	        case 1:
	          if (firstByte < 0x80) {
	            codePoint = firstByte
	          }
	          break
	        case 2:
	          secondByte = buf[i + 1]
	          if ((secondByte & 0xC0) === 0x80) {
	            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
	            if (tempCodePoint > 0x7F) {
	              codePoint = tempCodePoint
	            }
	          }
	          break
	        case 3:
	          secondByte = buf[i + 1]
	          thirdByte = buf[i + 2]
	          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
	            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
	            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
	              codePoint = tempCodePoint
	            }
	          }
	          break
	        case 4:
	          secondByte = buf[i + 1]
	          thirdByte = buf[i + 2]
	          fourthByte = buf[i + 3]
	          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
	            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
	            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
	              codePoint = tempCodePoint
	            }
	          }
	      }
	    }

	    if (codePoint === null) {
	      // we did not generate a valid codePoint so insert a
	      // replacement char (U+FFFD) and advance only 1 byte
	      codePoint = 0xFFFD
	      bytesPerSequence = 1
	    } else if (codePoint > 0xFFFF) {
	      // encode to utf16 (surrogate pair dance)
	      codePoint -= 0x10000
	      res.push(codePoint >>> 10 & 0x3FF | 0xD800)
	      codePoint = 0xDC00 | codePoint & 0x3FF
	    }

	    res.push(codePoint)
	    i += bytesPerSequence
	  }

	  return decodeCodePointsArray(res)
	}

	// Based on http://stackoverflow.com/a/22747272/680742, the browser with
	// the lowest limit is Chrome, with 0x10000 args.
	// We go 1 magnitude less, for safety
	var MAX_ARGUMENTS_LENGTH = 0x1000

	function decodeCodePointsArray (codePoints) {
	  var len = codePoints.length
	  if (len <= MAX_ARGUMENTS_LENGTH) {
	    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
	  }

	  // Decode in chunks to avoid "call stack size exceeded".
	  var res = ''
	  var i = 0
	  while (i < len) {
	    res += String.fromCharCode.apply(
	      String,
	      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
	    )
	  }
	  return res
	}

	function asciiSlice (buf, start, end) {
	  var ret = ''
	  end = Math.min(buf.length, end)

	  for (var i = start; i < end; ++i) {
	    ret += String.fromCharCode(buf[i] & 0x7F)
	  }
	  return ret
	}

	function latin1Slice (buf, start, end) {
	  var ret = ''
	  end = Math.min(buf.length, end)

	  for (var i = start; i < end; ++i) {
	    ret += String.fromCharCode(buf[i])
	  }
	  return ret
	}

	function hexSlice (buf, start, end) {
	  var len = buf.length

	  if (!start || start < 0) start = 0
	  if (!end || end < 0 || end > len) end = len

	  var out = ''
	  for (var i = start; i < end; ++i) {
	    out += toHex(buf[i])
	  }
	  return out
	}

	function utf16leSlice (buf, start, end) {
	  var bytes = buf.slice(start, end)
	  var res = ''
	  for (var i = 0; i < bytes.length; i += 2) {
	    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)
	  }
	  return res
	}

	Buffer.prototype.slice = function slice (start, end) {
	  var len = this.length
	  start = ~~start
	  end = end === undefined ? len : ~~end

	  if (start < 0) {
	    start += len
	    if (start < 0) start = 0
	  } else if (start > len) {
	    start = len
	  }

	  if (end < 0) {
	    end += len
	    if (end < 0) end = 0
	  } else if (end > len) {
	    end = len
	  }

	  if (end < start) end = start

	  var newBuf
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    newBuf = this.subarray(start, end)
	    newBuf.__proto__ = Buffer.prototype
	  } else {
	    var sliceLen = end - start
	    newBuf = new Buffer(sliceLen, undefined)
	    for (var i = 0; i < sliceLen; ++i) {
	      newBuf[i] = this[i + start]
	    }
	  }

	  return newBuf
	}

	/*
	 * Need to make sure that buffer isn't trying to write out of bounds.
	 */
	function checkOffset (offset, ext, length) {
	  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
	  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
	}

	Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) checkOffset(offset, byteLength, this.length)

	  var val = this[offset]
	  var mul = 1
	  var i = 0
	  while (++i < byteLength && (mul *= 0x100)) {
	    val += this[offset + i] * mul
	  }

	  return val
	}

	Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) {
	    checkOffset(offset, byteLength, this.length)
	  }

	  var val = this[offset + --byteLength]
	  var mul = 1
	  while (byteLength > 0 && (mul *= 0x100)) {
	    val += this[offset + --byteLength] * mul
	  }

	  return val
	}

	Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 1, this.length)
	  return this[offset]
	}

	Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 2, this.length)
	  return this[offset] | (this[offset + 1] << 8)
	}

	Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 2, this.length)
	  return (this[offset] << 8) | this[offset + 1]
	}

	Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)

	  return ((this[offset]) |
	      (this[offset + 1] << 8) |
	      (this[offset + 2] << 16)) +
	      (this[offset + 3] * 0x1000000)
	}

	Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)

	  return (this[offset] * 0x1000000) +
	    ((this[offset + 1] << 16) |
	    (this[offset + 2] << 8) |
	    this[offset + 3])
	}

	Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) checkOffset(offset, byteLength, this.length)

	  var val = this[offset]
	  var mul = 1
	  var i = 0
	  while (++i < byteLength && (mul *= 0x100)) {
	    val += this[offset + i] * mul
	  }
	  mul *= 0x80

	  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

	  return val
	}

	Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) checkOffset(offset, byteLength, this.length)

	  var i = byteLength
	  var mul = 1
	  var val = this[offset + --i]
	  while (i > 0 && (mul *= 0x100)) {
	    val += this[offset + --i] * mul
	  }
	  mul *= 0x80

	  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

	  return val
	}

	Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 1, this.length)
	  if (!(this[offset] & 0x80)) return (this[offset])
	  return ((0xff - this[offset] + 1) * -1)
	}

	Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 2, this.length)
	  var val = this[offset] | (this[offset + 1] << 8)
	  return (val & 0x8000) ? val | 0xFFFF0000 : val
	}

	Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 2, this.length)
	  var val = this[offset + 1] | (this[offset] << 8)
	  return (val & 0x8000) ? val | 0xFFFF0000 : val
	}

	Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)

	  return (this[offset]) |
	    (this[offset + 1] << 8) |
	    (this[offset + 2] << 16) |
	    (this[offset + 3] << 24)
	}

	Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)

	  return (this[offset] << 24) |
	    (this[offset + 1] << 16) |
	    (this[offset + 2] << 8) |
	    (this[offset + 3])
	}

	Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)
	  return ieee754.read(this, offset, true, 23, 4)
	}

	Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)
	  return ieee754.read(this, offset, false, 23, 4)
	}

	Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 8, this.length)
	  return ieee754.read(this, offset, true, 52, 8)
	}

	Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 8, this.length)
	  return ieee754.read(this, offset, false, 52, 8)
	}

	function checkInt (buf, value, offset, ext, max, min) {
	  if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance')
	  if (value > max || value < min) throw new RangeError('"value" argument is out of bounds')
	  if (offset + ext > buf.length) throw new RangeError('Index out of range')
	}

	Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
	  value = +value
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) {
	    var maxBytes = Math.pow(2, 8 * byteLength) - 1
	    checkInt(this, value, offset, byteLength, maxBytes, 0)
	  }

	  var mul = 1
	  var i = 0
	  this[offset] = value & 0xFF
	  while (++i < byteLength && (mul *= 0x100)) {
	    this[offset + i] = (value / mul) & 0xFF
	  }

	  return offset + byteLength
	}

	Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
	  value = +value
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) {
	    var maxBytes = Math.pow(2, 8 * byteLength) - 1
	    checkInt(this, value, offset, byteLength, maxBytes, 0)
	  }

	  var i = byteLength - 1
	  var mul = 1
	  this[offset + i] = value & 0xFF
	  while (--i >= 0 && (mul *= 0x100)) {
	    this[offset + i] = (value / mul) & 0xFF
	  }

	  return offset + byteLength
	}

	Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
	  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
	  this[offset] = (value & 0xff)
	  return offset + 1
	}

	function objectWriteUInt16 (buf, value, offset, littleEndian) {
	  if (value < 0) value = 0xffff + value + 1
	  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {
	    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>
	      (littleEndian ? i : 1 - i) * 8
	  }
	}

	Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value & 0xff)
	    this[offset + 1] = (value >>> 8)
	  } else {
	    objectWriteUInt16(this, value, offset, true)
	  }
	  return offset + 2
	}

	Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value >>> 8)
	    this[offset + 1] = (value & 0xff)
	  } else {
	    objectWriteUInt16(this, value, offset, false)
	  }
	  return offset + 2
	}

	function objectWriteUInt32 (buf, value, offset, littleEndian) {
	  if (value < 0) value = 0xffffffff + value + 1
	  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {
	    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff
	  }
	}

	Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset + 3] = (value >>> 24)
	    this[offset + 2] = (value >>> 16)
	    this[offset + 1] = (value >>> 8)
	    this[offset] = (value & 0xff)
	  } else {
	    objectWriteUInt32(this, value, offset, true)
	  }
	  return offset + 4
	}

	Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value >>> 24)
	    this[offset + 1] = (value >>> 16)
	    this[offset + 2] = (value >>> 8)
	    this[offset + 3] = (value & 0xff)
	  } else {
	    objectWriteUInt32(this, value, offset, false)
	  }
	  return offset + 4
	}

	Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) {
	    var limit = Math.pow(2, 8 * byteLength - 1)

	    checkInt(this, value, offset, byteLength, limit - 1, -limit)
	  }

	  var i = 0
	  var mul = 1
	  var sub = 0
	  this[offset] = value & 0xFF
	  while (++i < byteLength && (mul *= 0x100)) {
	    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
	      sub = 1
	    }
	    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
	  }

	  return offset + byteLength
	}

	Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) {
	    var limit = Math.pow(2, 8 * byteLength - 1)

	    checkInt(this, value, offset, byteLength, limit - 1, -limit)
	  }

	  var i = byteLength - 1
	  var mul = 1
	  var sub = 0
	  this[offset + i] = value & 0xFF
	  while (--i >= 0 && (mul *= 0x100)) {
	    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
	      sub = 1
	    }
	    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
	  }

	  return offset + byteLength
	}

	Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
	  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
	  if (value < 0) value = 0xff + value + 1
	  this[offset] = (value & 0xff)
	  return offset + 1
	}

	Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value & 0xff)
	    this[offset + 1] = (value >>> 8)
	  } else {
	    objectWriteUInt16(this, value, offset, true)
	  }
	  return offset + 2
	}

	Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value >>> 8)
	    this[offset + 1] = (value & 0xff)
	  } else {
	    objectWriteUInt16(this, value, offset, false)
	  }
	  return offset + 2
	}

	Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value & 0xff)
	    this[offset + 1] = (value >>> 8)
	    this[offset + 2] = (value >>> 16)
	    this[offset + 3] = (value >>> 24)
	  } else {
	    objectWriteUInt32(this, value, offset, true)
	  }
	  return offset + 4
	}

	Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
	  if (value < 0) value = 0xffffffff + value + 1
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value >>> 24)
	    this[offset + 1] = (value >>> 16)
	    this[offset + 2] = (value >>> 8)
	    this[offset + 3] = (value & 0xff)
	  } else {
	    objectWriteUInt32(this, value, offset, false)
	  }
	  return offset + 4
	}

	function checkIEEE754 (buf, value, offset, ext, max, min) {
	  if (offset + ext > buf.length) throw new RangeError('Index out of range')
	  if (offset < 0) throw new RangeError('Index out of range')
	}

	function writeFloat (buf, value, offset, littleEndian, noAssert) {
	  if (!noAssert) {
	    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
	  }
	  ieee754.write(buf, value, offset, littleEndian, 23, 4)
	  return offset + 4
	}

	Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
	  return writeFloat(this, value, offset, true, noAssert)
	}

	Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
	  return writeFloat(this, value, offset, false, noAssert)
	}

	function writeDouble (buf, value, offset, littleEndian, noAssert) {
	  if (!noAssert) {
	    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
	  }
	  ieee754.write(buf, value, offset, littleEndian, 52, 8)
	  return offset + 8
	}

	Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
	  return writeDouble(this, value, offset, true, noAssert)
	}

	Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
	  return writeDouble(this, value, offset, false, noAssert)
	}

	// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
	Buffer.prototype.copy = function copy (target, targetStart, start, end) {
	  if (!start) start = 0
	  if (!end && end !== 0) end = this.length
	  if (targetStart >= target.length) targetStart = target.length
	  if (!targetStart) targetStart = 0
	  if (end > 0 && end < start) end = start

	  // Copy 0 bytes; we're done
	  if (end === start) return 0
	  if (target.length === 0 || this.length === 0) return 0

	  // Fatal error conditions
	  if (targetStart < 0) {
	    throw new RangeError('targetStart out of bounds')
	  }
	  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')
	  if (end < 0) throw new RangeError('sourceEnd out of bounds')

	  // Are we oob?
	  if (end > this.length) end = this.length
	  if (target.length - targetStart < end - start) {
	    end = target.length - targetStart + start
	  }

	  var len = end - start
	  var i

	  if (this === target && start < targetStart && targetStart < end) {
	    // descending copy from end
	    for (i = len - 1; i >= 0; --i) {
	      target[i + targetStart] = this[i + start]
	    }
	  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {
	    // ascending copy from start
	    for (i = 0; i < len; ++i) {
	      target[i + targetStart] = this[i + start]
	    }
	  } else {
	    Uint8Array.prototype.set.call(
	      target,
	      this.subarray(start, start + len),
	      targetStart
	    )
	  }

	  return len
	}

	// Usage:
	//    buffer.fill(number[, offset[, end]])
	//    buffer.fill(buffer[, offset[, end]])
	//    buffer.fill(string[, offset[, end]][, encoding])
	Buffer.prototype.fill = function fill (val, start, end, encoding) {
	  // Handle string cases:
	  if (typeof val === 'string') {
	    if (typeof start === 'string') {
	      encoding = start
	      start = 0
	      end = this.length
	    } else if (typeof end === 'string') {
	      encoding = end
	      end = this.length
	    }
	    if (val.length === 1) {
	      var code = val.charCodeAt(0)
	      if (code < 256) {
	        val = code
	      }
	    }
	    if (encoding !== undefined && typeof encoding !== 'string') {
	      throw new TypeError('encoding must be a string')
	    }
	    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
	      throw new TypeError('Unknown encoding: ' + encoding)
	    }
	  } else if (typeof val === 'number') {
	    val = val & 255
	  }

	  // Invalid ranges are not set to a default, so can range check early.
	  if (start < 0 || this.length < start || this.length < end) {
	    throw new RangeError('Out of range index')
	  }

	  if (end <= start) {
	    return this
	  }

	  start = start >>> 0
	  end = end === undefined ? this.length : end >>> 0

	  if (!val) val = 0

	  var i
	  if (typeof val === 'number') {
	    for (i = start; i < end; ++i) {
	      this[i] = val
	    }
	  } else {
	    var bytes = Buffer.isBuffer(val)
	      ? val
	      : utf8ToBytes(new Buffer(val, encoding).toString())
	    var len = bytes.length
	    for (i = 0; i < end - start; ++i) {
	      this[i + start] = bytes[i % len]
	    }
	  }

	  return this
	}

	// HELPER FUNCTIONS
	// ================

	var INVALID_BASE64_RE = /[^+\/0-9A-Za-z-_]/g

	function base64clean (str) {
	  // Node strips out invalid characters like \n and \t from the string, base64-js does not
	  str = stringtrim(str).replace(INVALID_BASE64_RE, '')
	  // Node converts strings with length < 2 to ''
	  if (str.length < 2) return ''
	  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
	  while (str.length % 4 !== 0) {
	    str = str + '='
	  }
	  return str
	}

	function stringtrim (str) {
	  if (str.trim) return str.trim()
	  return str.replace(/^\s+|\s+$/g, '')
	}

	function toHex (n) {
	  if (n < 16) return '0' + n.toString(16)
	  return n.toString(16)
	}

	function utf8ToBytes (string, units) {
	  units = units || Infinity
	  var codePoint
	  var length = string.length
	  var leadSurrogate = null
	  var bytes = []

	  for (var i = 0; i < length; ++i) {
	    codePoint = string.charCodeAt(i)

	    // is surrogate component
	    if (codePoint > 0xD7FF && codePoint < 0xE000) {
	      // last char was a lead
	      if (!leadSurrogate) {
	        // no lead yet
	        if (codePoint > 0xDBFF) {
	          // unexpected trail
	          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
	          continue
	        } else if (i + 1 === length) {
	          // unpaired lead
	          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
	          continue
	        }

	        // valid lead
	        leadSurrogate = codePoint

	        continue
	      }

	      // 2 leads in a row
	      if (codePoint < 0xDC00) {
	        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
	        leadSurrogate = codePoint
	        continue
	      }

	      // valid surrogate pair
	      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
	    } else if (leadSurrogate) {
	      // valid bmp char, but last char was a lead
	      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
	    }

	    leadSurrogate = null

	    // encode utf8
	    if (codePoint < 0x80) {
	      if ((units -= 1) < 0) break
	      bytes.push(codePoint)
	    } else if (codePoint < 0x800) {
	      if ((units -= 2) < 0) break
	      bytes.push(
	        codePoint >> 0x6 | 0xC0,
	        codePoint & 0x3F | 0x80
	      )
	    } else if (codePoint < 0x10000) {
	      if ((units -= 3) < 0) break
	      bytes.push(
	        codePoint >> 0xC | 0xE0,
	        codePoint >> 0x6 & 0x3F | 0x80,
	        codePoint & 0x3F | 0x80
	      )
	    } else if (codePoint < 0x110000) {
	      if ((units -= 4) < 0) break
	      bytes.push(
	        codePoint >> 0x12 | 0xF0,
	        codePoint >> 0xC & 0x3F | 0x80,
	        codePoint >> 0x6 & 0x3F | 0x80,
	        codePoint & 0x3F | 0x80
	      )
	    } else {
	      throw new Error('Invalid code point')
	    }
	  }

	  return bytes
	}

	function asciiToBytes (str) {
	  var byteArray = []
	  for (var i = 0; i < str.length; ++i) {
	    // Node's code seems to be doing this and not & 0x7F..
	    byteArray.push(str.charCodeAt(i) & 0xFF)
	  }
	  return byteArray
	}

	function utf16leToBytes (str, units) {
	  var c, hi, lo
	  var byteArray = []
	  for (var i = 0; i < str.length; ++i) {
	    if ((units -= 2) < 0) break

	    c = str.charCodeAt(i)
	    hi = c >> 8
	    lo = c % 256
	    byteArray.push(lo)
	    byteArray.push(hi)
	  }

	  return byteArray
	}

	function base64ToBytes (str) {
	  return base64.toByteArray(base64clean(str))
	}

	function blitBuffer (src, dst, offset, length) {
	  for (var i = 0; i < length; ++i) {
	    if ((i + offset >= dst.length) || (i >= src.length)) break
	    dst[i + offset] = src[i]
	  }
	  return i
	}

	function isnan (val) {
	  return val !== val // eslint-disable-line no-self-compare
	}

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(259).Buffer, (function() { return this; }())))

/***/ },
/* 260 */
/***/ function(module, exports) {

	'use strict'

	exports.byteLength = byteLength
	exports.toByteArray = toByteArray
	exports.fromByteArray = fromByteArray

	var lookup = []
	var revLookup = []
	var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array

	var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
	for (var i = 0, len = code.length; i < len; ++i) {
	  lookup[i] = code[i]
	  revLookup[code.charCodeAt(i)] = i
	}

	revLookup['-'.charCodeAt(0)] = 62
	revLookup['_'.charCodeAt(0)] = 63

	function placeHoldersCount (b64) {
	  var len = b64.length
	  if (len % 4 > 0) {
	    throw new Error('Invalid string. Length must be a multiple of 4')
	  }

	  // the number of equal signs (place holders)
	  // if there are two placeholders, than the two characters before it
	  // represent one byte
	  // if there is only one, then the three characters before it represent 2 bytes
	  // this is just a cheap hack to not do indexOf twice
	  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0
	}

	function byteLength (b64) {
	  // base64 is 4/3 + up to two characters of the original data
	  return b64.length * 3 / 4 - placeHoldersCount(b64)
	}

	function toByteArray (b64) {
	  var i, j, l, tmp, placeHolders, arr
	  var len = b64.length
	  placeHolders = placeHoldersCount(b64)

	  arr = new Arr(len * 3 / 4 - placeHolders)

	  // if there are placeholders, only get up to the last complete 4 chars
	  l = placeHolders > 0 ? len - 4 : len

	  var L = 0

	  for (i = 0, j = 0; i < l; i += 4, j += 3) {
	    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]
	    arr[L++] = (tmp >> 16) & 0xFF
	    arr[L++] = (tmp >> 8) & 0xFF
	    arr[L++] = tmp & 0xFF
	  }

	  if (placeHolders === 2) {
	    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)
	    arr[L++] = tmp & 0xFF
	  } else if (placeHolders === 1) {
	    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)
	    arr[L++] = (tmp >> 8) & 0xFF
	    arr[L++] = tmp & 0xFF
	  }

	  return arr
	}

	function tripletToBase64 (num) {
	  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]
	}

	function encodeChunk (uint8, start, end) {
	  var tmp
	  var output = []
	  for (var i = start; i < end; i += 3) {
	    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])
	    output.push(tripletToBase64(tmp))
	  }
	  return output.join('')
	}

	function fromByteArray (uint8) {
	  var tmp
	  var len = uint8.length
	  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes
	  var output = ''
	  var parts = []
	  var maxChunkLength = 16383 // must be multiple of 3

	  // go through the array every three bytes, we'll deal with trailing stuff later
	  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
	    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))
	  }

	  // pad the end with zeros, but make sure to not forget the extra bytes
	  if (extraBytes === 1) {
	    tmp = uint8[len - 1]
	    output += lookup[tmp >> 2]
	    output += lookup[(tmp << 4) & 0x3F]
	    output += '=='
	  } else if (extraBytes === 2) {
	    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])
	    output += lookup[tmp >> 10]
	    output += lookup[(tmp >> 4) & 0x3F]
	    output += lookup[(tmp << 2) & 0x3F]
	    output += '='
	  }

	  parts.push(output)

	  return parts.join('')
	}


/***/ },
/* 261 */
/***/ function(module, exports) {

	exports.read = function (buffer, offset, isLE, mLen, nBytes) {
	  var e, m
	  var eLen = nBytes * 8 - mLen - 1
	  var eMax = (1 << eLen) - 1
	  var eBias = eMax >> 1
	  var nBits = -7
	  var i = isLE ? (nBytes - 1) : 0
	  var d = isLE ? -1 : 1
	  var s = buffer[offset + i]

	  i += d

	  e = s & ((1 << (-nBits)) - 1)
	  s >>= (-nBits)
	  nBits += eLen
	  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}

	  m = e & ((1 << (-nBits)) - 1)
	  e >>= (-nBits)
	  nBits += mLen
	  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}

	  if (e === 0) {
	    e = 1 - eBias
	  } else if (e === eMax) {
	    return m ? NaN : ((s ? -1 : 1) * Infinity)
	  } else {
	    m = m + Math.pow(2, mLen)
	    e = e - eBias
	  }
	  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
	}

	exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
	  var e, m, c
	  var eLen = nBytes * 8 - mLen - 1
	  var eMax = (1 << eLen) - 1
	  var eBias = eMax >> 1
	  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
	  var i = isLE ? 0 : (nBytes - 1)
	  var d = isLE ? 1 : -1
	  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0

	  value = Math.abs(value)

	  if (isNaN(value) || value === Infinity) {
	    m = isNaN(value) ? 1 : 0
	    e = eMax
	  } else {
	    e = Math.floor(Math.log(value) / Math.LN2)
	    if (value * (c = Math.pow(2, -e)) < 1) {
	      e--
	      c *= 2
	    }
	    if (e + eBias >= 1) {
	      value += rt / c
	    } else {
	      value += rt * Math.pow(2, 1 - eBias)
	    }
	    if (value * c >= 2) {
	      e++
	      c /= 2
	    }

	    if (e + eBias >= eMax) {
	      m = 0
	      e = eMax
	    } else if (e + eBias >= 1) {
	      m = (value * c - 1) * Math.pow(2, mLen)
	      e = e + eBias
	    } else {
	      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
	      e = 0
	    }
	  }

	  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

	  e = (e << mLen) | m
	  eLen += mLen
	  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

	  buffer[offset + i - d] |= s * 128
	}


/***/ },
/* 262 */
/***/ function(module, exports) {

	var toString = {}.toString;

	module.exports = Array.isArray || function (arr) {
	  return toString.call(arr) == '[object Array]';
	};


/***/ },
/* 263 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Type = __webpack_require__(245);

	var _hasOwnProperty = Object.prototype.hasOwnProperty;
	var _toString       = Object.prototype.toString;

	function resolveYamlOmap(data) {
	  if (data === null) return true;

	  var objectKeys = [], index, length, pair, pairKey, pairHasKey,
	      object = data;

	  for (index = 0, length = object.length; index < length; index += 1) {
	    pair = object[index];
	    pairHasKey = false;

	    if (_toString.call(pair) !== '[object Object]') return false;

	    for (pairKey in pair) {
	      if (_hasOwnProperty.call(pair, pairKey)) {
	        if (!pairHasKey) pairHasKey = true;
	        else return false;
	      }
	    }

	    if (!pairHasKey) return false;

	    if (objectKeys.indexOf(pairKey) === -1) objectKeys.push(pairKey);
	    else return false;
	  }

	  return true;
	}

	function constructYamlOmap(data) {
	  return data !== null ? data : [];
	}

	module.exports = new Type('tag:yaml.org,2002:omap', {
	  kind: 'sequence',
	  resolve: resolveYamlOmap,
	  construct: constructYamlOmap
	});


/***/ },
/* 264 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Type = __webpack_require__(245);

	var _toString = Object.prototype.toString;

	function resolveYamlPairs(data) {
	  if (data === null) return true;

	  var index, length, pair, keys, result,
	      object = data;

	  result = new Array(object.length);

	  for (index = 0, length = object.length; index < length; index += 1) {
	    pair = object[index];

	    if (_toString.call(pair) !== '[object Object]') return false;

	    keys = Object.keys(pair);

	    if (keys.length !== 1) return false;

	    result[index] = [ keys[0], pair[keys[0]] ];
	  }

	  return true;
	}

	function constructYamlPairs(data) {
	  if (data === null) return [];

	  var index, length, pair, keys, result,
	      object = data;

	  result = new Array(object.length);

	  for (index = 0, length = object.length; index < length; index += 1) {
	    pair = object[index];

	    keys = Object.keys(pair);

	    result[index] = [ keys[0], pair[keys[0]] ];
	  }

	  return result;
	}

	module.exports = new Type('tag:yaml.org,2002:pairs', {
	  kind: 'sequence',
	  resolve: resolveYamlPairs,
	  construct: constructYamlPairs
	});


/***/ },
/* 265 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Type = __webpack_require__(245);

	var _hasOwnProperty = Object.prototype.hasOwnProperty;

	function resolveYamlSet(data) {
	  if (data === null) return true;

	  var key, object = data;

	  for (key in object) {
	    if (_hasOwnProperty.call(object, key)) {
	      if (object[key] !== null) return false;
	    }
	  }

	  return true;
	}

	function constructYamlSet(data) {
	  return data !== null ? data : {};
	}

	module.exports = new Type('tag:yaml.org,2002:set', {
	  kind: 'mapping',
	  resolve: resolveYamlSet,
	  construct: constructYamlSet
	});


/***/ },
/* 266 */
/***/ function(module, exports, __webpack_require__) {

	// JS-YAML's default schema for `load` function.
	// It is not described in the YAML specification.
	//
	// This schema is based on JS-YAML's default safe schema and includes
	// JavaScript-specific types: !!js/undefined, !!js/regexp and !!js/function.
	//
	// Also this schema is used as default base schema at `Schema.create` function.


	'use strict';


	var Schema = __webpack_require__(244);


	module.exports = Schema.DEFAULT = new Schema({
	  include: [
	    __webpack_require__(243)
	  ],
	  explicit: [
	    __webpack_require__(267),
	    __webpack_require__(268),
	    __webpack_require__(269)
	  ]
	});


/***/ },
/* 267 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Type = __webpack_require__(245);

	function resolveJavascriptUndefined() {
	  return true;
	}

	function constructJavascriptUndefined() {
	  /*eslint-disable no-undefined*/
	  return undefined;
	}

	function representJavascriptUndefined() {
	  return '';
	}

	function isUndefined(object) {
	  return typeof object === 'undefined';
	}

	module.exports = new Type('tag:yaml.org,2002:js/undefined', {
	  kind: 'scalar',
	  resolve: resolveJavascriptUndefined,
	  construct: constructJavascriptUndefined,
	  predicate: isUndefined,
	  represent: representJavascriptUndefined
	});


/***/ },
/* 268 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Type = __webpack_require__(245);

	function resolveJavascriptRegExp(data) {
	  if (data === null) return false;
	  if (data.length === 0) return false;

	  var regexp = data,
	      tail   = /\/([gim]*)$/.exec(data),
	      modifiers = '';

	  // if regexp starts with '/' it can have modifiers and must be properly closed
	  // `/foo/gim` - modifiers tail can be maximum 3 chars
	  if (regexp[0] === '/') {
	    if (tail) modifiers = tail[1];

	    if (modifiers.length > 3) return false;
	    // if expression starts with /, is should be properly terminated
	    if (regexp[regexp.length - modifiers.length - 1] !== '/') return false;
	  }

	  return true;
	}

	function constructJavascriptRegExp(data) {
	  var regexp = data,
	      tail   = /\/([gim]*)$/.exec(data),
	      modifiers = '';

	  // `/foo/gim` - tail can be maximum 4 chars
	  if (regexp[0] === '/') {
	    if (tail) modifiers = tail[1];
	    regexp = regexp.slice(1, regexp.length - modifiers.length - 1);
	  }

	  return new RegExp(regexp, modifiers);
	}

	function representJavascriptRegExp(object /*, style*/) {
	  var result = '/' + object.source + '/';

	  if (object.global) result += 'g';
	  if (object.multiline) result += 'm';
	  if (object.ignoreCase) result += 'i';

	  return result;
	}

	function isRegExp(object) {
	  return Object.prototype.toString.call(object) === '[object RegExp]';
	}

	module.exports = new Type('tag:yaml.org,2002:js/regexp', {
	  kind: 'scalar',
	  resolve: resolveJavascriptRegExp,
	  construct: constructJavascriptRegExp,
	  predicate: isRegExp,
	  represent: representJavascriptRegExp
	});


/***/ },
/* 269 */
/***/ function(module, exports, __webpack_require__) {

	var require;'use strict';

	var esprima;

	// Browserified version does not have esprima
	//
	// 1. For node.js just require module as deps
	// 2. For browser try to require mudule via external AMD system.
	//    If not found - try to fallback to window.esprima. If not
	//    found too - then fail to parse.
	//
	try {
	  // workaround to exclude package from browserify list.
	  var _require = require;
	  esprima = __webpack_require__(270);
	} catch (_) {
	  /*global window */
	  if (typeof window !== 'undefined') esprima = window.esprima;
	}

	var Type = __webpack_require__(245);

	function resolveJavascriptFunction(data) {
	  if (data === null) return false;

	  try {
	    var source = '(' + data + ')',
	        ast    = esprima.parse(source, { range: true });

	    if (ast.type                    !== 'Program'             ||
	        ast.body.length             !== 1                     ||
	        ast.body[0].type            !== 'ExpressionStatement' ||
	        ast.body[0].expression.type !== 'FunctionExpression') {
	      return false;
	    }

	    return true;
	  } catch (err) {
	    return false;
	  }
	}

	function constructJavascriptFunction(data) {
	  /*jslint evil:true*/

	  var source = '(' + data + ')',
	      ast    = esprima.parse(source, { range: true }),
	      params = [],
	      body;

	  if (ast.type                    !== 'Program'             ||
	      ast.body.length             !== 1                     ||
	      ast.body[0].type            !== 'ExpressionStatement' ||
	      ast.body[0].expression.type !== 'FunctionExpression') {
	    throw new Error('Failed to resolve function');
	  }

	  ast.body[0].expression.params.forEach(function (param) {
	    params.push(param.name);
	  });

	  body = ast.body[0].expression.body.range;

	  // Esprima's ranges include the first '{' and the last '}' characters on
	  // function expressions. So cut them out.
	  /*eslint-disable no-new-func*/
	  return new Function(params, source.slice(body[0] + 1, body[1] - 1));
	}

	function representJavascriptFunction(object /*, style*/) {
	  return object.toString();
	}

	function isFunction(object) {
	  return Object.prototype.toString.call(object) === '[object Function]';
	}

	module.exports = new Type('tag:yaml.org,2002:js/function', {
	  kind: 'scalar',
	  resolve: resolveJavascriptFunction,
	  construct: constructJavascriptFunction,
	  predicate: isFunction,
	  represent: representJavascriptFunction
	});


/***/ },
/* 270 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*
	  Copyright (c) jQuery Foundation, Inc. and Contributors, All Rights Reserved.

	  Redistribution and use in source and binary forms, with or without
	  modification, are permitted provided that the following conditions are met:

	    * Redistributions of source code must retain the above copyright
	      notice, this list of conditions and the following disclaimer.
	    * Redistributions in binary form must reproduce the above copyright
	      notice, this list of conditions and the following disclaimer in the
	      documentation and/or other materials provided with the distribution.

	  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
	  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
	  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
	  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY
	  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
	  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
	  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
	  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
	  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
	  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	*/

	(function (root, factory) {
	    'use strict';

	    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js,
	    // Rhino, and plain browser loading.

	    /* istanbul ignore next */
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	    } else if (typeof exports !== 'undefined') {
	        factory(exports);
	    } else {
	        factory((root.esprima = {}));
	    }
	}(this, function (exports) {
	    'use strict';

	    var Token,
	        TokenName,
	        FnExprTokens,
	        Syntax,
	        PlaceHolders,
	        Messages,
	        Regex,
	        source,
	        strict,
	        index,
	        lineNumber,
	        lineStart,
	        hasLineTerminator,
	        lastIndex,
	        lastLineNumber,
	        lastLineStart,
	        startIndex,
	        startLineNumber,
	        startLineStart,
	        scanning,
	        length,
	        lookahead,
	        state,
	        extra,
	        isBindingElement,
	        isAssignmentTarget,
	        firstCoverInitializedNameError;

	    Token = {
	        BooleanLiteral: 1,
	        EOF: 2,
	        Identifier: 3,
	        Keyword: 4,
	        NullLiteral: 5,
	        NumericLiteral: 6,
	        Punctuator: 7,
	        StringLiteral: 8,
	        RegularExpression: 9,
	        Template: 10
	    };

	    TokenName = {};
	    TokenName[Token.BooleanLiteral] = 'Boolean';
	    TokenName[Token.EOF] = '<end>';
	    TokenName[Token.Identifier] = 'Identifier';
	    TokenName[Token.Keyword] = 'Keyword';
	    TokenName[Token.NullLiteral] = 'Null';
	    TokenName[Token.NumericLiteral] = 'Numeric';
	    TokenName[Token.Punctuator] = 'Punctuator';
	    TokenName[Token.StringLiteral] = 'String';
	    TokenName[Token.RegularExpression] = 'RegularExpression';
	    TokenName[Token.Template] = 'Template';

	    // A function following one of those tokens is an expression.
	    FnExprTokens = ['(', '{', '[', 'in', 'typeof', 'instanceof', 'new',
	                    'return', 'case', 'delete', 'throw', 'void',
	                    // assignment operators
	                    '=', '+=', '-=', '*=', '/=', '%=', '<<=', '>>=', '>>>=',
	                    '&=', '|=', '^=', ',',
	                    // binary/unary operators
	                    '+', '-', '*', '/', '%', '++', '--', '<<', '>>', '>>>', '&',
	                    '|', '^', '!', '~', '&&', '||', '?', ':', '===', '==', '>=',
	                    '<=', '<', '>', '!=', '!=='];

	    Syntax = {
	        AssignmentExpression: 'AssignmentExpression',
	        AssignmentPattern: 'AssignmentPattern',
	        ArrayExpression: 'ArrayExpression',
	        ArrayPattern: 'ArrayPattern',
	        ArrowFunctionExpression: 'ArrowFunctionExpression',
	        BlockStatement: 'BlockStatement',
	        BinaryExpression: 'BinaryExpression',
	        BreakStatement: 'BreakStatement',
	        CallExpression: 'CallExpression',
	        CatchClause: 'CatchClause',
	        ClassBody: 'ClassBody',
	        ClassDeclaration: 'ClassDeclaration',
	        ClassExpression: 'ClassExpression',
	        ConditionalExpression: 'ConditionalExpression',
	        ContinueStatement: 'ContinueStatement',
	        DoWhileStatement: 'DoWhileStatement',
	        DebuggerStatement: 'DebuggerStatement',
	        EmptyStatement: 'EmptyStatement',
	        ExportAllDeclaration: 'ExportAllDeclaration',
	        ExportDefaultDeclaration: 'ExportDefaultDeclaration',
	        ExportNamedDeclaration: 'ExportNamedDeclaration',
	        ExportSpecifier: 'ExportSpecifier',
	        ExpressionStatement: 'ExpressionStatement',
	        ForStatement: 'ForStatement',
	        ForOfStatement: 'ForOfStatement',
	        ForInStatement: 'ForInStatement',
	        FunctionDeclaration: 'FunctionDeclaration',
	        FunctionExpression: 'FunctionExpression',
	        Identifier: 'Identifier',
	        IfStatement: 'IfStatement',
	        ImportDeclaration: 'ImportDeclaration',
	        ImportDefaultSpecifier: 'ImportDefaultSpecifier',
	        ImportNamespaceSpecifier: 'ImportNamespaceSpecifier',
	        ImportSpecifier: 'ImportSpecifier',
	        Literal: 'Literal',
	        LabeledStatement: 'LabeledStatement',
	        LogicalExpression: 'LogicalExpression',
	        MemberExpression: 'MemberExpression',
	        MetaProperty: 'MetaProperty',
	        MethodDefinition: 'MethodDefinition',
	        NewExpression: 'NewExpression',
	        ObjectExpression: 'ObjectExpression',
	        ObjectPattern: 'ObjectPattern',
	        Program: 'Program',
	        Property: 'Property',
	        RestElement: 'RestElement',
	        ReturnStatement: 'ReturnStatement',
	        SequenceExpression: 'SequenceExpression',
	        SpreadElement: 'SpreadElement',
	        Super: 'Super',
	        SwitchCase: 'SwitchCase',
	        SwitchStatement: 'SwitchStatement',
	        TaggedTemplateExpression: 'TaggedTemplateExpression',
	        TemplateElement: 'TemplateElement',
	        TemplateLiteral: 'TemplateLiteral',
	        ThisExpression: 'ThisExpression',
	        ThrowStatement: 'ThrowStatement',
	        TryStatement: 'TryStatement',
	        UnaryExpression: 'UnaryExpression',
	        UpdateExpression: 'UpdateExpression',
	        VariableDeclaration: 'VariableDeclaration',
	        VariableDeclarator: 'VariableDeclarator',
	        WhileStatement: 'WhileStatement',
	        WithStatement: 'WithStatement',
	        YieldExpression: 'YieldExpression'
	    };

	    PlaceHolders = {
	        ArrowParameterPlaceHolder: 'ArrowParameterPlaceHolder'
	    };

	    // Error messages should be identical to V8.
	    Messages = {
	        UnexpectedToken: 'Unexpected token %0',
	        UnexpectedNumber: 'Unexpected number',
	        UnexpectedString: 'Unexpected string',
	        UnexpectedIdentifier: 'Unexpected identifier',
	        UnexpectedReserved: 'Unexpected reserved word',
	        UnexpectedTemplate: 'Unexpected quasi %0',
	        UnexpectedEOS: 'Unexpected end of input',
	        NewlineAfterThrow: 'Illegal newline after throw',
	        InvalidRegExp: 'Invalid regular expression',
	        UnterminatedRegExp: 'Invalid regular expression: missing /',
	        InvalidLHSInAssignment: 'Invalid left-hand side in assignment',
	        InvalidLHSInForIn: 'Invalid left-hand side in for-in',
	        InvalidLHSInForLoop: 'Invalid left-hand side in for-loop',
	        MultipleDefaultsInSwitch: 'More than one default clause in switch statement',
	        NoCatchOrFinally: 'Missing catch or finally after try',
	        UnknownLabel: 'Undefined label \'%0\'',
	        Redeclaration: '%0 \'%1\' has already been declared',
	        IllegalContinue: 'Illegal continue statement',
	        IllegalBreak: 'Illegal break statement',
	        IllegalReturn: 'Illegal return statement',
	        StrictModeWith: 'Strict mode code may not include a with statement',
	        StrictCatchVariable: 'Catch variable may not be eval or arguments in strict mode',
	        StrictVarName: 'Variable name may not be eval or arguments in strict mode',
	        StrictParamName: 'Parameter name eval or arguments is not allowed in strict mode',
	        StrictParamDupe: 'Strict mode function may not have duplicate parameter names',
	        StrictFunctionName: 'Function name may not be eval or arguments in strict mode',
	        StrictOctalLiteral: 'Octal literals are not allowed in strict mode.',
	        StrictDelete: 'Delete of an unqualified identifier in strict mode.',
	        StrictLHSAssignment: 'Assignment to eval or arguments is not allowed in strict mode',
	        StrictLHSPostfix: 'Postfix increment/decrement may not have eval or arguments operand in strict mode',
	        StrictLHSPrefix: 'Prefix increment/decrement may not have eval or arguments operand in strict mode',
	        StrictReservedWord: 'Use of future reserved word in strict mode',
	        TemplateOctalLiteral: 'Octal literals are not allowed in template strings.',
	        ParameterAfterRestParameter: 'Rest parameter must be last formal parameter',
	        DefaultRestParameter: 'Unexpected token =',
	        ObjectPatternAsRestParameter: 'Unexpected token {',
	        DuplicateProtoProperty: 'Duplicate __proto__ fields are not allowed in object literals',
	        ConstructorSpecialMethod: 'Class constructor may not be an accessor',
	        DuplicateConstructor: 'A class may only have one constructor',
	        StaticPrototype: 'Classes may not have static property named prototype',
	        MissingFromClause: 'Unexpected token',
	        NoAsAfterImportNamespace: 'Unexpected token',
	        InvalidModuleSpecifier: 'Unexpected token',
	        IllegalImportDeclaration: 'Unexpected token',
	        IllegalExportDeclaration: 'Unexpected token',
	        DuplicateBinding: 'Duplicate binding %0'
	    };

	    // See also tools/generate-unicode-regex.js.
	    Regex = {
	        // ECMAScript 6/Unicode v7.0.0 NonAsciiIdentifierStart:
	        NonAsciiIdentifierStart: /[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0-\u08B2\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58\u0C59\u0C60\u0C61\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D60\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F4\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19C1-\u19C7\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309B-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FCC\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA78E\uA790-\uA7AD\uA7B0\uA7B1\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB5F\uAB64\uAB65\uABC0-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF30-\uDF4A\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48]|\uD804[\uDC03-\uDC37\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDE00-\uDE11\uDE13-\uDE2B\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF5D-\uDF61]|\uD805[\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDE00-\uDE2F\uDE44\uDE80-\uDEAA]|\uD806[\uDCA0-\uDCDF\uDCFF\uDEC0-\uDEF8]|\uD808[\uDC00-\uDF98]|\uD809[\uDC00-\uDC6E]|[\uD80C\uD840-\uD868\uD86A-\uD86C][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50\uDF93-\uDF9F]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD83A[\uDC00-\uDCC4]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D]|\uD87E[\uDC00-\uDE1D]/,

	        // ECMAScript 6/Unicode v7.0.0 NonAsciiIdentifierPart:
	        NonAsciiIdentifierPart: /[\xAA\xB5\xB7\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u0483-\u0487\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u05D0-\u05EA\u05F0-\u05F2\u0610-\u061A\u0620-\u0669\u066E-\u06D3\u06D5-\u06DC\u06DF-\u06E8\u06EA-\u06FC\u06FF\u0710-\u074A\u074D-\u07B1\u07C0-\u07F5\u07FA\u0800-\u082D\u0840-\u085B\u08A0-\u08B2\u08E4-\u0963\u0966-\u096F\u0971-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BC-\u09C4\u09C7\u09C8\u09CB-\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09E6-\u09F1\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A59-\u0A5C\u0A5E\u0A66-\u0A75\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABC-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AD0\u0AE0-\u0AE3\u0AE6-\u0AEF\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3C-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B66-\u0B6F\u0B71\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD0\u0BD7\u0BE6-\u0BEF\u0C00-\u0C03\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C58\u0C59\u0C60-\u0C63\u0C66-\u0C6F\u0C81-\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBC-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CE6-\u0CEF\u0CF1\u0CF2\u0D01-\u0D03\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D-\u0D44\u0D46-\u0D48\u0D4A-\u0D4E\u0D57\u0D60-\u0D63\u0D66-\u0D6F\u0D7A-\u0D7F\u0D82\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E01-\u0E3A\u0E40-\u0E4E\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB9\u0EBB-\u0EBD\u0EC0-\u0EC4\u0EC6\u0EC8-\u0ECD\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E-\u0F47\u0F49-\u0F6C\u0F71-\u0F84\u0F86-\u0F97\u0F99-\u0FBC\u0FC6\u1000-\u1049\u1050-\u109D\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135D-\u135F\u1369-\u1371\u1380-\u138F\u13A0-\u13F4\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176C\u176E-\u1770\u1772\u1773\u1780-\u17D3\u17D7\u17DC\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u1820-\u1877\u1880-\u18AA\u18B0-\u18F5\u1900-\u191E\u1920-\u192B\u1930-\u193B\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19DA\u1A00-\u1A1B\u1A20-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AA7\u1AB0-\u1ABD\u1B00-\u1B4B\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1BF3\u1C00-\u1C37\u1C40-\u1C49\u1C4D-\u1C7D\u1CD0-\u1CD2\u1CD4-\u1CF6\u1CF8\u1CF9\u1D00-\u1DF5\u1DFC-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u200C\u200D\u203F\u2040\u2054\u2071\u207F\u2090-\u209C\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D7F-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2DE0-\u2DFF\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3041-\u3096\u3099-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FCC\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66F\uA674-\uA67D\uA67F-\uA69D\uA69F-\uA6F1\uA717-\uA71F\uA722-\uA788\uA78B-\uA78E\uA790-\uA7AD\uA7B0\uA7B1\uA7F7-\uA827\uA840-\uA873\uA880-\uA8C4\uA8D0-\uA8D9\uA8E0-\uA8F7\uA8FB\uA900-\uA92D\uA930-\uA953\uA960-\uA97C\uA980-\uA9C0\uA9CF-\uA9D9\uA9E0-\uA9FE\uAA00-\uAA36\uAA40-\uAA4D\uAA50-\uAA59\uAA60-\uAA76\uAA7A-\uAAC2\uAADB-\uAADD\uAAE0-\uAAEF\uAAF2-\uAAF6\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB5F\uAB64\uAB65\uABC0-\uABEA\uABEC\uABED\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE00-\uFE0F\uFE20-\uFE2D\uFE33\uFE34\uFE4D-\uFE4F\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF3F\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDDFD\uDE80-\uDE9C\uDEA0-\uDED0\uDEE0\uDF00-\uDF1F\uDF30-\uDF4A\uDF50-\uDF7A\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCA0-\uDCA9\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00-\uDE03\uDE05\uDE06\uDE0C-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE38-\uDE3A\uDE3F\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE6\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48]|\uD804[\uDC00-\uDC46\uDC66-\uDC6F\uDC7F-\uDCBA\uDCD0-\uDCE8\uDCF0-\uDCF9\uDD00-\uDD34\uDD36-\uDD3F\uDD50-\uDD73\uDD76\uDD80-\uDDC4\uDDD0-\uDDDA\uDE00-\uDE11\uDE13-\uDE37\uDEB0-\uDEEA\uDEF0-\uDEF9\uDF01-\uDF03\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3C-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF57\uDF5D-\uDF63\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDC80-\uDCC5\uDCC7\uDCD0-\uDCD9\uDD80-\uDDB5\uDDB8-\uDDC0\uDE00-\uDE40\uDE44\uDE50-\uDE59\uDE80-\uDEB7\uDEC0-\uDEC9]|\uD806[\uDCA0-\uDCE9\uDCFF\uDEC0-\uDEF8]|\uD808[\uDC00-\uDF98]|\uD809[\uDC00-\uDC6E]|[\uD80C\uD840-\uD868\uD86A-\uD86C][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDE60-\uDE69\uDED0-\uDEED\uDEF0-\uDEF4\uDF00-\uDF36\uDF40-\uDF43\uDF50-\uDF59\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50-\uDF7E\uDF8F-\uDF9F]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99\uDC9D\uDC9E]|\uD834[\uDD65-\uDD69\uDD6D-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB\uDFCE-\uDFFF]|\uD83A[\uDC00-\uDCC4\uDCD0-\uDCD6]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D]|\uD87E[\uDC00-\uDE1D]|\uDB40[\uDD00-\uDDEF]/
	    };

	    // Ensure the condition is true, otherwise throw an error.
	    // This is only to have a better contract semantic, i.e. another safety net
	    // to catch a logic error. The condition shall be fulfilled in normal case.
	    // Do NOT use this to enforce a certain condition on any user input.

	    function assert(condition, message) {
	        /* istanbul ignore if */
	        if (!condition) {
	            throw new Error('ASSERT: ' + message);
	        }
	    }

	    function isDecimalDigit(ch) {
	        return (ch >= 0x30 && ch <= 0x39);   // 0..9
	    }

	    function isHexDigit(ch) {
	        return '0123456789abcdefABCDEF'.indexOf(ch) >= 0;
	    }

	    function isOctalDigit(ch) {
	        return '01234567'.indexOf(ch) >= 0;
	    }

	    function octalToDecimal(ch) {
	        // \0 is not octal escape sequence
	        var octal = (ch !== '0'), code = '01234567'.indexOf(ch);

	        if (index < length && isOctalDigit(source[index])) {
	            octal = true;
	            code = code * 8 + '01234567'.indexOf(source[index++]);

	            // 3 digits are only allowed when string starts
	            // with 0, 1, 2, 3
	            if ('0123'.indexOf(ch) >= 0 &&
	                    index < length &&
	                    isOctalDigit(source[index])) {
	                code = code * 8 + '01234567'.indexOf(source[index++]);
	            }
	        }

	        return {
	            code: code,
	            octal: octal
	        };
	    }

	    // ECMA-262 11.2 White Space

	    function isWhiteSpace(ch) {
	        return (ch === 0x20) || (ch === 0x09) || (ch === 0x0B) || (ch === 0x0C) || (ch === 0xA0) ||
	            (ch >= 0x1680 && [0x1680, 0x180E, 0x2000, 0x2001, 0x2002, 0x2003, 0x2004, 0x2005, 0x2006, 0x2007, 0x2008, 0x2009, 0x200A, 0x202F, 0x205F, 0x3000, 0xFEFF].indexOf(ch) >= 0);
	    }

	    // ECMA-262 11.3 Line Terminators

	    function isLineTerminator(ch) {
	        return (ch === 0x0A) || (ch === 0x0D) || (ch === 0x2028) || (ch === 0x2029);
	    }

	    // ECMA-262 11.6 Identifier Names and Identifiers

	    function fromCodePoint(cp) {
	        return (cp < 0x10000) ? String.fromCharCode(cp) :
	            String.fromCharCode(0xD800 + ((cp - 0x10000) >> 10)) +
	            String.fromCharCode(0xDC00 + ((cp - 0x10000) & 1023));
	    }

	    function isIdentifierStart(ch) {
	        return (ch === 0x24) || (ch === 0x5F) ||  // $ (dollar) and _ (underscore)
	            (ch >= 0x41 && ch <= 0x5A) ||         // A..Z
	            (ch >= 0x61 && ch <= 0x7A) ||         // a..z
	            (ch === 0x5C) ||                      // \ (backslash)
	            ((ch >= 0x80) && Regex.NonAsciiIdentifierStart.test(fromCodePoint(ch)));
	    }

	    function isIdentifierPart(ch) {
	        return (ch === 0x24) || (ch === 0x5F) ||  // $ (dollar) and _ (underscore)
	            (ch >= 0x41 && ch <= 0x5A) ||         // A..Z
	            (ch >= 0x61 && ch <= 0x7A) ||         // a..z
	            (ch >= 0x30 && ch <= 0x39) ||         // 0..9
	            (ch === 0x5C) ||                      // \ (backslash)
	            ((ch >= 0x80) && Regex.NonAsciiIdentifierPart.test(fromCodePoint(ch)));
	    }

	    // ECMA-262 11.6.2.2 Future Reserved Words

	    function isFutureReservedWord(id) {
	        switch (id) {
	        case 'enum':
	        case 'export':
	        case 'import':
	        case 'super':
	            return true;
	        default:
	            return false;
	        }
	    }

	    function isStrictModeReservedWord(id) {
	        switch (id) {
	        case 'implements':
	        case 'interface':
	        case 'package':
	        case 'private':
	        case 'protected':
	        case 'public':
	        case 'static':
	        case 'yield':
	        case 'let':
	            return true;
	        default:
	            return false;
	        }
	    }

	    function isRestrictedWord(id) {
	        return id === 'eval' || id === 'arguments';
	    }

	    // ECMA-262 11.6.2.1 Keywords

	    function isKeyword(id) {
	        switch (id.length) {
	        case 2:
	            return (id === 'if') || (id === 'in') || (id === 'do');
	        case 3:
	            return (id === 'var') || (id === 'for') || (id === 'new') ||
	                (id === 'try') || (id === 'let');
	        case 4:
	            return (id === 'this') || (id === 'else') || (id === 'case') ||
	                (id === 'void') || (id === 'with') || (id === 'enum');
	        case 5:
	            return (id === 'while') || (id === 'break') || (id === 'catch') ||
	                (id === 'throw') || (id === 'const') || (id === 'yield') ||
	                (id === 'class') || (id === 'super');
	        case 6:
	            return (id === 'return') || (id === 'typeof') || (id === 'delete') ||
	                (id === 'switch') || (id === 'export') || (id === 'import');
	        case 7:
	            return (id === 'default') || (id === 'finally') || (id === 'extends');
	        case 8:
	            return (id === 'function') || (id === 'continue') || (id === 'debugger');
	        case 10:
	            return (id === 'instanceof');
	        default:
	            return false;
	        }
	    }

	    // ECMA-262 11.4 Comments

	    function addComment(type, value, start, end, loc) {
	        var comment;

	        assert(typeof start === 'number', 'Comment must have valid position');

	        state.lastCommentStart = start;

	        comment = {
	            type: type,
	            value: value
	        };
	        if (extra.range) {
	            comment.range = [start, end];
	        }
	        if (extra.loc) {
	            comment.loc = loc;
	        }
	        extra.comments.push(comment);
	        if (extra.attachComment) {
	            extra.leadingComments.push(comment);
	            extra.trailingComments.push(comment);
	        }
	        if (extra.tokenize) {
	            comment.type = comment.type + 'Comment';
	            if (extra.delegate) {
	                comment = extra.delegate(comment);
	            }
	            extra.tokens.push(comment);
	        }
	    }

	    function skipSingleLineComment(offset) {
	        var start, loc, ch, comment;

	        start = index - offset;
	        loc = {
	            start: {
	                line: lineNumber,
	                column: index - lineStart - offset
	            }
	        };

	        while (index < length) {
	            ch = source.charCodeAt(index);
	            ++index;
	            if (isLineTerminator(ch)) {
	                hasLineTerminator = true;
	                if (extra.comments) {
	                    comment = source.slice(start + offset, index - 1);
	                    loc.end = {
	                        line: lineNumber,
	                        column: index - lineStart - 1
	                    };
	                    addComment('Line', comment, start, index - 1, loc);
	                }
	                if (ch === 13 && source.charCodeAt(index) === 10) {
	                    ++index;
	                }
	                ++lineNumber;
	                lineStart = index;
	                return;
	            }
	        }

	        if (extra.comments) {
	            comment = source.slice(start + offset, index);
	            loc.end = {
	                line: lineNumber,
	                column: index - lineStart
	            };
	            addComment('Line', comment, start, index, loc);
	        }
	    }

	    function skipMultiLineComment() {
	        var start, loc, ch, comment;

	        if (extra.comments) {
	            start = index - 2;
	            loc = {
	                start: {
	                    line: lineNumber,
	                    column: index - lineStart - 2
	                }
	            };
	        }

	        while (index < length) {
	            ch = source.charCodeAt(index);
	            if (isLineTerminator(ch)) {
	                if (ch === 0x0D && source.charCodeAt(index + 1) === 0x0A) {
	                    ++index;
	                }
	                hasLineTerminator = true;
	                ++lineNumber;
	                ++index;
	                lineStart = index;
	            } else if (ch === 0x2A) {
	                // Block comment ends with '*/'.
	                if (source.charCodeAt(index + 1) === 0x2F) {
	                    ++index;
	                    ++index;
	                    if (extra.comments) {
	                        comment = source.slice(start + 2, index - 2);
	                        loc.end = {
	                            line: lineNumber,
	                            column: index - lineStart
	                        };
	                        addComment('Block', comment, start, index, loc);
	                    }
	                    return;
	                }
	                ++index;
	            } else {
	                ++index;
	            }
	        }

	        // Ran off the end of the file - the whole thing is a comment
	        if (extra.comments) {
	            loc.end = {
	                line: lineNumber,
	                column: index - lineStart
	            };
	            comment = source.slice(start + 2, index);
	            addComment('Block', comment, start, index, loc);
	        }
	        tolerateUnexpectedToken();
	    }

	    function skipComment() {
	        var ch, start;
	        hasLineTerminator = false;

	        start = (index === 0);
	        while (index < length) {
	            ch = source.charCodeAt(index);

	            if (isWhiteSpace(ch)) {
	                ++index;
	            } else if (isLineTerminator(ch)) {
	                hasLineTerminator = true;
	                ++index;
	                if (ch === 0x0D && source.charCodeAt(index) === 0x0A) {
	                    ++index;
	                }
	                ++lineNumber;
	                lineStart = index;
	                start = true;
	            } else if (ch === 0x2F) { // U+002F is '/'
	                ch = source.charCodeAt(index + 1);
	                if (ch === 0x2F) {
	                    ++index;
	                    ++index;
	                    skipSingleLineComment(2);
	                    start = true;
	                } else if (ch === 0x2A) {  // U+002A is '*'
	                    ++index;
	                    ++index;
	                    skipMultiLineComment();
	                } else {
	                    break;
	                }
	            } else if (start && ch === 0x2D) { // U+002D is '-'
	                // U+003E is '>'
	                if ((source.charCodeAt(index + 1) === 0x2D) && (source.charCodeAt(index + 2) === 0x3E)) {
	                    // '-->' is a single-line comment
	                    index += 3;
	                    skipSingleLineComment(3);
	                } else {
	                    break;
	                }
	            } else if (ch === 0x3C) { // U+003C is '<'
	                if (source.slice(index + 1, index + 4) === '!--') {
	                    ++index; // `<`
	                    ++index; // `!`
	                    ++index; // `-`
	                    ++index; // `-`
	                    skipSingleLineComment(4);
	                } else {
	                    break;
	                }
	            } else {
	                break;
	            }
	        }
	    }

	    function scanHexEscape(prefix) {
	        var i, len, ch, code = 0;

	        len = (prefix === 'u') ? 4 : 2;
	        for (i = 0; i < len; ++i) {
	            if (index < length && isHexDigit(source[index])) {
	                ch = source[index++];
	                code = code * 16 + '0123456789abcdef'.indexOf(ch.toLowerCase());
	            } else {
	                return '';
	            }
	        }
	        return String.fromCharCode(code);
	    }

	    function scanUnicodeCodePointEscape() {
	        var ch, code;

	        ch = source[index];
	        code = 0;

	        // At least, one hex digit is required.
	        if (ch === '}') {
	            throwUnexpectedToken();
	        }

	        while (index < length) {
	            ch = source[index++];
	            if (!isHexDigit(ch)) {
	                break;
	            }
	            code = code * 16 + '0123456789abcdef'.indexOf(ch.toLowerCase());
	        }

	        if (code > 0x10FFFF || ch !== '}') {
	            throwUnexpectedToken();
	        }

	        return fromCodePoint(code);
	    }

	    function codePointAt(i) {
	        var cp, first, second;

	        cp = source.charCodeAt(i);
	        if (cp >= 0xD800 && cp <= 0xDBFF) {
	            second = source.charCodeAt(i + 1);
	            if (second >= 0xDC00 && second <= 0xDFFF) {
	                first = cp;
	                cp = (first - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;
	            }
	        }

	        return cp;
	    }

	    function getComplexIdentifier() {
	        var cp, ch, id;

	        cp = codePointAt(index);
	        id = fromCodePoint(cp);
	        index += id.length;

	        // '\u' (U+005C, U+0075) denotes an escaped character.
	        if (cp === 0x5C) {
	            if (source.charCodeAt(index) !== 0x75) {
	                throwUnexpectedToken();
	            }
	            ++index;
	            if (source[index] === '{') {
	                ++index;
	                ch = scanUnicodeCodePointEscape();
	            } else {
	                ch = scanHexEscape('u');
	                cp = ch.charCodeAt(0);
	                if (!ch || ch === '\\' || !isIdentifierStart(cp)) {
	                    throwUnexpectedToken();
	                }
	            }
	            id = ch;
	        }

	        while (index < length) {
	            cp = codePointAt(index);
	            if (!isIdentifierPart(cp)) {
	                break;
	            }
	            ch = fromCodePoint(cp);
	            id += ch;
	            index += ch.length;

	            // '\u' (U+005C, U+0075) denotes an escaped character.
	            if (cp === 0x5C) {
	                id = id.substr(0, id.length - 1);
	                if (source.charCodeAt(index) !== 0x75) {
	                    throwUnexpectedToken();
	                }
	                ++index;
	                if (source[index] === '{') {
	                    ++index;
	                    ch = scanUnicodeCodePointEscape();
	                } else {
	                    ch = scanHexEscape('u');
	                    cp = ch.charCodeAt(0);
	                    if (!ch || ch === '\\' || !isIdentifierPart(cp)) {
	                        throwUnexpectedToken();
	                    }
	                }
	                id += ch;
	            }
	        }

	        return id;
	    }

	    function getIdentifier() {
	        var start, ch;

	        start = index++;
	        while (index < length) {
	            ch = source.charCodeAt(index);
	            if (ch === 0x5C) {
	                // Blackslash (U+005C) marks Unicode escape sequence.
	                index = start;
	                return getComplexIdentifier();
	            } else if (ch >= 0xD800 && ch < 0xDFFF) {
	                // Need to handle surrogate pairs.
	                index = start;
	                return getComplexIdentifier();
	            }
	            if (isIdentifierPart(ch)) {
	                ++index;
	            } else {
	                break;
	            }
	        }

	        return source.slice(start, index);
	    }

	    function scanIdentifier() {
	        var start, id, type;

	        start = index;

	        // Backslash (U+005C) starts an escaped character.
	        id = (source.charCodeAt(index) === 0x5C) ? getComplexIdentifier() : getIdentifier();

	        // There is no keyword or literal with only one character.
	        // Thus, it must be an identifier.
	        if (id.length === 1) {
	            type = Token.Identifier;
	        } else if (isKeyword(id)) {
	            type = Token.Keyword;
	        } else if (id === 'null') {
	            type = Token.NullLiteral;
	        } else if (id === 'true' || id === 'false') {
	            type = Token.BooleanLiteral;
	        } else {
	            type = Token.Identifier;
	        }

	        return {
	            type: type,
	            value: id,
	            lineNumber: lineNumber,
	            lineStart: lineStart,
	            start: start,
	            end: index
	        };
	    }


	    // ECMA-262 11.7 Punctuators

	    function scanPunctuator() {
	        var token, str;

	        token = {
	            type: Token.Punctuator,
	            value: '',
	            lineNumber: lineNumber,
	            lineStart: lineStart,
	            start: index,
	            end: index
	        };

	        // Check for most common single-character punctuators.
	        str = source[index];
	        switch (str) {

	        case '(':
	            if (extra.tokenize) {
	                extra.openParenToken = extra.tokenValues.length;
	            }
	            ++index;
	            break;

	        case '{':
	            if (extra.tokenize) {
	                extra.openCurlyToken = extra.tokenValues.length;
	            }
	            state.curlyStack.push('{');
	            ++index;
	            break;

	        case '.':
	            ++index;
	            if (source[index] === '.' && source[index + 1] === '.') {
	                // Spread operator: ...
	                index += 2;
	                str = '...';
	            }
	            break;

	        case '}':
	            ++index;
	            state.curlyStack.pop();
	            break;
	        case ')':
	        case ';':
	        case ',':
	        case '[':
	        case ']':
	        case ':':
	        case '?':
	        case '~':
	            ++index;
	            break;

	        default:
	            // 4-character punctuator.
	            str = source.substr(index, 4);
	            if (str === '>>>=') {
	                index += 4;
	            } else {

	                // 3-character punctuators.
	                str = str.substr(0, 3);
	                if (str === '===' || str === '!==' || str === '>>>' ||
	                    str === '<<=' || str === '>>=') {
	                    index += 3;
	                } else {

	                    // 2-character punctuators.
	                    str = str.substr(0, 2);
	                    if (str === '&&' || str === '||' || str === '==' || str === '!=' ||
	                        str === '+=' || str === '-=' || str === '*=' || str === '/=' ||
	                        str === '++' || str === '--' || str === '<<' || str === '>>' ||
	                        str === '&=' || str === '|=' || str === '^=' || str === '%=' ||
	                        str === '<=' || str === '>=' || str === '=>') {
	                        index += 2;
	                    } else {

	                        // 1-character punctuators.
	                        str = source[index];
	                        if ('<>=!+-*%&|^/'.indexOf(str) >= 0) {
	                            ++index;
	                        }
	                    }
	                }
	            }
	        }

	        if (index === token.start) {
	            throwUnexpectedToken();
	        }

	        token.end = index;
	        token.value = str;
	        return token;
	    }

	    // ECMA-262 11.8.3 Numeric Literals

	    function scanHexLiteral(start) {
	        var number = '';

	        while (index < length) {
	            if (!isHexDigit(source[index])) {
	                break;
	            }
	            number += source[index++];
	        }

	        if (number.length === 0) {
	            throwUnexpectedToken();
	        }

	        if (isIdentifierStart(source.charCodeAt(index))) {
	            throwUnexpectedToken();
	        }

	        return {
	            type: Token.NumericLiteral,
	            value: parseInt('0x' + number, 16),
	            lineNumber: lineNumber,
	            lineStart: lineStart,
	            start: start,
	            end: index
	        };
	    }

	    function scanBinaryLiteral(start) {
	        var ch, number;

	        number = '';

	        while (index < length) {
	            ch = source[index];
	            if (ch !== '0' && ch !== '1') {
	                break;
	            }
	            number += source[index++];
	        }

	        if (number.length === 0) {
	            // only 0b or 0B
	            throwUnexpectedToken();
	        }

	        if (index < length) {
	            ch = source.charCodeAt(index);
	            /* istanbul ignore else */
	            if (isIdentifierStart(ch) || isDecimalDigit(ch)) {
	                throwUnexpectedToken();
	            }
	        }

	        return {
	            type: Token.NumericLiteral,
	            value: parseInt(number, 2),
	            lineNumber: lineNumber,
	            lineStart: lineStart,
	            start: start,
	            end: index
	        };
	    }

	    function scanOctalLiteral(prefix, start) {
	        var number, octal;

	        if (isOctalDigit(prefix)) {
	            octal = true;
	            number = '0' + source[index++];
	        } else {
	            octal = false;
	            ++index;
	            number = '';
	        }

	        while (index < length) {
	            if (!isOctalDigit(source[index])) {
	                break;
	            }
	            number += source[index++];
	        }

	        if (!octal && number.length === 0) {
	            // only 0o or 0O
	            throwUnexpectedToken();
	        }

	        if (isIdentifierStart(source.charCodeAt(index)) || isDecimalDigit(source.charCodeAt(index))) {
	            throwUnexpectedToken();
	        }

	        return {
	            type: Token.NumericLiteral,
	            value: parseInt(number, 8),
	            octal: octal,
	            lineNumber: lineNumber,
	            lineStart: lineStart,
	            start: start,
	            end: index
	        };
	    }

	    function isImplicitOctalLiteral() {
	        var i, ch;

	        // Implicit octal, unless there is a non-octal digit.
	        // (Annex B.1.1 on Numeric Literals)
	        for (i = index + 1; i < length; ++i) {
	            ch = source[i];
	            if (ch === '8' || ch === '9') {
	                return false;
	            }
	            if (!isOctalDigit(ch)) {
	                return true;
	            }
	        }

	        return true;
	    }

	    function scanNumericLiteral() {
	        var number, start, ch;

	        ch = source[index];
	        assert(isDecimalDigit(ch.charCodeAt(0)) || (ch === '.'),
	            'Numeric literal must start with a decimal digit or a decimal point');

	        start = index;
	        number = '';
	        if (ch !== '.') {
	            number = source[index++];
	            ch = source[index];

	            // Hex number starts with '0x'.
	            // Octal number starts with '0'.
	            // Octal number in ES6 starts with '0o'.
	            // Binary number in ES6 starts with '0b'.
	            if (number === '0') {
	                if (ch === 'x' || ch === 'X') {
	                    ++index;
	                    return scanHexLiteral(start);
	                }
	                if (ch === 'b' || ch === 'B') {
	                    ++index;
	                    return scanBinaryLiteral(start);
	                }
	                if (ch === 'o' || ch === 'O') {
	                    return scanOctalLiteral(ch, start);
	                }

	                if (isOctalDigit(ch)) {
	                    if (isImplicitOctalLiteral()) {
	                        return scanOctalLiteral(ch, start);
	                    }
	                }
	            }

	            while (isDecimalDigit(source.charCodeAt(index))) {
	                number += source[index++];
	            }
	            ch = source[index];
	        }

	        if (ch === '.') {
	            number += source[index++];
	            while (isDecimalDigit(source.charCodeAt(index))) {
	                number += source[index++];
	            }
	            ch = source[index];
	        }

	        if (ch === 'e' || ch === 'E') {
	            number += source[index++];

	            ch = source[index];
	            if (ch === '+' || ch === '-') {
	                number += source[index++];
	            }
	            if (isDecimalDigit(source.charCodeAt(index))) {
	                while (isDecimalDigit(source.charCodeAt(index))) {
	                    number += source[index++];
	                }
	            } else {
	                throwUnexpectedToken();
	            }
	        }

	        if (isIdentifierStart(source.charCodeAt(index))) {
	            throwUnexpectedToken();
	        }

	        return {
	            type: Token.NumericLiteral,
	            value: parseFloat(number),
	            lineNumber: lineNumber,
	            lineStart: lineStart,
	            start: start,
	            end: index
	        };
	    }

	    // ECMA-262 11.8.4 String Literals

	    function scanStringLiteral() {
	        var str = '', quote, start, ch, unescaped, octToDec, octal = false;

	        quote = source[index];
	        assert((quote === '\'' || quote === '"'),
	            'String literal must starts with a quote');

	        start = index;
	        ++index;

	        while (index < length) {
	            ch = source[index++];

	            if (ch === quote) {
	                quote = '';
	                break;
	            } else if (ch === '\\') {
	                ch = source[index++];
	                if (!ch || !isLineTerminator(ch.charCodeAt(0))) {
	                    switch (ch) {
	                    case 'u':
	                    case 'x':
	                        if (source[index] === '{') {
	                            ++index;
	                            str += scanUnicodeCodePointEscape();
	                        } else {
	                            unescaped = scanHexEscape(ch);
	                            if (!unescaped) {
	                                throw throwUnexpectedToken();
	                            }
	                            str += unescaped;
	                        }
	                        break;
	                    case 'n':
	                        str += '\n';
	                        break;
	                    case 'r':
	                        str += '\r';
	                        break;
	                    case 't':
	                        str += '\t';
	                        break;
	                    case 'b':
	                        str += '\b';
	                        break;
	                    case 'f':
	                        str += '\f';
	                        break;
	                    case 'v':
	                        str += '\x0B';
	                        break;
	                    case '8':
	                    case '9':
	                        str += ch;
	                        tolerateUnexpectedToken();
	                        break;

	                    default:
	                        if (isOctalDigit(ch)) {
	                            octToDec = octalToDecimal(ch);

	                            octal = octToDec.octal || octal;
	                            str += String.fromCharCode(octToDec.code);
	                        } else {
	                            str += ch;
	                        }
	                        break;
	                    }
	                } else {
	                    ++lineNumber;
	                    if (ch === '\r' && source[index] === '\n') {
	                        ++index;
	                    }
	                    lineStart = index;
	                }
	            } else if (isLineTerminator(ch.charCodeAt(0))) {
	                break;
	            } else {
	                str += ch;
	            }
	        }

	        if (quote !== '') {
	            index = start;
	            throwUnexpectedToken();
	        }

	        return {
	            type: Token.StringLiteral,
	            value: str,
	            octal: octal,
	            lineNumber: startLineNumber,
	            lineStart: startLineStart,
	            start: start,
	            end: index
	        };
	    }

	    // ECMA-262 11.8.6 Template Literal Lexical Components

	    function scanTemplate() {
	        var cooked = '', ch, start, rawOffset, terminated, head, tail, restore, unescaped;

	        terminated = false;
	        tail = false;
	        start = index;
	        head = (source[index] === '`');
	        rawOffset = 2;

	        ++index;

	        while (index < length) {
	            ch = source[index++];
	            if (ch === '`') {
	                rawOffset = 1;
	                tail = true;
	                terminated = true;
	                break;
	            } else if (ch === '$') {
	                if (source[index] === '{') {
	                    state.curlyStack.push('${');
	                    ++index;
	                    terminated = true;
	                    break;
	                }
	                cooked += ch;
	            } else if (ch === '\\') {
	                ch = source[index++];
	                if (!isLineTerminator(ch.charCodeAt(0))) {
	                    switch (ch) {
	                    case 'n':
	                        cooked += '\n';
	                        break;
	                    case 'r':
	                        cooked += '\r';
	                        break;
	                    case 't':
	                        cooked += '\t';
	                        break;
	                    case 'u':
	                    case 'x':
	                        if (source[index] === '{') {
	                            ++index;
	                            cooked += scanUnicodeCodePointEscape();
	                        } else {
	                            restore = index;
	                            unescaped = scanHexEscape(ch);
	                            if (unescaped) {
	                                cooked += unescaped;
	                            } else {
	                                index = restore;
	                                cooked += ch;
	                            }
	                        }
	                        break;
	                    case 'b':
	                        cooked += '\b';
	                        break;
	                    case 'f':
	                        cooked += '\f';
	                        break;
	                    case 'v':
	                        cooked += '\v';
	                        break;

	                    default:
	                        if (ch === '0') {
	                            if (isDecimalDigit(source.charCodeAt(index))) {
	                                // Illegal: \01 \02 and so on
	                                throwError(Messages.TemplateOctalLiteral);
	                            }
	                            cooked += '\0';
	                        } else if (isOctalDigit(ch)) {
	                            // Illegal: \1 \2
	                            throwError(Messages.TemplateOctalLiteral);
	                        } else {
	                            cooked += ch;
	                        }
	                        break;
	                    }
	                } else {
	                    ++lineNumber;
	                    if (ch === '\r' && source[index] === '\n') {
	                        ++index;
	                    }
	                    lineStart = index;
	                }
	            } else if (isLineTerminator(ch.charCodeAt(0))) {
	                ++lineNumber;
	                if (ch === '\r' && source[index] === '\n') {
	                    ++index;
	                }
	                lineStart = index;
	                cooked += '\n';
	            } else {
	                cooked += ch;
	            }
	        }

	        if (!terminated) {
	            throwUnexpectedToken();
	        }

	        if (!head) {
	            state.curlyStack.pop();
	        }

	        return {
	            type: Token.Template,
	            value: {
	                cooked: cooked,
	                raw: source.slice(start + 1, index - rawOffset)
	            },
	            head: head,
	            tail: tail,
	            lineNumber: lineNumber,
	            lineStart: lineStart,
	            start: start,
	            end: index
	        };
	    }

	    // ECMA-262 11.8.5 Regular Expression Literals

	    function testRegExp(pattern, flags) {
	        // The BMP character to use as a replacement for astral symbols when
	        // translating an ES6 "u"-flagged pattern to an ES5-compatible
	        // approximation.
	        // Note: replacing with '\uFFFF' enables false positives in unlikely
	        // scenarios. For example, `[\u{1044f}-\u{10440}]` is an invalid
	        // pattern that would not be detected by this substitution.
	        var astralSubstitute = '\uFFFF',
	            tmp = pattern;

	        if (flags.indexOf('u') >= 0) {
	            tmp = tmp
	                // Replace every Unicode escape sequence with the equivalent
	                // BMP character or a constant ASCII code point in the case of
	                // astral symbols. (See the above note on `astralSubstitute`
	                // for more information.)
	                .replace(/\\u\{([0-9a-fA-F]+)\}|\\u([a-fA-F0-9]{4})/g, function ($0, $1, $2) {
	                    var codePoint = parseInt($1 || $2, 16);
	                    if (codePoint > 0x10FFFF) {
	                        throwUnexpectedToken(null, Messages.InvalidRegExp);
	                    }
	                    if (codePoint <= 0xFFFF) {
	                        return String.fromCharCode(codePoint);
	                    }
	                    return astralSubstitute;
	                })
	                // Replace each paired surrogate with a single ASCII symbol to
	                // avoid throwing on regular expressions that are only valid in
	                // combination with the "u" flag.
	                .replace(
	                    /[\uD800-\uDBFF][\uDC00-\uDFFF]/g,
	                    astralSubstitute
	                );
	        }

	        // First, detect invalid regular expressions.
	        try {
	            RegExp(tmp);
	        } catch (e) {
	            throwUnexpectedToken(null, Messages.InvalidRegExp);
	        }

	        // Return a regular expression object for this pattern-flag pair, or
	        // `null` in case the current environment doesn't support the flags it
	        // uses.
	        try {
	            return new RegExp(pattern, flags);
	        } catch (exception) {
	            return null;
	        }
	    }

	    function scanRegExpBody() {
	        var ch, str, classMarker, terminated, body;

	        ch = source[index];
	        assert(ch === '/', 'Regular expression literal must start with a slash');
	        str = source[index++];

	        classMarker = false;
	        terminated = false;
	        while (index < length) {
	            ch = source[index++];
	            str += ch;
	            if (ch === '\\') {
	                ch = source[index++];
	                // ECMA-262 7.8.5
	                if (isLineTerminator(ch.charCodeAt(0))) {
	                    throwUnexpectedToken(null, Messages.UnterminatedRegExp);
	                }
	                str += ch;
	            } else if (isLineTerminator(ch.charCodeAt(0))) {
	                throwUnexpectedToken(null, Messages.UnterminatedRegExp);
	            } else if (classMarker) {
	                if (ch === ']') {
	                    classMarker = false;
	                }
	            } else {
	                if (ch === '/') {
	                    terminated = true;
	                    break;
	                } else if (ch === '[') {
	                    classMarker = true;
	                }
	            }
	        }

	        if (!terminated) {
	            throwUnexpectedToken(null, Messages.UnterminatedRegExp);
	        }

	        // Exclude leading and trailing slash.
	        body = str.substr(1, str.length - 2);
	        return {
	            value: body,
	            literal: str
	        };
	    }

	    function scanRegExpFlags() {
	        var ch, str, flags, restore;

	        str = '';
	        flags = '';
	        while (index < length) {
	            ch = source[index];
	            if (!isIdentifierPart(ch.charCodeAt(0))) {
	                break;
	            }

	            ++index;
	            if (ch === '\\' && index < length) {
	                ch = source[index];
	                if (ch === 'u') {
	                    ++index;
	                    restore = index;
	                    ch = scanHexEscape('u');
	                    if (ch) {
	                        flags += ch;
	                        for (str += '\\u'; restore < index; ++restore) {
	                            str += source[restore];
	                        }
	                    } else {
	                        index = restore;
	                        flags += 'u';
	                        str += '\\u';
	                    }
	                    tolerateUnexpectedToken();
	                } else {
	                    str += '\\';
	                    tolerateUnexpectedToken();
	                }
	            } else {
	                flags += ch;
	                str += ch;
	            }
	        }

	        return {
	            value: flags,
	            literal: str
	        };
	    }

	    function scanRegExp() {
	        var start, body, flags, value;
	        scanning = true;

	        lookahead = null;
	        skipComment();
	        start = index;

	        body = scanRegExpBody();
	        flags = scanRegExpFlags();
	        value = testRegExp(body.value, flags.value);
	        scanning = false;
	        if (extra.tokenize) {
	            return {
	                type: Token.RegularExpression,
	                value: value,
	                regex: {
	                    pattern: body.value,
	                    flags: flags.value
	                },
	                lineNumber: lineNumber,
	                lineStart: lineStart,
	                start: start,
	                end: index
	            };
	        }

	        return {
	            literal: body.literal + flags.literal,
	            value: value,
	            regex: {
	                pattern: body.value,
	                flags: flags.value
	            },
	            start: start,
	            end: index
	        };
	    }

	    function collectRegex() {
	        var pos, loc, regex, token;

	        skipComment();

	        pos = index;
	        loc = {
	            start: {
	                line: lineNumber,
	                column: index - lineStart
	            }
	        };

	        regex = scanRegExp();

	        loc.end = {
	            line: lineNumber,
	            column: index - lineStart
	        };

	        /* istanbul ignore next */
	        if (!extra.tokenize) {
	            // Pop the previous token, which is likely '/' or '/='
	            if (extra.tokens.length > 0) {
	                token = extra.tokens[extra.tokens.length - 1];
	                if (token.range[0] === pos && token.type === 'Punctuator') {
	                    if (token.value === '/' || token.value === '/=') {
	                        extra.tokens.pop();
	                    }
	                }
	            }

	            extra.tokens.push({
	                type: 'RegularExpression',
	                value: regex.literal,
	                regex: regex.regex,
	                range: [pos, index],
	                loc: loc
	            });
	        }

	        return regex;
	    }

	    function isIdentifierName(token) {
	        return token.type === Token.Identifier ||
	            token.type === Token.Keyword ||
	            token.type === Token.BooleanLiteral ||
	            token.type === Token.NullLiteral;
	    }

	    // Using the following algorithm:
	    // https://github.com/mozilla/sweet.js/wiki/design

	    function advanceSlash() {
	        var regex, previous, check;

	        function testKeyword(value) {
	            return value && (value.length > 1) && (value[0] >= 'a') && (value[0] <= 'z');
	        }

	        previous = extra.tokenValues[extra.tokens.length - 1];
	        regex = (previous !== null);

	        switch (previous) {
	        case 'this':
	        case ']':
	            regex = false;
	            break;

	        case ')':
	            check = extra.tokenValues[extra.openParenToken - 1];
	            regex = (check === 'if' || check === 'while' || check === 'for' || check === 'with');
	            break;

	        case '}':
	            // Dividing a function by anything makes little sense,
	            // but we have to check for that.
	            regex = false;
	            if (testKeyword(extra.tokenValues[extra.openCurlyToken - 3])) {
	                // Anonymous function, e.g. function(){} /42
	                check = extra.tokenValues[extra.openCurlyToken - 4];
	                regex = check ? (FnExprTokens.indexOf(check) < 0) : false;
	            } else if (testKeyword(extra.tokenValues[extra.openCurlyToken - 4])) {
	                // Named function, e.g. function f(){} /42/
	                check = extra.tokenValues[extra.openCurlyToken - 5];
	                regex = check ? (FnExprTokens.indexOf(check) < 0) : true;
	            }
	        }

	        return regex ? collectRegex() : scanPunctuator();
	    }

	    function advance() {
	        var cp, token;

	        if (index >= length) {
	            return {
	                type: Token.EOF,
	                lineNumber: lineNumber,
	                lineStart: lineStart,
	                start: index,
	                end: index
	            };
	        }

	        cp = source.charCodeAt(index);

	        if (isIdentifierStart(cp)) {
	            token = scanIdentifier();
	            if (strict && isStrictModeReservedWord(token.value)) {
	                token.type = Token.Keyword;
	            }
	            return token;
	        }

	        // Very common: ( and ) and ;
	        if (cp === 0x28 || cp === 0x29 || cp === 0x3B) {
	            return scanPunctuator();
	        }

	        // String literal starts with single quote (U+0027) or double quote (U+0022).
	        if (cp === 0x27 || cp === 0x22) {
	            return scanStringLiteral();
	        }

	        // Dot (.) U+002E can also start a floating-point number, hence the need
	        // to check the next character.
	        if (cp === 0x2E) {
	            if (isDecimalDigit(source.charCodeAt(index + 1))) {
	                return scanNumericLiteral();
	            }
	            return scanPunctuator();
	        }

	        if (isDecimalDigit(cp)) {
	            return scanNumericLiteral();
	        }

	        // Slash (/) U+002F can also start a regex.
	        if (extra.tokenize && cp === 0x2F) {
	            return advanceSlash();
	        }

	        // Template literals start with ` (U+0060) for template head
	        // or } (U+007D) for template middle or template tail.
	        if (cp === 0x60 || (cp === 0x7D && state.curlyStack[state.curlyStack.length - 1] === '${')) {
	            return scanTemplate();
	        }

	        // Possible identifier start in a surrogate pair.
	        if (cp >= 0xD800 && cp < 0xDFFF) {
	            cp = codePointAt(index);
	            if (isIdentifierStart(cp)) {
	                return scanIdentifier();
	            }
	        }

	        return scanPunctuator();
	    }

	    function collectToken() {
	        var loc, token, value, entry;

	        loc = {
	            start: {
	                line: lineNumber,
	                column: index - lineStart
	            }
	        };

	        token = advance();
	        loc.end = {
	            line: lineNumber,
	            column: index - lineStart
	        };

	        if (token.type !== Token.EOF) {
	            value = source.slice(token.start, token.end);
	            entry = {
	                type: TokenName[token.type],
	                value: value,
	                range: [token.start, token.end],
	                loc: loc
	            };
	            if (token.regex) {
	                entry.regex = {
	                    pattern: token.regex.pattern,
	                    flags: token.regex.flags
	                };
	            }
	            if (extra.tokenValues) {
	                extra.tokenValues.push((entry.type === 'Punctuator' || entry.type === 'Keyword') ? entry.value : null);
	            }
	            if (extra.tokenize) {
	                if (!extra.range) {
	                    delete entry.range;
	                }
	                if (!extra.loc) {
	                    delete entry.loc;
	                }
	                if (extra.delegate) {
	                    entry = extra.delegate(entry);
	                }
	            }
	            extra.tokens.push(entry);
	        }

	        return token;
	    }

	    function lex() {
	        var token;
	        scanning = true;

	        lastIndex = index;
	        lastLineNumber = lineNumber;
	        lastLineStart = lineStart;

	        skipComment();

	        token = lookahead;

	        startIndex = index;
	        startLineNumber = lineNumber;
	        startLineStart = lineStart;

	        lookahead = (typeof extra.tokens !== 'undefined') ? collectToken() : advance();
	        scanning = false;
	        return token;
	    }

	    function peek() {
	        scanning = true;

	        skipComment();

	        lastIndex = index;
	        lastLineNumber = lineNumber;
	        lastLineStart = lineStart;

	        startIndex = index;
	        startLineNumber = lineNumber;
	        startLineStart = lineStart;

	        lookahead = (typeof extra.tokens !== 'undefined') ? collectToken() : advance();
	        scanning = false;
	    }

	    function Position() {
	        this.line = startLineNumber;
	        this.column = startIndex - startLineStart;
	    }

	    function SourceLocation() {
	        this.start = new Position();
	        this.end = null;
	    }

	    function WrappingSourceLocation(startToken) {
	        this.start = {
	            line: startToken.lineNumber,
	            column: startToken.start - startToken.lineStart
	        };
	        this.end = null;
	    }

	    function Node() {
	        if (extra.range) {
	            this.range = [startIndex, 0];
	        }
	        if (extra.loc) {
	            this.loc = new SourceLocation();
	        }
	    }

	    function WrappingNode(startToken) {
	        if (extra.range) {
	            this.range = [startToken.start, 0];
	        }
	        if (extra.loc) {
	            this.loc = new WrappingSourceLocation(startToken);
	        }
	    }

	    WrappingNode.prototype = Node.prototype = {

	        processComment: function () {
	            var lastChild,
	                innerComments,
	                leadingComments,
	                trailingComments,
	                bottomRight = extra.bottomRightStack,
	                i,
	                comment,
	                last = bottomRight[bottomRight.length - 1];

	            if (this.type === Syntax.Program) {
	                if (this.body.length > 0) {
	                    return;
	                }
	            }
	            /**
	             * patch innnerComments for properties empty block
	             * `function a() {/** comments **\/}`
	             */

	            if (this.type === Syntax.BlockStatement && this.body.length === 0) {
	                innerComments = [];
	                for (i = extra.leadingComments.length - 1; i >= 0; --i) {
	                    comment = extra.leadingComments[i];
	                    if (this.range[1] >= comment.range[1]) {
	                        innerComments.unshift(comment);
	                        extra.leadingComments.splice(i, 1);
	                        extra.trailingComments.splice(i, 1);
	                    }
	                }
	                if (innerComments.length) {
	                    this.innerComments = innerComments;
	                    //bottomRight.push(this);
	                    return;
	                }
	            }

	            if (extra.trailingComments.length > 0) {
	                trailingComments = [];
	                for (i = extra.trailingComments.length - 1; i >= 0; --i) {
	                    comment = extra.trailingComments[i];
	                    if (comment.range[0] >= this.range[1]) {
	                        trailingComments.unshift(comment);
	                        extra.trailingComments.splice(i, 1);
	                    }
	                }
	                extra.trailingComments = [];
	            } else {
	                if (last && last.trailingComments && last.trailingComments[0].range[0] >= this.range[1]) {
	                    trailingComments = last.trailingComments;
	                    delete last.trailingComments;
	                }
	            }

	            // Eating the stack.
	            while (last && last.range[0] >= this.range[0]) {
	                lastChild = bottomRight.pop();
	                last = bottomRight[bottomRight.length - 1];
	            }

	            if (lastChild) {
	                if (lastChild.leadingComments) {
	                    leadingComments = [];
	                    for (i = lastChild.leadingComments.length - 1; i >= 0; --i) {
	                        comment = lastChild.leadingComments[i];
	                        if (comment.range[1] <= this.range[0]) {
	                            leadingComments.unshift(comment);
	                            lastChild.leadingComments.splice(i, 1);
	                        }
	                    }

	                    if (!lastChild.leadingComments.length) {
	                        lastChild.leadingComments = undefined;
	                    }
	                }
	            } else if (extra.leadingComments.length > 0) {
	                leadingComments = [];
	                for (i = extra.leadingComments.length - 1; i >= 0; --i) {
	                    comment = extra.leadingComments[i];
	                    if (comment.range[1] <= this.range[0]) {
	                        leadingComments.unshift(comment);
	                        extra.leadingComments.splice(i, 1);
	                    }
	                }
	            }


	            if (leadingComments && leadingComments.length > 0) {
	                this.leadingComments = leadingComments;
	            }
	            if (trailingComments && trailingComments.length > 0) {
	                this.trailingComments = trailingComments;
	            }

	            bottomRight.push(this);
	        },

	        finish: function () {
	            if (extra.range) {
	                this.range[1] = lastIndex;
	            }
	            if (extra.loc) {
	                this.loc.end = {
	                    line: lastLineNumber,
	                    column: lastIndex - lastLineStart
	                };
	                if (extra.source) {
	                    this.loc.source = extra.source;
	                }
	            }

	            if (extra.attachComment) {
	                this.processComment();
	            }
	        },

	        finishArrayExpression: function (elements) {
	            this.type = Syntax.ArrayExpression;
	            this.elements = elements;
	            this.finish();
	            return this;
	        },

	        finishArrayPattern: function (elements) {
	            this.type = Syntax.ArrayPattern;
	            this.elements = elements;
	            this.finish();
	            return this;
	        },

	        finishArrowFunctionExpression: function (params, defaults, body, expression) {
	            this.type = Syntax.ArrowFunctionExpression;
	            this.id = null;
	            this.params = params;
	            this.defaults = defaults;
	            this.body = body;
	            this.generator = false;
	            this.expression = expression;
	            this.finish();
	            return this;
	        },

	        finishAssignmentExpression: function (operator, left, right) {
	            this.type = Syntax.AssignmentExpression;
	            this.operator = operator;
	            this.left = left;
	            this.right = right;
	            this.finish();
	            return this;
	        },

	        finishAssignmentPattern: function (left, right) {
	            this.type = Syntax.AssignmentPattern;
	            this.left = left;
	            this.right = right;
	            this.finish();
	            return this;
	        },

	        finishBinaryExpression: function (operator, left, right) {
	            this.type = (operator === '||' || operator === '&&') ? Syntax.LogicalExpression : Syntax.BinaryExpression;
	            this.operator = operator;
	            this.left = left;
	            this.right = right;
	            this.finish();
	            return this;
	        },

	        finishBlockStatement: function (body) {
	            this.type = Syntax.BlockStatement;
	            this.body = body;
	            this.finish();
	            return this;
	        },

	        finishBreakStatement: function (label) {
	            this.type = Syntax.BreakStatement;
	            this.label = label;
	            this.finish();
	            return this;
	        },

	        finishCallExpression: function (callee, args) {
	            this.type = Syntax.CallExpression;
	            this.callee = callee;
	            this.arguments = args;
	            this.finish();
	            return this;
	        },

	        finishCatchClause: function (param, body) {
	            this.type = Syntax.CatchClause;
	            this.param = param;
	            this.body = body;
	            this.finish();
	            return this;
	        },

	        finishClassBody: function (body) {
	            this.type = Syntax.ClassBody;
	            this.body = body;
	            this.finish();
	            return this;
	        },

	        finishClassDeclaration: function (id, superClass, body) {
	            this.type = Syntax.ClassDeclaration;
	            this.id = id;
	            this.superClass = superClass;
	            this.body = body;
	            this.finish();
	            return this;
	        },

	        finishClassExpression: function (id, superClass, body) {
	            this.type = Syntax.ClassExpression;
	            this.id = id;
	            this.superClass = superClass;
	            this.body = body;
	            this.finish();
	            return this;
	        },

	        finishConditionalExpression: function (test, consequent, alternate) {
	            this.type = Syntax.ConditionalExpression;
	            this.test = test;
	            this.consequent = consequent;
	            this.alternate = alternate;
	            this.finish();
	            return this;
	        },

	        finishContinueStatement: function (label) {
	            this.type = Syntax.ContinueStatement;
	            this.label = label;
	            this.finish();
	            return this;
	        },

	        finishDebuggerStatement: function () {
	            this.type = Syntax.DebuggerStatement;
	            this.finish();
	            return this;
	        },

	        finishDoWhileStatement: function (body, test) {
	            this.type = Syntax.DoWhileStatement;
	            this.body = body;
	            this.test = test;
	            this.finish();
	            return this;
	        },

	        finishEmptyStatement: function () {
	            this.type = Syntax.EmptyStatement;
	            this.finish();
	            return this;
	        },

	        finishExpressionStatement: function (expression) {
	            this.type = Syntax.ExpressionStatement;
	            this.expression = expression;
	            this.finish();
	            return this;
	        },

	        finishForStatement: function (init, test, update, body) {
	            this.type = Syntax.ForStatement;
	            this.init = init;
	            this.test = test;
	            this.update = update;
	            this.body = body;
	            this.finish();
	            return this;
	        },

	        finishForOfStatement: function (left, right, body) {
	            this.type = Syntax.ForOfStatement;
	            this.left = left;
	            this.right = right;
	            this.body = body;
	            this.finish();
	            return this;
	        },

	        finishForInStatement: function (left, right, body) {
	            this.type = Syntax.ForInStatement;
	            this.left = left;
	            this.right = right;
	            this.body = body;
	            this.each = false;
	            this.finish();
	            return this;
	        },

	        finishFunctionDeclaration: function (id, params, defaults, body, generator) {
	            this.type = Syntax.FunctionDeclaration;
	            this.id = id;
	            this.params = params;
	            this.defaults = defaults;
	            this.body = body;
	            this.generator = generator;
	            this.expression = false;
	            this.finish();
	            return this;
	        },

	        finishFunctionExpression: function (id, params, defaults, body, generator) {
	            this.type = Syntax.FunctionExpression;
	            this.id = id;
	            this.params = params;
	            this.defaults = defaults;
	            this.body = body;
	            this.generator = generator;
	            this.expression = false;
	            this.finish();
	            return this;
	        },

	        finishIdentifier: function (name) {
	            this.type = Syntax.Identifier;
	            this.name = name;
	            this.finish();
	            return this;
	        },

	        finishIfStatement: function (test, consequent, alternate) {
	            this.type = Syntax.IfStatement;
	            this.test = test;
	            this.consequent = consequent;
	            this.alternate = alternate;
	            this.finish();
	            return this;
	        },

	        finishLabeledStatement: function (label, body) {
	            this.type = Syntax.LabeledStatement;
	            this.label = label;
	            this.body = body;
	            this.finish();
	            return this;
	        },

	        finishLiteral: function (token) {
	            this.type = Syntax.Literal;
	            this.value = token.value;
	            this.raw = source.slice(token.start, token.end);
	            if (token.regex) {
	                this.regex = token.regex;
	            }
	            this.finish();
	            return this;
	        },

	        finishMemberExpression: function (accessor, object, property) {
	            this.type = Syntax.MemberExpression;
	            this.computed = accessor === '[';
	            this.object = object;
	            this.property = property;
	            this.finish();
	            return this;
	        },

	        finishMetaProperty: function (meta, property) {
	            this.type = Syntax.MetaProperty;
	            this.meta = meta;
	            this.property = property;
	            this.finish();
	            return this;
	        },

	        finishNewExpression: function (callee, args) {
	            this.type = Syntax.NewExpression;
	            this.callee = callee;
	            this.arguments = args;
	            this.finish();
	            return this;
	        },

	        finishObjectExpression: function (properties) {
	            this.type = Syntax.ObjectExpression;
	            this.properties = properties;
	            this.finish();
	            return this;
	        },

	        finishObjectPattern: function (properties) {
	            this.type = Syntax.ObjectPattern;
	            this.properties = properties;
	            this.finish();
	            return this;
	        },

	        finishPostfixExpression: function (operator, argument) {
	            this.type = Syntax.UpdateExpression;
	            this.operator = operator;
	            this.argument = argument;
	            this.prefix = false;
	            this.finish();
	            return this;
	        },

	        finishProgram: function (body, sourceType) {
	            this.type = Syntax.Program;
	            this.body = body;
	            this.sourceType = sourceType;
	            this.finish();
	            return this;
	        },

	        finishProperty: function (kind, key, computed, value, method, shorthand) {
	            this.type = Syntax.Property;
	            this.key = key;
	            this.computed = computed;
	            this.value = value;
	            this.kind = kind;
	            this.method = method;
	            this.shorthand = shorthand;
	            this.finish();
	            return this;
	        },

	        finishRestElement: function (argument) {
	            this.type = Syntax.RestElement;
	            this.argument = argument;
	            this.finish();
	            return this;
	        },

	        finishReturnStatement: function (argument) {
	            this.type = Syntax.ReturnStatement;
	            this.argument = argument;
	            this.finish();
	            return this;
	        },

	        finishSequenceExpression: function (expressions) {
	            this.type = Syntax.SequenceExpression;
	            this.expressions = expressions;
	            this.finish();
	            return this;
	        },

	        finishSpreadElement: function (argument) {
	            this.type = Syntax.SpreadElement;
	            this.argument = argument;
	            this.finish();
	            return this;
	        },

	        finishSwitchCase: function (test, consequent) {
	            this.type = Syntax.SwitchCase;
	            this.test = test;
	            this.consequent = consequent;
	            this.finish();
	            return this;
	        },

	        finishSuper: function () {
	            this.type = Syntax.Super;
	            this.finish();
	            return this;
	        },

	        finishSwitchStatement: function (discriminant, cases) {
	            this.type = Syntax.SwitchStatement;
	            this.discriminant = discriminant;
	            this.cases = cases;
	            this.finish();
	            return this;
	        },

	        finishTaggedTemplateExpression: function (tag, quasi) {
	            this.type = Syntax.TaggedTemplateExpression;
	            this.tag = tag;
	            this.quasi = quasi;
	            this.finish();
	            return this;
	        },

	        finishTemplateElement: function (value, tail) {
	            this.type = Syntax.TemplateElement;
	            this.value = value;
	            this.tail = tail;
	            this.finish();
	            return this;
	        },

	        finishTemplateLiteral: function (quasis, expressions) {
	            this.type = Syntax.TemplateLiteral;
	            this.quasis = quasis;
	            this.expressions = expressions;
	            this.finish();
	            return this;
	        },

	        finishThisExpression: function () {
	            this.type = Syntax.ThisExpression;
	            this.finish();
	            return this;
	        },

	        finishThrowStatement: function (argument) {
	            this.type = Syntax.ThrowStatement;
	            this.argument = argument;
	            this.finish();
	            return this;
	        },

	        finishTryStatement: function (block, handler, finalizer) {
	            this.type = Syntax.TryStatement;
	            this.block = block;
	            this.guardedHandlers = [];
	            this.handlers = handler ? [handler] : [];
	            this.handler = handler;
	            this.finalizer = finalizer;
	            this.finish();
	            return this;
	        },

	        finishUnaryExpression: function (operator, argument) {
	            this.type = (operator === '++' || operator === '--') ? Syntax.UpdateExpression : Syntax.UnaryExpression;
	            this.operator = operator;
	            this.argument = argument;
	            this.prefix = true;
	            this.finish();
	            return this;
	        },

	        finishVariableDeclaration: function (declarations) {
	            this.type = Syntax.VariableDeclaration;
	            this.declarations = declarations;
	            this.kind = 'var';
	            this.finish();
	            return this;
	        },

	        finishLexicalDeclaration: function (declarations, kind) {
	            this.type = Syntax.VariableDeclaration;
	            this.declarations = declarations;
	            this.kind = kind;
	            this.finish();
	            return this;
	        },

	        finishVariableDeclarator: function (id, init) {
	            this.type = Syntax.VariableDeclarator;
	            this.id = id;
	            this.init = init;
	            this.finish();
	            return this;
	        },

	        finishWhileStatement: function (test, body) {
	            this.type = Syntax.WhileStatement;
	            this.test = test;
	            this.body = body;
	            this.finish();
	            return this;
	        },

	        finishWithStatement: function (object, body) {
	            this.type = Syntax.WithStatement;
	            this.object = object;
	            this.body = body;
	            this.finish();
	            return this;
	        },

	        finishExportSpecifier: function (local, exported) {
	            this.type = Syntax.ExportSpecifier;
	            this.exported = exported || local;
	            this.local = local;
	            this.finish();
	            return this;
	        },

	        finishImportDefaultSpecifier: function (local) {
	            this.type = Syntax.ImportDefaultSpecifier;
	            this.local = local;
	            this.finish();
	            return this;
	        },

	        finishImportNamespaceSpecifier: function (local) {
	            this.type = Syntax.ImportNamespaceSpecifier;
	            this.local = local;
	            this.finish();
	            return this;
	        },

	        finishExportNamedDeclaration: function (declaration, specifiers, src) {
	            this.type = Syntax.ExportNamedDeclaration;
	            this.declaration = declaration;
	            this.specifiers = specifiers;
	            this.source = src;
	            this.finish();
	            return this;
	        },

	        finishExportDefaultDeclaration: function (declaration) {
	            this.type = Syntax.ExportDefaultDeclaration;
	            this.declaration = declaration;
	            this.finish();
	            return this;
	        },

	        finishExportAllDeclaration: function (src) {
	            this.type = Syntax.ExportAllDeclaration;
	            this.source = src;
	            this.finish();
	            return this;
	        },

	        finishImportSpecifier: function (local, imported) {
	            this.type = Syntax.ImportSpecifier;
	            this.local = local || imported;
	            this.imported = imported;
	            this.finish();
	            return this;
	        },

	        finishImportDeclaration: function (specifiers, src) {
	            this.type = Syntax.ImportDeclaration;
	            this.specifiers = specifiers;
	            this.source = src;
	            this.finish();
	            return this;
	        },

	        finishYieldExpression: function (argument, delegate) {
	            this.type = Syntax.YieldExpression;
	            this.argument = argument;
	            this.delegate = delegate;
	            this.finish();
	            return this;
	        }
	    };


	    function recordError(error) {
	        var e, existing;

	        for (e = 0; e < extra.errors.length; e++) {
	            existing = extra.errors[e];
	            // Prevent duplicated error.
	            /* istanbul ignore next */
	            if (existing.index === error.index && existing.message === error.message) {
	                return;
	            }
	        }

	        extra.errors.push(error);
	    }

	    function constructError(msg, column) {
	        var error = new Error(msg);
	        try {
	            throw error;
	        } catch (base) {
	            /* istanbul ignore else */
	            if (Object.create && Object.defineProperty) {
	                error = Object.create(base);
	                Object.defineProperty(error, 'column', { value: column });
	            }
	        } finally {
	            return error;
	        }
	    }

	    function createError(line, pos, description) {
	        var msg, column, error;

	        msg = 'Line ' + line + ': ' + description;
	        column = pos - (scanning ? lineStart : lastLineStart) + 1;
	        error = constructError(msg, column);
	        error.lineNumber = line;
	        error.description = description;
	        error.index = pos;
	        return error;
	    }

	    // Throw an exception

	    function throwError(messageFormat) {
	        var args, msg;

	        args = Array.prototype.slice.call(arguments, 1);
	        msg = messageFormat.replace(/%(\d)/g,
	            function (whole, idx) {
	                assert(idx < args.length, 'Message reference must be in range');
	                return args[idx];
	            }
	        );

	        throw createError(lastLineNumber, lastIndex, msg);
	    }

	    function tolerateError(messageFormat) {
	        var args, msg, error;

	        args = Array.prototype.slice.call(arguments, 1);
	        /* istanbul ignore next */
	        msg = messageFormat.replace(/%(\d)/g,
	            function (whole, idx) {
	                assert(idx < args.length, 'Message reference must be in range');
	                return args[idx];
	            }
	        );

	        error = createError(lineNumber, lastIndex, msg);
	        if (extra.errors) {
	            recordError(error);
	        } else {
	            throw error;
	        }
	    }

	    // Throw an exception because of the token.

	    function unexpectedTokenError(token, message) {
	        var value, msg = message || Messages.UnexpectedToken;

	        if (token) {
	            if (!message) {
	                msg = (token.type === Token.EOF) ? Messages.UnexpectedEOS :
	                    (token.type === Token.Identifier) ? Messages.UnexpectedIdentifier :
	                    (token.type === Token.NumericLiteral) ? Messages.UnexpectedNumber :
	                    (token.type === Token.StringLiteral) ? Messages.UnexpectedString :
	                    (token.type === Token.Template) ? Messages.UnexpectedTemplate :
	                    Messages.UnexpectedToken;

	                if (token.type === Token.Keyword) {
	                    if (isFutureReservedWord(token.value)) {
	                        msg = Messages.UnexpectedReserved;
	                    } else if (strict && isStrictModeReservedWord(token.value)) {
	                        msg = Messages.StrictReservedWord;
	                    }
	                }
	            }

	            value = (token.type === Token.Template) ? token.value.raw : token.value;
	        } else {
	            value = 'ILLEGAL';
	        }

	        msg = msg.replace('%0', value);

	        return (token && typeof token.lineNumber === 'number') ?
	            createError(token.lineNumber, token.start, msg) :
	            createError(scanning ? lineNumber : lastLineNumber, scanning ? index : lastIndex, msg);
	    }

	    function throwUnexpectedToken(token, message) {
	        throw unexpectedTokenError(token, message);
	    }

	    function tolerateUnexpectedToken(token, message) {
	        var error = unexpectedTokenError(token, message);
	        if (extra.errors) {
	            recordError(error);
	        } else {
	            throw error;
	        }
	    }

	    // Expect the next token to match the specified punctuator.
	    // If not, an exception will be thrown.

	    function expect(value) {
	        var token = lex();
	        if (token.type !== Token.Punctuator || token.value !== value) {
	            throwUnexpectedToken(token);
	        }
	    }

	    /**
	     * @name expectCommaSeparator
	     * @description Quietly expect a comma when in tolerant mode, otherwise delegates
	     * to <code>expect(value)</code>
	     * @since 2.0
	     */
	    function expectCommaSeparator() {
	        var token;

	        if (extra.errors) {
	            token = lookahead;
	            if (token.type === Token.Punctuator && token.value === ',') {
	                lex();
	            } else if (token.type === Token.Punctuator && token.value === ';') {
	                lex();
	                tolerateUnexpectedToken(token);
	            } else {
	                tolerateUnexpectedToken(token, Messages.UnexpectedToken);
	            }
	        } else {
	            expect(',');
	        }
	    }

	    // Expect the next token to match the specified keyword.
	    // If not, an exception will be thrown.

	    function expectKeyword(keyword) {
	        var token = lex();
	        if (token.type !== Token.Keyword || token.value !== keyword) {
	            throwUnexpectedToken(token);
	        }
	    }

	    // Return true if the next token matches the specified punctuator.

	    function match(value) {
	        return lookahead.type === Token.Punctuator && lookahead.value === value;
	    }

	    // Return true if the next token matches the specified keyword

	    function matchKeyword(keyword) {
	        return lookahead.type === Token.Keyword && lookahead.value === keyword;
	    }

	    // Return true if the next token matches the specified contextual keyword
	    // (where an identifier is sometimes a keyword depending on the context)

	    function matchContextualKeyword(keyword) {
	        return lookahead.type === Token.Identifier && lookahead.value === keyword;
	    }

	    // Return true if the next token is an assignment operator

	    function matchAssign() {
	        var op;

	        if (lookahead.type !== Token.Punctuator) {
	            return false;
	        }
	        op = lookahead.value;
	        return op === '=' ||
	            op === '*=' ||
	            op === '/=' ||
	            op === '%=' ||
	            op === '+=' ||
	            op === '-=' ||
	            op === '<<=' ||
	            op === '>>=' ||
	            op === '>>>=' ||
	            op === '&=' ||
	            op === '^=' ||
	            op === '|=';
	    }

	    function consumeSemicolon() {
	        // Catch the very common case first: immediately a semicolon (U+003B).
	        if (source.charCodeAt(startIndex) === 0x3B || match(';')) {
	            lex();
	            return;
	        }

	        if (hasLineTerminator) {
	            return;
	        }

	        // FIXME(ikarienator): this is seemingly an issue in the previous location info convention.
	        lastIndex = startIndex;
	        lastLineNumber = startLineNumber;
	        lastLineStart = startLineStart;

	        if (lookahead.type !== Token.EOF && !match('}')) {
	            throwUnexpectedToken(lookahead);
	        }
	    }

	    // Cover grammar support.
	    //
	    // When an assignment expression position starts with an left parenthesis, the determination of the type
	    // of the syntax is to be deferred arbitrarily long until the end of the parentheses pair (plus a lookahead)
	    // or the first comma. This situation also defers the determination of all the expressions nested in the pair.
	    //
	    // There are three productions that can be parsed in a parentheses pair that needs to be determined
	    // after the outermost pair is closed. They are:
	    //
	    //   1. AssignmentExpression
	    //   2. BindingElements
	    //   3. AssignmentTargets
	    //
	    // In order to avoid exponential backtracking, we use two flags to denote if the production can be
	    // binding element or assignment target.
	    //
	    // The three productions have the relationship:
	    //
	    //   BindingElements ⊆ AssignmentTargets ⊆ AssignmentExpression
	    //
	    // with a single exception that CoverInitializedName when used directly in an Expression, generates
	    // an early error. Therefore, we need the third state, firstCoverInitializedNameError, to track the
	    // first usage of CoverInitializedName and report it when we reached the end of the parentheses pair.
	    //
	    // isolateCoverGrammar function runs the given parser function with a new cover grammar context, and it does not
	    // effect the current flags. This means the production the parser parses is only used as an expression. Therefore
	    // the CoverInitializedName check is conducted.
	    //
	    // inheritCoverGrammar function runs the given parse function with a new cover grammar context, and it propagates
	    // the flags outside of the parser. This means the production the parser parses is used as a part of a potential
	    // pattern. The CoverInitializedName check is deferred.
	    function isolateCoverGrammar(parser) {
	        var oldIsBindingElement = isBindingElement,
	            oldIsAssignmentTarget = isAssignmentTarget,
	            oldFirstCoverInitializedNameError = firstCoverInitializedNameError,
	            result;
	        isBindingElement = true;
	        isAssignmentTarget = true;
	        firstCoverInitializedNameError = null;
	        result = parser();
	        if (firstCoverInitializedNameError !== null) {
	            throwUnexpectedToken(firstCoverInitializedNameError);
	        }
	        isBindingElement = oldIsBindingElement;
	        isAssignmentTarget = oldIsAssignmentTarget;
	        firstCoverInitializedNameError = oldFirstCoverInitializedNameError;
	        return result;
	    }

	    function inheritCoverGrammar(parser) {
	        var oldIsBindingElement = isBindingElement,
	            oldIsAssignmentTarget = isAssignmentTarget,
	            oldFirstCoverInitializedNameError = firstCoverInitializedNameError,
	            result;
	        isBindingElement = true;
	        isAssignmentTarget = true;
	        firstCoverInitializedNameError = null;
	        result = parser();
	        isBindingElement = isBindingElement && oldIsBindingElement;
	        isAssignmentTarget = isAssignmentTarget && oldIsAssignmentTarget;
	        firstCoverInitializedNameError = oldFirstCoverInitializedNameError || firstCoverInitializedNameError;
	        return result;
	    }

	    // ECMA-262 13.3.3 Destructuring Binding Patterns

	    function parseArrayPattern(params, kind) {
	        var node = new Node(), elements = [], rest, restNode;
	        expect('[');

	        while (!match(']')) {
	            if (match(',')) {
	                lex();
	                elements.push(null);
	            } else {
	                if (match('...')) {
	                    restNode = new Node();
	                    lex();
	                    params.push(lookahead);
	                    rest = parseVariableIdentifier(kind);
	                    elements.push(restNode.finishRestElement(rest));
	                    break;
	                } else {
	                    elements.push(parsePatternWithDefault(params, kind));
	                }
	                if (!match(']')) {
	                    expect(',');
	                }
	            }

	        }

	        expect(']');

	        return node.finishArrayPattern(elements);
	    }

	    function parsePropertyPattern(params, kind) {
	        var node = new Node(), key, keyToken, computed = match('['), init;
	        if (lookahead.type === Token.Identifier) {
	            keyToken = lookahead;
	            key = parseVariableIdentifier();
	            if (match('=')) {
	                params.push(keyToken);
	                lex();
	                init = parseAssignmentExpression();

	                return node.finishProperty(
	                    'init', key, false,
	                    new WrappingNode(keyToken).finishAssignmentPattern(key, init), false, true);
	            } else if (!match(':')) {
	                params.push(keyToken);
	                return node.finishProperty('init', key, false, key, false, true);
	            }
	        } else {
	            key = parseObjectPropertyKey();
	        }
	        expect(':');
	        init = parsePatternWithDefault(params, kind);
	        return node.finishProperty('init', key, computed, init, false, false);
	    }

	    function parseObjectPattern(params, kind) {
	        var node = new Node(), properties = [];

	        expect('{');

	        while (!match('}')) {
	            properties.push(parsePropertyPattern(params, kind));
	            if (!match('}')) {
	                expect(',');
	            }
	        }

	        lex();

	        return node.finishObjectPattern(properties);
	    }

	    function parsePattern(params, kind) {
	        if (match('[')) {
	            return parseArrayPattern(params, kind);
	        } else if (match('{')) {
	            return parseObjectPattern(params, kind);
	        } else if (matchKeyword('let')) {
	            if (kind === 'const' || kind === 'let') {
	                tolerateUnexpectedToken(lookahead, Messages.UnexpectedToken);
	            }
	        }

	        params.push(lookahead);
	        return parseVariableIdentifier(kind);
	    }

	    function parsePatternWithDefault(params, kind) {
	        var startToken = lookahead, pattern, previousAllowYield, right;
	        pattern = parsePattern(params, kind);
	        if (match('=')) {
	            lex();
	            previousAllowYield = state.allowYield;
	            state.allowYield = true;
	            right = isolateCoverGrammar(parseAssignmentExpression);
	            state.allowYield = previousAllowYield;
	            pattern = new WrappingNode(startToken).finishAssignmentPattern(pattern, right);
	        }
	        return pattern;
	    }

	    // ECMA-262 12.2.5 Array Initializer

	    function parseArrayInitializer() {
	        var elements = [], node = new Node(), restSpread;

	        expect('[');

	        while (!match(']')) {
	            if (match(',')) {
	                lex();
	                elements.push(null);
	            } else if (match('...')) {
	                restSpread = new Node();
	                lex();
	                restSpread.finishSpreadElement(inheritCoverGrammar(parseAssignmentExpression));

	                if (!match(']')) {
	                    isAssignmentTarget = isBindingElement = false;
	                    expect(',');
	                }
	                elements.push(restSpread);
	            } else {
	                elements.push(inheritCoverGrammar(parseAssignmentExpression));

	                if (!match(']')) {
	                    expect(',');
	                }
	            }
	        }

	        lex();

	        return node.finishArrayExpression(elements);
	    }

	    // ECMA-262 12.2.6 Object Initializer

	    function parsePropertyFunction(node, paramInfo, isGenerator) {
	        var previousStrict, body;

	        isAssignmentTarget = isBindingElement = false;

	        previousStrict = strict;
	        body = isolateCoverGrammar(parseFunctionSourceElements);

	        if (strict && paramInfo.firstRestricted) {
	            tolerateUnexpectedToken(paramInfo.firstRestricted, paramInfo.message);
	        }
	        if (strict && paramInfo.stricted) {
	            tolerateUnexpectedToken(paramInfo.stricted, paramInfo.message);
	        }

	        strict = previousStrict;
	        return node.finishFunctionExpression(null, paramInfo.params, paramInfo.defaults, body, isGenerator);
	    }

	    function parsePropertyMethodFunction() {
	        var params, method, node = new Node(),
	            previousAllowYield = state.allowYield;

	        state.allowYield = false;
	        params = parseParams();
	        state.allowYield = previousAllowYield;

	        state.allowYield = false;
	        method = parsePropertyFunction(node, params, false);
	        state.allowYield = previousAllowYield;

	        return method;
	    }

	    function parseObjectPropertyKey() {
	        var token, node = new Node(), expr;

	        token = lex();

	        // Note: This function is called only from parseObjectProperty(), where
	        // EOF and Punctuator tokens are already filtered out.

	        switch (token.type) {
	        case Token.StringLiteral:
	        case Token.NumericLiteral:
	            if (strict && token.octal) {
	                tolerateUnexpectedToken(token, Messages.StrictOctalLiteral);
	            }
	            return node.finishLiteral(token);
	        case Token.Identifier:
	        case Token.BooleanLiteral:
	        case Token.NullLiteral:
	        case Token.Keyword:
	            return node.finishIdentifier(token.value);
	        case Token.Punctuator:
	            if (token.value === '[') {
	                expr = isolateCoverGrammar(parseAssignmentExpression);
	                expect(']');
	                return expr;
	            }
	            break;
	        }
	        throwUnexpectedToken(token);
	    }

	    function lookaheadPropertyName() {
	        switch (lookahead.type) {
	        case Token.Identifier:
	        case Token.StringLiteral:
	        case Token.BooleanLiteral:
	        case Token.NullLiteral:
	        case Token.NumericLiteral:
	        case Token.Keyword:
	            return true;
	        case Token.Punctuator:
	            return lookahead.value === '[';
	        }
	        return false;
	    }

	    // This function is to try to parse a MethodDefinition as defined in 14.3. But in the case of object literals,
	    // it might be called at a position where there is in fact a short hand identifier pattern or a data property.
	    // This can only be determined after we consumed up to the left parentheses.
	    //
	    // In order to avoid back tracking, it returns `null` if the position is not a MethodDefinition and the caller
	    // is responsible to visit other options.
	    function tryParseMethodDefinition(token, key, computed, node) {
	        var value, options, methodNode, params,
	            previousAllowYield = state.allowYield;

	        if (token.type === Token.Identifier) {
	            // check for `get` and `set`;

	            if (token.value === 'get' && lookaheadPropertyName()) {
	                computed = match('[');
	                key = parseObjectPropertyKey();
	                methodNode = new Node();
	                expect('(');
	                expect(')');

	                state.allowYield = false;
	                value = parsePropertyFunction(methodNode, {
	                    params: [],
	                    defaults: [],
	                    stricted: null,
	                    firstRestricted: null,
	                    message: null
	                }, false);
	                state.allowYield = previousAllowYield;

	                return node.finishProperty('get', key, computed, value, false, false);
	            } else if (token.value === 'set' && lookaheadPropertyName()) {
	                computed = match('[');
	                key = parseObjectPropertyKey();
	                methodNode = new Node();
	                expect('(');

	                options = {
	                    params: [],
	                    defaultCount: 0,
	                    defaults: [],
	                    firstRestricted: null,
	                    paramSet: {}
	                };
	                if (match(')')) {
	                    tolerateUnexpectedToken(lookahead);
	                } else {
	                    state.allowYield = false;
	                    parseParam(options);
	                    state.allowYield = previousAllowYield;
	                    if (options.defaultCount === 0) {
	                        options.defaults = [];
	                    }
	                }
	                expect(')');

	                state.allowYield = false;
	                value = parsePropertyFunction(methodNode, options, false);
	                state.allowYield = previousAllowYield;

	                return node.finishProperty('set', key, computed, value, false, false);
	            }
	        } else if (token.type === Token.Punctuator && token.value === '*' && lookaheadPropertyName()) {
	            computed = match('[');
	            key = parseObjectPropertyKey();
	            methodNode = new Node();

	            state.allowYield = true;
	            params = parseParams();
	            state.allowYield = previousAllowYield;

	            state.allowYield = false;
	            value = parsePropertyFunction(methodNode, params, true);
	            state.allowYield = previousAllowYield;

	            return node.finishProperty('init', key, computed, value, true, false);
	        }

	        if (key && match('(')) {
	            value = parsePropertyMethodFunction();
	            return node.finishProperty('init', key, computed, value, true, false);
	        }

	        // Not a MethodDefinition.
	        return null;
	    }

	    function parseObjectProperty(hasProto) {
	        var token = lookahead, node = new Node(), computed, key, maybeMethod, proto, value;

	        computed = match('[');
	        if (match('*')) {
	            lex();
	        } else {
	            key = parseObjectPropertyKey();
	        }
	        maybeMethod = tryParseMethodDefinition(token, key, computed, node);
	        if (maybeMethod) {
	            return maybeMethod;
	        }

	        if (!key) {
	            throwUnexpectedToken(lookahead);
	        }

	        // Check for duplicated __proto__
	        if (!computed) {
	            proto = (key.type === Syntax.Identifier && key.name === '__proto__') ||
	                (key.type === Syntax.Literal && key.value === '__proto__');
	            if (hasProto.value && proto) {
	                tolerateError(Messages.DuplicateProtoProperty);
	            }
	            hasProto.value |= proto;
	        }

	        if (match(':')) {
	            lex();
	            value = inheritCoverGrammar(parseAssignmentExpression);
	            return node.finishProperty('init', key, computed, value, false, false);
	        }

	        if (token.type === Token.Identifier) {
	            if (match('=')) {
	                firstCoverInitializedNameError = lookahead;
	                lex();
	                value = isolateCoverGrammar(parseAssignmentExpression);
	                return node.finishProperty('init', key, computed,
	                    new WrappingNode(token).finishAssignmentPattern(key, value), false, true);
	            }
	            return node.finishProperty('init', key, computed, key, false, true);
	        }

	        throwUnexpectedToken(lookahead);
	    }

	    function parseObjectInitializer() {
	        var properties = [], hasProto = {value: false}, node = new Node();

	        expect('{');

	        while (!match('}')) {
	            properties.push(parseObjectProperty(hasProto));

	            if (!match('}')) {
	                expectCommaSeparator();
	            }
	        }

	        expect('}');

	        return node.finishObjectExpression(properties);
	    }

	    function reinterpretExpressionAsPattern(expr) {
	        var i;
	        switch (expr.type) {
	        case Syntax.Identifier:
	        case Syntax.MemberExpression:
	        case Syntax.RestElement:
	        case Syntax.AssignmentPattern:
	            break;
	        case Syntax.SpreadElement:
	            expr.type = Syntax.RestElement;
	            reinterpretExpressionAsPattern(expr.argument);
	            break;
	        case Syntax.ArrayExpression:
	            expr.type = Syntax.ArrayPattern;
	            for (i = 0; i < expr.elements.length; i++) {
	                if (expr.elements[i] !== null) {
	                    reinterpretExpressionAsPattern(expr.elements[i]);
	                }
	            }
	            break;
	        case Syntax.ObjectExpression:
	            expr.type = Syntax.ObjectPattern;
	            for (i = 0; i < expr.properties.length; i++) {
	                reinterpretExpressionAsPattern(expr.properties[i].value);
	            }
	            break;
	        case Syntax.AssignmentExpression:
	            expr.type = Syntax.AssignmentPattern;
	            reinterpretExpressionAsPattern(expr.left);
	            break;
	        default:
	            // Allow other node type for tolerant parsing.
	            break;
	        }
	    }

	    // ECMA-262 12.2.9 Template Literals

	    function parseTemplateElement(option) {
	        var node, token;

	        if (lookahead.type !== Token.Template || (option.head && !lookahead.head)) {
	            throwUnexpectedToken();
	        }

	        node = new Node();
	        token = lex();

	        return node.finishTemplateElement({ raw: token.value.raw, cooked: token.value.cooked }, token.tail);
	    }

	    function parseTemplateLiteral() {
	        var quasi, quasis, expressions, node = new Node();

	        quasi = parseTemplateElement({ head: true });
	        quasis = [quasi];
	        expressions = [];

	        while (!quasi.tail) {
	            expressions.push(parseExpression());
	            quasi = parseTemplateElement({ head: false });
	            quasis.push(quasi);
	        }

	        return node.finishTemplateLiteral(quasis, expressions);
	    }

	    // ECMA-262 12.2.10 The Grouping Operator

	    function parseGroupExpression() {
	        var expr, expressions, startToken, i, params = [];

	        expect('(');

	        if (match(')')) {
	            lex();
	            if (!match('=>')) {
	                expect('=>');
	            }
	            return {
	                type: PlaceHolders.ArrowParameterPlaceHolder,
	                params: [],
	                rawParams: []
	            };
	        }

	        startToken = lookahead;
	        if (match('...')) {
	            expr = parseRestElement(params);
	            expect(')');
	            if (!match('=>')) {
	                expect('=>');
	            }
	            return {
	                type: PlaceHolders.ArrowParameterPlaceHolder,
	                params: [expr]
	            };
	        }

	        isBindingElement = true;
	        expr = inheritCoverGrammar(parseAssignmentExpression);

	        if (match(',')) {
	            isAssignmentTarget = false;
	            expressions = [expr];

	            while (startIndex < length) {
	                if (!match(',')) {
	                    break;
	                }
	                lex();

	                if (match('...')) {
	                    if (!isBindingElement) {
	                        throwUnexpectedToken(lookahead);
	                    }
	                    expressions.push(parseRestElement(params));
	                    expect(')');
	                    if (!match('=>')) {
	                        expect('=>');
	                    }
	                    isBindingElement = false;
	                    for (i = 0; i < expressions.length; i++) {
	                        reinterpretExpressionAsPattern(expressions[i]);
	                    }
	                    return {
	                        type: PlaceHolders.ArrowParameterPlaceHolder,
	                        params: expressions
	                    };
	                }

	                expressions.push(inheritCoverGrammar(parseAssignmentExpression));
	            }

	            expr = new WrappingNode(startToken).finishSequenceExpression(expressions);
	        }


	        expect(')');

	        if (match('=>')) {
	            if (expr.type === Syntax.Identifier && expr.name === 'yield') {
	                return {
	                    type: PlaceHolders.ArrowParameterPlaceHolder,
	                    params: [expr]
	                };
	            }

	            if (!isBindingElement) {
	                throwUnexpectedToken(lookahead);
	            }

	            if (expr.type === Syntax.SequenceExpression) {
	                for (i = 0; i < expr.expressions.length; i++) {
	                    reinterpretExpressionAsPattern(expr.expressions[i]);
	                }
	            } else {
	                reinterpretExpressionAsPattern(expr);
	            }

	            expr = {
	                type: PlaceHolders.ArrowParameterPlaceHolder,
	                params: expr.type === Syntax.SequenceExpression ? expr.expressions : [expr]
	            };
	        }
	        isBindingElement = false;
	        return expr;
	    }


	    // ECMA-262 12.2 Primary Expressions

	    function parsePrimaryExpression() {
	        var type, token, expr, node;

	        if (match('(')) {
	            isBindingElement = false;
	            return inheritCoverGrammar(parseGroupExpression);
	        }

	        if (match('[')) {
	            return inheritCoverGrammar(parseArrayInitializer);
	        }

	        if (match('{')) {
	            return inheritCoverGrammar(parseObjectInitializer);
	        }

	        type = lookahead.type;
	        node = new Node();

	        if (type === Token.Identifier) {
	            if (state.sourceType === 'module' && lookahead.value === 'await') {
	                tolerateUnexpectedToken(lookahead);
	            }
	            expr = node.finishIdentifier(lex().value);
	        } else if (type === Token.StringLiteral || type === Token.NumericLiteral) {
	            isAssignmentTarget = isBindingElement = false;
	            if (strict && lookahead.octal) {
	                tolerateUnexpectedToken(lookahead, Messages.StrictOctalLiteral);
	            }
	            expr = node.finishLiteral(lex());
	        } else if (type === Token.Keyword) {
	            if (!strict && state.allowYield && matchKeyword('yield')) {
	                return parseNonComputedProperty();
	            }
	            if (!strict && matchKeyword('let')) {
	                return node.finishIdentifier(lex().value);
	            }
	            isAssignmentTarget = isBindingElement = false;
	            if (matchKeyword('function')) {
	                return parseFunctionExpression();
	            }
	            if (matchKeyword('this')) {
	                lex();
	                return node.finishThisExpression();
	            }
	            if (matchKeyword('class')) {
	                return parseClassExpression();
	            }
	            throwUnexpectedToken(lex());
	        } else if (type === Token.BooleanLiteral) {
	            isAssignmentTarget = isBindingElement = false;
	            token = lex();
	            token.value = (token.value === 'true');
	            expr = node.finishLiteral(token);
	        } else if (type === Token.NullLiteral) {
	            isAssignmentTarget = isBindingElement = false;
	            token = lex();
	            token.value = null;
	            expr = node.finishLiteral(token);
	        } else if (match('/') || match('/=')) {
	            isAssignmentTarget = isBindingElement = false;
	            index = startIndex;

	            if (typeof extra.tokens !== 'undefined') {
	                token = collectRegex();
	            } else {
	                token = scanRegExp();
	            }
	            lex();
	            expr = node.finishLiteral(token);
	        } else if (type === Token.Template) {
	            expr = parseTemplateLiteral();
	        } else {
	            throwUnexpectedToken(lex());
	        }

	        return expr;
	    }

	    // ECMA-262 12.3 Left-Hand-Side Expressions

	    function parseArguments() {
	        var args = [], expr;

	        expect('(');

	        if (!match(')')) {
	            while (startIndex < length) {
	                if (match('...')) {
	                    expr = new Node();
	                    lex();
	                    expr.finishSpreadElement(isolateCoverGrammar(parseAssignmentExpression));
	                } else {
	                    expr = isolateCoverGrammar(parseAssignmentExpression);
	                }
	                args.push(expr);
	                if (match(')')) {
	                    break;
	                }
	                expectCommaSeparator();
	            }
	        }

	        expect(')');

	        return args;
	    }

	    function parseNonComputedProperty() {
	        var token, node = new Node();

	        token = lex();

	        if (!isIdentifierName(token)) {
	            throwUnexpectedToken(token);
	        }

	        return node.finishIdentifier(token.value);
	    }

	    function parseNonComputedMember() {
	        expect('.');

	        return parseNonComputedProperty();
	    }

	    function parseComputedMember() {
	        var expr;

	        expect('[');

	        expr = isolateCoverGrammar(parseExpression);

	        expect(']');

	        return expr;
	    }

	    // ECMA-262 12.3.3 The new Operator

	    function parseNewExpression() {
	        var callee, args, node = new Node();

	        expectKeyword('new');

	        if (match('.')) {
	            lex();
	            if (lookahead.type === Token.Identifier && lookahead.value === 'target') {
	                if (state.inFunctionBody) {
	                    lex();
	                    return node.finishMetaProperty('new', 'target');
	                }
	            }
	            throwUnexpectedToken(lookahead);
	        }

	        callee = isolateCoverGrammar(parseLeftHandSideExpression);
	        args = match('(') ? parseArguments() : [];

	        isAssignmentTarget = isBindingElement = false;

	        return node.finishNewExpression(callee, args);
	    }

	    // ECMA-262 12.3.4 Function Calls

	    function parseLeftHandSideExpressionAllowCall() {
	        var quasi, expr, args, property, startToken, previousAllowIn = state.allowIn;

	        startToken = lookahead;
	        state.allowIn = true;

	        if (matchKeyword('super') && state.inFunctionBody) {
	            expr = new Node();
	            lex();
	            expr = expr.finishSuper();
	            if (!match('(') && !match('.') && !match('[')) {
	                throwUnexpectedToken(lookahead);
	            }
	        } else {
	            expr = inheritCoverGrammar(matchKeyword('new') ? parseNewExpression : parsePrimaryExpression);
	        }

	        for (;;) {
	            if (match('.')) {
	                isBindingElement = false;
	                isAssignmentTarget = true;
	                property = parseNonComputedMember();
	                expr = new WrappingNode(startToken).finishMemberExpression('.', expr, property);
	            } else if (match('(')) {
	                isBindingElement = false;
	                isAssignmentTarget = false;
	                args = parseArguments();
	                expr = new WrappingNode(startToken).finishCallExpression(expr, args);
	            } else if (match('[')) {
	                isBindingElement = false;
	                isAssignmentTarget = true;
	                property = parseComputedMember();
	                expr = new WrappingNode(startToken).finishMemberExpression('[', expr, property);
	            } else if (lookahead.type === Token.Template && lookahead.head) {
	                quasi = parseTemplateLiteral();
	                expr = new WrappingNode(startToken).finishTaggedTemplateExpression(expr, quasi);
	            } else {
	                break;
	            }
	        }
	        state.allowIn = previousAllowIn;

	        return expr;
	    }

	    // ECMA-262 12.3 Left-Hand-Side Expressions

	    function parseLeftHandSideExpression() {
	        var quasi, expr, property, startToken;
	        assert(state.allowIn, 'callee of new expression always allow in keyword.');

	        startToken = lookahead;

	        if (matchKeyword('super') && state.inFunctionBody) {
	            expr = new Node();
	            lex();
	            expr = expr.finishSuper();
	            if (!match('[') && !match('.')) {
	                throwUnexpectedToken(lookahead);
	            }
	        } else {
	            expr = inheritCoverGrammar(matchKeyword('new') ? parseNewExpression : parsePrimaryExpression);
	        }

	        for (;;) {
	            if (match('[')) {
	                isBindingElement = false;
	                isAssignmentTarget = true;
	                property = parseComputedMember();
	                expr = new WrappingNode(startToken).finishMemberExpression('[', expr, property);
	            } else if (match('.')) {
	                isBindingElement = false;
	                isAssignmentTarget = true;
	                property = parseNonComputedMember();
	                expr = new WrappingNode(startToken).finishMemberExpression('.', expr, property);
	            } else if (lookahead.type === Token.Template && lookahead.head) {
	                quasi = parseTemplateLiteral();
	                expr = new WrappingNode(startToken).finishTaggedTemplateExpression(expr, quasi);
	            } else {
	                break;
	            }
	        }
	        return expr;
	    }

	    // ECMA-262 12.4 Postfix Expressions

	    function parsePostfixExpression() {
	        var expr, token, startToken = lookahead;

	        expr = inheritCoverGrammar(parseLeftHandSideExpressionAllowCall);

	        if (!hasLineTerminator && lookahead.type === Token.Punctuator) {
	            if (match('++') || match('--')) {
	                // ECMA-262 11.3.1, 11.3.2
	                if (strict && expr.type === Syntax.Identifier && isRestrictedWord(expr.name)) {
	                    tolerateError(Messages.StrictLHSPostfix);
	                }

	                if (!isAssignmentTarget) {
	                    tolerateError(Messages.InvalidLHSInAssignment);
	                }

	                isAssignmentTarget = isBindingElement = false;

	                token = lex();
	                expr = new WrappingNode(startToken).finishPostfixExpression(token.value, expr);
	            }
	        }

	        return expr;
	    }

	    // ECMA-262 12.5 Unary Operators

	    function parseUnaryExpression() {
	        var token, expr, startToken;

	        if (lookahead.type !== Token.Punctuator && lookahead.type !== Token.Keyword) {
	            expr = parsePostfixExpression();
	        } else if (match('++') || match('--')) {
	            startToken = lookahead;
	            token = lex();
	            expr = inheritCoverGrammar(parseUnaryExpression);
	            // ECMA-262 11.4.4, 11.4.5
	            if (strict && expr.type === Syntax.Identifier && isRestrictedWord(expr.name)) {
	                tolerateError(Messages.StrictLHSPrefix);
	            }

	            if (!isAssignmentTarget) {
	                tolerateError(Messages.InvalidLHSInAssignment);
	            }
	            expr = new WrappingNode(startToken).finishUnaryExpression(token.value, expr);
	            isAssignmentTarget = isBindingElement = false;
	        } else if (match('+') || match('-') || match('~') || match('!')) {
	            startToken = lookahead;
	            token = lex();
	            expr = inheritCoverGrammar(parseUnaryExpression);
	            expr = new WrappingNode(startToken).finishUnaryExpression(token.value, expr);
	            isAssignmentTarget = isBindingElement = false;
	        } else if (matchKeyword('delete') || matchKeyword('void') || matchKeyword('typeof')) {
	            startToken = lookahead;
	            token = lex();
	            expr = inheritCoverGrammar(parseUnaryExpression);
	            expr = new WrappingNode(startToken).finishUnaryExpression(token.value, expr);
	            if (strict && expr.operator === 'delete' && expr.argument.type === Syntax.Identifier) {
	                tolerateError(Messages.StrictDelete);
	            }
	            isAssignmentTarget = isBindingElement = false;
	        } else {
	            expr = parsePostfixExpression();
	        }

	        return expr;
	    }

	    function binaryPrecedence(token, allowIn) {
	        var prec = 0;

	        if (token.type !== Token.Punctuator && token.type !== Token.Keyword) {
	            return 0;
	        }

	        switch (token.value) {
	        case '||':
	            prec = 1;
	            break;

	        case '&&':
	            prec = 2;
	            break;

	        case '|':
	            prec = 3;
	            break;

	        case '^':
	            prec = 4;
	            break;

	        case '&':
	            prec = 5;
	            break;

	        case '==':
	        case '!=':
	        case '===':
	        case '!==':
	            prec = 6;
	            break;

	        case '<':
	        case '>':
	        case '<=':
	        case '>=':
	        case 'instanceof':
	            prec = 7;
	            break;

	        case 'in':
	            prec = allowIn ? 7 : 0;
	            break;

	        case '<<':
	        case '>>':
	        case '>>>':
	            prec = 8;
	            break;

	        case '+':
	        case '-':
	            prec = 9;
	            break;

	        case '*':
	        case '/':
	        case '%':
	            prec = 11;
	            break;

	        default:
	            break;
	        }

	        return prec;
	    }

	    // ECMA-262 12.6 Multiplicative Operators
	    // ECMA-262 12.7 Additive Operators
	    // ECMA-262 12.8 Bitwise Shift Operators
	    // ECMA-262 12.9 Relational Operators
	    // ECMA-262 12.10 Equality Operators
	    // ECMA-262 12.11 Binary Bitwise Operators
	    // ECMA-262 12.12 Binary Logical Operators

	    function parseBinaryExpression() {
	        var marker, markers, expr, token, prec, stack, right, operator, left, i;

	        marker = lookahead;
	        left = inheritCoverGrammar(parseUnaryExpression);

	        token = lookahead;
	        prec = binaryPrecedence(token, state.allowIn);
	        if (prec === 0) {
	            return left;
	        }
	        isAssignmentTarget = isBindingElement = false;
	        token.prec = prec;
	        lex();

	        markers = [marker, lookahead];
	        right = isolateCoverGrammar(parseUnaryExpression);

	        stack = [left, token, right];

	        while ((prec = binaryPrecedence(lookahead, state.allowIn)) > 0) {

	            // Reduce: make a binary expression from the three topmost entries.
	            while ((stack.length > 2) && (prec <= stack[stack.length - 2].prec)) {
	                right = stack.pop();
	                operator = stack.pop().value;
	                left = stack.pop();
	                markers.pop();
	                expr = new WrappingNode(markers[markers.length - 1]).finishBinaryExpression(operator, left, right);
	                stack.push(expr);
	            }

	            // Shift.
	            token = lex();
	            token.prec = prec;
	            stack.push(token);
	            markers.push(lookahead);
	            expr = isolateCoverGrammar(parseUnaryExpression);
	            stack.push(expr);
	        }

	        // Final reduce to clean-up the stack.
	        i = stack.length - 1;
	        expr = stack[i];
	        markers.pop();
	        while (i > 1) {
	            expr = new WrappingNode(markers.pop()).finishBinaryExpression(stack[i - 1].value, stack[i - 2], expr);
	            i -= 2;
	        }

	        return expr;
	    }


	    // ECMA-262 12.13 Conditional Operator

	    function parseConditionalExpression() {
	        var expr, previousAllowIn, consequent, alternate, startToken;

	        startToken = lookahead;

	        expr = inheritCoverGrammar(parseBinaryExpression);
	        if (match('?')) {
	            lex();
	            previousAllowIn = state.allowIn;
	            state.allowIn = true;
	            consequent = isolateCoverGrammar(parseAssignmentExpression);
	            state.allowIn = previousAllowIn;
	            expect(':');
	            alternate = isolateCoverGrammar(parseAssignmentExpression);

	            expr = new WrappingNode(startToken).finishConditionalExpression(expr, consequent, alternate);
	            isAssignmentTarget = isBindingElement = false;
	        }

	        return expr;
	    }

	    // ECMA-262 14.2 Arrow Function Definitions

	    function parseConciseBody() {
	        if (match('{')) {
	            return parseFunctionSourceElements();
	        }
	        return isolateCoverGrammar(parseAssignmentExpression);
	    }

	    function checkPatternParam(options, param) {
	        var i;
	        switch (param.type) {
	        case Syntax.Identifier:
	            validateParam(options, param, param.name);
	            break;
	        case Syntax.RestElement:
	            checkPatternParam(options, param.argument);
	            break;
	        case Syntax.AssignmentPattern:
	            checkPatternParam(options, param.left);
	            break;
	        case Syntax.ArrayPattern:
	            for (i = 0; i < param.elements.length; i++) {
	                if (param.elements[i] !== null) {
	                    checkPatternParam(options, param.elements[i]);
	                }
	            }
	            break;
	        case Syntax.YieldExpression:
	            break;
	        default:
	            assert(param.type === Syntax.ObjectPattern, 'Invalid type');
	            for (i = 0; i < param.properties.length; i++) {
	                checkPatternParam(options, param.properties[i].value);
	            }
	            break;
	        }
	    }
	    function reinterpretAsCoverFormalsList(expr) {
	        var i, len, param, params, defaults, defaultCount, options, token;

	        defaults = [];
	        defaultCount = 0;
	        params = [expr];

	        switch (expr.type) {
	        case Syntax.Identifier:
	            break;
	        case PlaceHolders.ArrowParameterPlaceHolder:
	            params = expr.params;
	            break;
	        default:
	            return null;
	        }

	        options = {
	            paramSet: {}
	        };

	        for (i = 0, len = params.length; i < len; i += 1) {
	            param = params[i];
	            switch (param.type) {
	            case Syntax.AssignmentPattern:
	                params[i] = param.left;
	                if (param.right.type === Syntax.YieldExpression) {
	                    if (param.right.argument) {
	                        throwUnexpectedToken(lookahead);
	                    }
	                    param.right.type = Syntax.Identifier;
	                    param.right.name = 'yield';
	                    delete param.right.argument;
	                    delete param.right.delegate;
	                }
	                defaults.push(param.right);
	                ++defaultCount;
	                checkPatternParam(options, param.left);
	                break;
	            default:
	                checkPatternParam(options, param);
	                params[i] = param;
	                defaults.push(null);
	                break;
	            }
	        }

	        if (strict || !state.allowYield) {
	            for (i = 0, len = params.length; i < len; i += 1) {
	                param = params[i];
	                if (param.type === Syntax.YieldExpression) {
	                    throwUnexpectedToken(lookahead);
	                }
	            }
	        }

	        if (options.message === Messages.StrictParamDupe) {
	            token = strict ? options.stricted : options.firstRestricted;
	            throwUnexpectedToken(token, options.message);
	        }

	        if (defaultCount === 0) {
	            defaults = [];
	        }

	        return {
	            params: params,
	            defaults: defaults,
	            stricted: options.stricted,
	            firstRestricted: options.firstRestricted,
	            message: options.message
	        };
	    }

	    function parseArrowFunctionExpression(options, node) {
	        var previousStrict, previousAllowYield, body;

	        if (hasLineTerminator) {
	            tolerateUnexpectedToken(lookahead);
	        }
	        expect('=>');

	        previousStrict = strict;
	        previousAllowYield = state.allowYield;
	        state.allowYield = true;

	        body = parseConciseBody();

	        if (strict && options.firstRestricted) {
	            throwUnexpectedToken(options.firstRestricted, options.message);
	        }
	        if (strict && options.stricted) {
	            tolerateUnexpectedToken(options.stricted, options.message);
	        }

	        strict = previousStrict;
	        state.allowYield = previousAllowYield;

	        return node.finishArrowFunctionExpression(options.params, options.defaults, body, body.type !== Syntax.BlockStatement);
	    }

	    // ECMA-262 14.4 Yield expression

	    function parseYieldExpression() {
	        var argument, expr, delegate, previousAllowYield;

	        argument = null;
	        expr = new Node();
	        delegate = false;

	        expectKeyword('yield');

	        if (!hasLineTerminator) {
	            previousAllowYield = state.allowYield;
	            state.allowYield = false;
	            delegate = match('*');
	            if (delegate) {
	                lex();
	                argument = parseAssignmentExpression();
	            } else {
	                if (!match(';') && !match('}') && !match(')') && lookahead.type !== Token.EOF) {
	                    argument = parseAssignmentExpression();
	                }
	            }
	            state.allowYield = previousAllowYield;
	        }

	        return expr.finishYieldExpression(argument, delegate);
	    }

	    // ECMA-262 12.14 Assignment Operators

	    function parseAssignmentExpression() {
	        var token, expr, right, list, startToken;

	        startToken = lookahead;
	        token = lookahead;

	        if (!state.allowYield && matchKeyword('yield')) {
	            return parseYieldExpression();
	        }

	        expr = parseConditionalExpression();

	        if (expr.type === PlaceHolders.ArrowParameterPlaceHolder || match('=>')) {
	            isAssignmentTarget = isBindingElement = false;
	            list = reinterpretAsCoverFormalsList(expr);

	            if (list) {
	                firstCoverInitializedNameError = null;
	                return parseArrowFunctionExpression(list, new WrappingNode(startToken));
	            }

	            return expr;
	        }

	        if (matchAssign()) {
	            if (!isAssignmentTarget) {
	                tolerateError(Messages.InvalidLHSInAssignment);
	            }

	            // ECMA-262 12.1.1
	            if (strict && expr.type === Syntax.Identifier) {
	                if (isRestrictedWord(expr.name)) {
	                    tolerateUnexpectedToken(token, Messages.StrictLHSAssignment);
	                }
	                if (isStrictModeReservedWord(expr.name)) {
	                    tolerateUnexpectedToken(token, Messages.StrictReservedWord);
	                }
	            }

	            if (!match('=')) {
	                isAssignmentTarget = isBindingElement = false;
	            } else {
	                reinterpretExpressionAsPattern(expr);
	            }

	            token = lex();
	            right = isolateCoverGrammar(parseAssignmentExpression);
	            expr = new WrappingNode(startToken).finishAssignmentExpression(token.value, expr, right);
	            firstCoverInitializedNameError = null;
	        }

	        return expr;
	    }

	    // ECMA-262 12.15 Comma Operator

	    function parseExpression() {
	        var expr, startToken = lookahead, expressions;

	        expr = isolateCoverGrammar(parseAssignmentExpression);

	        if (match(',')) {
	            expressions = [expr];

	            while (startIndex < length) {
	                if (!match(',')) {
	                    break;
	                }
	                lex();
	                expressions.push(isolateCoverGrammar(parseAssignmentExpression));
	            }

	            expr = new WrappingNode(startToken).finishSequenceExpression(expressions);
	        }

	        return expr;
	    }

	    // ECMA-262 13.2 Block

	    function parseStatementListItem() {
	        if (lookahead.type === Token.Keyword) {
	            switch (lookahead.value) {
	            case 'export':
	                if (state.sourceType !== 'module') {
	                    tolerateUnexpectedToken(lookahead, Messages.IllegalExportDeclaration);
	                }
	                return parseExportDeclaration();
	            case 'import':
	                if (state.sourceType !== 'module') {
	                    tolerateUnexpectedToken(lookahead, Messages.IllegalImportDeclaration);
	                }
	                return parseImportDeclaration();
	            case 'const':
	                return parseLexicalDeclaration({inFor: false});
	            case 'function':
	                return parseFunctionDeclaration(new Node());
	            case 'class':
	                return parseClassDeclaration();
	            }
	        }

	        if (matchKeyword('let') && isLexicalDeclaration()) {
	            return parseLexicalDeclaration({inFor: false});
	        }

	        return parseStatement();
	    }

	    function parseStatementList() {
	        var list = [];
	        while (startIndex < length) {
	            if (match('}')) {
	                break;
	            }
	            list.push(parseStatementListItem());
	        }

	        return list;
	    }

	    function parseBlock() {
	        var block, node = new Node();

	        expect('{');

	        block = parseStatementList();

	        expect('}');

	        return node.finishBlockStatement(block);
	    }

	    // ECMA-262 13.3.2 Variable Statement

	    function parseVariableIdentifier(kind) {
	        var token, node = new Node();

	        token = lex();

	        if (token.type === Token.Keyword && token.value === 'yield') {
	            if (strict) {
	                tolerateUnexpectedToken(token, Messages.StrictReservedWord);
	            } if (!state.allowYield) {
	                throwUnexpectedToken(token);
	            }
	        } else if (token.type !== Token.Identifier) {
	            if (strict && token.type === Token.Keyword && isStrictModeReservedWord(token.value)) {
	                tolerateUnexpectedToken(token, Messages.StrictReservedWord);
	            } else {
	                if (strict || token.value !== 'let' || kind !== 'var') {
	                    throwUnexpectedToken(token);
	                }
	            }
	        } else if (state.sourceType === 'module' && token.type === Token.Identifier && token.value === 'await') {
	            tolerateUnexpectedToken(token);
	        }

	        return node.finishIdentifier(token.value);
	    }

	    function parseVariableDeclaration(options) {
	        var init = null, id, node = new Node(), params = [];

	        id = parsePattern(params, 'var');

	        // ECMA-262 12.2.1
	        if (strict && isRestrictedWord(id.name)) {
	            tolerateError(Messages.StrictVarName);
	        }

	        if (match('=')) {
	            lex();
	            init = isolateCoverGrammar(parseAssignmentExpression);
	        } else if (id.type !== Syntax.Identifier && !options.inFor) {
	            expect('=');
	        }

	        return node.finishVariableDeclarator(id, init);
	    }

	    function parseVariableDeclarationList(options) {
	        var opt, list;

	        opt = { inFor: options.inFor };
	        list = [parseVariableDeclaration(opt)];

	        while (match(',')) {
	            lex();
	            list.push(parseVariableDeclaration(opt));
	        }

	        return list;
	    }

	    function parseVariableStatement(node) {
	        var declarations;

	        expectKeyword('var');

	        declarations = parseVariableDeclarationList({ inFor: false });

	        consumeSemicolon();

	        return node.finishVariableDeclaration(declarations);
	    }

	    // ECMA-262 13.3.1 Let and Const Declarations

	    function parseLexicalBinding(kind, options) {
	        var init = null, id, node = new Node(), params = [];

	        id = parsePattern(params, kind);

	        // ECMA-262 12.2.1
	        if (strict && id.type === Syntax.Identifier && isRestrictedWord(id.name)) {
	            tolerateError(Messages.StrictVarName);
	        }

	        if (kind === 'const') {
	            if (!matchKeyword('in') && !matchContextualKeyword('of')) {
	                expect('=');
	                init = isolateCoverGrammar(parseAssignmentExpression);
	            }
	        } else if ((!options.inFor && id.type !== Syntax.Identifier) || match('=')) {
	            expect('=');
	            init = isolateCoverGrammar(parseAssignmentExpression);
	        }

	        return node.finishVariableDeclarator(id, init);
	    }

	    function parseBindingList(kind, options) {
	        var list = [parseLexicalBinding(kind, options)];

	        while (match(',')) {
	            lex();
	            list.push(parseLexicalBinding(kind, options));
	        }

	        return list;
	    }


	    function tokenizerState() {
	        return {
	            index: index,
	            lineNumber: lineNumber,
	            lineStart: lineStart,
	            hasLineTerminator: hasLineTerminator,
	            lastIndex: lastIndex,
	            lastLineNumber: lastLineNumber,
	            lastLineStart: lastLineStart,
	            startIndex: startIndex,
	            startLineNumber: startLineNumber,
	            startLineStart: startLineStart,
	            lookahead: lookahead,
	            tokenCount: extra.tokens ? extra.tokens.length : 0
	        };
	    }

	    function resetTokenizerState(ts) {
	        index = ts.index;
	        lineNumber = ts.lineNumber;
	        lineStart = ts.lineStart;
	        hasLineTerminator = ts.hasLineTerminator;
	        lastIndex = ts.lastIndex;
	        lastLineNumber = ts.lastLineNumber;
	        lastLineStart = ts.lastLineStart;
	        startIndex = ts.startIndex;
	        startLineNumber = ts.startLineNumber;
	        startLineStart = ts.startLineStart;
	        lookahead = ts.lookahead;
	        if (extra.tokens) {
	            extra.tokens.splice(ts.tokenCount, extra.tokens.length);
	        }
	    }

	    function isLexicalDeclaration() {
	        var lexical, ts;

	        ts = tokenizerState();

	        lex();
	        lexical = (lookahead.type === Token.Identifier) || match('[') || match('{') ||
	            matchKeyword('let') || matchKeyword('yield');

	        resetTokenizerState(ts);

	        return lexical;
	    }

	    function parseLexicalDeclaration(options) {
	        var kind, declarations, node = new Node();

	        kind = lex().value;
	        assert(kind === 'let' || kind === 'const', 'Lexical declaration must be either let or const');

	        declarations = parseBindingList(kind, options);

	        consumeSemicolon();

	        return node.finishLexicalDeclaration(declarations, kind);
	    }

	    function parseRestElement(params) {
	        var param, node = new Node();

	        lex();

	        if (match('{')) {
	            throwError(Messages.ObjectPatternAsRestParameter);
	        }

	        params.push(lookahead);

	        param = parseVariableIdentifier();

	        if (match('=')) {
	            throwError(Messages.DefaultRestParameter);
	        }

	        if (!match(')')) {
	            throwError(Messages.ParameterAfterRestParameter);
	        }

	        return node.finishRestElement(param);
	    }

	    // ECMA-262 13.4 Empty Statement

	    function parseEmptyStatement(node) {
	        expect(';');
	        return node.finishEmptyStatement();
	    }

	    // ECMA-262 12.4 Expression Statement

	    function parseExpressionStatement(node) {
	        var expr = parseExpression();
	        consumeSemicolon();
	        return node.finishExpressionStatement(expr);
	    }

	    // ECMA-262 13.6 If statement

	    function parseIfStatement(node) {
	        var test, consequent, alternate;

	        expectKeyword('if');

	        expect('(');

	        test = parseExpression();

	        expect(')');

	        consequent = parseStatement();

	        if (matchKeyword('else')) {
	            lex();
	            alternate = parseStatement();
	        } else {
	            alternate = null;
	        }

	        return node.finishIfStatement(test, consequent, alternate);
	    }

	    // ECMA-262 13.7 Iteration Statements

	    function parseDoWhileStatement(node) {
	        var body, test, oldInIteration;

	        expectKeyword('do');

	        oldInIteration = state.inIteration;
	        state.inIteration = true;

	        body = parseStatement();

	        state.inIteration = oldInIteration;

	        expectKeyword('while');

	        expect('(');

	        test = parseExpression();

	        expect(')');

	        if (match(';')) {
	            lex();
	        }

	        return node.finishDoWhileStatement(body, test);
	    }

	    function parseWhileStatement(node) {
	        var test, body, oldInIteration;

	        expectKeyword('while');

	        expect('(');

	        test = parseExpression();

	        expect(')');

	        oldInIteration = state.inIteration;
	        state.inIteration = true;

	        body = parseStatement();

	        state.inIteration = oldInIteration;

	        return node.finishWhileStatement(test, body);
	    }

	    function parseForStatement(node) {
	        var init, forIn, initSeq, initStartToken, test, update, left, right, kind, declarations,
	            body, oldInIteration, previousAllowIn = state.allowIn;

	        init = test = update = null;
	        forIn = true;

	        expectKeyword('for');

	        expect('(');

	        if (match(';')) {
	            lex();
	        } else {
	            if (matchKeyword('var')) {
	                init = new Node();
	                lex();

	                state.allowIn = false;
	                declarations = parseVariableDeclarationList({ inFor: true });
	                state.allowIn = previousAllowIn;

	                if (declarations.length === 1 && matchKeyword('in')) {
	                    init = init.finishVariableDeclaration(declarations);
	                    lex();
	                    left = init;
	                    right = parseExpression();
	                    init = null;
	                } else if (declarations.length === 1 && declarations[0].init === null && matchContextualKeyword('of')) {
	                    init = init.finishVariableDeclaration(declarations);
	                    lex();
	                    left = init;
	                    right = parseAssignmentExpression();
	                    init = null;
	                    forIn = false;
	                } else {
	                    init = init.finishVariableDeclaration(declarations);
	                    expect(';');
	                }
	            } else if (matchKeyword('const') || matchKeyword('let')) {
	                init = new Node();
	                kind = lex().value;

	                if (!strict && lookahead.value === 'in') {
	                    init = init.finishIdentifier(kind);
	                    lex();
	                    left = init;
	                    right = parseExpression();
	                    init = null;
	                } else {
	                    state.allowIn = false;
	                    declarations = parseBindingList(kind, {inFor: true});
	                    state.allowIn = previousAllowIn;

	                    if (declarations.length === 1 && declarations[0].init === null && matchKeyword('in')) {
	                        init = init.finishLexicalDeclaration(declarations, kind);
	                        lex();
	                        left = init;
	                        right = parseExpression();
	                        init = null;
	                    } else if (declarations.length === 1 && declarations[0].init === null && matchContextualKeyword('of')) {
	                        init = init.finishLexicalDeclaration(declarations, kind);
	                        lex();
	                        left = init;
	                        right = parseAssignmentExpression();
	                        init = null;
	                        forIn = false;
	                    } else {
	                        consumeSemicolon();
	                        init = init.finishLexicalDeclaration(declarations, kind);
	                    }
	                }
	            } else {
	                initStartToken = lookahead;
	                state.allowIn = false;
	                init = inheritCoverGrammar(parseAssignmentExpression);
	                state.allowIn = previousAllowIn;

	                if (matchKeyword('in')) {
	                    if (!isAssignmentTarget) {
	                        tolerateError(Messages.InvalidLHSInForIn);
	                    }

	                    lex();
	                    reinterpretExpressionAsPattern(init);
	                    left = init;
	                    right = parseExpression();
	                    init = null;
	                } else if (matchContextualKeyword('of')) {
	                    if (!isAssignmentTarget) {
	                        tolerateError(Messages.InvalidLHSInForLoop);
	                    }

	                    lex();
	                    reinterpretExpressionAsPattern(init);
	                    left = init;
	                    right = parseAssignmentExpression();
	                    init = null;
	                    forIn = false;
	                } else {
	                    if (match(',')) {
	                        initSeq = [init];
	                        while (match(',')) {
	                            lex();
	                            initSeq.push(isolateCoverGrammar(parseAssignmentExpression));
	                        }
	                        init = new WrappingNode(initStartToken).finishSequenceExpression(initSeq);
	                    }
	                    expect(';');
	                }
	            }
	        }

	        if (typeof left === 'undefined') {

	            if (!match(';')) {
	                test = parseExpression();
	            }
	            expect(';');

	            if (!match(')')) {
	                update = parseExpression();
	            }
	        }

	        expect(')');

	        oldInIteration = state.inIteration;
	        state.inIteration = true;

	        body = isolateCoverGrammar(parseStatement);

	        state.inIteration = oldInIteration;

	        return (typeof left === 'undefined') ?
	                node.finishForStatement(init, test, update, body) :
	                forIn ? node.finishForInStatement(left, right, body) :
	                    node.finishForOfStatement(left, right, body);
	    }

	    // ECMA-262 13.8 The continue statement

	    function parseContinueStatement(node) {
	        var label = null, key;

	        expectKeyword('continue');

	        // Optimize the most common form: 'continue;'.
	        if (source.charCodeAt(startIndex) === 0x3B) {
	            lex();

	            if (!state.inIteration) {
	                throwError(Messages.IllegalContinue);
	            }

	            return node.finishContinueStatement(null);
	        }

	        if (hasLineTerminator) {
	            if (!state.inIteration) {
	                throwError(Messages.IllegalContinue);
	            }

	            return node.finishContinueStatement(null);
	        }

	        if (lookahead.type === Token.Identifier) {
	            label = parseVariableIdentifier();

	            key = '$' + label.name;
	            if (!Object.prototype.hasOwnProperty.call(state.labelSet, key)) {
	                throwError(Messages.UnknownLabel, label.name);
	            }
	        }

	        consumeSemicolon();

	        if (label === null && !state.inIteration) {
	            throwError(Messages.IllegalContinue);
	        }

	        return node.finishContinueStatement(label);
	    }

	    // ECMA-262 13.9 The break statement

	    function parseBreakStatement(node) {
	        var label = null, key;

	        expectKeyword('break');

	        // Catch the very common case first: immediately a semicolon (U+003B).
	        if (source.charCodeAt(lastIndex) === 0x3B) {
	            lex();

	            if (!(state.inIteration || state.inSwitch)) {
	                throwError(Messages.IllegalBreak);
	            }

	            return node.finishBreakStatement(null);
	        }

	        if (hasLineTerminator) {
	            if (!(state.inIteration || state.inSwitch)) {
	                throwError(Messages.IllegalBreak);
	            }
	        } else if (lookahead.type === Token.Identifier) {
	            label = parseVariableIdentifier();

	            key = '$' + label.name;
	            if (!Object.prototype.hasOwnProperty.call(state.labelSet, key)) {
	                throwError(Messages.UnknownLabel, label.name);
	            }
	        }

	        consumeSemicolon();

	        if (label === null && !(state.inIteration || state.inSwitch)) {
	            throwError(Messages.IllegalBreak);
	        }

	        return node.finishBreakStatement(label);
	    }

	    // ECMA-262 13.10 The return statement

	    function parseReturnStatement(node) {
	        var argument = null;

	        expectKeyword('return');

	        if (!state.inFunctionBody) {
	            tolerateError(Messages.IllegalReturn);
	        }

	        // 'return' followed by a space and an identifier is very common.
	        if (source.charCodeAt(lastIndex) === 0x20) {
	            if (isIdentifierStart(source.charCodeAt(lastIndex + 1))) {
	                argument = parseExpression();
	                consumeSemicolon();
	                return node.finishReturnStatement(argument);
	            }
	        }

	        if (hasLineTerminator) {
	            // HACK
	            return node.finishReturnStatement(null);
	        }

	        if (!match(';')) {
	            if (!match('}') && lookahead.type !== Token.EOF) {
	                argument = parseExpression();
	            }
	        }

	        consumeSemicolon();

	        return node.finishReturnStatement(argument);
	    }

	    // ECMA-262 13.11 The with statement

	    function parseWithStatement(node) {
	        var object, body;

	        if (strict) {
	            tolerateError(Messages.StrictModeWith);
	        }

	        expectKeyword('with');

	        expect('(');

	        object = parseExpression();

	        expect(')');

	        body = parseStatement();

	        return node.finishWithStatement(object, body);
	    }

	    // ECMA-262 13.12 The switch statement

	    function parseSwitchCase() {
	        var test, consequent = [], statement, node = new Node();

	        if (matchKeyword('default')) {
	            lex();
	            test = null;
	        } else {
	            expectKeyword('case');
	            test = parseExpression();
	        }
	        expect(':');

	        while (startIndex < length) {
	            if (match('}') || matchKeyword('default') || matchKeyword('case')) {
	                break;
	            }
	            statement = parseStatementListItem();
	            consequent.push(statement);
	        }

	        return node.finishSwitchCase(test, consequent);
	    }

	    function parseSwitchStatement(node) {
	        var discriminant, cases, clause, oldInSwitch, defaultFound;

	        expectKeyword('switch');

	        expect('(');

	        discriminant = parseExpression();

	        expect(')');

	        expect('{');

	        cases = [];

	        if (match('}')) {
	            lex();
	            return node.finishSwitchStatement(discriminant, cases);
	        }

	        oldInSwitch = state.inSwitch;
	        state.inSwitch = true;
	        defaultFound = false;

	        while (startIndex < length) {
	            if (match('}')) {
	                break;
	            }
	            clause = parseSwitchCase();
	            if (clause.test === null) {
	                if (defaultFound) {
	                    throwError(Messages.MultipleDefaultsInSwitch);
	                }
	                defaultFound = true;
	            }
	            cases.push(clause);
	        }

	        state.inSwitch = oldInSwitch;

	        expect('}');

	        return node.finishSwitchStatement(discriminant, cases);
	    }

	    // ECMA-262 13.14 The throw statement

	    function parseThrowStatement(node) {
	        var argument;

	        expectKeyword('throw');

	        if (hasLineTerminator) {
	            throwError(Messages.NewlineAfterThrow);
	        }

	        argument = parseExpression();

	        consumeSemicolon();

	        return node.finishThrowStatement(argument);
	    }

	    // ECMA-262 13.15 The try statement

	    function parseCatchClause() {
	        var param, params = [], paramMap = {}, key, i, body, node = new Node();

	        expectKeyword('catch');

	        expect('(');
	        if (match(')')) {
	            throwUnexpectedToken(lookahead);
	        }

	        param = parsePattern(params);
	        for (i = 0; i < params.length; i++) {
	            key = '$' + params[i].value;
	            if (Object.prototype.hasOwnProperty.call(paramMap, key)) {
	                tolerateError(Messages.DuplicateBinding, params[i].value);
	            }
	            paramMap[key] = true;
	        }

	        // ECMA-262 12.14.1
	        if (strict && isRestrictedWord(param.name)) {
	            tolerateError(Messages.StrictCatchVariable);
	        }

	        expect(')');
	        body = parseBlock();
	        return node.finishCatchClause(param, body);
	    }

	    function parseTryStatement(node) {
	        var block, handler = null, finalizer = null;

	        expectKeyword('try');

	        block = parseBlock();

	        if (matchKeyword('catch')) {
	            handler = parseCatchClause();
	        }

	        if (matchKeyword('finally')) {
	            lex();
	            finalizer = parseBlock();
	        }

	        if (!handler && !finalizer) {
	            throwError(Messages.NoCatchOrFinally);
	        }

	        return node.finishTryStatement(block, handler, finalizer);
	    }

	    // ECMA-262 13.16 The debugger statement

	    function parseDebuggerStatement(node) {
	        expectKeyword('debugger');

	        consumeSemicolon();

	        return node.finishDebuggerStatement();
	    }

	    // 13 Statements

	    function parseStatement() {
	        var type = lookahead.type,
	            expr,
	            labeledBody,
	            key,
	            node;

	        if (type === Token.EOF) {
	            throwUnexpectedToken(lookahead);
	        }

	        if (type === Token.Punctuator && lookahead.value === '{') {
	            return parseBlock();
	        }
	        isAssignmentTarget = isBindingElement = true;
	        node = new Node();

	        if (type === Token.Punctuator) {
	            switch (lookahead.value) {
	            case ';':
	                return parseEmptyStatement(node);
	            case '(':
	                return parseExpressionStatement(node);
	            default:
	                break;
	            }
	        } else if (type === Token.Keyword) {
	            switch (lookahead.value) {
	            case 'break':
	                return parseBreakStatement(node);
	            case 'continue':
	                return parseContinueStatement(node);
	            case 'debugger':
	                return parseDebuggerStatement(node);
	            case 'do':
	                return parseDoWhileStatement(node);
	            case 'for':
	                return parseForStatement(node);
	            case 'function':
	                return parseFunctionDeclaration(node);
	            case 'if':
	                return parseIfStatement(node);
	            case 'return':
	                return parseReturnStatement(node);
	            case 'switch':
	                return parseSwitchStatement(node);
	            case 'throw':
	                return parseThrowStatement(node);
	            case 'try':
	                return parseTryStatement(node);
	            case 'var':
	                return parseVariableStatement(node);
	            case 'while':
	                return parseWhileStatement(node);
	            case 'with':
	                return parseWithStatement(node);
	            default:
	                break;
	            }
	        }

	        expr = parseExpression();

	        // ECMA-262 12.12 Labelled Statements
	        if ((expr.type === Syntax.Identifier) && match(':')) {
	            lex();

	            key = '$' + expr.name;
	            if (Object.prototype.hasOwnProperty.call(state.labelSet, key)) {
	                throwError(Messages.Redeclaration, 'Label', expr.name);
	            }

	            state.labelSet[key] = true;
	            labeledBody = parseStatement();
	            delete state.labelSet[key];
	            return node.finishLabeledStatement(expr, labeledBody);
	        }

	        consumeSemicolon();

	        return node.finishExpressionStatement(expr);
	    }

	    // ECMA-262 14.1 Function Definition

	    function parseFunctionSourceElements() {
	        var statement, body = [], token, directive, firstRestricted,
	            oldLabelSet, oldInIteration, oldInSwitch, oldInFunctionBody,
	            node = new Node();

	        expect('{');

	        while (startIndex < length) {
	            if (lookahead.type !== Token.StringLiteral) {
	                break;
	            }
	            token = lookahead;

	            statement = parseStatementListItem();
	            body.push(statement);
	            if (statement.expression.type !== Syntax.Literal) {
	                // this is not directive
	                break;
	            }
	            directive = source.slice(token.start + 1, token.end - 1);
	            if (directive === 'use strict') {
	                strict = true;
	                if (firstRestricted) {
	                    tolerateUnexpectedToken(firstRestricted, Messages.StrictOctalLiteral);
	                }
	            } else {
	                if (!firstRestricted && token.octal) {
	                    firstRestricted = token;
	                }
	            }
	        }

	        oldLabelSet = state.labelSet;
	        oldInIteration = state.inIteration;
	        oldInSwitch = state.inSwitch;
	        oldInFunctionBody = state.inFunctionBody;

	        state.labelSet = {};
	        state.inIteration = false;
	        state.inSwitch = false;
	        state.inFunctionBody = true;

	        while (startIndex < length) {
	            if (match('}')) {
	                break;
	            }
	            body.push(parseStatementListItem());
	        }

	        expect('}');

	        state.labelSet = oldLabelSet;
	        state.inIteration = oldInIteration;
	        state.inSwitch = oldInSwitch;
	        state.inFunctionBody = oldInFunctionBody;

	        return node.finishBlockStatement(body);
	    }

	    function validateParam(options, param, name) {
	        var key = '$' + name;
	        if (strict) {
	            if (isRestrictedWord(name)) {
	                options.stricted = param;
	                options.message = Messages.StrictParamName;
	            }
	            if (Object.prototype.hasOwnProperty.call(options.paramSet, key)) {
	                options.stricted = param;
	                options.message = Messages.StrictParamDupe;
	            }
	        } else if (!options.firstRestricted) {
	            if (isRestrictedWord(name)) {
	                options.firstRestricted = param;
	                options.message = Messages.StrictParamName;
	            } else if (isStrictModeReservedWord(name)) {
	                options.firstRestricted = param;
	                options.message = Messages.StrictReservedWord;
	            } else if (Object.prototype.hasOwnProperty.call(options.paramSet, key)) {
	                options.stricted = param;
	                options.message = Messages.StrictParamDupe;
	            }
	        }
	        options.paramSet[key] = true;
	    }

	    function parseParam(options) {
	        var token, param, params = [], i, def;

	        token = lookahead;
	        if (token.value === '...') {
	            param = parseRestElement(params);
	            validateParam(options, param.argument, param.argument.name);
	            options.params.push(param);
	            options.defaults.push(null);
	            return false;
	        }

	        param = parsePatternWithDefault(params);
	        for (i = 0; i < params.length; i++) {
	            validateParam(options, params[i], params[i].value);
	        }

	        if (param.type === Syntax.AssignmentPattern) {
	            def = param.right;
	            param = param.left;
	            ++options.defaultCount;
	        }

	        options.params.push(param);
	        options.defaults.push(def);

	        return !match(')');
	    }

	    function parseParams(firstRestricted) {
	        var options;

	        options = {
	            params: [],
	            defaultCount: 0,
	            defaults: [],
	            firstRestricted: firstRestricted
	        };

	        expect('(');

	        if (!match(')')) {
	            options.paramSet = {};
	            while (startIndex < length) {
	                if (!parseParam(options)) {
	                    break;
	                }
	                expect(',');
	            }
	        }

	        expect(')');

	        if (options.defaultCount === 0) {
	            options.defaults = [];
	        }

	        return {
	            params: options.params,
	            defaults: options.defaults,
	            stricted: options.stricted,
	            firstRestricted: options.firstRestricted,
	            message: options.message
	        };
	    }

	    function parseFunctionDeclaration(node, identifierIsOptional) {
	        var id = null, params = [], defaults = [], body, token, stricted, tmp, firstRestricted, message, previousStrict,
	            isGenerator, previousAllowYield;

	        previousAllowYield = state.allowYield;

	        expectKeyword('function');

	        isGenerator = match('*');
	        if (isGenerator) {
	            lex();
	        }

	        if (!identifierIsOptional || !match('(')) {
	            token = lookahead;
	            id = parseVariableIdentifier();
	            if (strict) {
	                if (isRestrictedWord(token.value)) {
	                    tolerateUnexpectedToken(token, Messages.StrictFunctionName);
	                }
	            } else {
	                if (isRestrictedWord(token.value)) {
	                    firstRestricted = token;
	                    message = Messages.StrictFunctionName;
	                } else if (isStrictModeReservedWord(token.value)) {
	                    firstRestricted = token;
	                    message = Messages.StrictReservedWord;
	                }
	            }
	        }

	        state.allowYield = !isGenerator;
	        tmp = parseParams(firstRestricted);
	        params = tmp.params;
	        defaults = tmp.defaults;
	        stricted = tmp.stricted;
	        firstRestricted = tmp.firstRestricted;
	        if (tmp.message) {
	            message = tmp.message;
	        }


	        previousStrict = strict;
	        body = parseFunctionSourceElements();
	        if (strict && firstRestricted) {
	            throwUnexpectedToken(firstRestricted, message);
	        }
	        if (strict && stricted) {
	            tolerateUnexpectedToken(stricted, message);
	        }

	        strict = previousStrict;
	        state.allowYield = previousAllowYield;

	        return node.finishFunctionDeclaration(id, params, defaults, body, isGenerator);
	    }

	    function parseFunctionExpression() {
	        var token, id = null, stricted, firstRestricted, message, tmp,
	            params = [], defaults = [], body, previousStrict, node = new Node(),
	            isGenerator, previousAllowYield;

	        previousAllowYield = state.allowYield;

	        expectKeyword('function');

	        isGenerator = match('*');
	        if (isGenerator) {
	            lex();
	        }

	        state.allowYield = !isGenerator;
	        if (!match('(')) {
	            token = lookahead;
	            id = (!strict && !isGenerator && matchKeyword('yield')) ? parseNonComputedProperty() : parseVariableIdentifier();
	            if (strict) {
	                if (isRestrictedWord(token.value)) {
	                    tolerateUnexpectedToken(token, Messages.StrictFunctionName);
	                }
	            } else {
	                if (isRestrictedWord(token.value)) {
	                    firstRestricted = token;
	                    message = Messages.StrictFunctionName;
	                } else if (isStrictModeReservedWord(token.value)) {
	                    firstRestricted = token;
	                    message = Messages.StrictReservedWord;
	                }
	            }
	        }

	        tmp = parseParams(firstRestricted);
	        params = tmp.params;
	        defaults = tmp.defaults;
	        stricted = tmp.stricted;
	        firstRestricted = tmp.firstRestricted;
	        if (tmp.message) {
	            message = tmp.message;
	        }

	        previousStrict = strict;
	        body = parseFunctionSourceElements();
	        if (strict && firstRestricted) {
	            throwUnexpectedToken(firstRestricted, message);
	        }
	        if (strict && stricted) {
	            tolerateUnexpectedToken(stricted, message);
	        }
	        strict = previousStrict;
	        state.allowYield = previousAllowYield;

	        return node.finishFunctionExpression(id, params, defaults, body, isGenerator);
	    }

	    // ECMA-262 14.5 Class Definitions

	    function parseClassBody() {
	        var classBody, token, isStatic, hasConstructor = false, body, method, computed, key;

	        classBody = new Node();

	        expect('{');
	        body = [];
	        while (!match('}')) {
	            if (match(';')) {
	                lex();
	            } else {
	                method = new Node();
	                token = lookahead;
	                isStatic = false;
	                computed = match('[');
	                if (match('*')) {
	                    lex();
	                } else {
	                    key = parseObjectPropertyKey();
	                    if (key.name === 'static' && (lookaheadPropertyName() || match('*'))) {
	                        token = lookahead;
	                        isStatic = true;
	                        computed = match('[');
	                        if (match('*')) {
	                            lex();
	                        } else {
	                            key = parseObjectPropertyKey();
	                        }
	                    }
	                }
	                method = tryParseMethodDefinition(token, key, computed, method);
	                if (method) {
	                    method['static'] = isStatic; // jscs:ignore requireDotNotation
	                    if (method.kind === 'init') {
	                        method.kind = 'method';
	                    }
	                    if (!isStatic) {
	                        if (!method.computed && (method.key.name || method.key.value.toString()) === 'constructor') {
	                            if (method.kind !== 'method' || !method.method || method.value.generator) {
	                                throwUnexpectedToken(token, Messages.ConstructorSpecialMethod);
	                            }
	                            if (hasConstructor) {
	                                throwUnexpectedToken(token, Messages.DuplicateConstructor);
	                            } else {
	                                hasConstructor = true;
	                            }
	                            method.kind = 'constructor';
	                        }
	                    } else {
	                        if (!method.computed && (method.key.name || method.key.value.toString()) === 'prototype') {
	                            throwUnexpectedToken(token, Messages.StaticPrototype);
	                        }
	                    }
	                    method.type = Syntax.MethodDefinition;
	                    delete method.method;
	                    delete method.shorthand;
	                    body.push(method);
	                } else {
	                    throwUnexpectedToken(lookahead);
	                }
	            }
	        }
	        lex();
	        return classBody.finishClassBody(body);
	    }

	    function parseClassDeclaration(identifierIsOptional) {
	        var id = null, superClass = null, classNode = new Node(), classBody, previousStrict = strict;
	        strict = true;

	        expectKeyword('class');

	        if (!identifierIsOptional || lookahead.type === Token.Identifier) {
	            id = parseVariableIdentifier();
	        }

	        if (matchKeyword('extends')) {
	            lex();
	            superClass = isolateCoverGrammar(parseLeftHandSideExpressionAllowCall);
	        }
	        classBody = parseClassBody();
	        strict = previousStrict;

	        return classNode.finishClassDeclaration(id, superClass, classBody);
	    }

	    function parseClassExpression() {
	        var id = null, superClass = null, classNode = new Node(), classBody, previousStrict = strict;
	        strict = true;

	        expectKeyword('class');

	        if (lookahead.type === Token.Identifier) {
	            id = parseVariableIdentifier();
	        }

	        if (matchKeyword('extends')) {
	            lex();
	            superClass = isolateCoverGrammar(parseLeftHandSideExpressionAllowCall);
	        }
	        classBody = parseClassBody();
	        strict = previousStrict;

	        return classNode.finishClassExpression(id, superClass, classBody);
	    }

	    // ECMA-262 15.2 Modules

	    function parseModuleSpecifier() {
	        var node = new Node();

	        if (lookahead.type !== Token.StringLiteral) {
	            throwError(Messages.InvalidModuleSpecifier);
	        }
	        return node.finishLiteral(lex());
	    }

	    // ECMA-262 15.2.3 Exports

	    function parseExportSpecifier() {
	        var exported, local, node = new Node(), def;
	        if (matchKeyword('default')) {
	            // export {default} from 'something';
	            def = new Node();
	            lex();
	            local = def.finishIdentifier('default');
	        } else {
	            local = parseVariableIdentifier();
	        }
	        if (matchContextualKeyword('as')) {
	            lex();
	            exported = parseNonComputedProperty();
	        }
	        return node.finishExportSpecifier(local, exported);
	    }

	    function parseExportNamedDeclaration(node) {
	        var declaration = null,
	            isExportFromIdentifier,
	            src = null, specifiers = [];

	        // non-default export
	        if (lookahead.type === Token.Keyword) {
	            // covers:
	            // export var f = 1;
	            switch (lookahead.value) {
	                case 'let':
	                case 'const':
	                    declaration = parseLexicalDeclaration({inFor: false});
	                    return node.finishExportNamedDeclaration(declaration, specifiers, null);
	                case 'var':
	                case 'class':
	                case 'function':
	                    declaration = parseStatementListItem();
	                    return node.finishExportNamedDeclaration(declaration, specifiers, null);
	            }
	        }

	        expect('{');
	        while (!match('}')) {
	            isExportFromIdentifier = isExportFromIdentifier || matchKeyword('default');
	            specifiers.push(parseExportSpecifier());
	            if (!match('}')) {
	                expect(',');
	                if (match('}')) {
	                    break;
	                }
	            }
	        }
	        expect('}');

	        if (matchContextualKeyword('from')) {
	            // covering:
	            // export {default} from 'foo';
	            // export {foo} from 'foo';
	            lex();
	            src = parseModuleSpecifier();
	            consumeSemicolon();
	        } else if (isExportFromIdentifier) {
	            // covering:
	            // export {default}; // missing fromClause
	            throwError(lookahead.value ?
	                    Messages.UnexpectedToken : Messages.MissingFromClause, lookahead.value);
	        } else {
	            // cover
	            // export {foo};
	            consumeSemicolon();
	        }
	        return node.finishExportNamedDeclaration(declaration, specifiers, src);
	    }

	    function parseExportDefaultDeclaration(node) {
	        var declaration = null,
	            expression = null;

	        // covers:
	        // export default ...
	        expectKeyword('default');

	        if (matchKeyword('function')) {
	            // covers:
	            // export default function foo () {}
	            // export default function () {}
	            declaration = parseFunctionDeclaration(new Node(), true);
	            return node.finishExportDefaultDeclaration(declaration);
	        }
	        if (matchKeyword('class')) {
	            declaration = parseClassDeclaration(true);
	            return node.finishExportDefaultDeclaration(declaration);
	        }

	        if (matchContextualKeyword('from')) {
	            throwError(Messages.UnexpectedToken, lookahead.value);
	        }

	        // covers:
	        // export default {};
	        // export default [];
	        // export default (1 + 2);
	        if (match('{')) {
	            expression = parseObjectInitializer();
	        } else if (match('[')) {
	            expression = parseArrayInitializer();
	        } else {
	            expression = parseAssignmentExpression();
	        }
	        consumeSemicolon();
	        return node.finishExportDefaultDeclaration(expression);
	    }

	    function parseExportAllDeclaration(node) {
	        var src;

	        // covers:
	        // export * from 'foo';
	        expect('*');
	        if (!matchContextualKeyword('from')) {
	            throwError(lookahead.value ?
	                    Messages.UnexpectedToken : Messages.MissingFromClause, lookahead.value);
	        }
	        lex();
	        src = parseModuleSpecifier();
	        consumeSemicolon();

	        return node.finishExportAllDeclaration(src);
	    }

	    function parseExportDeclaration() {
	        var node = new Node();
	        if (state.inFunctionBody) {
	            throwError(Messages.IllegalExportDeclaration);
	        }

	        expectKeyword('export');

	        if (matchKeyword('default')) {
	            return parseExportDefaultDeclaration(node);
	        }
	        if (match('*')) {
	            return parseExportAllDeclaration(node);
	        }
	        return parseExportNamedDeclaration(node);
	    }

	    // ECMA-262 15.2.2 Imports

	    function parseImportSpecifier() {
	        // import {<foo as bar>} ...;
	        var local, imported, node = new Node();

	        imported = parseNonComputedProperty();
	        if (matchContextualKeyword('as')) {
	            lex();
	            local = parseVariableIdentifier();
	        }

	        return node.finishImportSpecifier(local, imported);
	    }

	    function parseNamedImports() {
	        var specifiers = [];
	        // {foo, bar as bas}
	        expect('{');
	        while (!match('}')) {
	            specifiers.push(parseImportSpecifier());
	            if (!match('}')) {
	                expect(',');
	                if (match('}')) {
	                    break;
	                }
	            }
	        }
	        expect('}');
	        return specifiers;
	    }

	    function parseImportDefaultSpecifier() {
	        // import <foo> ...;
	        var local, node = new Node();

	        local = parseNonComputedProperty();

	        return node.finishImportDefaultSpecifier(local);
	    }

	    function parseImportNamespaceSpecifier() {
	        // import <* as foo> ...;
	        var local, node = new Node();

	        expect('*');
	        if (!matchContextualKeyword('as')) {
	            throwError(Messages.NoAsAfterImportNamespace);
	        }
	        lex();
	        local = parseNonComputedProperty();

	        return node.finishImportNamespaceSpecifier(local);
	    }

	    function parseImportDeclaration() {
	        var specifiers = [], src, node = new Node();

	        if (state.inFunctionBody) {
	            throwError(Messages.IllegalImportDeclaration);
	        }

	        expectKeyword('import');

	        if (lookahead.type === Token.StringLiteral) {
	            // import 'foo';
	            src = parseModuleSpecifier();
	        } else {

	            if (match('{')) {
	                // import {bar}
	                specifiers = specifiers.concat(parseNamedImports());
	            } else if (match('*')) {
	                // import * as foo
	                specifiers.push(parseImportNamespaceSpecifier());
	            } else if (isIdentifierName(lookahead) && !matchKeyword('default')) {
	                // import foo
	                specifiers.push(parseImportDefaultSpecifier());
	                if (match(',')) {
	                    lex();
	                    if (match('*')) {
	                        // import foo, * as foo
	                        specifiers.push(parseImportNamespaceSpecifier());
	                    } else if (match('{')) {
	                        // import foo, {bar}
	                        specifiers = specifiers.concat(parseNamedImports());
	                    } else {
	                        throwUnexpectedToken(lookahead);
	                    }
	                }
	            } else {
	                throwUnexpectedToken(lex());
	            }

	            if (!matchContextualKeyword('from')) {
	                throwError(lookahead.value ?
	                        Messages.UnexpectedToken : Messages.MissingFromClause, lookahead.value);
	            }
	            lex();
	            src = parseModuleSpecifier();
	        }

	        consumeSemicolon();
	        return node.finishImportDeclaration(specifiers, src);
	    }

	    // ECMA-262 15.1 Scripts

	    function parseScriptBody() {
	        var statement, body = [], token, directive, firstRestricted;

	        while (startIndex < length) {
	            token = lookahead;
	            if (token.type !== Token.StringLiteral) {
	                break;
	            }

	            statement = parseStatementListItem();
	            body.push(statement);
	            if (statement.expression.type !== Syntax.Literal) {
	                // this is not directive
	                break;
	            }
	            directive = source.slice(token.start + 1, token.end - 1);
	            if (directive === 'use strict') {
	                strict = true;
	                if (firstRestricted) {
	                    tolerateUnexpectedToken(firstRestricted, Messages.StrictOctalLiteral);
	                }
	            } else {
	                if (!firstRestricted && token.octal) {
	                    firstRestricted = token;
	                }
	            }
	        }

	        while (startIndex < length) {
	            statement = parseStatementListItem();
	            /* istanbul ignore if */
	            if (typeof statement === 'undefined') {
	                break;
	            }
	            body.push(statement);
	        }
	        return body;
	    }

	    function parseProgram() {
	        var body, node;

	        peek();
	        node = new Node();

	        body = parseScriptBody();
	        return node.finishProgram(body, state.sourceType);
	    }

	    function filterTokenLocation() {
	        var i, entry, token, tokens = [];

	        for (i = 0; i < extra.tokens.length; ++i) {
	            entry = extra.tokens[i];
	            token = {
	                type: entry.type,
	                value: entry.value
	            };
	            if (entry.regex) {
	                token.regex = {
	                    pattern: entry.regex.pattern,
	                    flags: entry.regex.flags
	                };
	            }
	            if (extra.range) {
	                token.range = entry.range;
	            }
	            if (extra.loc) {
	                token.loc = entry.loc;
	            }
	            tokens.push(token);
	        }

	        extra.tokens = tokens;
	    }

	    function tokenize(code, options, delegate) {
	        var toString,
	            tokens;

	        toString = String;
	        if (typeof code !== 'string' && !(code instanceof String)) {
	            code = toString(code);
	        }

	        source = code;
	        index = 0;
	        lineNumber = (source.length > 0) ? 1 : 0;
	        lineStart = 0;
	        startIndex = index;
	        startLineNumber = lineNumber;
	        startLineStart = lineStart;
	        length = source.length;
	        lookahead = null;
	        state = {
	            allowIn: true,
	            allowYield: true,
	            labelSet: {},
	            inFunctionBody: false,
	            inIteration: false,
	            inSwitch: false,
	            lastCommentStart: -1,
	            curlyStack: []
	        };

	        extra = {};

	        // Options matching.
	        options = options || {};

	        // Of course we collect tokens here.
	        options.tokens = true;
	        extra.tokens = [];
	        extra.tokenValues = [];
	        extra.tokenize = true;
	        extra.delegate = delegate;

	        // The following two fields are necessary to compute the Regex tokens.
	        extra.openParenToken = -1;
	        extra.openCurlyToken = -1;

	        extra.range = (typeof options.range === 'boolean') && options.range;
	        extra.loc = (typeof options.loc === 'boolean') && options.loc;

	        if (typeof options.comment === 'boolean' && options.comment) {
	            extra.comments = [];
	        }
	        if (typeof options.tolerant === 'boolean' && options.tolerant) {
	            extra.errors = [];
	        }

	        try {
	            peek();
	            if (lookahead.type === Token.EOF) {
	                return extra.tokens;
	            }

	            lex();
	            while (lookahead.type !== Token.EOF) {
	                try {
	                    lex();
	                } catch (lexError) {
	                    if (extra.errors) {
	                        recordError(lexError);
	                        // We have to break on the first error
	                        // to avoid infinite loops.
	                        break;
	                    } else {
	                        throw lexError;
	                    }
	                }
	            }

	            tokens = extra.tokens;
	            if (typeof extra.errors !== 'undefined') {
	                tokens.errors = extra.errors;
	            }
	        } catch (e) {
	            throw e;
	        } finally {
	            extra = {};
	        }
	        return tokens;
	    }

	    function parse(code, options) {
	        var program, toString;

	        toString = String;
	        if (typeof code !== 'string' && !(code instanceof String)) {
	            code = toString(code);
	        }

	        source = code;
	        index = 0;
	        lineNumber = (source.length > 0) ? 1 : 0;
	        lineStart = 0;
	        startIndex = index;
	        startLineNumber = lineNumber;
	        startLineStart = lineStart;
	        length = source.length;
	        lookahead = null;
	        state = {
	            allowIn: true,
	            allowYield: true,
	            labelSet: {},
	            inFunctionBody: false,
	            inIteration: false,
	            inSwitch: false,
	            lastCommentStart: -1,
	            curlyStack: [],
	            sourceType: 'script'
	        };
	        strict = false;

	        extra = {};
	        if (typeof options !== 'undefined') {
	            extra.range = (typeof options.range === 'boolean') && options.range;
	            extra.loc = (typeof options.loc === 'boolean') && options.loc;
	            extra.attachComment = (typeof options.attachComment === 'boolean') && options.attachComment;

	            if (extra.loc && options.source !== null && options.source !== undefined) {
	                extra.source = toString(options.source);
	            }

	            if (typeof options.tokens === 'boolean' && options.tokens) {
	                extra.tokens = [];
	            }
	            if (typeof options.comment === 'boolean' && options.comment) {
	                extra.comments = [];
	            }
	            if (typeof options.tolerant === 'boolean' && options.tolerant) {
	                extra.errors = [];
	            }
	            if (extra.attachComment) {
	                extra.range = true;
	                extra.comments = [];
	                extra.bottomRightStack = [];
	                extra.trailingComments = [];
	                extra.leadingComments = [];
	            }
	            if (options.sourceType === 'module') {
	                // very restrictive condition for now
	                state.sourceType = options.sourceType;
	                strict = true;
	            }
	        }

	        try {
	            program = parseProgram();
	            if (typeof extra.comments !== 'undefined') {
	                program.comments = extra.comments;
	            }
	            if (typeof extra.tokens !== 'undefined') {
	                filterTokenLocation();
	                program.tokens = extra.tokens;
	            }
	            if (typeof extra.errors !== 'undefined') {
	                program.errors = extra.errors;
	            }
	        } catch (e) {
	            throw e;
	        } finally {
	            extra = {};
	        }

	        return program;
	    }

	    // Sync with *.json manifests.
	    exports.version = '2.7.2';

	    exports.tokenize = tokenize;

	    exports.parse = parse;

	    // Deep copy.
	    /* istanbul ignore next */
	    exports.Syntax = (function () {
	        var name, types = {};

	        if (typeof Object.create === 'function') {
	            types = Object.create(null);
	        }

	        for (name in Syntax) {
	            if (Syntax.hasOwnProperty(name)) {
	                types[name] = Syntax[name];
	            }
	        }

	        if (typeof Object.freeze === 'function') {
	            Object.freeze(types);
	        }

	        return types;
	    }());

	}));
	/* vim: set sw=4 ts=4 et tw=80 : */


/***/ },
/* 271 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	/*eslint-disable no-use-before-define*/

	var common              = __webpack_require__(240);
	var YAMLException       = __webpack_require__(241);
	var DEFAULT_FULL_SCHEMA = __webpack_require__(266);
	var DEFAULT_SAFE_SCHEMA = __webpack_require__(243);

	var _toString       = Object.prototype.toString;
	var _hasOwnProperty = Object.prototype.hasOwnProperty;

	var CHAR_TAB                  = 0x09; /* Tab */
	var CHAR_LINE_FEED            = 0x0A; /* LF */
	var CHAR_SPACE                = 0x20; /* Space */
	var CHAR_EXCLAMATION          = 0x21; /* ! */
	var CHAR_DOUBLE_QUOTE         = 0x22; /* " */
	var CHAR_SHARP                = 0x23; /* # */
	var CHAR_PERCENT              = 0x25; /* % */
	var CHAR_AMPERSAND            = 0x26; /* & */
	var CHAR_SINGLE_QUOTE         = 0x27; /* ' */
	var CHAR_ASTERISK             = 0x2A; /* * */
	var CHAR_COMMA                = 0x2C; /* , */
	var CHAR_MINUS                = 0x2D; /* - */
	var CHAR_COLON                = 0x3A; /* : */
	var CHAR_GREATER_THAN         = 0x3E; /* > */
	var CHAR_QUESTION             = 0x3F; /* ? */
	var CHAR_COMMERCIAL_AT        = 0x40; /* @ */
	var CHAR_LEFT_SQUARE_BRACKET  = 0x5B; /* [ */
	var CHAR_RIGHT_SQUARE_BRACKET = 0x5D; /* ] */
	var CHAR_GRAVE_ACCENT         = 0x60; /* ` */
	var CHAR_LEFT_CURLY_BRACKET   = 0x7B; /* { */
	var CHAR_VERTICAL_LINE        = 0x7C; /* | */
	var CHAR_RIGHT_CURLY_BRACKET  = 0x7D; /* } */

	var ESCAPE_SEQUENCES = {};

	ESCAPE_SEQUENCES[0x00]   = '\\0';
	ESCAPE_SEQUENCES[0x07]   = '\\a';
	ESCAPE_SEQUENCES[0x08]   = '\\b';
	ESCAPE_SEQUENCES[0x09]   = '\\t';
	ESCAPE_SEQUENCES[0x0A]   = '\\n';
	ESCAPE_SEQUENCES[0x0B]   = '\\v';
	ESCAPE_SEQUENCES[0x0C]   = '\\f';
	ESCAPE_SEQUENCES[0x0D]   = '\\r';
	ESCAPE_SEQUENCES[0x1B]   = '\\e';
	ESCAPE_SEQUENCES[0x22]   = '\\"';
	ESCAPE_SEQUENCES[0x5C]   = '\\\\';
	ESCAPE_SEQUENCES[0x85]   = '\\N';
	ESCAPE_SEQUENCES[0xA0]   = '\\_';
	ESCAPE_SEQUENCES[0x2028] = '\\L';
	ESCAPE_SEQUENCES[0x2029] = '\\P';

	var DEPRECATED_BOOLEANS_SYNTAX = [
	  'y', 'Y', 'yes', 'Yes', 'YES', 'on', 'On', 'ON',
	  'n', 'N', 'no', 'No', 'NO', 'off', 'Off', 'OFF'
	];

	function compileStyleMap(schema, map) {
	  var result, keys, index, length, tag, style, type;

	  if (map === null) return {};

	  result = {};
	  keys = Object.keys(map);

	  for (index = 0, length = keys.length; index < length; index += 1) {
	    tag = keys[index];
	    style = String(map[tag]);

	    if (tag.slice(0, 2) === '!!') {
	      tag = 'tag:yaml.org,2002:' + tag.slice(2);
	    }

	    type = schema.compiledTypeMap[tag];

	    if (type && _hasOwnProperty.call(type.styleAliases, style)) {
	      style = type.styleAliases[style];
	    }

	    result[tag] = style;
	  }

	  return result;
	}

	function encodeHex(character) {
	  var string, handle, length;

	  string = character.toString(16).toUpperCase();

	  if (character <= 0xFF) {
	    handle = 'x';
	    length = 2;
	  } else if (character <= 0xFFFF) {
	    handle = 'u';
	    length = 4;
	  } else if (character <= 0xFFFFFFFF) {
	    handle = 'U';
	    length = 8;
	  } else {
	    throw new YAMLException('code point within a string may not be greater than 0xFFFFFFFF');
	  }

	  return '\\' + handle + common.repeat('0', length - string.length) + string;
	}

	function State(options) {
	  this.schema       = options['schema'] || DEFAULT_FULL_SCHEMA;
	  this.indent       = Math.max(1, (options['indent'] || 2));
	  this.skipInvalid  = options['skipInvalid'] || false;
	  this.flowLevel    = (common.isNothing(options['flowLevel']) ? -1 : options['flowLevel']);
	  this.styleMap     = compileStyleMap(this.schema, options['styles'] || null);
	  this.sortKeys     = options['sortKeys'] || false;
	  this.lineWidth    = options['lineWidth'] || 80;
	  this.noRefs       = options['noRefs'] || false;
	  this.noCompatMode = options['noCompatMode'] || false;

	  this.implicitTypes = this.schema.compiledImplicit;
	  this.explicitTypes = this.schema.compiledExplicit;

	  this.tag = null;
	  this.result = '';

	  this.duplicates = [];
	  this.usedDuplicates = null;
	}

	// Indents every line in a string. Empty lines (\n only) are not indented.
	function indentString(string, spaces) {
	  var ind = common.repeat(' ', spaces),
	      position = 0,
	      next = -1,
	      result = '',
	      line,
	      length = string.length;

	  while (position < length) {
	    next = string.indexOf('\n', position);
	    if (next === -1) {
	      line = string.slice(position);
	      position = length;
	    } else {
	      line = string.slice(position, next + 1);
	      position = next + 1;
	    }

	    if (line.length && line !== '\n') result += ind;

	    result += line;
	  }

	  return result;
	}

	function generateNextLine(state, level) {
	  return '\n' + common.repeat(' ', state.indent * level);
	}

	function testImplicitResolving(state, str) {
	  var index, length, type;

	  for (index = 0, length = state.implicitTypes.length; index < length; index += 1) {
	    type = state.implicitTypes[index];

	    if (type.resolve(str)) {
	      return true;
	    }
	  }

	  return false;
	}

	// [33] s-white ::= s-space | s-tab
	function isWhitespace(c) {
	  return c === CHAR_SPACE || c === CHAR_TAB;
	}

	// Returns true if the character can be printed without escaping.
	// From YAML 1.2: "any allowed characters known to be non-printable
	// should also be escaped. [However,] This isn’t mandatory"
	// Derived from nb-char - \t - #x85 - #xA0 - #x2028 - #x2029.
	function isPrintable(c) {
	  return  (0x00020 <= c && c <= 0x00007E)
	      || ((0x000A1 <= c && c <= 0x00D7FF) && c !== 0x2028 && c !== 0x2029)
	      || ((0x0E000 <= c && c <= 0x00FFFD) && c !== 0xFEFF /* BOM */)
	      ||  (0x10000 <= c && c <= 0x10FFFF);
	}

	// Simplified test for values allowed after the first character in plain style.
	function isPlainSafe(c) {
	  // Uses a subset of nb-char - c-flow-indicator - ":" - "#"
	  // where nb-char ::= c-printable - b-char - c-byte-order-mark.
	  return isPrintable(c) && c !== 0xFEFF
	    // - c-flow-indicator
	    && c !== CHAR_COMMA
	    && c !== CHAR_LEFT_SQUARE_BRACKET
	    && c !== CHAR_RIGHT_SQUARE_BRACKET
	    && c !== CHAR_LEFT_CURLY_BRACKET
	    && c !== CHAR_RIGHT_CURLY_BRACKET
	    // - ":" - "#"
	    && c !== CHAR_COLON
	    && c !== CHAR_SHARP;
	}

	// Simplified test for values allowed as the first character in plain style.
	function isPlainSafeFirst(c) {
	  // Uses a subset of ns-char - c-indicator
	  // where ns-char = nb-char - s-white.
	  return isPrintable(c) && c !== 0xFEFF
	    && !isWhitespace(c) // - s-white
	    // - (c-indicator ::=
	    // “-” | “?” | “:” | “,” | “[” | “]” | “{” | “}”
	    && c !== CHAR_MINUS
	    && c !== CHAR_QUESTION
	    && c !== CHAR_COLON
	    && c !== CHAR_COMMA
	    && c !== CHAR_LEFT_SQUARE_BRACKET
	    && c !== CHAR_RIGHT_SQUARE_BRACKET
	    && c !== CHAR_LEFT_CURLY_BRACKET
	    && c !== CHAR_RIGHT_CURLY_BRACKET
	    // | “#” | “&” | “*” | “!” | “|” | “>” | “'” | “"”
	    && c !== CHAR_SHARP
	    && c !== CHAR_AMPERSAND
	    && c !== CHAR_ASTERISK
	    && c !== CHAR_EXCLAMATION
	    && c !== CHAR_VERTICAL_LINE
	    && c !== CHAR_GREATER_THAN
	    && c !== CHAR_SINGLE_QUOTE
	    && c !== CHAR_DOUBLE_QUOTE
	    // | “%” | “@” | “`”)
	    && c !== CHAR_PERCENT
	    && c !== CHAR_COMMERCIAL_AT
	    && c !== CHAR_GRAVE_ACCENT;
	}

	var STYLE_PLAIN   = 1,
	    STYLE_SINGLE  = 2,
	    STYLE_LITERAL = 3,
	    STYLE_FOLDED  = 4,
	    STYLE_DOUBLE  = 5;

	// Determines which scalar styles are possible and returns the preferred style.
	// lineWidth = -1 => no limit.
	// Pre-conditions: str.length > 0.
	// Post-conditions:
	//    STYLE_PLAIN or STYLE_SINGLE => no \n are in the string.
	//    STYLE_LITERAL => no lines are suitable for folding (or lineWidth is -1).
	//    STYLE_FOLDED => a line > lineWidth and can be folded (and lineWidth != -1).
	function chooseScalarStyle(string, singleLineOnly, indentPerLevel, lineWidth, testAmbiguousType) {
	  var i;
	  var char;
	  var hasLineBreak = false;
	  var hasFoldableLine = false; // only checked if shouldTrackWidth
	  var shouldTrackWidth = lineWidth !== -1;
	  var previousLineBreak = -1; // count the first line correctly
	  var plain = isPlainSafeFirst(string.charCodeAt(0))
	          && !isWhitespace(string.charCodeAt(string.length - 1));

	  if (singleLineOnly) {
	    // Case: no block styles.
	    // Check for disallowed characters to rule out plain and single.
	    for (i = 0; i < string.length; i++) {
	      char = string.charCodeAt(i);
	      if (!isPrintable(char)) {
	        return STYLE_DOUBLE;
	      }
	      plain = plain && isPlainSafe(char);
	    }
	  } else {
	    // Case: block styles permitted.
	    for (i = 0; i < string.length; i++) {
	      char = string.charCodeAt(i);
	      if (char === CHAR_LINE_FEED) {
	        hasLineBreak = true;
	        // Check if any line can be folded.
	        if (shouldTrackWidth) {
	          hasFoldableLine = hasFoldableLine ||
	            // Foldable line = too long, and not more-indented.
	            (i - previousLineBreak - 1 > lineWidth &&
	             string[previousLineBreak + 1] !== ' ');
	          previousLineBreak = i;
	        }
	      } else if (!isPrintable(char)) {
	        return STYLE_DOUBLE;
	      }
	      plain = plain && isPlainSafe(char);
	    }
	    // in case the end is missing a \n
	    hasFoldableLine = hasFoldableLine || (shouldTrackWidth &&
	      (i - previousLineBreak - 1 > lineWidth &&
	       string[previousLineBreak + 1] !== ' '));
	  }
	  // Although every style can represent \n without escaping, prefer block styles
	  // for multiline, since they're more readable and they don't add empty lines.
	  // Also prefer folding a super-long line.
	  if (!hasLineBreak && !hasFoldableLine) {
	    // Strings interpretable as another type have to be quoted;
	    // e.g. the string 'true' vs. the boolean true.
	    return plain && !testAmbiguousType(string)
	      ? STYLE_PLAIN : STYLE_SINGLE;
	  }
	  // Edge case: block indentation indicator can only have one digit.
	  if (string[0] === ' ' && indentPerLevel > 9) {
	    return STYLE_DOUBLE;
	  }
	  // At this point we know block styles are valid.
	  // Prefer literal style unless we want to fold.
	  return hasFoldableLine ? STYLE_FOLDED : STYLE_LITERAL;
	}

	// Note: line breaking/folding is implemented for only the folded style.
	// NB. We drop the last trailing newline (if any) of a returned block scalar
	//  since the dumper adds its own newline. This always works:
	//    • No ending newline => unaffected; already using strip "-" chomping.
	//    • Ending newline    => removed then restored.
	//  Importantly, this keeps the "+" chomp indicator from gaining an extra line.
	function writeScalar(state, string, level, iskey) {
	  state.dump = (function () {
	    if (string.length === 0) {
	      return "''";
	    }
	    if (!state.noCompatMode &&
	        DEPRECATED_BOOLEANS_SYNTAX.indexOf(string) !== -1) {
	      return "'" + string + "'";
	    }

	    var indent = state.indent * Math.max(1, level); // no 0-indent scalars
	    // As indentation gets deeper, let the width decrease monotonically
	    // to the lower bound min(state.lineWidth, 40).
	    // Note that this implies
	    //  state.lineWidth ≤ 40 + state.indent: width is fixed at the lower bound.
	    //  state.lineWidth > 40 + state.indent: width decreases until the lower bound.
	    // This behaves better than a constant minimum width which disallows narrower options,
	    // or an indent threshold which causes the width to suddenly increase.
	    var lineWidth = state.lineWidth === -1
	      ? -1 : Math.max(Math.min(state.lineWidth, 40), state.lineWidth - indent);

	    // Without knowing if keys are implicit/explicit, assume implicit for safety.
	    var singleLineOnly = iskey
	      // No block styles in flow mode.
	      || (state.flowLevel > -1 && level >= state.flowLevel);
	    function testAmbiguity(string) {
	      return testImplicitResolving(state, string);
	    }

	    switch (chooseScalarStyle(string, singleLineOnly, state.indent, lineWidth, testAmbiguity)) {
	      case STYLE_PLAIN:
	        return string;
	      case STYLE_SINGLE:
	        return "'" + string.replace(/'/g, "''") + "'";
	      case STYLE_LITERAL:
	        return '|' + blockHeader(string, state.indent)
	          + dropEndingNewline(indentString(string, indent));
	      case STYLE_FOLDED:
	        return '>' + blockHeader(string, state.indent)
	          + dropEndingNewline(indentString(foldString(string, lineWidth), indent));
	      case STYLE_DOUBLE:
	        return '"' + escapeString(string, lineWidth) + '"';
	      default:
	        throw new YAMLException('impossible error: invalid scalar style');
	    }
	  }());
	}

	// Pre-conditions: string is valid for a block scalar, 1 <= indentPerLevel <= 9.
	function blockHeader(string, indentPerLevel) {
	  var indentIndicator = (string[0] === ' ') ? String(indentPerLevel) : '';

	  // note the special case: the string '\n' counts as a "trailing" empty line.
	  var clip =          string[string.length - 1] === '\n';
	  var keep = clip && (string[string.length - 2] === '\n' || string === '\n');
	  var chomp = keep ? '+' : (clip ? '' : '-');

	  return indentIndicator + chomp + '\n';
	}

	// (See the note for writeScalar.)
	function dropEndingNewline(string) {
	  return string[string.length - 1] === '\n' ? string.slice(0, -1) : string;
	}

	// Note: a long line without a suitable break point will exceed the width limit.
	// Pre-conditions: every char in str isPrintable, str.length > 0, width > 0.
	function foldString(string, width) {
	  // In folded style, $k$ consecutive newlines output as $k+1$ newlines—
	  // unless they're before or after a more-indented line, or at the very
	  // beginning or end, in which case $k$ maps to $k$.
	  // Therefore, parse each chunk as newline(s) followed by a content line.
	  var lineRe = /(\n+)([^\n]*)/g;

	  // first line (possibly an empty line)
	  var result = (function () {
	    var nextLF = string.indexOf('\n');
	    nextLF = nextLF !== -1 ? nextLF : string.length;
	    lineRe.lastIndex = nextLF;
	    return foldLine(string.slice(0, nextLF), width);
	  }());
	  // If we haven't reached the first content line yet, don't add an extra \n.
	  var prevMoreIndented = string[0] === '\n' || string[0] === ' ';
	  var moreIndented;

	  // rest of the lines
	  var match;
	  while ((match = lineRe.exec(string))) {
	    var prefix = match[1], line = match[2];
	    moreIndented = (line[0] === ' ');
	    result += prefix
	      + (!prevMoreIndented && !moreIndented && line !== ''
	        ? '\n' : '')
	      + foldLine(line, width);
	    prevMoreIndented = moreIndented;
	  }

	  return result;
	}

	// Greedy line breaking.
	// Picks the longest line under the limit each time,
	// otherwise settles for the shortest line over the limit.
	// NB. More-indented lines *cannot* be folded, as that would add an extra \n.
	function foldLine(line, width) {
	  if (line === '' || line[0] === ' ') return line;

	  // Since a more-indented line adds a \n, breaks can't be followed by a space.
	  var breakRe = / [^ ]/g; // note: the match index will always be <= length-2.
	  var match;
	  // start is an inclusive index. end, curr, and next are exclusive.
	  var start = 0, end, curr = 0, next = 0;
	  var result = '';

	  // Invariants: 0 <= start <= length-1.
	  //   0 <= curr <= next <= max(0, length-2). curr - start <= width.
	  // Inside the loop:
	  //   A match implies length >= 2, so curr and next are <= length-2.
	  while ((match = breakRe.exec(line))) {
	    next = match.index;
	    // maintain invariant: curr - start <= width
	    if (next - start > width) {
	      end = (curr > start) ? curr : next; // derive end <= length-2
	      result += '\n' + line.slice(start, end);
	      // skip the space that was output as \n
	      start = end + 1;                    // derive start <= length-1
	    }
	    curr = next;
	  }

	  // By the invariants, start <= length-1, so there is something left over.
	  // It is either the whole string or a part starting from non-whitespace.
	  result += '\n';
	  // Insert a break if the remainder is too long and there is a break available.
	  if (line.length - start > width && curr > start) {
	    result += line.slice(start, curr) + '\n' + line.slice(curr + 1);
	  } else {
	    result += line.slice(start);
	  }

	  return result.slice(1); // drop extra \n joiner
	}

	// Escapes a double-quoted string.
	function escapeString(string) {
	  var result = '';
	  var char;
	  var escapeSeq;

	  for (var i = 0; i < string.length; i++) {
	    char = string.charCodeAt(i);
	    escapeSeq = ESCAPE_SEQUENCES[char];
	    result += !escapeSeq && isPrintable(char)
	      ? string[i]
	      : escapeSeq || encodeHex(char);
	  }

	  return result;
	}

	function writeFlowSequence(state, level, object) {
	  var _result = '',
	      _tag    = state.tag,
	      index,
	      length;

	  for (index = 0, length = object.length; index < length; index += 1) {
	    // Write only valid elements.
	    if (writeNode(state, level, object[index], false, false)) {
	      if (index !== 0) _result += ', ';
	      _result += state.dump;
	    }
	  }

	  state.tag = _tag;
	  state.dump = '[' + _result + ']';
	}

	function writeBlockSequence(state, level, object, compact) {
	  var _result = '',
	      _tag    = state.tag,
	      index,
	      length;

	  for (index = 0, length = object.length; index < length; index += 1) {
	    // Write only valid elements.
	    if (writeNode(state, level + 1, object[index], true, true)) {
	      if (!compact || index !== 0) {
	        _result += generateNextLine(state, level);
	      }
	      _result += '- ' + state.dump;
	    }
	  }

	  state.tag = _tag;
	  state.dump = _result || '[]'; // Empty sequence if no valid values.
	}

	function writeFlowMapping(state, level, object) {
	  var _result       = '',
	      _tag          = state.tag,
	      objectKeyList = Object.keys(object),
	      index,
	      length,
	      objectKey,
	      objectValue,
	      pairBuffer;

	  for (index = 0, length = objectKeyList.length; index < length; index += 1) {
	    pairBuffer = '';

	    if (index !== 0) pairBuffer += ', ';

	    objectKey = objectKeyList[index];
	    objectValue = object[objectKey];

	    if (!writeNode(state, level, objectKey, false, false)) {
	      continue; // Skip this pair because of invalid key;
	    }

	    if (state.dump.length > 1024) pairBuffer += '? ';

	    pairBuffer += state.dump + ': ';

	    if (!writeNode(state, level, objectValue, false, false)) {
	      continue; // Skip this pair because of invalid value.
	    }

	    pairBuffer += state.dump;

	    // Both key and value are valid.
	    _result += pairBuffer;
	  }

	  state.tag = _tag;
	  state.dump = '{' + _result + '}';
	}

	function writeBlockMapping(state, level, object, compact) {
	  var _result       = '',
	      _tag          = state.tag,
	      objectKeyList = Object.keys(object),
	      index,
	      length,
	      objectKey,
	      objectValue,
	      explicitPair,
	      pairBuffer;

	  // Allow sorting keys so that the output file is deterministic
	  if (state.sortKeys === true) {
	    // Default sorting
	    objectKeyList.sort();
	  } else if (typeof state.sortKeys === 'function') {
	    // Custom sort function
	    objectKeyList.sort(state.sortKeys);
	  } else if (state.sortKeys) {
	    // Something is wrong
	    throw new YAMLException('sortKeys must be a boolean or a function');
	  }

	  for (index = 0, length = objectKeyList.length; index < length; index += 1) {
	    pairBuffer = '';

	    if (!compact || index !== 0) {
	      pairBuffer += generateNextLine(state, level);
	    }

	    objectKey = objectKeyList[index];
	    objectValue = object[objectKey];

	    if (!writeNode(state, level + 1, objectKey, true, true, true)) {
	      continue; // Skip this pair because of invalid key.
	    }

	    explicitPair = (state.tag !== null && state.tag !== '?') ||
	                   (state.dump && state.dump.length > 1024);

	    if (explicitPair) {
	      if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {
	        pairBuffer += '?';
	      } else {
	        pairBuffer += '? ';
	      }
	    }

	    pairBuffer += state.dump;

	    if (explicitPair) {
	      pairBuffer += generateNextLine(state, level);
	    }

	    if (!writeNode(state, level + 1, objectValue, true, explicitPair)) {
	      continue; // Skip this pair because of invalid value.
	    }

	    if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {
	      pairBuffer += ':';
	    } else {
	      pairBuffer += ': ';
	    }

	    pairBuffer += state.dump;

	    // Both key and value are valid.
	    _result += pairBuffer;
	  }

	  state.tag = _tag;
	  state.dump = _result || '{}'; // Empty mapping if no valid pairs.
	}

	function detectType(state, object, explicit) {
	  var _result, typeList, index, length, type, style;

	  typeList = explicit ? state.explicitTypes : state.implicitTypes;

	  for (index = 0, length = typeList.length; index < length; index += 1) {
	    type = typeList[index];

	    if ((type.instanceOf  || type.predicate) &&
	        (!type.instanceOf || ((typeof object === 'object') && (object instanceof type.instanceOf))) &&
	        (!type.predicate  || type.predicate(object))) {

	      state.tag = explicit ? type.tag : '?';

	      if (type.represent) {
	        style = state.styleMap[type.tag] || type.defaultStyle;

	        if (_toString.call(type.represent) === '[object Function]') {
	          _result = type.represent(object, style);
	        } else if (_hasOwnProperty.call(type.represent, style)) {
	          _result = type.represent[style](object, style);
	        } else {
	          throw new YAMLException('!<' + type.tag + '> tag resolver accepts not "' + style + '" style');
	        }

	        state.dump = _result;
	      }

	      return true;
	    }
	  }

	  return false;
	}

	// Serializes `object` and writes it to global `result`.
	// Returns true on success, or false on invalid object.
	//
	function writeNode(state, level, object, block, compact, iskey) {
	  state.tag = null;
	  state.dump = object;

	  if (!detectType(state, object, false)) {
	    detectType(state, object, true);
	  }

	  var type = _toString.call(state.dump);

	  if (block) {
	    block = (state.flowLevel < 0 || state.flowLevel > level);
	  }

	  var objectOrArray = type === '[object Object]' || type === '[object Array]',
	      duplicateIndex,
	      duplicate;

	  if (objectOrArray) {
	    duplicateIndex = state.duplicates.indexOf(object);
	    duplicate = duplicateIndex !== -1;
	  }

	  if ((state.tag !== null && state.tag !== '?') || duplicate || (state.indent !== 2 && level > 0)) {
	    compact = false;
	  }

	  if (duplicate && state.usedDuplicates[duplicateIndex]) {
	    state.dump = '*ref_' + duplicateIndex;
	  } else {
	    if (objectOrArray && duplicate && !state.usedDuplicates[duplicateIndex]) {
	      state.usedDuplicates[duplicateIndex] = true;
	    }
	    if (type === '[object Object]') {
	      if (block && (Object.keys(state.dump).length !== 0)) {
	        writeBlockMapping(state, level, state.dump, compact);
	        if (duplicate) {
	          state.dump = '&ref_' + duplicateIndex + state.dump;
	        }
	      } else {
	        writeFlowMapping(state, level, state.dump);
	        if (duplicate) {
	          state.dump = '&ref_' + duplicateIndex + ' ' + state.dump;
	        }
	      }
	    } else if (type === '[object Array]') {
	      if (block && (state.dump.length !== 0)) {
	        writeBlockSequence(state, level, state.dump, compact);
	        if (duplicate) {
	          state.dump = '&ref_' + duplicateIndex + state.dump;
	        }
	      } else {
	        writeFlowSequence(state, level, state.dump);
	        if (duplicate) {
	          state.dump = '&ref_' + duplicateIndex + ' ' + state.dump;
	        }
	      }
	    } else if (type === '[object String]') {
	      if (state.tag !== '?') {
	        writeScalar(state, state.dump, level, iskey);
	      }
	    } else {
	      if (state.skipInvalid) return false;
	      throw new YAMLException('unacceptable kind of an object to dump ' + type);
	    }

	    if (state.tag !== null && state.tag !== '?') {
	      state.dump = '!<' + state.tag + '> ' + state.dump;
	    }
	  }

	  return true;
	}

	function getDuplicateReferences(object, state) {
	  var objects = [],
	      duplicatesIndexes = [],
	      index,
	      length;

	  inspectNode(object, objects, duplicatesIndexes);

	  for (index = 0, length = duplicatesIndexes.length; index < length; index += 1) {
	    state.duplicates.push(objects[duplicatesIndexes[index]]);
	  }
	  state.usedDuplicates = new Array(length);
	}

	function inspectNode(object, objects, duplicatesIndexes) {
	  var objectKeyList,
	      index,
	      length;

	  if (object !== null && typeof object === 'object') {
	    index = objects.indexOf(object);
	    if (index !== -1) {
	      if (duplicatesIndexes.indexOf(index) === -1) {
	        duplicatesIndexes.push(index);
	      }
	    } else {
	      objects.push(object);

	      if (Array.isArray(object)) {
	        for (index = 0, length = object.length; index < length; index += 1) {
	          inspectNode(object[index], objects, duplicatesIndexes);
	        }
	      } else {
	        objectKeyList = Object.keys(object);

	        for (index = 0, length = objectKeyList.length; index < length; index += 1) {
	          inspectNode(object[objectKeyList[index]], objects, duplicatesIndexes);
	        }
	      }
	    }
	  }
	}

	function dump(input, options) {
	  options = options || {};

	  var state = new State(options);

	  if (!state.noRefs) getDuplicateReferences(input, state);

	  if (writeNode(state, 0, input, true, true)) return state.dump + '\n';

	  return '';
	}

	function safeDump(input, options) {
	  return dump(input, common.extend({ schema: DEFAULT_SAFE_SCHEMA }, options));
	}

	module.exports.dump     = dump;
	module.exports.safeDump = safeDump;


/***/ },
/* 272 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var index_1 = __webpack_require__(202);
	exports.DIMENSION = {
	    name: {
	        label: "Name (you won't be able to change this later)",
	        description: "The name of the dimension. This does not have to correspond to the\n      attribute name (but the auto generated dimensions do). This should be a\n      URL safe string. Changing this property will break any URLs that someone\n      might have generated that include this dimension, that's why you can only\n      set it once"
	    },
	    title: {
	        label: "Title",
	        description: "The title for this dimension in the UI. Can be anything and is safe\n    to change at any time."
	    },
	    kind: {
	        label: "Kind",
	        description: "The dimension's kind"
	    },
	    formula: {
	        label: "Formula",
	        description: "The formula for this dimension. By default it is <code>$name</code> where <em>name</em> is\n      the name of the dimension. You can create derived dimensions by using\n      non-trivial formulas."
	    },
	    url: {
	        label: "URL",
	        description: "A url associated with the dimension, with optional token '%s' that\n    is replaced by the dimension value to generate a link specific to each value."
	    },
	    granularities: {
	        label: "Granularities",
	        description: "A set of exactly 5 granularities that you want to be available for bucketing."
	    },
	    bucketingStrategy: {
	        label: "Default Bucketing",
	        description: "Specify whether or not the dimension should be bucketed by default."
	    }
	};
	exports.COLLECTION = {
	    name: {
	        label: "Name (you won't be able to change this later)",
	        description: "The name of the collection. This should be a\n      URL safe string. Changing this property will break any URLs that someone\n      might have generated that include this dimension, that's why you can only\n      set it once"
	    },
	    title: {
	        label: "Title",
	        description: "The title for this collection in the UI. Can be anything and is safe\n    to change at any time."
	    },
	    description: {
	        label: 'Description',
	        description: "The description of the collection (shown the home view)."
	    }
	};
	exports.COLLECTION_ITEM = {
	    name: {
	        label: "Name (you won't be able to change this later)",
	        description: "The name of the collection item. This should be a\n      URL safe string. Changing this property will break any URLs that someone\n      might have generated that include this dimension, that's why you can only\n      set it once"
	    },
	    title: {
	        label: "Title",
	        description: "The title for this item in the UI. Can be anything and is safe\n    to change at any time."
	    },
	    description: {
	        label: 'Description',
	        description: "The description of the collection item (shown in both the\n    overview and the detailed view."
	    }
	};
	exports.MEASURE = {
	    name: {
	        label: "Name (you won't be able to change this later)",
	        description: "The name of the measure. This should be a\n      URL safe string. Changing this property will break any URLs that someone\n      might have generated that include this dimension, that's why you can only\n      set it once"
	    },
	    title: {
	        label: "Title",
	        description: "The title for this measure in the UI. Can be anything and is safe\n    to change at any time."
	    },
	    units: {
	        label: "Units",
	        description: "The units for this measure. To be shown alongside the title."
	    },
	    formula: {
	        label: "Formula",
	        description: "The <a href=\"http://plywood.imply.io/expressions\" target=\"_blank\">\n      Plywood expression</a> for this dimension. By default it is\n      <code>$main.sum($name)</code> where <em>name</em> is the name of the measure."
	    }
	};
	exports.CLUSTER = {
	    title: {
	        label: 'Title',
	        description: "The title of the Cluster in the UI. Can be anything and is\n    safe to change at anytime"
	    },
	    name: {
	        label: 'Name',
	        description: "The name of the cluster (to be referenced later from the data cube)"
	    },
	    type: {
	        label: 'Type',
	        description: 'The database type of the cluster'
	    },
	    host: {
	        label: 'Host',
	        description: 'The host (hostname:port) of the cluster. In the Druid case this must be the broker.'
	    },
	    version: {
	        label: 'Version',
	        description: 'The explicit version to use for this cluster. This does not need to be defined ' +
	            'as the version will naturally be determined through introspection.'
	    },
	    timeout: {
	        label: 'Timeout',
	        description: "The timeout to set on the queries in ms. Default is <code>" + index_1.Cluster.DEFAULT_TIMEOUT + "</code>"
	    },
	    sourceListScan: {
	        label: 'Source List Scan',
	        description: "Should the sources of this cluster be automatically scanned and new\n      sources added as data cubes. Default: <code>" + index_1.Cluster.DEFAULT_SOURCE_LIST_SCAN + "</code>"
	    },
	    sourceListRefreshOnLoad: {
	        label: 'Source List Refresh On Load',
	        description: "Should the list of sources be reloaded every time that Pivot is\n    loaded. This will put additional load on the data store but will ensure that\n    sources are visible in the UI as soon as they are created."
	    },
	    sourceListRefreshInterval: {
	        label: 'Source List Refresh Interval',
	        description: "How often should sources be reloaded in ms. Default: <code>" + index_1.Cluster.DEFAULT_SOURCE_LIST_REFRESH_INTERVAL + "</code>"
	    },
	    sourceReintrospectOnLoad: {
	        label: 'Source Reintrospect On Load',
	        description: "Should sources be scanned for additional dimensions every time that\n      Pivot is loaded. This will put additional load on the data store but will\n      ensure that dimension are visible in the UI as soon as they are created. Default: <code>" + index_1.Cluster.DEFAULT_SOURCE_REINTROSPECT_INTERVAL + "</code>"
	    },
	    sourceReintrospectInterval: {
	        label: 'Source Reintrospect Interval',
	        description: 'How often should source schema be reloaded in ms.'
	    },
	    introspectionStrategy: {
	        label: 'Introspection Strategy',
	        description: 'The introspection strategy for the Druid external.'
	    },
	    requestDecorator: {
	        label: 'Request decorator',
	        description: 'The request decorator module filepath to load.'
	    },
	    database: {
	        label: 'Database',
	        description: 'The database to which to connect to.'
	    },
	    user: {
	        label: 'User',
	        description: 'The user to connect as. This user needs no permissions other than SELECT.'
	    },
	    password: {
	        label: 'Password',
	        description: 'The password to use with the provided user.'
	    }
	};
	exports.GENERAL = {
	    'customization.title': {
	        label: 'Title',
	        description: 'What will appear as the tab\'s title in your browser. Use <code>%v</code> as a placeholder for Pivot\'s version.'
	    },
	    'customization.timezones': {
	        label: 'Timezones',
	        description: "You can customize the timezones that appear in the header bar\n      dropdown by providing an array of timezone strings."
	    }
	};
	exports.DATA_CUBE = {
	    name: {
	        label: 'Name',
	        description: "The name of the data cube as used internally in Pivot and used in the\n      URLs. This should be a URL safe string. Changing this property for a given\n      data cube will break any URLs that someone might have generated for that\n      data cube in the past."
	    },
	    title: {
	        label: 'Title',
	        description: "The user visible name that will be used to describe this data cube in\n      the UI. It is always safe to change this."
	    },
	    description: {
	        label: 'Description',
	        description: 'The description of the data cube shown in the homepage.'
	    },
	    introspection: {
	        label: 'Introspection',
	        description: "How will this cube be introspected. Default: <code>" + index_1.DataCube.DEFAULT_INTROSPECTION + "</code>"
	    },
	    clusterName: {
	        label: 'Cluster',
	        description: "The cluster that the data cube belongs to (or <code>native</code>\n      if this is a file based data cube)"
	    },
	    source: {
	        label: 'Source',
	        description: 'The name of cube\'s source. The dataSource, table, or filename of the data for this cube'
	    },
	    subsetFormula: {
	        label: 'Subset Formula',
	        description: 'A row level filter that is applied to the cube. This filter is never represented in the UI'
	    },
	    defaultDuration: {
	        label: 'Default duration',
	        description: "The time period, expressed as an\n      <a href=\"https://en.wikipedia.org/wiki/ISO_8601#Durations\" target=\"_blank\">\n      ISO 8601 Duration</a>, that will be shown when the user first opens this\n      cube. Default: <code>" + index_1.DataCube.DEFAULT_DEFAULT_DURATION + "</code>."
	    },
	    defaultTimezone: {
	        label: 'Default timezone',
	        description: "The default timezone, expressed as an\n      <a href=\"https://en.wikipedia.org/wiki/Tz_database\" target=\"_blank\">\n      Olsen Timezone</a>, that will be selected when the user first opens this\n      cube. Default: <code>" + index_1.DataCube.DEFAULT_DEFAULT_TIMEZONE + "</code>."
	    },
	    defaultSortMeasure: {
	        label: 'Default sort measure',
	        description: "The name of the measure that will be used for default sorting.\n      It is commonly set to the measure that represents the count of events.\n      Default: the first measure."
	    },
	    attributeOverrides: {
	        label: "Attribute overrides",
	        description: "While Pivot tries to learn as much as it can from your data cube\n      from Druid directly. It can not (yet) do a perfect job.\n      The attributeOverrides: section of the data cube is there for you to fix that."
	    }
	};


/***/ },
/* 273 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var immutable_class_1 = __webpack_require__(193);
	var check;
	var ExternalView = (function () {
	    function ExternalView(parameters) {
	        var title = parameters.title, linkGenerator = parameters.linkGenerator;
	        if (!title)
	            throw new Error("External view must have title");
	        if (typeof linkGenerator !== 'string')
	            throw new Error("Must provide link generator function");
	        this.title = title;
	        this.linkGenerator = linkGenerator;
	        var linkGeneratorFnRaw = null;
	        try {
	            linkGeneratorFnRaw = new Function('dataCube', 'dataSource', 'timezone', 'filter', 'splits', linkGenerator);
	        }
	        catch (e) {
	            throw new Error("Error constructing link generator function: " + e.message);
	        }
	        this.linkGeneratorFn = function (dataCube, timezone, filter, splits) {
	            try {
	                return linkGeneratorFnRaw(dataCube, dataCube, timezone, filter, splits);
	            }
	            catch (e) {
	                console.warn("Error with custom link generating function '" + title + "': " + e.message + " [" + linkGenerator + "]");
	                return null;
	            }
	        };
	        this.sameWindow = Boolean(parameters.sameWindow);
	    }
	    ExternalView.isExternalView = function (candidate) {
	        return immutable_class_1.isInstanceOf(candidate, ExternalView);
	    };
	    ExternalView.fromJS = function (parameters) {
	        var value = parameters;
	        return new ExternalView({
	            title: value.title,
	            linkGenerator: value.linkGenerator,
	            linkGeneratorFn: value.linkGeneratorFn,
	            sameWindow: value.sameWindow
	        });
	    };
	    ExternalView.prototype.toJS = function () {
	        var js = {
	            title: this.title,
	            linkGenerator: this.linkGenerator
	        };
	        if (this.sameWindow === true)
	            js.sameWindow = true;
	        return js;
	    };
	    ExternalView.prototype.valueOf = function () {
	        var value = {
	            title: this.title,
	            linkGenerator: this.linkGenerator
	        };
	        if (this.sameWindow === true)
	            value.sameWindow = true;
	        return value;
	    };
	    ExternalView.prototype.toJSON = function () {
	        return this.toJS();
	    };
	    ExternalView.prototype.equals = function (other) {
	        return ExternalView.isExternalView(other) &&
	            this.title === other.title &&
	            this.linkGenerator === other.linkGenerator &&
	            this.sameWindow === other.sameWindow;
	    };
	    ExternalView.prototype.toString = function () {
	        return this.title + ": " + this.linkGenerator;
	    };
	    return ExternalView;
	}());
	exports.ExternalView = ExternalView;
	check = ExternalView;


/***/ },
/* 274 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var immutable_class_1 = __webpack_require__(193);
	var general_1 = __webpack_require__(209);
	var check;
	var DragPosition = (function () {
	    function DragPosition(parameters) {
	        this.insert = general_1.hasOwnProperty(parameters, 'insert') ? parameters.insert : null;
	        this.replace = general_1.hasOwnProperty(parameters, 'replace') ? parameters.replace : null;
	        if (this.insert == null && this.replace == null)
	            throw new Error('invalid drag position');
	    }
	    DragPosition.isDragPosition = function (candidate) {
	        return immutable_class_1.isInstanceOf(candidate, DragPosition);
	    };
	    DragPosition.calculateFromOffset = function (offset, numItems, itemWidth, itemGap) {
	        if (!numItems) {
	            return new DragPosition({
	                replace: 0
	            });
	        }
	        if (offset < 0) {
	            return new DragPosition({
	                insert: 0
	            });
	        }
	        var sectionWidth = itemWidth + itemGap;
	        var sectionNumber = Math.floor(offset / sectionWidth);
	        if (numItems <= sectionNumber) {
	            return new DragPosition({
	                replace: numItems
	            });
	        }
	        var offsetWithinSection = offset - sectionWidth * sectionNumber;
	        if (offsetWithinSection < itemWidth) {
	            return new DragPosition({
	                replace: sectionNumber
	            });
	        }
	        else {
	            return new DragPosition({
	                insert: sectionNumber + 1
	            });
	        }
	    };
	    DragPosition.fromJS = function (parameters) {
	        return new DragPosition(parameters);
	    };
	    DragPosition.prototype.valueOf = function () {
	        return {
	            insert: this.insert,
	            replace: this.replace
	        };
	    };
	    DragPosition.prototype.toJS = function () {
	        var js = {};
	        if (this.insert != null)
	            js.insert = this.insert;
	        if (this.replace != null)
	            js.replace = this.replace;
	        return js;
	    };
	    DragPosition.prototype.toJSON = function () {
	        return this.toJS();
	    };
	    DragPosition.prototype.toString = function () {
	        if (this.insert != null) {
	            return "[insert " + this.insert + "]";
	        }
	        else {
	            return "[replace " + this.replace + "]";
	        }
	    };
	    DragPosition.prototype.equals = function (other) {
	        return DragPosition.isDragPosition(other) &&
	            this.insert === other.insert &&
	            this.replace === other.replace;
	    };
	    DragPosition.prototype.isInsert = function () {
	        return this.insert !== null;
	    };
	    DragPosition.prototype.isReplace = function () {
	        return this.replace !== null;
	    };
	    return DragPosition;
	}());
	exports.DragPosition = DragPosition;
	check = DragPosition;


/***/ },
/* 275 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var immutable_class_1 = __webpack_require__(193);
	var index_1 = __webpack_require__(231);
	var plywood_1 = __webpack_require__(199);
	var general_1 = __webpack_require__(209);
	var cluster_1 = __webpack_require__(219);
	var customization_1 = __webpack_require__(230);
	var data_cube_1 = __webpack_require__(220);
	var collection_1 = __webpack_require__(229);
	var check;
	var AppSettings = (function () {
	    function AppSettings(parameters) {
	        var version = parameters.version, clusters = parameters.clusters, customization = parameters.customization, dataCubes = parameters.dataCubes, linkViewConfig = parameters.linkViewConfig, collections = parameters.collections;
	        for (var _i = 0, dataCubes_1 = dataCubes; _i < dataCubes_1.length; _i++) {
	            var dataCube = dataCubes_1[_i];
	            if (dataCube.clusterName === 'native')
	                continue;
	            if (!plywood_1.findByName(clusters, dataCube.clusterName)) {
	                throw new Error("data cube " + dataCube.name + " refers to an unknown cluster " + dataCube.clusterName);
	            }
	        }
	        this.version = version || 0;
	        this.clusters = clusters;
	        this.customization = customization;
	        this.dataCubes = dataCubes;
	        this.linkViewConfig = linkViewConfig;
	        this.collections = collections;
	    }
	    AppSettings.isAppSettings = function (candidate) {
	        return immutable_class_1.isInstanceOf(candidate, AppSettings);
	    };
	    AppSettings.fromJS = function (parameters, context) {
	        if (!context)
	            throw new Error('AppSettings must have context');
	        var clusters;
	        if (parameters.clusters) {
	            clusters = parameters.clusters.map(function (cluster) { return cluster_1.Cluster.fromJS(cluster); });
	        }
	        else if (general_1.hasOwnProperty(parameters, 'druidHost') || general_1.hasOwnProperty(parameters, 'brokerHost')) {
	            var clusterJS = JSON.parse(JSON.stringify(parameters));
	            clusterJS.name = 'druid';
	            clusterJS.type = 'druid';
	            clusterJS.host = clusterJS.druidHost || clusterJS.brokerHost;
	            clusters = [cluster_1.Cluster.fromJS(clusterJS)];
	        }
	        else {
	            clusters = [];
	        }
	        var executorFactory = context.executorFactory;
	        var dataCubes = (parameters.dataCubes || parameters.dataSources || []).map(function (dataCubeJS) {
	            var dataCubeClusterName = dataCubeJS.clusterName || dataCubeJS.engine;
	            if (dataCubeClusterName !== 'native') {
	                var cluster = plywood_1.findByName(clusters, dataCubeClusterName);
	                if (!cluster)
	                    throw new Error("Can not find cluster '" + dataCubeClusterName + "' for data cube '" + dataCubeJS.name + "'");
	            }
	            var dataCubeObject = data_cube_1.DataCube.fromJS(dataCubeJS, { cluster: cluster });
	            if (executorFactory) {
	                var executor = executorFactory(dataCubeObject);
	                if (executor)
	                    dataCubeObject = dataCubeObject.attachExecutor(executor);
	            }
	            return dataCubeObject;
	        });
	        var collectionContext = { dataCubes: dataCubes, visualizations: context.visualizations };
	        var makeCollection = function (js) {
	            return js ? collection_1.Collection.fromJS(js, collectionContext) : null;
	        };
	        var value = {
	            version: parameters.version,
	            clusters: clusters,
	            customization: customization_1.Customization.fromJS(parameters.customization || {}),
	            dataCubes: dataCubes,
	            linkViewConfig: makeCollection(parameters.linkViewConfig),
	            collections: parameters.collections ? parameters.collections.map(makeCollection).filter(Boolean) : []
	        };
	        return new AppSettings(value);
	    };
	    AppSettings.prototype.valueOf = function () {
	        return {
	            version: this.version,
	            clusters: this.clusters,
	            customization: this.customization,
	            dataCubes: this.dataCubes,
	            linkViewConfig: this.linkViewConfig,
	            collections: this.collections
	        };
	    };
	    AppSettings.prototype.toJS = function () {
	        var js = {};
	        if (this.version)
	            js.version = this.version;
	        js.clusters = this.clusters.map(function (cluster) { return cluster.toJS(); });
	        js.customization = this.customization.toJS();
	        js.dataCubes = this.dataCubes.map(function (dataCube) { return dataCube.toJS(); });
	        if (this.collections.length > 0)
	            js.collections = this.collections.map(function (c) { return c.toJS(); });
	        if (this.linkViewConfig)
	            js.linkViewConfig = this.linkViewConfig.toJS();
	        return js;
	    };
	    AppSettings.prototype.toJSON = function () {
	        return this.toJS();
	    };
	    AppSettings.prototype.toString = function () {
	        return "[AppSettings v" + this.version + " dataCubes=" + this.dataCubes.length + "]";
	    };
	    AppSettings.prototype.equals = function (other) {
	        return AppSettings.isAppSettings(other) &&
	            this.version === other.version &&
	            immutable_class_1.immutableArraysEqual(this.clusters, other.clusters) &&
	            immutable_class_1.immutableEqual(this.customization, other.customization) &&
	            immutable_class_1.immutableArraysEqual(this.dataCubes, other.dataCubes) &&
	            Boolean(this.linkViewConfig) === Boolean(other.linkViewConfig) &&
	            immutable_class_1.immutableArraysEqual(this.collections, other.collections);
	    };
	    AppSettings.prototype.toClientSettings = function () {
	        var value = this.valueOf();
	        value.clusters = value.clusters.map(function (c) { return c.toClientCluster(); });
	        value.dataCubes = value.dataCubes
	            .filter(function (ds) { return ds.isQueryable(); })
	            .map(function (ds) { return ds.toClientDataCube(); });
	        return new AppSettings(value);
	    };
	    AppSettings.prototype.getVersion = function () {
	        return this.version;
	    };
	    AppSettings.prototype.getDataCubesForCluster = function (clusterName) {
	        return this.dataCubes.filter(function (dataCube) { return dataCube.clusterName === clusterName; });
	    };
	    AppSettings.prototype.getDataCube = function (dataCubeName) {
	        return plywood_1.findByName(this.dataCubes, dataCubeName);
	    };
	    AppSettings.prototype.addOrUpdateDataCube = function (dataCube) {
	        var value = this.valueOf();
	        value.dataCubes = plywood_1.overrideByName(value.dataCubes, dataCube);
	        return new AppSettings(value);
	    };
	    AppSettings.prototype.addOrUpdateCollection = function (collection) {
	        var value = this.valueOf();
	        value.collections = plywood_1.overrideByName(value.collections, collection);
	        return new AppSettings(value);
	    };
	    AppSettings.prototype.deleteCollection = function (collection) {
	        var value = this.valueOf();
	        var index = value.collections.indexOf(collection);
	        if (index === -1) {
	            throw new Error("Unknown collection : " + collection.toString());
	        }
	        var newCollections = value.collections.concat();
	        newCollections.splice(index, 1);
	        value.collections = newCollections;
	        return new AppSettings(value);
	    };
	    AppSettings.prototype.addCollectionAt = function (collection, index) {
	        var value = this.valueOf();
	        var newCollections = value.collections.concat();
	        newCollections.splice(index, 0, collection);
	        value.collections = newCollections;
	        return new AppSettings(value);
	    };
	    AppSettings.prototype.attachExecutors = function (executorFactory) {
	        var value = this.valueOf();
	        value.dataCubes = value.dataCubes.map(function (ds) {
	            var executor = executorFactory(ds);
	            if (executor)
	                ds = ds.attachExecutor(executor);
	            return ds;
	        });
	        return new AppSettings(value);
	    };
	    AppSettings.prototype.changeCustomization = function (customization) {
	        return this.change('customization', customization);
	    };
	    AppSettings.prototype.changeClusters = function (clusters) {
	        return this.change('clusters', clusters);
	    };
	    AppSettings.prototype.addCluster = function (cluster) {
	        return this.changeClusters(plywood_1.overrideByName(this.clusters, cluster));
	    };
	    AppSettings.prototype.change = function (propertyName, newValue) {
	        return index_1.ImmutableUtils.change(this, propertyName, newValue);
	    };
	    AppSettings.prototype.changeDataCubes = function (dataCubes) {
	        return this.change('dataCubes', dataCubes);
	    };
	    AppSettings.prototype.changeCollections = function (collections) {
	        return this.change('collections', collections);
	    };
	    AppSettings.prototype.addDataCube = function (dataCube) {
	        return this.changeDataCubes(plywood_1.overrideByName(this.dataCubes, dataCube));
	    };
	    AppSettings.prototype.filterDataCubes = function (fn) {
	        var value = this.valueOf();
	        value.dataCubes = value.dataCubes.filter(fn);
	        return new AppSettings(value);
	    };
	    AppSettings.BLANK = AppSettings.fromJS({}, { visualizations: [] });
	    return AppSettings;
	}());
	exports.AppSettings = AppSettings;
	check = AppSettings;


/***/ },
/* 276 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var totals_1 = __webpack_require__(277);
	var table_1 = __webpack_require__(278);
	var line_chart_1 = __webpack_require__(280);
	var bar_chart_1 = __webpack_require__(281);
	var geo_1 = __webpack_require__(282);
	exports.MANIFESTS = [
	    totals_1.TOTALS_MANIFEST,
	    table_1.TABLE_MANIFEST,
	    line_chart_1.LINE_CHART_MANIFEST,
	    bar_chart_1.BAR_CHART_MANIFEST,
	    geo_1.GEO_MANIFEST
	];


/***/ },
/* 277 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var index_1 = __webpack_require__(202);
	var manifest_1 = __webpack_require__(225);
	function handleCircumstance(dataCube, splits, colors, current) {
	    if (!splits.length())
	        return manifest_1.Resolve.ready(10);
	    return manifest_1.Resolve.automatic(3, { splits: index_1.Splits.EMPTY });
	}
	exports.TOTALS_MANIFEST = new manifest_1.Manifest('totals', 'Totals', handleCircumstance, 'multi');


/***/ },
/* 278 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var plywood_1 = __webpack_require__(199);
	var circumstances_handler_1 = __webpack_require__(279);
	var manifest_1 = __webpack_require__(225);
	var handler = circumstances_handler_1.CircumstancesHandler.EMPTY()
	    .needsAtLeastOneSplit('The Table requires at least one split')
	    .otherwise(function (splits, dataCube, colors, current) {
	    var autoChanged = false;
	    splits = splits.map(function (split, i) {
	        var splitDimension = splits.get(0).getDimension(dataCube.dimensions);
	        var sortStrategy = splitDimension.sortStrategy;
	        if (!split.sortAction) {
	            if (sortStrategy) {
	                if (sortStrategy === 'self') {
	                    split = split.changeSortAction(new plywood_1.SortAction({
	                        expression: plywood_1.$(splitDimension.name),
	                        direction: plywood_1.SortAction.DESCENDING
	                    }));
	                }
	                else {
	                    split = split.changeSortAction(new plywood_1.SortAction({
	                        expression: plywood_1.$(sortStrategy),
	                        direction: plywood_1.SortAction.DESCENDING
	                    }));
	                }
	            }
	            else {
	                split = split.changeSortAction(dataCube.getDefaultSortAction());
	                autoChanged = true;
	            }
	        }
	        if (!split.limitAction && (autoChanged || splitDimension.kind !== 'time')) {
	            split = split.changeLimit(i ? 5 : 50);
	            autoChanged = true;
	        }
	        return split;
	    });
	    if (colors) {
	        colors = null;
	        autoChanged = true;
	    }
	    return autoChanged ? manifest_1.Resolve.automatic(6, { splits: splits }) : manifest_1.Resolve.ready(current ? 10 : 8);
	});
	exports.TABLE_MANIFEST = new manifest_1.Manifest('table', 'Table', handler.evaluate.bind(handler));


/***/ },
/* 279 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var index_1 = __webpack_require__(202);
	var manifest_1 = __webpack_require__(225);
	var CircumstancesHandler = (function () {
	    function CircumstancesHandler() {
	        this.configurations = [];
	        this.actions = [];
	    }
	    CircumstancesHandler.noSplits = function () {
	        return function (splits) { return splits.length() === 0; };
	    };
	    CircumstancesHandler.testKind = function (kind, selector) {
	        if (selector === '*') {
	            return true;
	        }
	        var bareSelector = selector.replace(/^!/, '');
	        var result = kind === bareSelector;
	        if (selector.charAt(0) === '!') {
	            return !result;
	        }
	        return result;
	    };
	    CircumstancesHandler.strictCompare = function (selectors, kinds) {
	        if (selectors.length !== kinds.length)
	            return false;
	        return selectors.every(function (selector, i) { return CircumstancesHandler.testKind(kinds[i], selector); });
	    };
	    CircumstancesHandler.EMPTY = function () {
	        return new CircumstancesHandler();
	    };
	    CircumstancesHandler.prototype.when = function (configuration) {
	        var _this = this;
	        var temp = [configuration];
	        var ret = {
	            or: function (conf) {
	                temp.push(conf);
	                return ret;
	            },
	            then: function (action) {
	                _this.configurations.push(temp);
	                _this.actions.push(action);
	                return _this;
	            }
	        };
	        return ret;
	    };
	    CircumstancesHandler.prototype.otherwise = function (action) {
	        this.otherwiseAction = action;
	        return this;
	    };
	    CircumstancesHandler.prototype.needsAtLeastOneSplit = function (message) {
	        return this
	            .when(CircumstancesHandler.noSplits())
	            .then(function (splits, dataCube) {
	            var someDimensions = dataCube.dimensions.toArray().filter(function (d) { return d.kind === 'string'; }).slice(0, 2);
	            return manifest_1.Resolve.manual(4, message, someDimensions.map(function (someDimension) {
	                return {
	                    description: "Add a split on " + someDimension.title,
	                    adjustment: {
	                        splits: index_1.Splits.fromSplitCombine(index_1.SplitCombine.fromExpression(someDimension.expression))
	                    }
	                };
	            }));
	        });
	    };
	    CircumstancesHandler.prototype.evaluate = function (dataCube, splits, colors, current) {
	        for (var i = 0; i < this.configurations.length; i++) {
	            var confs = this.configurations[i];
	            if (confs.some(function (c) { return c(splits, dataCube); })) {
	                return this.actions[i](splits, dataCube, colors, current);
	            }
	        }
	        return this.otherwiseAction(splits, dataCube, colors, current);
	    };
	    CircumstancesHandler.areExactSplitKinds = function () {
	        var selectors = [];
	        for (var _i = 0; _i < arguments.length; _i++) {
	            selectors[_i - 0] = arguments[_i];
	        }
	        return function (splits, dataCube) {
	            var kinds = splits.toArray().map(function (split) { return split.getDimension(dataCube.dimensions).kind; });
	            return CircumstancesHandler.strictCompare(selectors, kinds);
	        };
	    };
	    CircumstancesHandler.haveAtLeastSplitKinds = function () {
	        var kinds = [];
	        for (var _i = 0; _i < arguments.length; _i++) {
	            kinds[_i - 0] = arguments[_i];
	        }
	        return function (splits, dataCube) {
	            var getKind = function (split) { return split.getDimension(dataCube.dimensions).kind; };
	            var actualKinds = splits.toArray().map(getKind);
	            return kinds.every(function (kind) { return actualKinds.indexOf(kind) > -1; });
	        };
	    };
	    return CircumstancesHandler;
	}());
	exports.CircumstancesHandler = CircumstancesHandler;


/***/ },
/* 280 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var immutable_1 = __webpack_require__(210);
	var plywood_1 = __webpack_require__(199);
	var index_1 = __webpack_require__(202);
	var circumstances_handler_1 = __webpack_require__(279);
	var manifest_1 = __webpack_require__(225);
	var handler = circumstances_handler_1.CircumstancesHandler.EMPTY()
	    .when(function (splits, dataCube) { return !(dataCube.getDimensionByKind('time') || dataCube.getDimensionByKind('number')); })
	    .then(function () { return manifest_1.Resolve.NEVER; })
	    .when(circumstances_handler_1.CircumstancesHandler.noSplits())
	    .then(function (splits, dataCube) {
	    var continuousDimensions = dataCube.getDimensionByKind('time').concat(dataCube.getDimensionByKind('number'));
	    return manifest_1.Resolve.manual(3, 'This visualization requires a continuous dimension split', continuousDimensions.toArray().map(function (continuousDimension) {
	        return {
	            description: "Add a split on " + continuousDimension.title,
	            adjustment: {
	                splits: index_1.Splits.fromSplitCombine(index_1.SplitCombine.fromExpression(continuousDimension.expression))
	            }
	        };
	    }));
	})
	    .when(circumstances_handler_1.CircumstancesHandler.areExactSplitKinds('time'))
	    .or(circumstances_handler_1.CircumstancesHandler.areExactSplitKinds('number'))
	    .then(function (splits, dataCube, colors, current) {
	    var score = 4;
	    var continuousSplit = splits.get(0);
	    var continuousDimension = dataCube.getDimensionByExpression(continuousSplit.expression);
	    var sortStrategy = continuousDimension.sortStrategy;
	    var sortAction = null;
	    if (sortStrategy && sortStrategy !== 'self') {
	        sortAction = new plywood_1.SortAction({
	            expression: plywood_1.$(sortStrategy),
	            direction: plywood_1.SortAction.ASCENDING
	        });
	    }
	    else {
	        sortAction = new plywood_1.SortAction({
	            expression: plywood_1.$(continuousDimension.name),
	            direction: plywood_1.SortAction.ASCENDING
	        });
	    }
	    var autoChanged = false;
	    if (!sortAction.equals(continuousSplit.sortAction)) {
	        continuousSplit = continuousSplit.changeSortAction(sortAction);
	        autoChanged = true;
	    }
	    if (continuousSplit.limitAction && continuousDimension.kind === 'time') {
	        continuousSplit = continuousSplit.changeLimitAction(null);
	        autoChanged = true;
	    }
	    if (colors) {
	        autoChanged = true;
	    }
	    if (continuousDimension.kind === 'time')
	        score += 3;
	    if (!autoChanged)
	        return manifest_1.Resolve.ready(current ? 10 : score);
	    return manifest_1.Resolve.automatic(score, { splits: new index_1.Splits(immutable_1.List([continuousSplit])) });
	})
	    .when(circumstances_handler_1.CircumstancesHandler.areExactSplitKinds('time', '*'))
	    .then(function (splits, dataCube, colors) {
	    var timeSplit = splits.get(0);
	    var timeDimension = timeSplit.getDimension(dataCube.dimensions);
	    var sortAction = new plywood_1.SortAction({
	        expression: plywood_1.$(timeDimension.name),
	        direction: plywood_1.SortAction.ASCENDING
	    });
	    if (!sortAction.equals(timeSplit.sortAction)) {
	        timeSplit = timeSplit.changeSortAction(sortAction);
	    }
	    if (timeSplit.limitAction) {
	        timeSplit = timeSplit.changeLimitAction(null);
	    }
	    var colorSplit = splits.get(1);
	    if (!colorSplit.sortAction) {
	        colorSplit = colorSplit.changeSortAction(dataCube.getDefaultSortAction());
	    }
	    var colorSplitDimension = dataCube.getDimensionByExpression(colorSplit.expression);
	    if (!colors || colors.dimension !== colorSplitDimension.name) {
	        colors = index_1.Colors.fromLimit(colorSplitDimension.name, 5);
	    }
	    return manifest_1.Resolve.automatic(8, {
	        splits: new index_1.Splits(immutable_1.List([colorSplit, timeSplit])),
	        colors: colors
	    });
	})
	    .when(circumstances_handler_1.CircumstancesHandler.areExactSplitKinds('*', 'time'))
	    .or(circumstances_handler_1.CircumstancesHandler.areExactSplitKinds('*', 'number'))
	    .then(function (splits, dataCube, colors) {
	    var timeSplit = splits.get(1);
	    var timeDimension = timeSplit.getDimension(dataCube.dimensions);
	    var autoChanged = false;
	    var sortAction = new plywood_1.SortAction({
	        expression: plywood_1.$(timeDimension.name),
	        direction: plywood_1.SortAction.ASCENDING
	    });
	    if (!sortAction.equals(timeSplit.sortAction)) {
	        timeSplit = timeSplit.changeSortAction(sortAction);
	        autoChanged = true;
	    }
	    if (timeSplit.limitAction) {
	        timeSplit = timeSplit.changeLimitAction(null);
	        autoChanged = true;
	    }
	    var colorSplit = splits.get(0);
	    if (!colorSplit.sortAction) {
	        colorSplit = colorSplit.changeSortAction(dataCube.getDefaultSortAction());
	        autoChanged = true;
	    }
	    var colorSplitDimension = dataCube.getDimensionByExpression(colorSplit.expression);
	    if (!colors || colors.dimension !== colorSplitDimension.name) {
	        colors = index_1.Colors.fromLimit(colorSplitDimension.name, 5);
	        autoChanged = true;
	    }
	    if (!autoChanged)
	        return manifest_1.Resolve.ready(10);
	    return manifest_1.Resolve.automatic(8, {
	        splits: new index_1.Splits(immutable_1.List([colorSplit, timeSplit])),
	        colors: colors
	    });
	})
	    .when(circumstances_handler_1.CircumstancesHandler.haveAtLeastSplitKinds('time'))
	    .then(function (splits, dataCube) {
	    var timeSplit = splits.toArray().filter(function (split) { return split.getDimension(dataCube.dimensions).kind === 'time'; })[0];
	    return manifest_1.Resolve.manual(3, 'Too many splits on the line chart', [
	        {
	            description: "Remove all but the time split",
	            adjustment: {
	                splits: index_1.Splits.fromSplitCombine(timeSplit)
	            }
	        }
	    ]);
	})
	    .otherwise(function (splits, dataCube) {
	    var continuousDimensions = dataCube.getDimensionByKind('time').concat(dataCube.getDimensionByKind('number'));
	    return manifest_1.Resolve.manual(3, 'The Line Chart needs one continuous dimension split', continuousDimensions.toArray().map(function (continuousDimension) {
	        return {
	            description: "Split on " + continuousDimension.title + " instead",
	            adjustment: {
	                splits: index_1.Splits.fromSplitCombine(index_1.SplitCombine.fromExpression(continuousDimension.expression))
	            }
	        };
	    }));
	});
	exports.LINE_CHART_MANIFEST = new manifest_1.Manifest('line-chart', 'Line Chart', handler.evaluate.bind(handler));


/***/ },
/* 281 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var plywood_1 = __webpack_require__(199);
	var index_1 = __webpack_require__(202);
	var manifest_1 = __webpack_require__(225);
	var circumstances_handler_1 = __webpack_require__(279);
	var handler = circumstances_handler_1.CircumstancesHandler.EMPTY()
	    .needsAtLeastOneSplit('The Bar Chart requires at least one split')
	    .when(circumstances_handler_1.CircumstancesHandler.areExactSplitKinds('*'))
	    .or(circumstances_handler_1.CircumstancesHandler.areExactSplitKinds('*', '*'))
	    .then(function (splits, dataCube, colors, current) {
	    var continuousBoost = 0;
	    var autoChanged = false;
	    splits = splits.map(function (split) {
	        var splitDimension = dataCube.getDimensionByExpression(split.expression);
	        var sortStrategy = splitDimension.sortStrategy;
	        if (!split.sortAction) {
	            if (sortStrategy) {
	                if (sortStrategy === 'self') {
	                    split = split.changeSortAction(new plywood_1.SortAction({
	                        expression: plywood_1.$(splitDimension.name),
	                        direction: plywood_1.SortAction.DESCENDING
	                    }));
	                }
	                else {
	                    split = split.changeSortAction(new plywood_1.SortAction({
	                        expression: plywood_1.$(sortStrategy),
	                        direction: plywood_1.SortAction.DESCENDING
	                    }));
	                }
	            }
	            else if (splitDimension.kind === 'boolean') {
	                split = split.changeSortAction(new plywood_1.SortAction({
	                    expression: plywood_1.$(splitDimension.name),
	                    direction: plywood_1.SortAction.DESCENDING
	                }));
	            }
	            else {
	                if (splitDimension.isContinuous()) {
	                    split = split.changeSortAction(new plywood_1.SortAction({
	                        expression: plywood_1.$(splitDimension.name),
	                        direction: plywood_1.SortAction.ASCENDING
	                    }));
	                }
	                else {
	                    split = split.changeSortAction(dataCube.getDefaultSortAction());
	                }
	            }
	            autoChanged = true;
	        }
	        else if (splitDimension.canBucketByDefault() && split.sortAction.refName() !== splitDimension.name) {
	            split = split.changeSortAction(new plywood_1.SortAction({
	                expression: plywood_1.$(splitDimension.name),
	                direction: split.sortAction.direction
	            }));
	            autoChanged = true;
	        }
	        if (splitDimension.kind === 'number') {
	            continuousBoost = 4;
	        }
	        if (!split.limitAction && (autoChanged || splitDimension.kind !== 'time')) {
	            split = split.changeLimit(25);
	            autoChanged = true;
	        }
	        if (colors) {
	            colors = null;
	            autoChanged = true;
	        }
	        return split;
	    });
	    if (autoChanged) {
	        return manifest_1.Resolve.automatic(5 + continuousBoost, { splits: splits });
	    }
	    return manifest_1.Resolve.ready(current ? 10 : (7 + continuousBoost));
	})
	    .otherwise(function (splits, dataCube) {
	    var categoricalDimensions = dataCube.dimensions.filter(function (d) { return d.kind !== 'time'; });
	    return manifest_1.Resolve.manual(3, 'The Bar Chart needs one or two splits', categoricalDimensions.toArray().slice(0, 2).map(function (dimension) {
	        return {
	            description: "Split on " + dimension.title + " instead",
	            adjustment: {
	                splits: index_1.Splits.fromSplitCombine(index_1.SplitCombine.fromExpression(dimension.expression))
	            }
	        };
	    }));
	});
	exports.BAR_CHART_MANIFEST = new manifest_1.Manifest('bar-chart', 'Bar Chart', handler.evaluate.bind(handler));


/***/ },
/* 282 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var manifest_1 = __webpack_require__(225);
	function handleCircumstance(dataCube, splits, colors, current) {
	    return manifest_1.Resolve.manual(0, 'The Geo visualization is not ready, please select another visualization.', []);
	}
	exports.GEO_MANIFEST = new manifest_1.Manifest('geo', 'Geo', handleCircumstance);


/***/ },
/* 283 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(284);
	var React = __webpack_require__(5);
	var plywood_1 = __webpack_require__(199);
	var url_1 = __webpack_require__(286);
	var index_1 = __webpack_require__(202);
	var function_slot_1 = __webpack_require__(287);
	var ajax_1 = __webpack_require__(198);
	var index_2 = __webpack_require__(288);
	var index_3 = __webpack_require__(293);
	var no_data_view_1 = __webpack_require__(619);
	var home_view_1 = __webpack_require__(625);
	var link_view_1 = __webpack_require__(634);
	var cube_view_1 = __webpack_require__(660);
	var settings_view_1 = __webpack_require__(669);
	var collection_view_1 = __webpack_require__(690);
	var collection_view_delegate_1 = __webpack_require__(705);
	exports.HOME = "home";
	exports.CUBE = "cube";
	exports.COLLECTION = "collection";
	exports.LINK = "link";
	exports.SETTINGS = "settings";
	exports.NO_DATA = "no-data";
	var PivotApplication = (function (_super) {
	    __extends(PivotApplication, _super);
	    function PivotApplication() {
	        _super.call(this);
	        this.hashUpdating = false;
	        this.collectionViewDelegate = new collection_view_delegate_1.CollectionViewDelegate(this);
	        this.sideBarHrefFn = function_slot_1.createFunctionSlot();
	        this.state = {
	            appSettings: null,
	            drawerOpen: false,
	            selectedItem: null,
	            viewType: null,
	            viewHash: null,
	            showAboutModal: false
	        };
	        this.globalHashChangeListener = this.globalHashChangeListener.bind(this);
	    }
	    PivotApplication.prototype.componentWillMount = function () {
	        var _a = this.props, appSettings = _a.appSettings, initTimekeeper = _a.initTimekeeper;
	        var dataCubes = appSettings.dataCubes, collections = appSettings.collections;
	        var hash = window.location.hash;
	        var viewType = this.getViewTypeFromHash(hash);
	        if (viewType !== exports.SETTINGS && !dataCubes.length) {
	            window.location.hash = '';
	            this.setState({
	                viewType: exports.NO_DATA,
	                viewHash: '',
	                appSettings: appSettings
	            });
	            return;
	        }
	        var viewHash = this.getViewHashFromHash(hash);
	        var selectedItem;
	        if (this.viewTypeNeedsAnItem(viewType)) {
	            selectedItem = this.getSelectedItemFromHash(viewType === exports.CUBE ? dataCubes : collections, hash, viewType);
	            if (!selectedItem) {
	                this.changeHash('');
	                viewType = exports.HOME;
	            }
	        }
	        if (viewType === exports.HOME && dataCubes.length === 1 && collections.length === 0) {
	            viewType = exports.CUBE;
	            selectedItem = dataCubes[0];
	        }
	        this.setState({
	            viewType: viewType,
	            viewHash: viewHash,
	            selectedItem: selectedItem,
	            appSettings: appSettings,
	            timekeeper: initTimekeeper || index_1.Timekeeper.EMPTY
	        });
	    };
	    PivotApplication.prototype.viewTypeNeedsAnItem = function (viewType) {
	        return [exports.CUBE, exports.COLLECTION].indexOf(viewType) > -1;
	    };
	    PivotApplication.prototype.componentDidMount = function () {
	        var _this = this;
	        window.addEventListener('hashchange', this.globalHashChangeListener);
	        ajax_1.Ajax.settingsVersionGetter = function () {
	            var appSettings = _this.state.appSettings;
	            return appSettings.getVersion();
	        };
	        ajax_1.Ajax.onUpdate = function () {
	            console.log('UPDATE!!');
	        };
	        __webpack_require__.e/* nsure */(2, function (require) {
	            var Clipboard = __webpack_require__(706);
	            var clipboard = new Clipboard('.clipboard');
	            clipboard.on('success', function (e) {
	            });
	        });
	        __webpack_require__.e/* nsure */(3, function (require) {
	            _this.setState({
	                ReactCSSTransitionGroupAsync: __webpack_require__(715),
	                SideDrawerAsync: __webpack_require__(566).SideDrawer
	            });
	        });
	        !/* require.ensure */(function (require) {
	            _this.setState({
	                AboutModalAsync: __webpack_require__(289).AboutModal
	            });
	        }(__webpack_require__));
	        !/* require.ensure */(function (require) {
	            var _a = __webpack_require__(539), Notifications = _a.Notifications, Questions = _a.Questions;
	            _this.setState({
	                NotificationsAsync: Notifications,
	                QuestionsAsync: Questions
	            });
	        }(__webpack_require__));
	    };
	    PivotApplication.prototype.componentWillUnmount = function () {
	        window.removeEventListener('hashchange', this.globalHashChangeListener);
	    };
	    PivotApplication.prototype.globalHashChangeListener = function () {
	        if (this.hashUpdating)
	            return;
	        this.hashToState(window.location.hash);
	    };
	    PivotApplication.prototype.hashToState = function (hash) {
	        var _a = this.state.appSettings, dataCubes = _a.dataCubes, collections = _a.collections;
	        var viewType = this.getViewTypeFromHash(hash);
	        var viewHash = this.getViewHashFromHash(hash);
	        var newState = {
	            viewType: viewType,
	            viewHash: viewHash,
	            drawerOpen: false
	        };
	        if (this.viewTypeNeedsAnItem(viewType)) {
	            var items = viewType === exports.CUBE ? dataCubes : collections;
	            var item = this.getSelectedItemFromHash(items, hash, viewType);
	            newState.selectedItem = item ? item : items[0];
	        }
	        else {
	            newState.selectedItem = null;
	        }
	        this.setState(newState);
	    };
	    PivotApplication.prototype.parseHash = function (hash) {
	        if (hash[0] === '#')
	            hash = hash.substr(1);
	        return hash.split('/');
	    };
	    PivotApplication.prototype.getViewTypeFromHash = function (hash) {
	        var user = this.props.user;
	        var appSettings = this.state.appSettings || this.props.appSettings;
	        var dataCubes = appSettings.dataCubes;
	        var viewType = this.parseHash(hash)[0];
	        if (viewType === exports.SETTINGS && user && user.allow['settings'])
	            return exports.SETTINGS;
	        if (!dataCubes || !dataCubes.length)
	            return exports.NO_DATA;
	        if (!viewType || viewType === exports.HOME)
	            return appSettings.linkViewConfig ? exports.LINK : exports.HOME;
	        if (appSettings.linkViewConfig && viewType === exports.LINK)
	            return exports.LINK;
	        if (viewType === exports.COLLECTION)
	            return exports.COLLECTION;
	        if (viewType === exports.NO_DATA)
	            return exports.NO_DATA;
	        return exports.CUBE;
	    };
	    PivotApplication.prototype.getSelectedItemFromHash = function (items, hash, viewType) {
	        var parts = this.parseHash(hash);
	        var itemName = parts[viewType === exports.COLLECTION ? 1 : 0];
	        return plywood_1.findByName(items, itemName);
	    };
	    PivotApplication.prototype.getViewHashFromHash = function (hash) {
	        var parts = this.parseHash(hash);
	        if (parts.length < 2)
	            return null;
	        parts.shift();
	        return parts.join('/');
	    };
	    PivotApplication.prototype.sideDrawerOpen = function (drawerOpen) {
	        this.setState({ drawerOpen: drawerOpen });
	    };
	    PivotApplication.prototype.changeHash = function (hash, force) {
	        var _this = this;
	        if (force === void 0) { force = false; }
	        this.hashUpdating = true;
	        if (window.location.hash === "#" + hash.split('/')[0]) {
	            url_1.replaceHash('#' + hash);
	        }
	        else {
	            window.location.hash = "#" + hash;
	        }
	        setTimeout(function () {
	            _this.hashUpdating = false;
	        }, 5);
	        if (force)
	            this.hashToState(hash);
	    };
	    PivotApplication.prototype.updateViewHash = function (viewHash, force) {
	        if (force === void 0) { force = false; }
	        var viewType = this.state.viewType;
	        var newHash;
	        if (viewType === exports.CUBE) {
	            newHash = this.state.selectedItem.name + "/" + viewHash;
	        }
	        else if (viewType === exports.COLLECTION) {
	            newHash = "collection/" + this.state.selectedItem.name;
	        }
	        else if (viewType === exports.LINK) {
	            newHash = viewType + "/" + viewHash;
	        }
	        else {
	            newHash = viewType;
	        }
	        this.changeHash(newHash, force);
	    };
	    PivotApplication.prototype.getUrlPrefix = function (baseOnly) {
	        if (baseOnly === void 0) { baseOnly = false; }
	        var viewType = this.state.viewType;
	        var url = window.location;
	        var urlBase = url.origin + url.pathname;
	        if (baseOnly)
	            return urlBase;
	        var newPrefix;
	        if (this.viewTypeNeedsAnItem(viewType)) {
	            newPrefix = this.state.selectedItem.name + "/";
	        }
	        else {
	            newPrefix = viewType;
	        }
	        return urlBase + '#' + newPrefix;
	    };
	    PivotApplication.prototype.openAboutModal = function () {
	        this.setState({
	            showAboutModal: true
	        });
	    };
	    PivotApplication.prototype.onAboutModalClose = function () {
	        this.setState({
	            showAboutModal: false
	        });
	    };
	    PivotApplication.prototype.onSettingsChange = function (newSettings) {
	        this.setState({
	            appSettings: newSettings
	        });
	    };
	    PivotApplication.prototype.addEssenceToCollection = function (essence) {
	        this.setState({
	            essenceToAddToACollection: essence,
	            showAddCollectionModal: true
	        });
	    };
	    PivotApplication.prototype.renderAddCollectionModal = function () {
	        var _this = this;
	        var _a = this.state, appSettings = _a.appSettings, selectedItem = _a.selectedItem, timekeeper = _a.timekeeper, showAddCollectionModal = _a.showAddCollectionModal, essenceToAddToACollection = _a.essenceToAddToACollection;
	        if (!showAddCollectionModal)
	            return null;
	        if (!index_1.DataCube.isDataCube(selectedItem)) {
	            throw new Error("Can't call this method without a valid dataCube. It's\n        probably called from the wrong view.");
	        }
	        var closeModal = function () {
	            _this.setState({
	                showAddCollectionModal: false
	            });
	        };
	        var onSave = function (_collection, CollectionTile) {
	            closeModal();
	            _this.collectionViewDelegate.addTile(_collection, CollectionTile).then(function (url) {
	                index_3.Notifier.success('Item added', {
	                    label: 'View',
	                    callback: function () { return window.location.hash = "#collection/" + _collection.name; }
	                });
	            });
	        };
	        return React.createElement(index_2.AddCollectionTileModal, {collections: appSettings.collections, essence: essenceToAddToACollection, timekeeper: timekeeper, dataCube: selectedItem, onSave: onSave, onCancel: closeModal});
	    };
	    PivotApplication.prototype.renderAboutModal = function () {
	        var version = this.props.version;
	        var _a = this.state, AboutModalAsync = _a.AboutModalAsync, showAboutModal = _a.showAboutModal;
	        if (!AboutModalAsync || !showAboutModal)
	            return null;
	        return React.createElement(AboutModalAsync, {version: version, onClose: this.onAboutModalClose.bind(this)});
	    };
	    PivotApplication.prototype.renderNotifications = function () {
	        var NotificationsAsync = this.state.NotificationsAsync;
	        if (!NotificationsAsync)
	            return null;
	        return React.createElement(NotificationsAsync, null);
	    };
	    PivotApplication.prototype.renderQuestions = function () {
	        var QuestionsAsync = this.state.QuestionsAsync;
	        if (!QuestionsAsync)
	            return null;
	        return React.createElement(QuestionsAsync, null);
	    };
	    PivotApplication.prototype.renderSideDrawer = function () {
	        var user = this.props.user;
	        var _a = this.state, viewType = _a.viewType, selectedItem = _a.selectedItem, drawerOpen = _a.drawerOpen, SideDrawerAsync = _a.SideDrawerAsync, appSettings = _a.appSettings;
	        if (!drawerOpen || !SideDrawerAsync)
	            return null;
	        var dataCubes = appSettings.dataCubes, collections = appSettings.collections, customization = appSettings.customization;
	        var closeSideDrawer = this.sideDrawerOpen.bind(this, false);
	        return React.createElement(SideDrawerAsync, {key: 'drawer', selectedItem: selectedItem, collections: collections, dataCubes: dataCubes, onOpenAbout: this.openAboutModal.bind(this), onClose: closeSideDrawer, customization: customization, user: user, itemHrefFn: this.sideBarHrefFn, viewType: viewType});
	    };
	    PivotApplication.prototype.renderSideDrawerTransition = function () {
	        var ReactCSSTransitionGroupAsync = this.state.ReactCSSTransitionGroupAsync;
	        if (!ReactCSSTransitionGroupAsync)
	            return null;
	        return React.createElement(ReactCSSTransitionGroupAsync, {component: "div", className: "side-drawer-container", transitionName: "side-drawer", transitionEnterTimeout: 500, transitionLeaveTimeout: 300}, this.renderSideDrawer());
	    };
	    PivotApplication.prototype.renderView = function () {
	        var _a = this.props, maxFilters = _a.maxFilters, maxSplits = _a.maxSplits, user = _a.user, stateful = _a.stateful;
	        var _b = this.state, viewType = _b.viewType, viewHash = _b.viewHash, selectedItem = _b.selectedItem, appSettings = _b.appSettings, timekeeper = _b.timekeeper, cubeViewSupervisor = _b.cubeViewSupervisor;
	        var dataCubes = appSettings.dataCubes, collections = appSettings.collections, customization = appSettings.customization, linkViewConfig = appSettings.linkViewConfig;
	        switch (viewType) {
	            case exports.NO_DATA:
	                return React.createElement(no_data_view_1.NoDataView, {user: user, onNavClick: this.sideDrawerOpen.bind(this, true), onOpenAbout: this.openAboutModal.bind(this), customization: customization, appSettings: appSettings, stateful: stateful});
	            case exports.HOME:
	                return React.createElement(home_view_1.HomeView, {user: user, dataCubes: dataCubes, collections: collections, onNavClick: this.sideDrawerOpen.bind(this, true), onOpenAbout: this.openAboutModal.bind(this), customization: customization, collectionsDelegate: stateful ? this.collectionViewDelegate : null});
	            case exports.CUBE:
	                return React.createElement(cube_view_1.CubeView, {user: user, dataCube: selectedItem, initTimekeeper: timekeeper, hash: viewHash, updateViewHash: this.updateViewHash.bind(this), getUrlPrefix: this.getUrlPrefix.bind(this), maxFilters: maxFilters, maxSplits: maxSplits, onNavClick: this.sideDrawerOpen.bind(this, true), customization: customization, transitionFnSlot: this.sideBarHrefFn, supervisor: cubeViewSupervisor, addEssenceToCollection: this.addEssenceToCollection.bind(this), stateful: stateful});
	            case exports.COLLECTION:
	                return React.createElement(collection_view_1.CollectionView, {user: user, collections: collections, timekeeper: timekeeper, dataCubes: dataCubes, onNavClick: this.sideDrawerOpen.bind(this, true), customization: customization, delegate: stateful ? this.collectionViewDelegate : null});
	            case exports.LINK:
	                return React.createElement(link_view_1.LinkView, {user: user, collection: linkViewConfig, timekeeper: timekeeper, hash: viewHash, updateViewHash: this.updateViewHash.bind(this), changeHash: this.changeHash.bind(this), getUrlPrefix: this.getUrlPrefix.bind(this), onNavClick: this.sideDrawerOpen.bind(this, true), customization: customization, stateful: stateful});
	            case exports.SETTINGS:
	                return React.createElement(settings_view_1.SettingsView, {user: user, onNavClick: this.sideDrawerOpen.bind(this, true), onSettingsChange: this.onSettingsChange.bind(this), customization: customization});
	            default:
	                throw new Error('unknown view');
	        }
	    };
	    PivotApplication.prototype.render = function () {
	        return React.createElement("main", {className: 'pivot-application'}, 
	            this.renderView(), 
	            this.renderSideDrawerTransition(), 
	            this.renderAboutModal(), 
	            this.renderAddCollectionModal(), 
	            this.renderNotifications(), 
	            this.renderQuestions());
	    };
	    return PivotApplication;
	}(React.Component));
	exports.PivotApplication = PivotApplication;


/***/ },
/* 284 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(285);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./pivot-application.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./pivot-application.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 285 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".pivot-application{position:absolute;top:0;left:0;width:100%;height:100%;overflow:hidden;background:#e1e1e1}.pivot-application .not-implemented{display:none}.pivot-application .home-view,.pivot-application .no-data-view,.pivot-application .cube-view,.pivot-application .link-view,.pivot-application .settings-view{position:absolute;top:0;bottom:0;left:0;right:0}.pivot-application .side-drawer-container{position:absolute;left:0;top:0;bottom:0;z-index:80}\n", ""]);

	// exports


/***/ },
/* 286 */
/***/ function(module, exports) {

	"use strict";
	function replaceHash(newHash) {
	    window.history.replaceState(undefined, undefined, newHash);
	}
	exports.replaceHash = replaceHash;


/***/ },
/* 287 */
/***/ function(module, exports) {

	"use strict";
	function createFunctionSlot() {
	    var _this = this;
	    var myFn;
	    var slot = function () {
	        var args = [];
	        for (var _i = 0; _i < arguments.length; _i++) {
	            args[_i - 0] = arguments[_i];
	        }
	        if (myFn)
	            return myFn.apply(_this, args);
	        return undefined;
	    };
	    slot.fill = function (fn) { myFn = fn; };
	    slot.clear = function () { myFn = null; };
	    return slot;
	}
	exports.createFunctionSlot = createFunctionSlot;


/***/ },
/* 288 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	function __export(m) {
	    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
	}
	__export(__webpack_require__(289));
	__export(__webpack_require__(595));
	__export(__webpack_require__(599));
	__export(__webpack_require__(602));
	__export(__webpack_require__(606));
	__export(__webpack_require__(609));
	__export(__webpack_require__(612));
	__export(__webpack_require__(615));


/***/ },
/* 289 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(290);
	var React = __webpack_require__(5);
	var constants_1 = __webpack_require__(292);
	var index_1 = __webpack_require__(293);
	var AboutModal = (function (_super) {
	    __extends(AboutModal, _super);
	    function AboutModal() {
	        _super.call(this);
	    }
	    AboutModal.prototype.render = function () {
	        var _a = this.props, version = _a.version, onClose = _a.onClose;
	        return React.createElement(index_1.Modal, {className: "about-modal", title: "About Pivot", onClose: onClose}, 
	            React.createElement("div", {className: "p-group"}, 
	                React.createElement("p", null, 
	                    React.createElement("a", {href: "https://github.com/implydata/pivot", target: '_blank'}, "Pivot"), 
	                    " (version ", 
	                    version, 
	                    ") is open source under" + ' ' + "the ", 
	                    React.createElement("a", {href: "https://github.com/implydata/pivot/blob/master/LICENSE", target: '_blank'}, "Apache 2.0"), 
	                    " license." + ' ' + "It is being built and maintained with great care by ", 
	                    React.createElement("a", {href: "http://imply.io/", target: '_blank'}, "imply.io"), 
	                    "."), 
	                React.createElement("p", null, 
	                    "For feedback and support please visit" + ' ' + "the ", 
	                    React.createElement("a", {href: "https://groups.google.com/forum/#!forum/imply-user-group", target: '_blank'}, "Imply User Group"), 
	                    "."), 
	                React.createElement("p", null, 
	                    "For bug reports please create an issue on ", 
	                    React.createElement("a", {href: "https://github.com/implydata/pivot/issues", target: '_blank'}, "GitHub"), 
	                    ".")), 
	            React.createElement("div", {className: "button-bar"}, 
	                React.createElement(index_1.Button, {type: "primary", onClick: onClose, title: constants_1.STRINGS.close})
	            ));
	    };
	    return AboutModal;
	}(React.Component));
	exports.AboutModal = AboutModal;


/***/ },
/* 290 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(291);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./about-modal.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./about-modal.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 291 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".about-modal p{margin-bottom:14px;line-height:20px}.about-modal p:last-child{margin-bottom:0}.about-modal a{color:#1ea3e6;cursor:pointer}.about-modal a:hover{text-decoration:underline}\n", ""]);

	// exports


/***/ },
/* 292 */
/***/ function(module, exports) {

	"use strict";
	exports.TITLE_HEIGHT = 36;
	exports.DIMENSION_HEIGHT = 27;
	exports.MEASURE_HEIGHT = 27;
	exports.CORE_ITEM_WIDTH = 192;
	exports.CORE_ITEM_GAP = 8;
	exports.BAR_TITLE_WIDTH = 66;
	exports.PIN_TITLE_HEIGHT = 36;
	exports.PIN_ITEM_HEIGHT = 25;
	exports.PIN_PADDING_BOTTOM = 12;
	exports.VIS_H_PADDING = 10;
	exports.VIS_SELECTOR_WIDTH = 79;
	exports.OVERFLOW_WIDTH = 40;
	exports.SPLIT = 'SPLIT';
	exports.MAX_SEARCH_LENGTH = 300;
	exports.SEARCH_WAIT = 900;
	exports.STRINGS = {
	    add: 'Add',
	    addFromCube: 'Add from Cube',
	    addNewCollection: 'Add new collection',
	    addNewTile: 'Add new tile',
	    addToCollection: 'Add to collection',
	    addVisualization: 'Add tile',
	    any: 'any',
	    autoFillDimensionsAndMeasures: 'Auto-fill dimensions and measures',
	    autoUpdate: 'Auto update',
	    cancel: 'Cancel',
	    close: 'Close',
	    collections: 'Collections',
	    configureCluster: 'configure cluster',
	    configureDataCube: 'configure dataCube',
	    connectNewCluster: 'Connect new cluster',
	    contains: 'Contains',
	    convertToFixedTime: 'Convert to fixed time',
	    copySpecificUrl: 'Copy URL - fixed time',
	    copyUrl: 'Copy URL',
	    copyValue: 'Copy value',
	    createDataCube: 'Create new cube',
	    createCluster: 'Create new cluster',
	    current: 'Current',
	    dataCubes: 'Data Cubes',
	    deleteCollection: 'Delete this collection',
	    deleteCollectionTile: 'Delete this tile',
	    dimensions: 'Dimensions',
	    download: 'Download',
	    dragToReorder: 'Drag tiles to reorder',
	    duplicateCollectionTile: 'Duplicate this tile',
	    editCollection: 'Edit collection',
	    editDataCube: 'Edit cube',
	    editCluster: 'Edit cluster',
	    editThisCube: 'Edit this cube',
	    editTitleAndDesc: 'Edit title and description',
	    editVisualization: 'Edit visualization',
	    end: 'End',
	    exclude: 'Exclude',
	    explore: 'Explore',
	    exportToCSV: 'Export to CSV',
	    filter: 'Filter',
	    generalSettings: 'General settings',
	    goToUrl: 'Go to URL',
	    granularity: 'Granularity',
	    home: 'Pivot',
	    include: 'Include',
	    infoAndFeedback: 'Info & Feedback',
	    intersection: 'Intersection',
	    last5Minutes: 'Last 5 minutes',
	    lastDay: 'Last Day',
	    lastHour: 'Last Hour',
	    lastWeek: 'Last Week',
	    latest: 'Latest',
	    limit: 'Limit',
	    logout: 'Logout',
	    measures: 'Measures',
	    next: 'Next',
	    no: 'No',
	    noClusters: 'No clusters',
	    noDescription: 'No description',
	    noFilter: 'No filter',
	    noQueryableDataCubes: 'There are no queryable data cubes configured',
	    ok: 'OK',
	    openIn: 'Open in',
	    pin: 'Pin',
	    pinboard: 'Pinboard',
	    pinboardPlaceholder: 'Click or drag dimensions to pin them',
	    previous: 'Previous',
	    queryError: 'Query error',
	    rawData: 'Raw Data',
	    regex: 'Regex',
	    relative: 'Relative',
	    save: 'Save',
	    segment: 'segment',
	    select: 'Select',
	    settings: 'Settings',
	    sortBy: 'Sort by',
	    specific: 'Specific',
	    split: 'Split',
	    splitDelimiter: 'by',
	    start: 'Start',
	    stringSearch: 'String search',
	    subsplit: 'Split',
	    timezone: 'Timezone',
	    undo: 'Click here to undo',
	    updateTimezone: 'Update Timezone',
	    viewRawData: 'View raw data',
	    yes: 'Yes'
	};
	exports.DATA_CUBES_STRATEGIES_LABELS = {
	    none: 'None',
	    'no-autofill': 'No autofill',
	    'autofill-dimensions-only': 'Autofill dimensions only',
	    'autofill-measures-only': 'Autofill measures only',
	    'autofill-all': 'Autofill all'
	};
	var EN_US = {
	    shortDays: ["S", "M", "T", "W", "T", "F", "S"],
	    shortMonths: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sept", "Oct", "Nov", "Dec"],
	    weekStart: 0
	};
	function getLocale() {
	    return EN_US;
	}
	exports.getLocale = getLocale;


/***/ },
/* 293 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	function __export(m) {
	    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
	}
	__export(__webpack_require__(294));
	__export(__webpack_require__(301));
	__export(__webpack_require__(297));
	__export(__webpack_require__(311));
	__export(__webpack_require__(314));
	__export(__webpack_require__(317));
	__export(__webpack_require__(320));
	__export(__webpack_require__(323));
	__export(__webpack_require__(328));
	__export(__webpack_require__(331));
	__export(__webpack_require__(334));
	__export(__webpack_require__(339));
	__export(__webpack_require__(346));
	__export(__webpack_require__(368));
	__export(__webpack_require__(376));
	__export(__webpack_require__(384));
	__export(__webpack_require__(307));
	__export(__webpack_require__(388));
	__export(__webpack_require__(392));
	__export(__webpack_require__(406));
	__export(__webpack_require__(425));
	__export(__webpack_require__(429));
	__export(__webpack_require__(401));
	__export(__webpack_require__(433));
	__export(__webpack_require__(436));
	__export(__webpack_require__(350));
	__export(__webpack_require__(439));
	__export(__webpack_require__(442));
	__export(__webpack_require__(449));
	__export(__webpack_require__(456));
	__export(__webpack_require__(459));
	__export(__webpack_require__(462));
	__export(__webpack_require__(524));
	__export(__webpack_require__(184));
	__export(__webpack_require__(527));
	__export(__webpack_require__(371));
	__export(__webpack_require__(530));
	__export(__webpack_require__(533));
	__export(__webpack_require__(536));
	__export(__webpack_require__(539));
	__export(__webpack_require__(416));
	__export(__webpack_require__(419));
	__export(__webpack_require__(545));
	__export(__webpack_require__(548));
	__export(__webpack_require__(379));
	__export(__webpack_require__(422));
	__export(__webpack_require__(551));
	__export(__webpack_require__(554));
	__export(__webpack_require__(557));
	__export(__webpack_require__(353));
	__export(__webpack_require__(452));
	__export(__webpack_require__(560));
	__export(__webpack_require__(563));
	__export(__webpack_require__(304));
	__export(__webpack_require__(566));
	__export(__webpack_require__(465));
	__export(__webpack_require__(570));
	__export(__webpack_require__(573));
	__export(__webpack_require__(576));
	__export(__webpack_require__(395));
	__export(__webpack_require__(187));
	__export(__webpack_require__(356));
	__export(__webpack_require__(413));
	__export(__webpack_require__(579));
	__export(__webpack_require__(582));
	__export(__webpack_require__(585));
	__export(__webpack_require__(588));
	__export(__webpack_require__(591));


/***/ },
/* 294 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(295);
	var React = __webpack_require__(5);
	var chronoshift_1 = __webpack_require__(191);
	var index_1 = __webpack_require__(202);
	var constants_1 = __webpack_require__(292);
	var bubble_menu_1 = __webpack_require__(297);
	var dropdown_1 = __webpack_require__(307);
	var AUTO_REFRESH_LABELS = {
	    "null": "Off",
	    "PT5S": "Every 5 seconds",
	    "PT15S": "Every 15 seconds",
	    "PT1M": "Every minute",
	    "PT5M": "Every 5 minutes",
	    "PT10M": "Every 10 minutes",
	    "PT30M": "Every 30 minutes"
	};
	var REFRESH_DURATIONS = [
	    null,
	    chronoshift_1.Duration.fromJS("PT5S"),
	    chronoshift_1.Duration.fromJS("PT15S"),
	    chronoshift_1.Duration.fromJS("PT1M"),
	    chronoshift_1.Duration.fromJS("PT5M"),
	    chronoshift_1.Duration.fromJS("PT10M"),
	    chronoshift_1.Duration.fromJS("PT30M")
	];
	var AutoRefreshMenu = (function (_super) {
	    __extends(AutoRefreshMenu, _super);
	    function AutoRefreshMenu() {
	        _super.call(this);
	    }
	    AutoRefreshMenu.prototype.onRefreshNowClick = function () {
	        var refreshMaxTime = this.props.refreshMaxTime;
	        refreshMaxTime();
	    };
	    AutoRefreshMenu.prototype.renderRefreshIntervalDropdown = function () {
	        var _a = this.props, autoRefreshRate = _a.autoRefreshRate, setAutoRefreshRate = _a.setAutoRefreshRate;
	        var DurationDropdown = dropdown_1.Dropdown.specialize();
	        return React.createElement(DurationDropdown, {label: constants_1.STRINGS.autoUpdate, items: REFRESH_DURATIONS, selectedItem: autoRefreshRate, renderItem: function (d) { return AUTO_REFRESH_LABELS[String(d)] || "Custom " + d; }, onSelect: setAutoRefreshRate});
	    };
	    AutoRefreshMenu.prototype.render = function () {
	        var _a = this.props, openOn = _a.openOn, onClose = _a.onClose, dataCube = _a.dataCube, timekeeper = _a.timekeeper, timezone = _a.timezone;
	        var stage = index_1.Stage.fromSize(240, 200);
	        return React.createElement(bubble_menu_1.BubbleMenu, {className: "auto-refresh-menu", direction: "down", stage: stage, openOn: openOn, onClose: onClose}, 
	            this.renderRefreshIntervalDropdown(), 
	            React.createElement("button", {className: "update-now-button", onClick: this.onRefreshNowClick.bind(this)}, "Update now"), 
	            React.createElement("div", {className: "update-info"}, dataCube.updatedText(timekeeper, timezone)));
	    };
	    return AutoRefreshMenu;
	}(React.Component));
	exports.AutoRefreshMenu = AutoRefreshMenu;


/***/ },
/* 295 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(296);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./auto-refresh-menu.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./auto-refresh-menu.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 296 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".auto-refresh-menu .update-now-button{display:inline-block;padding:6px 16px;font-size:13px;min-width:60px;text-align:center;cursor:pointer;border-radius:2px;outline:none;height:30px}.auto-refresh-menu .disabled.update-now-button,.auto-refresh-menu [disabled].update-now-button{opacity:.60;cursor:default;pointer-events:none}.auto-refresh-menu .update-now-button{background:rgba(30,163,230,0.22);color:#1ea3e6}.auto-refresh-menu .update-now-button svg path{fill:#1ea3e6}.auto-refresh-menu .update-now-button:hover{background:rgba(30,163,230,0.3)}.auto-refresh-menu .active.update-now-button,.auto-refresh-menu .update-now-button:active{background:rgba(30,163,230,0.38)}.auto-refresh-menu .update-info{white-space:nowrap;overflow-x:hidden;text-overflow:ellipsis;height:30px;line-height:28px;background:#f2f2f2;border-radius:2px;color:#909090;text-align:center;padding-left:8px;padding-right:8px}.auto-refresh-menu .update-now-button{width:100%;margin-top:8px}.auto-refresh-menu .update-now-button svg{position:absolute;top:5px;left:50%;margin-left:-10px;width:19px}.auto-refresh-menu .update-info{-webkit-box-flex:1;-ms-flex:1;flex:1;margin-top:8px}\n", ""]);

	// exports


/***/ },
/* 297 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(298);
	var React = __webpack_require__(5);
	var index_1 = __webpack_require__(202);
	var dom_1 = __webpack_require__(300);
	var body_portal_1 = __webpack_require__(301);
	var shpitz_1 = __webpack_require__(304);
	var OFFSET_H = 10;
	var OFFSET_V = 0;
	var SCREEN_OFFSET = 5;
	var BubbleMenu = (function (_super) {
	    __extends(BubbleMenu, _super);
	    function BubbleMenu() {
	        _super.call(this);
	        this.state = {
	            id: null
	        };
	        this.globalMouseDownListener = this.globalMouseDownListener.bind(this);
	        this.globalKeyDownListener = this.globalKeyDownListener.bind(this);
	    }
	    BubbleMenu.prototype.componentWillMount = function () {
	        var _a = this.props, alignOn = _a.alignOn, openOn = _a.openOn, direction = _a.direction, align = _a.align, id = _a.id;
	        var rect = (alignOn || openOn).getBoundingClientRect();
	        var x;
	        var y;
	        switch (direction) {
	            case 'right':
	                x = rect.left + rect.width - OFFSET_H;
	                y = rect.top + rect.height / 2;
	                break;
	            case 'down':
	                if (align === 'center') {
	                    x = rect.left + rect.width / 2;
	                }
	                else if (align === 'start') {
	                    x = rect.left;
	                }
	                else {
	                    x = rect.left + rect.width;
	                }
	                y = rect.top + rect.height - OFFSET_V;
	                break;
	            default:
	                throw new Error("unknown direction: '" + direction + "'");
	        }
	        this.setState({
	            id: id || dom_1.uniqueId('bubble-menu-'),
	            x: x,
	            y: y
	        });
	    };
	    BubbleMenu.prototype.componentDidMount = function () {
	        window.addEventListener('mousedown', this.globalMouseDownListener);
	        window.addEventListener('keydown', this.globalKeyDownListener);
	    };
	    BubbleMenu.prototype.componentWillUnmount = function () {
	        window.removeEventListener('mousedown', this.globalMouseDownListener);
	        window.removeEventListener('keydown', this.globalKeyDownListener);
	    };
	    BubbleMenu.prototype.globalMouseDownListener = function (e) {
	        var _a = this.props, onClose = _a.onClose, openOn = _a.openOn;
	        var id = this.state.id;
	        var myElement = document.getElementById(id);
	        if (!myElement)
	            return;
	        var target = e.target;
	        if (dom_1.isInside(target, myElement) || dom_1.isInside(target, openOn))
	            return;
	        onClose();
	    };
	    BubbleMenu.prototype.globalKeyDownListener = function (e) {
	        if (!dom_1.escapeKey(e))
	            return;
	        var onClose = this.props.onClose;
	        onClose();
	    };
	    BubbleMenu.prototype.render = function () {
	        var _a = this.props, className = _a.className, direction = _a.direction, stage = _a.stage, fixedSize = _a.fixedSize, containerStage = _a.containerStage, inside = _a.inside, layout = _a.layout, align = _a.align, children = _a.children;
	        var _b = this.state, id = _b.id, x = _b.x, y = _b.y;
	        var menuWidth = stage.width;
	        var menuHeight = stage.height;
	        var menuLeft = 0;
	        var menuTop = 0;
	        var menuStyle = {};
	        if (fixedSize) {
	            menuStyle.width = menuWidth;
	            menuStyle.height = menuHeight;
	        }
	        var shpitzStyle = {
	            left: 0,
	            top: 0
	        };
	        if (!containerStage) {
	            containerStage = new index_1.Stage({
	                x: SCREEN_OFFSET,
	                y: SCREEN_OFFSET,
	                width: window.innerWidth - SCREEN_OFFSET * 2,
	                height: window.innerHeight - SCREEN_OFFSET * 2
	            });
	        }
	        switch (direction) {
	            case 'right':
	                var top = y - menuHeight / 2;
	                top = Math.min(Math.max(top, containerStage.y), containerStage.y + containerStage.height - menuHeight);
	                menuLeft = x;
	                menuTop = top;
	                shpitzStyle.top = y - top;
	                menuStyle.height = menuHeight;
	                break;
	            case 'down':
	                var left;
	                if (align === 'center') {
	                    left = x - menuWidth / 2;
	                }
	                else if (align === 'start') {
	                    left = x;
	                }
	                else {
	                    left = x - menuWidth;
	                }
	                left = Math.min(Math.max(left, containerStage.x), containerStage.x + containerStage.width - menuWidth);
	                menuLeft = left;
	                menuTop = y;
	                shpitzStyle.left = x - left;
	                menuStyle.width = menuWidth;
	                break;
	            default:
	                throw new Error("unknown direction: '" + direction + "'");
	        }
	        var insideId = null;
	        if (inside) {
	            insideId = inside.id;
	            if (!insideId)
	                throw new Error('inside element must have id');
	        }
	        var shpitzElement = null;
	        if (align === 'center') {
	            shpitzElement = React.createElement(shpitz_1.Shpitz, {style: shpitzStyle, direction: direction});
	        }
	        var myClass = dom_1.classNames('bubble-menu', direction, className, { mini: layout === 'mini' });
	        return React.createElement(body_portal_1.BodyPortal, {left: menuLeft, top: menuTop}, 
	            React.createElement("div", {className: myClass, id: id, "data-parent": insideId, style: menuStyle}, 
	                children, 
	                shpitzElement)
	        );
	    };
	    BubbleMenu.defaultProps = {
	        align: 'center'
	    };
	    return BubbleMenu;
	}(React.Component));
	exports.BubbleMenu = BubbleMenu;


/***/ },
/* 298 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(299);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./bubble-menu.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./bubble-menu.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 299 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".bubble-menu{background:#fff;border-radius:2px;box-shadow:0 3px 10px 0 rgba(0,0,0,0.26),0 0 3px 0 rgba(0,0,0,0.16)}.bubble-menu{position:absolute;padding:14px}.bubble-menu.mini{padding:10px}.bubble-menu .menu-header{position:absolute;top:0;left:0;right:0;height:40px}.bubble-menu .bubble-list-title{line-height:25px;color:#a6a6a6}.bubble-menu ul.bubble-list{margin-left:-14px;margin-right:-14px}.bubble-menu ul.bubble-list li{padding:0 14px;line-height:25px;cursor:pointer}.bubble-menu ul.bubble-list li:hover{background:rgba(30,163,230,0.12)}.bubble-menu ul.bubble-list li.selected{background:#ededed}.bubble-menu .ok-cancel-bar{margin-top:12px}.bubble-menu .ok-cancel-bar button{min-width:70px}.bubble-menu .ok-cancel-bar button:not(:last-child){margin-right:6px}\n", ""]);

	// exports


/***/ },
/* 300 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var d3 = __webpack_require__(222);
	var general_1 = __webpack_require__(209);
	var DRAG_GHOST_OFFSET_X = -12;
	var DRAG_GHOST_OFFSET_Y = -12;
	var KEY_CODES = {
	    ENTER: 13,
	    ESCAPE: 27,
	    LEFT: 37,
	    RIGHT: 39
	};
	function convertDOMStringListToArray(list) {
	    var length = list.length;
	    var array = [];
	    for (var i = 0; i < length; i++) {
	        array.push(list.item(i));
	    }
	    return array;
	}
	function isInside(child, parent) {
	    var altParent;
	    while (child) {
	        if (child === parent)
	            return true;
	        var dataset = child.dataset;
	        if (dataset && dataset['parent'] && (altParent = document.getElementById(dataset['parent']))) {
	            child = altParent;
	        }
	        else {
	            child = child.parentElement;
	        }
	    }
	    return false;
	}
	exports.isInside = isInside;
	function findParentWithClass(child, className) {
	    while (child) {
	        if (child.classList.contains(className))
	            return child;
	        child = child.parentNode;
	    }
	    return null;
	}
	exports.findParentWithClass = findParentWithClass;
	function setDragGhost(dataTransfer, text) {
	    var dragGhost = d3.select(document.body).append('div')
	        .attr('class', 'drag-ghost')
	        .text(text);
	    dataTransfer.setDragImage(dragGhost.node(), DRAG_GHOST_OFFSET_X, DRAG_GHOST_OFFSET_Y);
	    setTimeout(function () {
	        dragGhost.remove();
	    }, 1);
	}
	exports.setDragGhost = setDragGhost;
	function enterKey(e) {
	    return e.which === KEY_CODES.ENTER;
	}
	exports.enterKey = enterKey;
	function escapeKey(e) {
	    return e.which === KEY_CODES.ESCAPE;
	}
	exports.escapeKey = escapeKey;
	function leftKey(e) {
	    return e.which === KEY_CODES.LEFT;
	}
	exports.leftKey = leftKey;
	function rightKey(e) {
	    return e.which === KEY_CODES.RIGHT;
	}
	exports.rightKey = rightKey;
	var lastID = 0;
	function uniqueId(prefix) {
	    lastID++;
	    return prefix + lastID;
	}
	exports.uniqueId = uniqueId;
	function transformStyle(x, y) {
	    var xStr = String(x);
	    var yStr = String(y);
	    if (xStr !== '0')
	        xStr += 'px';
	    if (yStr !== '0')
	        yStr += 'px';
	    var transform = "translate(" + xStr + "," + yStr + ")";
	    return {
	        transform: transform,
	        WebkitTransform: transform,
	        MsTransform: transform
	    };
	}
	exports.transformStyle = transformStyle;
	function getXFromEvent(e) {
	    return e.clientX || e.pageX;
	}
	exports.getXFromEvent = getXFromEvent;
	function getYFromEvent(e) {
	    return e.clientY || e.pageY;
	}
	exports.getYFromEvent = getYFromEvent;
	function roundToPx(n) {
	    return Math.round(n);
	}
	exports.roundToPx = roundToPx;
	function roundToHalfPx(n) {
	    return Math.round(n - 0.5) + 0.5;
	}
	exports.roundToHalfPx = roundToHalfPx;
	function clamp(n, min, max) {
	    return Math.min(Math.max(n, min), max);
	}
	exports.clamp = clamp;
	function classNames() {
	    var args = [];
	    for (var _i = 0; _i < arguments.length; _i++) {
	        args[_i - 0] = arguments[_i];
	    }
	    var classes = [];
	    for (var _a = 0, args_1 = args; _a < args_1.length; _a++) {
	        var arg = args_1[_a];
	        if (!arg)
	            continue;
	        var argType = typeof arg;
	        if (argType === 'string') {
	            classes.push(arg);
	        }
	        else if (argType === 'object') {
	            for (var key in arg) {
	                if (general_1.hasOwnProperty(arg, key) && arg[key])
	                    classes.push(key);
	            }
	        }
	    }
	    return classes.join(' ');
	}
	exports.classNames = classNames;


/***/ },
/* 301 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(302);
	var React = __webpack_require__(5);
	var ReactDOM = __webpack_require__(39);
	var BodyPortal = (function (_super) {
	    __extends(BodyPortal, _super);
	    function BodyPortal() {
	        _super.call(this);
	        this._target = null;
	        this._component = null;
	    }
	    Object.defineProperty(BodyPortal.prototype, "component", {
	        get: function () {
	            return this._component;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(BodyPortal.prototype, "target", {
	        get: function () {
	            return this._target;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    BodyPortal.prototype.updateStyle = function () {
	        var _a = this.props, left = _a.left, top = _a.top, disablePointerEvents = _a.disablePointerEvents;
	        var style = this._target.style;
	        if (typeof left === 'number') {
	            style.left = Math.round(left) + 'px';
	        }
	        else if (typeof left === 'string') {
	            style.left = left;
	        }
	        if (typeof top === 'number') {
	            style.top = Math.round(top) + 'px';
	        }
	        else if (typeof top === 'string') {
	            style.top = top;
	        }
	        style['z-index'] = 200;
	        style['pointer-events'] = disablePointerEvents ? 'none' : 'auto';
	    };
	    BodyPortal.prototype.componentDidMount = function () {
	        this.teleport();
	        if (this.props.onMount)
	            this.props.onMount();
	    };
	    BodyPortal.prototype.teleport = function () {
	        var fullSize = this.props.fullSize;
	        var newDiv = document.createElement('div');
	        newDiv.className = 'body-portal' + (fullSize ? ' full-size' : '');
	        this._target = document.body.appendChild(newDiv);
	        this.updateStyle();
	        this._component = ReactDOM.render(React.Children.only(this.props.children), this._target);
	    };
	    BodyPortal.prototype.componentDidUpdate = function () {
	        this.updateStyle();
	        this._component = ReactDOM.render(React.Children.only(this.props.children), this._target);
	    };
	    BodyPortal.prototype.componentWillUnmount = function () {
	        ReactDOM.unmountComponentAtNode(this._target);
	        document.body.removeChild(this._target);
	    };
	    BodyPortal.prototype.render = function () {
	        return null;
	    };
	    return BodyPortal;
	}(React.Component));
	exports.BodyPortal = BodyPortal;


/***/ },
/* 302 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(303);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./body-portal.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./body-portal.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 303 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".body-portal{position:absolute}.body-portal.full-size{width:100%;height:100%}\n", ""]);

	// exports


/***/ },
/* 304 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(305);
	var React = __webpack_require__(5);
	var dom_1 = __webpack_require__(300);
	var Shpitz = (function (_super) {
	    __extends(Shpitz, _super);
	    function Shpitz() {
	        _super.call(this);
	    }
	    Shpitz.prototype.render = function () {
	        var _a = this.props, direction = _a.direction, style = _a.style;
	        return React.createElement("div", {className: dom_1.classNames('shpitz', direction), style: style}, 
	            React.createElement("div", {className: "rectangle"})
	        );
	    };
	    return Shpitz;
	}(React.Component));
	exports.Shpitz = Shpitz;


/***/ },
/* 305 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(306);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./shpitz.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./shpitz.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 306 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".shpitz{position:absolute;width:40px;height:40px;overflow:hidden;pointer-events:none}.shpitz .rectangle{position:absolute}.shpitz .rectangle::after{content:'';position:absolute;width:12px;height:12px;-webkit-transform:translate(-50%, -50%) rotate(45deg);-ms-transform:translate(-50%, -50%) rotate(45deg);transform:translate(-50%, -50%) rotate(45deg);background:#fff;box-shadow:0 0 4px 0 rgba(0,0,0,0.35)}.shpitz.up{margin-bottom:-40px;margin-left:-20px}.shpitz.up .rectangle{bottom:100%;left:50%}.shpitz.down{margin-top:-40px;margin-left:-20px}.shpitz.down .rectangle{top:100%;left:50%}.shpitz.left{margin-right:-40px;margin-top:-20px}.shpitz.left .rectangle{right:100%;top:50%}.shpitz.right{margin-left:-40px;margin-top:-20px}.shpitz.right .rectangle{left:100%;top:50%}\n", ""]);

	// exports


/***/ },
/* 307 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(308);
	var React = __webpack_require__(5);
	var ReactDOM = __webpack_require__(39);
	var svg_icon_1 = __webpack_require__(187);
	var dom_1 = __webpack_require__(300);
	function simpleEqual(item1, item2) {
	    return item1 === item2;
	}
	var Dropdown = (function (_super) {
	    __extends(Dropdown, _super);
	    function Dropdown() {
	        _super.call(this);
	        this.state = {
	            open: false
	        };
	        this.globalMouseDownListener = this.globalMouseDownListener.bind(this);
	        this.globalKeyDownListener = this.globalKeyDownListener.bind(this);
	    }
	    Dropdown.specialize = function () {
	        return Dropdown;
	    };
	    Dropdown.prototype.componentDidMount = function () {
	        window.addEventListener('mousedown', this.globalMouseDownListener);
	        window.addEventListener('keydown', this.globalKeyDownListener);
	    };
	    Dropdown.prototype.componentWillUnmount = function () {
	        window.removeEventListener('mousedown', this.globalMouseDownListener);
	        window.removeEventListener('keydown', this.globalKeyDownListener);
	    };
	    Dropdown.prototype.onClick = function () {
	        var open = this.state.open;
	        this.setState({ open: !open });
	    };
	    Dropdown.prototype.globalMouseDownListener = function (e) {
	        var open = this.state.open;
	        if (!open)
	            return;
	        var myElement = ReactDOM.findDOMNode(this);
	        if (!myElement)
	            return;
	        var target = e.target;
	        if (dom_1.isInside(target, myElement))
	            return;
	        this.setState({ open: false });
	    };
	    Dropdown.prototype.globalKeyDownListener = function (e) {
	        if (!dom_1.escapeKey(e))
	            return;
	        var open = this.state.open;
	        if (!open)
	            return;
	        this.setState({ open: false });
	    };
	    Dropdown.prototype.renderMenu = function () {
	        var _a = this.props, items = _a.items, renderItem = _a.renderItem, keyItem = _a.keyItem, selectedItem = _a.selectedItem, equal = _a.equal, onSelect = _a.onSelect, menuClassName = _a.menuClassName;
	        if (!items || !items.length)
	            return null;
	        if (!renderItem)
	            renderItem = String;
	        if (!keyItem)
	            keyItem = renderItem;
	        if (!equal)
	            equal = simpleEqual;
	        var itemElements = items.map(function (item) {
	            return React.createElement("div", {className: dom_1.classNames('dropdown-item', equal(item, selectedItem) ? 'selected' : null), key: keyItem(item), onClick: function () { return onSelect(item); }}, renderItem(item));
	        });
	        return React.createElement("div", {className: dom_1.classNames('dropdown-menu', menuClassName)}, itemElements);
	    };
	    Dropdown.prototype.render = function () {
	        var _a = this.props, label = _a.label, renderItem = _a.renderItem, selectedItem = _a.selectedItem, direction = _a.direction, renderSelectedItem = _a.renderSelectedItem, className = _a.className;
	        var open = this.state.open;
	        if (!renderItem)
	            renderItem = String;
	        if (!direction)
	            direction = 'down';
	        if (!renderSelectedItem)
	            renderSelectedItem = renderItem;
	        var labelElement = null;
	        if (label) {
	            labelElement = React.createElement("div", {className: "dropdown-label"}, label);
	        }
	        return React.createElement("div", {className: dom_1.classNames('dropdown', direction, className), onClick: this.onClick.bind(this)}, 
	            labelElement, 
	            React.createElement("div", {className: dom_1.classNames('selected-item', { active: open })}, 
	                renderSelectedItem(selectedItem), 
	                React.createElement(svg_icon_1.SvgIcon, {className: "caret-icon", svg: __webpack_require__(310)})), 
	            open ? this.renderMenu() : null);
	    };
	    return Dropdown;
	}(React.Component));
	exports.Dropdown = Dropdown;


/***/ },
/* 308 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(309);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./dropdown.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./dropdown.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 309 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".dropdown .dropdown-menu{background:#fff;border-radius:2px;box-shadow:0 3px 10px 0 rgba(0,0,0,0.26),0 0 3px 0 rgba(0,0,0,0.16)}.dropdown .selected-item{background:#fff;border:1px solid #d1d1d1;border-radius:2px;cursor:pointer;box-shadow:0 1px 1px 0 rgba(0,0,0,0.1)}.dropdown .selected-item:hover{border-color:#bababa}.dropdown .dropdown-label{text-transform:uppercase;font-size:12px;color:#a6a6a6;margin-bottom:5px}.dropdown{cursor:pointer;white-space:nowrap;pointer-events:none}.dropdown:hover .caret-icon path{fill:#999}.dropdown .selected-item{white-space:nowrap;overflow-x:hidden;text-overflow:ellipsis;display:block;pointer-events:auto;height:30px;padding:8px 22px 0 6px}.dropdown .caret-icon{position:absolute;width:11px;height:9px;right:9px;bottom:9px}.dropdown .caret-icon path{fill:#a6a6a6}.dropdown .dropdown-menu{position:absolute;pointer-events:auto;z-index:800;padding:8px 0;width:100%;line-height:24px}.dropdown.down .dropdown-menu{top:100%}.dropdown.up .dropdown-menu{bottom:100%}.dropdown .dropdown-item{white-space:nowrap;overflow-x:hidden;text-overflow:ellipsis;padding:0 10px;cursor:pointer}.dropdown .dropdown-item.selected{background:#ededed}.dropdown .dropdown-item:hover{background:#e3f4fc}\n", ""]);

	// exports


/***/ },
/* 310 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 11 9\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M1,1 L10,1 L5.5,7 L1,1 Z\" fill=\"#AAAAAA\" fill-rule=\"evenodd\"/></svg>"

/***/ },
/* 311 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(312);
	var React = __webpack_require__(5);
	var dom_1 = __webpack_require__(300);
	var TICK_HEIGHT = 5;
	var BucketMarks = (function (_super) {
	    __extends(BucketMarks, _super);
	    function BucketMarks() {
	        _super.call(this);
	    }
	    BucketMarks.prototype.render = function () {
	        var _a = this.props, stage = _a.stage, ticks = _a.ticks, scale = _a.scale;
	        var stageWidth = stage.width;
	        var lines = [];
	        function addLine(x, key) {
	            if (stageWidth < x)
	                return;
	            lines.push(React.createElement("line", {key: key, x1: x, y1: 0, x2: x, y2: TICK_HEIGHT}));
	        }
	        for (var _i = 0, ticks_1 = ticks; _i < ticks_1.length; _i++) {
	            var tick = ticks_1[_i];
	            var x = dom_1.roundToHalfPx(scale(tick));
	            addLine(x, '_' + tick);
	        }
	        if (ticks.length) {
	            var x = dom_1.roundToHalfPx(scale(ticks[ticks.length - 1]) + scale.rangeBand());
	            addLine(x, 'last');
	        }
	        return React.createElement("g", {className: "bucket-marks", transform: stage.getTransform()}, lines);
	    };
	    return BucketMarks;
	}(React.Component));
	exports.BucketMarks = BucketMarks;


/***/ },
/* 312 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(313);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./bucket-marks.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./bucket-marks.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 313 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".bucket-marks{pointer-events:none}.bucket-marks line{pointer-events:none;stroke:#ccc}\n", ""]);

	// exports


/***/ },
/* 314 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(315);
	var React = __webpack_require__(5);
	var dom_1 = __webpack_require__(300);
	var svg_icon_1 = __webpack_require__(187);
	var Button = (function (_super) {
	    __extends(Button, _super);
	    function Button() {
	        _super.call(this);
	    }
	    Button.prototype.render = function () {
	        var _a = this.props, title = _a.title, type = _a.type, className = _a.className, svg = _a.svg, active = _a.active, disabled = _a.disabled, onClick = _a.onClick;
	        var icon = null;
	        if (svg) {
	            icon = React.createElement(svg_icon_1.SvgIcon, {svg: svg});
	        }
	        return React.createElement("button", {className: dom_1.classNames('button', type, className, { icon: icon, active: active }), onClick: onClick, disabled: disabled}, 
	            icon, 
	            title);
	    };
	    return Button;
	}(React.Component));
	exports.Button = Button;


/***/ },
/* 315 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(316);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./button.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./button.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 316 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".button.primary,.button.secondary,.button.warn{display:inline-block;padding:6px 16px;font-size:13px;min-width:60px;text-align:center;cursor:pointer;border-radius:2px;outline:none;height:30px}.disabled.button.primary,.disabled.button.secondary,.disabled.button.warn,[disabled].button.primary,[disabled].button.secondary,[disabled].button.warn{opacity:.60;cursor:default;pointer-events:none}.button.primary{background:#1ea3e6;color:#fff}.button.primary svg path{fill:#fff}.button.primary:hover{background:#1795d3}.active.button.primary,.button.primary:active{background:#1584bc;color:#e0e0e0}.active.button.primary svg path,.button.primary:active svg path{fill:#e0e0e0}.button.secondary{background:rgba(30,163,230,0.22);color:#1ea3e6}.button.secondary svg path{fill:#1ea3e6}.button.secondary:hover{background:rgba(30,163,230,0.3)}.active.button.secondary,.button.secondary:active{background:rgba(30,163,230,0.38)}.button.warn{background:#e24b4b;color:#fff}.button.warn svg path{fill:#fff}.button.warn:hover{background:#de3535}.active.button.warn,.button.warn:active{background:#d72323;color:#e0e0e0}.active.button.warn svg path,.button.warn:active svg path{fill:#e0e0e0}.button.mini{height:28px;padding-left:10px;padding-right:10px;min-width:40px}.button.icon{min-width:27px;padding:2px 0}.button.icon svg{height:19px}\n", ""]);

	// exports


/***/ },
/* 317 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(318);
	var React = __webpack_require__(5);
	var dom_1 = __webpack_require__(300);
	var ButtonGroup = (function (_super) {
	    __extends(ButtonGroup, _super);
	    function ButtonGroup() {
	        _super.call(this);
	    }
	    ButtonGroup.prototype.renderMembers = function () {
	        var groupMembers = this.props.groupMembers;
	        return groupMembers.map(function (button) {
	            return React.createElement("li", {className: dom_1.classNames('group-member', button.className, { 'selected': button.isSelected }), key: button.key, onClick: button.onClick}, button.title);
	        });
	    };
	    ButtonGroup.prototype.render = function () {
	        var _a = this.props, title = _a.title, className = _a.className;
	        return React.createElement("div", {className: dom_1.classNames('button-group', className)}, 
	            title ? React.createElement("div", {className: "button-group-title"}, title) : null, 
	            React.createElement("ul", {className: "group-container"}, this.renderMembers()));
	    };
	    return ButtonGroup;
	}(React.Component));
	exports.ButtonGroup = ButtonGroup;


/***/ },
/* 318 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(319);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./button-group.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./button-group.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 319 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".button-group .group-container .group-member{background:#fff;border:1px solid #d1d1d1;border-radius:2px;cursor:pointer;box-shadow:0 1px 1px 0 rgba(0,0,0,0.1)}.button-group .group-container .group-member:hover{border-color:#bababa}.button-group .group-container .group-member.selected{box-shadow:inset 0 1px 1px 0 rgba(0,0,0,0.1);background:#ededed}.button-group .button-group-title{text-transform:uppercase;font-size:12px;color:#a6a6a6;margin-bottom:5px}.button-group{margin-bottom:12px;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.button-group .button-group-title{margin-bottom:6px}.button-group .group-container{display:-webkit-box;display:-ms-flexbox;display:flex}.button-group .group-container .group-member{border-radius:0;display:inline-block;cursor:pointer;-webkit-box-flex:2;-ms-flex:2;flex:2;text-align:center;height:30px;padding:8px 2px 0 2px;border-right:0}.button-group .group-container .group-member:first-child{border-top-left-radius:2px;border-bottom-left-radius:2px}.button-group .group-container .group-member:last-child{border-right:1px solid #d1d1d1;border-top-right-radius:2px;border-bottom-right-radius:2px}.button-group .group-container .group-member:not(.selected):not(:hover){color:#999}\n", ""]);

	// exports


/***/ },
/* 320 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(321);
	var immutable_class_1 = __webpack_require__(193);
	var React = __webpack_require__(5);
	var d3 = __webpack_require__(222);
	var plywood_1 = __webpack_require__(199);
	var lineFn = d3.svg.line();
	var ChartLine = (function (_super) {
	    __extends(ChartLine, _super);
	    function ChartLine() {
	        _super.call(this);
	    }
	    ChartLine.prototype.render = function () {
	        var _a = this.props, stage = _a.stage, dataset = _a.dataset, getY = _a.getY, getX = _a.getX, scaleX = _a.scaleX, scaleY = _a.scaleY, color = _a.color, showArea = _a.showArea, hoverRange = _a.hoverRange;
	        if (!dataset || !color)
	            return null;
	        var dataPoints = [];
	        var hoverDataPoint = null;
	        var ds = dataset.data;
	        for (var i = 0; i < ds.length; i++) {
	            var datum = ds[i];
	            var range = getX(datum);
	            if (!range || !plywood_1.Range.isRange(range))
	                return null;
	            var rangeMidpoint = range.midpoint();
	            var measureValue = getY(datum);
	            var prevDatum = ds[i - 1];
	            if (prevDatum) {
	                var prevRange = getX(prevDatum);
	                if (prevRange.end.valueOf() !== range.start.valueOf()) {
	                    dataPoints.push([
	                        scaleX(rangeMidpoint.valueOf() - (range.end.valueOf() - range.start.valueOf())),
	                        scaleY(0)
	                    ]);
	                }
	            }
	            var y = scaleY(measureValue);
	            var dataPoint = [scaleX(rangeMidpoint), isNaN(y) ? 0 : y];
	            dataPoints.push(dataPoint);
	            if (hoverRange && immutable_class_1.immutableEqual(hoverRange, range)) {
	                hoverDataPoint = dataPoint;
	            }
	            var nextDatum = ds[i + 1];
	            if (nextDatum) {
	                var nextRange = getX(nextDatum);
	                if (range.end.valueOf() !== nextRange.start.valueOf()) {
	                    dataPoints.push([
	                        scaleX(rangeMidpoint.valueOf() + (range.end.valueOf() - range.start.valueOf())),
	                        scaleY(0)
	                    ]);
	                }
	            }
	        }
	        var strokeStyle = null;
	        var fillStyle = null;
	        if (color !== 'default') {
	            strokeStyle = { stroke: color };
	            fillStyle = { fill: color };
	        }
	        var areaPath = null;
	        var linePath = null;
	        var singletonCircle = null;
	        if (dataPoints.length > 1) {
	            if (showArea) {
	                var areaFn = d3.svg.area().y0(scaleY(0));
	                areaPath = React.createElement("path", {className: "area", d: areaFn(dataPoints)});
	            }
	            linePath = React.createElement("path", {className: "line", d: lineFn(dataPoints), style: strokeStyle});
	        }
	        else if (dataPoints.length === 1) {
	            singletonCircle = React.createElement("circle", {className: "singleton", cx: dataPoints[0][0], cy: dataPoints[0][1], r: "2", style: fillStyle});
	        }
	        var hoverCircle = null;
	        if (hoverDataPoint) {
	            hoverCircle = React.createElement("circle", {className: "hover", cx: hoverDataPoint[0], cy: hoverDataPoint[1], r: "2.5", style: strokeStyle});
	        }
	        return React.createElement("g", {className: "chart-line", transform: stage.getTransform()}, 
	            areaPath, 
	            linePath, 
	            singletonCircle, 
	            hoverCircle);
	    };
	    return ChartLine;
	}(React.Component));
	exports.ChartLine = ChartLine;


/***/ },
/* 321 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(322);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./chart-line.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./chart-line.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 322 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".chart-line{pointer-events:none}.chart-line .area{stroke:none;fill:rgba(30,163,230,0.14);fill-opacity:.9}.chart-line .line{fill:none;stroke:#1ea3e6;stroke-width:1.6px}.chart-line .singleton{fill:#1ea3e6;stroke:none}.chart-line .hover{fill:#fff;stroke:#1ea3e6;stroke-width:2}\n", ""]);

	// exports


/***/ },
/* 323 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(324);
	var React = __webpack_require__(5);
	var svg_icon_1 = __webpack_require__(187);
	var dom_1 = __webpack_require__(300);
	var Checkbox = (function (_super) {
	    __extends(Checkbox, _super);
	    function Checkbox() {
	        _super.call(this);
	    }
	    Checkbox.prototype.renderIcon = function () {
	        var _a = this.props, selected = _a.selected, type = _a.type;
	        if (!selected)
	            return null;
	        if (type === 'check') {
	            return React.createElement(svg_icon_1.SvgIcon, {svg: __webpack_require__(326)});
	        }
	        else if (type === 'cross') {
	            return React.createElement(svg_icon_1.SvgIcon, {svg: __webpack_require__(327)});
	        }
	        return null;
	    };
	    Checkbox.prototype.render = function () {
	        var _a = this.props, onClick = _a.onClick, type = _a.type, color = _a.color, selected = _a.selected, label = _a.label;
	        var style = null;
	        if (color) {
	            style = { background: color };
	        }
	        return React.createElement("div", {className: dom_1.classNames('checkbox', type, { selected: selected, color: color }), onClick: onClick}, 
	            React.createElement("div", {className: "checkbox-body", style: style}), 
	            this.renderIcon(), 
	            label ? React.createElement("div", {className: "label"}, label) : null);
	    };
	    Checkbox.defaultProps = {
	        type: 'check'
	    };
	    return Checkbox;
	}(React.Component));
	exports.Checkbox = Checkbox;


/***/ },
/* 324 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(325);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./checkbox.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./checkbox.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 325 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".checkbox{display:inline-block;vertical-align:top;width:20px;height:100%;cursor:pointer;margin-right:3px}.checkbox .checkbox-body{position:absolute;left:0;top:3px;background:rgba(0,0,0,0.12);width:15px;height:15px;border-radius:2px}.checkbox.radio .checkbox-body{border-radius:30px}.checkbox.selected.check .checkbox-body,.checkbox.selected.cross .checkbox-body,.checkbox.selected.radio .checkbox-body{background:rgba(0,0,0,0.45)}.checkbox.selected.radio .checkbox-body::after{content:'';position:absolute;top:5px;left:5px;width:5px;height:5px;border-radius:30px;background:#fff}.checkbox svg{position:absolute;top:4px;left:2px;width:11px;height:14px}.checkbox svg path{fill:#fff}\n", ""]);

	// exports


/***/ },
/* 326 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 11 11\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M4.58636943,10.1740086 L10.882848,2.34713255 L9.16347545,0.931531183 L4.49584966,6.73846459 L2.29904796,4.29310659 L0.65846472,5.80137072 L4.58636943,10.1740086 Z\" fill=\"#666666\" fill-rule=\"evenodd\"/></svg>"

/***/ },
/* 327 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 10 9\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M149.834394,13.2377345 L149.834394,9.07106781 L148.167727,9.07106781 L148.167727,13.2377345 L144.00106,13.2377345 L144.00106,14.9044011 L148.167727,14.9044011 L148.167727,19.0710678 L149.834394,19.0710678 L149.834394,14.9044011 L154.00106,14.9044011 L154.00106,13.2377345 L149.834394,13.2377345 Z\" transform=\"rotate(-45 64.93 182.894)\" fill=\"#BBBBBB\" fill-rule=\"evenodd\"/></svg>"

/***/ },
/* 328 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(329);
	var React = __webpack_require__(5);
	var svg_icon_1 = __webpack_require__(187);
	function focusOnInput(component) {
	    if (!component)
	        return;
	    component.focus();
	}
	var ClearableInput = (function (_super) {
	    __extends(ClearableInput, _super);
	    function ClearableInput() {
	        _super.call(this);
	    }
	    ClearableInput.prototype.onChange = function (e) {
	        this.props.onChange(e.target.value);
	    };
	    ClearableInput.prototype.onClear = function () {
	        this.props.onChange('');
	    };
	    ClearableInput.prototype.render = function () {
	        var _a = this.props, className = _a.className, type = _a.type, placeholder = _a.placeholder, focusOnMount = _a.focusOnMount, value = _a.value, onBlur = _a.onBlur;
	        var ref = focusOnMount ? focusOnInput : null;
	        var classNames = ['clearable-input'];
	        if (className)
	            classNames.push(className);
	        if (!value)
	            classNames.push('empty');
	        return React.createElement("div", {className: classNames.join(' ')}, 
	            React.createElement("input", {type: type || 'text', placeholder: placeholder, value: value || '', onChange: this.onChange.bind(this), onBlur: onBlur, ref: ref}), 
	            React.createElement("div", {className: "clear", onClick: this.onClear.bind(this)}, 
	                React.createElement(svg_icon_1.SvgIcon, {svg: __webpack_require__(327)})
	            ));
	    };
	    return ClearableInput;
	}(React.Component));
	exports.ClearableInput = ClearableInput;


/***/ },
/* 329 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(330);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./clearable-input.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./clearable-input.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 330 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".clearable-input{padding-right:28px}.clearable-input input{width:100%;height:100%;background:none}.clearable-input .clear{position:absolute;top:5px;right:6px;cursor:pointer;background:#d9d9d9;border-radius:30px;width:18px;height:18px}.clearable-input .clear:hover{background:#bababa}.clearable-input .clear svg{width:10px;margin-top:5px;margin-left:4px}.clearable-input .clear svg path{fill:#fff}.clearable-input.empty .clear{display:none}\n", ""]);

	// exports


/***/ },
/* 331 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(332);
	var React = __webpack_require__(5);
	var chronoshift_1 = __webpack_require__(191);
	var time_1 = __webpack_require__(221);
	var DateRangeInput = (function (_super) {
	    __extends(DateRangeInput, _super);
	    function DateRangeInput() {
	        _super.call(this);
	        this.state = {
	            dateString: ''
	        };
	    }
	    DateRangeInput.prototype.componentDidMount = function () {
	        var _a = this.props, time = _a.time, timezone = _a.timezone;
	        this.updateStateFromTime(time, timezone);
	    };
	    DateRangeInput.prototype.componentWillReceiveProps = function (nextProps) {
	        var time = nextProps.time, timezone = nextProps.timezone;
	        this.updateStateFromTime(time, timezone);
	    };
	    DateRangeInput.prototype.updateStateFromTime = function (time, timezone) {
	        if (!time)
	            return;
	        if (isNaN(time.valueOf())) {
	            this.setState({
	                dateString: ''
	            });
	            return;
	        }
	        var effectiveTime = this.props.type === "end" ? time_1.exclusiveToInclusiveEnd(time) : time;
	        this.setState({
	            dateString: time_1.getWallTimeString(effectiveTime, timezone)
	        });
	    };
	    DateRangeInput.prototype.dateChange = function (e) {
	        var dateString = e.target.value.replace(/[^\d-]/g, '').substr(0, 10);
	        this.setState({
	            dateString: dateString
	        });
	        if (dateString.length === 10) {
	            this.changeDate(dateString);
	        }
	    };
	    DateRangeInput.prototype.changeDate = function (possibleDateString) {
	        var _a = this.props, timezone = _a.timezone, onChange = _a.onChange, type = _a.type;
	        var possibleDate = new Date(possibleDateString);
	        var day = type === "end" ? possibleDate.getUTCDate() + 1 : possibleDate.getUTCDate();
	        if (isNaN(possibleDate.valueOf())) {
	            onChange(null);
	        }
	        else {
	            var possibleDate = chronoshift_1.WallTime.WallTimeToUTC(timezone.toString(), possibleDate.getUTCFullYear(), possibleDate.getUTCMonth(), day, possibleDate.getUTCHours(), possibleDate.getUTCMinutes(), possibleDate.getUTCSeconds(), possibleDate.getUTCMilliseconds());
	            onChange(possibleDate);
	        }
	    };
	    DateRangeInput.prototype.render = function () {
	        var hide = this.props.hide;
	        var dateString = this.state.dateString;
	        var value = hide ? '' : dateString;
	        return React.createElement("div", {className: "date-range-input"}, 
	            React.createElement("input", {className: "input-field", value: value, onChange: this.dateChange.bind(this)})
	        );
	    };
	    return DateRangeInput;
	}(React.Component));
	exports.DateRangeInput = DateRangeInput;


/***/ },
/* 332 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(333);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./date-range-input.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./date-range-input.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 333 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".date-range-input .input-field{border:1px solid #d4d4d4;border-radius:2px;box-shadow:inset 0 1px 1px rgba(0,0,0,0.13);padding-left:6px;padding-right:6px;width:100%;height:30px}.date-range-input .input-field:hover{border-color:#b8b8b8}.date-range-input .input-field:focus{border-color:#1ea3e6}.date-range-input .error.input-field{border-color:#e24c4c}\n", ""]);

	// exports


/***/ },
/* 334 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(335);
	var React = __webpack_require__(5);
	var chronoshift_1 = __webpack_require__(191);
	var plywood_1 = __webpack_require__(199);
	var time_1 = __webpack_require__(221);
	var dom_1 = __webpack_require__(300);
	var constants_1 = __webpack_require__(292);
	var svg_icon_1 = __webpack_require__(187);
	var date_range_input_1 = __webpack_require__(331);
	var DateRangePicker = (function (_super) {
	    __extends(DateRangePicker, _super);
	    function DateRangePicker() {
	        _super.call(this);
	        this.state = {
	            activeMonthStartDate: null,
	            hoverTimeRange: null,
	            selectionSet: false
	        };
	    }
	    DateRangePicker.prototype.componentWillMount = function () {
	        var _a = this.props, startTime = _a.startTime, endTime = _a.endTime, timezone = _a.timezone;
	        if (startTime && !time_1.datesEqual(startTime, chronoshift_1.day.floor(startTime, timezone)))
	            throw new Error("start time must be round");
	        if (endTime && !time_1.datesEqual(endTime, chronoshift_1.day.floor(endTime, timezone)))
	            throw new Error("end time must be round");
	        var flooredStart = chronoshift_1.month.floor(startTime || new Date(), timezone);
	        this.setState({
	            activeMonthStartDate: flooredStart,
	            selectionSet: true
	        });
	    };
	    DateRangePicker.prototype.navigateToMonth = function (offset) {
	        var timezone = this.props.timezone;
	        var activeMonthStartDate = this.state.activeMonthStartDate;
	        var newDate = chronoshift_1.month.shift(activeMonthStartDate, timezone, offset);
	        this.setState({
	            activeMonthStartDate: newDate
	        });
	    };
	    DateRangePicker.prototype.goToPreviousMonth = function () {
	        return this.navigateToMonth(-1);
	    };
	    DateRangePicker.prototype.goToNextMonth = function () {
	        return this.navigateToMonth(1);
	    };
	    DateRangePicker.prototype.calculateHoverTimeRange = function (mouseEnteredDay) {
	        var _a = this.props, startTime = _a.startTime, endTime = _a.endTime;
	        var hoverTimeRange = null;
	        if (startTime && !endTime) {
	            var start = startTime;
	            var end = mouseEnteredDay;
	            if (mouseEnteredDay < startTime) {
	                start = mouseEnteredDay;
	                end = startTime;
	            }
	            hoverTimeRange = new plywood_1.TimeRange({ start: start, end: end, bounds: '[]' });
	        }
	        this.setState({ hoverTimeRange: hoverTimeRange });
	    };
	    DateRangePicker.prototype.onCalendarMouseLeave = function () {
	        this.setState({ hoverTimeRange: null });
	    };
	    DateRangePicker.prototype.selectNewRange = function (startDate, endDate) {
	        var _a = this.props, onStartChange = _a.onStartChange, onEndChange = _a.onEndChange, timezone = _a.timezone;
	        onStartChange(startDate);
	        if (endDate)
	            endDate = time_1.shiftOneDay(endDate, timezone);
	        onEndChange(endDate);
	    };
	    DateRangePicker.prototype.selectDay = function (selection) {
	        var startTime = this.props.startTime;
	        var selectionSet = this.state.selectionSet;
	        if (selectionSet) {
	            this.setState({ hoverTimeRange: null, selectionSet: false });
	            this.selectNewRange(selection, null);
	        }
	        else {
	            var isDoubleClickSameDay = time_1.datesEqual(selection, startTime);
	            var isBackwardSelection = selection < startTime;
	            if (isDoubleClickSameDay) {
	                this.selectNewRange(startTime, startTime);
	            }
	            else if (isBackwardSelection) {
	                this.selectNewRange(selection, startTime);
	            }
	            else {
	                this.selectNewRange(startTime, selection);
	            }
	            this.setState({ selectionSet: true });
	        }
	    };
	    DateRangePicker.prototype.getIsSelectable = function (date) {
	        var _a = this.state, hoverTimeRange = _a.hoverTimeRange, selectionSet = _a.selectionSet;
	        var inHoverTimeRange = false;
	        if (hoverTimeRange) {
	            inHoverTimeRange = hoverTimeRange.contains(date);
	        }
	        return inHoverTimeRange && !selectionSet;
	    };
	    DateRangePicker.prototype.getIsSelectedEdgeEnd = function (isSingleDate, candidate) {
	        if (isSingleDate)
	            return false;
	        var _a = this.props, startTime = _a.startTime, endTime = _a.endTime, timezone = _a.timezone;
	        var candidateEndPoint = time_1.shiftOneDay(candidate, timezone);
	        return time_1.wallTimeInclusiveEndEqual(endTime, candidateEndPoint, timezone) && endTime > startTime;
	    };
	    DateRangePicker.prototype.renderDays = function (weeks, monthStart, isSingleDate) {
	        var _this = this;
	        var _a = this.props, startTime = _a.startTime, endTime = _a.endTime, maxTime = _a.maxTime, timezone = _a.timezone;
	        var nextMonthStart = chronoshift_1.month.shift(monthStart, timezone, 1);
	        return weeks.map(function (daysInWeek, row) {
	            return React.createElement("div", {className: "week", key: row}, 
	                " ", 
	                daysInWeek.map(function (dayDate, column) {
	                    var isPast = dayDate < monthStart;
	                    var isFuture = dayDate >= nextMonthStart;
	                    var isBeyondMaxRange = dayDate > maxTime;
	                    var isSelectedEdgeStart = time_1.datesEqual(dayDate, startTime);
	                    var isSelectedEdgeEnd = _this.getIsSelectedEdgeEnd(isSingleDate, dayDate);
	                    var className = dom_1.classNames("day", "value", {
	                        past: isPast,
	                        future: isFuture,
	                        "beyond-max-range": isBeyondMaxRange,
	                        "selectable": _this.getIsSelectable(dayDate),
	                        "selected": startTime < dayDate && dayDate < endTime,
	                        "selected-edge": isSelectedEdgeStart || isSelectedEdgeEnd
	                    });
	                    return React.createElement("div", {className: className, key: column, onClick: _this.selectDay.bind(_this, dayDate), onMouseEnter: _this.calculateHoverTimeRange.bind(_this, dayDate)}, time_1.getWallTimeDay(dayDate, timezone));
	                }));
	        });
	    };
	    ;
	    DateRangePicker.prototype.renderCalendar = function (startDate, isSingleDate) {
	        var timezone = this.props.timezone;
	        var weeks = time_1.monthToWeeks(startDate, timezone, constants_1.getLocale());
	        var firstWeek = weeks[0];
	        var lastWeek = weeks[weeks.length - 1];
	        var countPrepend = 7 - firstWeek.length;
	        var countAppend = 7 - lastWeek.length;
	        weeks[0] = time_1.prependDays(timezone, firstWeek, countPrepend);
	        weeks[weeks.length - 1] = time_1.appendDays(timezone, lastWeek, countAppend);
	        return this.renderDays(weeks, startDate, isSingleDate);
	    };
	    DateRangePicker.prototype.renderCalendarNav = function (startDate) {
	        var timezone = this.props.timezone;
	        return React.createElement("div", {className: "calendar-nav"}, 
	            React.createElement("div", {className: 'caret left', onClick: this.goToPreviousMonth.bind(this)}, 
	                React.createElement(svg_icon_1.SvgIcon, {svg: __webpack_require__(337)})
	            ), 
	            time_1.getWallTimeMonthWithYear(startDate, timezone), 
	            React.createElement("div", {className: 'caret right', onClick: this.goToNextMonth.bind(this)}, 
	                React.createElement(svg_icon_1.SvgIcon, {svg: __webpack_require__(338)})
	            ));
	    };
	    DateRangePicker.prototype.render = function () {
	        var _a = this.props, startTime = _a.startTime, endTime = _a.endTime, timezone = _a.timezone, onStartChange = _a.onStartChange, onEndChange = _a.onEndChange;
	        var _b = this.state, activeMonthStartDate = _b.activeMonthStartDate, selectionSet = _b.selectionSet;
	        if (!activeMonthStartDate)
	            return null;
	        var isSingleDate = endTime ? time_1.getWallTimeDay(startTime, timezone) === time_1.getEndWallTimeInclusive(endTime, timezone).getDate() : true;
	        return React.createElement("div", {className: "date-range-picker"}, 
	            React.createElement("div", {className: "side-by-side"}, 
	                React.createElement(date_range_input_1.DateRangeInput, {type: "start", time: startTime, timezone: timezone, onChange: onStartChange.bind(this)}), 
	                React.createElement(date_range_input_1.DateRangeInput, {type: "end", time: endTime, timezone: timezone, onChange: onEndChange.bind(this), hide: !selectionSet})), 
	            React.createElement("div", {className: "calendar", onMouseLeave: this.onCalendarMouseLeave.bind(this)}, 
	                this.renderCalendarNav(activeMonthStartDate), 
	                React.createElement("div", {className: "week"}, constants_1.getLocale().shortDays.map(function (day, i) {
	                    return React.createElement("div", {className: "day label", key: day + i}, 
	                        React.createElement("span", {className: "space"}), 
	                        day);
	                })), 
	                this.renderCalendar(activeMonthStartDate, isSingleDate)));
	    };
	    return DateRangePicker;
	}(React.Component));
	exports.DateRangePicker = DateRangePicker;


/***/ },
/* 335 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(336);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./date-range-picker.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./date-range-picker.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 336 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".date-range-picker .side-by-side{display:-webkit-box;display:-ms-flexbox;display:flex}.date-range-picker .side-by-side .date-range-input{-webkit-box-flex:1;-ms-flex-positive:1;flex-grow:1;-ms-flex-negative:1;flex-shrink:1;-ms-flex-preferred-size:0;flex-basis:0}.date-range-picker .side-by-side :not(:last-child){margin-right:8px}.date-range-picker .calendar{padding-left:4px;padding-right:4px}.date-range-picker .calendar .calendar-nav{margin-top:18px;margin-bottom:12px;text-align:center;line-height:23px;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.date-range-picker .calendar .calendar-nav .caret{position:absolute;top:0;padding:3px 3px;cursor:pointer}.date-range-picker .calendar .calendar-nav .caret svg{width:19px}.date-range-picker .calendar .calendar-nav .caret svg path{fill:#777}.date-range-picker .calendar .calendar-nav .caret:hover svg path{fill:#555}.date-range-picker .calendar .calendar-nav .caret.left{left:0}.date-range-picker .calendar .calendar-nav .caret.right{right:0}.date-range-picker .calendar .week{display:-webkit-box;display:-ms-flexbox;display:flex;width:100%}.date-range-picker .calendar .week .day{-webkit-box-flex:1;-ms-flex-positive:1;flex-grow:1;-ms-flex-preferred-size:0;flex-basis:0;text-align:center;height:26px;line-height:26px;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.date-range-picker .calendar .week .day.label{color:#bbb;pointer-events:none}.date-range-picker .calendar .week .day.value.selectable,.date-range-picker .calendar .week .day.value.selected{background:rgba(30,163,230,0.26)}.date-range-picker .calendar .week .day.value.selectable.past:not(.selected-edge),.date-range-picker .calendar .week .day.value.selectable.future:not(.selected-edge),.date-range-picker .calendar .week .day.value.selected.past:not(.selected-edge),.date-range-picker .calendar .week .day.value.selected.future:not(.selected-edge){color:#87acbf}.date-range-picker .calendar .week .day.value:hover:not(.selectable)::after{position:absolute;top:0;bottom:0;left:0;right:0;content:'';pointer-events:none;background:rgba(0,0,0,0.06)}.date-range-picker .calendar .week .day.value:hover:not(.selectable).beyond-max-range::after{background:rgba(0,0,0,0.1)}.date-range-picker .calendar .week .day.value.beyond-max-range::after{position:absolute;top:0;bottom:0;left:0;right:0;content:'';pointer-events:none;background:rgba(0,0,0,0.05)}.date-range-picker .calendar .week .day.value.past,.date-range-picker .calendar .week .day.value.future{color:#bbb}.date-range-picker .calendar .week .day.value.selected-edge{background:#1ea3e6;color:#fff}.date-range-picker .calendar .week .day span.space{color:transparent}\n", ""]);

	// exports


/***/ },
/* 337 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 19 19\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M4,3 L14,9.5 L4,16\" transform=\"matrix(-1 0 0 1 18 0)\" fill=\"#000000\" fill-rule=\"evenodd\"/></svg>"

/***/ },
/* 338 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 19 19\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M5,3 L15,9.5 L5,16\" fill=\"#000000\" fill-rule=\"evenodd\"/></svg>"

/***/ },
/* 339 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(340);
	var React = __webpack_require__(5);
	var svg_icon_1 = __webpack_require__(187);
	var constants_1 = __webpack_require__(292);
	var index_1 = __webpack_require__(202);
	var bubble_menu_1 = __webpack_require__(297);
	var ACTION_SIZE = 60;
	var DimensionActionsMenu = (function (_super) {
	    __extends(DimensionActionsMenu, _super);
	    function DimensionActionsMenu() {
	        _super.call(this);
	    }
	    DimensionActionsMenu.prototype.onFilter = function () {
	        var _a = this.props, dimension = _a.dimension, triggerFilterMenu = _a.triggerFilterMenu, onClose = _a.onClose;
	        triggerFilterMenu(dimension);
	        onClose();
	    };
	    DimensionActionsMenu.prototype.onSplit = function () {
	        var _a = this.props, clicker = _a.clicker, essence = _a.essence, dimension = _a.dimension, triggerSplitMenu = _a.triggerSplitMenu, onClose = _a.onClose;
	        if (essence.splits.hasSplitOn(dimension) && essence.splits.length() === 1) {
	            triggerSplitMenu(dimension);
	        }
	        else {
	            clicker.changeSplit(index_1.SplitCombine.fromExpression(dimension.expression), index_1.VisStrategy.UnfairGame);
	        }
	        onClose();
	    };
	    DimensionActionsMenu.prototype.onSubsplit = function () {
	        var _a = this.props, clicker = _a.clicker, essence = _a.essence, dimension = _a.dimension, triggerSplitMenu = _a.triggerSplitMenu, onClose = _a.onClose;
	        if (essence.splits.hasSplitOn(dimension)) {
	            triggerSplitMenu(dimension);
	        }
	        else {
	            clicker.addSplit(index_1.SplitCombine.fromExpression(dimension.expression), index_1.VisStrategy.UnfairGame);
	        }
	        onClose();
	    };
	    DimensionActionsMenu.prototype.onPin = function () {
	        var _a = this.props, clicker = _a.clicker, dimension = _a.dimension, onClose = _a.onClose;
	        clicker.pin(dimension);
	        onClose();
	    };
	    DimensionActionsMenu.prototype.render = function () {
	        var _a = this.props, direction = _a.direction, containerStage = _a.containerStage, openOn = _a.openOn, dimension = _a.dimension, onClose = _a.onClose;
	        if (!dimension)
	            return null;
	        var menuSize = index_1.Stage.fromSize(ACTION_SIZE * 2, ACTION_SIZE * 2);
	        return React.createElement(bubble_menu_1.BubbleMenu, {className: "dimension-actions-menu", direction: direction, containerStage: containerStage, stage: menuSize, fixedSize: true, openOn: openOn, onClose: onClose}, 
	            React.createElement("div", {className: "filter action", onClick: this.onFilter.bind(this)}, 
	                React.createElement(svg_icon_1.SvgIcon, {svg: __webpack_require__(342)}), 
	                React.createElement("div", {className: "action-label"}, constants_1.STRINGS.filter)), 
	            React.createElement("div", {className: "pin action", onClick: this.onPin.bind(this)}, 
	                React.createElement(svg_icon_1.SvgIcon, {svg: __webpack_require__(343)}), 
	                React.createElement("div", {className: "action-label"}, constants_1.STRINGS.pin)), 
	            React.createElement("div", {className: "split action", onClick: this.onSplit.bind(this)}, 
	                React.createElement(svg_icon_1.SvgIcon, {svg: __webpack_require__(344)}), 
	                React.createElement("div", {className: "action-label"}, constants_1.STRINGS.split)), 
	            React.createElement("div", {className: "subsplit action", onClick: this.onSubsplit.bind(this)}, 
	                React.createElement(svg_icon_1.SvgIcon, {svg: __webpack_require__(345)}), 
	                React.createElement("div", {className: "action-label"}, constants_1.STRINGS.subsplit)));
	    };
	    return DimensionActionsMenu;
	}(React.Component));
	exports.DimensionActionsMenu = DimensionActionsMenu;


/***/ },
/* 340 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(341);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./dimension-actions-menu.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./dimension-actions-menu.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 341 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".dimension-actions-menu{padding:8px}.dimension-actions-menu .action{display:inline-block;width:50px;height:50px;cursor:pointer;text-align:center;color:#1ea3e6;font-size:12px}.dimension-actions-menu .action svg{width:18px;padding-top:7px;padding-bottom:4px}.dimension-actions-menu .action svg path{fill:#1ea3e6}.dimension-actions-menu .action:hover::before{content:'';position:absolute;top:3px;bottom:3px;left:3px;right:3px;background:#e3f4fc}\n", ""]);

	// exports


/***/ },
/* 342 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 18 18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10.9090909,10.4 L16,4 L2,4 L7.09090909,10.4 L7.09090909,15 L10.9090909,15 L10.9090909,10.4 Z\" fill=\"#189AE0\" fill-rule=\"evenodd\"/></svg>"

/***/ },
/* 343 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 18 18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M11.8541084,10.3397357 L15.0966594,6.87868518 C15.4743907,6.47550041 15.3453823,6.25543918 14.8168247,6.38512486 L11.7137902,7.14647832 L7.85779145,3.80496277 L7.76662817,1.99673298 C7.7388714,1.44617559 7.40952415,1.31386608 7.02107371,1.71138005 L1.67763282,7.17949703 C1.29363124,7.57245835 1.42362049,7.8812442 1.97818714,7.86896331 L3.97300911,7.82478795 L6.99569836,12.1398735 L6.51964948,14.8205672 C6.42340016,15.3625597 6.65345941,15.4861394 7.04467099,15.0851408 L10.1101179,11.9430055 L17.0003364,17.1178606 L11.8541084,10.3397357 Z\" fill=\"#189AE0\" fill-rule=\"evenodd\"/></svg>"

/***/ },
/* 344 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 18 18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M2,2 L16,2 L16,16 L2,16 L2,2 Z M11,4 L11,2 L7,2 L7,4 L4,4 L4,7 L2,7 L2,11 L4,11 L4,14 L7,14 L7,16 L11,16 L11,14 L14,14 L14,11 L16,11 L16,7 L14,7 L14,4 L11,4 Z\" fill=\"#189AE0\" fill-rule=\"evenodd\"/></svg>"

/***/ },
/* 345 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 18 18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10,8 L10,3 L8,3 L8,8 L3,8 L3,10 L8,10 L8,15 L10,15 L10,10 L15,10 L15,8 L10,8 Z\" fill=\"#189AE0\" fill-rule=\"evenodd\"/></svg>"

/***/ },
/* 346 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(347);
	var React = __webpack_require__(5);
	var constants_1 = __webpack_require__(292);
	var drag_manager_1 = __webpack_require__(349);
	var dom_1 = __webpack_require__(300);
	var index_1 = __webpack_require__(202);
	var svg_icon_1 = __webpack_require__(187);
	var highlight_string_1 = __webpack_require__(350);
	var searchable_tile_1 = __webpack_require__(353);
	var DIMENSION_CLASS_NAME = 'dimension';
	var DimensionListTile = (function (_super) {
	    __extends(DimensionListTile, _super);
	    function DimensionListTile() {
	        _super.call(this);
	        this.state = {
	            DimensionActionsMenuAsync: null,
	            menuOpenOn: null,
	            menuDimension: null,
	            highlightDimension: null,
	            showSearch: false,
	            searchText: ''
	        };
	    }
	    DimensionListTile.prototype.componentDidMount = function () {
	        var _this = this;
	        !/* require.ensure */(function (require) {
	            _this.setState({
	                DimensionActionsMenuAsync: __webpack_require__(339).DimensionActionsMenu
	            });
	        }(__webpack_require__));
	    };
	    DimensionListTile.prototype.clickDimension = function (dimension, e) {
	        var menuOpenOn = this.state.menuOpenOn;
	        var target = dom_1.findParentWithClass(e.target, DIMENSION_CLASS_NAME);
	        if (menuOpenOn === target) {
	            this.closeMenu();
	            return;
	        }
	        this.setState({
	            menuOpenOn: target,
	            menuDimension: dimension
	        });
	    };
	    DimensionListTile.prototype.closeMenu = function () {
	        var menuOpenOn = this.state.menuOpenOn;
	        if (!menuOpenOn)
	            return;
	        this.setState({
	            menuOpenOn: null,
	            menuDimension: null
	        });
	    };
	    DimensionListTile.prototype.dragStart = function (dimension, e) {
	        var _a = this.props, essence = _a.essence, getUrlPrefix = _a.getUrlPrefix;
	        var dataTransfer = e.dataTransfer;
	        dataTransfer.effectAllowed = 'all';
	        if (getUrlPrefix) {
	            var newUrl = essence.changeSplit(index_1.SplitCombine.fromExpression(dimension.expression), index_1.VisStrategy.FairGame).getURL(getUrlPrefix());
	            dataTransfer.setData("text/url-list", newUrl);
	            dataTransfer.setData("text/plain", newUrl);
	        }
	        drag_manager_1.DragManager.setDragDimension(dimension, 'dimension-list-tile');
	        dom_1.setDragGhost(dataTransfer, dimension.title);
	        this.closeMenu();
	    };
	    DimensionListTile.prototype.onMouseOver = function (dimension) {
	        var highlightDimension = this.state.highlightDimension;
	        if (highlightDimension === dimension)
	            return;
	        this.setState({
	            highlightDimension: dimension
	        });
	    };
	    DimensionListTile.prototype.onMouseLeave = function (dimension) {
	        var highlightDimension = this.state.highlightDimension;
	        if (highlightDimension !== dimension)
	            return;
	        this.setState({
	            highlightDimension: null
	        });
	    };
	    DimensionListTile.prototype.toggleSearch = function () {
	        var showSearch = this.state.showSearch;
	        this.setState({ showSearch: !showSearch });
	        this.onSearchChange('');
	    };
	    DimensionListTile.prototype.onSearchChange = function (text) {
	        var searchText = this.state.searchText;
	        var newSearchText = text.substr(0, constants_1.MAX_SEARCH_LENGTH);
	        if (searchText === newSearchText)
	            return;
	        this.setState({
	            searchText: newSearchText
	        });
	    };
	    DimensionListTile.prototype.renderMenu = function () {
	        var _a = this.props, essence = _a.essence, clicker = _a.clicker, menuStage = _a.menuStage, triggerFilterMenu = _a.triggerFilterMenu, triggerSplitMenu = _a.triggerSplitMenu;
	        var _b = this.state, DimensionActionsMenuAsync = _b.DimensionActionsMenuAsync, menuOpenOn = _b.menuOpenOn, menuDimension = _b.menuDimension;
	        if (!DimensionActionsMenuAsync || !menuDimension)
	            return null;
	        var onClose = this.closeMenu.bind(this);
	        return React.createElement(DimensionActionsMenuAsync, {clicker: clicker, essence: essence, direction: "right", containerStage: menuStage, openOn: menuOpenOn, dimension: menuDimension, triggerFilterMenu: triggerFilterMenu, triggerSplitMenu: triggerSplitMenu, onClose: onClose});
	    };
	    DimensionListTile.prototype.render = function () {
	        var _this = this;
	        var _a = this.props, essence = _a.essence, style = _a.style;
	        var _b = this.state, menuDimension = _b.menuDimension, highlightDimension = _b.highlightDimension, showSearch = _b.showSearch, searchText = _b.searchText;
	        var dataCube = essence.dataCube;
	        var shownDimensions = dataCube.dimensions.toArray();
	        var itemY = 0;
	        if (searchText) {
	            shownDimensions = shownDimensions.filter(function (r) {
	                return r.title.toLowerCase().indexOf(searchText.toLowerCase()) !== -1;
	            });
	        }
	        var dimensionItems = shownDimensions.map(function (dimension) {
	            var className = dom_1.classNames(DIMENSION_CLASS_NAME, 'type-' + dimension.className, {
	                highlight: dimension === highlightDimension,
	                selected: dimension === menuDimension
	            });
	            var style = dom_1.transformStyle(0, itemY);
	            itemY += constants_1.DIMENSION_HEIGHT;
	            return React.createElement("div", {className: className, key: dimension.name, onClick: _this.clickDimension.bind(_this, dimension), onMouseOver: _this.onMouseOver.bind(_this, dimension), onMouseLeave: _this.onMouseLeave.bind(_this, dimension), draggable: true, onDragStart: _this.dragStart.bind(_this, dimension), style: style}, 
	                React.createElement("div", {className: "icon"}, 
	                    React.createElement(svg_icon_1.SvgIcon, {svg: __webpack_require__(360)("./dim-" + dimension.className + '.svg')})
	                ), 
	                React.createElement("div", {className: "item-title"}, 
	                    React.createElement(highlight_string_1.HighlightString, {className: "label", text: dimension.title, highlight: searchText})
	                ));
	        }, this);
	        var message = null;
	        if (searchText && !dimensionItems.length) {
	            message = React.createElement("div", {className: "message"}, "No " + constants_1.STRINGS.dimensions.toLowerCase() + " for \"" + searchText + "\"");
	        }
	        var icons = [
	            {
	                name: 'search',
	                ref: 'search',
	                onClick: this.toggleSearch.bind(this),
	                svg: __webpack_require__(367),
	                active: showSearch
	            }
	        ];
	        return React.createElement(searchable_tile_1.SearchableTile, {style: style, title: constants_1.STRINGS.dimensions, toggleChangeFn: this.toggleSearch.bind(this), onSearchChange: this.onSearchChange.bind(this), searchText: searchText, showSearch: showSearch, icons: icons, className: 'dimension-list-tile'}, 
	            React.createElement("div", {className: "items", ref: "items"}, 
	                dimensionItems, 
	                message), 
	            this.renderMenu());
	    };
	    return DimensionListTile;
	}(React.Component));
	exports.DimensionListTile = DimensionListTile;


/***/ },
/* 347 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(348);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./dimension-list-tile.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./dimension-list-tile.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 348 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".dimension-list-tile{overflow:hidden}.dimension-list-tile .items{position:absolute;top:36px;bottom:0;width:100%;overflow:auto;color:#000;-webkit-transition:height 0.1s ease-in-out;transition:height 0.1s ease-in-out}.dimension-list-tile .items .dimension{position:absolute;top:0;left:0;right:0;height:27px;background:#fff;cursor:pointer;overflow:hidden;-webkit-transition:-webkit-transform 0.1s ease-in-out;transition:-webkit-transform 0.1s ease-in-out;transition:transform 0.1s ease-in-out;transition:transform 0.1s ease-in-out, -webkit-transform 0.1s ease-in-out}.dimension-list-tile .items .dimension:last-child{margin-bottom:12px}.dimension-list-tile .items .dimension.highlight{background:#e3f4fc}.dimension-list-tile .items .dimension.selected{background:#c3e7f8}.dimension-list-tile .items .dimension .icon{position:absolute;top:0;bottom:0;left:0;width:37px;top:4px;left:0;width:19px}.dimension-list-tile .items .dimension .icon svg{position:absolute;left:12px;width:19px}.dimension-list-tile .items .dimension .icon svg path{fill:rgba(0,0,0,0.35)}.dimension-list-tile .items .dimension .item-title{white-space:nowrap;overflow-x:hidden;text-overflow:ellipsis;position:absolute;top:7px;bottom:0;right:10px;left:38px}\n", ""]);

	// exports


/***/ },
/* 349 */
/***/ function(module, exports) {

	"use strict";
	var DragManager = (function () {
	    function DragManager() {
	    }
	    DragManager.init = function () {
	        document.addEventListener("dragend", function () {
	            DragManager.dragOrigin = null;
	            DragManager.dragDimension = null;
	            DragManager.dragSplit = null;
	        }, false);
	    };
	    DragManager.getDragOrigin = function () {
	        return DragManager.dragOrigin;
	    };
	    DragManager.setDragDimension = function (dimension, origin) {
	        DragManager.dragDimension = dimension;
	        DragManager.dragOrigin = origin;
	    };
	    DragManager.getDragDimension = function () {
	        return DragManager.dragDimension;
	    };
	    DragManager.setDragSplit = function (split, origin) {
	        DragManager.dragSplit = split;
	        DragManager.dragOrigin = origin;
	    };
	    DragManager.getDragSplit = function () {
	        return DragManager.dragSplit;
	    };
	    DragManager.dragOrigin = null;
	    DragManager.dragDimension = null;
	    DragManager.dragSplit = null;
	    return DragManager;
	}());
	exports.DragManager = DragManager;


/***/ },
/* 350 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(351);
	var React = __webpack_require__(5);
	var dom_1 = __webpack_require__(300);
	var HighlightString = (function (_super) {
	    __extends(HighlightString, _super);
	    function HighlightString() {
	        _super.call(this);
	    }
	    HighlightString.prototype.highlightInString = function () {
	        var _a = this.props, text = _a.text, highlight = _a.highlight;
	        if (!highlight)
	            return text;
	        var startIndex = null;
	        var highlightString = null;
	        if (typeof highlight === "string") {
	            var strLower = text.toLowerCase();
	            startIndex = strLower.indexOf(highlight.toLowerCase());
	            if (startIndex === -1)
	                return text;
	            highlightString = highlight.toLowerCase();
	        }
	        else {
	            var match = text.match(highlight);
	            if (!match)
	                return text;
	            highlightString = match[0];
	            startIndex = match.index;
	        }
	        var endIndex = startIndex + highlightString.length;
	        return [
	            React.createElement("span", {className: "pre", key: "pre"}, text.substring(0, startIndex)),
	            React.createElement("span", {className: "bold", key: "bold"}, text.substring(startIndex, endIndex)),
	            React.createElement("span", {className: "post", key: "post"}, text.substring(endIndex))
	        ];
	    };
	    HighlightString.prototype.render = function () {
	        var className = this.props.className;
	        return React.createElement("span", {className: dom_1.classNames('highlight-string', className)}, this.highlightInString());
	    };
	    return HighlightString;
	}(React.Component));
	exports.HighlightString = HighlightString;


/***/ },
/* 351 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(352);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./highlight-string.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./highlight-string.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 352 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".highlight-string .bold{border-bottom:1px solid #000}\n", ""]);

	// exports


/***/ },
/* 353 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(354);
	var React = __webpack_require__(5);
	var ReactDOM = __webpack_require__(39);
	var index_1 = __webpack_require__(202);
	var dom_1 = __webpack_require__(300);
	var tile_header_1 = __webpack_require__(356);
	var clearable_input_1 = __webpack_require__(328);
	var bubble_menu_1 = __webpack_require__(297);
	var SearchableTile = (function (_super) {
	    __extends(SearchableTile, _super);
	    function SearchableTile() {
	        _super.call(this);
	        this.state = {
	            actionsMenuOpenOn: null
	        };
	        this.globalMouseDownListener = this.globalMouseDownListener.bind(this);
	        this.globalKeyDownListener = this.globalKeyDownListener.bind(this);
	    }
	    SearchableTile.prototype.componentDidMount = function () {
	        this.mounted = true;
	        this.setState({ actionsMenuAlignOn: ReactDOM.findDOMNode(this.refs['header']) });
	        window.addEventListener('mousedown', this.globalMouseDownListener);
	        window.addEventListener('keydown', this.globalKeyDownListener);
	    };
	    SearchableTile.prototype.componentWillUnmount = function () {
	        this.mounted = false;
	        window.removeEventListener('mousedown', this.globalMouseDownListener);
	        window.removeEventListener('keydown', this.globalKeyDownListener);
	    };
	    SearchableTile.prototype.globalMouseDownListener = function (e) {
	        var _a = this.props, searchText = _a.searchText, toggleChangeFn = _a.toggleChangeFn;
	        if (searchText !== '')
	            return;
	        var target = e.target;
	        var searchBoxElement = ReactDOM.findDOMNode(this.refs['search-box']);
	        if (!searchBoxElement || dom_1.isInside(target, searchBoxElement))
	            return;
	        var headerRef = this.refs['header'];
	        if (!headerRef)
	            return;
	        var searchButtonElement = ReactDOM.findDOMNode(headerRef.refs['search']);
	        if (!searchButtonElement || dom_1.isInside(target, searchButtonElement))
	            return;
	        toggleChangeFn();
	    };
	    SearchableTile.prototype.globalKeyDownListener = function (e) {
	        var _a = this.props, toggleChangeFn = _a.toggleChangeFn, showSearch = _a.showSearch;
	        if (!dom_1.escapeKey(e))
	            return;
	        if (!showSearch)
	            return;
	        toggleChangeFn();
	    };
	    SearchableTile.prototype.onActionsMenuClose = function () {
	        var actionsMenuOpenOn = this.state.actionsMenuOpenOn;
	        if (!actionsMenuOpenOn)
	            return;
	        this.setState({
	            actionsMenuOpenOn: null
	        });
	    };
	    SearchableTile.prototype.onActionsMenuClick = function (e) {
	        var actionsMenuOpenOn = this.state.actionsMenuOpenOn;
	        if (actionsMenuOpenOn)
	            return this.onActionsMenuClose();
	        this.setState({
	            actionsMenuOpenOn: e.target
	        });
	    };
	    SearchableTile.prototype.onSelectGranularity = function (action) {
	        this.onActionsMenuClose();
	        action.onSelect();
	    };
	    SearchableTile.prototype.renderGranularityElements = function () {
	        var _this = this;
	        var actions = this.props.actions;
	        return actions.map(function (action) {
	            return React.createElement("li", {className: dom_1.classNames({ selected: action.selected }), key: action.keyString || action.toString(), onClick: _this.onSelectGranularity.bind(_this, action)}, action.displayValue || action.toString());
	        });
	    };
	    SearchableTile.prototype.renderActionsMenu = function () {
	        var _a = this.state, actionsMenuOpenOn = _a.actionsMenuOpenOn, actionsMenuAlignOn = _a.actionsMenuAlignOn;
	        var stage = index_1.Stage.fromSize(180, 200);
	        return React.createElement(bubble_menu_1.BubbleMenu, {align: "end", className: "dimension-tile-actions", direction: "down", stage: stage, onClose: this.onActionsMenuClose.bind(this), openOn: actionsMenuOpenOn, alignOn: actionsMenuAlignOn}, 
	            React.createElement("ul", {className: "bubble-list"}, this.renderGranularityElements())
	        );
	    };
	    SearchableTile.prototype.render = function () {
	        var _a = this.props, className = _a.className, style = _a.style, icons = _a.icons, title = _a.title, onSearchChange = _a.onSearchChange, showSearch = _a.showSearch, searchText = _a.searchText, children = _a.children, onDragStart = _a.onDragStart, actions = _a.actions;
	        var actionsMenuOpenOn = this.state.actionsMenuOpenOn;
	        var tileIcons = icons;
	        if (actions && actions.length > 0) {
	            tileIcons = [{
	                    name: 'more',
	                    ref: 'more',
	                    onClick: this.onActionsMenuClick.bind(this),
	                    svg: __webpack_require__(359),
	                    active: Boolean(actionsMenuOpenOn)
	                }].concat(icons);
	        }
	        var qualifiedClassName = "searchable-tile " + className;
	        var header = React.createElement(tile_header_1.TileHeader, {title: title, ref: "header", icons: tileIcons, onDragStart: onDragStart});
	        var searchBar = null;
	        if (showSearch) {
	            searchBar = React.createElement("div", {className: "search-box", ref: "search-box"}, 
	                React.createElement(clearable_input_1.ClearableInput, {placeholder: "Search", focusOnMount: true, value: searchText, onChange: onSearchChange.bind(this)})
	            );
	        }
	        qualifiedClassName = dom_1.classNames(qualifiedClassName, (showSearch ? 'has-search' : 'no-search'));
	        return React.createElement("div", {className: qualifiedClassName, style: style}, 
	            header, 
	            searchBar, 
	            actionsMenuOpenOn ? this.renderActionsMenu() : null, 
	            children);
	    };
	    return SearchableTile;
	}(React.Component));
	exports.SearchableTile = SearchableTile;


/***/ },
/* 354 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(355);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./searchable-tile.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./searchable-tile.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 355 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".searchable-tile .search-box .clearable-input{background:#fff;border:1px solid #d1d1d1;border-radius:2px;box-shadow:inset 0 1px 1px 0 rgba(0,0,0,0.1)}.searchable-tile{background:#fff;box-shadow:0 1px 1px 0 rgba(0,0,0,0.1)}.searchable-tile::after{position:absolute;top:0;bottom:0;left:0;right:0;content:'';pointer-events:none;box-shadow:inset 0 -20px 10px -10px #fff;border-radius:2px}.searchable-tile .rows{position:absolute;top:36px;bottom:0;left:0;right:0;overflow:auto}.searchable-tile .search-box{position:absolute;top:36px;left:0;right:0;height:26px;padding:0 14px;margin-bottom:4px}.searchable-tile .search-box .clearable-input{width:100%;height:26px;padding-left:6px}.searchable-tile .search-box .clearable-input .clear{top:3px}.searchable-tile.has-search .rows{top:65px}.searchable-tile.has-search .items{top:65px}.searchable-tile.continuous .rows .row{pointer-events:none}.searchable-tile .message{padding:4px 10px;color:#999;font-style:italic}\n", ""]);

	// exports


/***/ },
/* 356 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var dom_1 = __webpack_require__(300);
	__webpack_require__(357);
	var React = __webpack_require__(5);
	var svg_icon_1 = __webpack_require__(187);
	var TileHeader = (function (_super) {
	    __extends(TileHeader, _super);
	    function TileHeader() {
	        _super.call(this);
	    }
	    TileHeader.prototype.renderIcons = function () {
	        var icons = this.props.icons;
	        if (!icons || !icons.length)
	            return null;
	        var iconElements = icons.map(function (icon) {
	            return React.createElement("div", {className: dom_1.classNames('icon', icon.name, { active: icon.active }), key: icon.name, onClick: icon.onClick, ref: icon.ref}, 
	                React.createElement(svg_icon_1.SvgIcon, {svg: icon.svg})
	            );
	        });
	        return React.createElement("div", {className: "icons"}, iconElements);
	    };
	    TileHeader.prototype.render = function () {
	        var _a = this.props, title = _a.title, onDragStart = _a.onDragStart;
	        return React.createElement("div", {className: "tile-header", draggable: onDragStart ? true : null, onDragStart: onDragStart}, 
	            React.createElement("div", {className: "title"}, title), 
	            this.renderIcons());
	    };
	    return TileHeader;
	}(React.Component));
	exports.TileHeader = TileHeader;


/***/ },
/* 357 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(358);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./tile-header.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./tile-header.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 358 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".tile-header .title{padding:15px 14px 10px 14px;font-size:12px;text-transform:uppercase;color:#000;cursor:default}.tile-header .icons{position:absolute;top:1px;right:10px}.tile-header .icons .icon{display:inline-block;padding:10px 0;cursor:pointer;width:19px;margin-left:3px}.tile-header .icons .icon svg path{fill:#bbb}.tile-header .icons .icon:hover svg path,.tile-header .icons .icon.active svg path{fill:#888}\n", ""]);

	// exports


/***/ },
/* 359 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 19 19\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M4.5,11 C5.32842712,11 6,10.3284271 6,9.5 C6,8.67157288 5.32842712,8 4.5,8 C3.67157288,8 3,8.67157288 3,9.5 C3,10.3284271 3.67157288,11 4.5,11 Z M9.5,11 C10.3284271,11 11,10.3284271 11,9.5 C11,8.67157288 10.3284271,8 9.5,8 C8.67157288,8 8,8.67157288 8,9.5 C8,10.3284271 8.67157288,11 9.5,11 Z M14.5,11 C15.3284271,11 16,10.3284271 16,9.5 C16,8.67157288 15.3284271,8 14.5,8 C13.6715729,8 13,8.67157288 13,9.5 C13,10.3284271 13.6715729,11 14.5,11 Z\" fill=\"#000000\" fill-rule=\"evenodd\"/></svg>"

/***/ },
/* 360 */
/***/ function(module, exports, __webpack_require__) {

	var map = {
		"./dim-boolean.svg": 361,
		"./dim-geo.svg": 362,
		"./dim-number.svg": 363,
		"./dim-string-geo.svg": 364,
		"./dim-string.svg": 365,
		"./dim-time.svg": 366
	};
	function webpackContext(req) {
		return __webpack_require__(webpackContextResolve(req));
	};
	function webpackContextResolve(req) {
		return map[req] || (function() { throw new Error("Cannot find module '" + req + "'.") }());
	};
	webpackContext.keys = function webpackContextKeys() {
		return Object.keys(map);
	};
	webpackContext.resolve = webpackContextResolve;
	module.exports = webpackContext;
	webpackContext.id = 360;


/***/ },
/* 361 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 19 19\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M13,5 L14,5 L14,13 L13,13 L13,5 Z M11,5 L13,5 L13,6 L11,6 L11,5 Z M5,5 L10,5 L10,13 L5,13 L5,5 Z M6,6 L9,6 L9,12 L6,12 L6,6 Z\" fill=\"#000000\" fill-rule=\"evenodd\"/></svg>"

/***/ },
/* 362 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 19 19\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M8,11 L8,8 L11,8 L11,11 L8,11 Z M8,12 L8,15.8260682 C8.48151935,15.9398113 8.98373076,16 9.5,16 C10.0162692,16 10.5184807,15.9398113 11,15.8260682 L11,12 L8,12 Z M15.8260682,11 C15.9398113,10.5184807 16,10.0162692 16,9.5 C16,8.98373076 15.9398113,8.48151935 15.8260682,8 L12,8 L12,11 L15.8260682,11 Z M15.5018367,12 C14.8432122,13.5793598 13.5793598,14.8432122 12,15.5018367 L12,12 L15.5018367,12 Z M3.17393184,11 C3.06018869,10.5184807 3,10.0162692 3,9.5 C3,8.98373076 3.06018869,8.48151935 3.17393184,8 L7,8 L7,11 L3.17393184,11 Z M3.49816335,12 C4.15678777,13.5793598 5.42064024,14.8432122 7,15.5018367 L7,12 L3.49816335,12 Z M8,7 L8,3.17393184 C8.48151935,3.06018869 8.98373076,3 9.5,3 C10.0162692,3 10.5184807,3.06018869 11,3.17393184 L11,7 L8,7 Z M15.5018367,7 C14.8432122,5.42064024 13.5793598,4.15678777 12,3.49816335 L12,7 L15.5018367,7 Z M3.49816335,7 C4.15678777,5.42064024 5.42064024,4.15678777 7,3.49816335 L7,7 L3.49816335,7 Z M9.5,17 C13.6421356,17 17,13.6421356 17,9.5 C17,5.35786438 13.6421356,2 9.5,2 C5.35786438,2 2,5.35786438 2,9.5 C2,13.6421356 5.35786438,17 9.5,17 Z\" fill=\"#000000\" fill-rule=\"evenodd\"/></svg>"

/***/ },
/* 363 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 19 19\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M7,11 L7,8 L3,8 L3,7 L7,7 L7,3 L8,3 L8,7 L11,7 L11,3 L12,3 L12,7 L16,7 L16,8 L12,8 L12,11 L16,11 L16,12 L12,12 L12,16 L11,16 L11,12 L8,12 L8,16 L7,16 L7,12 L3,12 L3,11 L7,11 Z M8,11 L8,8 L11,8 L11,11 L8,11 Z\" fill=\"#000000\" fill-rule=\"evenodd\"/></svg>"

/***/ },
/* 364 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 19 19\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M8,11 L8,8 L11,8 L11,11 L8,11 Z M8,12 L8,15.8260682 C8.48151935,15.9398113 8.98373076,16 9.5,16 C10.0162692,16 10.5184807,15.9398113 11,15.8260682 L11,12 L8,12 Z M15.8260682,11 C15.9398113,10.5184807 16,10.0162692 16,9.5 C16,8.98373076 15.9398113,8.48151935 15.8260682,8 L12,8 L12,11 L15.8260682,11 Z M15.5018367,12 C14.8432122,13.5793598 13.5793598,14.8432122 12,15.5018367 L12,12 L15.5018367,12 Z M3.17393184,11 C3.06018869,10.5184807 3,10.0162692 3,9.5 C3,8.98373076 3.06018869,8.48151935 3.17393184,8 L7,8 L7,11 L3.17393184,11 Z M3.49816335,12 C4.15678777,13.5793598 5.42064024,14.8432122 7,15.5018367 L7,12 L3.49816335,12 Z M8,7 L8,3.17393184 C8.48151935,3.06018869 8.98373076,3 9.5,3 C10.0162692,3 10.5184807,3.06018869 11,3.17393184 L11,7 L8,7 Z M15.5018367,7 C14.8432122,5.42064024 13.5793598,4.15678777 12,3.49816335 L12,7 L15.5018367,7 Z M3.49816335,7 C4.15678777,5.42064024 5.42064024,4.15678777 7,3.49816335 L7,7 L3.49816335,7 Z M9.5,17 C13.6421356,17 17,13.6421356 17,9.5 C17,5.35786438 13.6421356,2 9.5,2 C5.35786438,2 2,5.35786438 2,9.5 C2,13.6421356 5.35786438,17 9.5,17 Z\" fill=\"#000000\" fill-rule=\"evenodd\"/></svg>"

/***/ },
/* 365 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 19 19\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M1,5 L6,5 L6,13 L1,13 L1,5 Z M2,6 L5,6 L5,8 L2,8 L2,6 Z M2,9 L5,9 L5,13 L2,13 L2,9 Z M7,5 L12,5 L12,13 L7,13 L7,5 Z M8,6 L11,6 L11,8 L8,8 L8,6 Z M8,9 L11,9 L11,12 L8,12 L8,9 Z M13,5 L18,5 L18,13 L13,13 L13,5 Z M14,6 L18,6 L18,12 L14,12 L14,6 Z\" fill=\"#000000\" fill-rule=\"evenodd\"/></svg>"

/***/ },
/* 366 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 19 19\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M9.5,17 C13.6421356,17 17,13.6421356 17,9.5 C17,5.35786438 13.6421356,2 9.5,2 C5.35786438,2 2,5.35786438 2,9.5 C2,13.6421356 5.35786438,17 9.5,17 Z M9.5,16 C5.91014913,16 3,13.0898509 3,9.5 C3,5.91014913 5.91014913,3 9.5,3 C13.0898509,3 16,5.91014913 16,9.5 C16,13.0898509 13.0898509,16 9.5,16 Z M9,4 L10,4 L10,9 L9,9 L9,4 Z M9,9 L14,9 L14,10 L9,10 L9,9 Z\" fill=\"#000000\" fill-rule=\"evenodd\"/></svg>"

/***/ },
/* 367 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 19 19\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M11.573151,9.94495162 C12.6161629,8.17894957 12.3789932,5.86619566 10.8616421,4.34884454 C9.06318273,2.55038515 6.14730393,2.55038515 4.34884454,4.34884454 C2.55038515,6.14730393 2.55038515,9.06318273 4.34884454,10.8616421 C5.86619566,12.3789932 8.17894957,12.6161629 9.94495162,11.573151 L13.8466743,15.4748737 L15.4748737,13.8466743 L11.573151,9.94495162 L11.573151,9.94495162 Z M9.58886079,9.58886079 C10.6843825,8.49333912 10.6843825,6.71714754 9.58886079,5.62162587 C8.49333912,4.5261042 6.71714754,4.5261042 5.62162587,5.62162587 C4.5261042,6.71714754 4.5261042,8.49333912 5.62162587,9.58886079 C6.71714754,10.6843825 8.49333912,10.6843825 9.58886079,9.58886079 L9.58886079,9.58886079 Z\" fill=\"#000000\" fill-rule=\"evenodd\"/></svg>"

/***/ },
/* 368 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(369);
	var React = __webpack_require__(5);
	var dom_1 = __webpack_require__(300);
	var dimension_list_tile_1 = __webpack_require__(346);
	var measures_tile_1 = __webpack_require__(371);
	var TOTAL_FLEXES = 100;
	var MIN_FLEX = 20;
	var MIN_HEIGHT = 150;
	var DimensionMeasurePanel = (function (_super) {
	    __extends(DimensionMeasurePanel, _super);
	    function DimensionMeasurePanel() {
	        _super.call(this);
	    }
	    DimensionMeasurePanel.prototype.render = function () {
	        var _a = this.props, clicker = _a.clicker, essence = _a.essence, menuStage = _a.menuStage, triggerFilterMenu = _a.triggerFilterMenu, triggerSplitMenu = _a.triggerSplitMenu, getUrlPrefix = _a.getUrlPrefix, style = _a.style;
	        var dataCube = essence.dataCube;
	        var numDimensions = dataCube.dimensions.size;
	        var numMeasures = dataCube.measures.size;
	        var dimensionsFlex = dom_1.clamp(Math.ceil(TOTAL_FLEXES * numDimensions / (numDimensions + numMeasures)), MIN_FLEX, TOTAL_FLEXES - MIN_FLEX);
	        var measuresFlex = TOTAL_FLEXES - dimensionsFlex;
	        var dimensionListStyle = { flex: dimensionsFlex };
	        if (dimensionsFlex === MIN_FLEX)
	            dimensionListStyle.minHeight = MIN_HEIGHT;
	        var measuresStyle = { flex: measuresFlex };
	        if (measuresFlex === MIN_FLEX)
	            measuresStyle.minHeight = MIN_HEIGHT;
	        return React.createElement("div", {className: "dimension-measure-panel", style: style}, 
	            React.createElement(dimension_list_tile_1.DimensionListTile, {clicker: clicker, essence: essence, menuStage: menuStage, triggerFilterMenu: triggerFilterMenu, triggerSplitMenu: triggerSplitMenu, getUrlPrefix: getUrlPrefix, style: dimensionListStyle}), 
	            React.createElement(measures_tile_1.MeasuresTile, {clicker: clicker, essence: essence, style: measuresStyle}));
	    };
	    return DimensionMeasurePanel;
	}(React.Component));
	exports.DimensionMeasurePanel = DimensionMeasurePanel;


/***/ },
/* 369 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(370);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./dimension-measure-panel.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./dimension-measure-panel.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 370 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".dimension-measure-panel{padding:10px 10px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}@media only screen and (max-width: 1080px){.dimension-measure-panel{padding:0 1px 0 0;font-size:0.9em}}.dimension-measure-panel .dimension-list-tile{margin-bottom:1px;border-radius:2px 2px 0 0}.dimension-measure-panel .measures-tile{border-radius:0 0 2px 2px}\n", ""]);

	// exports


/***/ },
/* 371 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(372);
	var React = __webpack_require__(5);
	var constants_1 = __webpack_require__(292);
	var dom_1 = __webpack_require__(300);
	var localStorage = __webpack_require__(374);
	var checkbox_1 = __webpack_require__(323);
	var highlight_string_1 = __webpack_require__(350);
	var searchable_tile_1 = __webpack_require__(353);
	var MeasuresTile = (function (_super) {
	    __extends(MeasuresTile, _super);
	    function MeasuresTile() {
	        _super.call(this);
	        this.state = {
	            showSearch: false,
	            searchText: ''
	        };
	    }
	    MeasuresTile.prototype.measureClick = function (measure, e) {
	        if (e.altKey && typeof console !== 'undefined') {
	            console.log("Measure: " + measure.name);
	            console.log("expression: " + measure.expression.toString());
	            return;
	        }
	        var clicker = this.props.clicker;
	        clicker.toggleEffectiveMeasure(measure);
	    };
	    MeasuresTile.prototype.toggleSearch = function () {
	        var showSearch = this.state.showSearch;
	        this.setState({ showSearch: !showSearch });
	        this.onSearchChange('');
	    };
	    MeasuresTile.prototype.onSearchChange = function (text) {
	        var searchText = this.state.searchText;
	        var newSearchText = text.substr(0, constants_1.MAX_SEARCH_LENGTH);
	        if (searchText === newSearchText)
	            return;
	        this.setState({
	            searchText: newSearchText
	        });
	    };
	    MeasuresTile.prototype.toggleMultiMeasure = function () {
	        var _a = this.props, clicker = _a.clicker, essence = _a.essence;
	        clicker.toggleMultiMeasureMode();
	        localStorage.set('is-multi-measure', !essence.getEffectiveMultiMeasureMode());
	    };
	    MeasuresTile.prototype.render = function () {
	        var _this = this;
	        var _a = this.props, essence = _a.essence, style = _a.style;
	        var _b = this.state, showSearch = _b.showSearch, searchText = _b.searchText;
	        var dataCube = essence.dataCube;
	        var multiMeasureMode = essence.getEffectiveMultiMeasureMode();
	        var selectedMeasures = essence.getEffectiveSelectedMeasure();
	        var checkboxType = multiMeasureMode ? 'check' : 'radio';
	        var shownMeasures = dataCube.measures.toArray();
	        if (searchText) {
	            shownMeasures = shownMeasures.filter(function (m) {
	                return m.getTitleWithUnits().toLowerCase().indexOf(searchText.toLowerCase()) !== -1;
	            });
	        }
	        var rows = shownMeasures.map(function (measure) {
	            var measureName = measure.name;
	            var selected = selectedMeasures.has(measureName);
	            return React.createElement("div", {className: dom_1.classNames('row', { selected: selected }), key: measureName, onClick: _this.measureClick.bind(_this, measure)}, 
	                React.createElement(checkbox_1.Checkbox, {type: checkboxType, selected: selected}), 
	                React.createElement(highlight_string_1.HighlightString, {className: "label", text: measure.getTitleWithUnits(), highlight: searchText}));
	        });
	        var message = null;
	        if (searchText && !rows.length) {
	            message = React.createElement("div", {className: "message"}, "No " + constants_1.STRINGS.measures.toLowerCase() + " for \"" + searchText + "\"");
	        }
	        var icons = [];
	        if (!essence.isFixedMeasureMode()) {
	            icons.push({
	                name: 'multi',
	                onClick: this.toggleMultiMeasure.bind(this),
	                svg: __webpack_require__(375),
	                active: multiMeasureMode
	            });
	        }
	        icons.push({
	            name: 'search',
	            ref: 'search',
	            onClick: this.toggleSearch.bind(this),
	            svg: __webpack_require__(367),
	            active: showSearch
	        });
	        return React.createElement(searchable_tile_1.SearchableTile, {style: style, title: constants_1.STRINGS.measures, toggleChangeFn: this.toggleSearch.bind(this), onSearchChange: this.onSearchChange.bind(this), searchText: searchText, showSearch: showSearch, icons: icons, className: 'measures-tile'}, 
	            React.createElement("div", {className: "rows"}, 
	                rows, 
	                message)
	        );
	    };
	    ;
	    return MeasuresTile;
	}(React.Component));
	exports.MeasuresTile = MeasuresTile;


/***/ },
/* 372 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(373);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./measures-tile.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./measures-tile.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 373 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".measures-tile .row{padding-left:14px;height:27px;cursor:pointer;overflow:hidden;white-space:nowrap}.measures-tile .row:last-child{margin-bottom:12px}.measures-tile .row .label{white-space:nowrap;overflow-x:hidden;text-overflow:ellipsis;position:absolute;top:7px;bottom:0;left:37px;right:10px}.measures-tile .row:hover{background:#e3f4fc}.measures-tile .checkbox{margin-top:2px}\n", ""]);

	// exports


/***/ },
/* 374 */
/***/ function(module, exports) {

	"use strict";
	function get(key) {
	    try {
	        return JSON.parse(localStorage[key]);
	    }
	    catch (e) {
	        return undefined;
	    }
	}
	exports.get = get;
	function set(key, value) {
	    try {
	        localStorage[key] = JSON.stringify(value);
	    }
	    catch (e) { }
	}
	exports.set = set;


/***/ },
/* 375 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12,2 L12,1.00247329 C12,0.455760956 11.5511774,0 10.9975267,0 L1.00247329,0 C0.455760956,0 0,0.448822582 0,1.00247329 L0,10.9975267 C0,11.544239 0.448822582,12 1.00247329,12 L2,12 L2,4.00276013 C2,2.89666625 2.89354265,2 4.00276013,2 L12,2 Z M3,3.9955775 C3,3.44573523 3.44483697,3 3.9955775,3 L13.0044225,3 C13.5542648,3 14,3.44483697 14,3.9955775 L14,13.0044225 C14,13.5542648 13.555163,14 13.0044225,14 L3.9955775,14 C3.44573523,14 3,13.555163 3,13.0044225 L3,3.9955775 Z M6.7576206,11.4354379 L7.46397296,12.3147697 L8.12273147,11.3990432 L12.3169711,5.56871801 L10.9241827,4.561222 L7.40466411,9.49569228 L5.75335309,7.43998979 L4.41591974,8.52027517 L6.7576206,11.4354379 Z\" transform=\"translate(3 3)\" fill=\"#000000\" fill-rule=\"evenodd\"/></svg>"

/***/ },
/* 376 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(377);
	var React = __webpack_require__(5);
	var plywood_1 = __webpack_require__(199);
	var index_1 = __webpack_require__(231);
	var index_2 = __webpack_require__(202);
	var dom_1 = __webpack_require__(300);
	var drag_manager_1 = __webpack_require__(349);
	var constants_1 = __webpack_require__(292);
	var constants_2 = __webpack_require__(292);
	var svg_icon_1 = __webpack_require__(187);
	var checkbox_1 = __webpack_require__(323);
	var loader_1 = __webpack_require__(184);
	var query_error_1 = __webpack_require__(379);
	var highlight_string_1 = __webpack_require__(350);
	var searchable_tile_1 = __webpack_require__(353);
	var TOP_N = 100;
	var FOLDER_BOX_HEIGHT = 30;
	var DimensionTile = (function (_super) {
	    __extends(DimensionTile, _super);
	    function DimensionTile() {
	        var _this = this;
	        _super.call(this);
	        this.state = {
	            loading: false,
	            dataset: null,
	            error: null,
	            fetchQueued: false,
	            unfolded: true,
	            foldable: false,
	            showSearch: false,
	            selectedGranularity: null,
	            searchText: ''
	        };
	        this.collectTriggerSearch = index_1.collect(constants_2.SEARCH_WAIT, function () {
	            if (!_this.mounted)
	                return;
	            var _a = _this.props, essence = _a.essence, timekeeper = _a.timekeeper, dimension = _a.dimension, sortOn = _a.sortOn;
	            var unfolded = _this.state.unfolded;
	            _this.fetchData(essence, timekeeper, dimension, sortOn, unfolded);
	        });
	    }
	    DimensionTile.prototype.fetchData = function (essence, timekeeper, dimension, sortOn, unfolded, selectedGranularity) {
	        var _this = this;
	        var searchText = this.state.searchText;
	        var dataCube = essence.dataCube, colors = essence.colors;
	        var filter = essence.getEffectiveFilter(timekeeper);
	        if (unfolded && dimension !== essence.getTimeDimension()) {
	            filter = filter.remove(dimension.expression);
	        }
	        filter = filter.setExclusionforDimension(false, dimension);
	        var filterExpression = filter.toExpression();
	        if (!unfolded && colors && colors.dimension === dimension.name && colors.values) {
	            filterExpression = filterExpression.and(dimension.expression.in(colors.toSet()));
	        }
	        if (searchText) {
	            filterExpression = filterExpression.and(dimension.expression.contains(plywood_1.r(searchText), 'ignoreCase'));
	        }
	        var query = plywood_1.$('main')
	            .filter(filterExpression);
	        var sortExpression = null;
	        if (dimension.canBucketByDefault()) {
	            var dimensionExpression = dimension.expression;
	            var attributeName = dimensionExpression.name;
	            var filterSelection = essence.filter.getSelection(dimensionExpression);
	            if (!selectedGranularity) {
	                if (filterSelection) {
	                    var range = dimension.kind === 'time' ? essence.evaluateSelection(filterSelection, timekeeper) : filterSelection.getLiteralValue().extent();
	                    selectedGranularity = index_2.getBestGranularityForRange(range, true, dimension.bucketedBy, dimension.granularities);
	                }
	                else {
	                    selectedGranularity = index_2.getDefaultGranularityForKind(dimension.kind, dimension.bucketedBy, dimension.granularities);
	                }
	            }
	            this.setState({ selectedGranularity: selectedGranularity });
	            query = query.split(plywood_1.$(attributeName).performAction(selectedGranularity), dimension.name);
	            sortExpression = plywood_1.$(dimension.name);
	        }
	        else {
	            query = query.split(dimension.expression, dimension.name);
	            sortExpression = sortOn.getExpression();
	        }
	        if (sortOn.measure) {
	            query = query.performAction(sortOn.measure.toApplyAction());
	        }
	        query = query.sort(sortExpression, plywood_1.SortAction.DESCENDING).limit(TOP_N + 1);
	        this.setState({
	            loading: true,
	            fetchQueued: false
	        });
	        dataCube.executor(query, { timezone: essence.timezone })
	            .then(function (dataset) {
	            if (!_this.mounted)
	                return;
	            _this.setState({
	                loading: false,
	                dataset: dataset,
	                error: null
	            });
	        }, function (error) {
	            if (!_this.mounted)
	                return;
	            _this.setState({
	                loading: false,
	                dataset: null,
	                error: error
	            });
	        });
	    };
	    DimensionTile.prototype.updateFoldability = function (essence, dimension, colors) {
	        var unfolded = this.state.unfolded;
	        var foldable = true;
	        if (essence.filter.filteredOn(dimension.expression)) {
	            if (colors) {
	                foldable = false;
	                unfolded = false;
	            }
	            else if (dimension.kind === "time") {
	                foldable = false;
	                unfolded = true;
	            }
	        }
	        else {
	            if (!colors) {
	                foldable = false;
	                unfolded = true;
	            }
	        }
	        this.setState({ foldable: foldable, unfolded: unfolded });
	        return unfolded;
	    };
	    DimensionTile.prototype.componentWillMount = function () {
	        var _a = this.props, essence = _a.essence, timekeeper = _a.timekeeper, dimension = _a.dimension, colors = _a.colors, sortOn = _a.sortOn;
	        var unfolded = this.updateFoldability(essence, dimension, colors);
	        this.fetchData(essence, timekeeper, dimension, sortOn, unfolded);
	    };
	    DimensionTile.prototype.componentWillReceiveProps = function (nextProps) {
	        var _a = this.props, essence = _a.essence, timekeeper = _a.timekeeper, dimension = _a.dimension, sortOn = _a.sortOn;
	        var selectedGranularity = this.state.selectedGranularity;
	        var nextEssence = nextProps.essence;
	        var nextTimekeeper = nextProps.timekeeper;
	        var nextDimension = nextProps.dimension;
	        var nextColors = nextProps.colors;
	        var nextSortOn = nextProps.sortOn;
	        var unfolded = this.updateFoldability(nextEssence, nextDimension, nextColors);
	        var currentSelection = essence.getTimeSelection();
	        var nextSelection = nextEssence.getTimeSelection();
	        var differentTimeFilterSelection = currentSelection ? !currentSelection.equals(nextSelection) : Boolean(nextSelection);
	        if (differentTimeFilterSelection) {
	            this.setState({ dataset: null });
	        }
	        var persistedGranularity = differentTimeFilterSelection ? null : selectedGranularity;
	        if (essence.differentDataCube(nextEssence) ||
	            essence.differentEffectiveFilter(nextEssence, timekeeper, nextTimekeeper, null, unfolded ? dimension : null) ||
	            essence.differentColors(nextEssence) || !dimension.equals(nextDimension) || !sortOn.equals(nextSortOn) ||
	            essence.differentTimezoneMatters(nextEssence) ||
	            (!essence.timezone.equals(nextEssence.timezone)) && dimension.kind === 'time' ||
	            differentTimeFilterSelection) {
	            this.fetchData(nextEssence, nextTimekeeper, nextDimension, nextSortOn, unfolded, persistedGranularity);
	        }
	        this.setFilterModeFromProps(nextProps);
	    };
	    DimensionTile.prototype.setFilterModeFromProps = function (props) {
	        if (props.colors) {
	            this.setState({ filterMode: index_2.Filter.INCLUDED });
	        }
	        else {
	            var filterMode = props.essence.filter.getModeForDimension(props.dimension);
	            if (filterMode)
	                this.setState({ filterMode: filterMode });
	        }
	    };
	    DimensionTile.prototype.componentDidMount = function () {
	        this.mounted = true;
	        this.setFilterModeFromProps(this.props);
	    };
	    DimensionTile.prototype.componentWillUnmount = function () {
	        this.mounted = false;
	    };
	    DimensionTile.prototype.onRowClick = function (value, e) {
	        var _a = this.props, clicker = _a.clicker, essence = _a.essence, dimension = _a.dimension, colors = _a.colors;
	        var _b = this.state, dataset = _b.dataset, filterMode = _b.filterMode;
	        var filter = essence.filter;
	        if (colors && colors.dimension === dimension.name) {
	            if (colors.limit) {
	                if (!dataset)
	                    return;
	                var values = dataset.data.slice(0, colors.limit).map(function (d) { return d[dimension.name]; });
	                colors = index_2.Colors.fromValues(colors.dimension, values);
	            }
	            colors = colors.toggle(value);
	            if (filter.filteredOn(dimension.expression)) {
	                filter = filter.toggleValue(dimension.expression, value);
	                clicker.changeFilter(filter, colors);
	            }
	            else {
	                clicker.changeColors(colors);
	            }
	        }
	        else {
	            if (e.altKey || e.ctrlKey || e.metaKey) {
	                var filteredOnMe = filter.filteredOnValue(dimension.expression, value);
	                var singleFilter = filter.getLiteralSet(dimension.expression).size() === 1;
	                if (filteredOnMe && singleFilter) {
	                    filter = filter.remove(dimension.expression);
	                }
	                else {
	                    filter = filter.remove(dimension.expression).addValue(dimension.expression, value);
	                }
	            }
	            else {
	                filter = filter.toggleValue(dimension.expression, value);
	            }
	            var unfolded = this.state.unfolded;
	            if (!unfolded && !filter.filteredOn(dimension.expression)) {
	                this.setState({ unfolded: true });
	            }
	            clicker.changeFilter(filter.setExclusionforDimension(filterMode === index_2.Filter.EXCLUDED, dimension));
	        }
	    };
	    DimensionTile.prototype.changeFilterMode = function (value) {
	        var _a = this.props, clicker = _a.clicker, essence = _a.essence, dimension = _a.dimension;
	        this.setState({ filterMode: value }, function () {
	            clicker.changeFilter(essence.filter.setExclusionforDimension(value === index_2.Filter.EXCLUDED, dimension));
	        });
	    };
	    DimensionTile.prototype.getFilterActions = function () {
	        var _this = this;
	        var _a = this.props, essence = _a.essence, dimension = _a.dimension;
	        var filterMode = this.state.filterMode;
	        if (!essence || !dimension)
	            return null;
	        var filter = essence.filter;
	        var options = [index_2.Filter.INCLUDED, index_2.Filter.EXCLUDED];
	        return options.map(function (value) {
	            return {
	                selected: filterMode === value,
	                onSelect: _this.changeFilterMode.bind(_this, value),
	                displayValue: constants_1.STRINGS[value],
	                keyString: value
	            };
	        });
	    };
	    DimensionTile.prototype.toggleFold = function () {
	        var _a = this.props, essence = _a.essence, timekeeper = _a.timekeeper, dimension = _a.dimension, sortOn = _a.sortOn;
	        var unfolded = this.state.unfolded;
	        unfolded = !unfolded;
	        this.setState({ unfolded: unfolded });
	        this.fetchData(essence, timekeeper, dimension, sortOn, unfolded);
	    };
	    DimensionTile.prototype.onDragStart = function (e) {
	        var _a = this.props, essence = _a.essence, dimension = _a.dimension, getUrlPrefix = _a.getUrlPrefix;
	        var newUrl = essence.changeSplit(index_2.SplitCombine.fromExpression(dimension.expression), index_2.VisStrategy.FairGame).getURL(getUrlPrefix());
	        var dataTransfer = e.dataTransfer;
	        dataTransfer.effectAllowed = 'all';
	        dataTransfer.setData("text/url-list", newUrl);
	        dataTransfer.setData("text/plain", newUrl);
	        drag_manager_1.DragManager.setDragDimension(dimension, 'dimension-tile');
	        dom_1.setDragGhost(dataTransfer, dimension.title);
	    };
	    DimensionTile.prototype.toggleSearch = function () {
	        var showSearch = this.state.showSearch;
	        this.setState({ showSearch: !showSearch });
	        this.onSearchChange('');
	    };
	    DimensionTile.prototype.onSearchChange = function (text) {
	        var _a = this.state, searchText = _a.searchText, dataset = _a.dataset, fetchQueued = _a.fetchQueued, loading = _a.loading;
	        var newSearchText = text.substr(0, constants_2.MAX_SEARCH_LENGTH);
	        if (searchText === newSearchText)
	            return;
	        if (newSearchText.indexOf(searchText) !== -1 && !fetchQueued && !loading && dataset && dataset.data.length < TOP_N) {
	            this.setState({
	                searchText: newSearchText
	            });
	            return;
	        }
	        this.setState({
	            searchText: newSearchText,
	            fetchQueued: true
	        });
	        this.collectTriggerSearch();
	    };
	    DimensionTile.prototype.getTitleHeader = function () {
	        var dimension = this.props.dimension;
	        var selectedGranularity = this.state.selectedGranularity;
	        if (selectedGranularity && dimension.kind === 'time') {
	            var duration = selectedGranularity.duration;
	            return dimension.title + " (" + duration.getDescription() + ")";
	        }
	        return dimension.title;
	    };
	    DimensionTile.prototype.onSelectGranularity = function (selectedGranularity) {
	        if (selectedGranularity === this.state.selectedGranularity)
	            return;
	        var _a = this.props, essence = _a.essence, timekeeper = _a.timekeeper, dimension = _a.dimension, colors = _a.colors, sortOn = _a.sortOn;
	        var unfolded = this.updateFoldability(essence, dimension, colors);
	        this.setState({ dataset: null });
	        this.fetchData(essence, timekeeper, dimension, sortOn, unfolded, selectedGranularity);
	    };
	    DimensionTile.prototype.getGranularityActions = function () {
	        var _this = this;
	        var dimension = this.props.dimension;
	        var selectedGranularity = this.state.selectedGranularity;
	        var granularities = dimension.granularities || index_2.getGranularities(dimension.kind, dimension.bucketedBy, true);
	        return granularities.map(function (g) {
	            var granularityStr = index_2.granularityToString(g);
	            return {
	                selected: index_2.granularityEquals(selectedGranularity, g),
	                onSelect: _this.onSelectGranularity.bind(_this, g),
	                displayValue: index_1.formatGranularity(granularityStr),
	                keyString: granularityStr
	            };
	        });
	    };
	    DimensionTile.prototype.render = function () {
	        var _this = this;
	        var _a = this.props, clicker = _a.clicker, essence = _a.essence, dimension = _a.dimension, sortOn = _a.sortOn, colors = _a.colors, onClose = _a.onClose;
	        var _b = this.state, loading = _b.loading, dataset = _b.dataset, error = _b.error, showSearch = _b.showSearch, unfolded = _b.unfolded, foldable = _b.foldable, fetchQueued = _b.fetchQueued, searchText = _b.searchText, selectedGranularity = _b.selectedGranularity, filterMode = _b.filterMode;
	        var measure = sortOn.measure;
	        var measureName = measure ? measure.name : null;
	        var filterSet = essence.filter.getLiteralSet(dimension.expression);
	        var continuous = dimension.isContinuous();
	        var excluded = filterMode === index_2.Filter.EXCLUDED;
	        var maxHeight = constants_2.PIN_TITLE_HEIGHT;
	        var rows = [];
	        var folder = null;
	        var highlightControls = null;
	        var hasMore = false;
	        if (dataset) {
	            hasMore = dataset.data.length > TOP_N;
	            var rowData = dataset.data.slice(0, TOP_N);
	            if (!unfolded) {
	                if (filterSet) {
	                    rowData = rowData.filter(function (d) { return filterSet.contains(d[dimension.name]); });
	                }
	                if (colors) {
	                    if (colors.values) {
	                        var colorsSet = colors.toSet();
	                        rowData = rowData.filter(function (d) { return colorsSet.contains(d[dimension.name]); });
	                    }
	                    else {
	                        rowData = rowData.slice(0, colors.limit);
	                    }
	                }
	            }
	            if (searchText) {
	                var searchTextLower = searchText.toLowerCase();
	                rowData = rowData.filter(function (d) {
	                    return String(d[dimension.name]).toLowerCase().indexOf(searchTextLower) !== -1;
	                });
	            }
	            var colorValues = null;
	            if (colors)
	                colorValues = colors.getColors(rowData.map(function (d) { return d[dimension.name]; }));
	            var formatter = measure ? index_1.formatterFromData(rowData.map(function (d) { return d[measureName]; }), measure.getFormat()) : null;
	            rows = rowData.map(function (d, i) {
	                var segmentValue = d[dimension.name];
	                var segmentValueStr = String(segmentValue);
	                var className = 'row';
	                var checkbox = null;
	                if ((filterSet || colors) && !continuous) {
	                    var selected;
	                    if (colors) {
	                        selected = false;
	                        className += ' color';
	                    }
	                    else {
	                        selected = essence.filter.filteredOnValue(dimension.expression, segmentValue);
	                        className += ' ' + (selected ? 'selected' : 'not-selected');
	                    }
	                    checkbox = React.createElement(checkbox_1.Checkbox, {selected: selected, type: excluded ? 'cross' : 'check', color: colorValues ? colorValues[i] : null});
	                }
	                if (segmentValue instanceof plywood_1.TimeRange) {
	                    segmentValueStr = index_1.formatTimeBasedOnGranularity(segmentValue, selectedGranularity.duration, essence.timezone, constants_1.getLocale());
	                }
	                else if (segmentValue instanceof plywood_1.NumberRange) {
	                    segmentValueStr = index_1.formatNumberRange(segmentValue);
	                }
	                var measureValueElement = null;
	                if (measure) {
	                    measureValueElement = React.createElement("div", {className: "measure-value"}, formatter(d[measureName]));
	                }
	                var row = React.createElement("div", {className: className, key: segmentValueStr, onClick: _this.onRowClick.bind(_this, segmentValue)}, 
	                    React.createElement("div", {className: "segment-value", title: segmentValueStr}, 
	                        checkbox, 
	                        React.createElement(highlight_string_1.HighlightString, {className: "label", text: segmentValueStr, highlight: searchText})), 
	                    measureValueElement, 
	                    selected ? highlightControls : null);
	                if (selected && highlightControls)
	                    highlightControls = null;
	                return row;
	            });
	            maxHeight += Math.max(2, rows.length) * constants_2.PIN_ITEM_HEIGHT;
	            if (foldable) {
	                folder = React.createElement("div", {className: dom_1.classNames('folder', unfolded ? 'folded' : 'unfolded'), onClick: this.toggleFold.bind(this)}, 
	                    React.createElement(svg_icon_1.SvgIcon, {svg: __webpack_require__(382)}), 
	                    unfolded ? 'Show selection' : 'Show all');
	                maxHeight += FOLDER_BOX_HEIGHT;
	            }
	        }
	        maxHeight += constants_2.PIN_PADDING_BOTTOM;
	        var message = null;
	        if (!loading && dataset && !fetchQueued && searchText && !rows.length) {
	            message = React.createElement("div", {className: "message"}, "No results for \"" + searchText + "\"");
	        }
	        var className = dom_1.classNames('dimension-tile', filterMode, (folder ? 'has-folder' : 'no-folder'), (colors ? 'has-colors' : 'no-colors'), { continuous: continuous });
	        var style = {
	            maxHeight: maxHeight
	        };
	        var icons = [{
	                name: 'search',
	                ref: 'search',
	                onClick: this.toggleSearch.bind(this),
	                svg: __webpack_require__(367),
	                active: showSearch
	            }];
	        if (onClose !== null) {
	            icons.push({
	                name: 'close',
	                ref: 'close',
	                onClick: onClose,
	                svg: __webpack_require__(383)
	            });
	        }
	        var actions = null;
	        if (dimension.canBucketByDefault()) {
	            actions = this.getGranularityActions();
	        }
	        else if (!continuous && !essence.colors) {
	            actions = this.getFilterActions();
	        }
	        return React.createElement(searchable_tile_1.SearchableTile, {style: style, title: this.getTitleHeader(), toggleChangeFn: this.toggleSearch.bind(this), onDragStart: this.onDragStart.bind(this), onSearchChange: this.onSearchChange.bind(this), searchText: searchText, showSearch: showSearch, icons: icons, className: className, actions: actions}, 
	            React.createElement("div", {className: "rows"}, 
	                rows, 
	                message), 
	            folder, 
	            error ? React.createElement(query_error_1.QueryError, {error: error}) : null, 
	            loading ? React.createElement(loader_1.Loader, null) : null);
	    };
	    return DimensionTile;
	}(React.Component));
	exports.DimensionTile = DimensionTile;


/***/ },
/* 377 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(378);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./dimension-tile.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./dimension-tile.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 378 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".dimension-tile{min-height:94px;overflow-y:hidden}.dimension-tile.has-folder .rows{bottom:32px}.dimension-tile .folder{position:absolute;bottom:0;left:0;right:0;height:32px;cursor:pointer;color:#1ea3e6;padding-left:12px;padding-top:9px;z-index:2;border-top:1px solid #e6e6e6}.dimension-tile .folder svg{width:11px;margin-right:6px;margin-top:2px}.dimension-tile .folder svg path{fill:#1ea3e6}.dimension-tile .folder.folded svg{margin-top:1px;-webkit-transform:rotate(180deg);-ms-transform:rotate(180deg);transform:rotate(180deg)}.dimension-tile .folder:hover{background:#e3f4fc}.dimension-tile .row{height:25px;cursor:pointer}.dimension-tile .row:hover{background:#e3f4fc}.dimension-tile .row:last-child{margin-bottom:12px}.dimension-tile .row.not-selected{color:#a6a6a6}.dimension-tile .row .highlight-controls{position:absolute;top:-29px;right:1px;z-index:4}.dimension-tile .row:nth-child(1) .highlight-controls,.dimension-tile .row:nth-child(2) .highlight-controls{top:auto;bottom:-34px}.dimension-tile .segment-value{position:absolute;top:0;bottom:0;left:0;right:80px;left:14px;overflow:hidden;white-space:nowrap}.dimension-tile .segment-value .checkbox{margin-top:1px}.dimension-tile .segment-value .label{display:inline-block;vertical-align:top;padding-top:6px}.dimension-tile .measure-value{position:absolute;top:0;bottom:0;right:0;width:80px;text-align:right;padding-top:6px;padding-right:14px;white-space:nowrap}.dimension-tile .loader,.dimension-tile .query-error{position:absolute;top:0;bottom:0;left:0;right:0}\n", ""]);

	// exports


/***/ },
/* 379 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(380);
	var React = __webpack_require__(5);
	var constants_1 = __webpack_require__(292);
	var QueryError = (function (_super) {
	    __extends(QueryError, _super);
	    function QueryError() {
	        _super.call(this);
	    }
	    QueryError.prototype.render = function () {
	        var error = this.props.error;
	        return React.createElement("div", {className: "query-error"}, 
	            React.createElement("div", {className: "whiteout"}), 
	            React.createElement("div", {className: "error-container"}, 
	                React.createElement("div", {className: "error"}, constants_1.STRINGS.queryError), 
	                React.createElement("div", {className: "message"}, error.message)));
	    };
	    return QueryError;
	}(React.Component));
	exports.QueryError = QueryError;


/***/ },
/* 380 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(381);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./query-error.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./query-error.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 381 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".query-error{text-align:center}.query-error .whiteout{position:absolute;top:0;bottom:0;left:0;right:0;background:#fff;opacity:0.5}.query-error .error-container{position:absolute;top:50%;left:50%;width:180px;height:50px;margin-left:-90px;margin-top:-25px;color:red;text-align:left}.query-error .error-container .error{font-size:14px}.query-error .error-container .message{margin-top:5px;font-size:13px;overflow:hidden}\n", ""]);

	// exports


/***/ },
/* 382 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 10 8\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M5.00000013,3.79318225 L1.92954627,0.341495392 L0.247423305,1.81335299 L5,7.24486921 L9.75257669,1.81335299 L8.07045373,0.341495392 L5.00000013,3.79318225 Z\" fill=\"#B6B6B6\" fill-rule=\"evenodd\"/></svg>"

/***/ },
/* 383 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 19 19\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10.5938589,9.30035993 L13.9563678,12.6622606 L14.6026378,13.3084137 L13.3100979,14.6007199 L12.6638279,13.9545668 L9.30131892,10.5926661 L5.93880997,13.9545668 L5.29253998,14.6007199 L4,13.3084137 L4.64626999,12.6622606 L8.00877894,9.30035993 L4.64626999,5.93845925 L4,5.29230617 L5.29253998,4 L5.93880997,4.64615308 L9.30131892,8.00805376 L12.6638279,4.64615308 L13.3100979,4 L14.6026378,5.29230617 L13.9563678,5.93845925 L10.5938589,9.30035993 Z\" fill=\"#000000\" fill-rule=\"evenodd\"/></svg>"

/***/ },
/* 384 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(385);
	var React = __webpack_require__(5);
	var svg_icon_1 = __webpack_require__(187);
	var DropIndicator = (function (_super) {
	    __extends(DropIndicator, _super);
	    function DropIndicator() {
	        _super.call(this);
	    }
	    DropIndicator.prototype.render = function () {
	        return React.createElement("div", {className: "drop-indicator"}, 
	            React.createElement("div", {className: "white-out"}), 
	            React.createElement("div", {className: "action"}, 
	                React.createElement(svg_icon_1.SvgIcon, {svg: __webpack_require__(387)})
	            ));
	    };
	    return DropIndicator;
	}(React.Component));
	exports.DropIndicator = DropIndicator;


/***/ },
/* 385 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(386);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./drop-indicator.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./drop-indicator.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 386 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".drop-indicator .white-out{position:absolute;top:8px;bottom:8px;left:8px;right:8px;background:rgba(102,102,102,0.14);border-radius:4px}.drop-indicator .action{position:absolute;display:inline-block;padding:7px;top:50%;left:50%;-webkit-transform:translate(-50%, -50%);-ms-transform:translate(-50%, -50%);transform:translate(-50%, -50%);background:#fff;border-radius:4px}.drop-indicator .action svg{width:30px}.drop-indicator .action path{fill:#666}\n", ""]);

	// exports


/***/ },
/* 387 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 43 43\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M8.13388348,38.1338835 L15.8513979,30.4163691 L12.5836309,27.1486021 L4.86611652,34.8661165 L0,30 L0,43 L13,43 L8.13388348,38.1338835 L8.13388348,38.1338835 Z M38.1338835,34.8661165 L30.4163691,27.1486021 L27.1486021,30.4163691 L34.8661165,38.1338835 L30,43 L43,43 L43,30 L38.1338835,34.8661165 L38.1338835,34.8661165 L38.1338835,34.8661165 Z M38.1338835,8.13388348 L30.4163691,15.8513979 L27.1486021,12.5836309 L34.8661165,4.86611652 L30,0 L43,0 L43,13 L38.1338835,8.13388348 L38.1338835,8.13388348 Z M8.13388348,4.86611652 L15.8513979,12.5836309 L12.5836309,15.8513979 L4.86611652,8.13388348 L0,13 L0,0 L13,0 L8.13388348,4.86611652 L8.13388348,4.86611652 Z\" fill=\"#888888\" fill-rule=\"evenodd\"/></svg>"

/***/ },
/* 388 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(389);
	var React = __webpack_require__(5);
	var svg_icon_1 = __webpack_require__(187);
	var constants_1 = __webpack_require__(292);
	var FancyDragIndicator = (function (_super) {
	    __extends(FancyDragIndicator, _super);
	    function FancyDragIndicator() {
	        _super.call(this);
	    }
	    FancyDragIndicator.prototype.render = function () {
	        var dragPosition = this.props.dragPosition;
	        if (!dragPosition)
	            return null;
	        var sectionWidth = constants_1.CORE_ITEM_WIDTH + constants_1.CORE_ITEM_GAP;
	        var ghostArrowLeft;
	        var dragGhostElement = null;
	        if (dragPosition.isInsert()) {
	            ghostArrowLeft = dragPosition.insert * sectionWidth - constants_1.CORE_ITEM_GAP / 2;
	        }
	        else {
	            ghostArrowLeft = dragPosition.replace * sectionWidth + constants_1.CORE_ITEM_WIDTH / 2;
	            var left = dragPosition.replace * sectionWidth;
	            dragGhostElement = React.createElement("div", {className: "drag-ghost-element", style: { left: left }});
	        }
	        return React.createElement("div", {className: "fancy-drag-indicator"}, 
	            dragGhostElement, 
	            React.createElement(svg_icon_1.SvgIcon, {className: "drag-ghost-arrow", svg: __webpack_require__(391), style: { left: ghostArrowLeft }}));
	    };
	    return FancyDragIndicator;
	}(React.Component));
	exports.FancyDragIndicator = FancyDragIndicator;


/***/ },
/* 389 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(390);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./fancy-drag-indicator.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./fancy-drag-indicator.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 390 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".fancy-drag-indicator{pointer-events:none}.fancy-drag-indicator .drag-ghost-element{position:absolute;top:4px;bottom:4px;width:192px;background:rgba(102,102,102,0.14);border-radius:4px}.fancy-drag-indicator .drag-ghost-arrow{position:absolute;top:-12px;width:16px;margin-left:-8px}\n", ""]);

	// exports


/***/ },
/* 391 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 16 17\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M6,10 L2,10 L8,17 L14,10 L10,10 L10,3 L6,3 L6,10 Z\" fill=\"#666666\" fill-rule=\"evenodd\"/></svg>"

/***/ },
/* 392 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(393);
	var React = __webpack_require__(5);
	var string_filter_menu_1 = __webpack_require__(395);
	var time_filter_menu_1 = __webpack_require__(413);
	var number_filter_menu_1 = __webpack_require__(416);
	var FilterMenu = (function (_super) {
	    __extends(FilterMenu, _super);
	    function FilterMenu() {
	        _super.call(this);
	    }
	    FilterMenu.prototype.render = function () {
	        var _a = this.props, clicker = _a.clicker, essence = _a.essence, timekeeper = _a.timekeeper, changePosition = _a.changePosition, containerStage = _a.containerStage, openOn = _a.openOn, dimension = _a.dimension, onClose = _a.onClose, inside = _a.inside;
	        if (!dimension)
	            return null;
	        if (dimension.kind === 'time') {
	            return React.createElement(time_filter_menu_1.TimeFilterMenu, {essence: essence, timekeeper: timekeeper, clicker: clicker, dimension: dimension, onClose: onClose, containerStage: containerStage, openOn: openOn, inside: inside});
	        }
	        else if (dimension.kind === 'number') {
	            return React.createElement(number_filter_menu_1.NumberFilterMenu, {essence: essence, timekeeper: timekeeper, clicker: clicker, dimension: dimension, onClose: onClose, containerStage: containerStage, openOn: openOn, inside: inside});
	        }
	        else {
	            return React.createElement(string_filter_menu_1.StringFilterMenu, {essence: essence, timekeeper: timekeeper, clicker: clicker, dimension: dimension, changePosition: changePosition, onClose: onClose, containerStage: containerStage, openOn: openOn, inside: inside});
	        }
	    };
	    return FilterMenu;
	}(React.Component));
	exports.FilterMenu = FilterMenu;


/***/ },
/* 393 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(394);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./filter-menu.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./filter-menu.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 394 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".filter-menu .button-bar{margin-top:12px}.filter-menu .button-bar button{min-width:70px}.filter-menu .button-bar button:not(:last-child){margin-right:6px}\n", ""]);

	// exports


/***/ },
/* 395 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(396);
	var React = __webpack_require__(5);
	var index_1 = __webpack_require__(202);
	var bubble_menu_1 = __webpack_require__(297);
	var preview_string_filter_menu_1 = __webpack_require__(398);
	var selectable_string_filter_menu_1 = __webpack_require__(403);
	var clearable_input_1 = __webpack_require__(328);
	var filter_options_dropdown_1 = __webpack_require__(406);
	var StringFilterMenu = (function (_super) {
	    __extends(StringFilterMenu, _super);
	    function StringFilterMenu() {
	        _super.call(this);
	        this.state = {
	            filterMode: null,
	            searchText: null
	        };
	    }
	    StringFilterMenu.prototype.componentWillMount = function () {
	        var _a = this.props, essence = _a.essence, dimension = _a.dimension;
	        var colors = essence.colors;
	        var filterMode = essence.filter.getModeForDimension(dimension);
	        if (filterMode && !this.state.filterMode) {
	            this.setState({ filterMode: filterMode });
	        }
	        else if (colors) {
	            this.setState({ filterMode: index_1.Filter.INCLUDED });
	        }
	    };
	    StringFilterMenu.prototype.onSelectFilterOption = function (filterMode) {
	        this.setState({ filterMode: filterMode });
	    };
	    StringFilterMenu.prototype.updateSearchText = function (searchText) {
	        this.setState({ searchText: searchText });
	    };
	    StringFilterMenu.prototype.updateFilter = function (clause) {
	        var _a = this.props, essence = _a.essence, dimension = _a.dimension, changePosition = _a.changePosition;
	        var filter = essence.filter;
	        if (!clause)
	            return filter.remove(dimension.expression);
	        if (changePosition) {
	            if (changePosition.isInsert()) {
	                return filter.insertByIndex(changePosition.insert, clause);
	            }
	            else {
	                return filter.replaceByIndex(changePosition.replace, clause);
	            }
	        }
	        else {
	            return filter.setClause(clause);
	        }
	    };
	    StringFilterMenu.prototype.getFilterOptions = function () {
	        var dimension = this.props.dimension;
	        var dimensionKind = dimension.kind;
	        var filterOptions = filter_options_dropdown_1.FilterOptionsDropdown.getFilterOptions(index_1.Filter.INCLUDED, index_1.Filter.EXCLUDED);
	        if (dimensionKind !== 'boolean')
	            filterOptions = filterOptions.concat(filter_options_dropdown_1.FilterOptionsDropdown.getFilterOptions(index_1.Filter.REGEX, index_1.Filter.CONTAINS));
	        return filterOptions;
	    };
	    StringFilterMenu.prototype.renderMenuControls = function () {
	        var _a = this.state, filterMode = _a.filterMode, searchText = _a.searchText;
	        return React.createElement("div", {className: "string-filter-menu-controls"}, 
	            React.createElement("div", {className: "side-by-side"}, 
	                React.createElement(filter_options_dropdown_1.FilterOptionsDropdown, {selectedOption: filterMode, onSelectOption: this.onSelectFilterOption.bind(this), filterOptions: this.getFilterOptions()}), 
	                React.createElement("div", {className: "search-box"}, 
	                    React.createElement(clearable_input_1.ClearableInput, {placeholder: "Search", focusOnMount: true, value: searchText, onChange: this.updateSearchText.bind(this)})
	                ))
	        );
	    };
	    StringFilterMenu.prototype.render = function () {
	        var _a = this.props, dimension = _a.dimension, clicker = _a.clicker, essence = _a.essence, timekeeper = _a.timekeeper, onClose = _a.onClose, containerStage = _a.containerStage, openOn = _a.openOn, inside = _a.inside;
	        var _b = this.state, filterMode = _b.filterMode, searchText = _b.searchText;
	        if (!dimension)
	            return null;
	        var menuSize = null;
	        var menuCont = null;
	        if (filterMode === index_1.Filter.REGEX || filterMode === index_1.Filter.CONTAINS) {
	            menuSize = index_1.Stage.fromSize(350, 410);
	            menuCont = React.createElement(preview_string_filter_menu_1.PreviewStringFilterMenu, {dimension: dimension, clicker: clicker, essence: essence, timekeeper: timekeeper, onClose: onClose, searchText: searchText, filterMode: filterMode, onClauseChange: this.updateFilter.bind(this)});
	        }
	        else {
	            menuSize = index_1.Stage.fromSize(250, 410);
	            menuCont = React.createElement(selectable_string_filter_menu_1.SelectableStringFilterMenu, {dimension: dimension, clicker: clicker, essence: essence, timekeeper: timekeeper, onClose: onClose, searchText: searchText, filterMode: filterMode, onClauseChange: this.updateFilter.bind(this)});
	        }
	        return React.createElement(bubble_menu_1.BubbleMenu, {className: "string-filter-menu", direction: "down", containerStage: containerStage, stage: menuSize, openOn: openOn, onClose: onClose, inside: inside}, 
	            this.renderMenuControls(), 
	            menuCont);
	    };
	    return StringFilterMenu;
	}(React.Component));
	exports.StringFilterMenu = StringFilterMenu;


/***/ },
/* 396 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(397);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./string-filter-menu.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./string-filter-menu.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 397 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".string-filter-menu .side-by-side{display:-webkit-box;display:-ms-flexbox;display:flex}.string-filter-menu .side-by-side>*{margin-right:5px}.string-filter-menu .side-by-side>*:last-child{margin-right:0}.string-filter-menu .search-box .clearable-input{background:#fff;border:1px solid #d1d1d1;border-radius:2px;box-shadow:inset 0 1px 1px 0 rgba(0,0,0,0.1)}.string-filter-menu .menu-table::after{position:absolute;top:0;bottom:0;left:0;right:0;content:'';pointer-events:none;box-shadow:inset 0 -20px 10px -10px #fff;border-radius:2px}.string-filter-menu .side-by-side :not(:last-child){margin-right:0}.string-filter-menu .search-box{height:30px;margin-left:6px;width:100%}.string-filter-menu .search-box .clearable-input{width:100%;height:30px;padding-left:6px}.string-filter-menu .menu-table{background:#fff;color:#000}.string-filter-menu .menu-table::after{position:absolute;top:0;bottom:0;left:-14px;right:-14px}.string-filter-menu .menu-table .rows{height:280px;margin-top:10px;margin-left:-14px;margin-right:-14px;overflow:auto}.string-filter-menu .menu-table .row{height:24px;cursor:pointer;padding:0 14px}.string-filter-menu .menu-table .row .row-wrapper{white-space:nowrap;overflow-x:hidden;text-overflow:ellipsis;height:100%}.string-filter-menu .menu-table .row .row-wrapper .label{display:inline-block;vertical-align:top;padding-top:4px}.string-filter-menu .menu-table .row:hover{background:#e3f4fc}.string-filter-menu .menu-table .row:last-child{margin-bottom:12px}.string-filter-menu .menu-table .row.no-select{pointer-events:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.string-filter-menu .menu-table .message{padding:4px 10px;color:#999;font-style:italic}.string-filter-menu .menu-table .matching-values-message{padding:4px 10px;color:#999}.string-filter-menu .menu-table .loader,.string-filter-menu .menu-table .query-error{position:absolute;top:0;bottom:0;left:0;right:0}\n", ""]);

	// exports


/***/ },
/* 398 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(399);
	var React = __webpack_require__(5);
	var plywood_1 = __webpack_require__(199);
	var general_1 = __webpack_require__(209);
	var constants_1 = __webpack_require__(292);
	var index_1 = __webpack_require__(202);
	var dom_1 = __webpack_require__(300);
	var loader_1 = __webpack_require__(184);
	var query_error_1 = __webpack_require__(379);
	var highlight_string_1 = __webpack_require__(350);
	var button_1 = __webpack_require__(314);
	var global_event_listener_1 = __webpack_require__(401);
	var TOP_N = 100;
	var PreviewStringFilterMenu = (function (_super) {
	    __extends(PreviewStringFilterMenu, _super);
	    function PreviewStringFilterMenu() {
	        var _this = this;
	        _super.call(this);
	        this.state = {
	            loading: false,
	            dataset: null,
	            queryError: null,
	            fetchQueued: false,
	            regexErrorMessage: ""
	        };
	        this.collectTriggerSearch = general_1.collect(constants_1.SEARCH_WAIT, function () {
	            if (!_this.mounted)
	                return;
	            var _a = _this.props, essence = _a.essence, timekeeper = _a.timekeeper, dimension = _a.dimension, searchText = _a.searchText;
	            _this.fetchData(essence, timekeeper, dimension, searchText);
	        });
	    }
	    PreviewStringFilterMenu.prototype.fetchData = function (essence, timekeeper, dimension, searchText) {
	        var _this = this;
	        var dataCube = essence.dataCube;
	        var nativeCount = dataCube.getMeasure('count');
	        var measureExpression = nativeCount ? nativeCount.expression : plywood_1.$('main').count();
	        var filterExpression = essence.getEffectiveFilter(timekeeper, null, dimension).toExpression();
	        var query = plywood_1.$('main')
	            .filter(filterExpression)
	            .split(dimension.expression, dimension.name)
	            .apply('MEASURE', measureExpression)
	            .sort(plywood_1.$('MEASURE'), plywood_1.SortAction.DESCENDING)
	            .limit(TOP_N + 1);
	        this.setState({
	            loading: true,
	            fetchQueued: false
	        });
	        dataCube.executor(query, { timezone: essence.timezone })
	            .then(function (dataset) {
	            if (!_this.mounted)
	                return;
	            _this.setState({
	                loading: false,
	                dataset: dataset,
	                queryError: null
	            });
	        }, function (error) {
	            if (!_this.mounted)
	                return;
	            _this.setState({
	                loading: false,
	                dataset: null,
	                queryError: error
	            });
	        });
	    };
	    PreviewStringFilterMenu.prototype.componentWillMount = function () {
	        var _a = this.props, essence = _a.essence, timekeeper = _a.timekeeper, dimension = _a.dimension, searchText = _a.searchText, filterMode = _a.filterMode;
	        if (searchText && filterMode === index_1.Filter.REGEX && !this.checkRegex(searchText))
	            return;
	        this.fetchData(essence, timekeeper, dimension, searchText);
	    };
	    PreviewStringFilterMenu.prototype.componentDidMount = function () {
	        this.mounted = true;
	    };
	    PreviewStringFilterMenu.prototype.componentWillUnmount = function () {
	        this.mounted = false;
	    };
	    PreviewStringFilterMenu.prototype.componentWillReceiveProps = function (nextProps) {
	        var _a = this.props, searchText = _a.searchText, filterMode = _a.filterMode;
	        var incomingSearchText = nextProps.searchText;
	        var _b = this.state, fetchQueued = _b.fetchQueued, loading = _b.loading, dataset = _b.dataset;
	        if (incomingSearchText && filterMode === index_1.Filter.REGEX)
	            this.checkRegex(incomingSearchText);
	        if (incomingSearchText && incomingSearchText.indexOf(searchText) !== -1 && !fetchQueued && !loading && dataset && dataset.data.length < TOP_N) {
	            return;
	        }
	        else {
	            this.setState({
	                fetchQueued: true
	            });
	            this.collectTriggerSearch();
	        }
	    };
	    PreviewStringFilterMenu.prototype.checkRegex = function (text) {
	        try {
	            new RegExp(text);
	            this.setState({ regexErrorMessage: null });
	        }
	        catch (e) {
	            this.setState({ regexErrorMessage: e.message });
	            return false;
	        }
	        return true;
	    };
	    PreviewStringFilterMenu.prototype.globalKeyDownListener = function (e) {
	        if (dom_1.enterKey(e)) {
	            this.onOkClick();
	        }
	    };
	    PreviewStringFilterMenu.prototype.constructFilter = function () {
	        var _a = this.props, dimension = _a.dimension, filterMode = _a.filterMode, onClauseChange = _a.onClauseChange, searchText = _a.searchText;
	        var expression = dimension.expression;
	        var clause = null;
	        if (searchText) {
	            if (filterMode === index_1.Filter.REGEX) {
	                clause = new index_1.FilterClause({
	                    expression: expression,
	                    selection: searchText,
	                    action: 'match'
	                });
	            }
	            else if (filterMode === index_1.Filter.CONTAINS) {
	                clause = new index_1.FilterClause({
	                    expression: expression,
	                    selection: plywood_1.r(searchText),
	                    action: 'contains'
	                });
	            }
	        }
	        return onClauseChange(clause);
	    };
	    PreviewStringFilterMenu.prototype.onOkClick = function () {
	        if (!this.actionEnabled())
	            return;
	        var _a = this.props, clicker = _a.clicker, onClose = _a.onClose;
	        clicker.changeFilter(this.constructFilter());
	        onClose();
	    };
	    PreviewStringFilterMenu.prototype.onCancelClick = function () {
	        var onClose = this.props.onClose;
	        onClose();
	    };
	    PreviewStringFilterMenu.prototype.actionEnabled = function () {
	        var regexErrorMessage = this.state.regexErrorMessage;
	        var essence = this.props.essence;
	        if (regexErrorMessage)
	            return false;
	        return !essence.filter.equals(this.constructFilter());
	    };
	    PreviewStringFilterMenu.prototype.renderRows = function () {
	        var _a = this.state, loading = _a.loading, dataset = _a.dataset, fetchQueued = _a.fetchQueued, regexErrorMessage = _a.regexErrorMessage;
	        var _b = this.props, dimension = _b.dimension, searchText = _b.searchText, filterMode = _b.filterMode;
	        var rows = [];
	        var search = null;
	        if (dataset) {
	            var rowStrings = dataset.data.slice(0, TOP_N).map(function (d) { return d[dimension.name]; });
	            if (searchText) {
	                rowStrings = rowStrings.filter(function (d) {
	                    if (filterMode === index_1.Filter.REGEX) {
	                        try {
	                            var escaped = searchText.replace(/\\[^\\]]/g, '\\\\');
	                            search = new RegExp(escaped);
	                            return search.test(String(d));
	                        }
	                        catch (e) {
	                            return false;
	                        }
	                    }
	                    else if (filterMode === index_1.Filter.CONTAINS) {
	                        search = searchText;
	                        return String(d).toLowerCase().indexOf(searchText.toLowerCase()) !== -1;
	                    }
	                    return false;
	                });
	            }
	            rows = rowStrings.map(function (segmentValue) {
	                var segmentValueStr = String(segmentValue);
	                return React.createElement("div", {className: "row no-select", key: segmentValueStr, title: segmentValueStr}, 
	                    React.createElement("div", {className: "row-wrapper"}, 
	                        React.createElement(highlight_string_1.HighlightString, {className: "label", text: segmentValueStr, highlight: search})
	                    )
	                );
	            });
	        }
	        var grayMessage = null;
	        if (regexErrorMessage) {
	            grayMessage = React.createElement("div", {className: "message"}, regexErrorMessage);
	        }
	        else if (!loading && dataset && !fetchQueued && searchText && !rows.length) {
	            grayMessage = React.createElement("div", {className: "message"}, 'No results for "' + searchText + '"');
	        }
	        return React.createElement("div", {className: "rows"}, 
	            (rows.length === 0 || !searchText) ? null : React.createElement("div", {className: "matching-values-message"}, "Matching Values"), 
	            rows, 
	            grayMessage);
	    };
	    PreviewStringFilterMenu.prototype.render = function () {
	        var filterMode = this.props.filterMode;
	        var _a = this.state, dataset = _a.dataset, loading = _a.loading, queryError = _a.queryError;
	        var hasMore = dataset && dataset.data.length > TOP_N;
	        return React.createElement("div", {className: dom_1.classNames("string-filter-menu", filterMode)}, 
	            React.createElement(global_event_listener_1.GlobalEventListener, {keyDown: this.globalKeyDownListener.bind(this)}), 
	            React.createElement("div", {className: dom_1.classNames('menu-table', hasMore ? 'has-more' : 'no-more')}, 
	                this.renderRows(), 
	                queryError ? React.createElement(query_error_1.QueryError, {error: queryError}) : null, 
	                loading ? React.createElement(loader_1.Loader, null) : null), 
	            React.createElement("div", {className: "ok-cancel-bar"}, 
	                React.createElement(button_1.Button, {type: "primary", title: constants_1.STRINGS.ok, onClick: this.onOkClick.bind(this), disabled: !this.actionEnabled()}), 
	                React.createElement(button_1.Button, {type: "secondary", title: constants_1.STRINGS.cancel, onClick: this.onCancelClick.bind(this)})));
	    };
	    return PreviewStringFilterMenu;
	}(React.Component));
	exports.PreviewStringFilterMenu = PreviewStringFilterMenu;


/***/ },
/* 399 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(400);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./preview-string-filter-menu.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./preview-string-filter-menu.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 400 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".string-filter-menu .row.no-select{pointer-events:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.string-filter-menu .matching-values-message{padding:4px 10px;color:#999}\n", ""]);

	// exports


/***/ },
/* 401 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var React = __webpack_require__(5);
	var string_1 = __webpack_require__(402);
	var dom_1 = __webpack_require__(300);
	var GlobalEventListener = (function (_super) {
	    __extends(GlobalEventListener, _super);
	    function GlobalEventListener() {
	        _super.call(this);
	        this.propsToEvents = {
	            resize: 'resize',
	            scroll: 'scroll',
	            mouseDown: 'mousedown',
	            mouseMove: 'mousemove',
	            mouseUp: 'mouseup',
	            keyDown: 'keydown',
	            enter: 'keydown',
	            escape: 'keydown',
	            right: 'keydown',
	            left: 'keydown'
	        };
	        this.onResize = this.onResize.bind(this);
	        this.onMousemove = this.onMousemove.bind(this);
	        this.onMouseup = this.onMouseup.bind(this);
	        this.onMousedown = this.onMousedown.bind(this);
	        this.onKeydown = this.onKeydown.bind(this);
	        this.onScroll = this.onScroll.bind(this);
	    }
	    GlobalEventListener.prototype.componentWillReceiveProps = function (nextProps) {
	        this.refreshListeners(nextProps, this.props);
	    };
	    GlobalEventListener.prototype.componentDidMount = function () {
	        this.refreshListeners(this.props);
	    };
	    GlobalEventListener.prototype.componentWillUnmount = function () {
	        for (var prop in this.propsToEvents) {
	            this.removeListener(this.propsToEvents[prop]);
	        }
	    };
	    GlobalEventListener.prototype.refreshListeners = function (nextProps, currentProps) {
	        if (currentProps === void 0) { currentProps = {}; }
	        var toAdd = [];
	        var toRemove = [];
	        for (var prop in this.propsToEvents) {
	            var event_1 = this.propsToEvents[prop];
	            if (currentProps[prop] && nextProps[prop])
	                continue;
	            if (nextProps[prop] && toAdd.indexOf(event_1) === -1) {
	                toAdd.push(event_1);
	            }
	            else if (currentProps[prop] && toRemove.indexOf(event_1) === -1) {
	                toRemove.push(event_1);
	            }
	        }
	        toRemove.forEach(this.removeListener, this);
	        toAdd.forEach(this.addListener, this);
	    };
	    GlobalEventListener.prototype.addListener = function (event) {
	        var useCapture = event === 'scroll';
	        window.addEventListener(event, this[("on" + string_1.firstUp(event))], useCapture);
	    };
	    GlobalEventListener.prototype.removeListener = function (event) {
	        window.removeEventListener(event, this[("on" + string_1.firstUp(event))]);
	    };
	    GlobalEventListener.prototype.onResize = function () {
	        if (this.props.resize)
	            this.props.resize();
	    };
	    GlobalEventListener.prototype.onScroll = function () {
	        if (this.props.scroll)
	            this.props.scroll();
	    };
	    GlobalEventListener.prototype.onMousedown = function (e) {
	        if (this.props.mouseDown)
	            this.props.mouseDown(e);
	    };
	    GlobalEventListener.prototype.onMousemove = function (e) {
	        if (this.props.mouseMove)
	            this.props.mouseMove(e);
	    };
	    GlobalEventListener.prototype.onMouseup = function (e) {
	        if (this.props.mouseUp)
	            this.props.mouseUp(e);
	    };
	    GlobalEventListener.prototype.onKeydown = function (e) {
	        if (this.props.escape && dom_1.escapeKey(e))
	            this.props.escape(e);
	        if (this.props.enter && dom_1.enterKey(e))
	            this.props.enter(e);
	        if (this.props.right && dom_1.rightKey(e))
	            this.props.right(e);
	        if (this.props.left && dom_1.leftKey(e))
	            this.props.left(e);
	        if (this.props.keyDown)
	            this.props.keyDown(e);
	    };
	    GlobalEventListener.prototype.render = function () {
	        return null;
	    };
	    return GlobalEventListener;
	}(React.Component));
	exports.GlobalEventListener = GlobalEventListener;


/***/ },
/* 402 */
/***/ function(module, exports) {

	"use strict";
	exports.IP_REGEX = /^(\d|[1-9]\d|1\d\d|2([0-4]\d|5[0-5]))\.(\d|[1-9]\d|1\d\d|2([0-4]\d|5[0-5]))\.(\d|[1-9]\d|1\d\d|2([0-4]\d|5[0-5]))\.(\d|[1-9]\d|1\d\d|2([0-4]\d|5[0-5]))$/;
	exports.NUM_REGEX = /^\d+$/;
	function firstUp(str) {
	    return str ? str.charAt(0).toUpperCase() + str.slice(1) : undefined;
	}
	exports.firstUp = firstUp;
	function pad(n, padding) {
	    if (padding === void 0) { padding = 3; }
	    var str = String(n);
	    if (str.length > padding)
	        return str;
	    while (str.length < padding)
	        str = '0' + str;
	    return str;
	}
	exports.pad = pad;
	function generateUniqueName(prefix, isUnique) {
	    var i = 0;
	    var name = prefix + pad(i);
	    while (!isUnique(name)) {
	        name = prefix + pad(++i);
	    }
	    return name;
	}
	exports.generateUniqueName = generateUniqueName;


/***/ },
/* 403 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(404);
	var React = __webpack_require__(5);
	var plywood_1 = __webpack_require__(199);
	var general_1 = __webpack_require__(209);
	var constants_1 = __webpack_require__(292);
	var index_1 = __webpack_require__(202);
	var dom_1 = __webpack_require__(300);
	var checkbox_1 = __webpack_require__(323);
	var loader_1 = __webpack_require__(184);
	var query_error_1 = __webpack_require__(379);
	var highlight_string_1 = __webpack_require__(350);
	var button_1 = __webpack_require__(314);
	var global_event_listener_1 = __webpack_require__(401);
	var TOP_N = 100;
	var SelectableStringFilterMenu = (function (_super) {
	    __extends(SelectableStringFilterMenu, _super);
	    function SelectableStringFilterMenu() {
	        var _this = this;
	        _super.call(this);
	        this.state = {
	            loading: false,
	            dataset: null,
	            error: null,
	            fetchQueued: false,
	            selectedValues: null,
	            promotedValues: null,
	            colors: null
	        };
	        this.collectTriggerSearch = general_1.collect(constants_1.SEARCH_WAIT, function () {
	            if (!_this.mounted)
	                return;
	            var _a = _this.props, essence = _a.essence, timekeeper = _a.timekeeper, dimension = _a.dimension, searchText = _a.searchText;
	            _this.fetchData(essence, timekeeper, dimension, searchText);
	        });
	    }
	    SelectableStringFilterMenu.prototype.fetchData = function (essence, timekeeper, dimension, searchText) {
	        var _this = this;
	        var dataCube = essence.dataCube;
	        var nativeCount = dataCube.getMeasure('count');
	        var measureExpression = nativeCount ? nativeCount.expression : plywood_1.$('main').count();
	        var filterExpression = essence.getEffectiveFilter(timekeeper, null, dimension).toExpression();
	        if (searchText) {
	            filterExpression = filterExpression.and(dimension.expression.contains(plywood_1.r(searchText), 'ignoreCase'));
	        }
	        var query = plywood_1.$('main')
	            .filter(filterExpression)
	            .split(dimension.expression, dimension.name)
	            .apply('MEASURE', measureExpression)
	            .sort(plywood_1.$('MEASURE'), plywood_1.SortAction.DESCENDING)
	            .limit(TOP_N + 1);
	        this.setState({
	            loading: true,
	            fetchQueued: false
	        });
	        dataCube.executor(query, { timezone: essence.timezone })
	            .then(function (dataset) {
	            if (!_this.mounted)
	                return;
	            _this.setState({
	                loading: false,
	                dataset: dataset,
	                error: null
	            });
	        }, function (error) {
	            if (!_this.mounted)
	                return;
	            _this.setState({
	                loading: false,
	                dataset: null,
	                error: error
	            });
	        });
	    };
	    SelectableStringFilterMenu.prototype.componentWillMount = function () {
	        var _a = this.props, essence = _a.essence, timekeeper = _a.timekeeper, dimension = _a.dimension, searchText = _a.searchText;
	        var filter = essence.filter, colors = essence.colors;
	        var myColors = (colors && colors.dimension === dimension.name ? colors : null);
	        var existingMode = filter.getModeForDimension(dimension);
	        var valueSet = filter.getLiteralSet(dimension.expression);
	        var selectedValues = (existingMode !== 'match' && valueSet) || (myColors ? myColors.toSet() : null) || plywood_1.Set.EMPTY;
	        this.setState({
	            selectedValues: selectedValues,
	            promotedValues: selectedValues,
	            colors: myColors
	        });
	        this.fetchData(essence, timekeeper, dimension, searchText);
	    };
	    SelectableStringFilterMenu.prototype.componentDidMount = function () {
	        this.mounted = true;
	    };
	    SelectableStringFilterMenu.prototype.componentWillUnmount = function () {
	        this.mounted = false;
	    };
	    SelectableStringFilterMenu.prototype.componentWillReceiveProps = function (nextProps) {
	        var searchText = this.props.searchText;
	        var _a = this.state, fetchQueued = _a.fetchQueued, loading = _a.loading, dataset = _a.dataset;
	        if (nextProps.searchText && nextProps.searchText.indexOf(searchText) !== -1 && !fetchQueued && !loading && dataset && dataset.data.length < TOP_N) {
	            return;
	        }
	        else {
	            this.setState({
	                fetchQueued: true
	            });
	            this.collectTriggerSearch();
	        }
	    };
	    SelectableStringFilterMenu.prototype.globalKeyDownListener = function (e) {
	        if (dom_1.enterKey(e)) {
	            this.onOkClick();
	        }
	    };
	    SelectableStringFilterMenu.prototype.constructFilter = function () {
	        var _a = this.props, dimension = _a.dimension, filterMode = _a.filterMode, onClauseChange = _a.onClauseChange;
	        var selectedValues = this.state.selectedValues;
	        var expression = dimension.expression;
	        var clause = null;
	        if (selectedValues.size()) {
	            clause = new index_1.FilterClause({
	                expression: expression,
	                selection: plywood_1.r(selectedValues),
	                exclude: filterMode === index_1.Filter.EXCLUDED
	            });
	        }
	        return onClauseChange(clause);
	    };
	    SelectableStringFilterMenu.prototype.onValueClick = function (value, e) {
	        var _a = this.state, selectedValues = _a.selectedValues, colors = _a.colors;
	        if (colors) {
	            colors = colors.toggle(value);
	            selectedValues = selectedValues.toggle(value);
	        }
	        else {
	            if (e.altKey || e.ctrlKey || e.metaKey) {
	                if (selectedValues.contains(value) && selectedValues.size() === 1) {
	                    selectedValues = plywood_1.Set.EMPTY;
	                }
	                else {
	                    selectedValues = plywood_1.Set.EMPTY.add(value);
	                }
	            }
	            else {
	                selectedValues = selectedValues.toggle(value);
	            }
	        }
	        this.setState({
	            selectedValues: selectedValues,
	            colors: colors
	        });
	    };
	    SelectableStringFilterMenu.prototype.onOkClick = function () {
	        if (!this.actionEnabled())
	            return;
	        var _a = this.props, clicker = _a.clicker, onClose = _a.onClose;
	        var colors = this.state.colors;
	        clicker.changeFilter(this.constructFilter(), colors);
	        onClose();
	    };
	    SelectableStringFilterMenu.prototype.onCancelClick = function () {
	        var onClose = this.props.onClose;
	        onClose();
	    };
	    SelectableStringFilterMenu.prototype.actionEnabled = function () {
	        var essence = this.props.essence;
	        return !essence.filter.equals(this.constructFilter());
	    };
	    SelectableStringFilterMenu.prototype.renderRows = function () {
	        var _this = this;
	        var _a = this.state, loading = _a.loading, dataset = _a.dataset, fetchQueued = _a.fetchQueued, selectedValues = _a.selectedValues, promotedValues = _a.promotedValues;
	        var _b = this.props, dimension = _b.dimension, filterMode = _b.filterMode, searchText = _b.searchText;
	        var rows = [];
	        if (dataset) {
	            var promotedElements = promotedValues ? promotedValues.elements : [];
	            var rowData = dataset.data.slice(0, TOP_N).filter(function (d) {
	                return promotedElements.indexOf(d[dimension.name]) === -1;
	            });
	            var rowStrings = promotedElements.concat(rowData.map(function (d) { return d[dimension.name]; }));
	            if (searchText) {
	                var searchTextLower = searchText.toLowerCase();
	                rowStrings = rowStrings.filter(function (d) {
	                    return String(d).toLowerCase().indexOf(searchTextLower) !== -1;
	                });
	            }
	            var checkboxType = filterMode === index_1.Filter.EXCLUDED ? 'cross' : 'check';
	            rows = rowStrings.map(function (segmentValue) {
	                var segmentValueStr = String(segmentValue);
	                var selected = selectedValues && selectedValues.contains(segmentValue);
	                return React.createElement("div", {className: dom_1.classNames('row', { 'selected': selected }), key: segmentValueStr, title: segmentValueStr, onClick: _this.onValueClick.bind(_this, segmentValue)}, 
	                    React.createElement("div", {className: "row-wrapper"}, 
	                        React.createElement(checkbox_1.Checkbox, {type: checkboxType, selected: selected}), 
	                        React.createElement(highlight_string_1.HighlightString, {className: "label", text: segmentValueStr, highlight: searchText}))
	                );
	            });
	        }
	        var message = null;
	        if (!loading && dataset && !fetchQueued && searchText && !rows.length) {
	            message = React.createElement("div", {className: "message"}, 'No results for "' + searchText + '"');
	        }
	        return React.createElement("div", {className: "rows"}, 
	            rows, 
	            message);
	    };
	    SelectableStringFilterMenu.prototype.render = function () {
	        var filterMode = this.props.filterMode;
	        var _a = this.state, dataset = _a.dataset, loading = _a.loading, error = _a.error;
	        var hasMore = dataset && dataset.data.length > TOP_N;
	        return React.createElement("div", {className: dom_1.classNames("string-filter-menu", filterMode)}, 
	            React.createElement(global_event_listener_1.GlobalEventListener, {keyDown: this.globalKeyDownListener.bind(this)}), 
	            React.createElement("div", {className: dom_1.classNames('menu-table', hasMore ? 'has-more' : 'no-more')}, 
	                this.renderRows(), 
	                error ? React.createElement(query_error_1.QueryError, {error: error}) : null, 
	                loading ? React.createElement(loader_1.Loader, null) : null), 
	            React.createElement("div", {className: "ok-cancel-bar"}, 
	                React.createElement(button_1.Button, {type: "primary", title: constants_1.STRINGS.ok, onClick: this.onOkClick.bind(this), disabled: !this.actionEnabled()}), 
	                React.createElement(button_1.Button, {type: "secondary", title: constants_1.STRINGS.cancel, onClick: this.onCancelClick.bind(this)})));
	    };
	    return SelectableStringFilterMenu;
	}(React.Component));
	exports.SelectableStringFilterMenu = SelectableStringFilterMenu;


/***/ },
/* 404 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(405);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./selectable-string-filter-menu.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./selectable-string-filter-menu.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 405 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".string-filter-menu .row{height:24px;cursor:pointer;padding:0 14px}.string-filter-menu .row:hover{background:#e3f4fc}\n", ""]);

	// exports


/***/ },
/* 406 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(407);
	var React = __webpack_require__(5);
	var constants_1 = __webpack_require__(292);
	var index_1 = __webpack_require__(202);
	var dropdown_1 = __webpack_require__(307);
	var svg_icon_1 = __webpack_require__(187);
	var FILTER_OPTIONS = [
	    {
	        label: constants_1.STRINGS.include,
	        value: index_1.Filter.INCLUDED,
	        svg: __webpack_require__(409),
	        checkType: 'check'
	    },
	    {
	        label: constants_1.STRINGS.exclude,
	        value: index_1.Filter.EXCLUDED,
	        svg: __webpack_require__(410),
	        checkType: 'cross'
	    },
	    {
	        label: constants_1.STRINGS.contains,
	        value: index_1.Filter.CONTAINS,
	        svg: __webpack_require__(411)
	    },
	    {
	        label: constants_1.STRINGS.regex,
	        value: index_1.Filter.REGEX,
	        svg: __webpack_require__(412)
	    }
	];
	var FilterOptionsDropdown = (function (_super) {
	    __extends(FilterOptionsDropdown, _super);
	    function FilterOptionsDropdown() {
	        _super.call(this);
	    }
	    FilterOptionsDropdown.getFilterOptions = function () {
	        var filterTypes = [];
	        for (var _i = 0; _i < arguments.length; _i++) {
	            filterTypes[_i - 0] = arguments[_i];
	        }
	        return FILTER_OPTIONS.filter(function (option) { return filterTypes.indexOf(option.value) !== -1; });
	    };
	    FilterOptionsDropdown.prototype.onSelectOption = function (option) {
	        this.props.onSelectOption(option.value);
	    };
	    FilterOptionsDropdown.prototype.renderFilterOption = function (option) {
	        return React.createElement("span", {className: "filter-option"}, 
	            React.createElement(svg_icon_1.SvgIcon, {className: "icon", svg: option.svg}), 
	            React.createElement("span", {className: "option-label"}, option.label));
	    };
	    FilterOptionsDropdown.prototype.render = function () {
	        var _a = this.props, selectedOption = _a.selectedOption, onSelectOption = _a.onSelectOption, filterOptions = _a.filterOptions;
	        var FilterDropdown = dropdown_1.Dropdown.specialize();
	        var options = filterOptions || FILTER_OPTIONS;
	        var selectedItem = options.filter(function (o) { return o.value === selectedOption; })[0] || options[0];
	        return React.createElement("div", {className: "filter-options-dropdown"}, 
	            React.createElement(FilterDropdown, {menuClassName: "filter-options", items: options, selectedItem: selectedItem, equal: function (a, b) { return a.value === b.value; }, keyItem: function (d) { return d.value; }, renderItem: this.renderFilterOption.bind(this), renderSelectedItem: function (d) { return React.createElement(svg_icon_1.SvgIcon, {className: "icon", svg: d.svg}); }, onSelect: this.onSelectOption.bind(this)})
	        );
	    };
	    return FilterOptionsDropdown;
	}(React.Component));
	exports.FilterOptionsDropdown = FilterOptionsDropdown;


/***/ },
/* 407 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(408);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./filter-options-dropdown.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./filter-options-dropdown.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 408 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".filter-options-dropdown .selected-item{padding:8px 16px 0 4px}.filter-options-dropdown .selected-item .icon{padding:0;bottom:4px}.filter-options-dropdown .selected-item .caret-icon{right:6px}.filter-options-dropdown .dropdown-menu{width:180px}.filter-options-dropdown .dropdown-menu .filter-option{display:block}.filter-options-dropdown .dropdown-menu .filter-option .option-label{display:inline-block;padding:2px 10px}.filter-options-dropdown svg.icon{display:inline-block;padding:5px 0;cursor:pointer;width:19px}.filter-options-dropdown svg.icon path{fill:#888}\n", ""]);

	// exports


/***/ },
/* 409 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 19 19\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M6,2 L9,2 L9,9 L2,9 L2,6 L6,6 L6,2 Z M0,0 L11,0 L11,11 L0,11 L0,0 Z\" transform=\"translate(4 4)\" fill=\"#000000\" fill-rule=\"evenodd\"/></svg>"

/***/ },
/* 410 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 19 19\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M0,0 L11,0 L11,11 L0,11 L0,0 Z M2,2 L6,2 L6,6 L2,6 L2,2 Z\" transform=\"translate(4 4)\" fill=\"#000000\" fill-rule=\"evenodd\"/></svg>"

/***/ },
/* 411 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 19 19\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M14.5,15 L16,15 L16,4 L14.5,4 L12,4 L12,6 L14,6 L14,13 L12,13 L12,15 L14.5,15 L14.5,15 Z M4.5,15 L3,15 L3,4 L4.5,4 L7,4 L7,6 L5,6 L5,13 L7,13 L7,15 L4.5,15 L4.5,15 Z\" fill=\"#000000\" fill-rule=\"evenodd\"/></svg>"

/***/ },
/* 412 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 19 19\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M5.92717929,14.6492358 L9.92717929,4.74923579 L8.07282071,4 L4.07282071,13.9 L5.92717929,14.6492358 Z M10.9271793,14.6492358 L14.9271793,4.74923579 L13.0728207,4 L9.07282071,13.9 L10.9271793,14.6492358 Z\" fill=\"#000000\" fill-rule=\"evenodd\"/></svg>"

/***/ },
/* 413 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(414);
	var React = __webpack_require__(5);
	var chronoshift_1 = __webpack_require__(191);
	var plywood_1 = __webpack_require__(199);
	var constants_1 = __webpack_require__(292);
	var index_1 = __webpack_require__(202);
	var time_1 = __webpack_require__(221);
	var dom_1 = __webpack_require__(300);
	var button_1 = __webpack_require__(314);
	var button_group_1 = __webpack_require__(317);
	var date_range_picker_1 = __webpack_require__(334);
	var stage_1 = __webpack_require__(203);
	var bubble_menu_1 = __webpack_require__(297);
	function makeDateIntoTimeRange(input, timezone) {
	    return new plywood_1.TimeRange({ start: chronoshift_1.second.shift(input, timezone, -1), end: chronoshift_1.second.shift(input, timezone, 1) });
	}
	var $maxTime = plywood_1.$(index_1.FilterClause.MAX_TIME_REF_NAME);
	var latestPresets = [
	    { name: '1H', selection: $maxTime.timeRange('PT1H', -1) },
	    { name: '6H', selection: $maxTime.timeRange('PT6H', -1) },
	    { name: '1D', selection: $maxTime.timeRange('P1D', -1) },
	    { name: '7D', selection: $maxTime.timeRange('P1D', -7) },
	    { name: '30D', selection: $maxTime.timeRange('P1D', -30) }
	];
	var $now = plywood_1.$(index_1.FilterClause.NOW_REF_NAME);
	var currentPresets = [
	    { name: 'D', selection: $now.timeBucket('P1D') },
	    { name: 'W', selection: $now.timeBucket('P1W') },
	    { name: 'M', selection: $now.timeBucket('P1M') },
	    { name: 'Q', selection: $now.timeBucket('P3M') },
	    { name: 'Y', selection: $now.timeBucket('P1Y') }
	];
	var previousPresets = [
	    { name: 'D', selection: $now.timeFloor('P1D').timeRange('P1D', -1) },
	    { name: 'W', selection: $now.timeFloor('P1W').timeRange('P1W', -1) },
	    { name: 'M', selection: $now.timeFloor('P1M').timeRange('P1M', -1) },
	    { name: 'Q', selection: $now.timeFloor('P3M').timeRange('P3M', -1) },
	    { name: 'Y', selection: $now.timeFloor('P1Y').timeRange('P1Y', -1) }
	];
	var MENU_WIDTH = 250;
	var TimeFilterMenu = (function (_super) {
	    __extends(TimeFilterMenu, _super);
	    function TimeFilterMenu() {
	        _super.call(this);
	        this.state = {
	            tab: null,
	            timeSelection: null,
	            startTime: null,
	            endTime: null,
	            hoverPreset: null
	        };
	        this.globalKeyDownListener = this.globalKeyDownListener.bind(this);
	    }
	    TimeFilterMenu.prototype.componentWillMount = function () {
	        var _a = this.props, essence = _a.essence, timekeeper = _a.timekeeper, dimension = _a.dimension;
	        var filter = essence.filter;
	        var timezone = essence.timezone;
	        var dimensionExpression = dimension.expression;
	        var timeSelection = filter.getSelection(dimensionExpression);
	        var selectedTimeRangeSet = essence.getEffectiveFilter(timekeeper).getLiteralSet(dimensionExpression);
	        var selectedTimeRange = (selectedTimeRangeSet && selectedTimeRangeSet.size() === 1) ? selectedTimeRangeSet.elements[0] : null;
	        if (selectedTimeRange && !plywood_1.Range.isRange(selectedTimeRange))
	            selectedTimeRange = makeDateIntoTimeRange(selectedTimeRange, timezone);
	        var clause = filter.clauseForExpression(dimensionExpression);
	        this.setState({
	            timeSelection: timeSelection,
	            tab: (!clause || clause.relative || clause.isLessThanFullDay()) ? 'relative' : 'specific',
	            startTime: selectedTimeRange ? chronoshift_1.day.floor(selectedTimeRange.start, timezone) : null,
	            endTime: selectedTimeRange ? chronoshift_1.day.ceil(selectedTimeRange.end, timezone) : null
	        });
	    };
	    TimeFilterMenu.prototype.componentDidMount = function () {
	        window.addEventListener('keydown', this.globalKeyDownListener);
	    };
	    TimeFilterMenu.prototype.componentWillUnmount = function () {
	        window.removeEventListener('keydown', this.globalKeyDownListener);
	    };
	    TimeFilterMenu.prototype.globalKeyDownListener = function (e) {
	        if (dom_1.enterKey(e)) {
	            this.onOkClick();
	        }
	    };
	    TimeFilterMenu.prototype.constructFilter = function () {
	        var _a = this.props, essence = _a.essence, dimension = _a.dimension;
	        var _b = this.state, tab = _b.tab, startTime = _b.startTime, endTime = _b.endTime;
	        var filter = essence.filter;
	        var timezone = essence.timezone;
	        if (tab !== 'specific')
	            return null;
	        if (startTime && !endTime) {
	            endTime = chronoshift_1.day.shift(startTime, timezone, 1);
	        }
	        if (startTime && endTime && startTime < endTime) {
	            return filter.setSelection(dimension.expression, plywood_1.r(plywood_1.TimeRange.fromJS({ start: startTime, end: endTime })));
	        }
	        else {
	            return null;
	        }
	    };
	    TimeFilterMenu.prototype.onPresetClick = function (preset) {
	        var _a = this.props, clicker = _a.clicker, onClose = _a.onClose, essence = _a.essence, dimension = _a.dimension;
	        var filter = essence.filter;
	        var newFilter = filter.setSelection(dimension.expression, preset.selection);
	        clicker.changeFilter(newFilter);
	        onClose();
	    };
	    TimeFilterMenu.prototype.onPresetMouseEnter = function (preset) {
	        var hoverPreset = this.state.hoverPreset;
	        if (hoverPreset === preset)
	            return;
	        this.setState({
	            hoverPreset: preset
	        });
	    };
	    TimeFilterMenu.prototype.onPresetMouseLeave = function (preset) {
	        var hoverPreset = this.state.hoverPreset;
	        if (hoverPreset !== preset)
	            return;
	        this.setState({
	            hoverPreset: null
	        });
	    };
	    TimeFilterMenu.prototype.onStartChange = function (start) {
	        this.setState({
	            startTime: start
	        });
	    };
	    TimeFilterMenu.prototype.onEndChange = function (end) {
	        this.setState({
	            endTime: end
	        });
	    };
	    TimeFilterMenu.prototype.selectTab = function (tab) {
	        this.setState({ tab: tab });
	    };
	    TimeFilterMenu.prototype.onOkClick = function () {
	        if (!this.actionEnabled())
	            return;
	        var _a = this.props, clicker = _a.clicker, onClose = _a.onClose;
	        var newFilter = this.constructFilter();
	        if (!newFilter)
	            return;
	        clicker.changeFilter(newFilter);
	        onClose();
	    };
	    TimeFilterMenu.prototype.onCancelClick = function () {
	        var onClose = this.props.onClose;
	        onClose();
	    };
	    TimeFilterMenu.prototype.renderPresets = function () {
	        var _this = this;
	        var _a = this.props, essence = _a.essence, timekeeper = _a.timekeeper, dimension = _a.dimension;
	        var _b = this.state, timeSelection = _b.timeSelection, hoverPreset = _b.hoverPreset;
	        if (!dimension)
	            return null;
	        var timezone = essence.timezone;
	        var presetToButton = function (preset) {
	            return React.createElement("button", {key: preset.name, className: dom_1.classNames('preset', { hover: preset === hoverPreset, selected: preset.selection.equals(timeSelection) }), onClick: _this.onPresetClick.bind(_this, preset), onMouseEnter: _this.onPresetMouseEnter.bind(_this, preset), onMouseLeave: _this.onPresetMouseLeave.bind(_this, preset)}, preset.name);
	        };
	        var previewTimeRange = null;
	        if (timeSelection && timeSelection.type !== 'TIME_RANGE') {
	            var value = timeSelection.value;
	            if (!plywood_1.Set.isSet(value))
	                throw new Error("Unrecognized filter value " + value);
	            if (value.size() !== 1)
	                throw new Error("Can only filter on one time");
	            var time = value.elements[0];
	            previewTimeRange = makeDateIntoTimeRange(time, timezone);
	        }
	        else {
	            previewTimeRange = essence.evaluateSelection(hoverPreset ? hoverPreset.selection : timeSelection, timekeeper);
	        }
	        var previewText = previewTimeRange ? time_1.formatTimeRange(previewTimeRange, timezone, time_1.DisplayYear.IF_DIFF) : constants_1.STRINGS.noFilter;
	        var maxTimeBasedPresets = React.createElement("div", null, 
	            React.createElement("div", {className: "type"}, constants_1.STRINGS.latest), 
	            React.createElement("div", {className: "buttons"}, latestPresets.map(presetToButton)));
	        return React.createElement("div", {className: "cont"}, 
	            essence.dataCube.isTimeAttribute(dimension.expression) ? maxTimeBasedPresets : null, 
	            React.createElement("div", {className: "type"}, constants_1.STRINGS.current), 
	            React.createElement("div", {className: "buttons"}, currentPresets.map(presetToButton)), 
	            React.createElement("div", {className: "type"}, constants_1.STRINGS.previous), 
	            React.createElement("div", {className: "buttons"}, previousPresets.map(presetToButton)), 
	            React.createElement("div", {className: "preview"}, previewText));
	    };
	    TimeFilterMenu.prototype.actionEnabled = function () {
	        var essence = this.props.essence;
	        var tab = this.state.tab;
	        if (tab !== 'specific')
	            return false;
	        var newFilter = this.constructFilter();
	        return newFilter && !essence.filter.equals(newFilter);
	    };
	    TimeFilterMenu.prototype.renderCustom = function () {
	        var _a = this.props, essence = _a.essence, timekeeper = _a.timekeeper, dimension = _a.dimension;
	        var _b = this.state, startTime = _b.startTime, endTime = _b.endTime;
	        if (!dimension)
	            return null;
	        return React.createElement("div", null, 
	            React.createElement(date_range_picker_1.DateRangePicker, {startTime: startTime, endTime: endTime, maxTime: timekeeper.getTime(essence.dataCube.name), timezone: essence.timezone, onStartChange: this.onStartChange.bind(this), onEndChange: this.onEndChange.bind(this)}), 
	            React.createElement("div", {className: "ok-cancel-bar"}, 
	                React.createElement(button_1.Button, {type: "primary", onClick: this.onOkClick.bind(this), disabled: !this.actionEnabled(), title: constants_1.STRINGS.ok}), 
	                React.createElement(button_1.Button, {type: "secondary", onClick: this.onCancelClick.bind(this), title: constants_1.STRINGS.cancel})));
	    };
	    ;
	    TimeFilterMenu.prototype.render = function () {
	        var _this = this;
	        var _a = this.props, dimension = _a.dimension, onClose = _a.onClose, containerStage = _a.containerStage, openOn = _a.openOn, inside = _a.inside;
	        var tab = this.state.tab;
	        if (!dimension)
	            return null;
	        var menuSize = stage_1.Stage.fromSize(MENU_WIDTH, 410);
	        var tabs = ['relative', 'specific'].map(function (name) {
	            return {
	                isSelected: tab === name,
	                title: (name === 'relative' ? constants_1.STRINGS.relative : constants_1.STRINGS.specific),
	                key: name,
	                onClick: _this.selectTab.bind(_this, name)
	            };
	        });
	        return React.createElement(bubble_menu_1.BubbleMenu, {className: "time-filter-menu", direction: "down", containerStage: containerStage, stage: menuSize, openOn: openOn, onClose: onClose, inside: inside}, 
	            React.createElement(button_group_1.ButtonGroup, {groupMembers: tabs}), 
	            tab === 'relative' ? this.renderPresets() : this.renderCustom());
	    };
	    return TimeFilterMenu;
	}(React.Component));
	exports.TimeFilterMenu = TimeFilterMenu;


/***/ },
/* 414 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(415);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./time-filter-menu.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./time-filter-menu.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 415 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".time-filter-menu .cont .buttons button.selected,.time-filter-menu .cont .buttons button{display:inline-block;padding:6px 16px;font-size:13px;min-width:60px;text-align:center;cursor:pointer;border-radius:2px;outline:none;height:30px}.time-filter-menu .cont .buttons button.disabled,.time-filter-menu .cont .buttons button[disabled]{opacity:.60;cursor:default;pointer-events:none}.time-filter-menu .cont .buttons button.selected{background:#1ea3e6;color:#fff}.time-filter-menu .cont .buttons button.selected svg path{fill:#fff}.time-filter-menu .cont .buttons button.selected:hover{background:#1795d3}.time-filter-menu .cont .buttons button.active.selected,.time-filter-menu .cont .buttons button.selected:active{background:#1584bc;color:#e0e0e0}.time-filter-menu .cont .buttons button.active.selected svg path,.time-filter-menu .cont .buttons button.selected:active svg path{fill:#e0e0e0}.time-filter-menu .cont .buttons button{background:rgba(30,163,230,0.22);color:#1ea3e6}.time-filter-menu .cont .buttons button svg path{fill:#1ea3e6}.time-filter-menu .cont .buttons button:hover{background:rgba(30,163,230,0.3)}.time-filter-menu .cont .buttons button.active,.time-filter-menu .cont .buttons button:active{background:rgba(30,163,230,0.38)}.time-filter-menu .cont .type{text-transform:uppercase;font-size:12px;color:#a6a6a6;margin-bottom:5px}.time-filter-menu .cont .preview{white-space:nowrap;overflow-x:hidden;text-overflow:ellipsis;height:30px;line-height:28px;background:#f2f2f2;border-radius:2px;color:#909090;text-align:center;padding-left:8px;padding-right:8px}.time-filter-menu .cont{margin-top:18px}.time-filter-menu .cont .buttons{margin-bottom:14px}.time-filter-menu .cont .buttons button{min-width:0;padding:0;width:17.5%;margin-right:3%}.time-filter-menu .cont .buttons button.selected{min-width:0;padding:0}.time-filter-menu .cont .buttons button:last-child{margin-right:0}\n", ""]);

	// exports


/***/ },
/* 416 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(417);
	var React = __webpack_require__(5);
	var plywood_1 = __webpack_require__(199);
	var index_1 = __webpack_require__(202);
	var constants_1 = __webpack_require__(292);
	var dom_1 = __webpack_require__(300);
	var button_1 = __webpack_require__(314);
	var number_range_picker_1 = __webpack_require__(419);
	var filter_options_dropdown_1 = __webpack_require__(406);
	var bubble_menu_1 = __webpack_require__(297);
	function numberOrAnyToString(start) {
	    if (start === number_range_picker_1.ANY_VALUE)
	        return constants_1.STRINGS.any;
	    return '' + start;
	}
	function stringToNumberOrAny(startInput) {
	    var parse = parseFloat(startInput);
	    return isNaN(parse) ? number_range_picker_1.ANY_VALUE : parse;
	}
	var MENU_WIDTH = 250;
	var filterOptions = filter_options_dropdown_1.FilterOptionsDropdown.getFilterOptions(index_1.Filter.INCLUDED, index_1.Filter.EXCLUDED);
	var NumberFilterMenu = (function (_super) {
	    __extends(NumberFilterMenu, _super);
	    function NumberFilterMenu() {
	        _super.call(this);
	        this.state = {
	            leftOffset: null,
	            rightBound: null,
	            start: null,
	            startInput: "",
	            end: null,
	            endInput: ""
	        };
	        this.globalKeyDownListener = this.globalKeyDownListener.bind(this);
	    }
	    NumberFilterMenu.prototype.componentWillMount = function () {
	        var _a = this.props, essence = _a.essence, dimension = _a.dimension;
	        var filter = essence.filter;
	        var valueSet = filter.getLiteralSet(dimension.expression);
	        var hasFilter = valueSet && valueSet.elements.length !== 0;
	        var start = null;
	        var end = null;
	        if (hasFilter) {
	            if (valueSet.setType === 'NUMBER_RANGE') {
	                var range = valueSet.elements[0];
	                start = range.start;
	                end = range.end;
	            }
	            else if (valueSet.setType === 'NUMBER') {
	                var number = valueSet.elements[0];
	                start = number;
	                end = number;
	            }
	        }
	        this.setState({
	            startInput: numberOrAnyToString(start),
	            endInput: numberOrAnyToString(end),
	            start: start,
	            end: end,
	            filterMode: filter.getModeForDimension(dimension) || index_1.Filter.INCLUDED
	        });
	    };
	    NumberFilterMenu.prototype.componentDidMount = function () {
	        window.addEventListener('keydown', this.globalKeyDownListener);
	    };
	    NumberFilterMenu.prototype.componentWillUnmount = function () {
	        window.removeEventListener('keydown', this.globalKeyDownListener);
	    };
	    NumberFilterMenu.prototype.constructFilter = function () {
	        var _a = this.props, essence = _a.essence, dimension = _a.dimension;
	        var _b = this.state, start = _b.start, end = _b.end, filterMode = _b.filterMode;
	        var filter = essence.filter;
	        var validFilter = false;
	        if ((start !== null && end !== null)) {
	            validFilter = start <= end;
	        }
	        else {
	            validFilter = (!isNaN(start) && !(isNaN(end))) && (start !== null || end !== null);
	        }
	        if (validFilter) {
	            var bounds = start === end ? '[]' : '[)';
	            var newSet = plywood_1.Set.fromJS({ setType: "NUMBER_RANGE", elements: [plywood_1.NumberRange.fromJS({ start: start, end: end, bounds: bounds })] });
	            var clause = new index_1.FilterClause({
	                expression: dimension.expression,
	                selection: new plywood_1.LiteralExpression({ type: "SET/NUMBER_RANGE", value: newSet }),
	                exclude: filterMode === index_1.Filter.EXCLUDED
	            });
	            return filter.setClause(clause);
	        }
	        else {
	            return null;
	        }
	    };
	    NumberFilterMenu.prototype.globalKeyDownListener = function (e) {
	        if (dom_1.enterKey(e)) {
	            this.onOkClick();
	        }
	    };
	    NumberFilterMenu.prototype.onOkClick = function () {
	        if (!this.actionEnabled())
	            return;
	        var _a = this.props, clicker = _a.clicker, onClose = _a.onClose;
	        clicker.changeFilter(this.constructFilter());
	        onClose();
	    };
	    NumberFilterMenu.prototype.onCancelClick = function () {
	        var onClose = this.props.onClose;
	        onClose();
	    };
	    NumberFilterMenu.prototype.onRangeInputStartChange = function (e) {
	        var startInput = e.target.value;
	        this.setState({
	            startInput: startInput,
	            start: stringToNumberOrAny(startInput)
	        });
	    };
	    NumberFilterMenu.prototype.onRangeInputEndChange = function (e) {
	        var endInput = e.target.value;
	        this.setState({
	            endInput: endInput,
	            end: stringToNumberOrAny(endInput)
	        });
	    };
	    NumberFilterMenu.prototype.onRangeStartChange = function (newStart) {
	        this.setState({ startInput: numberOrAnyToString(newStart), start: newStart });
	    };
	    NumberFilterMenu.prototype.onRangeEndChange = function (newEnd) {
	        this.setState({ endInput: numberOrAnyToString(newEnd), end: newEnd });
	    };
	    NumberFilterMenu.prototype.onSelectFilterOption = function (filterMode) {
	        this.setState({ filterMode: filterMode });
	    };
	    NumberFilterMenu.prototype.actionEnabled = function () {
	        var essence = this.props.essence;
	        return !essence.filter.equals(this.constructFilter()) && Boolean(this.constructFilter());
	    };
	    NumberFilterMenu.prototype.render = function () {
	        var _a = this.props, essence = _a.essence, timekeeper = _a.timekeeper, dimension = _a.dimension, onClose = _a.onClose, containerStage = _a.containerStage, openOn = _a.openOn, inside = _a.inside;
	        var _b = this.state, endInput = _b.endInput, startInput = _b.startInput, end = _b.end, start = _b.start, filterMode = _b.filterMode;
	        var menuSize = index_1.Stage.fromSize(MENU_WIDTH, 410);
	        return React.createElement(bubble_menu_1.BubbleMenu, {className: "number-filter-menu", direction: "down", containerStage: containerStage, stage: menuSize, openOn: openOn, onClose: onClose, inside: inside}, 
	            React.createElement("div", {className: "side-by-side"}, 
	                React.createElement("div", {className: "group"}, 
	                    React.createElement("label", {className: "input-top-label"}, "Type"), 
	                    React.createElement(filter_options_dropdown_1.FilterOptionsDropdown, {selectedOption: filterMode, onSelectOption: this.onSelectFilterOption.bind(this), filterOptions: filterOptions})), 
	                React.createElement("div", {className: "group"}, 
	                    React.createElement("label", {className: "input-top-label"}, "Min"), 
	                    React.createElement("input", {value: startInput, onChange: this.onRangeInputStartChange.bind(this)})), 
	                React.createElement("div", {className: "group"}, 
	                    React.createElement("label", {className: "input-top-label"}, "Max"), 
	                    React.createElement("input", {value: endInput, onChange: this.onRangeInputEndChange.bind(this)}))), 
	            React.createElement(number_range_picker_1.NumberRangePicker, {onRangeEndChange: this.onRangeEndChange.bind(this), onRangeStartChange: this.onRangeStartChange.bind(this), start: start, end: end, dimension: dimension, essence: essence, timekeeper: timekeeper, exclude: filterMode === index_1.Filter.EXCLUDED}), 
	            React.createElement("div", {className: "ok-cancel-bar"}, 
	                React.createElement(button_1.Button, {type: "primary", title: constants_1.STRINGS.ok, onClick: this.onOkClick.bind(this), disabled: !this.actionEnabled()}), 
	                React.createElement(button_1.Button, {type: "secondary", title: constants_1.STRINGS.cancel, onClick: this.onCancelClick.bind(this)})));
	    };
	    return NumberFilterMenu;
	}(React.Component));
	exports.NumberFilterMenu = NumberFilterMenu;


/***/ },
/* 417 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(418);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./number-filter-menu.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./number-filter-menu.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 418 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".number-filter-menu .side-by-side{display:-webkit-box;display:-ms-flexbox;display:flex}.number-filter-menu .side-by-side>*{margin-right:5px}.number-filter-menu .side-by-side>*:last-child{margin-right:0}.number-filter-menu .input-top-label{text-transform:uppercase;font-size:12px;color:#a6a6a6;margin-bottom:5px}.number-filter-menu input{border:1px solid #d4d4d4;border-radius:2px;box-shadow:inset 0 1px 1px rgba(0,0,0,0.13);padding-left:6px;padding-right:6px;width:100%;height:30px}.number-filter-menu input:hover{border-color:#b8b8b8}.number-filter-menu input:focus{border-color:#1ea3e6}.number-filter-menu input.error{border-color:#e24c4c}.number-filter-menu .group{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.number-filter-menu input.gray{color:#ccc}.number-filter-menu input,.number-filter-menu .filter-options-dropdown{margin-top:6px}\n", ""]);

	// exports


/***/ },
/* 419 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(420);
	var React = __webpack_require__(5);
	var ReactDOM = __webpack_require__(39);
	var plywood_1 = __webpack_require__(199);
	var general_1 = __webpack_require__(209);
	var dom_1 = __webpack_require__(300);
	var loader_1 = __webpack_require__(184);
	var query_error_1 = __webpack_require__(379);
	var range_handle_1 = __webpack_require__(422);
	exports.ANY_VALUE = null;
	var NUB_SIZE = 16;
	var GRANULARITY_IN_BAR = 300;
	function addNubSize(value) {
	    return value + NUB_SIZE;
	}
	function subtractNubSize(value) {
	    return value && value > NUB_SIZE ? value - NUB_SIZE : 0;
	}
	function getNumberOfDigitsToShow(n) {
	    var totalDigits = general_1.getNumberOfWholeDigits(n / GRANULARITY_IN_BAR);
	    return totalDigits > 3 ? Math.min(totalDigits, 4) : 3;
	}
	function getAdjustedStartHalf(start) {
	    return start + NUB_SIZE / 2;
	}
	var NumberRangePicker = (function (_super) {
	    __extends(NumberRangePicker, _super);
	    function NumberRangePicker() {
	        _super.call(this);
	        this.state = {
	            min: null,
	            max: null,
	            step: null,
	            loading: false,
	            error: null
	        };
	    }
	    NumberRangePicker.prototype.fetchData = function (essence, timekeeper, dimension, rightBound) {
	        var _this = this;
	        var dataCube = essence.dataCube;
	        var filterExpression = essence.getEffectiveFilter(timekeeper, null, dimension).toExpression();
	        var $main = plywood_1.$('main');
	        var query = plywood_1.ply()
	            .apply('main', $main.filter(filterExpression))
	            .apply('Min', $main.min(plywood_1.$(dimension.name)))
	            .apply('Max', $main.max(plywood_1.$(dimension.name)));
	        this.setState({
	            loading: true
	        });
	        dataCube.executor(query)
	            .then(function (dataset) {
	            if (!_this.mounted)
	                return;
	            var min = dataset.data[0]['Min'];
	            var max = dataset.data[0]['Max'];
	            var step = max && min && isFinite(max) && isFinite(min) ? (max - min) / rightBound : 1;
	            _this.setState({
	                min: min,
	                max: max,
	                loading: false,
	                step: step !== 0 && isFinite(step) ? step : 1
	            });
	        }, function (error) {
	            if (!_this.mounted)
	                return;
	            _this.setState({
	                loading: false,
	                error: error
	            });
	        });
	    };
	    NumberRangePicker.prototype.componentDidMount = function () {
	        this.mounted = true;
	        var node = ReactDOM.findDOMNode(this.refs['number-range-picker']);
	        var rect = node.getBoundingClientRect();
	        var _a = this.props, essence = _a.essence, timekeeper = _a.timekeeper, dimension = _a.dimension;
	        var leftOffset = rect.left;
	        var rightBound = rect.width;
	        this.setState({ leftOffset: leftOffset, rightBound: rightBound });
	        this.fetchData(essence, timekeeper, dimension, rightBound);
	    };
	    NumberRangePicker.prototype.componentWillUnmount = function () {
	        this.mounted = false;
	    };
	    NumberRangePicker.prototype.relativePositionToValue = function (position, type) {
	        var _a = this.state, step = _a.step, min = _a.min, max = _a.max, rightBound = _a.rightBound;
	        if (position <= addNubSize(0) && type === 'start')
	            return exports.ANY_VALUE;
	        if (position >= rightBound && type === 'end')
	            return exports.ANY_VALUE;
	        var range = max - min !== 0 ? max - min : Math.abs(max);
	        return general_1.toSignificantDigits(position * step, getNumberOfDigitsToShow(range));
	    };
	    NumberRangePicker.prototype.valueToRelativePosition = function (value) {
	        var step = this.state.step;
	        return value / step;
	    };
	    NumberRangePicker.prototype.onBarClick = function (positionStart, positionEnd, e) {
	        var leftOffset = this.state.leftOffset;
	        var clickPadding = 5;
	        var absoluteX = dom_1.getXFromEvent(e);
	        var relativeX = absoluteX - leftOffset;
	        if (relativeX < NUB_SIZE / 2)
	            return this.updateStart(leftOffset);
	        var startNubPosition = addNubSize(positionStart) + clickPadding;
	        var endNubPosition = subtractNubSize(positionEnd) + clickPadding;
	        var isBeforeStart = relativeX < positionStart;
	        var isAfterEnd = relativeX > positionEnd + NUB_SIZE;
	        var inBetween = (relativeX < positionEnd) && relativeX > startNubPosition;
	        if (isBeforeStart) {
	            this.updateStart(absoluteX - NUB_SIZE);
	        }
	        else if (isAfterEnd) {
	            this.updateEnd(absoluteX);
	        }
	        else if (inBetween) {
	            var distanceFromEnd = endNubPosition - relativeX;
	            var distanceFromStart = relativeX - startNubPosition;
	            if (distanceFromEnd < distanceFromStart) {
	                this.updateEnd(endNubPosition + leftOffset - distanceFromEnd);
	            }
	            else {
	                this.updateStart(startNubPosition + leftOffset + distanceFromStart - NUB_SIZE);
	            }
	            return;
	        }
	    };
	    NumberRangePicker.prototype.updateStart = function (absolutePosition) {
	        var onRangeStartChange = this.props.onRangeStartChange;
	        var leftOffset = this.state.leftOffset;
	        var relativePosition = absolutePosition - leftOffset;
	        var newValue = this.relativePositionToValue(addNubSize(relativePosition), 'start');
	        onRangeStartChange(newValue);
	    };
	    NumberRangePicker.prototype.updateEnd = function (absolutePosition) {
	        var onRangeEndChange = this.props.onRangeEndChange;
	        var leftOffset = this.state.leftOffset;
	        var relativePosition = absolutePosition - leftOffset;
	        var newValue = this.relativePositionToValue(relativePosition, 'end');
	        onRangeEndChange(newValue);
	    };
	    NumberRangePicker.prototype.render = function () {
	        var _a = this.props, start = _a.start, end = _a.end, exclude = _a.exclude;
	        var _b = this.state, min = _b.min, max = _b.max, loading = _b.loading, error = _b.error, step = _b.step, rightBound = _b.rightBound, leftOffset = _b.leftOffset;
	        var content = null;
	        if (rightBound && step && isFinite(max) && isFinite(min)) {
	            var relativeStart = start === exports.ANY_VALUE ? 0 : subtractNubSize(this.valueToRelativePosition(start));
	            var relativeEnd = end === exports.ANY_VALUE ? rightBound : this.valueToRelativePosition(end);
	            var adjustedRightBound = subtractNubSize(rightBound);
	            var positionEnd = dom_1.clamp(relativeEnd, addNubSize(relativeStart), adjustedRightBound);
	            var positionStart = start ? dom_1.clamp(relativeStart, 0, subtractNubSize(positionEnd)) : 0;
	            var rangeBarSelected = { left: getAdjustedStartHalf(positionStart), width: positionEnd - positionStart };
	            var absoluteRightBound = leftOffset + rightBound;
	            content = React.createElement("div", {className: "range-slider", onMouseDown: this.onBarClick.bind(this, positionStart, positionEnd)}, 
	                React.createElement("div", {className: "range-bar full"}), 
	                React.createElement("div", {className: "range-bar selected", style: rangeBarSelected}), 
	                React.createElement(range_handle_1.RangeHandle, {positionLeft: positionStart, onChange: this.updateStart.bind(this), isAny: start === exports.ANY_VALUE, isBeyondMin: start !== exports.ANY_VALUE && start < min, leftBound: leftOffset, rightBound: leftOffset + subtractNubSize(positionEnd), offset: leftOffset}), 
	                React.createElement(range_handle_1.RangeHandle, {positionLeft: positionEnd, onChange: this.updateEnd.bind(this), isAny: end === exports.ANY_VALUE, isBeyondMax: end !== exports.ANY_VALUE && max < end, leftBound: leftOffset + addNubSize(positionStart), rightBound: absoluteRightBound, offset: leftOffset}));
	        }
	        return React.createElement("div", {className: dom_1.classNames("number-range-picker", { 'inverted': exclude }), ref: "number-range-picker"}, 
	            content, 
	            loading ? React.createElement(loader_1.Loader, null) : null, 
	            error ? React.createElement(query_error_1.QueryError, {error: error}) : null);
	    };
	    return NumberRangePicker;
	}(React.Component));
	exports.NumberRangePicker = NumberRangePicker;


/***/ },
/* 420 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(421);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./number-range-picker.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./number-range-picker.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 421 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".number-range-picker{margin:10px 0;height:25px}.number-range-picker .range-bar{position:absolute;top:6px;height:6px}.number-range-picker .range-bar.full{background-color:#dedede;left:8px;right:8px}.number-range-picker .range-bar.selected{background-color:#1ea3e6}.number-range-picker.inverted .range-bar.full{background-color:#1ea3e6}.number-range-picker.inverted .range-bar.selected{background-color:#dedede}.number-range-picker .range-handle{position:absolute}.number-range-picker .loader,.number-range-picker .query-error{position:absolute;top:0;bottom:0;left:0;right:0}\n", ""]);

	// exports


/***/ },
/* 422 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(423);
	var React = __webpack_require__(5);
	var dom_1 = __webpack_require__(300);
	var RangeHandle = (function (_super) {
	    __extends(RangeHandle, _super);
	    function RangeHandle() {
	        _super.call(this);
	        this.state = {
	            anchor: null
	        };
	        this.onGlobalMouseUp = this.onGlobalMouseUp.bind(this);
	        this.onGlobalMouseMove = this.onGlobalMouseMove.bind(this);
	    }
	    RangeHandle.prototype.onGlobalMouseMove = function (event) {
	        var _a = this.props, onChange = _a.onChange, leftBound = _a.leftBound, rightBound = _a.rightBound;
	        var anchor = this.state.anchor;
	        var newX = dom_1.getXFromEvent(event) - anchor;
	        onChange(dom_1.clamp(newX, leftBound, rightBound));
	    };
	    RangeHandle.prototype.onMouseDown = function (event) {
	        var _a = this.props, offset = _a.offset, positionLeft = _a.positionLeft;
	        var x = dom_1.getXFromEvent(event);
	        var anchor = x - offset - positionLeft;
	        this.setState({
	            anchor: anchor
	        });
	        event.preventDefault();
	        window.addEventListener('mouseup', this.onGlobalMouseUp);
	        window.addEventListener('mousemove', this.onGlobalMouseMove);
	    };
	    RangeHandle.prototype.onGlobalMouseUp = function () {
	        window.removeEventListener('mouseup', this.onGlobalMouseUp);
	        window.removeEventListener('mousemove', this.onGlobalMouseMove);
	    };
	    RangeHandle.prototype.render = function () {
	        var _a = this.props, positionLeft = _a.positionLeft, isAny = _a.isAny, isBeyondMin = _a.isBeyondMin, isBeyondMax = _a.isBeyondMax;
	        var style = { left: positionLeft };
	        return React.createElement("div", {className: dom_1.classNames("range-handle", { empty: isAny, "beyond min": isBeyondMin, "beyond max": isBeyondMax }), style: style, onMouseDown: this.onMouseDown.bind(this)});
	    };
	    return RangeHandle;
	}(React.Component));
	exports.RangeHandle = RangeHandle;


/***/ },
/* 423 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(424);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./range-handle.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./range-handle.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 424 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".range-handle{width:16px;height:16px;background:#1ea3e6;border-radius:50%;border:2px solid #1ea3e6;z-index:2}.range-handle.empty{background:#fff}.range-handle.beyond::before{border-style:solid;border-color:#ededed;border-width:2.5px 2.5px 0 0;content:'';display:inline-block;height:4px;position:relative;top:2.5px;vertical-align:top;width:4px}.range-handle.beyond.min::before{top:3px;left:4px;-webkit-transform:rotate(-135deg);-ms-transform:rotate(-135deg);transform:rotate(-135deg)}.range-handle.beyond.max::before{left:2px;-webkit-transform:rotate(45deg);-ms-transform:rotate(45deg);transform:rotate(45deg)}\n", ""]);

	// exports


/***/ },
/* 425 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(426);
	var React = __webpack_require__(5);
	var ReactDOM = __webpack_require__(39);
	var Q = __webpack_require__(182);
	var constants_1 = __webpack_require__(292);
	var index_1 = __webpack_require__(202);
	var formatter_1 = __webpack_require__(233);
	var pill_tile_1 = __webpack_require__(428);
	var dom_1 = __webpack_require__(300);
	var drag_manager_1 = __webpack_require__(349);
	var svg_icon_1 = __webpack_require__(187);
	var fancy_drag_indicator_1 = __webpack_require__(388);
	var bubble_menu_1 = __webpack_require__(297);
	var FILTER_CLASS_NAME = 'filter';
	var ANIMATION_DURATION = 400;
	function formatLabelDummy(dimension) {
	    return dimension.title;
	}
	var FilterTile = (function (_super) {
	    __extends(FilterTile, _super);
	    function FilterTile() {
	        _super.call(this);
	        this.overflowMenuId = dom_1.uniqueId('overflow-menu-');
	        this.state = {
	            FilterMenuAsync: null,
	            menuOpenOn: null,
	            menuDimension: null,
	            menuInside: null,
	            overflowMenuOpenOn: null,
	            dragPosition: null,
	            possibleDimension: null,
	            possiblePosition: null,
	            maxItems: 20
	        };
	    }
	    FilterTile.prototype.componentDidMount = function () {
	        var _this = this;
	        !/* require.ensure */(function (require) {
	            _this.setState({
	                FilterMenuAsync: __webpack_require__(392).FilterMenu
	            });
	        }(__webpack_require__));
	    };
	    FilterTile.prototype.componentWillReceiveProps = function (nextProps) {
	        var menuStage = nextProps.menuStage;
	        if (menuStage) {
	            var newMaxItems = pill_tile_1.getMaxItems(menuStage.width, this.getItemBlanks().length);
	            if (newMaxItems !== this.state.maxItems) {
	                this.setState({
	                    menuOpenOn: null,
	                    menuDimension: null,
	                    menuInside: null,
	                    possibleDimension: null,
	                    possiblePosition: null,
	                    overflowMenuOpenOn: null,
	                    maxItems: newMaxItems
	                });
	            }
	        }
	    };
	    FilterTile.prototype.componentDidUpdate = function () {
	        var _a = this.state, possibleDimension = _a.possibleDimension, overflowMenuOpenOn = _a.overflowMenuOpenOn;
	        if (possibleDimension) {
	            this.dummyDeferred.resolve(null);
	        }
	        if (overflowMenuOpenOn) {
	            var overflowMenu = this.getOverflowMenu();
	            if (overflowMenu)
	                this.overflowMenuDeferred.resolve(overflowMenu);
	        }
	    };
	    FilterTile.prototype.overflowButtonTarget = function () {
	        return ReactDOM.findDOMNode(this.refs['overflow']);
	    };
	    FilterTile.prototype.getOverflowMenu = function () {
	        return document.getElementById(this.overflowMenuId);
	    };
	    FilterTile.prototype.clickDimension = function (dimension, e) {
	        var target = dom_1.findParentWithClass(e.target, FILTER_CLASS_NAME);
	        this.openMenu(dimension, target);
	    };
	    FilterTile.prototype.openMenuOnDimension = function (dimension) {
	        var _this = this;
	        var targetRef = this.refs[dimension.name];
	        if (targetRef) {
	            var target = ReactDOM.findDOMNode(targetRef);
	            if (!target)
	                return;
	            this.openMenu(dimension, target);
	        }
	        else {
	            var overflowButtonTarget = this.overflowButtonTarget();
	            if (overflowButtonTarget) {
	                this.openOverflowMenu(overflowButtonTarget).then(function () {
	                    var target = ReactDOM.findDOMNode(_this.refs[dimension.name]);
	                    if (!target)
	                        return;
	                    _this.openMenu(dimension, target);
	                });
	            }
	        }
	    };
	    FilterTile.prototype.openMenu = function (dimension, target) {
	        var menuOpenOn = this.state.menuOpenOn;
	        if (menuOpenOn === target) {
	            this.closeMenu();
	            return;
	        }
	        var overflowMenu = this.getOverflowMenu();
	        var menuInside = null;
	        if (overflowMenu && dom_1.isInside(target, overflowMenu)) {
	            menuInside = overflowMenu;
	        }
	        this.setState({
	            menuOpenOn: target,
	            menuDimension: dimension,
	            menuInside: menuInside
	        });
	    };
	    FilterTile.prototype.closeMenu = function () {
	        var _a = this.state, menuOpenOn = _a.menuOpenOn, possibleDimension = _a.possibleDimension;
	        if (!menuOpenOn)
	            return;
	        var newState = {
	            menuOpenOn: null,
	            menuDimension: null,
	            menuInside: null,
	            possibleDimension: null,
	            possiblePosition: null
	        };
	        if (possibleDimension) {
	            newState.overflowMenuOpenOn = null;
	        }
	        this.setState(newState);
	    };
	    FilterTile.prototype.openOverflowMenu = function (target) {
	        if (!target)
	            return Q(null);
	        var overflowMenuOpenOn = this.state.overflowMenuOpenOn;
	        if (overflowMenuOpenOn === target) {
	            this.closeOverflowMenu();
	            return Q(null);
	        }
	        this.overflowMenuDeferred = Q.defer();
	        this.setState({ overflowMenuOpenOn: target });
	        return this.overflowMenuDeferred.promise;
	    };
	    FilterTile.prototype.closeOverflowMenu = function () {
	        var overflowMenuOpenOn = this.state.overflowMenuOpenOn;
	        if (!overflowMenuOpenOn)
	            return;
	        this.setState({
	            overflowMenuOpenOn: null
	        });
	    };
	    FilterTile.prototype.removeFilter = function (itemBlank, e) {
	        var _a = this.props, essence = _a.essence, clicker = _a.clicker;
	        if (itemBlank.clause) {
	            if (itemBlank.source === 'from-highlight') {
	                clicker.dropHighlight();
	            }
	            else {
	                clicker.changeFilter(essence.filter.remove(itemBlank.clause.expression));
	            }
	        }
	        this.closeMenu();
	        this.closeOverflowMenu();
	        e.stopPropagation();
	    };
	    FilterTile.prototype.dragStart = function (dimension, clause, e) {
	        var _a = this.props, essence = _a.essence, getUrlPrefix = _a.getUrlPrefix;
	        var dataTransfer = e.dataTransfer;
	        dataTransfer.effectAllowed = 'all';
	        if (getUrlPrefix) {
	            var newUrl = essence.getURL(getUrlPrefix());
	            dataTransfer.setData("text/url-list", newUrl);
	            dataTransfer.setData("text/plain", newUrl);
	        }
	        drag_manager_1.DragManager.setDragDimension(dimension, 'filter-tile');
	        dom_1.setDragGhost(dataTransfer, dimension.title);
	        this.closeMenu();
	        this.closeOverflowMenu();
	    };
	    FilterTile.prototype.calculateDragPosition = function (e) {
	        var essence = this.props.essence;
	        var numItems = essence.filter.length();
	        var rect = ReactDOM.findDOMNode(this.refs['items']).getBoundingClientRect();
	        var offset = dom_1.getXFromEvent(e) - rect.left;
	        return index_1.DragPosition.calculateFromOffset(offset, numItems, constants_1.CORE_ITEM_WIDTH, constants_1.CORE_ITEM_GAP);
	    };
	    FilterTile.prototype.canDrop = function (e) {
	        return Boolean(drag_manager_1.DragManager.getDragDimension());
	    };
	    FilterTile.prototype.dragEnter = function (e) {
	        if (!this.canDrop(e))
	            return;
	        e.preventDefault();
	        var dragPosition = this.calculateDragPosition(e);
	        if (dragPosition.equals(this.state.dragPosition))
	            return;
	        this.setState({ dragPosition: dragPosition });
	    };
	    FilterTile.prototype.dragOver = function (e) {
	        if (!this.canDrop(e))
	            return;
	        e.dataTransfer.dropEffect = 'move';
	        e.preventDefault();
	        var dragPosition = this.calculateDragPosition(e);
	        if (dragPosition.equals(this.state.dragPosition))
	            return;
	        this.setState({ dragPosition: dragPosition });
	    };
	    FilterTile.prototype.dragLeave = function (e) {
	        this.setState({ dragPosition: null });
	    };
	    FilterTile.prototype.drop = function (e) {
	        var _this = this;
	        if (!this.canDrop(e))
	            return;
	        e.preventDefault();
	        var _a = this.props, clicker = _a.clicker, essence = _a.essence;
	        var filter = essence.filter, dataCube = essence.dataCube;
	        var newState = {
	            dragPosition: null
	        };
	        var dimension = drag_manager_1.DragManager.getDragDimension();
	        if (dimension) {
	            var dragPosition = this.calculateDragPosition(e);
	            var tryingToReplaceTime = false;
	            if (dragPosition.replace !== null) {
	                var targetClause = filter.clauses.get(dragPosition.replace);
	                tryingToReplaceTime = targetClause && targetClause.expression.equals(dataCube.timeAttribute);
	            }
	            var existingClause = filter.clauseForExpression(dimension.expression);
	            if (existingClause) {
	                var newFilter;
	                if (dragPosition.isReplace()) {
	                    newFilter = filter.replaceByIndex(dragPosition.replace, existingClause);
	                }
	                else {
	                    newFilter = filter.insertByIndex(dragPosition.insert, existingClause);
	                }
	                var newFilterSame = filter.equals(newFilter);
	                if (!newFilterSame) {
	                    clicker.changeFilter(newFilter);
	                }
	                if (drag_manager_1.DragManager.getDragOrigin() !== 'filter-tile') {
	                    if (newFilterSame) {
	                        this.filterMenuRequest(dimension);
	                    }
	                    else {
	                        setTimeout(function () {
	                            _this.filterMenuRequest(dimension);
	                        }, ANIMATION_DURATION + 50);
	                    }
	                }
	            }
	            else {
	                if (dragPosition && !tryingToReplaceTime) {
	                    this.addDummy(dimension, dragPosition);
	                }
	            }
	        }
	        this.setState(newState);
	    };
	    FilterTile.prototype.addDummy = function (dimension, possiblePosition) {
	        var _this = this;
	        this.dummyDeferred = Q.defer();
	        this.setState({
	            possibleDimension: dimension,
	            possiblePosition: possiblePosition
	        });
	        this.dummyDeferred.promise.then(function () {
	            _this.openMenuOnDimension(dimension);
	        });
	    };
	    FilterTile.prototype.filterMenuRequest = function (dimension) {
	        var filter = this.props.essence.filter;
	        if (filter.filteredOn(dimension.expression)) {
	            this.openMenuOnDimension(dimension);
	        }
	        else {
	            this.addDummy(dimension, new index_1.DragPosition({ insert: filter.length() }));
	        }
	    };
	    FilterTile.prototype.overflowButtonClick = function () {
	        this.openOverflowMenu(this.overflowButtonTarget());
	    };
	    ;
	    FilterTile.prototype.renderMenu = function () {
	        var _a = this.props, essence = _a.essence, timekeeper = _a.timekeeper, clicker = _a.clicker, menuStage = _a.menuStage;
	        var _b = this.state, FilterMenuAsync = _b.FilterMenuAsync, menuOpenOn = _b.menuOpenOn, menuDimension = _b.menuDimension, menuInside = _b.menuInside, possiblePosition = _b.possiblePosition, maxItems = _b.maxItems, overflowMenuOpenOn = _b.overflowMenuOpenOn;
	        if (!FilterMenuAsync || !menuDimension)
	            return null;
	        if (possiblePosition && possiblePosition.replace === maxItems) {
	            possiblePosition = new index_1.DragPosition({ insert: possiblePosition.replace });
	        }
	        return React.createElement(FilterMenuAsync, {clicker: clicker, essence: essence, timekeeper: timekeeper, containerStage: overflowMenuOpenOn ? null : menuStage, openOn: menuOpenOn, dimension: menuDimension, changePosition: possiblePosition, onClose: this.closeMenu.bind(this), inside: menuInside});
	    };
	    FilterTile.prototype.renderOverflowMenu = function (overflowItemBlanks) {
	        var _this = this;
	        var overflowMenuOpenOn = this.state.overflowMenuOpenOn;
	        if (!overflowMenuOpenOn)
	            return null;
	        var segmentHeight = 29 + constants_1.CORE_ITEM_GAP;
	        var itemY = constants_1.CORE_ITEM_GAP;
	        var filterItems = overflowItemBlanks.map(function (itemBlank) {
	            var style = dom_1.transformStyle(0, itemY);
	            itemY += segmentHeight;
	            return _this.renderItemBlank(itemBlank, style);
	        });
	        return React.createElement(bubble_menu_1.BubbleMenu, {className: "overflow-menu", id: this.overflowMenuId, direction: "down", stage: index_1.Stage.fromSize(208, itemY), fixedSize: true, openOn: overflowMenuOpenOn, onClose: this.closeOverflowMenu.bind(this)}, filterItems);
	    };
	    FilterTile.prototype.renderOverflow = function (overflowItemBlanks, itemX) {
	        var style = dom_1.transformStyle(itemX, 0);
	        return React.createElement("div", {className: dom_1.classNames('overflow', { 'all-continuous': overflowItemBlanks.every(function (item) { return item.dimension.isContinuous(); }) }), ref: "overflow", key: "overflow", style: style, onClick: this.overflowButtonClick.bind(this)}, 
	            React.createElement("div", {className: "count"}, '+' + overflowItemBlanks.length), 
	            this.renderOverflowMenu(overflowItemBlanks));
	    };
	    FilterTile.prototype.renderRemoveButton = function (itemBlank) {
	        var essence = this.props.essence;
	        var dataCube = essence.dataCube;
	        if (itemBlank.dimension.expression.equals(dataCube.timeAttribute))
	            return null;
	        return React.createElement("div", {className: "remove", onClick: this.removeFilter.bind(this, itemBlank)}, 
	            React.createElement(svg_icon_1.SvgIcon, {svg: __webpack_require__(327)})
	        );
	    };
	    FilterTile.prototype.renderItemLabel = function (dimension, clause, timezone) {
	        var _a = formatter_1.getFormattedClause(dimension, clause, timezone), title = _a.title, values = _a.values;
	        return React.createElement("div", {className: "reading"}, 
	            title ? React.createElement("span", {className: "dimension-title"}, title) : null, 
	            React.createElement("span", {className: "values"}, values));
	    };
	    FilterTile.prototype.renderItemBlank = function (itemBlank, style) {
	        var _a = this.props, essence = _a.essence, timekeeper = _a.timekeeper, clicker = _a.clicker;
	        var menuDimension = this.state.menuDimension;
	        var dimension = itemBlank.dimension, clause = itemBlank.clause, source = itemBlank.source;
	        var dimensionName = dimension.name;
	        var className = [
	            FILTER_CLASS_NAME,
	            'type-' + dimension.className,
	            source,
	            (clause && clause.exclude) ? 'excluded' : 'included',
	            dimension === menuDimension ? 'selected' : undefined
	        ].filter(Boolean).join(' ');
	        var evaluatedClause = dimension.kind === 'time' && clause ? essence.evaluateClause(clause, timekeeper) : clause;
	        var timezone = essence.timezone;
	        if (source === 'from-highlight') {
	            return React.createElement("div", {className: className, key: dimensionName, ref: dimensionName, onClick: clicker.acceptHighlight.bind(clicker), style: style}, 
	                this.renderItemLabel(dimension, evaluatedClause, timezone), 
	                this.renderRemoveButton(itemBlank));
	        }
	        if (clause) {
	            return React.createElement("div", {className: className, key: dimensionName, ref: dimensionName, draggable: true, onClick: this.clickDimension.bind(this, dimension), onDragStart: this.dragStart.bind(this, dimension, clause), style: style}, 
	                this.renderItemLabel(dimension, evaluatedClause, timezone), 
	                this.renderRemoveButton(itemBlank));
	        }
	        else {
	            return React.createElement("div", {className: className, key: dimensionName, ref: dimensionName, style: style}, 
	                React.createElement("div", {className: "reading"}, formatLabelDummy(dimension)), 
	                this.renderRemoveButton(itemBlank));
	        }
	    };
	    FilterTile.prototype.getItemBlanks = function () {
	        var essence = this.props.essence;
	        var _a = this.state, possibleDimension = _a.possibleDimension, possiblePosition = _a.possiblePosition, maxItems = _a.maxItems;
	        var dataCube = essence.dataCube, filter = essence.filter, highlight = essence.highlight;
	        var itemBlanks = filter.clauses.toArray()
	            .map(function (clause) {
	            var dimension = dataCube.getDimensionByExpression(clause.expression);
	            if (!dimension)
	                return null;
	            return {
	                dimension: dimension,
	                source: 'from-filter',
	                clause: clause
	            };
	        })
	            .filter(Boolean);
	        if (highlight) {
	            highlight.delta.clauses.forEach(function (clause) {
	                var added = false;
	                itemBlanks = itemBlanks.map(function (blank) {
	                    if (clause.expression.equals(blank.clause.expression)) {
	                        added = true;
	                        return {
	                            dimension: blank.dimension,
	                            source: 'from-highlight',
	                            clause: clause
	                        };
	                    }
	                    else {
	                        return blank;
	                    }
	                });
	                if (!added) {
	                    var dimension = dataCube.getDimensionByExpression(clause.expression);
	                    if (dimension) {
	                        itemBlanks.push({
	                            dimension: dimension,
	                            source: 'from-highlight',
	                            clause: clause
	                        });
	                    }
	                }
	            });
	        }
	        if (possibleDimension && possiblePosition) {
	            var dummyBlank = {
	                dimension: possibleDimension,
	                source: 'from-drag'
	            };
	            if (possiblePosition.replace === maxItems) {
	                possiblePosition = new index_1.DragPosition({ insert: possiblePosition.replace });
	            }
	            if (possiblePosition.isInsert()) {
	                itemBlanks.splice(possiblePosition.insert, 0, dummyBlank);
	            }
	            else {
	                itemBlanks[possiblePosition.replace] = dummyBlank;
	            }
	        }
	        return itemBlanks;
	    };
	    FilterTile.prototype.render = function () {
	        var _this = this;
	        var _a = this.state, dragPosition = _a.dragPosition, maxItems = _a.maxItems;
	        var itemBlanks = this.getItemBlanks();
	        var itemX = 0;
	        var filterItems = itemBlanks.slice(0, maxItems).map(function (item) {
	            var style = dom_1.transformStyle(itemX, 0);
	            itemX += pill_tile_1.SECTION_WIDTH;
	            return _this.renderItemBlank(item, style);
	        });
	        var overflow = itemBlanks.slice(maxItems);
	        if (overflow.length > 0) {
	            var overFlowStart = filterItems.length * pill_tile_1.SECTION_WIDTH;
	            filterItems.push(this.renderOverflow(overflow, overFlowStart));
	        }
	        return React.createElement("div", {className: 'filter-tile', onDragEnter: this.dragEnter.bind(this)}, 
	            React.createElement("div", {className: "title"}, constants_1.STRINGS.filter), 
	            React.createElement("div", {className: "items", ref: "items"}, filterItems), 
	            dragPosition ? React.createElement(fancy_drag_indicator_1.FancyDragIndicator, {dragPosition: dragPosition}) : null, 
	            dragPosition ? React.createElement("div", {className: "drag-mask", onDragOver: this.dragOver.bind(this), onDragLeave: this.dragLeave.bind(this), onDragExit: this.dragLeave.bind(this), onDrop: this.drop.bind(this)}) : null, 
	            this.renderMenu());
	    };
	    return FilterTile;
	}(React.Component));
	exports.FilterTile = FilterTile;


/***/ },
/* 426 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(427);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./filter-tile.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./filter-tile.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 427 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".filter-tile .overflow,.overflow-menu .split,.overflow-menu .filter,.filter-tile .items .filter{padding:0 0 0 9px;background:#b6e3fc;border:1px solid transparent;border-radius:4px;cursor:pointer;overflow:hidden;-webkit-transition:-webkit-transform 0.1s ease-in-out;transition:-webkit-transform 0.1s ease-in-out;transition:transform 0.1s ease-in-out;transition:transform 0.1s ease-in-out, -webkit-transform 0.1s ease-in-out;width:192px}.filter-tile .overflow .reading,.overflow-menu .split .reading,.overflow-menu .filter .reading,.filter-tile .items .filter .reading{white-space:nowrap;overflow-x:hidden;text-overflow:ellipsis;pointer-events:none;white-space:nowrap;margin-right:20px;height:16px;margin-top:7px}.filter-tile .overflow .remove,.overflow-menu .split .remove,.overflow-menu .filter .remove,.filter-tile .items .filter .remove{position:absolute;top:0;bottom:0;right:0;width:27px;text-align:center;padding-top:9px;cursor:pointer}.filter-tile .overflow .remove svg,.overflow-menu .split .remove svg,.overflow-menu .filter .remove svg,.filter-tile .items .filter .remove svg{width:10px}.filter-tile .overflow .remove path,.overflow-menu .split .remove path,.overflow-menu .filter .remove path,.filter-tile .items .filter .remove path{fill:rgba(0,0,0,0.2)}.filter-tile .overflow .remove:hover path,.overflow-menu .split .remove:hover path,.overflow-menu .filter .remove:hover path,.filter-tile .items .filter .remove:hover path{fill:rgba(0,0,0,0.5)}.filter-tile .overflow:hover,.overflow-menu .split:hover,.overflow-menu .filter:hover,.filter-tile .items .filter:hover,.filter-tile .selected.overflow,.overflow-menu .selected.split,.overflow-menu .selected.filter,.filter-tile .items .selected.filter{background-color:#98d8fb}.filter-tile .type-time.overflow,.overflow-menu .type-time.split,.overflow-menu .type-time.filter,.filter-tile .items .type-time.filter,.filter-tile .type-number.overflow,.overflow-menu .type-number.split,.overflow-menu .type-number.filter,.filter-tile .items .type-number.filter{background:#c2eac4}.filter-tile .type-time.overflow:hover,.overflow-menu .type-time.split:hover,.overflow-menu .type-time.filter:hover,.filter-tile .items .type-time.filter:hover,.filter-tile .type-time.selected.overflow,.overflow-menu .type-time.selected.split,.overflow-menu .type-time.selected.filter,.filter-tile .items .type-time.selected.filter,.filter-tile .type-number.overflow:hover,.overflow-menu .type-number.split:hover,.overflow-menu .type-number.filter:hover,.filter-tile .items .type-number.filter:hover,.filter-tile .type-number.selected.overflow,.overflow-menu .type-number.selected.split,.overflow-menu .type-number.selected.filter,.filter-tile .items .type-number.selected.filter{background-color:#abe2ad}.filter-tile .overflow,.filter-tile .items .filter{top:4px;bottom:4px}.filter-tile{background:#fff;box-shadow:0 1px 1px 0 rgba(0,0,0,0.1)}.filter-tile .title{position:absolute;top:0;bottom:0;left:0;width:64px;padding:12px 0 0 14px;font-size:12px;text-transform:uppercase;color:#999}.filter-tile .overflow{position:absolute;left:0;padding:0 10px;width:40px}.filter-tile .all-continuous.overflow{background:#c2eac4}.filter-tile .overflow .count{pointer-events:none;white-space:nowrap;height:16px;margin-top:7px}.overflow-menu .split,.overflow-menu .filter{position:absolute;left:8px;top:0;height:29px}.overflow-menu .split.from-highlight,.overflow-menu .filter.from-highlight{border:1px dashed #168bc5;background:rgba(182,227,252,0.5)}.overflow-menu .split.from-highlight.type-time,.overflow-menu .split.from-highlight.type-number,.overflow-menu .filter.from-highlight.type-time,.overflow-menu .filter.from-highlight.type-number{border:1px dashed #449c53;background:rgba(194,234,196,0.5)}.filter-tile .drag-mask{position:absolute;top:0;bottom:0;left:0;right:0}.filter-tile .items{position:absolute;top:0;bottom:0;left:64px;right:0;-webkit-transition:height 0.1s ease-in-out;transition:height 0.1s ease-in-out;overflow:hidden}.filter-tile .items .filter{position:absolute;left:0}.filter-tile .items .filter.from-highlight{border:1px dashed #168bc5;background:rgba(182,227,252,0.5)}.filter-tile .items .filter.from-highlight.type-time,.filter-tile .items .filter.from-highlight.type-number{border:1px dashed #449c53;background:rgba(194,234,196,0.5)}.filter-tile .items .filter .dimension-title{margin-right:5px}.filter-tile .items .filter.excluded .values{text-decoration:line-through}.filter-tile .fancy-drag-indicator{position:absolute;top:0;bottom:0;left:64px;right:0}\n", ""]);

	// exports


/***/ },
/* 428 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var constants_1 = __webpack_require__(292);
	exports.SECTION_WIDTH = constants_1.CORE_ITEM_WIDTH + constants_1.CORE_ITEM_GAP;
	function getWidthNoOverflowAdjustment(stageWidth) {
	    return stageWidth - constants_1.BAR_TITLE_WIDTH - constants_1.VIS_SELECTOR_WIDTH + constants_1.CORE_ITEM_GAP;
	}
	function getMaxItems(stageWidth, itemsLength) {
	    var maxWidth = getWidthNoOverflowAdjustment(stageWidth);
	    var includedItems = itemsLength;
	    var initialMax = Math.floor((maxWidth - constants_1.OVERFLOW_WIDTH) / exports.SECTION_WIDTH);
	    if (initialMax < includedItems) {
	        var widthPlusOverflow = initialMax * exports.SECTION_WIDTH + constants_1.OVERFLOW_WIDTH + constants_1.CORE_ITEM_GAP;
	        var maxItems = null;
	        if (maxWidth < widthPlusOverflow) {
	            maxItems = initialMax - 1;
	        }
	        else if (includedItems - initialMax === 1) {
	            maxItems = Math.floor(maxWidth / exports.SECTION_WIDTH);
	        }
	        else {
	            maxItems = initialMax;
	        }
	        return maxItems;
	    }
	    else {
	        return initialMax;
	    }
	}
	exports.getMaxItems = getMaxItems;


/***/ },
/* 429 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(430);
	var React = __webpack_require__(5);
	var svg_icon_1 = __webpack_require__(187);
	var dom_1 = __webpack_require__(300);
	var string_1 = __webpack_require__(402);
	var FormLabel = (function (_super) {
	    __extends(FormLabel, _super);
	    function FormLabel() {
	        _super.call(this);
	        this.state = { helpVisible: false };
	    }
	    FormLabel.dumbLabel = function (label) {
	        return React.createElement("div", {className: "form-label"}, 
	            React.createElement("div", {className: "label"}, label)
	        );
	    };
	    FormLabel.simpleGenerator = function (labels, errors, isBubble) {
	        if (isBubble === void 0) { isBubble = false; }
	        return function (name) {
	            var myLabels = labels[name] || { label: '', description: '' };
	            return React.createElement(FormLabel, {isBubble: isBubble, label: myLabels.label, helpText: myLabels.description, errorText: errors[name]});
	        };
	    };
	    FormLabel.prototype.componentWillReceiveProps = function (nextProps) {
	        if (nextProps.errorText) {
	            if (!this.state.helpVisible)
	                this.setState({ helpVisible: true, hideHelpIfNoError: true });
	        }
	        else if (this.state.hideHelpIfNoError) {
	            this.setState({ helpVisible: false, hideHelpIfNoError: false });
	        }
	        else {
	            this.setState({ hideHelpIfNoError: false });
	        }
	    };
	    FormLabel.prototype.onHelpClick = function () {
	        this.setState({ helpVisible: !this.state.helpVisible, hideHelpIfNoError: false });
	    };
	    FormLabel.prototype.renderIcon = function () {
	        var _a = this.props, helpText = _a.helpText, errorText = _a.errorText;
	        if (!helpText && !errorText)
	            return null;
	        var helpVisible = this.state.helpVisible;
	        if (errorText) {
	            return React.createElement("div", {className: "icon-container error", onClick: this.onHelpClick.bind(this)}, 
	                React.createElement(svg_icon_1.SvgIcon, {className: "icon", svg: __webpack_require__(432)})
	            );
	        }
	        if (helpVisible) {
	            return React.createElement("div", {className: "icon-container visible", onClick: this.onHelpClick.bind(this)}, 
	                React.createElement(svg_icon_1.SvgIcon, {className: "icon", svg: __webpack_require__(432)})
	            );
	        }
	        return React.createElement("div", {className: "icon-container", onClick: this.onHelpClick.bind(this)}, 
	            React.createElement(svg_icon_1.SvgIcon, {className: "icon", svg: __webpack_require__(432)})
	        );
	    };
	    FormLabel.prototype.renderAdditionalText = function () {
	        var _a = this.props, helpText = _a.helpText, errorText = _a.errorText;
	        var helpVisible = this.state.helpVisible;
	        if (!helpVisible && !errorText)
	            return null;
	        return React.createElement("div", {className: "additional-text"}, 
	            errorText ? React.createElement("div", {className: "error-text"}, string_1.firstUp(errorText)) : null, 
	            helpVisible ? React.createElement("div", {className: "help-text", dangerouslySetInnerHTML: { __html: helpText }}) : null);
	    };
	    FormLabel.prototype.render = function () {
	        var _a = this.props, label = _a.label, errorText = _a.errorText, isBubble = _a.isBubble;
	        return React.createElement("div", {className: dom_1.classNames('form-label', { error: !!errorText, bubble: isBubble })}, 
	            React.createElement("div", {className: "label"}, label), 
	            this.renderIcon(), 
	            this.renderAdditionalText());
	    };
	    return FormLabel;
	}(React.Component));
	exports.FormLabel = FormLabel;


/***/ },
/* 430 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(431);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./form-label.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./form-label.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 431 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".form-label.bubble .additional-text{background:#fff;border-radius:2px;box-shadow:0 3px 10px 0 rgba(0,0,0,0.26),0 0 3px 0 rgba(0,0,0,0.16)}.form-label.bubble .additional-text{z-index:31}.form-label.bubble .additional-text .shpitz{position:absolute;width:60px;height:60px;overflow:hidden;pointer-events:none}.form-label.bubble .additional-text .shpitz::after{content:'';position:absolute;width:12px;height:12px;-webkit-transform:rotate(45deg);-ms-transform:rotate(45deg);transform:rotate(45deg);background:#fff;box-shadow:0 0 4px 0 rgba(0,0,0,0.35)}.form-label.bubble .additional-text .shpitz.top{top:-60px;left:50%;margin-left:-30px}.form-label.bubble .additional-text .shpitz.top::after{bottom:0;left:50%;margin-left:-6px;margin-bottom:-6px}.form-label.bubble .additional-text .shpitz.bottom{bottom:-60px;left:50%;margin-left:-30px}.form-label.bubble .additional-text .shpitz.bottom::after{top:0;left:50%;margin-left:-6px;margin-top:-6px}.form-label.bubble .additional-text .shpitz.left{left:-60px;top:50%;margin-top:-30px}.form-label.bubble .additional-text .shpitz.left::after{right:0;top:50%;margin-top:-6px;margin-right:-6px}.form-label.bubble .additional-text .shpitz.right{right:-60px;top:50%;margin-top:-30px}.form-label.bubble .additional-text .shpitz.right::after{left:0;top:50%;margin-top:-6px;margin-left:-6px}.form-label .label{text-transform:uppercase;font-size:12px;color:#a6a6a6;margin-bottom:5px}.form-label{height:20px}.form-label .icon-container{position:absolute;right:1px;top:-3px;width:16px;height:16px;border-radius:20px;background:rgba(30,163,230,0.22);cursor:pointer}.form-label .icon-container:hover,.form-label .icon-container.visible{background:#1ea3e6}.form-label .icon-container:hover .icon path,.form-label .icon-container.visible .icon path{fill:#fff}.form-label .icon-container.visible:hover{background:#1791cf}.form-label .icon-container.error{background:#e24b4b}.form-label .icon-container.error .icon path{fill:#fff}.form-label .icon-container .icon{position:absolute;top:1px;left:1px;width:14px;height:14px}.form-label .icon-container .icon path{fill:#189bdc}.form-label.bubble .additional-text{padding:10px;max-width:300px}.form-label .additional-text{position:absolute;left:calc(100% + 10px);top:-2px;width:100%;max-width:400px;font-size:12px;line-height:17px;color:#4cb6eb}.form-label .additional-text .error-text{color:#e24b4b;margin-bottom:10px}.form-label .additional-text a::after{position:absolute;top:0;left:0;right:0;height:15px;content:'';position:absolute;border-bottom:1px dotted}.form-label .additional-text em{font-style:italic}.form-label .additional-text code{background:rgba(30,163,230,0.16);border-radius:2px;padding:0 4px}.form-label.error .icon path{fill:#e24b4b}\n", ""]);

	// exports


/***/ },
/* 432 */
/***/ function(module, exports) {

	module.exports = "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 19 19\"><path fill=\"#000000\" fill-rule=\"evenodd\" d=\"M8.25,16 L10.4166667,16 L10.4166667,13.8333333 L8.25,13.8333333 L8.25,16 Z M9.33333333,3 C6.93916667,3 5,4.93916667 5,7.33333333 L7.16666667,7.33333333 C7.16666667,6.14166667 8.14166667,5.16666667 9.33333333,5.16666667 C10.525,5.16666667 11.5,6.14166667 11.5,7.33333333 C11.5,9.5 8.25,9.22916667 8.25,12.75 L10.4166667,12.75 C10.4166667,10.3125 13.6666667,10.0416667 13.6666667,7.33333333 C13.6666667,4.93916667 11.7275,3 9.33333333,3 Z\"/></svg>"

/***/ },
/* 433 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(434);
	var React = __webpack_require__(5);
	var ReactDOM = __webpack_require__(39);
	var GoldenCenter = (function (_super) {
	    __extends(GoldenCenter, _super);
	    function GoldenCenter() {
	        _super.call(this);
	        this.state = {
	            top: 0
	        };
	        this.globalResizeListener = this.globalResizeListener.bind(this);
	    }
	    GoldenCenter.prototype.componentDidMount = function () {
	        window.addEventListener('resize', this.globalResizeListener);
	        this.globalResizeListener();
	    };
	    GoldenCenter.prototype.componentWillUnmount = function () {
	        window.removeEventListener('resize', this.globalResizeListener);
	    };
	    GoldenCenter.prototype.globalResizeListener = function () {
	        var myNode = ReactDOM.findDOMNode(this);
	        if (!myNode)
	            return;
	        var childNode = myNode.firstChild;
	        if (!childNode)
	            return;
	        var myRect = myNode.getBoundingClientRect();
	        var childRect = childNode.getBoundingClientRect();
	        var _a = this.props, topRatio = _a.topRatio, minPadding = _a.minPadding;
	        var top = Math.max((myRect.height - childRect.height) * topRatio, minPadding);
	        this.setState({ top: top });
	    };
	    GoldenCenter.prototype.render = function () {
	        var _a = this.props, minPadding = _a.minPadding, children = _a.children;
	        var top = this.state.top;
	        return React.createElement("div", {className: "golden-center", style: { paddingTop: top, paddingBottom: minPadding }}, React.Children.only(children));
	    };
	    GoldenCenter.defaultProps = {
	        topRatio: 0.618 / 1.618,
	        minPadding: 50
	    };
	    return GoldenCenter;
	}(React.Component));
	exports.GoldenCenter = GoldenCenter;


/***/ },
/* 434 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(435);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./golden-center.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./golden-center.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 435 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".golden-center>div{margin:auto}\n", ""]);

	// exports


/***/ },
/* 436 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(437);
	var React = __webpack_require__(5);
	var dom_1 = __webpack_require__(300);
	var GridLines = (function (_super) {
	    __extends(GridLines, _super);
	    function GridLines() {
	        _super.call(this);
	    }
	    GridLines.prototype.render = function () {
	        var _a = this.props, orientation = _a.orientation, stage = _a.stage, ticks = _a.ticks, scale = _a.scale;
	        var lines = ticks.map(function (tick) {
	            var lineProps = {
	                key: String(tick)
	            };
	            if (orientation === 'horizontal') {
	                var y = dom_1.roundToHalfPx(scale(tick));
	                lineProps.x1 = 0;
	                lineProps.x2 = stage.width;
	                lineProps.y1 = y;
	                lineProps.y2 = y;
	            }
	            else {
	                var x = dom_1.roundToHalfPx(scale(tick));
	                lineProps.x1 = x;
	                lineProps.x2 = x;
	                lineProps.y1 = 0;
	                lineProps.y2 = stage.height;
	            }
	            return React.createElement('line', lineProps);
	        });
	        return React.createElement("g", {className: dom_1.classNames('grid-lines', orientation), transform: stage.getTransform()}, lines);
	    };
	    return GridLines;
	}(React.Component));
	exports.GridLines = GridLines;


/***/ },
/* 437 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(438);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./grid-lines.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./grid-lines.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 438 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".grid-lines line{pointer-events:none;stroke:#ebebeb}\n", ""]);

	// exports


/***/ },
/* 439 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(440);
	var React = __webpack_require__(5);
	var Highlighter = (function (_super) {
	    __extends(Highlighter, _super);
	    function Highlighter() {
	        _super.call(this);
	    }
	    Highlighter.prototype.render = function () {
	        var _a = this.props, highlightRange = _a.highlightRange, scaleX = _a.scaleX;
	        if (!highlightRange)
	            return null;
	        var startPos = scaleX(highlightRange.start);
	        var endPos = scaleX(highlightRange.end);
	        var whiteoutLeftStyle = {
	            width: Math.max(startPos, 0)
	        };
	        var frameStyle = {
	            left: startPos,
	            width: Math.max(endPos - startPos, 0)
	        };
	        var whiteoutRightStyle = {
	            left: endPos
	        };
	        return React.createElement("div", {className: "highlighter"}, 
	            React.createElement("div", {className: "whiteout left", style: whiteoutLeftStyle}), 
	            React.createElement("div", {className: "frame", style: frameStyle}), 
	            React.createElement("div", {className: "whiteout right", style: whiteoutRightStyle}));
	    };
	    return Highlighter;
	}(React.Component));
	exports.Highlighter = Highlighter;


/***/ },
/* 440 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(441);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./highlighter.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./highlighter.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 441 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".highlighter{pointer-events:none}.highlighter .frame{position:absolute;height:100%;border:1px dashed #168bc5;border-radius:2px;z-index:1}.highlighter .frame .highlight-controls{position:absolute;right:-33px}.highlighter .whiteout{position:absolute;height:100%;left:0;right:0;background:#fff;opacity:0.5}\n", ""]);

	// exports


/***/ },
/* 442 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(443);
	var React = __webpack_require__(5);
	var index_1 = __webpack_require__(202);
	var constants_1 = __webpack_require__(292);
	var download_1 = __webpack_require__(445);
	var bubble_menu_1 = __webpack_require__(297);
	var HilukMenu = (function (_super) {
	    __extends(HilukMenu, _super);
	    function HilukMenu() {
	        _super.call(this);
	        this.state = {
	            url: null,
	            specificUrl: null
	        };
	    }
	    HilukMenu.prototype.componentDidMount = function () {
	        var _a = this.props, essence = _a.essence, timekeeper = _a.timekeeper, getUrlPrefix = _a.getUrlPrefix;
	        var urlPrefix = getUrlPrefix();
	        var url = essence.getURL(urlPrefix);
	        var specificUrl = essence.filter.isRelative() ? essence.convertToSpecificFilter(timekeeper).getURL(urlPrefix) : null;
	        this.setState({
	            url: url,
	            specificUrl: specificUrl
	        });
	    };
	    HilukMenu.prototype.openRawDataModal = function () {
	        var _a = this.props, openRawDataModal = _a.openRawDataModal, onClose = _a.onClose;
	        openRawDataModal();
	        onClose();
	    };
	    HilukMenu.prototype.onExport = function () {
	        var _a = this.props, onClose = _a.onClose, getDownloadableDataset = _a.getDownloadableDataset, essence = _a.essence, timekeeper = _a.timekeeper;
	        var dataCube = essence.dataCube, splits = essence.splits;
	        if (!getDownloadableDataset)
	            return;
	        var filters = essence.getEffectiveFilter(timekeeper).getFileString(dataCube.timeAttribute);
	        var splitsString = splits.toArray().map(function (split) {
	            var dimension = split.getDimension(dataCube.dimensions);
	            if (!dimension)
	                return '';
	            return constants_1.STRINGS.splitDelimiter + "_" + dimension.name;
	        }).join("_");
	        download_1.download(getDownloadableDataset(), download_1.makeFileName(dataCube.name, filters, splitsString), 'csv');
	        onClose();
	    };
	    HilukMenu.prototype.render = function () {
	        var _a = this.props, openOn = _a.openOn, onClose = _a.onClose, externalViews = _a.externalViews, essence = _a.essence, getDownloadableDataset = _a.getDownloadableDataset, addEssenceToCollection = _a.addEssenceToCollection;
	        var _b = this.state, url = _b.url, specificUrl = _b.specificUrl;
	        var shareOptions = [];
	        if (addEssenceToCollection) {
	            shareOptions.push(React.createElement("li", {key: "add-to-collection", className: "add-to-collection", onClick: addEssenceToCollection}, constants_1.STRINGS.addToCollection));
	        }
	        shareOptions.push(React.createElement("li", {className: "copy-url clipboard", key: "copy-url", "data-clipboard-text": url, onClick: onClose}, constants_1.STRINGS.copyUrl));
	        if (specificUrl) {
	            shareOptions.push(React.createElement("li", {className: "copy-specific-url clipboard", key: "copy-specific-url", "data-clipboard-text": specificUrl, onClick: onClose}, constants_1.STRINGS.copySpecificUrl));
	        }
	        if (getDownloadableDataset()) {
	            shareOptions.push(React.createElement("li", {className: "export", key: "export", onClick: this.onExport.bind(this)}, constants_1.STRINGS.exportToCSV));
	        }
	        shareOptions.push(React.createElement("li", {className: "view-raw-data", key: "view-raw-data", onClick: this.openRawDataModal.bind(this)}, constants_1.STRINGS.viewRawData));
	        if (externalViews) {
	            externalViews.forEach(function (externalView, i) {
	                var url = externalView.linkGeneratorFn(essence.dataCube, essence.timezone, essence.filter, essence.splits);
	                if (typeof url !== "string")
	                    return;
	                var title = constants_1.STRINGS.openIn + " " + externalView.title;
	                var target = externalView.sameWindow ? "_self" : "_blank";
	                shareOptions.push(React.createElement("li", {key: "custom-url-" + i}, 
	                    React.createElement("a", {href: url, target: target}, title)
	                ));
	            });
	        }
	        var stage = index_1.Stage.fromSize(200, 200);
	        return React.createElement(bubble_menu_1.BubbleMenu, {className: "hiluk-menu", direction: "down", stage: stage, openOn: openOn, onClose: onClose}, 
	            React.createElement("ul", {className: "bubble-list"}, shareOptions)
	        );
	    };
	    return HilukMenu;
	}(React.Component));
	exports.HilukMenu = HilukMenu;


/***/ },
/* 443 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(444);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./hiluk-menu.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./hiluk-menu.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 444 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, "", ""]);

	// exports


/***/ },
/* 445 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var filesaver = __webpack_require__(446);
	function getMIMEType(fileType) {
	    switch (fileType) {
	        case 'csv':
	            return 'text/csv';
	        case 'tsv':
	            return 'text/tsv';
	        default:
	            return 'application/json';
	    }
	}
	exports.getMIMEType = getMIMEType;
	function download(dataset, fileName, fileFormat) {
	    var type = getMIMEType(fileFormat) + ";charset=utf-8";
	    var blob = new Blob([datasetToFileString(dataset, fileFormat)], { type: type });
	    if (!fileName)
	        fileName = new Date() + "-data";
	    fileName += "." + fileFormat;
	    filesaver.saveAs(blob, fileName, true);
	}
	exports.download = download;
	function datasetToFileString(dataset, fileFormat) {
	    if (fileFormat === 'csv') {
	        return dataset.toCSV();
	    }
	    else if (fileFormat === 'tsv') {
	        return dataset.toTSV();
	    }
	    else {
	        return JSON.stringify(dataset.toJS(), null, 2);
	    }
	}
	exports.datasetToFileString = datasetToFileString;
	function makeFileName() {
	    var args = [];
	    for (var _i = 0; _i < arguments.length; _i++) {
	        args[_i - 0] = arguments[_i];
	    }
	    var nameComponents = [];
	    args.forEach(function (arg) {
	        if (arg)
	            nameComponents.push(arg.toLowerCase());
	    });
	    var nameString = nameComponents.join("_");
	    return nameString.length < 200 ? nameString : nameString.substr(0, 200);
	}
	exports.makeFileName = makeFileName;


/***/ },
/* 446 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* FileSaver.js
	 * A saveAs() FileSaver implementation.
	 * 1.1.20160328
	 *
	 * By Eli Grey, http://eligrey.com
	 * License: MIT
	 *   See https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md
	 */

	/*global self */
	/*jslint bitwise: true, indent: 4, laxbreak: true, laxcomma: true, smarttabs: true, plusplus: true */

	/*! @source http://purl.eligrey.com/github/FileSaver.js/blob/master/FileSaver.js */

	var saveAs = saveAs || (function(view) {
		"use strict";
		// IE <10 is explicitly unsupported
		if (typeof navigator !== "undefined" && /MSIE [1-9]\./.test(navigator.userAgent)) {
			return;
		}
		var
			  doc = view.document
			  // only get URL when necessary in case Blob.js hasn't overridden it yet
			, get_URL = function() {
				return view.URL || view.webkitURL || view;
			}
			, save_link = doc.createElementNS("http://www.w3.org/1999/xhtml", "a")
			, can_use_save_link = "download" in save_link
			, click = function(node) {
				var event = new MouseEvent("click");
				node.dispatchEvent(event);
			}
			, is_safari = /Version\/[\d\.]+.*Safari/.test(navigator.userAgent)
			, webkit_req_fs = view.webkitRequestFileSystem
			, req_fs = view.requestFileSystem || webkit_req_fs || view.mozRequestFileSystem
			, throw_outside = function(ex) {
				(view.setImmediate || view.setTimeout)(function() {
					throw ex;
				}, 0);
			}
			, force_saveable_type = "application/octet-stream"
			, fs_min_size = 0
			// the Blob API is fundamentally broken as there is no "downloadfinished" event to subscribe to
			, arbitrary_revoke_timeout = 1000 * 40 // in ms
			, revoke = function(file) {
				var revoker = function() {
					if (typeof file === "string") { // file is an object URL
						get_URL().revokeObjectURL(file);
					} else { // file is a File
						file.remove();
					}
				};
				/* // Take note W3C:
				var
				  uri = typeof file === "string" ? file : file.toURL()
				, revoker = function(evt) {
					// idealy DownloadFinishedEvent.data would be the URL requested
					if (evt.data === uri) {
						if (typeof file === "string") { // file is an object URL
							get_URL().revokeObjectURL(file);
						} else { // file is a File
							file.remove();
						}
					}
				}
				;
				view.addEventListener("downloadfinished", revoker);
				*/
				setTimeout(revoker, arbitrary_revoke_timeout);
			}
			, dispatch = function(filesaver, event_types, event) {
				event_types = [].concat(event_types);
				var i = event_types.length;
				while (i--) {
					var listener = filesaver["on" + event_types[i]];
					if (typeof listener === "function") {
						try {
							listener.call(filesaver, event || filesaver);
						} catch (ex) {
							throw_outside(ex);
						}
					}
				}
			}
			, auto_bom = function(blob) {
				// prepend BOM for UTF-8 XML and text/* types (including HTML)
				if (/^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(blob.type)) {
					return new Blob(["\ufeff", blob], {type: blob.type});
				}
				return blob;
			}
			, FileSaver = function(blob, name, no_auto_bom) {
				if (!no_auto_bom) {
					blob = auto_bom(blob);
				}
				// First try a.download, then web filesystem, then object URLs
				var
					  filesaver = this
					, type = blob.type
					, blob_changed = false
					, object_url
					, target_view
					, dispatch_all = function() {
						dispatch(filesaver, "writestart progress write writeend".split(" "));
					}
					// on any filesys errors revert to saving with object URLs
					, fs_error = function() {
						if (target_view && is_safari && typeof FileReader !== "undefined") {
							// Safari doesn't allow downloading of blob urls
							var reader = new FileReader();
							reader.onloadend = function() {
								var base64Data = reader.result;
								target_view.location.href = "data:attachment/file" + base64Data.slice(base64Data.search(/[,;]/));
								filesaver.readyState = filesaver.DONE;
								dispatch_all();
							};
							reader.readAsDataURL(blob);
							filesaver.readyState = filesaver.INIT;
							return;
						}
						// don't create more object URLs than needed
						if (blob_changed || !object_url) {
							object_url = get_URL().createObjectURL(blob);
						}
						if (target_view) {
							target_view.location.href = object_url;
						} else {
							var new_tab = view.open(object_url, "_blank");
							if (new_tab === undefined && is_safari) {
								//Apple do not allow window.open, see http://bit.ly/1kZffRI
								view.location.href = object_url
							}
						}
						filesaver.readyState = filesaver.DONE;
						dispatch_all();
						revoke(object_url);
					}
					, abortable = function(func) {
						return function() {
							if (filesaver.readyState !== filesaver.DONE) {
								return func.apply(this, arguments);
							}
						};
					}
					, create_if_not_found = {create: true, exclusive: false}
					, slice
				;
				filesaver.readyState = filesaver.INIT;
				if (!name) {
					name = "download";
				}
				if (can_use_save_link) {
					object_url = get_URL().createObjectURL(blob);
					setTimeout(function() {
						save_link.href = object_url;
						save_link.download = name;
						click(save_link);
						dispatch_all();
						revoke(object_url);
						filesaver.readyState = filesaver.DONE;
					});
					return;
				}
				// Object and web filesystem URLs have a problem saving in Google Chrome when
				// viewed in a tab, so I force save with application/octet-stream
				// http://code.google.com/p/chromium/issues/detail?id=91158
				// Update: Google errantly closed 91158, I submitted it again:
				// https://code.google.com/p/chromium/issues/detail?id=389642
				if (view.chrome && type && type !== force_saveable_type) {
					slice = blob.slice || blob.webkitSlice;
					blob = slice.call(blob, 0, blob.size, force_saveable_type);
					blob_changed = true;
				}
				// Since I can't be sure that the guessed media type will trigger a download
				// in WebKit, I append .download to the filename.
				// https://bugs.webkit.org/show_bug.cgi?id=65440
				if (webkit_req_fs && name !== "download") {
					name += ".download";
				}
				if (type === force_saveable_type || webkit_req_fs) {
					target_view = view;
				}
				if (!req_fs) {
					fs_error();
					return;
				}
				fs_min_size += blob.size;
				req_fs(view.TEMPORARY, fs_min_size, abortable(function(fs) {
					fs.root.getDirectory("saved", create_if_not_found, abortable(function(dir) {
						var save = function() {
							dir.getFile(name, create_if_not_found, abortable(function(file) {
								file.createWriter(abortable(function(writer) {
									writer.onwriteend = function(event) {
										target_view.location.href = file.toURL();
										filesaver.readyState = filesaver.DONE;
										dispatch(filesaver, "writeend", event);
										revoke(file);
									};
									writer.onerror = function() {
										var error = writer.error;
										if (error.code !== error.ABORT_ERR) {
											fs_error();
										}
									};
									"writestart progress write abort".split(" ").forEach(function(event) {
										writer["on" + event] = filesaver["on" + event];
									});
									writer.write(blob);
									filesaver.abort = function() {
										writer.abort();
										filesaver.readyState = filesaver.DONE;
									};
									filesaver.readyState = filesaver.WRITING;
								}), fs_error);
							}), fs_error);
						};
						dir.getFile(name, {create: false}, abortable(function(file) {
							// delete file if it already exists
							file.remove();
							save();
						}), abortable(function(ex) {
							if (ex.code === ex.NOT_FOUND_ERR) {
								save();
							} else {
								fs_error();
							}
						}));
					}), fs_error);
				}), fs_error);
			}
			, FS_proto = FileSaver.prototype
			, saveAs = function(blob, name, no_auto_bom) {
				return new FileSaver(blob, name, no_auto_bom);
			}
		;
		// IE 10+ (native saveAs)
		if (typeof navigator !== "undefined" && navigator.msSaveOrOpenBlob) {
			return function(blob, name, no_auto_bom) {
				if (!no_auto_bom) {
					blob = auto_bom(blob);
				}
				return navigator.msSaveOrOpenBlob(blob, name || "download");
			};
		}

		FS_proto.abort = function() {
			var filesaver = this;
			filesaver.readyState = filesaver.DONE;
			dispatch(filesaver, "abort");
		};
		FS_proto.readyState = FS_proto.INIT = 0;
		FS_proto.WRITING = 1;
		FS_proto.DONE = 2;

		FS_proto.error =
		FS_proto.onwritestart =
		FS_proto.onprogress =
		FS_proto.onwrite =
		FS_proto.onabort =
		FS_proto.onerror =
		FS_proto.onwriteend =
			null;

		return saveAs;
	}(
		   typeof self !== "undefined" && self
		|| typeof window !== "undefined" && window
		|| this.content
	));
	// `self` is undefined in Firefox for Android content script context
	// while `this` is nsIContentFrameMessageManager
	// with an attribute `content` that corresponds to the window

	if (typeof module !== "undefined" && module.exports) {
	  module.exports.saveAs = saveAs;
	} else if (("function" !== "undefined" && __webpack_require__(447) !== null) && (__webpack_require__(448) !== null)) {
	  !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function() {
	    return saveAs;
	  }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	}


/***/ },
/* 447 */
/***/ function(module, exports) {

	module.exports = function() { throw new Error("define cannot be used indirect"); };


/***/ },
/* 448 */
/***/ function(module, exports) {

	/* WEBPACK VAR INJECTION */(function(__webpack_amd_options__) {module.exports = __webpack_amd_options__;

	/* WEBPACK VAR INJECTION */}.call(exports, {}))

/***/ },
/* 449 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(450);
	var React = __webpack_require__(5);
	var body_portal_1 = __webpack_require__(301);
	var segment_action_buttons_1 = __webpack_require__(452);
	var LEFT_OFFSET = 22;
	var HoverMultiBubble = (function (_super) {
	    __extends(HoverMultiBubble, _super);
	    function HoverMultiBubble() {
	        _super.call(this);
	    }
	    HoverMultiBubble.prototype.renderColorSwabs = function () {
	        var colorEntries = this.props.colorEntries;
	        if (!colorEntries || !colorEntries.length)
	            return null;
	        var colorSwabs = colorEntries.map(function (colorEntry) {
	            var color = colorEntry.color, segmentLabel = colorEntry.segmentLabel, measureLabel = colorEntry.measureLabel;
	            var swabStyle = { background: color };
	            return React.createElement("div", {className: "color", key: segmentLabel}, 
	                React.createElement("div", {className: "color-swab", style: swabStyle}), 
	                React.createElement("div", {className: "color-name"}, segmentLabel), 
	                React.createElement("div", {className: "color-value"}, measureLabel));
	        });
	        return React.createElement("div", {className: "colors"}, colorSwabs);
	    };
	    HoverMultiBubble.prototype.render = function () {
	        var _a = this.props, left = _a.left, top = _a.top, dimension = _a.dimension, segmentLabel = _a.segmentLabel, clicker = _a.clicker, onClose = _a.onClose;
	        return React.createElement(body_portal_1.BodyPortal, {left: left + LEFT_OFFSET, top: top, disablePointerEvents: !clicker}, 
	            React.createElement("div", {className: "hover-multi-bubble"}, 
	                React.createElement("div", {className: "bucket"}, segmentLabel), 
	                this.renderColorSwabs(), 
	                clicker ? React.createElement(segment_action_buttons_1.SegmentActionButtons, {clicker: clicker, dimension: dimension, segmentLabel: segmentLabel, disableMoreMenu: true, onClose: onClose}) : null)
	        );
	    };
	    return HoverMultiBubble;
	}(React.Component));
	exports.HoverMultiBubble = HoverMultiBubble;


/***/ },
/* 450 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(451);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./hover-multi-bubble.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./hover-multi-bubble.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 451 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".hover-multi-bubble{background:#fff;border-radius:2px;box-shadow:0 3px 10px 0 rgba(0,0,0,0.26),0 0 3px 0 rgba(0,0,0,0.16)}.hover-multi-bubble{background:rgba(255,255,255,0.9);position:absolute;width:200px;padding:8px}.hover-multi-bubble .bucket{color:#a6a6a6;margin-bottom:6px}.hover-multi-bubble .color .color-swab{position:absolute;top:1px;left:0;width:15px;height:15px;border-radius:2px}.hover-multi-bubble .color .color-name{white-space:nowrap;overflow-x:hidden;text-overflow:ellipsis;display:inline-block;margin-left:22px;line-height:18px;width:108px}.hover-multi-bubble .color .color-value{position:absolute;top:0;bottom:0;right:0;width:60px;line-height:18px;text-align:right}.hover-multi-bubble .segment-action-buttons{margin-top:7px}\n", ""]);

	// exports


/***/ },
/* 452 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(453);
	var React = __webpack_require__(5);
	var index_1 = __webpack_require__(202);
	var constants_1 = __webpack_require__(292);
	var bubble_menu_1 = __webpack_require__(297);
	var button_1 = __webpack_require__(314);
	var SegmentActionButtons = (function (_super) {
	    __extends(SegmentActionButtons, _super);
	    function SegmentActionButtons() {
	        _super.call(this);
	        this.state = {
	            moreMenuOpenOn: null
	        };
	    }
	    SegmentActionButtons.prototype.onSelect = function (e) {
	        var _a = this.props, onClose = _a.onClose, clicker = _a.clicker;
	        clicker.acceptHighlight();
	        if (onClose)
	            onClose();
	    };
	    SegmentActionButtons.prototype.onCancel = function (e) {
	        var _a = this.props, onClose = _a.onClose, clicker = _a.clicker;
	        clicker.dropHighlight();
	        if (onClose)
	            onClose();
	    };
	    SegmentActionButtons.prototype.onMore = function (e) {
	        var moreMenuOpenOn = this.state.moreMenuOpenOn;
	        if (moreMenuOpenOn)
	            return this.closeMoreMenu();
	        this.setState({
	            moreMenuOpenOn: e.target
	        });
	    };
	    SegmentActionButtons.prototype.closeMoreMenu = function () {
	        this.setState({
	            moreMenuOpenOn: null
	        });
	    };
	    SegmentActionButtons.prototype.getUrl = function () {
	        var _a = this.props, segmentLabel = _a.segmentLabel, dimension = _a.dimension;
	        if (!dimension || !dimension.url)
	            return null;
	        return dimension.url.replace(/%s/g, segmentLabel);
	    };
	    SegmentActionButtons.prototype.openRawDataModal = function () {
	        var openRawDataModal = this.props.openRawDataModal;
	        this.closeMoreMenu();
	        openRawDataModal();
	    };
	    SegmentActionButtons.prototype.renderMoreMenu = function () {
	        var segmentLabel = this.props.segmentLabel;
	        var moreMenuOpenOn = this.state.moreMenuOpenOn;
	        if (!moreMenuOpenOn)
	            return null;
	        var menuSize = index_1.Stage.fromSize(160, 160);
	        var bubbleListItems = [
	            React.createElement("li", {className: "clipboard", key: "copyValue", "data-clipboard-text": segmentLabel, onClick: this.closeMoreMenu.bind(this)}, constants_1.STRINGS.copyValue),
	            React.createElement("li", {className: "view-raw-data", key: "view-raw-data", onClick: this.openRawDataModal.bind(this)}, constants_1.STRINGS.viewRawData)
	        ];
	        var url = this.getUrl();
	        if (url) {
	            bubbleListItems.push(React.createElement("li", {key: "goToUrl"}, 
	                React.createElement("a", {href: url, onClick: this.closeMoreMenu.bind(this), target: "_blank"}, constants_1.STRINGS.goToUrl)
	            ));
	        }
	        return React.createElement(bubble_menu_1.BubbleMenu, {className: "more-menu", direction: "down", stage: menuSize, openOn: moreMenuOpenOn, align: "start", onClose: this.closeMoreMenu.bind(this)}, 
	            React.createElement("ul", {className: "bubble-list"}, bubbleListItems)
	        );
	    };
	    SegmentActionButtons.prototype.render = function () {
	        var disableMoreMenu = this.props.disableMoreMenu;
	        var moreMenuOpenOn = this.state.moreMenuOpenOn;
	        return React.createElement("div", {className: "segment-action-buttons"}, 
	            React.createElement(button_1.Button, {type: "primary", className: "mini", onClick: this.onSelect.bind(this), title: constants_1.STRINGS.select}), 
	            React.createElement(button_1.Button, {type: "secondary", className: "mini", onClick: this.onCancel.bind(this), title: constants_1.STRINGS.cancel}), 
	            disableMoreMenu ? null : React.createElement(button_1.Button, {type: "secondary", className: "mini", onClick: this.onMore.bind(this), svg: __webpack_require__(455), active: Boolean(moreMenuOpenOn)}), 
	            this.renderMoreMenu());
	    };
	    return SegmentActionButtons;
	}(React.Component));
	exports.SegmentActionButtons = SegmentActionButtons;


/***/ },
/* 453 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(454);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./segment-action-buttons.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./segment-action-buttons.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 454 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".segment-action-buttons{white-space:nowrap}.segment-action-buttons .button{margin-right:5px}.segment-action-buttons .button:last-child{margin-right:0}\n", ""]);

	// exports


/***/ },
/* 455 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 19 19\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M5.5,11 C6.32842712,11 7,10.3284271 7,9.5 C7,8.67157288 6.32842712,8 5.5,8 C4.67157288,8 4,8.67157288 4,9.5 C4,10.3284271 4.67157288,11 5.5,11 Z M9.5,11 C10.3284271,11 11,10.3284271 11,9.5 C11,8.67157288 10.3284271,8 9.5,8 C8.67157288,8 8,8.67157288 8,9.5 C8,10.3284271 8.67157288,11 9.5,11 Z M13.5,11 C14.3284271,11 15,10.3284271 15,9.5 C15,8.67157288 14.3284271,8 13.5,8 C12.6715729,8 12,8.67157288 12,9.5 C12,10.3284271 12.6715729,11 13.5,11 Z\" fill=\"#000000\" fill-rule=\"evenodd\"/></svg>"

/***/ },
/* 456 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(457);
	var index_1 = __webpack_require__(231);
	var React = __webpack_require__(5);
	var dropdown_1 = __webpack_require__(307);
	var ImmutableDropdown = (function (_super) {
	    __extends(ImmutableDropdown, _super);
	    function ImmutableDropdown() {
	        _super.call(this);
	    }
	    ImmutableDropdown.specialize = function () {
	        return ImmutableDropdown;
	    };
	    ImmutableDropdown.simpleGenerator = function (instance, changeFn) {
	        return function (name, items) {
	            var MyDropDown = ImmutableDropdown.specialize();
	            return React.createElement(MyDropDown, {items: items, instance: instance, path: name, equal: function (a, b) { return a.value === b.value; }, renderItem: function (a) { return a ? a.label : ''; }, keyItem: function (a) { return a.value || 'default_value'; }, onChange: changeFn});
	        };
	    };
	    ImmutableDropdown.prototype.onChange = function (newSelectedItem) {
	        var _a = this.props, instance = _a.instance, path = _a.path, onChange = _a.onChange, keyItem = _a.keyItem;
	        onChange(index_1.ImmutableUtils.setProperty(instance, path, keyItem(newSelectedItem)), true, path, undefined);
	    };
	    ImmutableDropdown.prototype.render = function () {
	        var _a = this.props, label = _a.label, items = _a.items, equal = _a.equal, renderItem = _a.renderItem, keyItem = _a.keyItem, instance = _a.instance, path = _a.path;
	        var MyDropDown = dropdown_1.Dropdown.specialize();
	        var selectedValue = index_1.ImmutableUtils.getProperty(instance, path);
	        var selectedItem = items.filter(function (item) { return keyItem(item) === selectedValue; })[0] || items[0];
	        return React.createElement(MyDropDown, {className: "immutable-dropdown input", label: label, items: items, selectedItem: selectedItem, equal: equal, renderItem: renderItem, keyItem: keyItem, onSelect: this.onChange.bind(this)});
	    };
	    return ImmutableDropdown;
	}(React.Component));
	exports.ImmutableDropdown = ImmutableDropdown;


/***/ },
/* 457 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(458);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./immutable-dropdown.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./immutable-dropdown.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 458 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, "", ""]);

	// exports


/***/ },
/* 459 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(460);
	var React = __webpack_require__(5);
	var ReactDOM = __webpack_require__(39);
	var index_1 = __webpack_require__(231);
	var dom_1 = __webpack_require__(300);
	var ImmutableInput = (function (_super) {
	    __extends(ImmutableInput, _super);
	    function ImmutableInput() {
	        _super.call(this);
	        this.focusAlreadyGiven = false;
	        this.state = {};
	    }
	    ImmutableInput.simpleGenerator = function (instance, changeFn) {
	        return function (name, validator, focusOnStartUp) {
	            if (validator === void 0) { validator = /^.+$/; }
	            if (focusOnStartUp === void 0) { focusOnStartUp = false; }
	            return React.createElement(ImmutableInput, {key: name, instance: instance, path: name, className: name, onChange: changeFn, focusOnStartUp: focusOnStartUp, validator: validator});
	        };
	    };
	    ;
	    ImmutableInput.prototype.initFromProps = function (props) {
	        if (!props.instance || !props.path)
	            return;
	        var validString;
	        if (this.state.validString === undefined) {
	            validString = props.valueToString(index_1.ImmutableUtils.getProperty(props.instance, props.path));
	        }
	        else {
	            var currentCanonical = props.valueToString(props.stringToValue(this.state.validString));
	            var possibleCanonical = props.valueToString(index_1.ImmutableUtils.getProperty(props.instance, props.path));
	            validString = currentCanonical === possibleCanonical ? this.state.validString : possibleCanonical;
	        }
	        this.setState({
	            myInstance: props.instance,
	            invalidString: undefined,
	            validString: validString
	        });
	    };
	    ImmutableInput.prototype.reset = function (callback) {
	        this.setState({
	            invalidString: undefined,
	            validString: undefined
	        }, callback);
	    };
	    ImmutableInput.prototype.componentWillReceiveProps = function (nextProps) {
	        var _this = this;
	        if (nextProps.instance === undefined) {
	            this.reset(function () { return _this.initFromProps(nextProps); });
	            return;
	        }
	        if (this.state.invalidString === undefined && nextProps.instance !== this.state.myInstance) {
	            this.initFromProps(nextProps);
	        }
	    };
	    ImmutableInput.prototype.componentDidUpdate = function () {
	        this.maybeFocus();
	    };
	    ImmutableInput.prototype.componentDidMount = function () {
	        this.initFromProps(this.props);
	        this.maybeFocus();
	    };
	    ImmutableInput.prototype.maybeFocus = function () {
	        if (!this.focusAlreadyGiven && this.props.focusOnStartUp && this.refs['me']) {
	            ReactDOM.findDOMNode(this.refs['me']).focus();
	            this.focusAlreadyGiven = true;
	        }
	    };
	    ImmutableInput.prototype.isValueValid = function (value) {
	        var validator = this.props.validator;
	        if (!validator)
	            return true;
	        if (validator instanceof RegExp) {
	            return validator.test(value);
	        }
	        if (validator instanceof Function) {
	            return !!validator(value);
	        }
	        return true;
	    };
	    ImmutableInput.prototype.update = function (newString) {
	        var _a = this.props, path = _a.path, onChange = _a.onChange, instance = _a.instance, validator = _a.validator, onInvalid = _a.onInvalid, stringToValue = _a.stringToValue;
	        var myInstance;
	        var invalidString;
	        var validString;
	        var error = '';
	        try {
	            var newValue = stringToValue ? stringToValue(newString) : newString;
	            if (validator && !this.isValueValid(newString)) {
	                myInstance = instance;
	                invalidString = newString;
	                if (onInvalid)
	                    onInvalid(newValue);
	            }
	            else {
	                myInstance = index_1.ImmutableUtils.setProperty(instance, path, newValue);
	                validString = newString;
	            }
	        }
	        catch (e) {
	            myInstance = instance;
	            invalidString = newString;
	            error = e.message;
	            if (onInvalid)
	                onInvalid(newValue);
	        }
	        this.setState({ myInstance: myInstance, invalidString: invalidString, validString: validString }, function () {
	            if (onChange)
	                onChange(myInstance, invalidString === undefined, path, error);
	        });
	    };
	    ImmutableInput.prototype.onChange = function (event) {
	        this.update(event.target.value);
	    };
	    ImmutableInput.prototype.render = function () {
	        var _a = this.props, path = _a.path, valueToString = _a.valueToString, type = _a.type, className = _a.className;
	        var _b = this.state, myInstance = _b.myInstance, invalidString = _b.invalidString, validString = _b.validString;
	        var isInvalid = invalidString !== undefined;
	        if (!path || !myInstance)
	            return null;
	        if (type === 'textarea') {
	            return React.createElement("textarea", {className: dom_1.classNames('immutable-input', className, { error: isInvalid }), ref: 'me', type: "text", value: (isInvalid ? invalidString : validString) || '', onChange: this.onChange.bind(this)});
	        }
	        return React.createElement("input", {className: dom_1.classNames('immutable-input', className, { error: isInvalid }), ref: 'me', type: "text", value: (isInvalid ? invalidString : validString) || '', onChange: this.onChange.bind(this)});
	    };
	    ImmutableInput.defaultProps = {
	        type: 'text',
	        stringToValue: String,
	        valueToString: function (value) { return value ? String(value) : ''; }
	    };
	    return ImmutableInput;
	}(React.Component));
	exports.ImmutableInput = ImmutableInput;


/***/ },
/* 460 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(461);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./immutable-input.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./immutable-input.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 461 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".immutable-input{border:1px solid #d4d4d4;border-radius:2px;box-shadow:inset 0 1px 1px rgba(0,0,0,0.13);padding-left:6px;padding-right:6px;width:100%;height:30px}.immutable-input:hover{border-color:#b8b8b8}.immutable-input:focus{border-color:#1ea3e6}.error.immutable-input{border-color:#e24c4c}\n", ""]);

	// exports


/***/ },
/* 462 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(463);
	var React = __webpack_require__(5);
	var simple_list_1 = __webpack_require__(465);
	var ImmutableList = (function (_super) {
	    __extends(ImmutableList, _super);
	    function ImmutableList() {
	        _super.call(this);
	        this.state = {};
	    }
	    ImmutableList.specialize = function () {
	        return ImmutableList;
	    };
	    ImmutableList.prototype.editItem = function (index) {
	        this.setState({ editedIndex: index });
	    };
	    ImmutableList.prototype.addItem = function () {
	        this.setState({ pendingAddItem: this.props.getNewItem() });
	    };
	    ImmutableList.prototype.componentWillReceiveProps = function (nextProps) {
	        if (nextProps.items) {
	            this.setState({ tempItems: nextProps.items });
	        }
	    };
	    ImmutableList.prototype.componentDidMount = function () {
	        if (this.props.items) {
	            this.setState({ tempItems: this.props.items });
	        }
	    };
	    ImmutableList.prototype.deleteItem = function (index) {
	        var tempItems = this.state.tempItems;
	        this.setState({ tempItems: tempItems.delete(index) }, this.onChange);
	    };
	    ImmutableList.prototype.onReorder = function (oldIndex, newIndex) {
	        var tempItems = this.state.tempItems;
	        var item = tempItems.get(oldIndex);
	        this.setState({
	            tempItems: tempItems
	                .delete(oldIndex)
	                .insert(newIndex > oldIndex ? newIndex - 1 : newIndex, item)
	        }, this.onChange);
	    };
	    ImmutableList.prototype.onChange = function () {
	        this.props.onChange(this.state.tempItems);
	    };
	    ImmutableList.prototype.renderEditModal = function (itemIndex) {
	        var _this = this;
	        var tempItems = this.state.tempItems;
	        var item = tempItems.get(itemIndex);
	        var onSave = function (newItem) {
	            var newItems = tempItems.update(itemIndex, function () { return newItem; });
	            _this.setState({ tempItems: newItems, editedIndex: undefined }, _this.onChange);
	        };
	        var onClose = function () { return _this.setState({ editedIndex: undefined }); };
	        return React.cloneElement(this.props.getModal(item), { onSave: onSave, onClose: onClose });
	    };
	    ImmutableList.prototype.renderAddModal = function (item) {
	        var _this = this;
	        var onSave = function (newItem) {
	            var tempItems = _this.state.tempItems;
	            var newItems = tempItems.push(newItem);
	            _this.setState({ tempItems: newItems, pendingAddItem: null }, _this.onChange);
	        };
	        var onClose = function () { return _this.setState({ pendingAddItem: null }); };
	        return React.cloneElement(this.props.getModal(item), { onSave: onSave, onClose: onClose });
	    };
	    ImmutableList.prototype.render = function () {
	        var _a = this.props, items = _a.items, getRows = _a.getRows, label = _a.label;
	        var _b = this.state, editedIndex = _b.editedIndex, pendingAddItem = _b.pendingAddItem;
	        if (!items)
	            return null;
	        return React.createElement("div", {className: "immutable-list"}, 
	            React.createElement("div", {className: "list-title"}, 
	                React.createElement("div", {className: "label"}, label), 
	                React.createElement("div", {className: "actions"}, 
	                    React.createElement("button", {onClick: this.addItem.bind(this)}, "Add item")
	                )), 
	            React.createElement(simple_list_1.SimpleList, {rows: getRows(items), onEdit: this.editItem.bind(this), onRemove: this.deleteItem.bind(this), onReorder: this.onReorder.bind(this)}), 
	            editedIndex !== undefined ? this.renderEditModal(editedIndex) : null, 
	            pendingAddItem ? this.renderAddModal(pendingAddItem) : null);
	    };
	    return ImmutableList;
	}(React.Component));
	exports.ImmutableList = ImmutableList;


/***/ },
/* 463 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(464);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./immutable-list.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./immutable-list.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 464 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".immutable-list .list-title .actions button{color:#000;background-color:transparent;cursor:pointer}.immutable-list .list-title .actions button:hover{background-color:#e3f4fc}.immutable-list .list-title .actions button.active{background-color:#c3e7f8}.name-modal form input{border:1px solid #d4d4d4;border-radius:2px;box-shadow:inset 0 1px 1px rgba(0,0,0,0.13);padding-left:6px;padding-right:6px;width:100%;height:30px}.name-modal form input:hover{border-color:#b8b8b8}.name-modal form input:focus{border-color:#1ea3e6}.name-modal form input.error{border-color:#e24c4c}.immutable-list{position:absolute;top:5px;bottom:5px;left:24px;right:0}.immutable-list .list-title{display:-webkit-box;display:-ms-flexbox;display:flex;height:44px;padding-top:12px;width:400px;border-bottom:1px solid #e6e6e6}.immutable-list .list-title .label{-webkit-box-flex:1;-ms-flex:1 1;flex:1 1;padding:6px 0;color:#bababa;font-size:12px;text-transform:uppercase}.immutable-list .list-title .actions button{font-size:12px;text-transform:uppercase;color:#1ea3e6;padding:6px;border-radius:2px}.immutable-list .list-title .actions button:not(:last-child){margin-right:15px}.immutable-list .simple-list{position:absolute;top:44px;bottom:0;left:0;right:0}.immutable-list .simple-list .row{width:400px}.name-modal form{width:100%}.name-modal form>*{display:block}.name-modal form input{margin-bottom:25px}.name-modal .button-group{margin-top:30px}.name-modal .button-group>*:not(:last-child){margin-right:10px}\n", ""]);

	// exports


/***/ },
/* 465 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(466);
	var React = __webpack_require__(5);
	var dom_1 = __webpack_require__(300);
	var svg_icon_1 = __webpack_require__(187);
	var SimpleList = (function (_super) {
	    __extends(SimpleList, _super);
	    function SimpleList() {
	        _super.call(this);
	        this.state = { dropIndex: -1 };
	    }
	    SimpleList.prototype.dragStart = function (item, e) {
	        this.setState({ draggedItem: item });
	        var dataTransfer = e.dataTransfer;
	        dataTransfer.effectAllowed = 'move';
	        dataTransfer.setData("text/html", item.title);
	        dom_1.setDragGhost(dataTransfer, item.title);
	    };
	    SimpleList.prototype.isInTopHalf = function (e) {
	        var targetRect = e.currentTarget.getBoundingClientRect();
	        return dom_1.getYFromEvent(e) - targetRect.top <= targetRect.height / 2;
	    };
	    SimpleList.prototype.dragOver = function (item, e) {
	        e.preventDefault();
	        var _a = this.state, draggedItem = _a.draggedItem, dropIndex = _a.dropIndex;
	        var rows = this.props.rows;
	        if (dropIndex === -1 && item === draggedItem)
	            return;
	        var sourceIndex = rows.indexOf(draggedItem);
	        var targetIndex = rows.indexOf(item);
	        var newDropIndex = this.isInTopHalf(e) ? targetIndex : targetIndex + 1;
	        if (newDropIndex === sourceIndex || newDropIndex === sourceIndex + 1) {
	            this.setState({
	                dropIndex: -1
	            });
	        }
	        else if (newDropIndex !== dropIndex) {
	            this.setState({
	                dropIndex: newDropIndex
	            });
	        }
	    };
	    SimpleList.prototype.dragEnd = function (e) {
	        var _a = this.props, rows = _a.rows, onReorder = _a.onReorder;
	        var _b = this.state, draggedItem = _b.draggedItem, dropIndex = _b.dropIndex;
	        if (dropIndex > -1)
	            onReorder(rows.indexOf(draggedItem), dropIndex);
	        this.setState({
	            draggedItem: undefined,
	            dropIndex: -1
	        });
	    };
	    SimpleList.prototype.renderRows = function (rows) {
	        var _this = this;
	        if (!rows || !rows.length)
	            return [];
	        var _a = this.props, onEdit = _a.onEdit, onRemove = _a.onRemove, onReorder = _a.onReorder;
	        var _b = this.state, draggedItem = _b.draggedItem, dropIndex = _b.dropIndex;
	        var svgize = function (iconName) { return iconName ? React.createElement(svg_icon_1.SvgIcon, {svg: __webpack_require__(468)("./" + iconName + ".svg")}) : null; };
	        return rows.map(function (row, i) {
	            var title = row.title, description = row.description, icon = row.icon;
	            var dragHandle = React.createElement("div", {className: "drag-handle"}, 
	                React.createElement(svg_icon_1.SvgIcon, {svg: __webpack_require__(473)})
	            );
	            var svg = svgize(icon);
	            var text = React.createElement("div", {className: "text"}, 
	                React.createElement("div", {className: "title"}, title), 
	                React.createElement("div", {className: "description"}, description));
	            var actions = React.createElement("div", {className: "actions"}, 
	                React.createElement("button", {onClick: onEdit.bind(_this, i)}, svgize('full-edit')), 
	                React.createElement("button", {onClick: onRemove.bind(_this, i)}, svgize('full-remove')));
	            var isBeingDragged = draggedItem === row;
	            var classes = dom_1.classNames('row', {
	                'drop-before': dropIndex === i,
	                'drop-after': i === rows.length - 1 && dropIndex === i + 1,
	                'dragged': isBeingDragged
	            });
	            return React.createElement("div", {className: classes, key: "row-" + i, onDragOver: _this.dragOver.bind(_this, row), draggable: !!onReorder, onDragStart: _this.dragStart.bind(_this, row)}, 
	                onReorder ? dragHandle : null, 
	                svg, 
	                text, 
	                actions);
	        });
	    };
	    SimpleList.prototype.render = function () {
	        return React.createElement("div", {className: "simple-list", ref: "list", onDragEnd: this.dragEnd.bind(this)}, this.renderRows(this.props.rows));
	    };
	    return SimpleList;
	}(React.Component));
	exports.SimpleList = SimpleList;


/***/ },
/* 466 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(467);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./simple-list.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./simple-list.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 467 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".simple-list .row .actions button{color:#000;background-color:transparent;cursor:pointer}.simple-list .row .actions button:hover{background-color:#e3f4fc}.simple-list .row .actions button.active{background-color:#c3e7f8}.simple-list{overflow:auto}.simple-list .row{display:-webkit-box;display:-ms-flexbox;display:flex;padding:10px 4px 10px 6px;cursor:move;border-top:1px solid transparent;border-bottom:1px solid transparent}.simple-list .row:not(:first-child){border-top:1px solid #e6e6e6}.simple-list .row.dragged{background:#f5f5f5}.simple-list .row.dragged:hover .drag-handle{opacity:0}.simple-list .row.drop-before::after{content:'';position:absolute;top:-1px;left:0;right:0;height:2px;border-top:2px dashed #1ea3e6;background:#fff}.simple-list .row.drop-after::after{content:'';position:absolute;bottom:-1px;left:0;right:0;height:2px;border-bottom:2px dashed #1ea3e6;background:#fff}.simple-list .row .svg-icon{width:19px;height:19px;margin:6px}.simple-list .row .svg-icon path{fill:#1ea3e6}.simple-list .row .drag-handle{position:absolute;top:10px;left:-14px;pointer-events:none;opacity:0}.simple-list .row .drag-handle .svg-icon path{fill:#d9d9d9}.simple-list .row .text{-webkit-box-flex:1;-ms-flex:1 1;flex:1 1;overflow:auto;padding:0 10px}.simple-list .row .text>*{white-space:nowrap;text-overflow:ellipsis;overflow:hidden}.simple-list .row .text .title{color:#666;line-height:16px;margin-bottom:2px}.simple-list .row .text .description{color:#bababa;font-size:12px;line-height:14px}.simple-list .row .actions button{border-radius:20px}.simple-list .row:hover .drag-handle{opacity:1}\n", ""]);

	// exports


/***/ },
/* 468 */
/***/ function(module, exports, __webpack_require__) {

	var map = {
		"./arrow-logo.svg": 469,
		"./caret.svg": 382,
		"./check.svg": 326,
		"./combo-logo.svg": 470,
		"./data-cubes.svg": 471,
		"./dim-boolean.svg": 361,
		"./dim-geo.svg": 362,
		"./dim-number.svg": 363,
		"./dim-string-geo.svg": 364,
		"./dim-string.svg": 365,
		"./dim-time.svg": 366,
		"./drag-arrow.svg": 391,
		"./drag-handle.svg": 472,
		"./dragger.svg": 473,
		"./dropdown-caret.svg": 310,
		"./filter-contains.svg": 411,
		"./filter-exclude.svg": 410,
		"./filter-include.svg": 409,
		"./filter-intersection.svg": 474,
		"./filter-regex.svg": 412,
		"./filter-string.svg": 475,
		"./full-add-framed.svg": 476,
		"./full-add.svg": 477,
		"./full-back.svg": 478,
		"./full-bookmark.svg": 479,
		"./full-caret-bottom.svg": 480,
		"./full-caret-left-line.svg": 481,
		"./full-caret-left.svg": 337,
		"./full-caret-right-line.svg": 482,
		"./full-caret-right.svg": 338,
		"./full-caret-small-bottom.svg": 483,
		"./full-caret-small-left.svg": 484,
		"./full-caret-small-right.svg": 485,
		"./full-caret-small-top.svg": 486,
		"./full-caret-top.svg": 487,
		"./full-cluster.svg": 488,
		"./full-collection.svg": 489,
		"./full-cube.svg": 490,
		"./full-delete.svg": 491,
		"./full-edit.svg": 492,
		"./full-error.svg": 493,
		"./full-expand.svg": 494,
		"./full-hiluk.svg": 495,
		"./full-menu.svg": 496,
		"./full-more-compact.svg": 497,
		"./full-more-mini.svg": 455,
		"./full-more.svg": 359,
		"./full-multi.svg": 375,
		"./full-profile.svg": 498,
		"./full-refresh.svg": 499,
		"./full-remove-small.svg": 500,
		"./full-remove.svg": 383,
		"./full-search.svg": 367,
		"./full-settings.svg": 501,
		"./full-time.svg": 502,
		"./full-user.svg": 503,
		"./github.svg": 504,
		"./grid-loader.svg": 190,
		"./help.svg": 432,
		"./home.svg": 505,
		"./measure.svg": 506,
		"./menu.svg": 507,
		"./pinned.svg": 508,
		"./pivot-logo.svg": 509,
		"./preview-filter.svg": 342,
		"./preview-pin.svg": 343,
		"./preview-split.svg": 344,
		"./preview-subsplit.svg": 345,
		"./sort-arrow.svg": 510,
		"./split-add.svg": 511,
		"./split-replace.svg": 387,
		"./star.svg": 512,
		"./text-logo.svg": 513,
		"./to-arrow.svg": 514,
		"./vis-bar-chart.svg": 515,
		"./vis-geo.svg": 516,
		"./vis-heatmap.svg": 517,
		"./vis-line-chart.svg": 518,
		"./vis-scatter-plot.svg": 519,
		"./vis-stacked-bars.svg": 520,
		"./vis-table.svg": 521,
		"./vis-totals.svg": 522,
		"./vis-treemap.svg": 523,
		"./x.svg": 327
	};
	function webpackContext(req) {
		return __webpack_require__(webpackContextResolve(req));
	};
	function webpackContextResolve(req) {
		return map[req] || (function() { throw new Error("Cannot find module '" + req + "'.") }());
	};
	webpackContext.keys = function webpackContextKeys() {
		return Object.keys(map);
	};
	webpackContext.resolve = webpackContextResolve;
	module.exports = webpackContext;
	webpackContext.id = 468;


/***/ },
/* 469 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 228 221\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M113.975793,190 C158.145203,190 193.951585,154.18278 193.951585,110 C193.951585,65.81722 158.145203,30 113.975793,30 C69.806382,30 34,65.81722 34,110 C34,154.18278 69.806382,190 113.975793,190 Z M113.839127,145.524549 L111.430972,150.811171 L122.64335,155.352941 L125.051506,150.066319 C128.503654,142.487821 134.721706,135.359071 142.950624,128.852781 C147.723783,125.078828 152.864626,121.755599 158.004467,118.927214 C159.799807,117.939262 161.461557,117.086276 162.943805,116.372414 C163.809752,115.955367 164.406373,115.684419 164.687939,115.563318 L164.57975,105.04812 C164.304691,104.935844 163.715865,104.680817 162.858851,104.285221 C161.388956,103.606719 159.740304,102.791513 157.958654,101.842221 C152.856442,99.1236816 147.752873,95.895573 143.014747,92.1900001 C134.72425,85.7062029 128.493032,78.4891615 125.089233,70.6751402 L122.770875,65.3529412 L111.483043,69.7253523 L113.801401,75.0475513 C116.374734,80.9550926 120.121249,86.4508697 124.828755,91.5519327 L68.9312087,91.5519327 L68.9312087,103.059373 L134.371086,103.059373 L137.883573,103.059373 C142.43591,106.392191 144.949318,107.816565 149.709646,110.352943 C145.206767,112.830817 142.848867,114.285618 138.52173,117.443674 L134.371086,117.443674 L68.9312087,117.443674 L68.9312087,128.951114 L125.293108,128.951114 C120.4167,134.109251 116.524604,139.629124 113.839127,145.524549 Z\" fill=\"#189AE0\" fill-rule=\"evenodd\"/></svg>"

/***/ },
/* 470 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 551 221\" xmlns=\"http://www.w3.org/2000/svg\"><g fill=\"#189AE0\" fill-rule=\"evenodd\"><path d=\"M113.975793 190C158.145203 190 193.951585 154.18278 193.951585 110 193.951585 65.81722 158.145203 30 113.975793 30 69.806382 30 34 65.81722 34 110 34 154.18278 69.806382 190 113.975793 190zM113.839127 145.524549L111.430972 150.811171 122.64335 155.352941 125.051506 150.066319C128.503654 142.487821 134.721706 135.359071 142.950624 128.852781 147.723783 125.078828 152.864626 121.755599 158.004467 118.927214 159.799807 117.939262 161.461557 117.086276 162.943805 116.372414 163.809752 115.955367 164.406373 115.684419 164.687939 115.563318L164.57975 105.04812C164.304691 104.935844 163.715865 104.680817 162.858851 104.285221 161.388956 103.606719 159.740304 102.791513 157.958654 101.842221 152.856442 99.1236816 147.752873 95.895573 143.014747 92.1900001 134.72425 85.7062029 128.493032 78.4891615 125.089233 70.6751402L122.770875 65.3529412 111.483043 69.7253523 113.801401 75.0475513C116.374734 80.9550926 120.121249 86.4508697 124.828755 91.5519327L68.9312087 91.5519327 68.9312087 103.059373 134.371086 103.059373 137.883573 103.059373C142.43591 106.392191 144.949318 107.816565 149.709646 110.352943 145.206767 112.830817 142.848867 114.285618 138.52173 117.443674L134.371086 117.443674 68.9312087 117.443674 68.9312087 128.951114 125.293108 128.951114C120.4167 134.109251 116.524604 139.629124 113.839127 145.524549zM376.770293 140.711553C378.850351 143.225527 381.284895 145.294175 384.070547 146.916113 387.680831 149.018191 391.582884 150.071669 395.758277 150.071669 404.711317 150.071669 411.829871 146.85964 417.023086 140.454676 422.168616 134.108523 424.741104 126.360144 424.741104 117.252605 424.741104 108.638149 422.1208 101.177866 416.888365 94.9166847 411.615576 88.6072152 404.710868 85.4374253 396.256828 85.4374253 388.355707 85.4374253 381.844589 88.6601463 376.794132 95.0478376L376.794132 95.0478376 376.755586 95.0478376 376.755586 88.2654412 376.755586 87.1942231 375.691606 87.1942231 364.474212 87.1942231 363.410232 87.1942231 363.410232 88.2654412 363.410232 180.622812 363.410232 181.69403 364.474212 181.69403 375.691606 181.69403 376.755586 181.69403 376.755586 180.622812 376.755586 140.711553 376.770293 140.711553 376.770293 140.711553zM313.129543 94.8988723C309.01829 88.6181353 303.37753 85.4374253 296.297386 85.4374253 293.023795 85.4374253 289.903277 86.3509825 286.955067 88.1673836 284.898276 89.4345784 283.129143 90.955812 281.651442 92.7284852L281.651442 92.7284852 281.657015 92.7284852C281.657015 91.2441182 281.657015 88.2654412 281.657015 88.2654412L281.657015 87.1942231 280.593034 87.1942231 269.375641 87.1942231 268.31166 87.1942231 268.31166 88.2654412 268.31166 146.992682 268.31166 148.0639 269.375641 148.0639 280.593034 148.0639 281.657015 148.0639 281.657015 146.992682 281.657015 118.131004C281.657015 115.326679 281.779547 112.900494 282.023349 110.854987 282.263659 108.838783 282.766724 106.67102 283.534299 104.352628 284.252389 102.183704 285.442729 100.535852 287.116927 99.3746705 288.797602 98.2089965 290.934767 97.6187062 293.555356 97.6187062 295.352868 97.6187062 296.855492 98.0245915 298.087493 98.827192 299.371773 99.6638493 300.316349 100.596203 300.934287 101.620907 301.566253 102.668873 302.066196 104.140188 302.418297 106.030833 302.784792 107.998768 303.007613 109.630305 303.087653 110.919662 303.169204 112.233352 303.210219 113.885106 303.210219 115.872264L303.210219 146.992682 303.210219 148.0639 304.274199 148.0639 315.491593 148.0639 316.555573 148.0639 316.555573 146.992682 316.555573 118.131004C316.555573 115.981173 316.61704 114.083356 316.73955 112.438785 316.85963 110.826826 317.161977 109.000402 317.647933 106.961812 318.120618 104.978892 318.763139 103.351862 319.567494 102.079278 320.346155 100.847344 321.468727 99.7924827 322.949472 98.9132828 324.396 98.0543988 326.183441 97.6187062 328.329277 97.6187062 330.461602 97.6187062 332.193186 98.0686064 333.545922 98.9520253 334.888196 99.8286126 335.866907 101.087695 336.494824 102.761136 337.172072 104.566044 337.608011 106.281763 337.805007 107.908121 338.007137 109.576861 338.108777 111.521153 338.108777 113.739009L338.108777 146.992682 338.108777 148.0639 339.172757 148.0639 350.390151 148.0639 351.454132 148.0639 351.454132 146.992682 351.454132 111.856726C351.454132 94.4189437 344.608937 85.4374253 331.071306 85.4374253 327.227453 85.4374253 323.595985 86.4285558 320.194682 88.4041947 317.314632 90.0770649 314.959609 92.2443891 313.138509 94.8988723L313.129543 94.8988723 313.129543 94.8988723zM252.865704 88.2654412L252.865704 87.1942231 251.801724 87.1942231 240.58433 87.1942231 239.52035 87.1942231 239.52035 88.2654412 239.52035 146.992682 239.52035 148.0639 240.58433 148.0639 251.801724 148.0639 252.865704 148.0639 252.865704 146.992682 252.865704 88.2654412 252.865704 88.2654412zM246.193027 52.4347236C243.745977 52.4347236 241.642765 53.3250441 239.946385 55.0804053 238.257068 56.8284595 237.401509 58.9579794 237.401509 61.4115319 237.401509 63.788528 238.262428 65.8591602 239.95662 67.5648765 241.653013 69.2728092 243.752103 70.1373691 246.193027 70.1373691 248.633951 70.1373691 250.733041 69.2728092 252.429434 67.5648765 254.123625 65.8591602 254.984545 63.788528 254.984545 61.4115319 254.984545 58.9579794 254.128986 56.8284595 252.439669 55.0804053 250.743289 53.3250441 248.640077 52.4347236 246.193027 52.4347236L246.193027 52.4347236zM393.514798 137.890388C388.182268 137.890388 384.002893 135.94233 380.884755 132.018144 377.71581 128.030017 376.132398 123.247466 376.132398 117.629062 376.132398 112.099058 377.733357 107.382905 380.93972 103.437359 384.100089 99.5484104 388.262545 97.6187062 393.514798 97.6187062 399.026442 97.6187062 403.338354 99.5155561 406.537038 103.325105 409.776239 107.182908 411.39575 111.935298 411.39575 117.629062 411.39575 123.411194 409.793717 128.230073 406.591793 132.130358 403.435486 135.975076 399.106621 137.890388 393.514798 137.890388L393.514798 137.890388zM447.425167 38.0712182L447.425167 37 446.361187 37 435.143793 37 434.079812 37 434.079812 38.0712182 434.079812 146.992682 434.079812 148.0639 435.143793 148.0639 446.361187 148.0639 447.425167 148.0639 447.425167 146.992682 447.425167 38.0712182 447.425167 38.0712182zM455.765521 180.122102L454.940002 181.69403 456.706116 181.69403 469.419163 181.69403 470.068033 181.69403 470.365093 181.113228 517.602785 88.7558577 518.401509 87.1942231 516.656854 87.1942231 504.068446 87.1942231 503.407889 87.1942231 503.114874 87.7902609 485.721414 123.205966 466.993276 87.7623305 466.693092 87.1942231 466.053945 87.1942231 452.966985 87.1942231 451.165067 87.1942231 452.035318 88.7827946 478.456695 137.012843 455.765521 180.122102 455.765521 180.122102z\"/></g></svg>"

/***/ },
/* 471 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 44 44\" xmlns=\"http://www.w3.org/2000/svg\"><g fill=\"#888888\" fill-rule=\"evenodd\"><path d=\"M28.9681047,20.032976 C28.9681047,19.6865607 28.7698491,19.3699088 28.4558863,19.2152889 L19.4283348,14.7661309 C19.1682989,14.6379417 18.862364,14.6379417 18.6022699,14.7661309 L9.57460207,19.2152889 C9.26081375,19.3699088 9.0625,19.6684614 9.0625,20.0439505 L9.0625,29.9388209 C9.0625,30.2836274 9.25912672,30.5990727 9.57070444,30.754497 L18.5983141,35.2568038 C18.7297282,35.322421 18.8726026,35.3548849 19.015186,35.3548849 C19.2398524,35.3548849 19.4697544,35.2375553 19.4696962,35.2381299 L28.4599003,30.7544395 C28.7715362,30.5990152 28.9681047,30.2835699 28.9681047,29.9387635 C28.9681047,29.9388784 28.9681047,20.0418246 28.9681047,20.032976 L28.9681047,20.032976 Z M19.0153024,16.6050794 L25.9706526,20.032976 L19.0153024,23.4608152 L12.0599522,20.032976 L19.0153024,16.6050794 L19.0153024,16.6050794 Z M10.9128854,21.5101679 L18.0901097,25.04735 L18.0901097,32.956064 L10.9128854,29.3765928 L10.9128854,21.5101679 L10.9128854,21.5101679 Z M27.1177193,29.3765928 L19.9404951,32.956064 L19.9404951,25.04735 L27.1177775,21.5101679 L27.1177775,29.3765928 L27.1177193,29.3765928 Z\" transform=\"translate(8 4)\"/><path d=\"M16.9480085,15.5807816 L17.1403996,15.574277 C17.4543624,15.7288969 19.958659,15.2278617 19.958659,15.574277 C19.958659,15.5831255 19.958659,25.4801793 19.958659,25.4800644 C19.958659,25.8248708 19.7620905,26.1403162 19.4504546,26.2957405 L10.4602505,30.7794308 C10.4603087,30.7788563 10.2304067,30.8961858 10.0057403,30.8961858 C9.86315687,30.8961858 9.72028254,30.863722 9.58886841,30.7981047 L0.561258751,26.2957979 C0.249681028,26.1403736 0.0530543098,25.8249283 0.0530543098,25.4801219 L0.0530543098,15.5852515 C0.0530543098,15.2097624 3.32632048,16.1853343 3.6401088,16.0307144 L3.95504778,16.0200665 L10.0058567,19.0021161 L16.9480085,15.5807816 Z M1.90343971,17.0514689 L9.08066397,20.5886509 L9.08066397,28.497365 L1.90343971,24.9178937 L1.90343971,17.0514689 L1.90343971,17.0514689 Z M18.1082736,24.9178937 L10.9310494,28.497365 L10.9310494,20.5886509 L18.1083318,17.0514689 L18.1083318,24.9178937 L18.1082736,24.9178937 Z\" transform=\"translate(8 4)\"/><path d=\"M19.958659,5.4204308 C19.958659,5.07401553 19.7604035,4.75736359 19.4464406,4.60274367 L10.4188891,0.153585672 C10.1588532,0.0253965084 9.85291831,0.0253965084 9.59282421,0.153585672 L0.565156381,4.60274367 C0.251368062,4.75736359 0.0530543098,5.05591621 0.0530543098,5.43140531 L0.0530543098,15.3262757 C0.0530543098,15.6710821 0.249681028,15.9865275 0.561258751,16.1419518 L9.58886841,20.6442586 C9.72028254,20.7098758 9.86315687,20.7423397 10.0057403,20.7423397 C10.2304067,20.7423397 10.4603087,20.6250101 10.4602505,20.6255847 L19.4504546,16.1418943 C19.7620905,15.98647 19.958659,15.6710247 19.958659,15.3262182 C19.958659,15.3263332 19.958659,5.42927936 19.958659,5.4204308 L19.958659,5.4204308 Z M10.0058567,1.9925342 L16.9612069,5.4204308 L10.0058567,8.84826994 L3.05050647,5.4204308 L10.0058567,1.9925342 L10.0058567,1.9925342 Z M1.90343971,6.89762273 L9.08066397,10.4348048 L9.08066397,18.3435188 L1.90343971,14.7640476 L1.90343971,6.89762273 L1.90343971,6.89762273 Z M18.1082736,14.7640476 L10.9310494,18.3435188 L10.9310494,10.4348048 L18.1083318,6.89762273 L18.1083318,14.7640476 L18.1082736,14.7640476 Z\" transform=\"translate(8 4)\"/></g></svg>"

/***/ },
/* 472 */
/***/ function(module, exports) {

	module.exports = "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 19 19\"><path fill=\"#BBBBBB\" d=\"M8.322,4.359c0,0.65,0.527,1.178,1.178,1.178 c0.65,0,1.178-0.527,1.178-1.178S10.15,3.182,9.5,3.182C8.85,3.182,8.322,3.709,8.322,4.359z M8.322,9.5 c0,0.65,0.527,1.176,1.178,1.176c0.65,0,1.178-0.525,1.178-1.176c0-0.651-0.527-1.178-1.178-1.178 C8.85,8.322,8.322,8.85,8.322,9.5z M8.322,14.641c0,0.65,0.527,1.178,1.178,1.178c0.65,0,1.178-0.526,1.178-1.178 c0-0.65-0.527-1.178-1.178-1.178C8.85,13.463,8.322,13.99,8.322,14.641z\"/></svg>"

/***/ },
/* 473 */
/***/ function(module, exports) {

	module.exports = "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 19 19\"><path fill=\"#000000\" fill-rule=\"evenodd\" d=\"M8,2 L12,2 L12,4 L8,4 L8,2 Z M8,6 L12,6 L12,8 L8,8 L8,6 Z M8,10 L12,10 L12,12 L8,12 L8,10 Z M8,14 L12,14 L12,16 L8,16 L8,14 Z\"/></svg>"

/***/ },
/* 474 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 19 19\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M7,4 L7,2 L2,2 L2,7 L4,7 L4,4 L7,4 Z M9,4 L13,4 L13,13 L4,13 L4,9 L0,9 L0,0 L9,0 L9,4 Z M9,6 L11,6 L11,11 L6,11 L6,9 L9,9 L9,6 Z\" transform=\"translate(3 3)\" fill=\"#000000\" fill-rule=\"evenodd\"/></svg>"

/***/ },
/* 475 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 19 19\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M7.48549244,13.9023294 L7.14793625,13.0326931 L7.10216592,13.0326931 C6.80847149,13.4026718 6.50619962,13.6591738 6.19534123,13.8022068 C5.88448285,13.9452398 5.47922876,14.0167552 4.97956682,14.0167552 C4.36547847,14.0167552 3.88203418,13.841304 3.52921945,13.4903964 C3.17640472,13.1394888 3,12.6398343 3,11.9914181 C3,11.3124881 3.23743122,10.8118801 3.71230078,10.4895791 C4.18717034,10.1672781 4.90327814,9.98896625 5.86064569,9.95463833 L6.97057622,9.92031058 L6.97057622,9.63996731 C6.97057622,8.99155104 6.63874463,8.66734777 5.97507152,8.66734777 C5.46396693,8.66734777 4.86323734,8.8218211 4.17286473,9.13077237 L3.5950143,7.95218635 C4.33115747,7.56695081 5.14738688,7.37433592 6.04372701,7.37433592 C6.90192501,7.37433592 7.55986694,7.56122957 8.01757254,7.93502248 C8.47527814,8.30881538 8.7041275,8.87712464 8.7041275,9.63996731 L8.7041275,13.9023294 L7.48549244,13.9023294 Z M6.97057622,10.9387004 L6.29546383,10.9615856 C5.78817346,10.9768425 5.41057201,11.0683822 5.16264814,11.2362076 C4.91472427,11.404033 4.7907642,11.6595814 4.7907642,12.0028606 C4.7907642,12.4948942 5.07301175,12.7409072 5.63751532,12.7409072 C6.04182194,12.7409072 6.36507167,12.6245755 6.60727421,12.3919085 C6.84947676,12.1592414 6.97057622,11.8502948 6.97057622,11.4650593 L6.97057622,10.9387004 Z M14.0592562,7.3857785 C14.8144705,7.3857785 15.4056647,7.68042206 15.8328566,8.26971802 C16.2600485,8.85901398 16.4736412,9.66666154 16.4736412,10.6926849 C16.4736412,11.749222 16.2533737,12.5673585 15.812832,13.1471189 C15.3722904,13.7268793 14.7725144,14.0167552 14.0134859,14.0167552 C13.2620859,14.0167552 12.6727988,13.744043 12.2456069,13.1986105 L12.1254597,13.1986105 L11.8336739,13.9023294 L10.500613,13.9023294 L10.500613,5 L12.2456069,5 L12.2456069,7.07110748 C12.2456069,7.3342882 12.2227219,7.75575245 12.1769514,8.33551287 L12.2456069,8.33551287 C12.6537277,7.70235346 13.2582714,7.3857785 14.0592562,7.3857785 L14.0592562,7.3857785 Z M13.4985697,8.7817736 C13.0675636,8.7817736 12.7528957,8.91431553 12.5545566,9.17940335 C12.3562175,9.44449118 12.2532353,9.88216559 12.2456069,10.4924397 L12.2456069,10.6812423 C12.2456069,11.3678007 12.3476355,11.8598269 12.551696,12.1573355 C12.7557564,12.4548442 13.0790061,12.6035962 13.5214548,12.6035962 C13.8799909,12.6035962 14.1650991,12.438634 14.3767879,12.1087045 C14.5884767,11.7787751 14.6943196,11.299145 14.6943196,10.6697998 C14.6943196,10.0404546 14.5875232,9.56845274 14.3739273,9.25378014 C14.1603313,8.93910754 13.8685484,8.7817736 13.4985697,8.7817736 L13.4985697,8.7817736 Z\" fill=\"#000000\" fill-rule=\"evenodd\"/></svg>"

/***/ },
/* 476 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 19 19\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10,8 L10,4 L8,4 L8,8 L4,8 L4,10 L8,10 L8,14 L10,14 L10,10 L14,10 L14,8 L10,8 Z M1,2.99406028 C1,1.8927712 1.89451376,1 2.99406028,1 L15.0059397,1 C16.1072288,1 17,1.89451376 17,2.99406028 L17,15.0059397 C17,16.1072288 16.1054862,17 15.0059397,17 L2.99406028,17 C1.8927712,17 1,16.1054862 1,15.0059397 L1,2.99406028 Z\" fill=\"#000000\" fill-rule=\"evenodd\"/></svg>"

/***/ },
/* 477 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 19 19\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10,8 L10,4 L8,4 L8,8 L4,8 L4,10 L8,10 L8,14 L10,14 L10,10 L14,10 L14,8 L10,8 Z\" fill=\"#000000\" fill-rule=\"evenodd\"/></svg>"

/***/ },
/* 478 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 19 19\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M5.87867966,10 L17,10 L17,8 L5.77817459,8 L9.77817459,4 L8.36396103,2.58578644 L2.70710678,8.24264069 L2,8.94974747 L8.36396103,15.3137085 L9.77817459,13.8994949 L5.87867966,10 Z\" fill=\"#000000\" fill-rule=\"evenodd\"/></svg>"

/***/ },
/* 479 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 19 19\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M6.28571429,3 C5.57857143,3 5.00642857,3.64615385 5.00642857,4.43589744 L5,16 L9.5,12.7692308 L14,16 L14,4.43589744 C14,3.64615385 13.4214286,3 12.7142857,3 L6.28571429,3 Z\" fill=\"#000000\" fill-rule=\"evenodd\"/></svg>"

/***/ },
/* 480 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 19 19\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M4.5,3.5 L14.5,10 L4.5,16.5\" transform=\"matrix(0 1 1 0 -.5 .5)\" fill=\"#000000\" fill-rule=\"evenodd\"/></svg>"

/***/ },
/* 481 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 19 19\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M9.00409597,10.0918527 L4.16857687,5.33103527 L2.25670585,6.85572696 L9,13.4948471 L15.7432941,6.85572696 L13.8314231,5.33103527 L9.00409597,10.0918527 Z\" transform=\"rotate(90 9 9.413)\" fill=\"#BBBBBB\" fill-rule=\"evenodd\"/></svg>"

/***/ },
/* 482 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 19 19\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10.004096,10.0918527 L5.16857687,5.33103527 L3.25670585,6.85572696 L10,13.4948471 L16.7432941,6.85572696 L14.8314231,5.33103527 L10.004096,10.0918527 Z\" transform=\"matrix(0 1 1 0 .587 -.587)\" fill=\"#BBBBBB\" fill-rule=\"evenodd\"/></svg>"

/***/ },
/* 483 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 19 19\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M5.5,4.5 L13.5,10 L5.5,15.5\" transform=\"matrix(0 1 1 0 -.5 .5)\" fill=\"#000000\" fill-rule=\"evenodd\"/></svg>"

/***/ },
/* 484 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 19 19\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M5,4 L13,9.5 L5,15\" transform=\"matrix(-1 0 0 1 18 0)\" fill=\"#000000\" fill-rule=\"evenodd\"/></svg>"

/***/ },
/* 485 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 19 19\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M6,4 L14,9.5 L6,15\" fill=\"#000000\" fill-rule=\"evenodd\"/></svg>"

/***/ },
/* 486 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 19 19\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M5.5,3.5 L13.5,9 L5.5,14.5\" transform=\"matrix(0 -1 -1 0 18.5 18.5)\" fill=\"#000000\" fill-rule=\"evenodd\"/></svg>"

/***/ },
/* 487 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 19 19\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M4.5,2.5 L14.5,9 L4.5,15.5\" transform=\"matrix(0 -1 -1 0 18.5 18.5)\" fill=\"#000000\" fill-rule=\"evenodd\"/></svg>"

/***/ },
/* 488 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 19 19\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M3,2 L16,2 L16,6 L3,6 L3,2 Z M4,3 L6,3 L6,5 L4,5 L4,3 Z M3,7 L16,7 L16,11 L3,11 L3,7 Z M4,8 L6,8 L6,10 L4,10 L4,8 Z M3,12 L16,12 L16,16 L3,16 L3,12 Z M4,13 L6,13 L6,15 L4,15 L4,13 Z\" fill=\"#000000\" fill-rule=\"evenodd\"/></svg>"

/***/ },
/* 489 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 19 19\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M17,2 L17,1 L1,1 L1,17 L2,17 L2,18 L18,18 L18,2 L17,2 Z M3,3 L17,3 L17,17 L3,17 L3,3 Z M6,6 L8,6 L8,15 L6,15 L6,6 Z M9,8 L11,8 L11,15 L9,15 L9,8 Z M12,10 L14,10 L14,15 L12,15 L12,10 Z\" fill=\"#000000\" fill-rule=\"evenodd\"/></svg>"

/***/ },
/* 490 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 19 19\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10,17.5960697 L17,14.0697019 L17,6.34777241 L10,10.007318 L10,17.5960697 Z M9,17.5960697 L2,14.0697019 L2,6.34777241 L9,10.007318 L9,17.5960697 Z M2,5.29999995 L9.5,1.3499999 L17,5.29999995 L9.5,9.25 L2,5.29999995 Z\" fill=\"#000000\" fill-rule=\"evenodd\"/></svg>"

/***/ },
/* 491 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 19 19\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M5,14.7142857 C5,15.4214286 5.675,16 6.5,16 L12.5,16 C13.325,16 14,15.4214286 14,14.7142857 L14,7 L5,7 L5,14.7142857 L5,14.7142857 Z M15,4 L12.25,4 L11.4642857,3 L7.53571429,3 L6.75,4 L4,4 L4,6 L15,6 L15,4 L15,4 Z\" fill=\"#000000\" fill-rule=\"evenodd\"/></svg>"

/***/ },
/* 492 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 19 19\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M3,13.2920428 L3,16 L5.70795723,16 L13.6946257,8.01333148 L10.9866685,5.30537425 L3,13.2920428 L3,13.2920428 Z M15.7887793,5.91917789 C16.0704069,5.63755034 16.0704069,5.18261353 15.7887793,4.90098597 L14.099014,3.21122066 C13.8173865,2.92959311 13.3624497,2.92959311 13.0808221,3.21122066 L11.759339,4.53270379 L14.4672962,7.24066102 L15.7887793,5.91917789 L15.7887793,5.91917789 Z\" fill=\"#000000\" fill-rule=\"evenodd\"/></svg>"

/***/ },
/* 493 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 19 19\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10.5578035,11 L8.44219653,11 L8,3 L11,3 L10.5578035,11 Z M9.5,16 C10.3284271,16 11,15.3284271 11,14.5 C11,13.6715729 10.3284271,13 9.5,13 C8.67157288,13 8,13.6715729 8,14.5 C8,15.3284271 8.67157288,16 9.5,16 Z\" fill=\"#000000\" fill-rule=\"evenodd\"/></svg>"

/***/ },
/* 494 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 19 19\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M6,12.5857864 L12.5857864,6 L11,6 L10,6 L10,4 L11,4 L15,4 L15.5,4 L16,4 L16,5 L16,9 L16,10 L14,10 L14,9 L14,7.41421356 L7.41421356,14 L9,14 L10,14 L10,16 L9,16 L5,16 L4,16 L4,14.5 L4,11 L4,10 L6,10 L6,11 L6,12.5857864 Z\" fill=\"#000000\" fill-rule=\"evenodd\"/></svg>"

/***/ },
/* 495 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 19 19\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M11.1124797,12.1748132 L7.63210582,10.0583113 C7.67129453,9.8847821 7.7026455,9.71125292 7.7026455,9.53017899 C7.7026455,9.34910506 7.67129453,9.17557587 7.63210582,9.00204669 L11.0497778,6.91572377 C11.4730159,7.29296113 12.0294956,7.52684829 12.6486772,7.52684829 C13.9497425,7.52684829 15,6.51585217 15,5.26342414 C15,4.01099612 13.9497425,3 12.6486772,3 C11.347612,3 10.2973545,4.01099612 10.2973545,5.26342414 C10.2973545,5.44449808 10.3287055,5.61802726 10.3678942,5.79155644 L6.95022222,7.87787936 C6.52698413,7.50064201 5.97050441,7.26675484 5.35132275,7.26675484 C4.0502575,7.26675484 3,8.27775096 3,9.53017899 C3,10.782607 4.0502575,11.7936031 5.35132275,11.7936031 C5.97050441,11.7936031 6.52698413,11.559716 6.95022222,11.1824786 L10.4227584,13.3065253 C10.3835697,13.464965 10.3600564,13.6309494 10.3600564,13.7969338 C10.3600564,15.0116381 11.3868007,16 12.6486772,16 C13.9105538,16 14.9372981,15.0116381 14.9372981,13.7969338 C14.9372981,12.5822295 13.9105538,11.5938677 12.6486772,11.5938677 C12.0530088,11.5938677 11.5200423,11.8202101 11.1124797,12.1748132 Z\" fill=\"#000000\" fill-rule=\"evenodd\"/></svg>"

/***/ },
/* 496 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 19 19\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M2,4 L17,4 L17,6 L2,6 L2,4 Z M2,8 L17,8 L17,10 L2,10 L2,8 Z M2,12 L17,12 L17,14 L2,14 L2,12 Z\" fill=\"#000000\" fill-rule=\"evenodd\"/></svg>"

/***/ },
/* 497 */
/***/ function(module, exports) {

	module.exports = "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 19 19\"><path d=\"M5.5,11C6.329,11,7,10.328,7,9.5C7,8.671,6.329,8,5.5,8S4,8.671,4,9.5 C4,10.328,4.671,11,5.5,11z M9.5,11c0.828,0,1.5-0.672,1.5-1.5C11,8.671,10.328,8,9.5,8C8.671,8,8,8.671,8,9.5 C8,10.328,8.671,11,9.5,11z M13.5,11c0.828,0,1.5-0.672,1.5-1.5C15,8.671,14.328,8,13.5,8S12,8.671,12,9.5 C12,10.328,12.672,11,13.5,11z\"/></svg>"

/***/ },
/* 498 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 19 19\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M9.5,2 C5.36,2 2,5.36 2,9.5 C2,13.64 5.36,17 9.5,17 C13.64,17 17,13.64 17,9.5 C17,5.36 13.64,2 9.5,2 L9.5,2 Z M9.5,4.25 C10.745,4.25 11.75,5.255 11.75,6.5 C11.75,7.745 10.745,8.75 9.5,8.75 C8.255,8.75 7.25,7.745 7.25,6.5 C7.25,5.255 8.255,4.25 9.5,4.25 L9.5,4.25 Z M9.5,14.9 C7.625,14.9 5.9675,13.94 5,12.485 C5.0225,10.9925 8,10.175 9.5,10.175 C10.9925,10.175 13.9775,10.9925 14,12.485 C13.0325,13.94 11.375,14.9 9.5,14.9 L9.5,14.9 Z\" fill=\"#000000\" fill-rule=\"evenodd\"/></svg>"

/***/ },
/* 499 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 19 19\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M14.0825,4.909375 C12.904375,3.73125 11.2875,3 9.491875,3 C5.900625,3 3,5.90875 3,9.5 C3,13.09125 5.900625,16 9.491875,16 C12.5225,16 15.049375,13.928125 15.7725,11.125 L14.0825,11.125 C13.41625,13.018125 11.6125,14.375 9.491875,14.375 C6.8025,14.375 4.616875,12.189375 4.616875,9.5 C4.616875,6.810625 6.8025,4.625 9.491875,4.625 C10.840625,4.625 12.043125,5.185625 12.920625,6.07125 L10.304375,8.6875 L15.991875,8.6875 L15.991875,3 L14.0825,4.909375 L14.0825,4.909375 Z\" fill=\"#000000\" fill-rule=\"evenodd\"/></svg>"

/***/ },
/* 500 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 19 19\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10.5938909,9.30035993 L13.6026378,12.3084137 L12.3100979,13.6007199 L9.30131892,10.5926341 L6.29253998,13.6007199 L5,12.3084137 L8.00874695,9.30035993 L5,6.29230617 L6.29253998,5 L9.30131892,8.00808575 L12.3100979,5 L13.6026378,6.29230617 L10.5938909,9.30035993 Z\" fill=\"#000000\" fill-rule=\"evenodd\"/></svg>"

/***/ },
/* 501 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 19 19\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M11.2655592,4.10711325 L11.2655592,2.50960722 C11.2655592,2.22967656 11.0408396,2 10.7636338,2 L8.26426899,2 C7.99219937,2 7.76234361,2.22815893 7.76234361,2.50960722 L7.76234361,4.0830779 C6.87594438,4.32573356 6.07441683,4.75233984 5.40897527,5.31532621 L3.97934501,4.48992879 C3.73691795,4.34996346 3.42565238,4.42973811 3.28704952,4.66980531 L2.03736709,6.83431877 C1.90133228,7.06993797 1.98399583,7.38307836 2.2277372,7.52380251 L3.56687401,8.29695351 C3.48158594,8.67226613 3.43672676,9.06142581 3.43672676,9.46031746 C3.43672676,9.88549356 3.48769259,10.2996129 3.5842592,10.6976921 L2.2277372,11.4808804 C1.98531014,11.6208458 1.89876422,11.930297 2.03736709,12.1703642 L3.28704952,14.3348776 C3.42308433,14.5704968 3.73560364,14.6554783 3.97934501,14.5147541 L5.46848883,13.6549966 C6.12199413,14.1934165 6.90221075,14.6020919 7.76234361,14.837557 L7.76234361,16.4903928 C7.76234361,16.7703234 7.98706326,17 8.26426899,17 L10.7636338,17 C11.0357035,17 11.2655592,16.7718411 11.2655592,16.4903928 L11.2655592,14.8135217 C12.1022685,14.5718158 12.860914,14.1655262 13.4976051,13.6354209 L15.020655,14.5147541 C15.2630821,14.6547195 15.5743476,14.5749448 15.7129505,14.3348776 L16.9626329,12.1703642 C17.0986677,11.934745 17.0160042,11.6216046 16.7722628,11.4808804 L15.3651906,10.6685069 C15.4572242,10.2793853 15.5057318,9.87511315 15.5057318,9.46031746 C15.5057318,9.07183642 15.4631836,8.692586 15.3821796,8.32636742 L16.7722628,7.52380251 C17.0146899,7.38383718 17.1012358,7.07438598 16.9626329,6.83431877 L15.7129505,4.66980531 C15.5769157,4.43418611 15.2643964,4.34920464 15.020655,4.48992879 L13.5567508,5.33511429 C12.9081044,4.78058166 12.1283334,4.35634869 11.2655592,4.10711325 Z M9.46953234,12.1790429 C11.065377,12.1790429 12.3590648,10.9614716 12.3590648,9.45952134 C12.3590648,7.95757105 11.065377,6.73999977 9.46953234,6.73999977 C7.87368765,6.73999977 6.57999992,7.95757105 6.57999992,9.45952134 C6.57999992,10.9614716 7.87368765,12.1790429 9.46953234,12.1790429 Z\" fill=\"#000000\" fill-rule=\"evenodd\"/></svg>"

/***/ },
/* 502 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 19 19\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M16,9.5 C16,5.91014913 13.0898509,3 9.5,3 C5.91014913,3 3,5.91014913 3,9.5 C3,13.0898509 5.91014913,16 9.5,16 C13.0898509,16 16,13.0898509 16,9.5 Z M9,5 L10,5 L10,9 L9,9 L9,5 Z M9,9 L13,9 L13,10 L9,10 L9,9 Z\" fill=\"#000000\" fill-rule=\"evenodd\"/></svg>"

/***/ },
/* 503 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 19 19\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M9.5,10.5 C11.295625,10.5 12.75,9.045625 12.75,7.25 C12.75,5.454375 11.295625,4 9.5,4 C7.704375,4 6.25,5.454375 6.25,7.25 C6.25,9.045625 7.704375,10.5 9.5,10.5 L9.5,10.5 Z M9.5,12.125 C7.330625,12.125 3,13.21375 3,15.375 L3,17 L16,17 L16,15.375 C16,13.21375 11.669375,12.125 9.5,12.125 L9.5,12.125 Z\" fill=\"#000000\" fill-rule=\"evenodd\"/></svg>"

/***/ },
/* 504 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12,2 C6.48,2 2,6.48 2,12 C2,17.52 6.48,22 12,22 C17.52,22 22,17.52 22,12 C22,6.48 17.52,2 12,2 Z M17.6560732,17.6550189 C16.9209142,18.3901407 16.0653619,18.9671065 15.1130037,19.3699185 C14.8711007,19.4722306 14.62544,19.562042 14.3763194,19.6395016 L14.3763194,18.2120804 C14.3763194,17.4617793 14.1190137,16.9099264 13.6043281,16.5564847 C13.9268158,16.5254934 14.2228512,16.4820759 14.4925831,16.4262693 C14.762315,16.3704627 15.0475983,16.2898407 15.3482843,16.1844407 C15.6490447,16.0790406 15.9187765,15.9534758 16.15748,15.8077461 C16.3962578,15.6620165 16.6256601,15.4729065 16.8457614,15.240379 C17.065937,15.0078515 17.2503592,14.7443328 17.3991768,14.4497856 C17.5479944,14.1552383 17.6658579,13.8017965 17.7526186,13.3894602 C17.8394536,12.9771238 17.882834,12.5228953 17.882834,12.0268491 C17.882834,11.0657478 17.5697218,10.2472511 16.9434229,9.57135875 C17.2287062,8.82727077 17.1976778,8.01807509 16.8504119,7.14377171 L16.6178844,7.11586841 C16.456715,7.09726621 16.1667811,7.16546188 15.7482316,7.32049261 C15.3296821,7.47552334 14.8599766,7.729741 14.339115,8.08318279 C13.6012773,7.87855859 12.835462,7.7762465 12.0417805,7.7762465 C11.241886,7.7762465 10.4791958,7.87855859 9.75371,8.08318279 C9.42508355,7.85995639 9.11349671,7.67549698 8.81894948,7.52976735 C8.52440225,7.38403772 8.28878679,7.28485079 8.1120659,7.23213216 C7.935345,7.17941353 7.77101317,7.14685968 7.61910761,7.13447061 C7.46720205,7.12208155 7.3695405,7.11895638 7.32612297,7.12516951 C7.28270544,7.13138265 7.25171417,7.13755858 7.23311197,7.14377171 C6.88588332,8.02428822 6.85485485,8.8334839 7.14010097,9.57135875 C6.51383933,10.2472511 6.2006899,11.0657478 6.2006899,12.0268491 C6.2006899,12.5228953 6.24410743,12.9771238 6.3309053,13.3894602 C6.41770316,13.8017965 6.53552949,14.1552383 6.68434709,14.4497856 C6.83316468,14.7443328 7.01762409,15.0078515 7.23776252,15.240379 C7.45790095,15.4729065 7.68730327,15.6620165 7.9260439,15.8077461 C8.16478453,15.9534758 8.43451642,16.0790406 8.73523958,16.1844407 C9.03596274,16.2898407 9.32120886,16.3704627 9.59094076,16.4262693 C9.86067265,16.4820759 10.1567453,16.5254934 10.4791958,16.5564847 C9.97072326,16.9037133 9.7165056,17.4556034 9.7165056,18.2120804 L9.7165056,19.6673305 C9.4356496,19.5837322 9.15881166,19.4849545 8.88684751,19.3699185 C7.93452651,18.9671065 7.07893694,18.3901407 6.34381522,17.6550189 C5.60873071,16.9199344 5.03172768,16.0643077 4.62895286,15.1119495 C4.212338,14.1268514 4.00105422,13.0794731 4.00105422,11.9989458 C4.00105422,10.9184184 4.212338,9.87104018 4.62902727,8.8858677 C5.0318393,7.9335467 5.60880512,7.07795713 6.34388963,6.34283541 C7.07897415,5.60771369 7.93460091,5.03074787 8.88692192,4.62797305 C9.8720944,4.21128378 10.9194726,4 12,4 C13.0805274,4 14.1279056,4.21128378 15.1131153,4.62797305 C16.0654735,5.03078508 16.9210259,5.6077509 17.6561848,6.34283541 C18.3912693,7.07791993 18.9682351,7.9335467 19.3710099,8.8858677 C19.7876248,9.87104018 19.9989458,10.9184184 19.9989458,11.9989458 C19.9989458,13.0794731 19.7876248,14.1268514 19.3709727,15.1120239 C18.9681979,16.0643077 18.3911577,16.9199716 17.6560732,17.6550189 Z\" fill=\"#FFFFFF\" fill-rule=\"evenodd\"/></svg>"

/***/ },
/* 505 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 19 19\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M4 10L4 17 8 17 8 12 11 12 11 17 15 17 15 10 18 10 9.5 1 1 10z\" fill=\"#000000\" fill-rule=\"evenodd\"/></svg>"

/***/ },
/* 506 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 19 19\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M3,4 L8,4 L8,16 L3,16 L3,4 Z M4,5 L7,5 L7,15 L4,15 L4,5 Z M8,11 L15,11 L15,16 L8,16 L8,11 Z M8,12 L14,12 L14,15 L8,15 L8,12 Z\" fill=\"#000000\" fill-rule=\"evenodd\"/></svg>"

/***/ },
/* 507 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 19 19\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M2,4 L17,4 L17,6 L2,6 L2,4 Z M2,8 L17,8 L17,10 L2,10 L2,8 Z M2,12 L17,12 L17,14 L2,14 L2,12 Z\" fill=\"#000000\" fill-rule=\"evenodd\"/></svg>"

/***/ },
/* 508 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 13 12\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M163,10 L176,10 L176,22 L163,22 L163,10 Z M164,11 L172,11 L172,21 L164,21 L164,11 Z\" transform=\"translate(-163 -10)\" fill=\"#BBBBBB\" fill-rule=\"evenodd\"/></svg>"

/***/ },
/* 509 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 191 69\" xmlns=\"http://www.w3.org/2000/svg\"><g fill=\"none\" fill-rule=\"evenodd\"><path d=\"M32,33.6000004 L64,51.0310003 L32,68.4620002 L0,51.0310003 L32,33.6000004 L32,33.6000004 Z\" fill=\"#BE8BDE\"/><path d=\"M64,51.0310003 L32,68.4620002 L0,51.0310003 L32,33.6000004 L64,51.0310003 Z M32.0432389,37.327641 L57.1999998,51.0310003 L32.0432389,64.7343596 L6.886478,51.0310003 L32.0432389,37.327641 Z\" fill=\"#888888\"/><path d=\"M2.58248331,19.4377255 L2.13382541,48.4568149 L31.3212052,64.3824016 L31.9578584,45.2026033 L33.227274,64.2280781 L61.6527653,48.707742 L61.6527654,19.3095811 L64,18.0309984 L32,0.599998474 L0,18.0309984 L2.58248331,19.4377255 Z\" fill=\"#E8E8E8\"/><path d=\"M0,18.0309984 L32,35.4619983 L64,18.0309984 L32,0.599998474 L0,18.0309984 Z M31.9567611,4.3276391 L6.80000019,18.0309984 L31.9567611,31.7343577 L57.113522,18.0309984 L31.9567611,4.3276391 Z\" fill=\"#888888\"/><path d=\"M14.4407777,11.6400614 L13.5836349,13.1246763 L42.023725,29.54457 L42.8808678,28.059955 L14.4407777,11.6400614 Z\" opacity=\".5\" fill=\"#888888\"/><path d=\"M48.9767762,7.21000004 L50.4001775,8.36768558 L23.1390484,24.1069058 L22.2819055,22.6222908 L48.9767762,7.21000004 Z\" opacity=\".4\" fill=\"#888888\" transform=\"matrix(-1 0 0 1 72.682 0)\"/><path fill=\"#888888\" d=\"M30 33H34V66H30zM0 18H4V51H0zM60 18H64V51H60z\"/><path opacity=\".5\" fill=\"#888888\" d=\"M11 24H12.8V56H11zM61.5228839 28.1965524L62.3539861 29.6959005 33.631661 45.6169453 32.8005588 44.1175972 61.5228839 28.1965524zM20 27H21.8V59H20zM61.5228839 38.1965524L62.3539861 39.6959005 33.631661 55.6169453 32.8005588 54.1175972 61.5228839 38.1965524z\"/><path d=\"M106.530784,28.7154738 C106.530784,31.8915565 105.490598,34.3255922 103.410194,36.0176537 C101.329791,37.7097153 98.3687272,38.5557334 94.5269153,38.5557334 L91.3647177,38.5557334 L91.3647177,49.9354839 L86.3925781,49.9354839 L86.3925781,19.5201361 L95.1510333,19.5201361 C98.9512371,19.5201361 101.79788,20.2968084 103.691047,21.8501764 C105.584214,23.4035444 106.530784,25.691954 106.530784,28.7154738 L106.530784,28.7154738 Z M91.3647177,34.3741431 L94.006817,34.3741431 C96.5587787,34.3741431 98.4311138,33.9303304 99.6238785,33.0426915 C100.816643,32.1550527 101.413017,30.7681378 101.413017,28.8819052 C101.413017,27.1343663 100.879054,25.8306663 99.8111139,24.9707661 C98.7431734,24.110866 97.0788756,23.6809224 94.8181704,23.6809224 L91.3647177,23.6809224 L91.3647177,34.3741431 Z M116.974357,49.9354839 L112.085433,49.9354839 L112.085433,26.9263357 L116.974357,26.9263357 L116.974357,49.9354839 Z M111.794178,20.8307838 C111.794178,19.9570143 112.033421,19.2843606 112.511914,18.8128024 C112.990407,18.3412443 113.673462,18.1054688 114.561101,18.1054688 C115.421001,18.1054688 116.090188,18.3412443 116.568681,18.8128024 C117.047174,19.2843606 117.286416,19.9570143 117.286416,20.8307838 C117.286416,21.6629452 117.047174,22.3182625 116.568681,22.7967553 C116.090188,23.2752481 115.421001,23.5144909 114.561101,23.5144909 C113.673462,23.5144909 112.990407,23.2752481 112.511914,22.7967553 C112.033421,22.3182625 111.794178,21.6629452 111.794178,20.8307838 L111.794178,20.8307838 Z M129.207069,49.9354839 L120.469418,26.9263357 L125.628793,26.9263357 L130.309677,40.3032636 C131.1141,42.5500994 131.59952,44.366958 131.765953,45.7538936 L131.932384,45.7538936 C132.057208,44.7552999 132.542628,42.9384414 133.388659,40.3032636 L138.069544,26.9263357 L143.270527,26.9263357 L134.491268,49.9354839 L129.207069,49.9354839 Z M167.174244,38.3893019 C167.174244,42.1478977 166.210338,45.0812227 164.282497,47.1893649 C162.354657,49.2975072 159.670977,50.3515625 156.231376,50.3515625 C154.081626,50.3515625 152.181552,49.8661423 150.531099,48.8952873 C148.880645,47.9244323 147.611618,46.5305828 146.723979,44.7136971 C145.83634,42.8968113 145.392528,40.7887007 145.392528,38.3893019 C145.392528,34.6584449 146.349499,31.7459236 148.26347,29.6516507 C150.177442,27.5573778 152.874991,26.5102571 156.3562,26.5102571 C159.684845,26.5102571 162.319984,27.5816488 164.261694,29.7244645 C166.203404,31.8672801 167.174244,34.7555304 167.174244,38.3893019 L167.174244,38.3893019 Z M150.427079,38.3893019 C150.427079,43.7012656 152.389564,46.3572077 156.314592,46.3572077 C160.198012,46.3572077 162.139693,43.7012656 162.139693,38.3893019 C162.139693,33.1328156 160.184143,30.5046119 156.272984,30.5046119 C154.220319,30.5046119 152.732853,31.1842002 151.810541,32.5433972 C150.888228,33.9025942 150.427079,35.8512096 150.427079,38.3893019 L150.427079,38.3893019 Z M181.362525,46.3988155 C182.55529,46.3988155 183.748037,46.211582 184.940801,45.8371094 L184.940801,49.5194052 C184.399896,49.7551843 183.702972,49.9528197 182.850006,50.1123173 C181.997041,50.2718149 181.112883,50.3515625 180.197505,50.3515625 C175.56514,50.3515625 173.248992,47.9105923 173.248992,43.0285786 L173.248992,30.6294355 L170.107598,30.6294355 L170.107598,28.4658266 L173.477835,26.6766885 L175.14215,21.8085685 L178.15872,21.8085685 L178.15872,26.9263357 L184.711958,26.9263357 L184.711958,30.6294355 L178.15872,30.6294355 L178.15872,42.9453629 C178.15872,44.1242582 178.453439,44.9945473 179.042887,45.5562563 C179.632335,46.1179653 180.40554,46.3988155 181.362525,46.3988155 L181.362525,46.3988155 Z\" fill=\"#777777\"/></g></svg>"

/***/ },
/* 510 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 8 13\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M3,8 L0,8 L4,13 L8,8 L5,8 L5,0 L3,0 L3,8 Z\" fill=\"#888888\" fill-rule=\"evenodd\"/></svg>"

/***/ },
/* 511 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 29 29\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M17,12 L17,0 L12,0 L12,12 L0,12 L0,17 L12,17 L12,29 L17,29 L17,17 L29,17 L29,12 L17,12 L17,12 Z\" fill=\"#888888\" fill-rule=\"evenodd\"/></svg>"

/***/ },
/* 512 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 21 19\" xmlns=\"http://www.w3.org/2000/svg\"><path opacity=\".9\" fill=\"#CC7777\" d=\"M10.2873105 15.6574502L3.92940298 19 5.14365527 11.9203659 2.04953085e-14 6.90654115 7.10835676 5.87363645 10.2873105 -0.567627458 13.4662643 5.87363645 20.5746211 6.90654115 15.4309658 11.9203659 16.6452181 19z\" fill-rule=\"evenodd\"/></svg>"

/***/ },
/* 513 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 350 221\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M49.7303879,88.7017241 L49.7303879,88.7017241 L49.7303879,147 L49.7303879,148 L48.7303879,148 L37.519181,148 L36.519181,148 L36.519181,147 L36.519181,88.7017241 L36.519181,87.7017241 L37.519181,87.7017241 L48.7303879,87.7017241 L49.7303879,87.7017241 L49.7303879,88.7017241 Z M43.1247845,53.1961207 L43.1247845,53.1961207 C45.5534059,53.1961207 47.6390603,54.0730436 49.3225449,55.8032916 C50.9993927,57.5267185 51.8480603,59.6248136 51.8480603,62.0439655 C51.8480603,64.3867001 50.9943541,66.4261095 49.3129257,68.1075378 C47.6294284,69.7910352 45.5476484,70.6426724 43.1247845,70.6426724 C40.7019205,70.6426724 38.6201406,69.7910352 36.9366432,68.1075378 C35.2552149,66.4261095 34.4015086,64.3867001 34.4015086,62.0439655 C34.4015086,59.6248136 35.2501763,57.5267185 36.9270241,55.8032916 C38.6105086,54.0730436 40.6961631,53.1961207 43.1247845,53.1961207 L43.1247845,53.1961207 Z M78.505819,88.7017241 L78.505819,88.7017241 L78.505819,96.0512931 L77.505819,96.0512931 L77.505819,95.0512931 L77.7549569,95.0512931 L77.7549569,96.0512931 L76.9069586,95.5212942 C78.6509296,92.7309406 80.98448,90.441008 83.8974317,88.6584554 C86.8342073,86.8613241 89.9415909,85.9577586 93.2015086,85.9577586 C100.794732,85.9577586 106.724096,89.6032194 110.883983,96.7963577 L109.152893,96.7959465 C111.068302,93.4875126 113.727694,90.8499186 117.117303,88.8943748 C120.507156,86.9386908 124.125705,85.9577586 127.95625,85.9577586 C141.447189,85.9577586 148.26444,94.8421752 148.26444,112.12069 L148.26444,147 L148.26444,148 L147.26444,148 L136.053233,148 L135.053233,148 L135.053233,147 L135.053233,113.989224 C135.053233,111.785147 134.951517,109.85254 134.749164,108.193253 C134.551637,106.57353 134.114683,104.865437 133.43608,103.069133 C132.803839,101.395556 131.817147,100.134783 130.463999,99.2570647 C129.101018,98.3729694 127.358456,97.9232759 125.215733,97.9232759 C123.060311,97.9232759 121.262776,98.3584686 119.806692,99.2171849 C118.318449,100.094866 117.189121,101.148907 116.405299,102.380625 C115.59733,103.650292 114.952603,105.271878 114.478637,107.246735 C113.992199,109.273563 113.689468,111.08995 113.569182,112.693755 C113.446613,114.328006 113.385129,116.213515 113.385129,118.349138 L113.385129,147 L113.385129,148 L112.385129,148 L101.173922,148 L100.173922,148 L100.173922,147 L100.173922,116.106897 C100.173922,114.133034 100.132899,112.492079 100.051301,111.186516 C99.9711228,109.903667 99.7480868,108.281587 99.381352,106.325668 C99.0281457,104.441901 98.5260858,102.974342 97.8900401,101.926737 C97.2671792,100.900848 96.3162825,99.9685966 95.0250677,99.1331046 C93.7829869,98.3294053 92.2692317,97.9232759 90.4609914,97.9232759 C87.8296605,97.9232759 85.6811527,98.5126895 83.9901501,99.6776024 C82.3052347,100.838322 81.1072623,102.485534 80.3853212,104.651357 C79.6168698,106.956712 79.1131141,109.112786 78.8724027,111.118714 C78.6284086,113.151999 78.505819,115.562928 78.505819,118.349138 L78.505819,147 L78.505819,148 L77.505819,148 L66.2946121,148 L65.2946121,148 L65.2946121,147 L65.2946121,88.7017241 L65.2946121,87.7017241 L66.2946121,87.7017241 L77.505819,87.7017241 L78.505819,87.7017241 L78.505819,88.7017241 Z M190.365302,139.027586 C196.261596,139.027586 200.891362,136.99298 204.254741,132.923707 C207.61812,128.854434 209.299784,123.830202 209.299784,117.850862 C209.299784,111.954568 207.597359,106.992621 204.192457,102.964871 C200.787555,98.9371207 196.178549,96.9232759 190.365302,96.9232759 C184.801193,96.9232759 180.337517,98.9786432 176.974138,103.08944 C173.610759,107.200236 171.929095,112.120661 171.929095,117.850862 C171.929095,123.66411 173.589998,128.646818 176.911853,132.799138 C180.233709,136.951458 184.718147,139.027586 190.365302,139.027586 L190.365302,139.027586 L190.365302,139.027586 Z M173.55194,88.7017241 L173.55194,88.7017241 L173.55194,98.4181034 L172.55194,98.4181034 L172.55194,97.4181034 L172.801078,97.4181034 L172.801078,98.4181034 L171.967636,97.8654956 C177.21451,89.9521776 184.291579,85.9577586 193.105819,85.9577586 C201.536667,85.9577586 208.419753,89.0962728 213.677469,95.3451979 C218.897258,101.549045 221.510991,108.94034 221.510991,117.477155 C221.510991,126.503975 218.944674,134.181541 213.811515,140.469661 C208.633538,146.812683 201.537088,149.993103 192.607543,149.993103 C188.445593,149.993103 184.556639,148.950255 180.957996,146.869112 C177.380761,144.80035 174.384261,141.997868 171.975277,138.470427 L172.801078,137.906466 L172.801078,138.906466 L172.55194,138.906466 L172.55194,137.906466 L173.55194,137.906466 L173.55194,180.384483 L173.55194,181.384483 L172.55194,181.384483 L161.340733,181.384483 L160.340733,181.384483 L160.340733,180.384483 L160.340733,88.7017241 L160.340733,87.7017241 L161.340733,87.7017241 L172.55194,87.7017241 L173.55194,87.7017241 L173.55194,88.7017241 Z M244.182543,38.8741379 L244.182543,38.8741379 L244.182543,147 L244.182543,148 L243.182543,148 L231.971336,148 L230.971336,148 L230.971336,147 L230.971336,38.8741379 L230.971336,37.8741379 L231.971336,37.8741379 L243.182543,37.8741379 L244.182543,37.8741379 L244.182543,38.8741379 Z M275.566813,137.517441 L275.566813,137.517441 L248.909055,89.1846822 L248.091135,87.7017241 L249.784698,87.7017241 L262.86444,87.7017241 L263.465153,87.7017241 L263.747286,88.2320619 L283.429182,125.229045 L281.650106,125.255118 L299.961744,88.2581353 L300.237139,87.7017241 L300.857974,87.7017241 L313.43944,87.7017241 L315.079183,87.7017241 L314.328489,89.1595361 L267.116851,180.842295 L266.837653,181.384483 L266.227802,181.384483 L253.521767,181.384483 L251.861855,181.384483 L252.637732,179.917062 L275.558422,136.567062 L275.566813,137.517441 Z\" fill=\"#189AE0\" fill-rule=\"evenodd\"/></svg>"

/***/ },
/* 514 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 12 8\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M7,5 L7,-2 L5,-2 L5,5 L2,5 L6,10 L10,5 L7,5 Z\" transform=\"rotate(-90 6 4)\" fill=\"#7F7F7F\" fill-rule=\"evenodd\"/></svg>"

/***/ },
/* 515 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 53 53\" xmlns=\"http://www.w3.org/2000/svg\"><g fill=\"none\" fill-rule=\"evenodd\"><path fill=\"#999999\" d=\"M0 8H7V33H0zM8 0H15V33H8zM16 13H23V33H16zM24 20H31V33H24z\" transform=\"translate(11 10)\"/><path fill=\"#ECECEC\" d=\"M1 9H6V32H1zM9 1H14V32H9zM17 14H22V32H17zM25 21H30V32H25z\" transform=\"translate(11 10)\"/></g></svg>"

/***/ },
/* 516 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 53 53\" xmlns=\"http://www.w3.org/2000/svg\"><g fill=\"none\" fill-rule=\"evenodd\"><path d=\"M18.5,36.5 C28.4411255,36.5 36.5,28.4411255 36.5,18.5 C36.5,8.5588745 28.4411255,0.5 18.5,0.5 C8.5588745,0.5 0.5,8.5588745 0.5,18.5 C0.5,28.4411255 8.5588745,36.5 18.5,36.5 L18.5,36.5 Z\" fill=\"#EEEEEE\" transform=\"translate(8 8)\"/><path d=\"M18.5,36.5 C28.4411255,36.5 36.5,28.4411255 36.5,18.5 C36.5,8.5588745 28.4411255,0.5 18.5,0.5 C8.5588745,0.5 0.5,8.5588745 0.5,18.5 C0.5,28.4411255 8.5588745,36.5 18.5,36.5 L18.5,36.5 Z M18.5,35.5 C9.11115925,35.5 1.5,27.8888407 1.5,18.5 C1.5,9.11115925 9.11115925,1.5 18.5,1.5 C27.8888407,1.5 35.5,9.11115925 35.5,18.5 C35.5,27.8888407 27.8888407,35.5 18.5,35.5 L18.5,35.5 Z\" fill=\"#999999\" transform=\"translate(8 8)\"/><path d=\"M31.6707152,13.6587974 L33.3941016,13.6587974 L34.8709677,13.5690187 C34.7326759,13.098061 34.5770977,12.6354724 34.4027298,12.1820138 L33.5023299,12.1972306 L33.0506268,11.6950785 L32.2524427,12.1302769 L31.5842828,11.4105256 L31.5572257,10.7303378 L30.1622824,10.6032781 L29.3062261,10.1749272 L28.7583201,10.6770793 L28.2028981,10.5614321 L27.8586718,9.01236903 L28.4839912,8.11838616 L29.1296035,8.0088257 L29.927036,8.0963219 L29.8082855,7.25635842 L29.1002916,7.54547628 L28.4396477,6.85996261 L28.3622343,6.43009 L28.6974416,6.06032346 L29.4948742,5.74381549 L29.7000571,5.37252728 C26.6523765,2.65481936 22.6576977,1 18.2864745,1 C14.4932207,1 10.9840664,2.24625016 8.13029492,4.35148472 L10.1798695,3.8843802 L13.1337522,3.8988361 L15.4426239,3.76497796 L14.2376815,5.51023869 L13.4838409,5.74229381 L11.9430899,6.6552976 L12.1159547,7.29820443 L12.5466134,7.58275727 L13.2759777,7.68455305 L13.4079307,7.70296944 L13.4079307,8.69433938 L13.8062712,8.62966828 L14.1730451,7.85513673 L15.0892283,7.56145385 L16.7442203,7.06310595 L17.0749181,7.06310595 L18.024171,7.64438503 L18.6833118,8.05143255 L18.6555031,8.66314508 L16.9621802,9.03975914 L16.4037519,8.69433938 L15.8550942,8.83737664 L14.9592039,10.1574279 L13.9287797,10.8741359 L12.8652858,11.9940872 L12.7923819,12.4924351 L11.7266332,13.2015347 L11.1982683,13.7394461 L10.5293569,13.8406374 L8.49030454,13.8413982 L7.43432643,14.3823529 L6.79397529,15.9169601 L7.0908517,16.5750837 L7.92285723,16.6777966 L9.9634128,17.1723403 L10.0641253,18.7457502 L11.4432853,18.9831312 L12.3196344,17.9575236 L13.3831284,18.1766445 L13.7566666,18.7023825 L14.7765686,18.6415156 L15.9978956,19.6146255 L17.0891982,19.6298422 L17.4920482,20.3435068 L17.5491687,21.2154254 L18.7562156,21.6802965 L20.2789285,21.6962741 L21.399543,22.6556889 L21.2702703,23.2681623 L20.5307098,24.2192079 L20.3150047,26.3259641 L19.6468448,26.8600713 L18.6562547,26.8303987 L18.3263085,27.4116778 L18.5713255,28.5042389 L17.4927998,29.8996131 L17.1485735,30.5402374 L16.1211556,31.0393461 L15.891922,31.5711708 L15.4101554,32.2977697 L16.1504675,33.0403461 L15.9708385,33.7532499 L16.7269338,34.3976784 L16.6262213,34.7324464 L15.5973003,34.7126647 L14.5736404,33.8087909 L13.7762078,32.3898309 L13.8874425,31.0203252 L13.2839191,30.2054693 L13.5281845,28.8245511 L13.169678,28.7233599 L13.169678,25.7271858 C13.169678,25.7271858 12.1640562,24.9556976 12.106184,24.9556976 C12.0483119,24.9556976 11.5740613,24.8248337 11.5740613,24.8248337 L11.4733488,24.2587714 L10.166341,22.6001478 L10.2956137,22.0044129 L10.3384541,21.0297813 L11.2433635,20.389157 L11.1140907,19.2981175 L9.79280281,19.1976871 L8.75862069,18.0046954 L8.02582449,17.7992696 L7.0059225,17.1883179 L5.49673812,17.0544107 L4.88945675,16.1140168 L4.34681177,15.6575149 L3.78688032,15.5700187 L3.0976761,14.3808313 L3.0976761,12.9968697 L2.37916003,12.6476458 L2.37916003,11.6517108 C1.49228873,13.7561845 1,16.0706491 1,18.5 C1,28.1496891 8.75486276,36 18.287226,36 C23.6911283,36 28.5223221,33.4755445 31.694766,29.5313682 L31.1243123,29.5313682 L31.1243123,28.3680492 L30.4644199,27.4687405 L30.4644199,26.0695622 L29.9608574,25.5613234 L29.9165138,24.9792835 L30.556865,23.7429242 L29.344557,21.5753011 L29.4866067,20.1046041 L28.3953041,19.9904787 L27.9932057,19.5834312 L27.2596579,19.5834312 L26.8868713,19.9318943 L25.5498001,20.0483022 L24.8305324,20.0483022 L23.1800499,18.1439285 L23.1935785,16.6602974 L23.1800499,15.9915221 L23.0214653,15.3957871 L24.9312449,14.000413 L24.9312449,13.0113256 L25.8662177,12.4855876 L27.0138893,12.5236294 L27.6159096,12.1964697 L29.5557526,12.0435416 L29.5557526,13.0470849 L31.0897394,13.4404374 L31.6707152,13.6587974 Z\" fill=\"#FFFFFF\" transform=\"translate(8 8)\"/><path d=\"M31.6707152,14.1587974 L33.3941016,14.1587974 L34.9013067,14.0680974 L35.5274505,14.0300342 L35.3507125,13.4281467 C35.2071621,12.9392803 35.0469345,12.464211 34.8694161,12.0025594 L34.7439124,11.6761765 L34.394281,11.6820852 L33.4938811,11.6973019 L33.874063,11.8628438 L33.4223599,11.3606917 L33.158143,11.0669654 L32.8112748,11.2560903 L32.0130906,11.6912888 L32.6188853,11.7901008 L31.9507254,11.0703495 L32.0838877,11.3906519 L32.0568306,10.7104641 L32.0393965,10.2721869 L31.6025809,10.2323992 L30.2076376,10.1053395 L30.3860241,10.156132 L29.5299678,9.72778105 L29.2221506,9.57375634 L28.9683986,9.80631822 L28.4204925,10.3084703 L28.8602416,10.1875775 L28.3048197,10.0719303 L28.6909923,10.4529699 L28.346766,8.90390678 L28.2683886,9.29895605 L28.893708,8.40497318 L28.5676453,8.61133849 L29.2132575,8.50177803 L29.0750696,8.50584286 L29.8725021,8.59333906 L30.5121974,8.66352793 L30.4221129,8.02632997 L30.3033624,7.1863665 L30.2135083,6.55079755 L29.6192581,6.79346681 L28.9112642,7.08258467 L29.4603153,7.19851385 L28.7996714,6.51300018 L28.4396477,6.85996261 L28.9317321,6.77134589 L28.8543187,6.34147328 L28.3622343,6.43009 L28.7326748,6.76590821 L29.067882,6.39614168 L28.6974416,6.06032346 L28.8818978,6.52505554 L29.6793304,6.20854756 L29.8458445,6.14245667 L29.9324963,5.98565615 L30.1376792,5.61436794 L30.3307442,5.26500775 L30.0328309,4.99934954 C26.8025927,2.11884954 22.6641785,0.5 18.2864745,0.5 C14.4826483,0.5 10.8540066,1.72086534 7.83347106,3.9491222 L5.9055948,5.37132149 L8.24139769,4.83898464 L10.2909723,4.37188012 L10.1774226,4.38437421 L13.1313053,4.39883011 L15.4715631,4.26413978 L15.0311624,3.48090153 L13.82622,5.22616225 L14.0905783,5.03236775 L13.3367377,5.26442287 L13.2289467,5.3121439 L11.6881957,6.22514769 L11.3616941,6.41862294 L11.4602395,6.78512637 L11.6331043,7.4280332 L11.6822868,7.61094945 L11.840319,7.71536741 L12.2709776,7.99992026 L12.4774994,8.07795749 L13.2068637,8.17975327 L13.3388167,8.19816965 L13.4079307,7.70296944 L12.9079307,7.70296944 L12.9079307,8.69433938 L12.9079307,9.28206166 L13.4880573,9.18787736 L13.8863978,9.12320626 L14.1457245,9.08110422 L14.2581649,8.84365928 L14.6249388,8.06912774 L14.3256707,8.33127267 L15.2418538,8.03758979 L16.8883852,7.54187152 L16.7442203,7.06310595 L16.7442203,7.56310595 L17.0749181,7.56310595 L17.0749181,7.06310595 L16.8138072,7.48951084 L17.7630602,8.07078991 L18.4205975,8.47685141 L18.1838276,8.02872581 L18.156019,8.64043835 L18.54695,8.1750711 L16.8536271,8.55168516 L17.2252067,8.61453324 L16.6667784,8.26911348 L16.4847409,8.15651288 L16.277616,8.21051118 L15.7289583,8.35354844 L15.546983,8.40099013 L15.4413769,8.55659562 L14.5454866,9.87664692 L14.6737009,9.74695501 L13.6432767,10.463663 L13.5662057,10.5298394 L12.5027117,11.6497907 L12.3935076,11.7647921 L12.3705516,11.9217121 L12.2976478,12.4200599 L12.5154104,12.0761578 L11.4496617,12.7852574 L11.3699287,12.8511608 L10.8415638,13.3890722 L11.1234805,13.245071 L10.4545691,13.3462622 L8.49011798,13.3413982 L8.36959993,13.3414432 L8.26233726,13.3963915 L7.20635915,13.9373463 L7.04339786,14.0208278 L6.97288747,14.1898066 L6.33253633,15.7244138 L6.24895582,15.9247152 L6.33820153,16.1225575 L6.63507794,16.7806811 L6.7506483,17.0368805 L7.02959065,17.0713166 L7.86159618,17.1740295 L9.84564347,17.6582728 L9.46443395,17.2042795 L9.56514646,18.7776894 L9.5903576,19.1715576 L9.97931245,19.2385045 L11.3584725,19.4758854 L11.6386987,19.524118 L11.8234156,19.3079404 L12.6997646,18.2823328 L12.2187345,18.447237 L13.2822285,18.6663579 L12.9755336,18.4662416 L13.3490718,18.9919796 L13.5096689,19.2180127 L13.7864532,19.2014945 L14.8063552,19.1406276 L14.4649932,19.0325664 L15.6863202,20.0056763 L15.8200075,20.1121936 L15.9909244,20.1145769 L17.0822271,20.1297936 L16.6537795,19.8756277 L17.0566295,20.5892923 L16.9931177,20.3761924 L17.0502382,21.248111 L17.071137,21.5671204 L17.3694697,21.6820176 L18.5765165,22.1468887 L18.7509695,22.180269 L20.2736824,22.1962466 L19.9537502,22.0760885 L21.0743647,23.0355033 L20.9103215,22.5524305 L20.7810487,23.1649039 L20.8755657,22.9612286 L20.1360052,23.9122742 L20.0479248,24.0255422 L20.0333102,24.1682804 L19.817605,26.2750367 L20.0028071,25.9354098 L19.3346473,26.469517 L19.6618154,26.3602955 L18.6712252,26.3306228 L18.3701241,26.3216035 L18.2214217,26.5835784 L17.8914755,27.1648574 L17.7961857,27.3327333 L17.8384264,27.5210899 L18.0834433,28.613651 L18.1757217,28.1984651 L17.097196,29.5938392 L16.70813,30.3035741 L16.9300942,30.0904966 L15.9026763,30.5896053 L15.7355425,30.6707972 L15.6619932,30.8414322 L15.4327596,31.3732569 L14.9934347,32.0214658 L14.7678513,32.36169 L15.0560626,32.6507828 L15.7963746,33.3933592 L15.6656216,32.9181804 L15.4859926,33.6310842 L15.4100975,33.9322933 L15.646504,34.1337852 L16.4025993,34.7782137 L16.7269338,34.3976784 L16.2481319,34.2536343 L16.1474194,34.5884024 L16.6262213,34.7324464 L16.6358324,34.2325388 L15.6069114,34.212757 L15.9282438,34.3378628 L14.9045838,33.4339891 L15.0095243,33.5638312 L14.2120917,32.1448712 L14.2745666,32.4303088 L14.3858013,31.0608032 L14.4010035,30.8736361 L14.2892384,30.7227348 L13.685715,29.907879 L13.7762758,30.2925604 L14.0205412,28.9116422 L14.0993293,28.4662255 L13.6640066,28.3433522 L13.3055002,28.242161 L13.169678,28.7233599 L13.669678,28.7233599 L13.669678,25.7271858 L13.669678,25.4805834 L13.4740208,25.33048 C13.3466654,25.2327761 13.1547059,25.0869086 12.9585334,24.9406193 C12.9468756,24.9319282 12.9468756,24.9319282 12.935205,24.9232375 C12.791566,24.8163061 12.6697682,24.7273407 12.5755536,24.6610197 C12.5187998,24.6210687 12.4718681,24.5891883 12.4335703,24.5648752 C12.2762455,24.4649986 12.2587185,24.4556976 12.106184,24.4556976 C12.1486251,24.4556976 12.0269093,24.4277093 11.9679175,24.4124889 C11.9560968,24.4094348 11.9560968,24.4094348 11.9442694,24.4063627 C11.8527651,24.3825651 11.7641659,24.3586045 11.7070599,24.3428468 L11.5740613,24.8248337 L12.0663306,24.7372503 L11.9656181,24.1711879 L11.9436593,24.0477667 L11.86607,23.9493041 L10.5590622,22.2906805 L10.6549691,22.7061787 L10.7842419,22.1104437 L10.8379718,21.0517379 L10.6273568,21.4378687 L11.5322661,20.7972443 L11.7748641,20.6254987 L11.7398903,20.3303256 L11.6106175,19.2392861 L11.5622102,18.8307365 L11.1519862,18.7995556 L9.83069825,18.6991252 L10.1706072,18.8701755 L9.13642509,17.6771839 L9.03810854,17.5637698 L8.89358364,17.5232549 L8.16078744,17.317829 L8.28276631,17.3703397 L7.26286432,16.759388 L7.16441983,16.7004168 L7.05011299,16.6902745 L5.54092861,16.5563673 L5.91676928,16.7831657 L5.30948792,15.8427718 L5.21133387,15.7314006 L4.66868889,15.2748987 L4.56189297,15.1850563 L4.42400616,15.1635098 L3.86407471,15.0760136 L4.21947869,15.3193024 L3.53027447,14.130115 L3.5976761,14.3808313 L3.5976761,12.9968697 L3.5976761,12.6839578 L3.31624476,12.5471723 L2.59772869,12.1979484 L2.87916003,12.6476458 L2.87916003,11.6517108 L2.87916003,9.17773972 L1.91840321,11.4575378 C0.986778242,13.6682083 0.5,16.0515112 0.5,18.5 C0.5,28.4244716 8.47734197,36.5 18.287226,36.5 C23.7003935,36.5 28.7234531,34.0232484 32.0843749,29.8447448 L32.7386031,29.0313682 L31.694766,29.0313682 L31.1243123,29.0313682 L31.6243123,29.5313682 L31.6243123,28.3680492 L31.6243123,28.2042841 L31.5274294,28.072251 L30.8675371,27.1729423 L30.9644199,27.4687405 L30.9644199,26.0695622 L30.9644199,25.8638078 L30.8196035,25.7176466 L30.316041,25.2094078 L30.4594126,25.5233403 L30.415069,24.9413004 L30.3604973,25.2092372 L31.0008485,23.9728779 L31.1246619,23.7338247 L30.9932519,23.4988618 L29.7809439,21.3312387 L29.842241,21.6233707 L29.9842907,20.1526738 L30.0319816,19.6589113 L29.5386118,19.607316 L28.4473091,19.4931906 L28.7510133,19.6390943 L28.3489149,19.2320468 L28.2021062,19.0834312 L27.9932057,19.0834312 L27.2596579,19.0834312 L27.0623574,19.0834312 L26.9182218,19.2181622 L26.5454353,19.5666253 L26.8435044,19.4337785 L25.5064332,19.5501865 L24.8305324,19.5483022 L25.2083745,19.7208341 L23.557892,17.8164604 L23.6800291,18.1484876 L23.6935577,16.6648565 L23.6799476,15.9814098 L23.6632235,15.8629013 L23.5046389,15.2671664 L23.3164413,15.7995063 L25.226221,14.4041322 L25.4312449,14.2543321 L25.4312449,14.000413 L25.4312449,13.0113256 L25.1763103,13.44715 L26.1112831,12.921412 L25.8496533,12.9853131 L26.9973249,13.023355 L27.1331898,13.0278585 L27.2526317,12.9629494 L27.854652,12.6357897 L27.6552053,12.6949232 L29.5950484,12.541995 L29.0557526,12.0435416 L29.0557526,13.0470849 L29.0557526,13.4350492 L29.4315583,13.5314151 L30.965545,13.9247676 L31.4948045,14.126831 L31.6707152,14.1587974 L31.6707152,14.1587974 Z M31.6707152,13.1587974 L31.8466259,13.1907639 L31.26565,12.9724038 L29.679947,12.5627547 L30.0557526,13.0470849 L30.0557526,12.0435416 L30.0557526,11.5025726 L29.5164569,11.5450881 L27.5766138,11.6980163 L27.3771671,11.7571497 L26.7751469,12.0843094 L27.0304537,12.0239039 L25.8827821,11.985862 L25.7430321,11.9812298 L25.6211523,12.0497631 L24.6861795,12.5755011 L24.4312449,12.7188516 L24.4312449,13.0113256 L24.4312449,14.000413 L24.6362689,13.5966939 L22.7264893,14.992068 L22.450301,15.1938641 L22.5382917,15.5244079 L22.6968763,16.1201429 L22.6801522,16.0016345 L22.6936807,16.6704097 L22.6800707,18.1393694 L22.6783463,18.3284816 L22.8022078,18.4713967 L24.4526904,20.3757704 L24.6022203,20.5483022 L24.8305324,20.5483022 L25.5498001,20.5483022 L26.9302382,20.43001 L27.1022043,20.4150383 L27.2283073,20.2971633 L27.6010939,19.9487001 L27.2596579,20.0834312 L27.9932057,20.0834312 L27.6374964,19.9348155 L28.0395949,20.341863 L28.1653405,20.4691564 L28.343299,20.4877668 L29.4346017,20.6018923 L28.9889228,20.0565345 L28.8468731,21.5272314 L28.8318392,21.6828828 L28.9081701,21.8193635 L30.1204781,23.9869866 L30.1128815,23.5129706 L29.4725304,24.7493299 L29.4071611,24.8755417 L29.4179587,25.0172667 L29.4623022,25.5993066 L29.4762692,25.7826327 L29.6056738,25.913239 L30.1092363,26.4214778 L29.9644199,26.0695622 L29.9644199,27.4687405 L29.9644199,27.6325056 L30.0613028,27.7645387 L30.7211952,28.6638474 L30.6243123,28.3680492 L30.6243123,29.5313682 L30.6243123,30.0313682 L31.1243123,30.0313682 L31.694766,30.0313682 L31.305157,29.2179916 C28.1314934,33.1636844 23.3932499,35.5 18.287226,35.5 C9.03238355,35.5 1.5,27.8749067 1.5,18.5 C1.5,16.185605 1.95982375,13.9342734 2.83991684,11.8458838 L1.87916003,11.6517108 L1.87916003,12.6476458 L1.87916003,12.9605577 L2.16059136,13.0973431 L2.87910743,13.4465671 L2.5976761,12.9968697 L2.5976761,14.3808313 L2.5976761,14.5152494 L2.66507772,14.6315475 L3.35428194,15.820735 L3.47393147,16.0271842 L3.70968593,16.0640238 L4.26961739,16.15152 L4.02493466,16.040131 L4.56757964,16.4966329 L4.46942559,16.3852617 L5.07670696,17.3256556 L5.20922539,17.5308645 L5.45254762,17.552454 L6.961732,17.6863613 L6.74898067,17.6172478 L7.76888267,18.2281995 L7.89086154,18.2807101 L8.62365774,18.486136 L8.38081629,18.332207 L9.41499841,19.5251986 L9.54976139,19.6806559 L9.75490738,19.6962489 L11.0761953,19.7966793 L10.6175639,19.3569489 L10.7468367,20.4479884 L10.9544609,19.9810696 L10.0495515,20.621694 L9.84968973,20.7631847 L9.83893646,21.0078248 L9.79609607,21.9824563 L9.67771285,22.4941169 L9.62772627,22.7244729 L9.77361972,22.9096151 L11.0806275,24.5682387 L10.9810794,24.3463548 L11.0817919,24.9124171 L11.1370373,25.2229284 L11.4410627,25.3068206 C11.5025193,25.3237788 11.5953811,25.3488922 11.6925719,25.3741686 C11.7052973,25.377474 11.7052973,25.377474 11.7180907,25.3807795 C11.9470505,25.439853 12.0159558,25.4556976 12.106184,25.4556976 C11.9672632,25.4556976 11.9899209,25.4677213 11.8976087,25.4091176 C11.9199859,25.4233236 11.9550712,25.4471568 11.9999333,25.4787368 C12.08548,25.5389562 12.2009228,25.6232796 12.3380599,25.7253708 C12.3493963,25.7338126 12.3493963,25.7338126 12.3607327,25.7422641 C12.5525194,25.8852828 12.7412852,26.0287234 12.8653352,26.1238915 L12.669678,25.7271858 L12.669678,28.7233599 L12.669678,29.1017667 L13.0338559,29.2045587 L13.3923623,29.30575 L13.5281845,28.8245511 L13.0358278,28.73746 L12.7915624,30.1183782 L12.7540941,30.3301994 L12.8821231,30.5030597 L13.4856466,31.3179156 L13.3890837,30.9798472 L13.277849,32.3493529 L13.2654818,32.5016157 L13.3403239,32.6347906 L14.1377565,34.0537506 L14.2426969,34.1835928 L15.2663568,35.0874665 L15.4040437,35.2090416 L15.5876892,35.2125723 L16.6166102,35.232354 L16.9957713,35.2396437 L17.1050233,34.8764905 L17.2057358,34.5417224 L17.2998201,34.2289865 L17.0512683,34.017143 L16.295173,33.3727145 L16.4556844,33.8754156 L16.6353134,33.1625118 L16.7045086,32.8878928 L16.5045603,32.687333 L15.7642483,31.9447566 L15.8268761,32.5740736 L16.3086427,31.8474747 L16.580318,31.23726 L16.339635,31.4890869 L17.3670528,30.9899782 L17.5124866,30.919328 L17.589017,30.7769007 L17.9332433,30.1362763 L18.9669293,28.8100128 L19.1106248,28.6241025 L19.0592076,28.3948268 L18.8141907,27.3022657 L18.7611415,27.6584981 L19.0910877,27.077219 L18.6412842,27.3301745 L19.6318743,27.3598471 L19.8155261,27.3653483 L19.9590424,27.2506256 L20.6272022,26.7165184 L20.7910402,26.5855512 L20.8124043,26.3768915 L21.0281094,24.2701353 L20.9254144,24.5261415 L21.6649749,23.5750959 L21.7356989,23.4841476 L21.7594918,23.3714207 L21.8887646,22.7589473 L21.9500137,22.4687586 L21.7247214,22.2758744 L20.6041069,21.3164596 L20.4659884,21.1982093 L20.2841747,21.1963016 L18.7614617,21.180324 L18.9359147,21.2137044 L17.7288678,20.7488333 L18.0480993,21.1827398 L17.9909787,20.3108212 L17.927467,20.0977213 L17.5246169,19.3840566 L17.383406,19.1338959 L17.0961693,19.1298908 L16.0048667,19.1146741 L16.309471,19.2235746 L15.088144,18.2504647 L14.9381827,18.130981 L14.746782,18.1424036 L13.72688,18.2032705 L14.1642614,18.4127854 L13.7907232,17.8870474 L13.6767533,17.7266399 L13.4840283,17.6869311 L12.4205343,17.4678102 L12.1313258,17.408222 L11.9395042,17.6327144 L11.0631551,18.658322 L11.5280982,18.4903769 L10.1489382,18.2529959 L10.5631042,18.713811 L10.4623916,17.1404012 L10.438881,16.7730988 L10.0811821,16.6864078 L8.04062656,16.1918641 L7.15211275,16.0788508 L7.54662546,16.3694863 L7.24974905,15.7113628 L7.25541425,16.1095065 L7.89576539,14.5748993 L7.66229371,14.8273596 L8.71827182,14.2864049 L8.49049111,14.3413982 L10.5295435,14.3406373 L11.2730562,14.2338213 L11.4380432,14.2088624 L11.5549729,14.08982 L12.0833377,13.5519086 L12.0036047,13.617812 L13.0693535,12.9087124 L13.2548628,12.7852831 L13.287116,12.5648103 L13.3600199,12.0664624 L13.2278598,12.3383837 L14.2913538,11.2184324 L14.2142827,11.2846088 L15.2447069,10.5679009 L15.3729212,10.438209 L16.2688116,9.11815765 L15.9812302,9.32120483 L16.5298879,9.17816757 L16.1407254,9.11956528 L16.6991537,9.46498504 L16.8721585,9.5719984 L17.0707333,9.52783313 L18.7640563,9.15121907 L19.1376084,9.06813686 L19.1549872,8.68585181 L19.1827959,8.07413928 L19.1961461,7.78047345 L18.9460261,7.62601368 L18.2868853,7.21896616 L17.3360289,6.63670107 L17.215845,6.56310595 L17.0749181,6.56310595 L16.7442203,6.56310595 L16.6000554,6.58434038 L14.9450633,7.08268828 L14.0204196,7.37900079 L13.813947,7.44518565 L13.7211515,7.64114573 L13.3543776,8.41567727 L13.8062712,8.62966828 L13.7261447,8.13613029 L13.3278042,8.2008014 L13.4079307,8.69433938 L13.9079307,8.69433938 L13.9079307,7.70296944 L13.9079307,7.26790703 L13.4770447,7.20776922 L13.3450917,7.18935283 L12.6157274,7.08755705 L12.8222491,7.16559429 L12.3915904,6.88104144 L12.598805,7.16837565 L12.4259403,6.52546882 L12.1979841,7.08544751 L13.7387351,6.17244372 L13.6309442,6.22016475 L14.3847848,5.98810962 L14.5505825,5.93707203 L14.649143,5.79431512 L15.8540855,4.04905439 L16.4357496,3.20656135 L15.4136847,3.26581614 L13.104813,3.39967427 L10.1823164,3.38438619 L10.0687668,3.39688028 L8.01919215,3.8639848 L8.42711879,4.75384723 C11.2775819,2.65105327 14.6987289,1.5 18.2864745,1.5 C22.4155286,1.5 26.3179729,3.02654368 29.3672834,5.74570503 L29.7000571,5.37252728 L29.262435,5.13068662 L29.0572521,5.50197482 L29.4948742,5.74381549 L29.310418,5.27908341 L28.5129854,5.59559139 L28.4050186,5.63844435 L28.3270012,5.72450525 L27.9917939,6.09427178 L27.826543,6.2765597 L27.8701499,6.51870671 L27.9475632,6.94857933 L27.9744304,7.09777154 L28.0796239,7.20692504 L28.7402679,7.89243871 L28.9754956,8.13652148 L29.289319,8.0083679 L29.9973129,7.71925003 L29.3132086,7.32635034 L29.4319592,8.16631382 L29.9815699,7.59930474 L29.1841374,7.51180855 L29.0459494,7.51587337 L28.4003372,7.62543383 L28.1941469,7.66042433 L28.0742744,7.83179913 L27.448955,8.725782 L27.3228527,8.90606308 L27.3705776,9.12083128 L27.7148039,10.6698944 L27.7848502,10.9851117 L28.1009765,11.0509339 L28.6563985,11.166581 L28.9072495,11.218812 L29.0961476,11.0456882 L29.6440537,10.5435361 L29.0824845,10.6220733 L29.9385407,11.0504242 L30.1169272,11.1012168 L31.5118705,11.2282765 L31.0576209,10.7502115 L31.084678,11.4303993 L31.0920281,11.6151752 L31.2178402,11.7507018 L31.886,12.4704531 L32.1504845,12.7553596 L32.4917947,12.5692651 L33.2899788,12.1340666 L32.6788937,12.0294652 L33.1305968,12.5316173 L33.2829706,12.7010091 L33.5107787,12.6971592 L34.4111785,12.6819424 L34.4027298,12.1820138 L33.9360434,12.3614682 C34.103681,12.797424 34.2552291,13.2467586 34.3912229,13.7098907 L34.8709677,13.5690187 L34.8406287,13.06994 L33.3637626,13.1597187 L31.6707152,13.1587974 L31.6707152,13.1587974 Z\" fill=\"#A0A0A0\" transform=\"translate(8 8)\"/></g></svg>"

/***/ },
/* 517 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 53 53\" xmlns=\"http://www.w3.org/2000/svg\"><g fill=\"none\" fill-rule=\"evenodd\"><path fill=\"#999999\" d=\"M0 0H33V33H0z\" transform=\"translate(10 10)\"/><path fill=\"#EAEAEA\" d=\"M1 1H8V8H1z\" transform=\"translate(10 10)\"/><path fill=\"#D6D6D6\" d=\"M9 1H16V8H9z\" transform=\"translate(10 10)\"/><path fill=\"#FFFFFF\" d=\"M17 1H24V8H17z\" transform=\"translate(10 10)\"/><path fill=\"#F5F5F5\" d=\"M25 1H32V8H25z\" transform=\"translate(10 10)\"/><path fill=\"#FFFFFF\" d=\"M1 9H8V16H1z\" transform=\"translate(10 10)\"/><path fill=\"#EAEAEA\" d=\"M9 9H16V16H9z\" transform=\"translate(10 10)\"/><path fill=\"#D6D6D6\" d=\"M17 9H24V16H17z\" transform=\"translate(10 10)\"/><path fill=\"#EAEAEA\" d=\"M25 9H32V16H25zM1 17H8V24H1z\" transform=\"translate(10 10)\"/><path fill=\"#E0E0E0\" d=\"M9 17H16V24H9z\" transform=\"translate(10 10)\"/><path fill=\"#FFFFFF\" d=\"M17 17H24V24H17z\" transform=\"translate(10 10)\"/><path fill=\"#E0E0E0\" d=\"M25 17H32V24H25z\" transform=\"translate(10 10)\"/><path fill=\"#D6D6D6\" d=\"M1 25H8V32H1z\" transform=\"translate(10 10)\"/><path fill=\"#EAEAEA\" d=\"M9 25H16V32H9zM17 25H24V32H17z\" transform=\"translate(10 10)\"/><path fill=\"#F5F5F5\" d=\"M25 25H32V32H25z\" transform=\"translate(10 10)\"/></g></svg>"

/***/ },
/* 518 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 53 53\" xmlns=\"http://www.w3.org/2000/svg\"><g fill=\"none\" fill-rule=\"evenodd\"><path d=\"M0.955555556,20.8129857 L9.42181091,8.8558428 L17.5717472,14.8344142 L25.7838201,0.88441423 L34.5810198,12.8415571 L43,4.87012852 L43,30.7540849 L0.955555556,30.7540849 L0.955555556,20.8129857 Z\" fill=\"#EEEEEE\" transform=\"translate(5 11)\"/><path d=\"M9.5494353,9.56007049 L17.7126256,15.5483647 L25.815325,1.74681713 L34.5244138,13.5841997 L42.9961663,5.23410924 L42.3410202,4.50614779 L34.6249454,12.0816792 L25.7401035,0.00541321826 L17.4218699,14.1138624 L9.3115691,8.16436651 L0.72615865,20.5189081 L1.49896249,21.1070632 L9.5494353,9.56007049 Z\" fill=\"#888888\" transform=\"translate(5 11)\"/></g></svg>"

/***/ },
/* 519 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 53 53\" xmlns=\"http://www.w3.org/2000/svg\"><g fill=\"none\" fill-rule=\"evenodd\"><path d=\"M32,0 L33,0 L33,33 L32,33 L32,0 Z M0,32 L32,32 L32,33 L0,33 L0,32 Z\" fill=\"#AAAAAA\" transform=\"translate(10 10)\"/><g transform=\"translate(16 16)\" fill=\"#999999\"><circle cx=\"2\" cy=\"20\" r=\"2\"/><circle cx=\"5\" cy=\"11\" r=\"2\"/><circle cx=\"21\" cy=\"10\" r=\"2\"/><circle cx=\"12\" cy=\"2\" r=\"2\"/><circle cx=\"9\" cy=\"16\" r=\"2\"/><circle cx=\"12\" cy=\"10\" r=\"2\"/></g><g transform=\"translate(17 17)\" fill=\"#ECECEC\"><circle cx=\"1\" cy=\"19\" r=\"1\"/><circle cx=\"4\" cy=\"10\" r=\"1\"/><circle cx=\"20\" cy=\"9\" r=\"1\"/><circle cx=\"11\" cy=\"1\" r=\"1\"/><circle cx=\"8\" cy=\"15\" r=\"1\"/><circle cx=\"11\" cy=\"9\" r=\"1\"/></g></g></svg>"

/***/ },
/* 520 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 53 53\" xmlns=\"http://www.w3.org/2000/svg\"><g fill=\"none\" fill-rule=\"evenodd\"><path fill=\"#999999\" d=\"M0 8H7V17H0zM8 0H15V10H8zM16 0H23V14H16zM24 0H31V7H24z\" transform=\"translate(11 10)\"/><path fill=\"#999999\" d=\"M0 0H7V9H0zM0 16H7V33H0zM8 9H15V21H8z\" transform=\"translate(11 10)\"/><path fill=\"#999999\" d=\"M8 20H15V33H8zM16 13H23V23H16z\" transform=\"translate(11 10)\"/><path fill=\"#999999\" d=\"M16 22H23V33H16zM24 6H31V17H24z\" transform=\"translate(11 10)\"/><path fill=\"#999999\" d=\"M24 16H31V33H24z\" transform=\"translate(11 10)\"/><path fill=\"#D3CFCF\" d=\"M25 7H30V16H25zM17 14H22V22H17zM9 10H14V20H9zM1 9H6V16H1z\" transform=\"translate(11 10)\"/><path fill=\"#ECECEC\" d=\"M25 17H30V32H25zM17 23H22V32H17zM9 21H14V32H9zM1 17H6V32H1z\" transform=\"translate(11 10)\"/><path fill=\"#FFFFFF\" d=\"M25 1H30V6H25zM17 1H22V13H17zM9 1H14V9H9zM1 1H6V8H1z\" transform=\"translate(11 10)\"/></g></svg>"

/***/ },
/* 521 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 53 53\" xmlns=\"http://www.w3.org/2000/svg\"><g fill=\"none\" fill-rule=\"evenodd\"><path fill=\"#EEEEEE\" d=\"M0 1H9V28H0zM10 1H41V7H10z\" transform=\"translate(6 12)\"/><path d=\"M0,0 L41,0 L41,29 L0,29 L0,0 Z M10,1 L40,1 L40,7 L10,7 L10,1 Z M10,8 L40,8 L40,14 L10,14 L10,8 Z M10,15 L40,15 L40,21 L10,21 L10,15 Z M10,22 L40,22 L40,28 L10,28 L10,22 Z M1,1 L9,1 L9,7 L1,7 L1,1 Z M1,8 L9,8 L9,14 L1,14 L1,8 Z M1,15 L9,15 L9,21 L1,21 L1,15 Z M1,22 L9,22 L9,28 L1,28 L1,22 Z\" fill=\"#999999\" transform=\"translate(6 12)\"/></g></svg>"

/***/ },
/* 522 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 53 53\" xmlns=\"http://www.w3.org/2000/svg\"><g fill=\"none\" fill-rule=\"evenodd\"><path d=\"M0,0 L41,0 L41,29 L0,29 L0,0 Z M1,1 L40,1 L40,28 L1,28 L1,1 Z\" fill=\"#AAAAAA\" transform=\"translate(6 12)\"/><path d=\"M14.3205566,20 L12.8288574,20 L12.8288574,14.0078125 C12.8288574,13.2926397 12.8457843,12.725588 12.8796387,12.3066406 C12.7823075,12.4082036 12.6627611,12.5203444 12.5209961,12.6430664 C12.3792311,12.7657884 11.9042195,13.1551074 11.0959473,13.8110352 L10.3469238,12.8652344 L13.076416,10.7197266 L14.3205566,10.7197266 L14.3205566,20 Z M23.6516113,20 L17.361084,20 L17.361084,18.8701172 L19.7541504,16.4643555 C20.4608597,15.740719 20.9295236,15.227622 21.1601562,14.9250488 C21.3907889,14.6224757 21.5590001,14.337892 21.6647949,14.0712891 C21.7705897,13.8046862 21.8234863,13.5190445 21.8234863,13.2143555 C21.8234863,12.7954081 21.6975924,12.4653332 21.4458008,12.2241211 C21.1940092,11.982909 20.8459495,11.8623047 20.4016113,11.8623047 C20.0461408,11.8623047 19.7023129,11.9278965 19.3701172,12.059082 C19.0379215,12.1902676 18.6538922,12.4272444 18.2180176,12.7700195 L17.4118652,11.7861328 C17.9281439,11.3502582 18.4296037,11.0413421 18.9162598,10.859375 C19.4029158,10.6774079 19.9213026,10.5864258 20.4714355,10.5864258 C21.3347211,10.5864258 22.0266087,10.8117653 22.5471191,11.2624512 C23.0676296,11.713137 23.3278809,12.3193321 23.3278809,13.0810547 C23.3278809,13.5000021 23.2527677,13.8977846 23.1025391,14.2744141 C22.9523104,14.6510435 22.7216812,15.0393046 22.4106445,15.439209 C22.0996078,15.8391133 21.582279,16.3797166 20.8586426,17.0610352 L19.2463379,18.6225586 L19.2463379,18.6860352 L23.6516113,18.6860352 L23.6516113,20 Z M30.7229004,12.8525391 C30.7229004,13.4407581 30.5515154,13.9305807 30.2087402,14.3220215 C29.8659651,14.7134622 29.383548,14.9768873 28.7614746,15.1123047 L28.7614746,15.1630859 C29.50627,15.2561854 30.0648582,15.4878725 30.4372559,15.8581543 C30.8096536,16.2284361 30.9958496,16.7203745 30.9958496,17.3339844 C30.9958496,18.2268925 30.6805858,18.9156063 30.0500488,19.4001465 C29.4195118,19.8846867 28.5223854,20.1269531 27.3586426,20.1269531 C26.3303171,20.1269531 25.4628128,19.9597998 24.7561035,19.6254883 L24.7561035,18.2988281 C25.1496602,18.4934906 25.5664854,18.6437169 26.0065918,18.7495117 C26.4466982,18.8553065 26.869871,18.9082031 27.276123,18.9082031 C27.9955277,18.9082031 28.5329572,18.7749037 28.8884277,18.5083008 C29.2438983,18.2416979 29.4216309,17.8291044 29.4216309,17.2705078 C29.4216309,16.7753881 29.2248555,16.4114595 28.8312988,16.1787109 C28.4377422,15.9459624 27.8199098,15.8295898 26.9777832,15.8295898 L26.1716309,15.8295898 L26.1716309,14.6171875 L26.9904785,14.6171875 C28.4716057,14.6171875 29.2121582,14.1051483 29.2121582,13.0810547 C29.2121582,12.6832662 29.0830905,12.3764659 28.8249512,12.1606445 C28.5668119,11.9448231 28.1859563,11.8369141 27.682373,11.8369141 C27.3311343,11.8369141 26.992596,11.8866369 26.666748,11.986084 C26.3409001,12.0855311 25.9558128,12.2791327 25.5114746,12.5668945 L24.7814941,11.5258789 C25.6320843,10.8995737 26.6201929,10.5864258 27.7458496,10.5864258 C28.6810756,10.5864258 29.4110488,10.7874329 29.935791,11.1894531 C30.4605332,11.5914734 30.7229004,12.1458298 30.7229004,12.8525391 L30.7229004,12.8525391 Z\" fill=\"#777777\" transform=\"translate(6 12)\"/></g></svg>"

/***/ },
/* 523 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 53 53\" xmlns=\"http://www.w3.org/2000/svg\"><g fill=\"none\" fill-rule=\"evenodd\"><path fill=\"#999999\" d=\"M0 0H33V33H0z\" transform=\"translate(10 10)\"/><path fill=\"#ECECEC\" d=\"M1 1H17V20H1zM18 1H32V15H18zM18 16H26V27H18zM27 16H32V27H27zM18 28H25V32H18zM1 21H17V32H1zM26 28H32V32H26z\" transform=\"translate(10 10)\"/></g></svg>"

/***/ },
/* 524 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(525);
	var d3 = __webpack_require__(222);
	var React = __webpack_require__(5);
	var chronoshift_1 = __webpack_require__(191);
	var dom_1 = __webpack_require__(300);
	var TICK_HEIGHT = 5;
	var TEXT_OFFSET = 12;
	var floatFormat = d3.format(".1f");
	var LineChartAxis = (function (_super) {
	    __extends(LineChartAxis, _super);
	    function LineChartAxis() {
	        _super.call(this);
	    }
	    LineChartAxis.prototype.render = function () {
	        var _a = this.props, stage = _a.stage, ticks = _a.ticks, scale = _a.scale, timezone = _a.timezone;
	        var format = scale.tickFormat();
	        var timezoneString = timezone.toString();
	        function formatLabel(v) {
	            if (v instanceof Date) {
	                return formatWithTimezone(v);
	            }
	            return String(floatFormat(v));
	        }
	        function formatWithTimezone(d) {
	            return format(chronoshift_1.WallTime.UTCToWallTime(d, timezoneString));
	        }
	        var lines = ticks.map(function (tick) {
	            var x = dom_1.roundToHalfPx(scale(tick));
	            return React.createElement("line", {key: String(tick), x1: x, y1: 0, x2: x, y2: TICK_HEIGHT});
	        });
	        var labelY = TICK_HEIGHT + TEXT_OFFSET;
	        var labels = ticks.map(function (tick) {
	            var x = scale(tick);
	            return React.createElement("text", {key: String(tick), x: x, y: labelY}, formatLabel(tick));
	        });
	        return React.createElement("g", {className: "line-chart-axis", transform: stage.getTransform()}, 
	            lines, 
	            labels);
	    };
	    return LineChartAxis;
	}(React.Component));
	exports.LineChartAxis = LineChartAxis;


/***/ },
/* 525 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(526);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./line-chart-axis.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./line-chart-axis.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 526 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".line-chart-axis{position:absolute;top:0;bottom:0;left:0;right:0}.line-chart-axis line{pointer-events:none}.line-chart-axis line{stroke:#ccc}.line-chart-axis text{text-anchor:middle;font-size:12px;fill:#666}\n", ""]);

	// exports


/***/ },
/* 527 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(528);
	var React = __webpack_require__(5);
	var index_1 = __webpack_require__(202);
	var ManualFallback = (function (_super) {
	    __extends(ManualFallback, _super);
	    function ManualFallback() {
	        _super.call(this);
	    }
	    ManualFallback.prototype.onResolutionClick = function (resolution) {
	        var clicker = this.props.clicker;
	        clicker.changeSplits(resolution.adjustment.splits, index_1.VisStrategy.KeepAlways);
	    };
	    ManualFallback.prototype.render = function () {
	        var _this = this;
	        var essence = this.props.essence;
	        var visResolve = essence.visResolve;
	        if (!visResolve.isManual())
	            return null;
	        var resolutionItems = visResolve.resolutions.map(function (resolution, i) {
	            return React.createElement("li", {key: i, onClick: _this.onResolutionClick.bind(_this, resolution)}, resolution.description);
	        });
	        return React.createElement("div", {className: "manual-fallback"}, 
	            React.createElement("div", {className: "message"}, visResolve.message), 
	            React.createElement("ul", null, resolutionItems));
	    };
	    return ManualFallback;
	}(React.Component));
	exports.ManualFallback = ManualFallback;


/***/ },
/* 528 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(529);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./manual-fallback.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./manual-fallback.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 529 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".manual-fallback{text-align:center;padding:100px 30px}.manual-fallback .message{font-size:20px;color:#666}.manual-fallback ul{margin-top:24px}.manual-fallback li{font-size:14px;cursor:pointer;color:#1ea3e6;margin-bottom:10px}.manual-fallback li:hover{text-decoration:underline}\n", ""]);

	// exports


/***/ },
/* 530 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(531);
	var React = __webpack_require__(5);
	var dom_1 = __webpack_require__(300);
	var body_portal_1 = __webpack_require__(301);
	var svg_icon_1 = __webpack_require__(187);
	var golden_center_1 = __webpack_require__(433);
	var global_event_listener_1 = __webpack_require__(401);
	var Modal = (function (_super) {
	    __extends(Modal, _super);
	    function Modal() {
	        _super.call(this);
	        this.focusAlreadyGiven = false;
	        this.state = {
	            id: null
	        };
	    }
	    Modal.prototype.componentWillMount = function () {
	        var id = this.props.id;
	        this.setState({
	            id: id || dom_1.uniqueId('modal-')
	        });
	    };
	    Modal.prototype.componentDidMount = function () {
	        this.maybeFocus();
	    };
	    Modal.prototype.componentDidUpdate = function () {
	        this.maybeFocus();
	    };
	    Modal.prototype.getChildByID = function (children, id) {
	        if (!children)
	            return null;
	        var n = children.length;
	        for (var i = 0; i < n; i++) {
	            var child = children[i];
	            if (child.getAttribute && child.getAttribute('id') === id)
	                return child;
	            if (child.childNodes) {
	                var foundChild = this.getChildByID(child.childNodes, id);
	                if (foundChild)
	                    return foundChild;
	            }
	        }
	        return null;
	    };
	    Modal.prototype.maybeFocus = function () {
	        if (this.props.startUpFocusOn) {
	            var myElement = document.getElementById(this.state.id);
	            var target = this.getChildByID(myElement.childNodes, this.props.startUpFocusOn);
	            if (!this.focusAlreadyGiven && !!target) {
	                target.focus();
	                this.focusAlreadyGiven = true;
	            }
	        }
	    };
	    Modal.prototype.onEscape = function () {
	        var _a = this.props, onClose = _a.onClose, mandatory = _a.mandatory;
	        if (!mandatory)
	            onClose();
	    };
	    Modal.prototype.onEnter = function () {
	        if (this.props.onEnter)
	            this.props.onEnter();
	    };
	    Modal.prototype.onMouseDown = function (e) {
	        var _a = this.props, onClose = _a.onClose, mandatory = _a.mandatory;
	        if (mandatory)
	            return;
	        var id = this.state.id;
	        var myElement = document.getElementById(id);
	        if (!myElement)
	            return;
	        var target = e.target;
	        if (dom_1.isInside(target, myElement))
	            return;
	        onClose();
	    };
	    Modal.prototype.render = function () {
	        var _a = this.props, className = _a.className, title = _a.title, children = _a.children, onClose = _a.onClose;
	        var id = this.state.id;
	        var titleElement = null;
	        if (typeof title === 'string') {
	            titleElement = React.createElement("div", {className: "modal-title"}, 
	                React.createElement("div", {className: "text"}, title), 
	                React.createElement("div", {className: "close", onClick: onClose}, 
	                    React.createElement(svg_icon_1.SvgIcon, {svg: __webpack_require__(383)})
	                ));
	        }
	        return React.createElement(body_portal_1.BodyPortal, {fullSize: true}, 
	            React.createElement("div", {className: dom_1.classNames('modal', className)}, 
	                React.createElement(global_event_listener_1.GlobalEventListener, {enter: this.onEnter.bind(this), escape: this.onEscape.bind(this), mouseDown: this.onMouseDown.bind(this)}), 
	                React.createElement("div", {className: "backdrop"}), 
	                React.createElement(golden_center_1.GoldenCenter, null, 
	                    React.createElement("div", {className: "modal-window", id: id}, 
	                        titleElement, 
	                        children)
	                ))
	        );
	    };
	    return Modal;
	}(React.Component));
	exports.Modal = Modal;


/***/ },
/* 531 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(532);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./modal.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./modal.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 532 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".modal .modal-window{background:#fff;border-radius:2px;box-shadow:0 5px 9px 0 rgba(0,0,0,0.3),0 0 5px 0 rgba(0,0,0,0.2)}.modal{position:absolute;top:0;bottom:0;left:0;right:0}.modal .backdrop{position:absolute;top:0;bottom:0;left:0;right:0;background:#000;opacity:0.2}.modal .golden-center{position:absolute;top:0;bottom:0;left:0;right:0;overflow-y:auto}.modal .modal-window{width:420px;padding:18px;background:#fff}.modal .modal-window .modal-title{line-height:30px;font-size:17px;margin-bottom:16px}.modal .modal-window .modal-title .close{top:0;right:0;position:absolute;padding:5px;cursor:pointer}.modal .modal-window .modal-title:hover svg path{fill:#888}.modal .modal-window .modal-title svg{width:19px}.modal .modal-window .modal-title svg path{fill:#bbb}.modal .modal-window p{line-height:17px;margin-bottom:25px}.modal.raw-data-modal .modal-window{width:70%;height:85%;min-height:200px}.modal .p-group{margin-bottom:25px}.modal .p-group p{margin-bottom:18px}.modal .p-group p:last-child{margin-bottom:0}.modal .button-bar{margin-top:10px}.modal .button-bar button{margin-right:8px}\n", ""]);

	// exports


/***/ },
/* 533 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(534);
	var React = __webpack_require__(5);
	var dom_1 = __webpack_require__(300);
	var svg_icon_1 = __webpack_require__(187);
	var NavList = (function (_super) {
	    __extends(NavList, _super);
	    function NavList() {
	        _super.apply(this, arguments);
	    }
	    NavList.prototype.renderIcon = function (iconSvg) {
	        if (!iconSvg)
	            return null;
	        return React.createElement("span", {className: "icon"}, 
	            React.createElement(svg_icon_1.SvgIcon, {svg: iconSvg})
	        );
	    };
	    NavList.prototype.renderNavList = function () {
	        var _this = this;
	        var _a = this.props, navLinks = _a.navLinks, iconSvg = _a.iconSvg, selected = _a.selected;
	        return navLinks.map(function (navLink) {
	            return React.createElement(navLink.href ? 'a' : 'div', {
	                className: dom_1.classNames('item', { selected: selected && selected === navLink.name }),
	                key: navLink.name,
	                title: navLink.tooltip,
	                href: navLink.href,
	                target: navLink.newTab ? '_blank' : null,
	                onClick: navLink.onClick
	            }, _this.renderIcon(iconSvg), navLink.title);
	        });
	    };
	    NavList.prototype.render = function () {
	        var title = this.props.title;
	        var className = "nav-list";
	        var titleSection = null;
	        if (title) {
	            titleSection = React.createElement("div", {className: "group-title"}, title);
	        }
	        else {
	            className += " no-title";
	        }
	        return React.createElement("div", {className: className}, 
	            titleSection, 
	            React.createElement("div", {className: "items"}, this.renderNavList()));
	    };
	    ;
	    return NavList;
	}(React.Component));
	exports.NavList = NavList;


/***/ },
/* 534 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(535);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./nav-list.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./nav-list.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 535 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".nav-list{border-top:1px solid #ddd}.nav-list:first-child{border-top:0}.nav-list svg{height:19px;width:19px}.nav-list .group-title{padding-left:18px;text-transform:uppercase;font-size:12px;padding-top:15px;padding-bottom:12px;color:#999}.nav-list .group-title .icons{position:absolute;padding-right:18px;top:1px;right:0;cursor:pointer}.nav-list .group-title .icons .icon{display:inline-block;padding:10px 1px}.nav-list .group-title .icons .icon:not(:first-child){margin-left:4px}.nav-list .group-title .icons .icon:hover svg path{fill:#888}.nav-list .items .item{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:34px;padding-left:18px;padding-right:18px;cursor:pointer}.nav-list .items .item .icon{display:inline-block;top:7px;left:0;margin-right:9px}.nav-list .items .item:hover{background:rgba(30,163,230,0.12)}.nav-list .items .selected{background:rgba(30,163,230,0.14)}.nav-list .items .selected .icon svg path{fill:#1ea3e6}\n", ""]);

	// exports


/***/ },
/* 536 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(537);
	var React = __webpack_require__(5);
	var svg_icon_1 = __webpack_require__(187);
	var NavLogo = (function (_super) {
	    __extends(NavLogo, _super);
	    function NavLogo() {
	        _super.call(this);
	    }
	    NavLogo.prototype.render = function () {
	        var _a = this.props, onClick = _a.onClick, customLogoSvg = _a.customLogoSvg;
	        var svg = customLogoSvg || __webpack_require__(509);
	        return React.createElement("div", {className: "nav-logo", onClick: onClick}, 
	            React.createElement("div", {className: "logo"}, 
	                React.createElement(svg_icon_1.SvgIcon, {svg: svg})
	            )
	        );
	    };
	    return NavLogo;
	}(React.Component));
	exports.NavLogo = NavLogo;


/***/ },
/* 537 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(538);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./nav-logo.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./nav-logo.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 538 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".nav-logo{padding-right:18px;height:60px}.nav-logo .logo{position:absolute;left:18px;top:50%;-webkit-transform:translate(0, -50%);-ms-transform:translate(0, -50%);transform:translate(0, -50%);height:31px}.nav-logo .logo svg{height:100%}\n", ""]);

	// exports


/***/ },
/* 539 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(540);
	var React = __webpack_require__(5);
	var index_1 = __webpack_require__(293);
	var notification_card_1 = __webpack_require__(542);
	var Notifier = (function () {
	    function Notifier() {
	    }
	    Notifier.create = function (notification) {
	        notification.id = Notifier.counter++;
	        Notifier.notifications.push(notification);
	        Notifier.callListeners();
	        return notification.id;
	    };
	    Notifier.callListeners = function () {
	        Notifier.listeners.forEach(function (cb) { return cb(Notifier.notifications, Notifier.question); });
	    };
	    Notifier.info = function (title, message) {
	        Notifier.create({ title: title, message: message, priority: 'info' });
	    };
	    Notifier.failure = function (title, message) {
	        Notifier.create({ title: title, message: message, priority: 'failure' });
	    };
	    Notifier.success = function (title, action) {
	        Notifier.create({ title: title, priority: 'success', action: action });
	    };
	    Notifier.subscribe = function (callback) {
	        Notifier.listeners.push(callback);
	    };
	    Notifier.stick = function (text) {
	        return Notifier.create({ title: text, priority: 'info', muted: true });
	    };
	    Notifier.removeSticker = function (id) {
	        var notification;
	        var index = -1;
	        Notifier.notifications.forEach(function (n, i) {
	            if (n.id === id) {
	                notification = n;
	                index = i;
	            }
	        });
	        if (!notification) {
	            console.warn('Trying to remove a non existing sticker');
	            return;
	        }
	        notification.discarded = true;
	        Notifier.notifications[index] = notification;
	        Notifier.callListeners();
	    };
	    Notifier.ask = function (question) {
	        if (Notifier.question)
	            throw new Error('There is already a pending question');
	        Notifier.question = question;
	        Notifier.callListeners();
	    };
	    Notifier.removeQuestion = function () {
	        if (!Notifier.question)
	            throw new Error('No question to remove');
	        Notifier.question = undefined;
	        Notifier.callListeners();
	    };
	    Notifier.removeNotification = function (notification) {
	        var index = Notifier.notifications.indexOf(notification);
	        if (index === -1) {
	            throw new Error('Trying to remove an unknown notification');
	        }
	        Notifier.notifications.splice(index, 1);
	        Notifier.listeners.forEach(function (cb) { return cb(Notifier.notifications); });
	    };
	    Notifier.unsubscribe = function (callback) {
	        var index = Notifier.listeners.indexOf(callback);
	        if (index === -1) {
	            throw new Error('Trying to unsubscribe something that never subscribed');
	        }
	        Notifier.listeners.splice(index, 1);
	    };
	    Notifier.counter = 0;
	    Notifier.notifications = [];
	    Notifier.question = null;
	    Notifier.listeners = [];
	    return Notifier;
	}());
	exports.Notifier = Notifier;
	var Notifications = (function (_super) {
	    __extends(Notifications, _super);
	    function Notifications() {
	        _super.call(this);
	        this.state = { notifications: [] };
	        this.onChange = this.onChange.bind(this);
	    }
	    Notifications.prototype.componentDidMount = function () {
	        Notifier.subscribe(this.onChange);
	    };
	    Notifications.prototype.componentWillUnmount = function () {
	        Notifier.unsubscribe(this.onChange);
	    };
	    Notifications.prototype.onChange = function (notifications) {
	        this.setState({ notifications: notifications });
	    };
	    Notifications.prototype.renderCards = function () {
	        var cumuledHeight = 13;
	        return this.state.notifications.map(function (n, i) {
	            var title = n.title, message = n.message, action = n.action;
	            var top = cumuledHeight;
	            cumuledHeight += [title, message, action].filter(Boolean).length * 30 + 5;
	            return React.createElement(notification_card_1.NotificationCard, {model: n, key: n.id, top: top});
	        });
	    };
	    Notifications.prototype.render = function () {
	        return React.createElement(index_1.BodyPortal, {left: '50%', top: '10px'}, 
	            React.createElement("div", {className: "notifications"}, this.renderCards())
	        );
	    };
	    return Notifications;
	}(React.Component));
	exports.Notifications = Notifications;
	var Questions = (function (_super) {
	    __extends(Questions, _super);
	    function Questions() {
	        _super.call(this);
	        this.state = {};
	        this.onChange = this.onChange.bind(this);
	    }
	    Questions.prototype.componentDidMount = function () {
	        Notifier.subscribe(this.onChange);
	    };
	    Questions.prototype.componentWillUnmount = function () {
	        Notifier.unsubscribe(this.onChange);
	    };
	    Questions.prototype.onChange = function (notifications, question) {
	        this.setState({ question: question });
	    };
	    Questions.prototype.render = function () {
	        var question = this.state.question;
	        if (!question)
	            return null;
	        return React.createElement(index_1.Modal, {className: "remove-modal", title: question.title, onClose: question.onClose}, 
	            Array.isArray(question.message)
	                ? question.message.map(function (line, i) { return React.createElement("p", {key: i}, line); })
	                : React.createElement("p", null, question.message), 
	            React.createElement("div", {className: "button-bar"}, question.choices.map(function (_a, i) {
	                var label = _a.label, callback = _a.callback, type = _a.type, className = _a.className;
	                return React.createElement(index_1.Button, {key: i, className: className, title: label, type: type, onClick: callback});
	            })));
	    };
	    return Questions;
	}(React.Component));
	exports.Questions = Questions;


/***/ },
/* 540 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(541);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./notifications.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./notifications.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 541 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, "", ""]);

	// exports


/***/ },
/* 542 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(543);
	var React = __webpack_require__(5);
	var dom_1 = __webpack_require__(300);
	var notifications_1 = __webpack_require__(539);
	var DEFAULT_DURATION = 6;
	var NotificationCard = (function (_super) {
	    __extends(NotificationCard, _super);
	    function NotificationCard() {
	        _super.call(this);
	        this.state = {
	            appearing: false,
	            disappearing: false,
	            hovered: false,
	            timerExpired: false
	        };
	    }
	    NotificationCard.prototype.componentDidMount = function () {
	        var _this = this;
	        this.setState({ appearing: true }, function () {
	            _this.timeoutID = window.setTimeout(_this.appear.bind(_this), 10);
	        });
	    };
	    NotificationCard.prototype.componentWillReceiveProps = function (nextProps) {
	        if (nextProps.model && nextProps.model.discarded) {
	            this.disappear();
	        }
	    };
	    NotificationCard.prototype.appear = function () {
	        var _this = this;
	        var _a = this.props.model, title = _a.title, message = _a.message, duration = _a.duration, muted = _a.muted;
	        var d = dom_1.clamp(duration, -1, 10);
	        if (d === -1) {
	            this.setState({ appearing: false });
	            return;
	        }
	        if (muted) {
	            this.setState({ appearing: false });
	        }
	        else {
	            this.setState({ appearing: false }, function () {
	                _this.timeoutID = window.setTimeout(_this.onDisappearTimerEnd.bind(_this), (d ? d : DEFAULT_DURATION) * 1000);
	            });
	        }
	    };
	    NotificationCard.prototype.onDisappearTimerEnd = function () {
	        if (this.state.hovered) {
	            this.setState({
	                timerExpired: true
	            });
	            return;
	        }
	        this.disappear();
	    };
	    NotificationCard.prototype.disappear = function () {
	        var _this = this;
	        if (this.timeoutID !== undefined)
	            window.clearTimeout(this.timeoutID);
	        this.setState({ disappearing: true }, function () {
	            _this.timeoutID = window.setTimeout(_this.removeMe.bind(_this, _this.props.model), 200);
	        });
	    };
	    NotificationCard.prototype.removeMe = function (notification) {
	        if (this.timeoutID !== undefined)
	            window.clearTimeout(this.timeoutID);
	        notifications_1.Notifier.removeNotification(notification);
	    };
	    NotificationCard.prototype.componentWillUnmount = function () {
	        if (this.timeoutID !== undefined)
	            window.clearTimeout(this.timeoutID);
	    };
	    NotificationCard.prototype.onMouseOver = function () {
	        this.setState({
	            hovered: true
	        });
	    };
	    NotificationCard.prototype.onMouseLeave = function () {
	        this.setState({
	            hovered: false
	        });
	        if (this.state.timerExpired) {
	            this.disappear();
	        }
	    };
	    NotificationCard.prototype.render = function () {
	        var _this = this;
	        var _a = this.state, appearing = _a.appearing, disappearing = _a.disappearing;
	        var _b = this.props, model = _b.model, top = _b.top;
	        if (!model)
	            return null;
	        var title = model.title, message = model.message, priority = model.priority, action = model.action, muted = model.muted;
	        if (appearing || disappearing)
	            top = -100;
	        var rowsClass = "rows-" + [title, message, action].filter(Boolean).length;
	        var onClick = function () {
	            action && action.callback();
	            _this.disappear();
	        };
	        return React.createElement("div", {style: { top: top }, onClick: onClick, onMouseOver: this.onMouseOver.bind(this), onMouseLeave: this.onMouseLeave.bind(this), className: dom_1.classNames("notification-card " + priority + " " + rowsClass, { appearing: appearing, disappearing: disappearing, muted: muted })}, 
	            React.createElement("div", {className: "title"}, title), 
	            message ? React.createElement("div", {className: "message"}, message) : null, 
	            action ? React.createElement("div", {className: "action"}, 
	                React.createElement("span", null, action.label)
	            ) : null);
	    };
	    return NotificationCard;
	}(React.Component));
	exports.NotificationCard = NotificationCard;


/***/ },
/* 543 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(544);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./notification-card.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./notification-card.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 544 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".notification-card{-webkit-transition:top 0.2s,opacity 0.2s;transition:top 0.2s,opacity 0.2s;position:absolute;min-width:250px;padding:10px 20px;line-height:16px;-webkit-transform:translate(-50%, 0);-ms-transform:translate(-50%, 0);transform:translate(-50%, 0);opacity:0;background-color:#5dc3ef;color:#fff;box-shadow:0 3px 4px 0 rgba(0,0,0,0.25);border-radius:2px;text-align:center;cursor:pointer}.notification-card:not(.appearing):not(.disappearing){opacity:1}.notification-card.rows-1{height:36px}.notification-card.rows-2{height:64px}.notification-card.rows-3{height:108px}.notification-card.success{background-color:#004584}.notification-card.failure{background-color:#e24b4b}.notification-card.info{background-color:#004584}.notification-card .title{margin-bottom:8px}.notification-card .description{font-style:italic}.notification-card .action{opacity:0.7}.notification-card .action span{border-bottom:1px dashed}.notification-card:hover{box-shadow:0 0 1px 1px rgba(35,39,41,0.2)}.notification-card:hover .action{opacity:1}.notification-card:hover .action span{border-bottom:1px solid}.notification-card.muted{pointer-events:none}\n", ""]);

	// exports


/***/ },
/* 545 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(546);
	var React = __webpack_require__(5);
	var index_1 = __webpack_require__(202);
	var dropdown_1 = __webpack_require__(307);
	var PinboardMeasureTile = (function (_super) {
	    __extends(PinboardMeasureTile, _super);
	    function PinboardMeasureTile() {
	        _super.call(this);
	    }
	    PinboardMeasureTile.prototype.render = function () {
	        var _a = this.props, essence = _a.essence, title = _a.title, dimension = _a.dimension, sortOn = _a.sortOn, onSelect = _a.onSelect;
	        var sortOns = (dimension ? [index_1.SortOn.fromDimension(dimension)] : []).concat(essence.dataCube.measures.toArray().map(index_1.SortOn.fromMeasure));
	        var SortOnDropdown = dropdown_1.Dropdown.specialize();
	        return React.createElement("div", {className: "pinboard-measure-tile"}, 
	            React.createElement("div", {className: "title"}, title), 
	            React.createElement(SortOnDropdown, {items: sortOns, selectedItem: sortOn, equal: index_1.SortOn.equal, renderItem: index_1.SortOn.getTitle, keyItem: index_1.SortOn.getName, onSelect: onSelect}));
	    };
	    return PinboardMeasureTile;
	}(React.Component));
	exports.PinboardMeasureTile = PinboardMeasureTile;


/***/ },
/* 546 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(547);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./pinboard-measure-tile.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./pinboard-measure-tile.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 547 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".pinboard-measure-tile .dropdown .selected-item:hover{background:#fff;border:1px solid #d1d1d1;border-radius:2px;cursor:pointer;box-shadow:0 1px 1px 0 rgba(0,0,0,0.1)}.pinboard-measure-tile .dropdown .selected-item:hover{border-color:#bababa}.pinboard-measure-tile{background:#fff;box-shadow:0 1px 1px 0 rgba(0,0,0,0.1)}.pinboard-measure-tile{height:36px;margin-bottom:1px}.pinboard-measure-tile .title{margin-left:14px;margin-top:12px;font-size:12px;color:#999;text-transform:uppercase}.pinboard-measure-tile .dropdown{display:inline-block;position:absolute;top:5px;right:5px;font-size:12px;border-radius:2px}.pinboard-measure-tile .dropdown .selected-item{white-space:nowrap;overflow-x:hidden;text-overflow:ellipsis;line-height:19px;padding:2px 22px 2px 7px;border:1px solid transparent;color:#999;max-width:104px;height:auto;box-shadow:none}.pinboard-measure-tile .dropdown .selected-item .caret-icon{position:absolute;right:7px;bottom:6px}.pinboard-measure-tile .dropdown .selected-item .caret-icon path{fill:#bababa}.pinboard-measure-tile .dropdown .selected-item:hover{color:#000}.pinboard-measure-tile .dropdown .selected-item:hover .caret-icon path{fill:#999}.pinboard-measure-tile .dropdown .dropdown-menu{margin-top:1px;right:0;width:190px;max-height:600px;overflow-y:auto}\n", ""]);

	// exports


/***/ },
/* 548 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(549);
	var React = __webpack_require__(5);
	var plywood_1 = __webpack_require__(199);
	var constants_1 = __webpack_require__(292);
	var svg_icon_1 = __webpack_require__(187);
	var index_1 = __webpack_require__(202);
	var drag_manager_1 = __webpack_require__(349);
	var pinboard_measure_tile_1 = __webpack_require__(545);
	var dimension_tile_1 = __webpack_require__(376);
	var PinboardPanel = (function (_super) {
	    __extends(PinboardPanel, _super);
	    function PinboardPanel() {
	        _super.call(this);
	        this.state = {
	            dragOver: false
	        };
	    }
	    PinboardPanel.prototype.canDrop = function (e) {
	        var dimension = drag_manager_1.DragManager.getDragDimension();
	        if (dimension) {
	            var pinnedDimensions = this.props.essence.pinnedDimensions;
	            return !pinnedDimensions.has(dimension.name);
	        }
	        return false;
	    };
	    PinboardPanel.prototype.dragEnter = function (e) {
	        if (!this.canDrop(e))
	            return;
	        e.preventDefault();
	        this.setState({ dragOver: true });
	    };
	    PinboardPanel.prototype.dragOver = function (e) {
	        if (!this.canDrop(e))
	            return;
	        e.dataTransfer.dropEffect = 'move';
	        e.preventDefault();
	    };
	    PinboardPanel.prototype.dragLeave = function (e) {
	        if (!this.canDrop(e))
	            return;
	        this.setState({ dragOver: false });
	    };
	    PinboardPanel.prototype.drop = function (e) {
	        if (!this.canDrop(e))
	            return;
	        e.preventDefault();
	        var dimension = drag_manager_1.DragManager.getDragDimension();
	        if (dimension) {
	            this.props.clicker.pin(dimension);
	        }
	        this.setState({ dragOver: false });
	    };
	    PinboardPanel.prototype.getColorsSortOn = function () {
	        var essence = this.props.essence;
	        var dataCube = essence.dataCube, splits = essence.splits, colors = essence.colors;
	        if (colors) {
	            var dimension = dataCube.getDimension(colors.dimension);
	            if (dimension) {
	                var split = splits.findSplitForDimension(dimension);
	                if (split) {
	                    return index_1.SortOn.fromSortAction(split.sortAction, dataCube, dimension);
	                }
	            }
	        }
	        return null;
	    };
	    PinboardPanel.prototype.onLegendSortOnSelect = function (sortOn) {
	        var _a = this.props, clicker = _a.clicker, essence = _a.essence;
	        var dataCube = essence.dataCube, splits = essence.splits, colors = essence.colors;
	        if (colors) {
	            var dimension = dataCube.getDimension(colors.dimension);
	            if (dimension) {
	                var split = splits.findSplitForDimension(dimension);
	                if (split) {
	                    var sortAction = split.sortAction;
	                    var direction = sortAction ? sortAction.direction : plywood_1.SortAction.DESCENDING;
	                    var newSplit = split.changeSortAction(new plywood_1.SortAction({
	                        expression: sortOn.getExpression(),
	                        direction: direction
	                    }));
	                    var newColors = index_1.Colors.fromLimit(colors.dimension, 5);
	                    clicker.changeSplits(splits.replace(split, newSplit), index_1.VisStrategy.UnfairGame, newColors);
	                }
	            }
	        }
	    };
	    PinboardPanel.prototype.onPinboardSortOnSelect = function (sortOn) {
	        if (!sortOn.measure)
	            return;
	        var clicker = this.props.clicker;
	        clicker.changePinnedSortMeasure(sortOn.measure);
	    };
	    PinboardPanel.prototype.onRemoveLegend = function () {
	        var _a = this.props, clicker = _a.clicker, essence = _a.essence;
	        var dataCube = essence.dataCube, splits = essence.splits, colors = essence.colors;
	        if (colors) {
	            var dimension = dataCube.getDimension(colors.dimension);
	            if (dimension) {
	                var split = splits.findSplitForDimension(dimension);
	                if (split) {
	                    clicker.changeSplits(splits.removeSplit(split), index_1.VisStrategy.UnfairGame, null);
	                }
	            }
	        }
	    };
	    PinboardPanel.prototype.render = function () {
	        var _a = this.props, clicker = _a.clicker, essence = _a.essence, timekeeper = _a.timekeeper, getUrlPrefix = _a.getUrlPrefix, style = _a.style;
	        var dragOver = this.state.dragOver;
	        var dataCube = essence.dataCube, pinnedDimensions = essence.pinnedDimensions, colors = essence.colors;
	        var legendMeasureSelector = null;
	        var legendDimensionTile = null;
	        var colorDimension = colors ? colors.dimension : null;
	        if (colorDimension) {
	            var dimension = dataCube.getDimension(colorDimension);
	            if (dimension) {
	                var colorsSortOn = this.getColorsSortOn();
	                legendMeasureSelector = React.createElement(pinboard_measure_tile_1.PinboardMeasureTile, {essence: essence, title: "Legend", dimension: dimension, sortOn: colorsSortOn, onSelect: this.onLegendSortOnSelect.bind(this)});
	                legendDimensionTile = React.createElement(dimension_tile_1.DimensionTile, {clicker: clicker, essence: essence, timekeeper: timekeeper, dimension: dimension, sortOn: colorsSortOn, colors: colors, onClose: this.onRemoveLegend.bind(this), getUrlPrefix: getUrlPrefix});
	            }
	        }
	        var pinnedSortSortOn = index_1.SortOn.fromMeasure(essence.getPinnedSortMeasure());
	        var dimensionTiles = [];
	        pinnedDimensions.forEach(function (dimensionName) {
	            var dimension = dataCube.getDimension(dimensionName);
	            if (!dimension)
	                return null;
	            dimensionTiles.push(React.createElement(dimension_tile_1.DimensionTile, {key: dimension.name, clicker: clicker, essence: essence, timekeeper: timekeeper, dimension: dimension, sortOn: pinnedSortSortOn, onClose: clicker.unpin ? clicker.unpin.bind(clicker, dimension) : null, getUrlPrefix: getUrlPrefix}));
	        });
	        var placeholder = null;
	        if (!dragOver && !dimensionTiles.length) {
	            placeholder = React.createElement("div", {className: "placeholder"}, 
	                React.createElement(svg_icon_1.SvgIcon, {svg: __webpack_require__(343)}), 
	                React.createElement("div", {className: "placeholder-message"}, constants_1.STRINGS.pinboardPlaceholder));
	        }
	        return React.createElement("div", {className: "pinboard-panel", onDragEnter: this.dragEnter.bind(this), style: style}, 
	            legendMeasureSelector, 
	            legendDimensionTile, 
	            React.createElement(pinboard_measure_tile_1.PinboardMeasureTile, {essence: essence, title: constants_1.STRINGS.pinboard, sortOn: pinnedSortSortOn, onSelect: this.onPinboardSortOnSelect.bind(this)}), 
	            dimensionTiles, 
	            dragOver ? React.createElement("div", {className: "drop-indicator-tile"}) : null, 
	            placeholder, 
	            dragOver ? React.createElement("div", {className: "drag-mask", onDragOver: this.dragOver.bind(this), onDragLeave: this.dragLeave.bind(this), onDragExit: this.dragLeave.bind(this), onDrop: this.drop.bind(this)}) : null);
	    };
	    return PinboardPanel;
	}(React.Component));
	exports.PinboardPanel = PinboardPanel;


/***/ },
/* 549 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(550);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./pinboard-panel.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./pinboard-panel.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 550 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".pinboard-panel .placeholder{background:#fff;box-shadow:0 1px 1px 0 rgba(0,0,0,0.1)}.pinboard-panel{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-ms-flex-wrap:wrap;flex-wrap:wrap;padding:10px 10px 0 10px}@media only screen and (max-width: 1080px){.pinboard-panel{padding:0 0 0 1px;font-size:0.9em}}.pinboard-panel .dimension-tile,.pinboard-panel .drop-indicator-tile{-webkit-box-flex:1;-ms-flex-positive:1;flex-grow:1;margin-bottom:1px}.pinboard-panel .dimension-tile.has-colors{margin-bottom:5px}.pinboard-panel .drop-indicator-tile{pointer-events:none}.pinboard-panel .drop-indicator-tile::after{position:absolute;top:4px;bottom:4px;left:0;right:0;content:'';background:rgba(102,102,102,0.14);border-radius:2px}.pinboard-panel .placeholder{border-radius:0 0 2px 2px;max-height:280px;min-height:150px;-webkit-box-flex:1;-ms-flex:1;flex:1;pointer-events:none}.pinboard-panel .placeholder::after{position:absolute;top:10px;bottom:10px;left:10px;right:10px;content:'';border-radius:5px}.pinboard-panel .placeholder svg{position:absolute;width:40px;left:50%;top:50%;margin-left:-20px;margin-top:-63px}.pinboard-panel .placeholder svg path{fill:#d4d4d4}.pinboard-panel .placeholder .placeholder-message{position:absolute;top:50%;width:100%;height:16px;margin-top:-15px;padding-left:30px;padding-right:30px;font-style:italic;line-height:20px;color:#a6a6a6;text-align:center}.pinboard-panel .drag-mask{position:absolute;top:0;bottom:0;left:0;right:0}\n", ""]);

	// exports


/***/ },
/* 551 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(552);
	var React = __webpack_require__(5);
	var dom_1 = __webpack_require__(300);
	var svg_icon_1 = __webpack_require__(187);
	var dom_2 = __webpack_require__(300);
	var ResizeHandle = (function (_super) {
	    __extends(ResizeHandle, _super);
	    function ResizeHandle() {
	        _super.call(this);
	        this.offset = 0;
	        this.state = {};
	        this.onGlobalMouseUp = this.onGlobalMouseUp.bind(this);
	        this.onGlobalMouseMove = this.onGlobalMouseMove.bind(this);
	    }
	    ResizeHandle.prototype.componentDidMount = function () {
	        this.setState({
	            currentValue: this.constrainValue(this.props.initialValue)
	        });
	    };
	    ResizeHandle.prototype.onMouseDown = function (event) {
	        window.addEventListener('mouseup', this.onGlobalMouseUp);
	        window.addEventListener('mousemove', this.onGlobalMouseMove);
	        var newX = this.state.currentValue;
	        var eventX = this.getValueFromX(dom_2.getXFromEvent(event));
	        this.setState({
	            dragging: true,
	            startValue: newX,
	            currentValue: newX,
	            anchor: eventX - newX
	        });
	        event.preventDefault();
	    };
	    ResizeHandle.prototype.getValueFromX = function (x) {
	        if (this.props.side !== 'right') {
	            return this.constrainValue(x);
	        }
	        return this.constrainValue(window.innerWidth - x);
	    };
	    ResizeHandle.prototype.constrainValue = function (value) {
	        return dom_1.clamp(value, this.props.min, this.props.max);
	    };
	    ResizeHandle.prototype.onGlobalMouseMove = function (event) {
	        var anchor = this.state.anchor;
	        var newX = this.getValueFromX(dom_2.getXFromEvent(event)) - anchor;
	        this.setState({
	            currentValue: newX
	        });
	        if (!!this.props.onResize) {
	            this.props.onResize(newX);
	        }
	    };
	    ResizeHandle.prototype.onGlobalMouseUp = function (event) {
	        this.setState({
	            dragging: false
	        });
	        window.removeEventListener('mouseup', this.onGlobalMouseUp);
	        window.removeEventListener('mousemove', this.onGlobalMouseMove);
	        if (!!this.props.onResizeEnd) {
	            this.props.onResizeEnd(this.state.currentValue);
	        }
	    };
	    ResizeHandle.prototype.render = function () {
	        var side = this.props.side;
	        var style = {};
	        style[side] = this.state.currentValue;
	        var className = 'resize-handle ' + side;
	        return React.createElement("div", {className: className, style: style, onMouseDown: this.onMouseDown.bind(this)}, 
	            React.createElement(svg_icon_1.SvgIcon, {svg: __webpack_require__(472)})
	        );
	    };
	    return ResizeHandle;
	}(React.Component));
	exports.ResizeHandle = ResizeHandle;


/***/ },
/* 552 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(553);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./resize-handle.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./resize-handle.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 553 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".resize-handle{z-index:1;width:18px;position:absolute;height:100%;cursor:ew-resize}.resize-handle>.svg-icon{width:20px;height:20px;position:absolute;top:50%;left:50%;-webkit-transform:translate(-50%, -50%);-ms-transform:translate(-50%, -50%);transform:translate(-50%, -50%)}.resize-handle>.svg-icon path{fill:#b4b4b4}.resize-handle.left{-webkit-transform:translate(-50%, 0);-ms-transform:translate(-50%, 0);transform:translate(-50%, 0);margin-left:-5px}.resize-handle.right{-webkit-transform:translate(50%, 0);-ms-transform:translate(50%, 0);transform:translate(50%, 0);margin-right:-5px}\n", ""]);

	// exports


/***/ },
/* 554 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(555);
	var React = __webpack_require__(5);
	var url_1 = __webpack_require__(286);
	var object_1 = __webpack_require__(232);
	var Route = (function (_super) {
	    __extends(Route, _super);
	    function Route() {
	        _super.apply(this, arguments);
	    }
	    return Route;
	}(React.Component));
	exports.Route = Route;
	var HASH_SEPARATOR = /\/+/;
	var Router = (function (_super) {
	    __extends(Router, _super);
	    function Router() {
	        _super.call(this);
	        this.state = {};
	        this.globalHashChangeListener = this.globalHashChangeListener.bind(this);
	    }
	    Router.prototype.componentDidMount = function () {
	        var _this = this;
	        window.addEventListener('hashchange', this.globalHashChangeListener);
	        window.setTimeout(function () { return _this.onHashChange(window.location.hash); }, 1);
	    };
	    Router.prototype.componentWillUnmount = function () {
	        window.removeEventListener('hashchange', this.globalHashChangeListener);
	    };
	    Router.prototype.globalHashChangeListener = function () {
	        var newHash = window.location.hash;
	        if (this.removeRootFragmentFromHash(newHash) === newHash)
	            return;
	        if (this.state.hash !== newHash)
	            this.onHashChange(newHash);
	    };
	    Router.prototype.removeRootFragmentFromHash = function (hash) {
	        var rootFragment = this.props.rootFragment;
	        if (!rootFragment)
	            return hash;
	        return hash.replace(new RegExp('^#' + rootFragment, 'gi'), '');
	    };
	    Router.prototype.componentWillReceiveProps = function (nextProps) {
	        this.globalHashChangeListener();
	    };
	    Router.prototype.parseHash = function (hash) {
	        if (!hash)
	            return [];
	        var fragments = this.removeRootFragmentFromHash(hash).split(HASH_SEPARATOR);
	        return fragments.filter(Boolean);
	    };
	    Router.prototype.sanitizeHash = function (hash) {
	        var rootFragment = this.props.rootFragment;
	        var fragments = this.parseHash(hash);
	        if (fragments.length === 0)
	            return '#' + rootFragment;
	        return "#" + rootFragment + "/" + fragments.join('/');
	    };
	    Router.prototype.replaceHash = function (newHash) {
	        url_1.replaceHash(newHash);
	        this.onHashChange(newHash);
	    };
	    Router.prototype.hasExtraFragments = function (path) {
	        return path.crumbs.length > path.fragment.split(HASH_SEPARATOR).length;
	    };
	    Router.prototype.stripUnnecessaryFragments = function (path, crumbs) {
	        var rootFragment = this.props.rootFragment;
	        var fragments = path.fragment.split(HASH_SEPARATOR);
	        var parentFragment = crumbs.join('/').replace(path.crumbs.join('/'), '').replace(/\/$/, '');
	        var strippedRouteCrumbs = path.crumbs.slice(0, path.fragment.split(HASH_SEPARATOR).length);
	        var strippedCrumbs = [
	            rootFragment,
	            parentFragment,
	            strippedRouteCrumbs.join('/')
	        ].filter(Boolean);
	        this.replaceHash('#' + strippedCrumbs.join('/'));
	    };
	    Router.prototype.onHashChange = function (hash) {
	        var rootFragment = this.props.rootFragment;
	        var safeHash = this.sanitizeHash(hash);
	        if (hash !== safeHash) {
	            this.replaceHash(safeHash);
	            return;
	        }
	        var crumbs = this.parseHash(hash);
	        var children = this.props.children;
	        if (crumbs.length === 0) {
	            var defaultFragment = this.getDefaultFragment(children);
	            if (defaultFragment) {
	                this.replaceHash(hash + '/' + defaultFragment);
	                return;
	            }
	        }
	        var path = this.getQualifiedPath(children, crumbs);
	        if (path.wasDefaultChoice) {
	            crumbs.pop();
	            crumbs.push(path.fragment);
	            this.replaceHash('#' + [rootFragment].concat(crumbs).join('/'));
	            return;
	        }
	        if (this.hasExtraFragments(path)) {
	            this.stripUnnecessaryFragments(path, crumbs);
	            return;
	        }
	        if (this.canDefaultDeeper(path.fragment, path.crumbs)) {
	            crumbs = crumbs.concat(this.getDefaultDeeperCrumbs(path.fragment, path.crumbs));
	            this.replaceHash('#' + [rootFragment].concat(crumbs).join('/'));
	        }
	        if (this.props.onURLChange) {
	            this.props.onURLChange(crumbs);
	        }
	        this.setState({ hash: window.location.hash });
	    };
	    Router.prototype.getDefaultDeeperCrumbs = function (fragment, crumbs) {
	        var bits = fragment.split(HASH_SEPARATOR);
	        bits.splice(0, crumbs.length);
	        return bits.map(function (bit) { return bit.match(/^:[^=]+=(\w+)$/)[1]; });
	    };
	    Router.prototype.canDefaultDeeper = function (fragment, crumbs) {
	        var bits = fragment.split(HASH_SEPARATOR);
	        if (bits.length === crumbs.length)
	            return false;
	        bits.splice(0, crumbs.length);
	        return bits.every(function (bit) { return /^:[^=]+=\w+$/.test(bit); });
	    };
	    Router.prototype.getDefaultFragment = function (children) {
	        for (var i = 0; i < children.length; i++) {
	            var child = children[i];
	            if (child.type === Route) {
	                return child.props.fragment;
	            }
	        }
	        return undefined;
	    };
	    Router.prototype.getQualifiedPath = function (candidates, crumbs, properties, orphans, parentRoutes) {
	        if (properties === void 0) { properties = {}; }
	        if (orphans === void 0) { orphans = []; }
	        if (parentRoutes === void 0) { parentRoutes = []; }
	        if (this.isRoute(candidates)) {
	            candidates = ([candidates]);
	        }
	        for (var i = 0; i < candidates.length; i++) {
	            var candidate = candidates[i];
	            if (this.isAComment(candidate))
	                continue;
	            var fragment_1 = candidate.props.fragment;
	            if (!fragment_1)
	                continue;
	            properties = object_1.extend(this.getPropertiesFromCrumbs(crumbs, fragment_1), properties);
	            if (crumbs[0] === fragment_1 || fragment_1.charAt(0) === ':') {
	                var children = candidate.props.children;
	                var parents = parentRoutes.concat([candidate]);
	                if (!(Array.isArray(children)) || crumbs.length === 1) {
	                    return { fragment: fragment_1, route: candidate, crumbs: crumbs, properties: properties, orphans: orphans, parentRoutes: parents };
	                }
	                else {
	                    if (candidate.props.alwaysShowOrphans === true) {
	                        orphans = orphans.concat(children.filter(this.isSimpleChild, this));
	                    }
	                    return this.getQualifiedPath(children, crumbs.slice(1), properties, orphans, parents);
	                }
	            }
	        }
	        var route = candidates.filter(this.isRoute)[0];
	        var fragment = route.props.fragment;
	        properties = object_1.extend(this.getPropertiesFromCrumbs(crumbs, fragment), properties);
	        return { fragment: fragment, route: route, crumbs: crumbs, wasDefaultChoice: true, properties: properties, orphans: orphans, parentRoutes: parentRoutes };
	    };
	    Router.prototype.hasSingleChild = function (route) {
	        if (!route)
	            return false;
	        return !(Array.isArray(route.props.children));
	    };
	    Router.prototype.isRoute = function (candidate) {
	        if (!candidate)
	            return false;
	        return candidate.type === Route;
	    };
	    Router.prototype.isAComment = function (candidate) {
	        if (!candidate)
	            return false;
	        return candidate.type === undefined;
	    };
	    Router.prototype.isSimpleChild = function (candidate) {
	        if (!candidate)
	            return false;
	        return !this.isAComment(candidate) && !this.isRoute(candidate);
	    };
	    Router.prototype.getSimpleChildren = function (parent) {
	        if (!parent)
	            return null;
	        return parent.props.children.filter(this.isSimpleChild, this);
	    };
	    Router.prototype.getPropertiesFromCrumbs = function (crumbs, fragment, props) {
	        if (props === void 0) { props = {}; }
	        var fragmentToKey = function (f) { return f.slice(1).replace(/=.*$/, ''); };
	        var myCrumbs = crumbs.concat();
	        fragment.split(HASH_SEPARATOR).forEach(function (bit, i) {
	            if (bit.charAt(0) !== ':')
	                return;
	            props[fragmentToKey(bit)] = myCrumbs.shift();
	        });
	        return props;
	    };
	    Router.prototype.inflate = function (pump, properties) {
	        if (!pump)
	            return properties;
	        var newProperties = {};
	        for (var originalKey in properties) {
	            var _a = pump(originalKey, properties[originalKey]), key = _a.key, value = _a.value;
	            newProperties[key] = value;
	        }
	        return newProperties;
	    };
	    Router.prototype.fillProperties = function (child, path, i) {
	        if (i === void 0) { i = 0; }
	        if (!(child.type instanceof Function))
	            return child;
	        var propsToTransmit = this.getPropertiesFromCrumbs(path.crumbs, path.route.props.fragment);
	        path.parentRoutes.forEach(function (route) {
	            if (route.props.transmit) {
	                route.props.transmit.forEach(function (key) { return propsToTransmit[key] = path.properties[key]; });
	            }
	        });
	        propsToTransmit = this.inflate(path.route.props.inflate, propsToTransmit);
	        return React.cloneElement(child, object_1.extend(propsToTransmit, { key: i }));
	    };
	    Router.prototype.getQualifiedChild = function (candidates, crumbs) {
	        var _this = this;
	        var elements;
	        var path = this.getQualifiedPath(candidates, crumbs);
	        if (this.hasSingleChild(path.route)) {
	            elements = path.orphans.map(function (orphan, i) { return _this.fillProperties(orphan, path, i); })
	                .concat([this.fillProperties(path.route.props.children, path, path.orphans.length)]);
	        }
	        else {
	            var children = this.getSimpleChildren(path.route);
	            if (children.length === 0)
	                return null;
	            elements = children
	                .map(function (child, i) { return _this.fillProperties(child, path, i); })
	                .concat(path.orphans.map(function (orphan, i) { return _this.fillProperties(orphan, path, children.length + i); }));
	        }
	        if (!elements)
	            return null;
	        if (elements.length === 1)
	            return elements[0];
	        return elements;
	    };
	    Router.prototype.render = function () {
	        var children = this.props.children;
	        var hash = this.state.hash;
	        if (hash === undefined)
	            return null;
	        var crumbs = this.parseHash(hash);
	        if (!crumbs || !crumbs.length)
	            return null;
	        var qualifiedChildren = this.getQualifiedChild(children, crumbs);
	        return React.createElement("div", {className: "route-wrapper", style: { width: '100%', height: '100%' }}, qualifiedChildren);
	    };
	    return Router;
	}(React.Component));
	exports.Router = Router;


/***/ },
/* 555 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(556);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./router.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./router.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 556 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, "", ""]);

	// exports


/***/ },
/* 557 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(558);
	var React = __webpack_require__(5);
	var ReactDOM = __webpack_require__(39);
	var dom_1 = __webpack_require__(300);
	var string_1 = __webpack_require__(402);
	var Scroller = (function (_super) {
	    __extends(Scroller, _super);
	    function Scroller() {
	        _super.call(this);
	        this.state = {
	            scrollTop: 0,
	            scrollLeft: 0,
	            viewportHeight: 0,
	            viewportWidth: 0
	        };
	        this.globalResizeListener = this.globalResizeListener.bind(this);
	    }
	    Scroller.prototype.globalResizeListener = function () {
	        this.updateViewport();
	    };
	    Scroller.prototype.getGutterStyle = function (side) {
	        var layout = this.props.layout;
	        var _a = this.state, scrollLeft = _a.scrollLeft, scrollTop = _a.scrollTop;
	        switch (side) {
	            case "top":
	                return {
	                    height: layout.top,
	                    left: layout.left - scrollLeft,
	                    right: layout.right
	                };
	            case "right":
	                return {
	                    width: layout.right,
	                    right: 0,
	                    top: layout.top - scrollTop,
	                    bottom: layout.bottom
	                };
	            case "bottom":
	                return {
	                    height: layout.bottom,
	                    left: layout.left - scrollLeft,
	                    right: layout.right,
	                    bottom: 0
	                };
	            case "left":
	                return {
	                    width: layout.left,
	                    left: 0,
	                    top: layout.top - scrollTop,
	                    bottom: layout.bottom
	                };
	            default:
	                throw new Error("Unknown side for gutter. This shouldn't happen.");
	        }
	    };
	    Scroller.prototype.getCornerStyle = function (yPos, xPos) {
	        var layout = this.props.layout;
	        var style = {};
	        if (xPos === 'left') {
	            style.left = 0;
	            style.width = layout.left;
	        }
	        else {
	            style.right = 0;
	            style.width = layout.right;
	        }
	        if (yPos === 'top') {
	            style.top = 0;
	            style.height = layout.top;
	        }
	        else {
	            style.height = layout.bottom;
	            style.bottom = 0;
	        }
	        return style;
	    };
	    Scroller.prototype.getShadowStyle = function (side) {
	        var layout = this.props.layout;
	        switch (side) {
	            case "top":
	                return { top: 0, height: layout.top, left: 0, right: 0 };
	            case "right":
	                return { width: layout.right, right: 0, top: 0, bottom: 0 };
	            case "bottom":
	                return { height: layout.bottom, bottom: 0, left: 0, right: 0 };
	            case "left":
	                return { width: layout.left, left: 0, top: 0, bottom: 0 };
	            default:
	                throw new Error("Unknown side for shadow. This shouldn't happen.");
	        }
	    };
	    Scroller.prototype.getBodyStyle = function () {
	        var layout = this.props.layout;
	        var _a = this.state, scrollTop = _a.scrollTop, scrollLeft = _a.scrollLeft;
	        return {
	            top: layout.top - scrollTop,
	            right: layout.right,
	            bottom: layout.bottom,
	            left: layout.left - scrollLeft
	        };
	    };
	    Scroller.prototype.getTargetStyle = function () {
	        var layout = this.props.layout;
	        return {
	            width: layout.bodyWidth + layout.left + layout.right,
	            height: layout.bodyHeight + layout.top + layout.bottom
	        };
	    };
	    Scroller.prototype.getDOMElement = function (refName) {
	        return ReactDOM.findDOMNode(this.refs[refName]);
	    };
	    Scroller.prototype.onScroll = function (e) {
	        var _this = this;
	        var _a = this.props.layout, bodyWidth = _a.bodyWidth, bodyHeight = _a.bodyHeight;
	        var _b = this.state, viewportWidth = _b.viewportWidth, viewportHeight = _b.viewportHeight;
	        var target = e.target;
	        var scrollLeft = dom_1.clamp(target.scrollLeft, 0, Math.max(bodyWidth - viewportWidth, 0));
	        var scrollTop = dom_1.clamp(target.scrollTop, 0, Math.max(bodyHeight - viewportHeight, 0));
	        if (this.props.onScroll !== undefined) {
	            this.setState({
	                scrollTop: scrollTop,
	                scrollLeft: scrollLeft
	            }, function () { return _this.props.onScroll(scrollTop, scrollLeft); });
	        }
	        else {
	            this.setState({
	                scrollTop: scrollTop,
	                scrollLeft: scrollLeft
	            });
	        }
	    };
	    Scroller.prototype.getRelativeMouseCoordinates = function (event) {
	        var _a = this.props.layout, top = _a.top, left = _a.left, bodyWidth = _a.bodyWidth, bodyHeight = _a.bodyHeight;
	        var container = this.getDOMElement('eventContainer');
	        var _b = this.state, scrollLeft = _b.scrollLeft, scrollTop = _b.scrollTop, viewportHeight = _b.viewportHeight, viewportWidth = _b.viewportWidth;
	        var rect = container.getBoundingClientRect();
	        var i = 0;
	        var j = 0;
	        var x = dom_1.getXFromEvent(event) - rect.left;
	        var y = dom_1.getYFromEvent(event) - rect.top;
	        if (x > left && x <= left + viewportWidth) {
	            j = 1;
	            x += scrollLeft;
	        }
	        else if (x > left + viewportWidth) {
	            j = 2;
	            x += bodyWidth - viewportWidth;
	        }
	        if (y > top && y <= top + viewportHeight) {
	            i = 1;
	            y += scrollTop;
	        }
	        else if (y > top + viewportHeight) {
	            i = 2;
	            y += bodyHeight - viewportHeight;
	        }
	        return { x: x, y: y, part: Scroller.PARTS[i][j] };
	    };
	    Scroller.prototype.onClick = function (event) {
	        if (this.props.onClick === undefined)
	            return;
	        var _a = this.getRelativeMouseCoordinates(event), x = _a.x, y = _a.y, part = _a.part;
	        if (y < 0 || x < 0)
	            return;
	        this.props.onClick(x, y, part);
	    };
	    Scroller.prototype.onMouseMove = function (event) {
	        if (this.props.onMouseMove === undefined)
	            return;
	        var _a = this.getRelativeMouseCoordinates(event), x = _a.x, y = _a.y, part = _a.part;
	        if (y < 0 || x < 0)
	            return;
	        this.props.onMouseMove(x, y, part);
	    };
	    Scroller.prototype.renderGutter = function (side) {
	        var element = this.props[(side + "Gutter")];
	        if (!element)
	            return null;
	        return React.createElement("div", {className: side + "-gutter", style: this.getGutterStyle(side)}, element);
	    };
	    Scroller.prototype.shouldHaveShadow = function (side) {
	        var layout = this.props.layout;
	        var _a = this.state, scrollLeft = _a.scrollLeft, scrollTop = _a.scrollTop, viewportHeight = _a.viewportHeight, viewportWidth = _a.viewportWidth;
	        if (side === 'top')
	            return scrollTop > 0;
	        if (side === 'left')
	            return scrollLeft > 0;
	        if (side === 'bottom')
	            return layout.bodyHeight - scrollTop > viewportHeight;
	        if (side === 'right')
	            return layout.bodyWidth - scrollLeft > viewportWidth;
	        throw new Error('Unknown side for shadow : ' + side);
	    };
	    Scroller.prototype.renderShadow = function (side) {
	        if (!this.props.layout[side])
	            return null;
	        if (!this.shouldHaveShadow(side))
	            return null;
	        return React.createElement("div", {className: side + "-shadow", style: this.getShadowStyle(side)});
	    };
	    Scroller.prototype.renderCorner = function (yPos, xPos) {
	        var style = this.getCornerStyle(yPos, xPos);
	        var element = this.props[yPos + string_1.firstUp(xPos) + 'Corner'];
	        if (!element)
	            return null;
	        return React.createElement("div", {className: [yPos, xPos, 'corner'].join('-'), style: style}, element);
	    };
	    Scroller.prototype.componentDidMount = function () {
	        window.addEventListener('resize', this.globalResizeListener);
	        this.updateViewport();
	    };
	    Scroller.prototype.componentWillUnmount = function () {
	        window.removeEventListener('resize', this.globalResizeListener);
	    };
	    Scroller.prototype.componentDidUpdate = function () {
	        this.updateViewport();
	    };
	    Scroller.prototype.updateViewport = function () {
	        var scroller = this.getDOMElement('Scroller');
	        if (!scroller)
	            return;
	        var rect = scroller.getBoundingClientRect();
	        var _a = this.props.layout, top = _a.top, right = _a.right, bottom = _a.bottom, left = _a.left;
	        var newHeight = rect.height - top - bottom;
	        var newWidth = rect.width - left - right;
	        if (this.state.viewportHeight !== newHeight || this.state.viewportWidth !== newWidth) {
	            this.setState({ viewportHeight: newHeight, viewportWidth: newWidth });
	        }
	    };
	    Scroller.prototype.render = function () {
	        var _a = this.state, viewportWidth = _a.viewportWidth, viewportHeight = _a.viewportHeight;
	        var _b = this.props, body = _b.body, overlay = _b.overlay, onMouseLeave = _b.onMouseLeave, layout = _b.layout;
	        if (!layout)
	            return null;
	        var bodyWidth = layout.bodyWidth, bodyHeight = layout.bodyHeight;
	        var blockHorizontalScroll = bodyWidth <= viewportWidth;
	        var blockVerticalScroll = bodyHeight <= viewportHeight;
	        var eventContainerClasses = dom_1.classNames('event-container', {
	            'no-x-scroll': blockHorizontalScroll,
	            'no-y-scroll': blockVerticalScroll
	        });
	        var scrollerClasses = dom_1.classNames('scroller', {
	            'has-top-shadow': this.shouldHaveShadow('top')
	        });
	        return React.createElement("div", {className: scrollerClasses, ref: "Scroller"}, 
	            React.createElement("div", {className: "body", style: this.getBodyStyle()}, body), 
	            this.renderGutter("top"), 
	            this.renderGutter("right"), 
	            this.renderGutter("bottom"), 
	            this.renderGutter("left"), 
	            this.renderCorner("top", "left"), 
	            this.renderCorner("top", "right"), 
	            this.renderCorner("bottom", "left"), 
	            this.renderCorner("bottom", "right"), 
	            this.renderShadow("top"), 
	            this.renderShadow("right"), 
	            this.renderShadow("bottom"), 
	            this.renderShadow("left"), 
	            overlay ? React.createElement("div", {className: "overlay"}, overlay) : null, 
	            React.createElement("div", {className: eventContainerClasses, ref: "eventContainer", onScroll: this.onScroll.bind(this), onClick: this.onClick.bind(this), onMouseMove: this.onMouseMove.bind(this), onMouseLeave: onMouseLeave || null}, 
	                React.createElement("div", {className: "event-target", style: this.getTargetStyle()})
	            ));
	    };
	    Scroller.TOP_LEFT_CORNER = 'top-left-corner';
	    Scroller.TOP_GUTTER = 'top-gutter';
	    Scroller.TOP_RIGHT_CORNER = 'top-right-corner';
	    Scroller.LEFT_GUTTER = 'left-gutter';
	    Scroller.BODY = 'body';
	    Scroller.RIGHT_GUTTER = 'right-gutter';
	    Scroller.BOTTOM_LEFT_CORNER = 'bottom-left-corner';
	    Scroller.BOTTOM_GUTTER = 'bottom-gutter';
	    Scroller.BOTTOM_RIGHT_CORNER = 'bottom-right-corner';
	    Scroller.PARTS = [
	        [Scroller.TOP_LEFT_CORNER, Scroller.TOP_GUTTER, Scroller.TOP_RIGHT_CORNER],
	        [Scroller.LEFT_GUTTER, Scroller.BODY, Scroller.RIGHT_GUTTER],
	        [Scroller.BOTTOM_LEFT_CORNER, Scroller.BOTTOM_GUTTER, Scroller.BOTTOM_RIGHT_CORNER]
	    ];
	    return Scroller;
	}(React.Component));
	exports.Scroller = Scroller;


/***/ },
/* 558 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(559);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./scroller.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./scroller.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 559 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".scroller{overflow:hidden;cursor:pointer}.scroller>*{position:absolute;overflow:hidden;white-space:nowrap}.scroller>.event-container{overflow:auto;top:0;bottom:0;left:0;right:0}.scroller>.event-container.no-x-scroll{overflow-x:hidden}.scroller>.event-container.no-y-scroll{overflow-y:hidden}.scroller>.event-container>.event-target{background:#fff;opacity:0.001}.scroller .left-shadow{box-shadow:1px 0 5px 0 rgba(0,0,0,0.2)}.scroller .top-shadow{box-shadow:3px 0 5px 1px rgba(0,0,0,0.2)}.scroller .right-shadow{box-shadow:4px 0 4px 5px rgba(0,0,0,0.2)}.scroller .bottom-shadow{box-shadow:0 0 2px 1px rgba(0,0,0,0.2)}.scroller .overlay{position:absolute;top:0;bottom:0;left:0;right:0}\n", ""]);

	// exports


/***/ },
/* 560 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(561);
	var React = __webpack_require__(5);
	var dom_1 = __webpack_require__(300);
	var body_portal_1 = __webpack_require__(301);
	var shpitz_1 = __webpack_require__(304);
	var segment_action_buttons_1 = __webpack_require__(452);
	var OFFSET_V = -10;
	var PER_LETTER_PIXELS = 8;
	var SegmentBubble = (function (_super) {
	    __extends(SegmentBubble, _super);
	    function SegmentBubble() {
	        _super.call(this);
	    }
	    SegmentBubble.prototype.render = function () {
	        var _a = this.props, left = _a.left, top = _a.top, dimension = _a.dimension, segmentLabel = _a.segmentLabel, measureLabel = _a.measureLabel, clicker = _a.clicker, openRawDataModal = _a.openRawDataModal, onClose = _a.onClose;
	        var textElement;
	        if (segmentLabel) {
	            var minTextWidth = dom_1.clamp(segmentLabel.length * PER_LETTER_PIXELS, 80, 300);
	            textElement = React.createElement("div", {className: "text", style: { minWidth: minTextWidth }}, 
	                React.createElement("div", {className: "segment"}, segmentLabel), 
	                measureLabel ? React.createElement("div", {className: "measure-value"}, measureLabel) : null);
	        }
	        var actionsElement = null;
	        if (clicker) {
	            actionsElement = React.createElement(segment_action_buttons_1.SegmentActionButtons, {clicker: clicker, dimension: dimension, segmentLabel: segmentLabel, openRawDataModal: openRawDataModal, onClose: onClose});
	        }
	        return React.createElement(body_portal_1.BodyPortal, {left: left, top: top + OFFSET_V, disablePointerEvents: !clicker}, 
	            React.createElement("div", {className: "segment-bubble", ref: "bubble"}, 
	                textElement, 
	                actionsElement, 
	                React.createElement(shpitz_1.Shpitz, {direction: "up"}))
	        );
	    };
	    return SegmentBubble;
	}(React.Component));
	exports.SegmentBubble = SegmentBubble;


/***/ },
/* 561 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(562);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./segment-bubble.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./segment-bubble.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 562 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".segment-bubble{background:#fff;border-radius:2px;box-shadow:0 3px 10px 0 rgba(0,0,0,0.26),0 0 3px 0 rgba(0,0,0,0.16)}.segment-bubble{position:absolute;background:rgba(255,255,255,0.9);padding:10px;text-align:center;-webkit-transform:translate(-50%, -100%);-ms-transform:translate(-50%, -100%);transform:translate(-50%, -100%);max-width:400px}.segment-bubble .text .segment{color:#999;line-height:17px;display:block;padding-bottom:2px;overflow:hidden;word-wrap:break-word}.segment-bubble .text .measure-value{white-space:nowrap}.segment-bubble .segment-action-buttons:nth-child(n+2){margin-top:7px}.segment-bubble .shpitz{left:50%;top:100%}\n", ""]);

	// exports


/***/ },
/* 563 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(564);
	var React = __webpack_require__(5);
	var index_1 = __webpack_require__(202);
	var constants_1 = __webpack_require__(292);
	var bubble_menu_1 = __webpack_require__(297);
	var dropdown_1 = __webpack_require__(307);
	var SettingsMenu = (function (_super) {
	    __extends(SettingsMenu, _super);
	    function SettingsMenu() {
	        _super.call(this);
	    }
	    SettingsMenu.prototype.changeTimezone = function (newTimezone) {
	        var _a = this.props, onClose = _a.onClose, changeTimezone = _a.changeTimezone;
	        changeTimezone(newTimezone);
	        onClose();
	    };
	    SettingsMenu.prototype.renderSettingsLinks = function () {
	        var _a = this.props, dataCube = _a.dataCube, user = _a.user, stateful = _a.stateful;
	        if (!stateful || !dataCube || !user || !user.allow['settings'])
	            return null;
	        return React.createElement("div", null, 
	            React.createElement("a", {href: "#settings/data-cubes/" + dataCube.name}, 
	                React.createElement("div", {className: "simple-item"}, constants_1.STRINGS.editThisCube)
	            ), 
	            React.createElement("a", {href: "#settings"}, 
	                React.createElement("div", {className: "simple-item"}, constants_1.STRINGS.generalSettings)
	            ), 
	            React.createElement("div", {className: "separator"}));
	    };
	    SettingsMenu.prototype.renderTimezonesDropdown = function () {
	        var _a = this.props, timezone = _a.timezone, timezones = _a.timezones;
	        var TimezoneDropdown = dropdown_1.Dropdown.specialize();
	        return React.createElement(TimezoneDropdown, {label: constants_1.STRINGS.timezone, selectedItem: timezone, renderItem: function (d) { return d.toString().replace(/_/g, ' '); }, items: timezones, onSelect: this.changeTimezone.bind(this)});
	    };
	    SettingsMenu.prototype.render = function () {
	        var _a = this.props, openOn = _a.openOn, onClose = _a.onClose;
	        var stage = index_1.Stage.fromSize(240, 200);
	        return React.createElement(bubble_menu_1.BubbleMenu, {className: "settings-menu", direction: "down", stage: stage, openOn: openOn, onClose: onClose}, 
	            this.renderSettingsLinks(), 
	            this.renderTimezonesDropdown());
	    };
	    return SettingsMenu;
	}(React.Component));
	exports.SettingsMenu = SettingsMenu;


/***/ },
/* 564 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(565);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./settings-menu.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./settings-menu.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 565 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".settings-menu{padding:14px 0}.settings-menu .simple-item,.settings-menu .dropdown{padding:0 14px}.settings-menu .simple-item{cursor:pointer;line-height:25px}.settings-menu .simple-item:hover{background:rgba(30,163,230,0.12)}.settings-menu .simple-item.selected{background:#ededed}.settings-menu .separator{height:14px;margin-top:8px;border-top:1px solid #dedede}\n", ""]);

	// exports


/***/ },
/* 566 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(567);
	var React = __webpack_require__(5);
	var ReactDOM = __webpack_require__(39);
	var constants_1 = __webpack_require__(292);
	var dom_1 = __webpack_require__(300);
	var nav_logo_1 = __webpack_require__(536);
	var svg_icon_1 = __webpack_require__(187);
	var nav_list_1 = __webpack_require__(533);
	var SideDrawer = (function (_super) {
	    __extends(SideDrawer, _super);
	    function SideDrawer() {
	        _super.call(this);
	        this.globalMouseDownListener = this.globalMouseDownListener.bind(this);
	        this.globalKeyDownListener = this.globalKeyDownListener.bind(this);
	    }
	    SideDrawer.prototype.componentDidMount = function () {
	        window.addEventListener('mousedown', this.globalMouseDownListener);
	        window.addEventListener('keydown', this.globalKeyDownListener);
	    };
	    SideDrawer.prototype.componentWillUnmount = function () {
	        window.removeEventListener('mousedown', this.globalMouseDownListener);
	        window.removeEventListener('keydown', this.globalKeyDownListener);
	    };
	    SideDrawer.prototype.globalMouseDownListener = function (e) {
	        var myElement = ReactDOM.findDOMNode(this);
	        var target = e.target;
	        if (dom_1.isInside(target, myElement))
	            return;
	        this.props.onClose();
	    };
	    SideDrawer.prototype.globalKeyDownListener = function (e) {
	        if (!dom_1.escapeKey(e))
	            return;
	        this.props.onClose();
	    };
	    SideDrawer.prototype.onHomeClick = function () {
	        window.location.hash = '#';
	    };
	    SideDrawer.prototype.onOpenSettings = function () {
	        window.location.hash = '#settings';
	    };
	    SideDrawer.prototype.renderOverviewLink = function () {
	        var viewType = this.props.viewType;
	        return React.createElement("div", {className: "home-container"}, 
	            React.createElement("div", {className: dom_1.classNames('home-link', { selected: viewType === 'home' }), onClick: this.onHomeClick.bind(this)}, 
	                React.createElement(svg_icon_1.SvgIcon, {svg: __webpack_require__(505)}), 
	                React.createElement("span", null, viewType === 'link' ? 'Overview' : 'Home'))
	        );
	    };
	    SideDrawer.prototype.renderItems = function (items, icon, urlPrefix) {
	        if (urlPrefix === void 0) { urlPrefix = ''; }
	        if (!items || items.length === 0)
	            return null;
	        var _a = this.props, itemHrefFn = _a.itemHrefFn, selectedItem = _a.selectedItem;
	        var navLinks = items.map(function (item) {
	            return {
	                name: item.name,
	                title: item.title,
	                tooltip: item.description,
	                href: itemHrefFn(selectedItem, item) || "#" + urlPrefix + item.name
	            };
	        });
	        return React.createElement(nav_list_1.NavList, {selected: selectedItem ? selectedItem.name : null, navLinks: navLinks, iconSvg: __webpack_require__(569)("./" + icon)});
	    };
	    SideDrawer.prototype.render = function () {
	        var _this = this;
	        var _a = this.props, onClose = _a.onClose, selectedItem = _a.selectedItem, collections = _a.collections, dataCubes = _a.dataCubes, onOpenAbout = _a.onOpenAbout, customization = _a.customization, itemHrefFn = _a.itemHrefFn, user = _a.user;
	        var infoAndFeedback = [];
	        if (user && user.allow['settings']) {
	            infoAndFeedback.push({
	                name: 'settings',
	                title: constants_1.STRINGS.settings,
	                tooltip: 'Settings',
	                onClick: function () {
	                    onClose();
	                    _this.onOpenSettings();
	                }
	            });
	        }
	        infoAndFeedback.push({
	            name: 'info',
	            title: constants_1.STRINGS.infoAndFeedback,
	            tooltip: 'Learn more about Pivot',
	            onClick: function () {
	                onClose();
	                onOpenAbout();
	            }
	        });
	        var customLogoSvg = null;
	        if (customization && customization.customLogoSvg) {
	            customLogoSvg = customization.customLogoSvg;
	        }
	        return React.createElement("div", {className: "side-drawer"}, 
	            React.createElement(nav_logo_1.NavLogo, {customLogoSvg: customLogoSvg, onClick: onClose}), 
	            this.renderOverviewLink(), 
	            this.renderItems(dataCubes, 'full-cube.svg'), 
	            this.renderItems(collections, 'full-collection.svg', 'collection/'), 
	            React.createElement(nav_list_1.NavList, {navLinks: infoAndFeedback}));
	    };
	    return SideDrawer;
	}(React.Component));
	exports.SideDrawer = SideDrawer;


/***/ },
/* 567 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(568);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./side-drawer.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./side-drawer.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 568 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".side-drawer{position:absolute;top:0;bottom:0;left:0;width:300px;background:#fff;font-size:13px;box-shadow:1px 0 2px 0 rgba(0,0,0,0.13),2px 0 12px 0 rgba(0,0,0,0.26);overflow:auto}.side-drawer .home-container{padding-top:10px;padding-bottom:10px;border-top:1px solid #ddd}.side-drawer .home-link{line-height:34px;padding:0 18px;cursor:pointer}.side-drawer .home-link .svg-icon{opacity:0.6;height:19px;width:19px;display:inline-block;top:7px;left:0;margin-right:9px}.side-drawer .home-link .svg-icon path{fill:#1ea3e6}.side-drawer .home-link:hover,.side-drawer .home-link.selected{background:rgba(30,163,230,0.12)}.side-drawer .home-link:hover .svg-icon,.side-drawer .home-link.selected .svg-icon{opacity:1}.side-drawer .home-link.selected svg path{fill:#1ea3e6}.side-drawer .nav-list{padding-top:10px;padding-bottom:10px}.side-drawer .nav-list .items .item .icon{opacity:0.6}.side-drawer .nav-list .items .item .icon svg path{fill:#1ea3e6}.side-drawer .nav-list .items .item:hover .icon,.side-drawer .nav-list .items .item.selected .icon{opacity:1}.side-drawer .nav-logo{cursor:pointer}.side-drawer-enter{-webkit-transform:translate(-301px, 0);-ms-transform:translate(-301px, 0);transform:translate(-301px, 0)}.side-drawer-enter.side-drawer-enter-active{-webkit-transform:translate(0, 0);-ms-transform:translate(0, 0);transform:translate(0, 0);-webkit-transition:-webkit-transform 0.2s cubic-bezier(0.4, 0, 0.2, 1) 0.1s;transition:-webkit-transform 0.2s cubic-bezier(0.4, 0, 0.2, 1) 0.1s;transition:transform 0.2s cubic-bezier(0.4, 0, 0.2, 1) 0.1s;transition:transform 0.2s cubic-bezier(0.4, 0, 0.2, 1) 0.1s, -webkit-transform 0.2s cubic-bezier(0.4, 0, 0.2, 1) 0.1s}.side-drawer-leave{-webkit-transform:translate(0, 0);-ms-transform:translate(0, 0);transform:translate(0, 0)}.side-drawer-leave.side-drawer-leave-active{-webkit-transform:translate(-301px, 0);-ms-transform:translate(-301px, 0);transform:translate(-301px, 0);-webkit-transition:-webkit-transform 0.2s cubic-bezier(0.4, 0, 0.2, 1) 0.1s;transition:-webkit-transform 0.2s cubic-bezier(0.4, 0, 0.2, 1) 0.1s;transition:transform 0.2s cubic-bezier(0.4, 0, 0.2, 1) 0.1s;transition:transform 0.2s cubic-bezier(0.4, 0, 0.2, 1) 0.1s, -webkit-transform 0.2s cubic-bezier(0.4, 0, 0.2, 1) 0.1s}\n", ""]);

	// exports


/***/ },
/* 569 */
/***/ function(module, exports, __webpack_require__) {

	var map = {
		"./arrow-logo.svg": 469,
		"./caret.svg": 382,
		"./check.svg": 326,
		"./combo-logo.svg": 470,
		"./data-cubes.svg": 471,
		"./dim-boolean.svg": 361,
		"./dim-geo.svg": 362,
		"./dim-number.svg": 363,
		"./dim-string-geo.svg": 364,
		"./dim-string.svg": 365,
		"./dim-time.svg": 366,
		"./drag-arrow.svg": 391,
		"./drag-handle.svg": 472,
		"./dragger.svg": 473,
		"./dropdown-caret.svg": 310,
		"./filter-contains.svg": 411,
		"./filter-exclude.svg": 410,
		"./filter-include.svg": 409,
		"./filter-intersection.svg": 474,
		"./filter-regex.svg": 412,
		"./filter-string.svg": 475,
		"./full-add-framed.svg": 476,
		"./full-add.svg": 477,
		"./full-back.svg": 478,
		"./full-bookmark.svg": 479,
		"./full-caret-bottom.svg": 480,
		"./full-caret-left-line.svg": 481,
		"./full-caret-left.svg": 337,
		"./full-caret-right-line.svg": 482,
		"./full-caret-right.svg": 338,
		"./full-caret-small-bottom.svg": 483,
		"./full-caret-small-left.svg": 484,
		"./full-caret-small-right.svg": 485,
		"./full-caret-small-top.svg": 486,
		"./full-caret-top.svg": 487,
		"./full-cluster.svg": 488,
		"./full-collection.svg": 489,
		"./full-cube.svg": 490,
		"./full-delete.svg": 491,
		"./full-edit.svg": 492,
		"./full-error.svg": 493,
		"./full-expand.svg": 494,
		"./full-hiluk.svg": 495,
		"./full-menu.svg": 496,
		"./full-more-compact.svg": 497,
		"./full-more-mini.svg": 455,
		"./full-more.svg": 359,
		"./full-multi.svg": 375,
		"./full-profile.svg": 498,
		"./full-refresh.svg": 499,
		"./full-remove-small.svg": 500,
		"./full-remove.svg": 383,
		"./full-search.svg": 367,
		"./full-settings.svg": 501,
		"./full-time.svg": 502,
		"./full-user.svg": 503,
		"./github.svg": 504,
		"./grid-loader.svg": 190,
		"./help.svg": 432,
		"./home.svg": 505,
		"./measure.svg": 506,
		"./menu.svg": 507,
		"./pinned.svg": 508,
		"./pivot-logo.svg": 509,
		"./preview-filter.svg": 342,
		"./preview-pin.svg": 343,
		"./preview-split.svg": 344,
		"./preview-subsplit.svg": 345,
		"./sort-arrow.svg": 510,
		"./split-add.svg": 511,
		"./split-replace.svg": 387,
		"./star.svg": 512,
		"./text-logo.svg": 513,
		"./to-arrow.svg": 514,
		"./vis-bar-chart.svg": 515,
		"./vis-geo.svg": 516,
		"./vis-heatmap.svg": 517,
		"./vis-line-chart.svg": 518,
		"./vis-scatter-plot.svg": 519,
		"./vis-stacked-bars.svg": 520,
		"./vis-table.svg": 521,
		"./vis-totals.svg": 522,
		"./vis-treemap.svg": 523,
		"./x.svg": 327
	};
	function webpackContext(req) {
		return __webpack_require__(webpackContextResolve(req));
	};
	function webpackContextResolve(req) {
		return map[req] || (function() { throw new Error("Cannot find module '" + req + "'.") }());
	};
	webpackContext.keys = function webpackContextKeys() {
		return Object.keys(map);
	};
	webpackContext.resolve = webpackContextResolve;
	module.exports = webpackContext;
	webpackContext.id = 569;


/***/ },
/* 570 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(571);
	var React = __webpack_require__(5);
	var dom_1 = __webpack_require__(300);
	var svg_icon_1 = __webpack_require__(187);
	var scroller_1 = __webpack_require__(557);
	var ROW_HEIGHT = 42;
	var HEADER_HEIGHT = 26;
	var ACTION_WIDTH = 30;
	var SimpleTable = (function (_super) {
	    __extends(SimpleTable, _super);
	    function SimpleTable() {
	        _super.call(this);
	        this.state = {};
	    }
	    SimpleTable.prototype.renderHeaders = function (columns, sortColumn, sortAscending) {
	        var items = [];
	        for (var i = 0; i < columns.length; i++) {
	            var column = columns[i];
	            var icon = null;
	            if (sortColumn && sortColumn === column) {
	                icon = React.createElement(svg_icon_1.SvgIcon, {svg: __webpack_require__(510), className: "sort-arrow " + (sortAscending ? 'ascending' : 'descending')});
	            }
	            items.push(React.createElement("div", {className: "header", style: { width: column.width }, key: "column-" + i}, 
	                column.label, 
	                icon));
	        }
	        return React.createElement("div", {className: "column-headers"}, items);
	    };
	    SimpleTable.prototype.getIcons = function (row, actions) {
	        if (!actions || !actions.length)
	            return null;
	        var items = [];
	        for (var i = 0; i < actions.length; i++) {
	            var action = actions[i];
	            items.push(React.createElement("div", {className: 'cell action', key: "action-" + i, onClick: action.callback.bind(this, row)}, 
	                React.createElement(svg_icon_1.SvgIcon, {svg: __webpack_require__(468)("./" + action.icon + ".svg")})
	            ));
	        }
	        return items;
	    };
	    SimpleTable.prototype.labelizer = function (column) {
	        if (typeof column.field === 'string') {
	            return function (row) { return row[column.field]; };
	        }
	        return column.field;
	    };
	    SimpleTable.prototype.renderRow = function (row, columns, index) {
	        var hoveredRowIndex = this.state.hoveredRowIndex;
	        var items = [];
	        for (var i = 0; i < columns.length; i++) {
	            var col = columns[i];
	            var icon = col.cellIcon ? React.createElement(svg_icon_1.SvgIcon, {svg: __webpack_require__(468)("./" + col.cellIcon + ".svg")}) : null;
	            items.push(React.createElement("div", {className: dom_1.classNames('cell', { 'has-icon': !!col.cellIcon }), style: { width: col.width }, key: "cell-" + i}, 
	                icon, 
	                this.labelizer(col)(row)));
	        }
	        return React.createElement("div", {className: dom_1.classNames('row', { hover: hoveredRowIndex === index }), key: "row-" + index, style: { height: ROW_HEIGHT }}, items);
	    };
	    SimpleTable.prototype.sortRows = function (rows, sortColumn, sortAscending) {
	        if (!sortColumn)
	            return rows;
	        var labelize = this.labelizer(sortColumn);
	        if (sortAscending) {
	            return rows.sort(function (a, b) {
	                if (labelize(a) < labelize(b)) {
	                    return -1;
	                }
	                else if (labelize(a) > labelize(b)) {
	                    return 1;
	                }
	                else {
	                    return 0;
	                }
	            });
	        }
	        return rows.sort(function (a, b) {
	            if (labelize(a) < labelize(b)) {
	                return 1;
	            }
	            else if (labelize(a) > labelize(b)) {
	                return -1;
	            }
	            else {
	                return 0;
	            }
	        });
	    };
	    SimpleTable.prototype.renderRows = function (rows, columns, sortColumn, sortAscending) {
	        if (!rows || !rows.length)
	            return null;
	        rows = this.sortRows(rows, sortColumn, sortAscending);
	        var items = [];
	        for (var i = 0; i < rows.length; i++) {
	            items.push(this.renderRow(rows[i], columns, i));
	        }
	        return items;
	    };
	    SimpleTable.prototype.getLayout = function (columns, rows, actions) {
	        var width = columns.reduce(function (a, b) { return a + b.width; }, 0);
	        var directActionsCount = actions.filter(function (a) { return !a.inEllipsis; }).length;
	        var indirectActionsCount = directActionsCount !== actions.length ? 1 : 0;
	        return {
	            bodyWidth: width,
	            bodyHeight: rows.length * ROW_HEIGHT,
	            top: HEADER_HEIGHT,
	            right: directActionsCount * 30 + indirectActionsCount * 30,
	            bottom: 0,
	            left: 0
	        };
	    };
	    SimpleTable.prototype.getDirectActions = function (actions) {
	        return actions.filter(function (action) { return !action.inEllipsis; });
	    };
	    SimpleTable.prototype.renderActions = function (rows, actions) {
	        var _a = this.state, hoveredRowIndex = _a.hoveredRowIndex, hoveredActionIndex = _a.hoveredActionIndex;
	        var directActions = this.getDirectActions(actions);
	        var generator = function (row, i) {
	            var isRowHovered = i === hoveredRowIndex;
	            var icons = directActions.map(function (action, j) {
	                return React.createElement("div", {className: dom_1.classNames("icon", { hover: isRowHovered && j === hoveredActionIndex }), key: "icon-" + j, style: { width: ACTION_WIDTH }}, 
	                    React.createElement(svg_icon_1.SvgIcon, {svg: __webpack_require__(468)("./" + action.icon + ".svg")})
	                );
	            });
	            return React.createElement("div", {className: dom_1.classNames("row action", { hover: isRowHovered }), key: "action-" + i, style: { height: ROW_HEIGHT }}, icons);
	        };
	        return rows.map(generator);
	    };
	    SimpleTable.prototype.getRowIndex = function (y) {
	        var rowIndex = -1;
	        if (y > HEADER_HEIGHT) {
	            rowIndex = Math.floor((y - HEADER_HEIGHT) / ROW_HEIGHT);
	        }
	        return rowIndex;
	    };
	    SimpleTable.prototype.getActionIndex = function (x, headerWidth) {
	        var actions = this.props.actions;
	        return Math.floor((x - headerWidth) / ACTION_WIDTH);
	    };
	    SimpleTable.prototype.getColumnIndex = function (x, headerWidth) {
	        if (x >= headerWidth)
	            return -1;
	        var columns = this.props.columns;
	        var columnIndex = 0;
	        while ((x -= columns[columnIndex].width) > 0)
	            columnIndex++;
	        return columnIndex;
	    };
	    SimpleTable.prototype.getHeaderWidth = function (columns) {
	        return columns.reduce(function (a, b) { return a + b.width; }, 0);
	    };
	    SimpleTable.prototype.onClick = function (x, y, part) {
	        var _a = this.props, columns = _a.columns, rows = _a.rows, actions = _a.actions;
	        if (part === scroller_1.Scroller.TOP_RIGHT_CORNER)
	            return;
	        var headerWidth = this.getHeaderWidth(columns);
	        var columnIndex = this.getColumnIndex(x, headerWidth);
	        var rowIndex = this.getRowIndex(y);
	        if (part === scroller_1.Scroller.RIGHT_GUTTER) {
	            var action = actions[this.getActionIndex(x, headerWidth)];
	            if (action) {
	                this.onActionClick(action, rows[rowIndex]);
	                return;
	            }
	        }
	        if (part === scroller_1.Scroller.TOP_GUTTER) {
	            this.onHeaderClick(columns[columnIndex]);
	            return;
	        }
	        this.onCellClick(rows[rowIndex], columns[columnIndex]);
	    };
	    SimpleTable.prototype.onCellClick = function (row, column) {
	        if (this.props.onRowClick && row) {
	            this.props.onRowClick(row);
	        }
	    };
	    SimpleTable.prototype.onHeaderClick = function (column) {
	        this.setState({
	            sortColumn: column,
	            sortAscending: this.state.sortColumn === column ? !this.state.sortAscending : true
	        });
	    };
	    SimpleTable.prototype.onActionClick = function (action, row) {
	        action.callback(row);
	    };
	    SimpleTable.prototype.onMouseMove = function (x, y, part) {
	        var _a = this.props, rows = _a.rows, columns = _a.columns;
	        var headerWidth = this.getHeaderWidth(columns);
	        var rowIndex = this.getRowIndex(y);
	        this.setState({
	            hoveredRowIndex: rowIndex > rows.length ? undefined : rowIndex,
	            hoveredActionIndex: part === scroller_1.Scroller.RIGHT_GUTTER ? this.getActionIndex(x, headerWidth) : undefined
	        });
	    };
	    SimpleTable.prototype.onMouseLeave = function () {
	        this.setState({
	            hoveredRowIndex: undefined,
	            hoveredActionIndex: undefined
	        });
	    };
	    SimpleTable.prototype.render = function () {
	        var _a = this.props, columns = _a.columns, rows = _a.rows, actions = _a.actions;
	        var _b = this.state, sortColumn = _b.sortColumn, sortAscending = _b.sortAscending, hoveredRowIndex = _b.hoveredRowIndex;
	        if (!columns)
	            return null;
	        return React.createElement("div", {className: dom_1.classNames("simple-table", { clickable: hoveredRowIndex !== undefined })}, 
	            React.createElement(scroller_1.Scroller, {ref: "scroller", layout: this.getLayout(columns, rows, actions), topRightCorner: React.createElement("div", null), topGutter: this.renderHeaders(columns, sortColumn, sortAscending), rightGutter: this.renderActions(rows, actions), body: this.renderRows(rows, columns, sortColumn, sortAscending), onClick: this.onClick.bind(this), onMouseMove: this.onMouseMove.bind(this), onMouseLeave: this.onMouseLeave.bind(this)})
	        );
	    };
	    return SimpleTable;
	}(React.Component));
	exports.SimpleTable = SimpleTable;


/***/ },
/* 571 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(572);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./simple-table.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./simple-table.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 572 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".simple-table{width:100%;height:100%}.simple-table .scroller{height:100%;cursor:auto}.simple-table .scroller .column-headers{font-size:12px;text-transform:uppercase;border-bottom:1px solid #e6e6e6;height:100%;background-color:#fff}.simple-table .scroller .column-headers>*{display:inline-block}.simple-table .scroller .column-headers .sort-arrow{width:8px;margin-left:10px}.simple-table .scroller .column-headers .sort-arrow.ascending{-webkit-transform:rotate(180deg);-ms-transform:rotate(180deg);transform:rotate(180deg)}.simple-table .scroller .top-right-corner{border-bottom:1px solid #e6e6e6;background-color:#fff}.simple-table .scroller .row{border-bottom:1px solid #e6e6e6;white-space:nowrap}.simple-table .scroller .row>*{display:inline-block}.simple-table .scroller .row.hover{background:#e3f4fc}.simple-table .scroller .row .cell{white-space:nowrap;overflow-x:hidden;text-overflow:ellipsis;padding:14px 10px 5px 0}.simple-table .scroller .row .cell.has-icon{padding-left:34px}.simple-table .scroller .row .cell .svg-icon{position:absolute;top:10px;left:6px;width:19px;height:19px}.simple-table .scroller .row .cell .svg-icon path{fill:#1ea3e6}.simple-table .scroller .row.action{text-align:center;padding-top:10px}.simple-table .scroller .row.action .icon{width:19px;height:19px}.simple-table .scroller .row.action .icon .svg-icon{width:100%;height:100%}.simple-table .scroller .row.action .icon .svg-icon path{fill:#1ea3e6}.simple-table .scroller .row.action .icon.hover::after{content:'';position:absolute;top:-6px;left:0;width:30px;height:30px;border-radius:30px;background:rgba(30,163,230,0.18)}.simple-table.clickable .scroller{cursor:pointer}\n", ""]);

	// exports


/***/ },
/* 573 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(574);
	var React = __webpack_require__(5);
	var plywood_1 = __webpack_require__(199);
	var index_1 = __webpack_require__(231);
	var index_2 = __webpack_require__(202);
	var constants_1 = __webpack_require__(292);
	var dom_1 = __webpack_require__(300);
	var svg_icon_1 = __webpack_require__(187);
	var bubble_menu_1 = __webpack_require__(297);
	var dropdown_1 = __webpack_require__(307);
	var button_group_1 = __webpack_require__(317);
	function formatLimit(limit) {
	    if (limit === 'custom')
	        return 'Custom';
	    return limit === null ? 'None' : String(limit);
	}
	var SplitMenu = (function (_super) {
	    __extends(SplitMenu, _super);
	    function SplitMenu() {
	        _super.call(this);
	        this.state = {
	            split: null,
	            colors: null
	        };
	        this.globalKeyDownListener = this.globalKeyDownListener.bind(this);
	    }
	    SplitMenu.prototype.componentWillMount = function () {
	        var _a = this.props, essence = _a.essence, split = _a.split;
	        var dataCube = essence.dataCube, colors = essence.colors;
	        var myColors = null;
	        if (colors) {
	            var colorDimension = dataCube.getDimension(colors.dimension);
	            if (colorDimension.expression.equals(split.expression)) {
	                myColors = colors;
	            }
	        }
	        this.setState({
	            split: split,
	            colors: myColors
	        });
	    };
	    SplitMenu.prototype.componentDidMount = function () {
	        window.addEventListener('keydown', this.globalKeyDownListener);
	    };
	    SplitMenu.prototype.componentWillUnmount = function () {
	        window.removeEventListener('keydown', this.globalKeyDownListener);
	    };
	    SplitMenu.prototype.globalKeyDownListener = function (e) {
	        if (dom_1.enterKey(e)) {
	            this.onOkClick();
	        }
	    };
	    SplitMenu.prototype.onSelectGranularity = function (granularity) {
	        var split = this.state.split;
	        var bucketAction = split.bucketAction;
	        this.setState({
	            split: split.changeBucketAction(index_2.updateBucketSize(bucketAction, granularity))
	        });
	    };
	    SplitMenu.prototype.onSelectSortOn = function (sortOn) {
	        var split = this.state.split;
	        var sortAction = split.sortAction;
	        var direction = sortAction ? sortAction.direction : plywood_1.SortAction.DESCENDING;
	        this.setState({
	            split: split.changeSortAction(new plywood_1.SortAction({
	                expression: sortOn.getExpression(),
	                direction: direction
	            }))
	        });
	    };
	    SplitMenu.prototype.onToggleDirection = function () {
	        var split = this.state.split;
	        var sortAction = split.sortAction;
	        this.setState({
	            split: split.changeSortAction(sortAction.toggleDirection())
	        });
	    };
	    SplitMenu.prototype.onSelectLimit = function (limit) {
	        var essence = this.props.essence;
	        var split = this.state.split;
	        var colors = essence.colors;
	        if (colors) {
	            colors = index_2.Colors.fromLimit(colors.dimension, limit);
	        }
	        this.setState({
	            split: split.changeLimit(limit),
	            colors: colors
	        });
	    };
	    SplitMenu.prototype.onOkClick = function () {
	        if (!this.actionEnabled())
	            return;
	        var _a = this.props, clicker = _a.clicker, essence = _a.essence, onClose = _a.onClose;
	        var _b = this.state, split = _b.split, colors = _b.colors;
	        clicker.changeSplits(essence.splits.replace(this.props.split, split), index_2.VisStrategy.UnfairGame, colors);
	        onClose();
	    };
	    SplitMenu.prototype.onCancelClick = function () {
	        var onClose = this.props.onClose;
	        onClose();
	    };
	    SplitMenu.prototype.getSortOn = function () {
	        var _a = this.props, essence = _a.essence, dimension = _a.dimension;
	        var split = this.state.split;
	        return index_2.SortOn.fromSortAction(split.sortAction, essence.dataCube, dimension);
	    };
	    SplitMenu.prototype.renderGranularityPicker = function (type) {
	        var _this = this;
	        var split = this.state.split;
	        var dimension = this.props.dimension;
	        var selectedGran = index_2.granularityToString(split.bucketAction);
	        var granularities = dimension.granularities || index_2.getGranularities(type, dimension.bucketedBy);
	        var buttons = granularities.map(function (g) {
	            var granularityStr = index_2.granularityToString(g);
	            return {
	                isSelected: granularityStr === selectedGran,
	                title: index_1.formatGranularity(granularityStr),
	                key: granularityStr,
	                onClick: _this.onSelectGranularity.bind(_this, g)
	            };
	        });
	        return React.createElement(button_group_1.ButtonGroup, {title: constants_1.STRINGS.granularity, groupMembers: buttons});
	    };
	    SplitMenu.prototype.renderSortDropdown = function () {
	        var _a = this.props, essence = _a.essence, dimension = _a.dimension;
	        var sortOns = [index_2.SortOn.fromDimension(dimension)].concat(essence.dataCube.measures.toArray().map(index_2.SortOn.fromMeasure));
	        var SortOnDropdown = dropdown_1.Dropdown.specialize();
	        return React.createElement(SortOnDropdown, {label: constants_1.STRINGS.sortBy, items: sortOns, selectedItem: this.getSortOn(), equal: index_2.SortOn.equal, renderItem: index_2.SortOn.getTitle, keyItem: index_2.SortOn.getName, onSelect: this.onSelectSortOn.bind(this)});
	    };
	    SplitMenu.prototype.renderSortDirection = function () {
	        var split = this.state.split;
	        var direction = split.sortAction.direction;
	        return React.createElement("div", {className: "sort-direction"}, 
	            this.renderSortDropdown(), 
	            React.createElement("div", {className: 'direction ' + direction, onClick: this.onToggleDirection.bind(this)}, 
	                React.createElement(svg_icon_1.SvgIcon, {svg: __webpack_require__(510)})
	            ));
	    };
	    SplitMenu.prototype.renderLimitDropdown = function (includeNone) {
	        var essence = this.props.essence;
	        var _a = this.state, split = _a.split, colors = _a.colors;
	        var limitAction = split.limitAction;
	        var items = [5, 10, 25, 50, 100];
	        var selectedItem = limitAction ? limitAction.limit : null;
	        if (colors) {
	            items = [3, 5, 7, 9, 10];
	            selectedItem = colors.values ? 'custom' : colors.limit;
	        }
	        if (includeNone)
	            items.unshift(null);
	        var MyDropdown = dropdown_1.Dropdown.specialize();
	        return React.createElement(MyDropdown, {label: constants_1.STRINGS.limit, items: items, selectedItem: selectedItem, renderItem: formatLimit, onSelect: this.onSelectLimit.bind(this)});
	    };
	    SplitMenu.prototype.renderTimeControls = function () {
	        return React.createElement("div", null, 
	            this.renderGranularityPicker('time'), 
	            this.renderSortDirection(), 
	            this.renderLimitDropdown(true));
	    };
	    SplitMenu.prototype.renderNumberControls = function () {
	        return React.createElement("div", null, 
	            this.renderGranularityPicker('number'), 
	            this.renderSortDirection(), 
	            this.renderLimitDropdown(true));
	    };
	    SplitMenu.prototype.renderStringControls = function () {
	        return React.createElement("div", null, 
	            this.renderSortDirection(), 
	            this.renderLimitDropdown(false));
	    };
	    SplitMenu.prototype.actionEnabled = function () {
	        var originalSplit = this.props.split;
	        var originalColors = this.props.essence.colors;
	        var newSplit = this.state.split;
	        var newColors = this.state.colors;
	        return !originalSplit.equals(newSplit) || (originalColors && !originalColors.equals(newColors));
	    };
	    SplitMenu.prototype.render = function () {
	        var _a = this.props, containerStage = _a.containerStage, openOn = _a.openOn, dimension = _a.dimension, onClose = _a.onClose, inside = _a.inside;
	        var split = this.state.split;
	        if (!dimension)
	            return null;
	        var menuSize = index_2.Stage.fromSize(250, 240);
	        var menuControls = null;
	        if (split.bucketAction instanceof plywood_1.TimeBucketAction) {
	            menuControls = this.renderTimeControls();
	        }
	        else if (split.bucketAction instanceof plywood_1.NumberBucketAction) {
	            menuControls = this.renderNumberControls();
	        }
	        else {
	            menuControls = this.renderStringControls();
	        }
	        return React.createElement(bubble_menu_1.BubbleMenu, {className: "split-menu", direction: "down", containerStage: containerStage, stage: menuSize, openOn: openOn, onClose: onClose, inside: inside}, 
	            menuControls, 
	            React.createElement("div", {className: "button-bar"}, 
	                React.createElement("button", {className: "ok", onClick: this.onOkClick.bind(this), disabled: !this.actionEnabled()}, constants_1.STRINGS.ok), 
	                React.createElement("button", {className: "cancel", onClick: this.onCancelClick.bind(this)}, constants_1.STRINGS.cancel)));
	    };
	    return SplitMenu;
	}(React.Component));
	exports.SplitMenu = SplitMenu;


/***/ },
/* 574 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(575);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./split-menu.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./split-menu.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 575 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".split-menu .button-bar .ok,.split-menu .button-bar .cancel{display:inline-block;padding:6px 16px;font-size:13px;min-width:60px;text-align:center;cursor:pointer;border-radius:2px;outline:none;height:30px}.split-menu .button-bar .disabled.ok,.split-menu .button-bar .disabled.cancel,.split-menu .button-bar [disabled].ok,.split-menu .button-bar [disabled].cancel{opacity:.60;cursor:default;pointer-events:none}.split-menu .button-bar .ok{background:#1ea3e6;color:#fff}.split-menu .button-bar .ok svg path{fill:#fff}.split-menu .button-bar .ok:hover{background:#1795d3}.split-menu .button-bar .active.ok,.split-menu .button-bar .ok:active{background:#1584bc;color:#e0e0e0}.split-menu .button-bar .active.ok svg path,.split-menu .button-bar .ok:active svg path{fill:#e0e0e0}.split-menu .button-bar .cancel{background:rgba(30,163,230,0.22);color:#1ea3e6}.split-menu .button-bar .cancel svg path{fill:#1ea3e6}.split-menu .button-bar .cancel:hover{background:rgba(30,163,230,0.3)}.split-menu .button-bar .active.cancel,.split-menu .button-bar .cancel:active{background:rgba(30,163,230,0.38)}.split-menu .sort-direction .direction{background:#fff;border:1px solid #d1d1d1;border-radius:2px;cursor:pointer;box-shadow:0 1px 1px 0 rgba(0,0,0,0.1)}.split-menu .sort-direction .direction:hover{border-color:#bababa}.split-menu .dropdown{margin-bottom:12px}.split-menu .sort-direction .dropdown{margin-right:38px}.split-menu .sort-direction .direction{position:absolute;right:0;bottom:0;width:32px;height:30px}.split-menu .sort-direction .direction svg{position:absolute;height:13px;top:7px;left:11px}.split-menu .sort-direction .direction.ascending svg{-webkit-transform:rotate(180deg);-ms-transform:rotate(180deg);transform:rotate(180deg)}.split-menu .button-bar .ok{min-width:60px;margin-right:8px}\n", ""]);

	// exports


/***/ },
/* 576 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(577);
	var React = __webpack_require__(5);
	var ReactDOM = __webpack_require__(39);
	var Q = __webpack_require__(182);
	var svg_icon_1 = __webpack_require__(187);
	var constants_1 = __webpack_require__(292);
	var index_1 = __webpack_require__(202);
	var dom_1 = __webpack_require__(300);
	var pill_tile_1 = __webpack_require__(428);
	var drag_manager_1 = __webpack_require__(349);
	var fancy_drag_indicator_1 = __webpack_require__(388);
	var bubble_menu_1 = __webpack_require__(297);
	var SPLIT_CLASS_NAME = 'split';
	var SplitTile = (function (_super) {
	    __extends(SplitTile, _super);
	    function SplitTile() {
	        _super.call(this);
	        this.overflowMenuId = dom_1.uniqueId('overflow-menu-');
	        this.state = {
	            SplitMenuAsync: null,
	            menuOpenOn: null,
	            menuDimension: null,
	            dragPosition: null,
	            maxItems: null
	        };
	    }
	    SplitTile.prototype.componentDidMount = function () {
	        var _this = this;
	        !/* require.ensure */(function (require) {
	            _this.setState({
	                SplitMenuAsync: __webpack_require__(573).SplitMenu
	            });
	        }(__webpack_require__));
	    };
	    SplitTile.prototype.componentWillReceiveProps = function (nextProps) {
	        var menuStage = nextProps.menuStage, essence = nextProps.essence;
	        var splits = essence.splits;
	        if (menuStage) {
	            var newMaxItems = pill_tile_1.getMaxItems(menuStage.width, splits.toArray().length);
	            if (newMaxItems !== this.state.maxItems) {
	                this.setState({
	                    menuOpenOn: null,
	                    menuDimension: null,
	                    overflowMenuOpenOn: null,
	                    maxItems: newMaxItems
	                });
	            }
	        }
	    };
	    SplitTile.prototype.componentDidUpdate = function () {
	        var overflowMenuOpenOn = this.state.overflowMenuOpenOn;
	        if (overflowMenuOpenOn) {
	            var overflowMenu = this.getOverflowMenu();
	            if (overflowMenu)
	                this.overflowMenuDeferred.resolve(overflowMenu);
	        }
	    };
	    SplitTile.prototype.selectDimensionSplit = function (dimension, split, e) {
	        var target = dom_1.findParentWithClass(e.target, SPLIT_CLASS_NAME);
	        this.openMenu(dimension, split, target);
	    };
	    SplitTile.prototype.openMenu = function (dimension, split, target) {
	        var menuOpenOn = this.state.menuOpenOn;
	        if (menuOpenOn === target) {
	            this.closeMenu();
	            return;
	        }
	        var overflowMenu = this.getOverflowMenu();
	        var menuInside = null;
	        if (overflowMenu && dom_1.isInside(target, overflowMenu)) {
	            menuInside = overflowMenu;
	        }
	        this.setState({
	            menuOpenOn: target,
	            menuDimension: dimension,
	            menuSplit: split,
	            menuInside: menuInside
	        });
	    };
	    SplitTile.prototype.closeMenu = function () {
	        var menuOpenOn = this.state.menuOpenOn;
	        if (!menuOpenOn)
	            return;
	        this.setState({
	            menuOpenOn: null,
	            menuDimension: null,
	            menuInside: null,
	            menuSplit: null
	        });
	    };
	    SplitTile.prototype.getOverflowMenu = function () {
	        return document.getElementById(this.overflowMenuId);
	    };
	    SplitTile.prototype.openOverflowMenu = function (target) {
	        if (!target)
	            return Q(null);
	        var overflowMenuOpenOn = this.state.overflowMenuOpenOn;
	        if (overflowMenuOpenOn === target) {
	            this.closeOverflowMenu();
	            return Q(null);
	        }
	        this.overflowMenuDeferred = Q.defer();
	        this.setState({ overflowMenuOpenOn: target });
	        return this.overflowMenuDeferred.promise;
	    };
	    SplitTile.prototype.closeOverflowMenu = function () {
	        var overflowMenuOpenOn = this.state.overflowMenuOpenOn;
	        if (!overflowMenuOpenOn)
	            return;
	        this.setState({
	            overflowMenuOpenOn: null
	        });
	    };
	    SplitTile.prototype.removeSplit = function (split, e) {
	        var clicker = this.props.clicker;
	        clicker.removeSplit(split, index_1.VisStrategy.FairGame);
	        this.closeMenu();
	        this.closeOverflowMenu();
	        e.stopPropagation();
	    };
	    SplitTile.prototype.dragStart = function (dimension, split, splitIndex, e) {
	        var _a = this.props, essence = _a.essence, getUrlPrefix = _a.getUrlPrefix;
	        var dataTransfer = e.dataTransfer;
	        dataTransfer.effectAllowed = 'all';
	        if (getUrlPrefix) {
	            var newUrl = essence.changeSplit(index_1.SplitCombine.fromExpression(dimension.expression), index_1.VisStrategy.FairGame).getURL(getUrlPrefix());
	            dataTransfer.setData("text/url-list", newUrl);
	            dataTransfer.setData("text/plain", newUrl);
	        }
	        drag_manager_1.DragManager.setDragSplit(split, 'filter-tile');
	        drag_manager_1.DragManager.setDragDimension(dimension, 'filter-tile');
	        dom_1.setDragGhost(dataTransfer, dimension.title);
	        this.closeMenu();
	        this.closeOverflowMenu();
	    };
	    SplitTile.prototype.calculateDragPosition = function (e) {
	        var essence = this.props.essence;
	        var numItems = essence.splits.length();
	        var rect = ReactDOM.findDOMNode(this.refs['items']).getBoundingClientRect();
	        var x = dom_1.getXFromEvent(e);
	        var offset = x - rect.left;
	        return index_1.DragPosition.calculateFromOffset(offset, numItems, constants_1.CORE_ITEM_WIDTH, constants_1.CORE_ITEM_GAP);
	    };
	    SplitTile.prototype.canDrop = function (e) {
	        return Boolean(drag_manager_1.DragManager.getDragSplit() || drag_manager_1.DragManager.getDragDimension());
	    };
	    SplitTile.prototype.dragEnter = function (e) {
	        if (!this.canDrop(e))
	            return;
	        e.preventDefault();
	        this.setState({
	            dragPosition: this.calculateDragPosition(e)
	        });
	    };
	    SplitTile.prototype.dragOver = function (e) {
	        if (!this.canDrop(e))
	            return;
	        e.dataTransfer.dropEffect = 'move';
	        e.preventDefault();
	        var dragPosition = this.calculateDragPosition(e);
	        if (dragPosition.equals(this.state.dragPosition))
	            return;
	        this.setState({ dragPosition: dragPosition });
	    };
	    SplitTile.prototype.dragLeave = function (e) {
	        if (!this.canDrop(e))
	            return;
	        this.setState({
	            dragPosition: null
	        });
	    };
	    SplitTile.prototype.drop = function (e) {
	        if (!this.canDrop(e))
	            return;
	        e.preventDefault();
	        var _a = this.props, clicker = _a.clicker, essence = _a.essence;
	        var maxItems = this.state.maxItems;
	        var splits = essence.splits;
	        var newSplitCombine = null;
	        if (drag_manager_1.DragManager.getDragSplit()) {
	            newSplitCombine = drag_manager_1.DragManager.getDragSplit();
	        }
	        else if (drag_manager_1.DragManager.getDragDimension()) {
	            newSplitCombine = index_1.SplitCombine.fromExpression(drag_manager_1.DragManager.getDragDimension().expression);
	        }
	        if (newSplitCombine) {
	            var dragPosition = this.calculateDragPosition(e);
	            if (dragPosition.replace === maxItems) {
	                dragPosition = new index_1.DragPosition({ insert: dragPosition.replace });
	            }
	            if (dragPosition.isReplace()) {
	                clicker.changeSplits(splits.replaceByIndex(dragPosition.replace, newSplitCombine), index_1.VisStrategy.FairGame);
	            }
	            else {
	                clicker.changeSplits(splits.insertByIndex(dragPosition.insert, newSplitCombine), index_1.VisStrategy.FairGame);
	            }
	        }
	        this.setState({
	            dragPosition: null
	        });
	    };
	    SplitTile.prototype.splitMenuRequest = function (dimension) {
	        var splits = this.props.essence.splits;
	        var split = splits.findSplitForDimension(dimension);
	        if (!split)
	            return;
	        var targetRef = this.refs[dimension.name];
	        if (!targetRef)
	            return;
	        var target = ReactDOM.findDOMNode(targetRef);
	        if (!target)
	            return;
	        this.openMenu(dimension, split, target);
	    };
	    SplitTile.prototype.overflowButtonTarget = function () {
	        return ReactDOM.findDOMNode(this.refs['overflow']);
	    };
	    SplitTile.prototype.overflowButtonClick = function () {
	        this.openOverflowMenu(this.overflowButtonTarget());
	    };
	    ;
	    SplitTile.prototype.renderMenu = function () {
	        var _a = this.props, essence = _a.essence, clicker = _a.clicker, menuStage = _a.menuStage;
	        var _b = this.state, SplitMenuAsync = _b.SplitMenuAsync, menuOpenOn = _b.menuOpenOn, menuDimension = _b.menuDimension, menuSplit = _b.menuSplit, menuInside = _b.menuInside, overflowMenuOpenOn = _b.overflowMenuOpenOn;
	        if (!SplitMenuAsync || !menuDimension)
	            return null;
	        var onClose = this.closeMenu.bind(this);
	        return React.createElement(SplitMenuAsync, {clicker: clicker, essence: essence, containerStage: overflowMenuOpenOn ? null : menuStage, openOn: menuOpenOn, dimension: menuDimension, split: menuSplit, onClose: onClose, inside: menuInside});
	    };
	    SplitTile.prototype.renderOverflowMenu = function (items) {
	        var _this = this;
	        var overflowMenuOpenOn = this.state.overflowMenuOpenOn;
	        if (!overflowMenuOpenOn)
	            return null;
	        var segmentHeight = 29 + constants_1.CORE_ITEM_GAP;
	        var itemY = constants_1.CORE_ITEM_GAP;
	        var filterItems = items.map(function (item, i) {
	            var style = dom_1.transformStyle(0, itemY);
	            itemY += segmentHeight;
	            return _this.renderSplit(item, style, i);
	        });
	        return React.createElement(bubble_menu_1.BubbleMenu, {className: "overflow-menu", id: this.overflowMenuId, direction: "down", stage: index_1.Stage.fromSize(208, itemY), fixedSize: true, openOn: overflowMenuOpenOn, onClose: this.closeOverflowMenu.bind(this)}, filterItems);
	    };
	    SplitTile.prototype.renderOverflow = function (items, itemX) {
	        var essence = this.props.essence;
	        var dataCube = essence.dataCube;
	        var style = dom_1.transformStyle(itemX, 0);
	        return React.createElement("div", {className: dom_1.classNames('overflow', { 'all-continuous': items.every(function (item) { return item.getDimension(dataCube.dimensions).isContinuous(); }) }), ref: "overflow", key: "overflow", style: style, onClick: this.overflowButtonClick.bind(this)}, 
	            React.createElement("div", {className: "count"}, '+' + items.length), 
	            this.renderOverflowMenu(items));
	    };
	    SplitTile.prototype.renderSplit = function (split, style, i) {
	        var essence = this.props.essence;
	        var menuDimension = this.state.menuDimension;
	        var dataCube = essence.dataCube;
	        var dimension = split.getDimension(dataCube.dimensions);
	        if (!dimension)
	            throw new Error('dimension not found');
	        var dimensionName = dimension.name;
	        var classNames = [
	            SPLIT_CLASS_NAME,
	            'type-' + dimension.className
	        ];
	        if (dimension === menuDimension)
	            classNames.push('selected');
	        return React.createElement("div", {className: classNames.join(' '), key: split.toKey(), ref: dimensionName, draggable: true, onClick: this.selectDimensionSplit.bind(this, dimension, split), onDragStart: this.dragStart.bind(this, dimension, split, i), style: style}, 
	            React.createElement("div", {className: "reading"}, split.getTitle(dataCube.dimensions)), 
	            React.createElement("div", {className: "remove", onClick: this.removeSplit.bind(this, split)}, 
	                React.createElement(svg_icon_1.SvgIcon, {svg: __webpack_require__(327)})
	            ));
	    };
	    SplitTile.prototype.render = function () {
	        var _this = this;
	        var essence = this.props.essence;
	        var _a = this.state, dragPosition = _a.dragPosition, maxItems = _a.maxItems;
	        var splits = essence.splits;
	        var splitsArray = splits.toArray();
	        var itemX = 0;
	        var splitItems = splitsArray.slice(0, maxItems).map(function (split, i) {
	            var style = dom_1.transformStyle(itemX, 0);
	            itemX += pill_tile_1.SECTION_WIDTH;
	            return _this.renderSplit(split, style, i);
	        }, this);
	        var overflowItems = splitsArray.slice(maxItems);
	        if (overflowItems.length > 0) {
	            var overFlowStart = splitItems.length * pill_tile_1.SECTION_WIDTH;
	            splitItems.push(this.renderOverflow(overflowItems, overFlowStart));
	        }
	        return React.createElement("div", {className: "split-tile", onDragEnter: this.dragEnter.bind(this)}, 
	            React.createElement("div", {className: "title"}, constants_1.STRINGS.split), 
	            React.createElement("div", {className: "items", ref: "items"}, splitItems), 
	            dragPosition ? React.createElement(fancy_drag_indicator_1.FancyDragIndicator, {dragPosition: dragPosition}) : null, 
	            dragPosition ? React.createElement("div", {className: "drag-mask", onDragOver: this.dragOver.bind(this), onDragLeave: this.dragLeave.bind(this), onDragExit: this.dragLeave.bind(this), onDrop: this.drop.bind(this)}) : null, 
	            this.renderMenu());
	    };
	    return SplitTile;
	}(React.Component));
	exports.SplitTile = SplitTile;


/***/ },
/* 577 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(578);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./split-tile.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./split-tile.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 578 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".split-tile .overflow,.overflow-menu .split,.overflow-menu .filter,.split-tile .items .split{padding:0 0 0 9px;background:#b6e3fc;border:1px solid transparent;border-radius:4px;cursor:pointer;overflow:hidden;-webkit-transition:-webkit-transform 0.1s ease-in-out;transition:-webkit-transform 0.1s ease-in-out;transition:transform 0.1s ease-in-out;transition:transform 0.1s ease-in-out, -webkit-transform 0.1s ease-in-out;width:192px}.split-tile .overflow .reading,.overflow-menu .split .reading,.overflow-menu .filter .reading,.split-tile .items .split .reading{white-space:nowrap;overflow-x:hidden;text-overflow:ellipsis;pointer-events:none;white-space:nowrap;margin-right:20px;height:16px;margin-top:7px}.split-tile .overflow .remove,.overflow-menu .split .remove,.overflow-menu .filter .remove,.split-tile .items .split .remove{position:absolute;top:0;bottom:0;right:0;width:27px;text-align:center;padding-top:9px;cursor:pointer}.split-tile .overflow .remove svg,.overflow-menu .split .remove svg,.overflow-menu .filter .remove svg,.split-tile .items .split .remove svg{width:10px}.split-tile .overflow .remove path,.overflow-menu .split .remove path,.overflow-menu .filter .remove path,.split-tile .items .split .remove path{fill:rgba(0,0,0,0.2)}.split-tile .overflow .remove:hover path,.overflow-menu .split .remove:hover path,.overflow-menu .filter .remove:hover path,.split-tile .items .split .remove:hover path{fill:rgba(0,0,0,0.5)}.split-tile .overflow:hover,.overflow-menu .split:hover,.overflow-menu .filter:hover,.split-tile .items .split:hover,.split-tile .selected.overflow,.overflow-menu .selected.split,.overflow-menu .selected.filter,.split-tile .items .selected.split{background-color:#98d8fb}.split-tile .type-time.overflow,.overflow-menu .type-time.split,.overflow-menu .type-time.filter,.split-tile .items .type-time.split,.split-tile .type-number.overflow,.overflow-menu .type-number.split,.overflow-menu .type-number.filter,.split-tile .items .type-number.split{background:#c2eac4}.split-tile .type-time.overflow:hover,.overflow-menu .type-time.split:hover,.overflow-menu .type-time.filter:hover,.split-tile .items .type-time.split:hover,.split-tile .type-time.selected.overflow,.overflow-menu .type-time.selected.split,.overflow-menu .type-time.selected.filter,.split-tile .items .type-time.selected.split,.split-tile .type-number.overflow:hover,.overflow-menu .type-number.split:hover,.overflow-menu .type-number.filter:hover,.split-tile .items .type-number.split:hover,.split-tile .type-number.selected.overflow,.overflow-menu .type-number.selected.split,.overflow-menu .type-number.selected.filter,.split-tile .items .type-number.selected.split{background-color:#abe2ad}.split-tile .overflow,.split-tile .items .split{top:4px;bottom:4px}.split-tile{background:#fff;box-shadow:0 1px 1px 0 rgba(0,0,0,0.1)}.split-tile .title{position:absolute;top:0;bottom:0;left:0;width:64px;padding:12px 0 0 14px;font-size:12px;text-transform:uppercase;color:#999}.split-tile .overflow{position:absolute;left:0;padding:0 10px;width:40px}.split-tile .all-continuous.overflow{background:#c2eac4}.split-tile .overflow .count{pointer-events:none;white-space:nowrap;height:16px;margin-top:7px}.overflow-menu .split,.overflow-menu .filter{position:absolute;left:8px;top:0;height:29px}.overflow-menu .split.from-highlight,.overflow-menu .filter.from-highlight{border:1px dashed #168bc5;background:rgba(182,227,252,0.5)}.overflow-menu .split.from-highlight.type-time,.overflow-menu .split.from-highlight.type-number,.overflow-menu .filter.from-highlight.type-time,.overflow-menu .filter.from-highlight.type-number{border:1px dashed #449c53;background:rgba(194,234,196,0.5)}.split-tile .drag-mask{position:absolute;top:0;bottom:0;left:0;right:0}.split-tile .items{position:absolute;top:0;bottom:0;left:64px;right:0;-webkit-transition:height 0.1s ease-in-out;transition:height 0.1s ease-in-out;overflow:hidden}.split-tile .items .split{position:absolute;left:0}.split-tile .fancy-drag-indicator{position:absolute;top:0;bottom:0;left:64px;right:0}\n", ""]);

	// exports


/***/ },
/* 579 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(580);
	var React = __webpack_require__(5);
	var index_1 = __webpack_require__(202);
	var constants_1 = __webpack_require__(292);
	var bubble_menu_1 = __webpack_require__(297);
	var UserMenu = (function (_super) {
	    __extends(UserMenu, _super);
	    function UserMenu() {
	        _super.call(this);
	    }
	    UserMenu.prototype.render = function () {
	        var _a = this.props, openOn = _a.openOn, onClose = _a.onClose, user = _a.user, customization = _a.customization;
	        var stage = index_1.Stage.fromSize(200, 200);
	        return React.createElement(bubble_menu_1.BubbleMenu, {className: "user-menu", direction: "down", stage: stage, openOn: openOn, onClose: onClose}, 
	            React.createElement("ul", {className: "bubble-list"}, 
	                React.createElement("li", {className: "display-name"}, user.displayName), 
	                React.createElement("li", {className: "logout"}, 
	                    React.createElement("a", {href: customization.getLogoutHref()}, 
	                        React.createElement("div", null, constants_1.STRINGS.logout)
	                    )
	                ))
	        );
	    };
	    return UserMenu;
	}(React.Component));
	exports.UserMenu = UserMenu;


/***/ },
/* 580 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(581);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./user-menu.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./user-menu.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 581 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".user-menu ul.bubble-list li.display-name{pointer-events:none;color:#a6a6a6}\n", ""]);

	// exports


/***/ },
/* 582 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(583);
	var React = __webpack_require__(5);
	var formatter_1 = __webpack_require__(233);
	var dom_1 = __webpack_require__(300);
	var index_1 = __webpack_require__(202);
	var TICK_WIDTH = 5;
	var TEXT_OFFSET = 2;
	var VerticalAxis = (function (_super) {
	    __extends(VerticalAxis, _super);
	    function VerticalAxis() {
	        _super.call(this);
	    }
	    VerticalAxis.prototype.render = function () {
	        var _a = this.props, stage = _a.stage, ticks = _a.ticks, scale = _a.scale, topLineExtend = _a.topLineExtend, hideZero = _a.hideZero;
	        if (hideZero)
	            ticks = ticks.filter(function (tick) { return tick !== 0; });
	        var formatter = formatter_1.formatterFromData(ticks, index_1.Measure.DEFAULT_FORMAT);
	        var lines = ticks.map(function (tick) {
	            var y = dom_1.roundToHalfPx(scale(tick));
	            return React.createElement("line", {className: "tick", key: String(tick), x1: 0, y1: y, x2: TICK_WIDTH, y2: y});
	        });
	        var labelX = TICK_WIDTH + TEXT_OFFSET;
	        var dy = "0.31em";
	        var labels = ticks.map(function (tick) {
	            var y = scale(tick);
	            return React.createElement("text", {className: "tick", key: String(tick), x: labelX, y: y, dy: dy}, formatter(tick));
	        });
	        return React.createElement("g", {className: "vertical-axis", transform: stage.getTransform()}, 
	            React.createElement("line", {className: "border", x1: 0.5, y1: -topLineExtend, x2: 0.5, y2: stage.height}), 
	            lines, 
	            labels);
	    };
	    VerticalAxis.defaultProps = {
	        topLineExtend: 0
	    };
	    return VerticalAxis;
	}(React.Component));
	exports.VerticalAxis = VerticalAxis;


/***/ },
/* 583 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(584);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./vertical-axis.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./vertical-axis.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 584 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".vertical-axis{pointer-events:none}.vertical-axis line.border{stroke:#ccc}.vertical-axis line.tick{stroke:#ccc}.vertical-axis text{font-size:12px;fill:#666}\n", ""]);

	// exports


/***/ },
/* 585 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(586);
	var React = __webpack_require__(5);
	var VisMeasureLabel = (function (_super) {
	    __extends(VisMeasureLabel, _super);
	    function VisMeasureLabel() {
	        _super.call(this);
	    }
	    VisMeasureLabel.prototype.render = function () {
	        var _a = this.props, measure = _a.measure, datum = _a.datum;
	        return React.createElement("div", {className: "vis-measure-label"}, 
	            React.createElement("span", {className: "measure-title"}, measure.title), 
	            React.createElement("span", {className: "colon"}, ": "), 
	            React.createElement("span", {className: "measure-value"}, measure.formatFn(datum[measure.name])));
	    };
	    return VisMeasureLabel;
	}(React.Component));
	exports.VisMeasureLabel = VisMeasureLabel;


/***/ },
/* 586 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(587);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./vis-measure-label.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./vis-measure-label.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 587 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".vis-measure-label{pointer-events:none;white-space:nowrap}\n", ""]);

	// exports


/***/ },
/* 588 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(589);
	var React = __webpack_require__(5);
	var dom_1 = __webpack_require__(300);
	var svg_icon_1 = __webpack_require__(187);
	var vis_selector_menu_1 = __webpack_require__(591);
	var VisSelector = (function (_super) {
	    __extends(VisSelector, _super);
	    function VisSelector() {
	        _super.call(this);
	        this.state = {
	            menuOpenOn: null
	        };
	    }
	    VisSelector.prototype.openMenu = function (e) {
	        var menuOpenOn = this.state.menuOpenOn;
	        var target = dom_1.findParentWithClass(e.target, 'vis-selector');
	        if (menuOpenOn === target) {
	            this.closeMenu();
	            return;
	        }
	        this.setState({
	            menuOpenOn: target
	        });
	    };
	    VisSelector.prototype.closeMenu = function () {
	        this.setState({
	            menuOpenOn: null
	        });
	    };
	    VisSelector.prototype.render = function () {
	        var _a = this.props, clicker = _a.clicker, essence = _a.essence;
	        var menuOpenOn = this.state.menuOpenOn;
	        var visualization = essence.visualization;
	        var menu = null;
	        if (menuOpenOn) {
	            menu = React.createElement(vis_selector_menu_1.VisSelectorMenu, {
	                clicker: clicker,
	                essence: essence,
	                openOn: menuOpenOn,
	                onClose: this.closeMenu.bind(this)
	            });
	        }
	        return React.createElement("div", {className: dom_1.classNames('vis-selector', { active: menuOpenOn }), onClick: this.openMenu.bind(this)}, 
	            React.createElement("div", {className: "vis-item selected"}, 
	                React.createElement(svg_icon_1.SvgIcon, {svg: __webpack_require__(594)("./vis-" + visualization.name + '.svg')}), 
	                React.createElement("div", {className: "vis-title"}, visualization.title)), 
	            menu);
	    };
	    return VisSelector;
	}(React.Component));
	exports.VisSelector = VisSelector;


/***/ },
/* 589 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(590);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./vis-selector.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./vis-selector.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 590 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".vis-selector{background:#fff;box-shadow:0 1px 1px 0 rgba(0,0,0,0.1)}.vis-selector::before{position:absolute;top:0;bottom:0;left:0;right:0;content:'';z-index:6;background-color:rgba(255,255,255,0.65);pointer-events:none;opacity:0}.vis-selector::after{width:0;height:0;border-top:9px solid #666;border-bottom:0;border-left:7px solid transparent;border-right:7px solid transparent;content:'';z-index:7;position:absolute;top:50%;left:50%;margin-top:-6px;margin-left:-7px;pointer-events:none;opacity:0}.vis-selector:hover::after,.vis-selector:hover::before,.vis-selector.active::after,.vis-selector.active::before{opacity:1}.vis-selector .vis-item{display:inline-block;width:78px;height:70px;cursor:pointer}.vis-selector .vis-item .vis-title{position:absolute;left:0;right:0;bottom:7px;text-align:center;font-size:11px;font-weight:400;color:#666}.vis-selector .vis-item svg{position:absolute;top:3px;left:50%;width:53px;height:53px;margin-left:-27px}.vis-selector .vis-selector-menu{position:absolute;top:100%;right:0}\n", ""]);

	// exports


/***/ },
/* 591 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(592);
	var React = __webpack_require__(5);
	var ReactDOM = __webpack_require__(39);
	var svg_icon_1 = __webpack_require__(187);
	var dom_1 = __webpack_require__(300);
	var VisSelectorMenu = (function (_super) {
	    __extends(VisSelectorMenu, _super);
	    function VisSelectorMenu() {
	        _super.call(this);
	        this.globalMouseDownListener = this.globalMouseDownListener.bind(this);
	        this.globalKeyDownListener = this.globalKeyDownListener.bind(this);
	    }
	    VisSelectorMenu.prototype.componentDidMount = function () {
	        window.addEventListener('mousedown', this.globalMouseDownListener);
	        window.addEventListener('keydown', this.globalKeyDownListener);
	    };
	    VisSelectorMenu.prototype.componentWillUnmount = function () {
	        window.removeEventListener('mousedown', this.globalMouseDownListener);
	        window.removeEventListener('keydown', this.globalKeyDownListener);
	    };
	    VisSelectorMenu.prototype.globalMouseDownListener = function (e) {
	        var _a = this.props, onClose = _a.onClose, openOn = _a.openOn;
	        var myElement = ReactDOM.findDOMNode(this);
	        if (!myElement)
	            return;
	        var target = e.target;
	        if (dom_1.isInside(target, myElement) || dom_1.isInside(target, openOn))
	            return;
	        onClose();
	    };
	    VisSelectorMenu.prototype.globalKeyDownListener = function (e) {
	        if (!dom_1.escapeKey(e))
	            return;
	        var onClose = this.props.onClose;
	        onClose();
	    };
	    VisSelectorMenu.prototype.onVisSelect = function (v) {
	        var clicker = this.props.clicker;
	        clicker.changeVisualization(v);
	        this.setState({
	            menuOpen: false
	        });
	    };
	    VisSelectorMenu.prototype.renderVisItem = function (v) {
	        var essence = this.props.essence;
	        var visualization = essence.visualization;
	        return React.createElement("div", {className: dom_1.classNames('vis-item', (v.name === visualization.name ? 'selected' : 'not-selected')), key: v.name, onClick: this.onVisSelect.bind(this, v)}, 
	            React.createElement(svg_icon_1.SvgIcon, {svg: __webpack_require__(594)("./vis-" + v.name + '.svg')}), 
	            React.createElement("div", {className: "vis-title"}, v.title));
	    };
	    VisSelectorMenu.prototype.render = function () {
	        var _this = this;
	        var essence = this.props.essence;
	        var visualizations = essence.visualizations;
	        var visItems = null;
	        if (visualizations) {
	            visItems = visualizations.map(function (v) {
	                return _this.renderVisItem(v);
	            });
	        }
	        return React.createElement("div", {className: "vis-selector-menu"}, visItems);
	    };
	    return VisSelectorMenu;
	}(React.Component));
	exports.VisSelectorMenu = VisSelectorMenu;


/***/ },
/* 592 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(593);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./vis-selector-menu.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./vis-selector-menu.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 593 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".vis-selector-menu{background:#fff;border-radius:2px;box-shadow:0 3px 10px 0 rgba(0,0,0,0.26),0 0 3px 0 rgba(0,0,0,0.16)}.vis-selector-menu{z-index:8;font-size:0;width:272px;padding:16px}.vis-selector-menu .vis-item{margin:1px;border-radius:2px}.vis-selector-menu .vis-item:hover{box-shadow:inset 0 0 0 1px #dedede}.vis-selector-menu .vis-item.selected{box-shadow:inset 0 0 0 1px #d1d1d1}\n", ""]);

	// exports


/***/ },
/* 594 */
/***/ function(module, exports, __webpack_require__) {

	var map = {
		"./vis-bar-chart.svg": 515,
		"./vis-geo.svg": 516,
		"./vis-heatmap.svg": 517,
		"./vis-line-chart.svg": 518,
		"./vis-scatter-plot.svg": 519,
		"./vis-stacked-bars.svg": 520,
		"./vis-table.svg": 521,
		"./vis-totals.svg": 522,
		"./vis-treemap.svg": 523
	};
	function webpackContext(req) {
		return __webpack_require__(webpackContextResolve(req));
	};
	function webpackContextResolve(req) {
		return map[req] || (function() { throw new Error("Cannot find module '" + req + "'.") }());
	};
	webpackContext.keys = function webpackContextKeys() {
		return Object.keys(map);
	};
	webpackContext.resolve = webpackContextResolve;
	module.exports = webpackContext;
	webpackContext.id = 594;


/***/ },
/* 595 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(596);
	var React = __webpack_require__(5);
	var index_1 = __webpack_require__(202);
	var dom_1 = __webpack_require__(300);
	var immutable_form_delegate_1 = __webpack_require__(598);
	var string_1 = __webpack_require__(402);
	var index_2 = __webpack_require__(293);
	var constants_1 = __webpack_require__(292);
	var labels_1 = __webpack_require__(272);
	var AddCollectionModal = (function (_super) {
	    __extends(AddCollectionModal, _super);
	    function AddCollectionModal() {
	        _super.call(this);
	        this.delegate = new immutable_form_delegate_1.ImmutableFormDelegate(this);
	    }
	    AddCollectionModal.prototype.initFromProps = function (props) {
	        this.setState({
	            canSave: true,
	            newInstance: new index_1.Collection({
	                name: string_1.generateUniqueName('c', this.isNameUnique.bind(this)),
	                tiles: [],
	                title: 'New collection'
	            })
	        });
	    };
	    AddCollectionModal.prototype.componentDidMount = function () {
	        this.initFromProps(this.props);
	    };
	    AddCollectionModal.prototype.save = function () {
	        if (this.state.canSave)
	            this.props.onSave(this.state.newInstance);
	    };
	    AddCollectionModal.prototype.isNameUnique = function (name) {
	        var collections = this.props.collections;
	        if (collections.filter(function (c) { return c.name === name; }).length > 0)
	            return false;
	        return true;
	    };
	    AddCollectionModal.prototype.render = function () {
	        var _a = this.state, canSave = _a.canSave, errors = _a.errors, newInstance = _a.newInstance;
	        var collections = this.props.collections;
	        if (!newInstance)
	            return null;
	        var makeLabel = index_2.FormLabel.simpleGenerator(labels_1.COLLECTION, errors, true);
	        var makeTextInput = index_2.ImmutableInput.simpleGenerator(newInstance, this.delegate.onChange);
	        return React.createElement(index_2.Modal, {className: "add-collection-modal", title: constants_1.STRINGS.addNewCollection, onClose: this.props.onCancel, onEnter: this.save.bind(this)}, 
	            React.createElement("form", {className: "general vertical"}, 
	                makeLabel('title'), 
	                makeTextInput('title', /^.+$/, true), 
	                makeLabel('description'), 
	                makeTextInput('description')), 
	            React.createElement("div", {className: "button-bar"}, 
	                React.createElement(index_2.Button, {className: dom_1.classNames("save", { disabled: !canSave }), title: "Create", type: "primary", onClick: this.save.bind(this)}), 
	                React.createElement(index_2.Button, {className: "cancel", title: "Cancel", type: "secondary", onClick: this.props.onCancel})));
	    };
	    return AddCollectionModal;
	}(React.Component));
	exports.AddCollectionModal = AddCollectionModal;


/***/ },
/* 596 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(597);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./add-collection-modal.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./add-collection-modal.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 597 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".add-collection-modal form{width:448px}.add-collection-modal form.vertical>*{display:block}.add-collection-modal form .dropdown .dropdown-label{margin-bottom:8px}.add-collection-modal form input:not(.actionable),.add-collection-modal form .input:not(.actionable),.add-collection-modal form .checkbox:not(.actionable){margin-bottom:25px}.add-collection-modal form .checkbox{height:20px;width:100%}.add-collection-modal form .checkbox .label{position:absolute;left:25px;top:5px}.add-collection-modal form .checkbox .label{text-transform:uppercase;font-size:12px;color:#a6a6a6;margin-bottom:5px}.add-collection-modal form input{border:1px solid #d4d4d4;border-radius:2px;box-shadow:inset 0 1px 1px rgba(0,0,0,0.13);padding-left:6px;padding-right:6px;width:100%;height:30px}.add-collection-modal form input:hover{border-color:#b8b8b8}.add-collection-modal form input:focus{border-color:#1ea3e6}.add-collection-modal form input.error{border-color:#e24c4c}.add-collection-modal form{width:100%}\n", ""]);

	// exports


/***/ },
/* 598 */
/***/ function(module, exports) {

	"use strict";
	var ImmutableFormDelegate = (function () {
	    function ImmutableFormDelegate(form) {
	        this.form = form;
	        this.form.state = {
	            canSave: false,
	            errors: {}
	        };
	        this.onChange = this.onChange.bind(this);
	        this.updateErrors = this.updateErrors.bind(this);
	    }
	    ImmutableFormDelegate.prototype.setState = function (state, callback) {
	        return this.form.setState.call(this.form, state, callback);
	    };
	    ImmutableFormDelegate.prototype.updateErrors = function (path, isValid, error) {
	        var errors = this.form.state.errors;
	        errors[path] = isValid ? false : error;
	        var canSave = true;
	        for (var key in errors)
	            canSave = canSave && (errors[key] === false);
	        return { errors: errors, canSave: canSave };
	    };
	    ImmutableFormDelegate.prototype.onChange = function (newItem, isValid, path, error) {
	        var _a = this.updateErrors(path, isValid, error), errors = _a.errors, canSave = _a.canSave;
	        if (isValid) {
	            this.setState({
	                errors: errors,
	                newInstance: newItem,
	                canSave: canSave
	            });
	        }
	        else {
	            this.setState({
	                errors: errors,
	                canSave: false
	            });
	        }
	    };
	    return ImmutableFormDelegate;
	}());
	exports.ImmutableFormDelegate = ImmutableFormDelegate;


/***/ },
/* 599 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(600);
	var React = __webpack_require__(5);
	var index_1 = __webpack_require__(202);
	var dom_1 = __webpack_require__(300);
	var string_1 = __webpack_require__(402);
	var index_2 = __webpack_require__(293);
	var constants_1 = __webpack_require__(292);
	var labels_1 = __webpack_require__(272);
	var immutable_form_delegate_1 = __webpack_require__(598);
	var AddCollectionTileModal = (function (_super) {
	    __extends(AddCollectionTileModal, _super);
	    function AddCollectionTileModal() {
	        _super.call(this);
	        this.delegate = new immutable_form_delegate_1.ImmutableFormDelegate(this);
	    }
	    AddCollectionTileModal.prototype.getTitleFromEssence = function (essence) {
	        var splits = essence.splits;
	        if (splits.length() === 0)
	            return essence.selectedMeasures.map(function (m) {
	                return essence.dataCube.getMeasure(m).title;
	            }).join(', ');
	        var dimensions = [];
	        var measures = [];
	        splits.forEach(function (split) {
	            var dimension = split.getDimension(essence.dataCube.dimensions);
	            var sortOn = index_1.SortOn.fromSortAction(split.sortAction, essence.dataCube, dimension);
	            dimensions.push(dimension.title);
	            measures.push(index_1.SortOn.getTitle(sortOn));
	        });
	        return dimensions.join(', ') + " by " + measures.join(', ');
	    };
	    AddCollectionTileModal.prototype.initFromProps = function (props) {
	        var collection = props.collection, collections = props.collections, essence = props.essence, dataCube = props.dataCube;
	        var collectionMode = 'none';
	        var selectedCollection;
	        if (collections) {
	            collectionMode = collections.length > 0 ? 'picking' : 'adding';
	            selectedCollection = collections.length > 0 ? collections[0] : new index_1.Collection({
	                name: string_1.generateUniqueName('c', function () { return true; }),
	                tiles: [],
	                title: 'New collection'
	            });
	        }
	        else {
	            selectedCollection = collection;
	        }
	        this.setState({
	            canSave: !!selectedCollection,
	            collection: selectedCollection,
	            collectionMode: collectionMode,
	            newInstance: new index_1.CollectionTile({
	                name: string_1.generateUniqueName('i', this.isItemNameUnique.bind(this, selectedCollection)),
	                title: this.getTitleFromEssence(essence),
	                description: '',
	                essence: essence,
	                group: null,
	                dataCube: dataCube
	            })
	        });
	    };
	    AddCollectionTileModal.prototype.componentDidMount = function () {
	        this.initFromProps(this.props);
	    };
	    AddCollectionTileModal.prototype.componentWillReceiveProps = function (nextProps) {
	        if (!this.state.newInstance)
	            this.initFromProps(nextProps);
	    };
	    AddCollectionTileModal.prototype.save = function () {
	        var _a = this.state, canSave = _a.canSave, collection = _a.collection, newInstance = _a.newInstance;
	        if (canSave && this.props.onSave)
	            this.props.onSave(collection, newInstance);
	    };
	    AddCollectionTileModal.prototype.isItemNameUnique = function (collection, name) {
	        if (!collection)
	            return true;
	        if (collection.tiles.filter(function (tile) { return tile.name === name; }).length > 0) {
	            return false;
	        }
	        return true;
	    };
	    AddCollectionTileModal.prototype.renderCollectionDropdown = function () {
	        var _this = this;
	        var _a = this.state, collection = _a.collection, newInstance = _a.newInstance;
	        var collections = this.props.collections;
	        if (!collections || collections.length === 0)
	            return null;
	        var MyDropDown = index_2.Dropdown.specialize();
	        var setCollection = function (c) {
	            _this.setState({
	                collection: c,
	                newInstance: newInstance.change('name', string_1.generateUniqueName('i', c.isNameAvailable))
	            });
	        };
	        return React.createElement(MyDropDown, {label: "Collection", items: collections, selectedItem: collection, renderItem: function (c) { return c ? (c.title || '<no title>') : 'Pick a collection'; }, keyItem: function (c) { return c.name; }, onSelect: setCollection});
	    };
	    AddCollectionTileModal.prototype.renderCollectionPicker = function () {
	        var _this = this;
	        var collections = this.props.collections;
	        var _a = this.state, newInstance = _a.newInstance, collection = _a.collection, collectionMode = _a.collectionMode;
	        var isCollectionNameUnique = function (name) {
	            return collections.filter(function (c) { return c.name === name; }).length === 0;
	        };
	        var toggleCollectionMode = function () {
	            var newMode = collectionMode === 'picking' ? 'adding' : 'picking';
	            var collection = undefined;
	            if (newMode === 'adding') {
	                collection = new index_1.Collection({
	                    name: string_1.generateUniqueName('c', isCollectionNameUnique),
	                    tiles: [],
	                    title: 'New collection'
	                });
	            }
	            else {
	                collection = collections[0];
	            }
	            _this.setState({
	                collectionMode: newMode,
	                collection: collection
	            });
	        };
	        var onCollectionChange = function (newCollection) {
	            _this.setState({
	                collection: newCollection,
	                newInstance: newInstance.change('name', string_1.generateUniqueName('i', _this.isItemNameUnique.bind(_this, newCollection)))
	            });
	        };
	        if (collectionMode === 'none')
	            return null;
	        if (collectionMode === 'picking') {
	            return React.createElement("div", {className: "collection-picker"}, 
	                this.renderCollectionDropdown(), 
	                React.createElement("div", {className: "new-collection", onClick: toggleCollectionMode}, "Or add a new collection"));
	        }
	        else {
	            return React.createElement("div", {className: "collection-picker"}, 
	                index_2.FormLabel.dumbLabel("Collection title"), 
	                React.createElement(index_2.ImmutableInput, {className: "actionable", instance: collection, path: "title", onChange: onCollectionChange, focusOnStartUp: true}), 
	                collections.length > 0 ?
	                    React.createElement("div", {className: "new-collection", onClick: toggleCollectionMode}, "Or pick an existing collection")
	                    : React.createElement("div", {className: "new-collection disabled"}, "This will be a new collection"));
	        }
	    };
	    AddCollectionTileModal.prototype.toggleConvertToFixed = function () {
	        var _a = this.props, essence = _a.essence, timekeeper = _a.timekeeper;
	        var newInstance = this.state.newInstance;
	        var convertToFixedTime = !this.state.convertToFixedTime;
	        if (convertToFixedTime && essence.filter.isRelative()) {
	            newInstance = newInstance.changeEssence(essence.convertToSpecificFilter(timekeeper));
	        }
	        else {
	            newInstance = newInstance.changeEssence(essence);
	        }
	        this.setState({
	            convertToFixedTime: convertToFixedTime,
	            newInstance: newInstance
	        });
	    };
	    AddCollectionTileModal.prototype.render = function () {
	        var _a = this.state, canSave = _a.canSave, errors = _a.errors, newInstance = _a.newInstance, collectionMode = _a.collectionMode, convertToFixedTime = _a.convertToFixedTime;
	        var _b = this.props, collections = _b.collections, onCancel = _b.onCancel, essence = _b.essence;
	        if (!newInstance)
	            return null;
	        var makeLabel = index_2.FormLabel.simpleGenerator(labels_1.COLLECTION_ITEM, errors, true);
	        var makeTextInput = index_2.ImmutableInput.simpleGenerator(newInstance, this.delegate.onChange);
	        var isRelative = essence.filter.isRelative();
	        return React.createElement(index_2.Modal, {className: "add-collection-tile-modal", title: constants_1.STRINGS.addNewTile, onClose: onCancel, onEnter: this.save.bind(this)}, 
	            React.createElement("form", {className: "general vertical"}, 
	                this.renderCollectionPicker(), 
	                makeLabel('title'), 
	                makeTextInput('title', /^.+$/, collectionMode !== 'adding'), 
	                makeLabel('description'), 
	                makeTextInput('description', /^.*$/), 
	                isRelative ?
	                    React.createElement(index_2.Checkbox, {selected: convertToFixedTime, onClick: this.toggleConvertToFixed.bind(this), label: constants_1.STRINGS.convertToFixedTime})
	                    : null), 
	            React.createElement("div", {className: "button-bar"}, 
	                React.createElement(index_2.Button, {className: dom_1.classNames("save", { disabled: !canSave }), title: "Add to collection", type: "primary", onClick: this.save.bind(this)}), 
	                React.createElement(index_2.Button, {className: "cancel", title: "Cancel", type: "secondary", onClick: onCancel})));
	    };
	    return AddCollectionTileModal;
	}(React.Component));
	exports.AddCollectionTileModal = AddCollectionTileModal;


/***/ },
/* 600 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(601);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./add-collection-tile-modal.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./add-collection-tile-modal.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 601 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".add-collection-tile-modal form{width:448px}.add-collection-tile-modal form.vertical>*{display:block}.add-collection-tile-modal form .dropdown .dropdown-label{margin-bottom:8px}.add-collection-tile-modal form input:not(.actionable),.add-collection-tile-modal form .input:not(.actionable),.add-collection-tile-modal form .checkbox:not(.actionable){margin-bottom:25px}.add-collection-tile-modal form .checkbox{height:20px;width:100%}.add-collection-tile-modal form .checkbox .label{position:absolute;left:25px;top:5px}.add-collection-tile-modal form .checkbox .label{text-transform:uppercase;font-size:12px;color:#a6a6a6;margin-bottom:5px}.add-collection-tile-modal form input{border:1px solid #d4d4d4;border-radius:2px;box-shadow:inset 0 1px 1px rgba(0,0,0,0.13);padding-left:6px;padding-right:6px;width:100%;height:30px}.add-collection-tile-modal form input:hover{border-color:#b8b8b8}.add-collection-tile-modal form input:focus{border-color:#1ea3e6}.add-collection-tile-modal form input.error{border-color:#e24c4c}.add-collection-tile-modal form{width:100%}.add-collection-tile-modal .new-collection{margin:7px 0 23px 1px;font-size:11px;cursor:pointer;color:#1ea3e6}.add-collection-tile-modal .new-collection:not(.disabled):hover{text-decoration:underline}.add-collection-tile-modal .new-collection.disabled{color:#999;cursor:initial}\n", ""]);

	// exports


/***/ },
/* 602 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(603);
	var React = __webpack_require__(5);
	var cluster_1 = __webpack_require__(219);
	var index_1 = __webpack_require__(293);
	var constants_1 = __webpack_require__(292);
	var labels_1 = __webpack_require__(272);
	var string_1 = __webpack_require__(402);
	var array_1 = __webpack_require__(605);
	var immutable_form_delegate_1 = __webpack_require__(598);
	var ClusterSeedModal = (function (_super) {
	    __extends(ClusterSeedModal, _super);
	    function ClusterSeedModal() {
	        _super.call(this);
	        this.delegate = new immutable_form_delegate_1.ImmutableFormDelegate(this);
	    }
	    ClusterSeedModal.prototype.initFromProps = function (props) {
	        var clusters = props.clusters;
	        if (!clusters)
	            return;
	        this.setState({
	            newInstance: new cluster_1.Cluster({
	                name: string_1.generateUniqueName('cl', function (name) { return array_1.indexByAttribute(clusters, 'name', name) === -1; }),
	                type: 'druid'
	            })
	        });
	    };
	    ClusterSeedModal.prototype.componentWillreceiveProps = function (nextProps) {
	        this.initFromProps(nextProps);
	    };
	    ClusterSeedModal.prototype.componentDidMount = function () {
	        this.initFromProps(this.props);
	    };
	    ClusterSeedModal.prototype.onNext = function () {
	        this.props.onNext(this.state.newInstance);
	    };
	    ClusterSeedModal.prototype.render = function () {
	        var _a = this.props, onNext = _a.onNext, onCancel = _a.onCancel;
	        var _b = this.state, newInstance = _b.newInstance, errors = _b.errors;
	        if (!newInstance)
	            return null;
	        var makeLabel = index_1.FormLabel.simpleGenerator(labels_1.CLUSTER, errors, true);
	        var makeTextInput = index_1.ImmutableInput.simpleGenerator(newInstance, this.delegate.onChange);
	        var makeDropDownInput = index_1.ImmutableDropdown.simpleGenerator(newInstance, this.delegate.onChange);
	        return React.createElement(index_1.Modal, {className: "cluster-seed-modal", title: constants_1.STRINGS.connectNewCluster, onClose: this.props.onCancel}, 
	            React.createElement("form", null, 
	                makeLabel('type'), 
	                makeDropDownInput('type', cluster_1.Cluster.TYPE_VALUES.map(function (type) { return { value: type, label: type }; })), 
	                makeLabel('host'), 
	                makeTextInput('host', /^.+$/)), 
	            React.createElement("div", {className: "button-bar"}, 
	                React.createElement(index_1.Button, {type: "primary", title: constants_1.STRINGS.next + ": " + constants_1.STRINGS.configureCluster, onClick: this.onNext.bind(this)}), 
	                React.createElement(index_1.Button, {className: "cancel", title: "Cancel", type: "secondary", onClick: onCancel})));
	    };
	    return ClusterSeedModal;
	}(React.Component));
	exports.ClusterSeedModal = ClusterSeedModal;


/***/ },
/* 603 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(604);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./cluster-seed-modal.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./cluster-seed-modal.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 604 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".cluster-seed-modal form{width:448px}.cluster-seed-modal form.vertical>*{display:block}.cluster-seed-modal form .dropdown .dropdown-label{margin-bottom:8px}.cluster-seed-modal form input:not(.actionable),.cluster-seed-modal form .input:not(.actionable),.cluster-seed-modal form .checkbox:not(.actionable){margin-bottom:25px}.cluster-seed-modal form .checkbox{height:20px;width:100%}.cluster-seed-modal form .checkbox .label{position:absolute;left:25px;top:5px}.cluster-seed-modal form .checkbox .label{text-transform:uppercase;font-size:12px;color:#a6a6a6;margin-bottom:5px}.cluster-seed-modal form input{border:1px solid #d4d4d4;border-radius:2px;box-shadow:inset 0 1px 1px rgba(0,0,0,0.13);padding-left:6px;padding-right:6px;width:100%;height:30px}.cluster-seed-modal form input:hover{border-color:#b8b8b8}.cluster-seed-modal form input:focus{border-color:#1ea3e6}.cluster-seed-modal form input.error{border-color:#e24c4c}.cluster-seed-modal form{width:100%}\n", ""]);

	// exports


/***/ },
/* 605 */
/***/ function(module, exports) {

	"use strict";
	function move(array, oldIndex, newIndex) {
	    array.splice(newIndex, 0, array.splice(oldIndex, 1)[0]);
	}
	exports.move = move;
	function indexByAttribute(array, key, value) {
	    if (!array || !array.length)
	        return -1;
	    var n = array.length;
	    for (var i = 0; i < n; i++) {
	        if (array[i][key] === value)
	            return i;
	    }
	    return -1;
	}
	exports.indexByAttribute = indexByAttribute;


/***/ },
/* 606 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(607);
	var React = __webpack_require__(5);
	var index_1 = __webpack_require__(202);
	var index_2 = __webpack_require__(293);
	var constants_1 = __webpack_require__(292);
	var labels_1 = __webpack_require__(272);
	var string_1 = __webpack_require__(402);
	var array_1 = __webpack_require__(605);
	var immutable_form_delegate_1 = __webpack_require__(598);
	var DataCubeSeedModal = (function (_super) {
	    __extends(DataCubeSeedModal, _super);
	    function DataCubeSeedModal() {
	        _super.call(this);
	        this.delegate = new immutable_form_delegate_1.ImmutableFormDelegate(this);
	    }
	    DataCubeSeedModal.prototype.initFromProps = function (props) {
	        var dataCubes = props.dataCubes, clusters = props.clusters;
	        if (!dataCubes)
	            return;
	        var clusterName = clusters.length ? clusters[0].name : 'native';
	        this.setState({
	            newInstance: new index_1.DataCube({
	                name: string_1.generateUniqueName('dc', function (name) { return array_1.indexByAttribute(dataCubes, 'name', name) === -1; }),
	                clusterName: clusterName,
	                source: ''
	            })
	        });
	    };
	    DataCubeSeedModal.prototype.componentWillreceiveProps = function (nextProps) {
	        this.initFromProps(nextProps);
	    };
	    DataCubeSeedModal.prototype.componentDidMount = function () {
	        this.initFromProps(this.props);
	    };
	    DataCubeSeedModal.prototype.onNext = function () {
	        this.props.onNext(this.state.newInstance, this.state.autoFill);
	    };
	    DataCubeSeedModal.prototype.toggleAutoFill = function () {
	        this.setState({
	            autoFill: !this.state.autoFill
	        });
	    };
	    DataCubeSeedModal.prototype.render = function () {
	        var _a = this.props, onNext = _a.onNext, onCancel = _a.onCancel;
	        var _b = this.state, newInstance = _b.newInstance, errors = _b.errors, autoFill = _b.autoFill;
	        if (!newInstance)
	            return null;
	        var makeLabel = index_2.FormLabel.simpleGenerator(labels_1.DATA_CUBE, errors, true);
	        var makeTextInput = index_2.ImmutableInput.simpleGenerator(newInstance, this.delegate.onChange);
	        var makeDropDownInput = index_2.ImmutableDropdown.simpleGenerator(newInstance, this.delegate.onChange);
	        return React.createElement(index_2.Modal, {className: "data-cube-seed-modal", title: constants_1.STRINGS.createDataCube, onClose: this.props.onCancel}, 
	            React.createElement("form", null, 
	                makeLabel('source'), 
	                makeDropDownInput('source', []), 
	                React.createElement(index_2.Checkbox, {selected: autoFill, onClick: this.toggleAutoFill.bind(this), label: constants_1.STRINGS.autoFillDimensionsAndMeasures})), 
	            React.createElement("div", {className: "button-bar"}, 
	                React.createElement(index_2.Button, {type: "primary", title: constants_1.STRINGS.next + ": " + constants_1.STRINGS.configureDataCube, onClick: this.onNext.bind(this)}), 
	                React.createElement(index_2.Button, {className: "cancel", title: "Cancel", type: "secondary", onClick: onCancel})));
	    };
	    return DataCubeSeedModal;
	}(React.Component));
	exports.DataCubeSeedModal = DataCubeSeedModal;


/***/ },
/* 607 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(608);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./data-cube-seed-modal.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./data-cube-seed-modal.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 608 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".data-cube-seed-modal form{width:448px}.data-cube-seed-modal form.vertical>*{display:block}.data-cube-seed-modal form .dropdown .dropdown-label{margin-bottom:8px}.data-cube-seed-modal form input:not(.actionable),.data-cube-seed-modal form .input:not(.actionable),.data-cube-seed-modal form .checkbox:not(.actionable){margin-bottom:25px}.data-cube-seed-modal form .checkbox{height:20px;width:100%}.data-cube-seed-modal form .checkbox .label{position:absolute;left:25px;top:5px}.data-cube-seed-modal form .checkbox .label{text-transform:uppercase;font-size:12px;color:#a6a6a6;margin-bottom:5px}.data-cube-seed-modal form input{border:1px solid #d4d4d4;border-radius:2px;box-shadow:inset 0 1px 1px rgba(0,0,0,0.13);padding-left:6px;padding-right:6px;width:100%;height:30px}.data-cube-seed-modal form input:hover{border-color:#b8b8b8}.data-cube-seed-modal form input:focus{border-color:#1ea3e6}.data-cube-seed-modal form input.error{border-color:#e24c4c}.data-cube-seed-modal form{width:100%}\n", ""]);

	// exports


/***/ },
/* 609 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(610);
	var React = __webpack_require__(5);
	var dom_1 = __webpack_require__(300);
	var index_1 = __webpack_require__(293);
	var index_2 = __webpack_require__(202);
	var labels_1 = __webpack_require__(272);
	var immutable_form_delegate_1 = __webpack_require__(598);
	var DimensionModal = (function (_super) {
	    __extends(DimensionModal, _super);
	    function DimensionModal() {
	        _super.call(this);
	        this.delegate = new immutable_form_delegate_1.ImmutableFormDelegate(this);
	    }
	    DimensionModal.prototype.initStateFromProps = function (props) {
	        if (props.dimension) {
	            this.setState({
	                newInstance: new index_2.Dimension(props.dimension.valueOf()),
	                canSave: false,
	                errors: {}
	            });
	        }
	    };
	    DimensionModal.prototype.componentWillReceiveProps = function (nextProps) {
	        this.initStateFromProps(nextProps);
	    };
	    DimensionModal.prototype.componentDidMount = function () {
	        this.initStateFromProps(this.props);
	    };
	    DimensionModal.prototype.save = function () {
	        if (!this.state.canSave)
	            return;
	        this.props.onSave(this.state.newInstance);
	    };
	    DimensionModal.prototype.render = function () {
	        var dimension = this.props.dimension;
	        var _a = this.state, newInstance = _a.newInstance, canSave = _a.canSave, errors = _a.errors;
	        var saveButtonDisabled = !canSave || dimension.equals(newInstance);
	        if (!newInstance)
	            return null;
	        var isTime = newInstance.kind === 'time';
	        var isContinuous = newInstance.isContinuous();
	        var makeLabel = index_1.FormLabel.simpleGenerator(labels_1.DIMENSION, errors, true);
	        var makeTextInput = index_1.ImmutableInput.simpleGenerator(newInstance, this.delegate.onChange);
	        var makeDropDownInput = index_1.ImmutableDropdown.simpleGenerator(newInstance, this.delegate.onChange);
	        return React.createElement(index_1.Modal, {className: "dimension-modal", title: dimension.title, onClose: this.props.onClose, onEnter: this.save.bind(this)}, 
	            React.createElement("form", {className: "general vertical"}, 
	                makeLabel('title'), 
	                makeTextInput('title', /^.+$/, true), 
	                makeLabel('kind'), 
	                makeDropDownInput('kind', DimensionModal.KINDS), 
	                makeLabel('formula'), 
	                makeTextInput('formula'), 
	                makeLabel('url'), 
	                makeTextInput('url'), 
	                isTime ? makeLabel('granularities') : null, 
	                isTime ? React.createElement(index_1.ImmutableInput, {instance: newInstance, path: 'granularities', onChange: this.delegate.onChange, valueToString: function (value) { return value ? value.map(index_2.granularityToString).join(', ') : undefined; }, stringToValue: function (str) { return str.split(/\s*,\s*/).map(index_2.granularityFromJS); }}) : null, 
	                isContinuous ? makeLabel('bucketingStrategy') : null, 
	                isContinuous ? makeDropDownInput('bucketingStrategy', DimensionModal.BUCKETING_STRATEGIES) : null), 
	            React.createElement("div", {className: "button-bar"}, 
	                React.createElement(index_1.Button, {className: dom_1.classNames("save", { disabled: saveButtonDisabled }), title: "OK", type: "primary", onClick: this.save.bind(this)}), 
	                React.createElement(index_1.Button, {className: "cancel", title: "Cancel", type: "secondary", onClick: this.props.onClose})));
	    };
	    DimensionModal.KINDS = [
	        { label: 'Time', value: 'time' },
	        { label: 'String', value: 'string' },
	        { label: 'Boolean', value: 'boolean' },
	        { label: 'String-geo', value: 'string-geo' }
	    ];
	    DimensionModal.BUCKETING_STRATEGIES = [
	        { label: 'Bucket', value: index_2.Dimension.defaultBucket },
	        { label: 'Don’t Bucket', value: index_2.Dimension.defaultNoBucket }
	    ];
	    return DimensionModal;
	}(React.Component));
	exports.DimensionModal = DimensionModal;


/***/ },
/* 610 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(611);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./dimension-modal.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./dimension-modal.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 611 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".dimension-modal form{width:448px}.dimension-modal form.vertical>*{display:block}.dimension-modal form .dropdown .dropdown-label{margin-bottom:8px}.dimension-modal form input:not(.actionable),.dimension-modal form .input:not(.actionable),.dimension-modal form .checkbox:not(.actionable){margin-bottom:25px}.dimension-modal form .checkbox{height:20px;width:100%}.dimension-modal form .checkbox .label{position:absolute;left:25px;top:5px}.dimension-modal form .checkbox .label{text-transform:uppercase;font-size:12px;color:#a6a6a6;margin-bottom:5px}.dimension-modal form input{border:1px solid #d4d4d4;border-radius:2px;box-shadow:inset 0 1px 1px rgba(0,0,0,0.13);padding-left:6px;padding-right:6px;width:100%;height:30px}.dimension-modal form input:hover{border-color:#b8b8b8}.dimension-modal form input:focus{border-color:#1ea3e6}.dimension-modal form input.error{border-color:#e24c4c}.dimension-modal form{width:100%}\n", ""]);

	// exports


/***/ },
/* 612 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(613);
	var React = __webpack_require__(5);
	var dom_1 = __webpack_require__(300);
	var index_1 = __webpack_require__(293);
	var index_2 = __webpack_require__(202);
	var labels_1 = __webpack_require__(272);
	var immutable_form_delegate_1 = __webpack_require__(598);
	var MeasureModal = (function (_super) {
	    __extends(MeasureModal, _super);
	    function MeasureModal() {
	        _super.call(this);
	        this.hasInitialized = false;
	        this.delegate = new immutable_form_delegate_1.ImmutableFormDelegate(this);
	    }
	    MeasureModal.prototype.initStateFromProps = function (props) {
	        if (props.measure) {
	            this.setState({
	                newInstance: new index_2.Measure(props.measure.valueOf()),
	                canSave: false
	            });
	        }
	    };
	    MeasureModal.prototype.componentWillReceiveProps = function (nextProps) {
	        this.initStateFromProps(nextProps);
	    };
	    MeasureModal.prototype.componentDidMount = function () {
	        this.initStateFromProps(this.props);
	    };
	    MeasureModal.prototype.save = function () {
	        if (!this.state.canSave)
	            return;
	        this.props.onSave(this.state.newInstance);
	    };
	    MeasureModal.prototype.render = function () {
	        var measure = this.props.measure;
	        var _a = this.state, newInstance = _a.newInstance, canSave = _a.canSave, errors = _a.errors;
	        var saveButtonDisabled = !canSave || measure.equals(newInstance);
	        if (!newInstance)
	            return null;
	        var makeLabel = index_1.FormLabel.simpleGenerator(labels_1.MEASURE, errors, true);
	        var makeTextInput = index_1.ImmutableInput.simpleGenerator(newInstance, this.delegate.onChange);
	        var makeDropDownInput = index_1.ImmutableDropdown.simpleGenerator(newInstance, this.delegate.onChange);
	        return React.createElement(index_1.Modal, {className: "dimension-modal", title: measure.title, onClose: this.props.onClose, onEnter: this.save.bind(this)}, 
	            React.createElement("form", {className: "general vertical"}, 
	                makeLabel('title'), 
	                makeTextInput('title', /^.+$/, true), 
	                makeLabel('units'), 
	                makeTextInput('units'), 
	                makeLabel('formula'), 
	                makeTextInput('formula')), 
	            React.createElement("div", {className: "button-bar"}, 
	                React.createElement(index_1.Button, {className: dom_1.classNames("save", { disabled: saveButtonDisabled }), title: "OK", type: "primary", onClick: this.save.bind(this)}), 
	                React.createElement(index_1.Button, {className: "cancel", title: "Cancel", type: "secondary", onClick: this.props.onClose})));
	    };
	    return MeasureModal;
	}(React.Component));
	exports.MeasureModal = MeasureModal;


/***/ },
/* 613 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(614);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./measure-modal.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./measure-modal.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 614 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".measure-modal form{width:448px}.measure-modal form.vertical>*{display:block}.measure-modal form .dropdown .dropdown-label{margin-bottom:8px}.measure-modal form input:not(.actionable),.measure-modal form .input:not(.actionable),.measure-modal form .checkbox:not(.actionable){margin-bottom:25px}.measure-modal form .checkbox{height:20px;width:100%}.measure-modal form .checkbox .label{position:absolute;left:25px;top:5px}.measure-modal form .checkbox .label{text-transform:uppercase;font-size:12px;color:#a6a6a6;margin-bottom:5px}.measure-modal form input{border:1px solid #d4d4d4;border-radius:2px;box-shadow:inset 0 1px 1px rgba(0,0,0,0.13);padding-left:6px;padding-right:6px;width:100%;height:30px}.measure-modal form input:hover{border-color:#b8b8b8}.measure-modal form input:focus{border-color:#1ea3e6}.measure-modal form input.error{border-color:#e24c4c}.measure-modal form{width:100%}\n", ""]);

	// exports


/***/ },
/* 615 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(616);
	var React = __webpack_require__(5);
	var ReactDOM = __webpack_require__(39);
	var chronoshift_1 = __webpack_require__(191);
	var plywood_1 = __webpack_require__(199);
	var index_1 = __webpack_require__(202);
	var general_1 = __webpack_require__(209);
	var download_1 = __webpack_require__(445);
	var formatter_1 = __webpack_require__(233);
	var dom_1 = __webpack_require__(300);
	var sizing_1 = __webpack_require__(618);
	var constants_1 = __webpack_require__(292);
	var index_2 = __webpack_require__(293);
	var HEADER_HEIGHT = 30;
	var ROW_HEIGHT = 30;
	var LIMIT = 100;
	var TIME_COL_WIDTH = 180;
	var BOOLEAN_COL_WIDTH = 100;
	var NUMBER_COL_WIDTH = 100;
	var DEFAULT_COL_WIDTH = 200;
	function getColumnWidth(attribute) {
	    switch (attribute.type) {
	        case 'BOOLEAN':
	            return BOOLEAN_COL_WIDTH;
	        case 'NUMBER':
	            return NUMBER_COL_WIDTH;
	        case 'TIME':
	            return TIME_COL_WIDTH;
	        default:
	            return DEFAULT_COL_WIDTH;
	    }
	}
	function classFromAttribute(attribute) {
	    return dom_1.classNames(String(attribute.type).toLowerCase().replace(/\//g, '-'), { unsplitable: attribute.unsplitable });
	}
	var RawDataModal = (function (_super) {
	    __extends(RawDataModal, _super);
	    function RawDataModal() {
	        _super.call(this);
	        this.state = {
	            loading: false,
	            dataset: null,
	            scrollLeft: 0,
	            scrollTop: 0,
	            error: null,
	            stage: null
	        };
	        this.globalResizeListener = this.globalResizeListener.bind(this);
	    }
	    RawDataModal.prototype.componentDidMount = function () {
	        this.mounted = true;
	        var _a = this.props, essence = _a.essence, timekeeper = _a.timekeeper;
	        this.fetchData(essence, timekeeper);
	        this.globalResizeListener();
	    };
	    RawDataModal.prototype.componentWillUnmount = function () {
	        this.mounted = false;
	    };
	    RawDataModal.prototype.fetchData = function (essence, timekeeper) {
	        var _this = this;
	        var dataCube = essence.dataCube;
	        var $main = plywood_1.$('main');
	        var query = $main.filter(essence.getEffectiveFilter(timekeeper).toExpression()).limit(LIMIT);
	        this.setState({ loading: true });
	        dataCube.executor(query, { timezone: essence.timezone })
	            .then(function (dataset) {
	            if (!_this.mounted)
	                return;
	            _this.setState({
	                dataset: dataset,
	                loading: false
	            });
	        }, function (error) {
	            if (!_this.mounted)
	                return;
	            _this.setState({
	                error: error,
	                loading: false
	            });
	        });
	    };
	    RawDataModal.prototype.globalResizeListener = function () {
	        var table = this.refs.table;
	        var tableDOM = ReactDOM.findDOMNode(table);
	        if (!tableDOM)
	            return;
	        this.setState({
	            stage: index_1.Stage.fromClientRect(tableDOM.getBoundingClientRect())
	        });
	    };
	    RawDataModal.prototype.onScroll = function (scrollTop, scrollLeft) {
	        this.setState({ scrollLeft: scrollLeft, scrollTop: scrollTop });
	    };
	    RawDataModal.prototype.getStringifiedFilters = function () {
	        var _a = this.props, essence = _a.essence, timekeeper = _a.timekeeper;
	        var dataCube = essence.dataCube;
	        return essence.getEffectiveFilter(timekeeper).clauses.map(function (clause, i) {
	            var dimension = dataCube.getDimensionByExpression(clause.expression);
	            if (!dimension)
	                return null;
	            var evaluatedClause = dimension.kind === 'time' ? essence.evaluateClause(clause, timekeeper) : clause;
	            return formatter_1.formatFilterClause(dimension, evaluatedClause, essence.timezone);
	        }).toList();
	    };
	    RawDataModal.prototype.getSortedAttributes = function (dataCube) {
	        var timeAttributeName = dataCube.timeAttribute ? dataCube.timeAttribute.name : null;
	        var attributeRank = function (attribute) {
	            var name = attribute.name;
	            if (name === timeAttributeName) {
	                return 1;
	            }
	            else if (attribute.unsplitable) {
	                return 3;
	            }
	            else {
	                return 2;
	            }
	        };
	        return dataCube.attributes.sort(function (a1, a2) {
	            var score1 = attributeRank(a1);
	            var score2 = attributeRank(a2);
	            if (score1 === score2) {
	                return a1.name.toLowerCase().localeCompare(a2.name.toLowerCase());
	            }
	            return score1 - score2;
	        });
	    };
	    RawDataModal.prototype.renderFilters = function () {
	        var filters = this.getStringifiedFilters().map(function (filter, i) {
	            return React.createElement("li", {className: "filter", key: i}, filter);
	        }).toList();
	        var limit = React.createElement("li", {className: "limit", key: "limit"}, 
	            "First ", 
	            LIMIT, 
	            " events matching ");
	        return filters.unshift(limit);
	    };
	    RawDataModal.prototype.renderHeader = function () {
	        var essence = this.props.essence;
	        var dataset = this.state.dataset;
	        if (!dataset)
	            return null;
	        var dataCube = essence.dataCube;
	        var attributes = this.getSortedAttributes(dataCube);
	        return attributes.map(function (attribute, i) {
	            var name = attribute.name;
	            var width = getColumnWidth(attribute);
	            var style = { width: width };
	            var key = name;
	            return (React.createElement("div", {className: dom_1.classNames("header-cell", classFromAttribute(attribute)), style: style, key: i}, 
	                React.createElement("div", {className: "title-wrap"}, general_1.makeTitle(key))
	            ));
	        });
	    };
	    RawDataModal.prototype.getVisibleIndices = function (rowCount, height) {
	        var scrollTop = this.state.scrollTop;
	        return [
	            Math.max(0, Math.floor(scrollTop / ROW_HEIGHT)),
	            Math.min(rowCount, Math.ceil((scrollTop + height) / ROW_HEIGHT))
	        ];
	    };
	    RawDataModal.prototype.renderRows = function () {
	        var essence = this.props.essence;
	        var _a = this.state, dataset = _a.dataset, scrollLeft = _a.scrollLeft, stage = _a.stage;
	        if (!dataset)
	            return null;
	        var dataCube = essence.dataCube;
	        var rawData = dataset.data;
	        var _b = this.getVisibleIndices(rawData.length, stage.height), firstRowToShow = _b[0], lastRowToShow = _b[1];
	        var rows = rawData.slice(firstRowToShow, lastRowToShow);
	        var attributes = this.getSortedAttributes(dataCube);
	        var attributeWidths = attributes.map(getColumnWidth);
	        var _c = sizing_1.getVisibleSegments(attributeWidths, scrollLeft, stage.width), startIndex = _c.startIndex, shownColumns = _c.shownColumns;
	        var leftOffset = general_1.arraySum(attributeWidths.slice(0, startIndex));
	        attributes = attributes.slice(startIndex, startIndex + shownColumns);
	        var rowY = firstRowToShow * ROW_HEIGHT;
	        return rows.map(function (datum, i) {
	            var cols = [];
	            attributes.forEach(function (attribute) {
	                var name = attribute.name;
	                var value = datum[name];
	                var colStyle = {
	                    width: getColumnWidth(attribute)
	                };
	                var displayValue = value;
	                if (chronoshift_1.isDate(datum[name])) {
	                    displayValue = datum[name].toISOString();
	                }
	                cols.push(React.createElement("div", {className: dom_1.classNames('cell', classFromAttribute(attribute)), key: name, style: colStyle}, 
	                    React.createElement("span", {className: "cell-value"}, String(displayValue))
	                ));
	            });
	            var rowStyle = { top: rowY, left: leftOffset };
	            rowY += ROW_HEIGHT;
	            return React.createElement("div", {className: "row", style: rowStyle, key: i}, cols);
	        });
	    };
	    RawDataModal.prototype.render = function () {
	        var _a = this.props, essence = _a.essence, timekeeper = _a.timekeeper, onClose = _a.onClose;
	        var _b = this.state, dataset = _b.dataset, loading = _b.loading, error = _b.error;
	        var dataCube = essence.dataCube;
	        var title = general_1.makeTitle(constants_1.STRINGS.segment) + " " + constants_1.STRINGS.rawData;
	        var filtersString = essence.getEffectiveFilter(timekeeper).getFileString(dataCube.timeAttribute);
	        var scrollerLayout = {
	            bodyWidth: general_1.arraySum(dataCube.attributes.map(getColumnWidth)),
	            bodyHeight: (dataset ? dataset.data.length : 0) * ROW_HEIGHT,
	            top: HEADER_HEIGHT,
	            right: 0,
	            bottom: 0,
	            left: 0
	        };
	        return React.createElement(index_2.Modal, {className: "raw-data-modal", title: title, onClose: onClose}, 
	            React.createElement("div", {className: "content"}, 
	                React.createElement("ul", {className: "filters"}, this.renderFilters()), 
	                React.createElement(index_2.Scroller, {ref: "table", layout: scrollerLayout, topGutter: this.renderHeader(), body: this.renderRows(), onScroll: this.onScroll.bind(this)}), 
	                error ? React.createElement(index_2.QueryError, {error: error}) : null, 
	                loading ? React.createElement(index_2.Loader, null) : null, 
	                React.createElement("div", {className: "button-bar"}, 
	                    React.createElement(index_2.Button, {type: "primary", className: "close", onClick: onClose, title: constants_1.STRINGS.close}), 
	                    React.createElement(index_2.Button, {type: "secondary", className: "download", onClick: download_1.download.bind(this, dataset, download_1.makeFileName(dataCube.name, filtersString, 'raw'), 'csv'), title: constants_1.STRINGS.download, disabled: Boolean(loading || error)})))
	        );
	    };
	    return RawDataModal;
	}(React.Component));
	exports.RawDataModal = RawDataModal;


/***/ },
/* 616 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(617);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./raw-data-modal.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./raw-data-modal.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 617 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".raw-data-modal .content{position:absolute;top:60px;bottom:0;left:0;right:0;left:18px;right:18px;overflow:hidden}.raw-data-modal .content .filters{position:absolute;top:0;bottom:0;left:0;right:0;white-space:nowrap;overflow-x:hidden;text-overflow:ellipsis;height:30px;color:#999}.raw-data-modal .content .filters .limit,.raw-data-modal .content .filters .filter{font-size:13px;height:30px;display:inline}.raw-data-modal .content .filters .filter:not(:last-child)::after{content:'; '}.raw-data-modal .content .scroller{position:absolute;top:30px;bottom:66px;left:0;right:0;border:1px solid #dedede;cursor:auto}.raw-data-modal .content .scroller .row{height:30px;position:absolute;border-bottom:1px solid #dedede}.raw-data-modal .content .scroller .header-cell,.raw-data-modal .content .scroller .cell{white-space:nowrap;overflow-x:hidden;text-overflow:ellipsis;display:inline-block;height:100%;border-right:1px solid #dedede;padding-left:6px;padding-right:6px;padding-top:8px}.raw-data-modal .content .scroller .header-cell.unsplitable,.raw-data-modal .content .scroller .cell.unsplitable{background:#f5f5f5}.raw-data-modal .content .scroller .header-cell{background:#f5f5f5;height:30px;border-bottom:1px solid #dedede}.raw-data-modal .content .scroller .header-cell .title-wrap{white-space:nowrap;overflow-x:hidden;text-overflow:ellipsis;display:inline-block;width:100%;height:100%}.raw-data-modal .content .loader,.raw-data-modal .content .query-error{position:absolute;top:0;bottom:0;left:0;right:0}.raw-data-modal .content .button-bar{position:absolute;left:0;right:0;bottom:18px}\n", ""]);

	// exports


/***/ },
/* 618 */
/***/ function(module, exports) {

	"use strict";
	function getVisibleSegments(segmentWidths, offset, visibleSize) {
	    var startIndex = 0;
	    var shownColumns = 0;
	    var curWidth = 0;
	    for (var i = 0; i < segmentWidths.length; i++) {
	        var segmentWidth = segmentWidths[i];
	        var afterWidth = curWidth + segmentWidth;
	        if (afterWidth < offset) {
	            startIndex++;
	        }
	        else if (curWidth < offset + visibleSize) {
	            shownColumns++;
	        }
	        curWidth = afterWidth;
	    }
	    return {
	        startIndex: startIndex,
	        shownColumns: shownColumns
	    };
	}
	exports.getVisibleSegments = getVisibleSegments;


/***/ },
/* 619 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(620);
	var React = __webpack_require__(5);
	var constants_1 = __webpack_require__(292);
	var index_1 = __webpack_require__(293);
	var no_data_header_bar_1 = __webpack_require__(622);
	var NoDataView = (function (_super) {
	    __extends(NoDataView, _super);
	    function NoDataView() {
	        _super.call(this);
	        this.state = {};
	    }
	    NoDataView.prototype.componentWillReceiveProps = function (nextProps) {
	        var clusters = nextProps.appSettings.clusters;
	        if (!clusters || !clusters.length) {
	            this.setState({
	                mode: NoDataView.NO_CLUSTER
	            });
	        }
	        else {
	            this.setState({
	                mode: NoDataView.NO_CUBE
	            });
	        }
	    };
	    NoDataView.prototype.goToSettings = function () {
	        window.location.hash = '#settings';
	    };
	    NoDataView.prototype.renderSettingsIcon = function () {
	        var _a = this.props, user = _a.user, stateful = _a.stateful;
	        if (!user || !user.allow['settings'] || !stateful)
	            return null;
	        return React.createElement("div", {className: "icon-button", onClick: this.goToSettings.bind(this)}, 
	            React.createElement(index_1.SvgIcon, {svg: __webpack_require__(501)})
	        );
	    };
	    NoDataView.prototype.renderTitle = function (mode) {
	        return React.createElement("div", {className: "title"}, 
	            React.createElement("div", {className: "icon"}, 
	                React.createElement(index_1.SvgIcon, {svg: __webpack_require__(471)})
	            ), 
	            React.createElement("div", {className: "label"}, mode === NoDataView.NO_CUBE ? constants_1.STRINGS.noQueryableDataCubes : constants_1.STRINGS.noConnectedData));
	    };
	    NoDataView.prototype.renderLink = function (mode) {
	        var link = mode === NoDataView.NO_CUBE
	            ? React.createElement("a", {href: "#settings/data-cubes"}, "cubes settings")
	            : React.createElement("a", {href: "#settings/clusters"}, "clusters settings");
	        return React.createElement("div", {className: "action"}, 
	            "Please go to the ", 
	            link);
	    };
	    NoDataView.prototype.render = function () {
	        var _a = this.props, user = _a.user, onNavClick = _a.onNavClick, onOpenAbout = _a.onOpenAbout, customization = _a.customization, stateful = _a.stateful;
	        var mode = this.state.mode;
	        return React.createElement("div", {className: "no-data-view"}, 
	            React.createElement(no_data_header_bar_1.NoDataHeaderBar, {user: user, onNavClick: onNavClick, customization: customization, title: constants_1.STRINGS.home}, 
	                React.createElement("button", {className: "text-button", onClick: onOpenAbout}, constants_1.STRINGS.infoAndFeedback), 
	                this.renderSettingsIcon()), 
	            React.createElement("div", {className: "container"}, 
	                this.renderTitle(mode), 
	                stateful ? this.renderLink(mode) : null));
	    };
	    NoDataView.NO_CLUSTER = 'no-cluster';
	    NoDataView.NO_CUBE = 'no-cube';
	    return NoDataView;
	}(React.Component));
	exports.NoDataView = NoDataView;


/***/ },
/* 620 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(621);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./no-data-view.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./no-data-view.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 621 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".no-data-view .grid-row{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-ms-flex-negative:0;flex-shrink:0}.no-data-view .grid-row .grid-col-0{-webkit-box-flex:1;-ms-flex:1;flex:1;-webkit-box-flex:0;-ms-flex-positive:0;flex-grow:0;-ms-flex-negative:0;flex-shrink:0;box-sizing:border-box;position:relative;-ms-flex-preferred-size:0%;flex-basis:0%;overflow:hidden}.no-data-view .grid-row .grid-col-0.enable-overflow{overflow:initial}.no-data-view .grid-row .grid-col-0:not(.vertical)>*:not(.grid-row){display:inline-block;vertical-align:top}.no-data-view .grid-row .grid-col-0.vertical>*:not(.grid-row){text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.no-data-view .grid-row .grid-col-0.left{text-align:left}.no-data-view .grid-row .grid-col-0.right{text-align:right}.no-data-view .grid-row .grid-col-0.center{text-align:center}.no-data-view .grid-row .grid-col-0.middle{-ms-flex-item-align:center;align-self:center}.no-data-view .grid-row .grid-col-0.top{-ms-flex-item-align:start;align-self:flex-start}.no-data-view .grid-row .grid-col-0.bottom{-ms-flex-item-align:end;align-self:flex-end}.no-data-view .grid-row .grid-col-0.stretch{-ms-flex-item-align:stretch;align-self:stretch}.no-data-view .grid-row .grid-col-10{-webkit-box-flex:1;-ms-flex:1;flex:1;-webkit-box-flex:0;-ms-flex-positive:0;flex-grow:0;-ms-flex-negative:0;flex-shrink:0;box-sizing:border-box;position:relative;-ms-flex-preferred-size:10%;flex-basis:10%;overflow:hidden}.no-data-view .grid-row .grid-col-10.enable-overflow{overflow:initial}.no-data-view .grid-row .grid-col-10:not(.vertical)>*:not(.grid-row){display:inline-block;vertical-align:top}.no-data-view .grid-row .grid-col-10.vertical>*:not(.grid-row){text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.no-data-view .grid-row .grid-col-10.left{text-align:left}.no-data-view .grid-row .grid-col-10.right{text-align:right}.no-data-view .grid-row .grid-col-10.center{text-align:center}.no-data-view .grid-row .grid-col-10.middle{-ms-flex-item-align:center;align-self:center}.no-data-view .grid-row .grid-col-10.top{-ms-flex-item-align:start;align-self:flex-start}.no-data-view .grid-row .grid-col-10.bottom{-ms-flex-item-align:end;align-self:flex-end}.no-data-view .grid-row .grid-col-10.stretch{-ms-flex-item-align:stretch;align-self:stretch}.no-data-view .grid-row .grid-col-20{-webkit-box-flex:1;-ms-flex:1;flex:1;-webkit-box-flex:0;-ms-flex-positive:0;flex-grow:0;-ms-flex-negative:0;flex-shrink:0;box-sizing:border-box;position:relative;-ms-flex-preferred-size:20%;flex-basis:20%;overflow:hidden}.no-data-view .grid-row .grid-col-20.enable-overflow{overflow:initial}.no-data-view .grid-row .grid-col-20:not(.vertical)>*:not(.grid-row){display:inline-block;vertical-align:top}.no-data-view .grid-row .grid-col-20.vertical>*:not(.grid-row){text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.no-data-view .grid-row .grid-col-20.left{text-align:left}.no-data-view .grid-row .grid-col-20.right{text-align:right}.no-data-view .grid-row .grid-col-20.center{text-align:center}.no-data-view .grid-row .grid-col-20.middle{-ms-flex-item-align:center;align-self:center}.no-data-view .grid-row .grid-col-20.top{-ms-flex-item-align:start;align-self:flex-start}.no-data-view .grid-row .grid-col-20.bottom{-ms-flex-item-align:end;align-self:flex-end}.no-data-view .grid-row .grid-col-20.stretch{-ms-flex-item-align:stretch;align-self:stretch}.no-data-view .grid-row .grid-col-30{-webkit-box-flex:1;-ms-flex:1;flex:1;-webkit-box-flex:0;-ms-flex-positive:0;flex-grow:0;-ms-flex-negative:0;flex-shrink:0;box-sizing:border-box;position:relative;-ms-flex-preferred-size:30%;flex-basis:30%;overflow:hidden}.no-data-view .grid-row .grid-col-30.enable-overflow{overflow:initial}.no-data-view .grid-row .grid-col-30:not(.vertical)>*:not(.grid-row){display:inline-block;vertical-align:top}.no-data-view .grid-row .grid-col-30.vertical>*:not(.grid-row){text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.no-data-view .grid-row .grid-col-30.left{text-align:left}.no-data-view .grid-row .grid-col-30.right{text-align:right}.no-data-view .grid-row .grid-col-30.center{text-align:center}.no-data-view .grid-row .grid-col-30.middle{-ms-flex-item-align:center;align-self:center}.no-data-view .grid-row .grid-col-30.top{-ms-flex-item-align:start;align-self:flex-start}.no-data-view .grid-row .grid-col-30.bottom{-ms-flex-item-align:end;align-self:flex-end}.no-data-view .grid-row .grid-col-30.stretch{-ms-flex-item-align:stretch;align-self:stretch}.no-data-view .grid-row .grid-col-40{-webkit-box-flex:1;-ms-flex:1;flex:1;-webkit-box-flex:0;-ms-flex-positive:0;flex-grow:0;-ms-flex-negative:0;flex-shrink:0;box-sizing:border-box;position:relative;-ms-flex-preferred-size:40%;flex-basis:40%;overflow:hidden}.no-data-view .grid-row .grid-col-40.enable-overflow{overflow:initial}.no-data-view .grid-row .grid-col-40:not(.vertical)>*:not(.grid-row){display:inline-block;vertical-align:top}.no-data-view .grid-row .grid-col-40.vertical>*:not(.grid-row){text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.no-data-view .grid-row .grid-col-40.left{text-align:left}.no-data-view .grid-row .grid-col-40.right{text-align:right}.no-data-view .grid-row .grid-col-40.center{text-align:center}.no-data-view .grid-row .grid-col-40.middle{-ms-flex-item-align:center;align-self:center}.no-data-view .grid-row .grid-col-40.top{-ms-flex-item-align:start;align-self:flex-start}.no-data-view .grid-row .grid-col-40.bottom{-ms-flex-item-align:end;align-self:flex-end}.no-data-view .grid-row .grid-col-40.stretch{-ms-flex-item-align:stretch;align-self:stretch}.no-data-view .grid-row .grid-col-50{-webkit-box-flex:1;-ms-flex:1;flex:1;-webkit-box-flex:0;-ms-flex-positive:0;flex-grow:0;-ms-flex-negative:0;flex-shrink:0;box-sizing:border-box;position:relative;-ms-flex-preferred-size:50%;flex-basis:50%;overflow:hidden}.no-data-view .grid-row .grid-col-50.enable-overflow{overflow:initial}.no-data-view .grid-row .grid-col-50:not(.vertical)>*:not(.grid-row){display:inline-block;vertical-align:top}.no-data-view .grid-row .grid-col-50.vertical>*:not(.grid-row){text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.no-data-view .grid-row .grid-col-50.left{text-align:left}.no-data-view .grid-row .grid-col-50.right{text-align:right}.no-data-view .grid-row .grid-col-50.center{text-align:center}.no-data-view .grid-row .grid-col-50.middle{-ms-flex-item-align:center;align-self:center}.no-data-view .grid-row .grid-col-50.top{-ms-flex-item-align:start;align-self:flex-start}.no-data-view .grid-row .grid-col-50.bottom{-ms-flex-item-align:end;align-self:flex-end}.no-data-view .grid-row .grid-col-50.stretch{-ms-flex-item-align:stretch;align-self:stretch}.no-data-view .grid-row .grid-col-60{-webkit-box-flex:1;-ms-flex:1;flex:1;-webkit-box-flex:0;-ms-flex-positive:0;flex-grow:0;-ms-flex-negative:0;flex-shrink:0;box-sizing:border-box;position:relative;-ms-flex-preferred-size:60%;flex-basis:60%;overflow:hidden}.no-data-view .grid-row .grid-col-60.enable-overflow{overflow:initial}.no-data-view .grid-row .grid-col-60:not(.vertical)>*:not(.grid-row){display:inline-block;vertical-align:top}.no-data-view .grid-row .grid-col-60.vertical>*:not(.grid-row){text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.no-data-view .grid-row .grid-col-60.left{text-align:left}.no-data-view .grid-row .grid-col-60.right{text-align:right}.no-data-view .grid-row .grid-col-60.center{text-align:center}.no-data-view .grid-row .grid-col-60.middle{-ms-flex-item-align:center;align-self:center}.no-data-view .grid-row .grid-col-60.top{-ms-flex-item-align:start;align-self:flex-start}.no-data-view .grid-row .grid-col-60.bottom{-ms-flex-item-align:end;align-self:flex-end}.no-data-view .grid-row .grid-col-60.stretch{-ms-flex-item-align:stretch;align-self:stretch}.no-data-view .grid-row .grid-col-70{-webkit-box-flex:1;-ms-flex:1;flex:1;-webkit-box-flex:0;-ms-flex-positive:0;flex-grow:0;-ms-flex-negative:0;flex-shrink:0;box-sizing:border-box;position:relative;-ms-flex-preferred-size:70%;flex-basis:70%;overflow:hidden}.no-data-view .grid-row .grid-col-70.enable-overflow{overflow:initial}.no-data-view .grid-row .grid-col-70:not(.vertical)>*:not(.grid-row){display:inline-block;vertical-align:top}.no-data-view .grid-row .grid-col-70.vertical>*:not(.grid-row){text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.no-data-view .grid-row .grid-col-70.left{text-align:left}.no-data-view .grid-row .grid-col-70.right{text-align:right}.no-data-view .grid-row .grid-col-70.center{text-align:center}.no-data-view .grid-row .grid-col-70.middle{-ms-flex-item-align:center;align-self:center}.no-data-view .grid-row .grid-col-70.top{-ms-flex-item-align:start;align-self:flex-start}.no-data-view .grid-row .grid-col-70.bottom{-ms-flex-item-align:end;align-self:flex-end}.no-data-view .grid-row .grid-col-70.stretch{-ms-flex-item-align:stretch;align-self:stretch}.no-data-view .grid-row .grid-col-80{-webkit-box-flex:1;-ms-flex:1;flex:1;-webkit-box-flex:0;-ms-flex-positive:0;flex-grow:0;-ms-flex-negative:0;flex-shrink:0;box-sizing:border-box;position:relative;-ms-flex-preferred-size:80%;flex-basis:80%;overflow:hidden}.no-data-view .grid-row .grid-col-80.enable-overflow{overflow:initial}.no-data-view .grid-row .grid-col-80:not(.vertical)>*:not(.grid-row){display:inline-block;vertical-align:top}.no-data-view .grid-row .grid-col-80.vertical>*:not(.grid-row){text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.no-data-view .grid-row .grid-col-80.left{text-align:left}.no-data-view .grid-row .grid-col-80.right{text-align:right}.no-data-view .grid-row .grid-col-80.center{text-align:center}.no-data-view .grid-row .grid-col-80.middle{-ms-flex-item-align:center;align-self:center}.no-data-view .grid-row .grid-col-80.top{-ms-flex-item-align:start;align-self:flex-start}.no-data-view .grid-row .grid-col-80.bottom{-ms-flex-item-align:end;align-self:flex-end}.no-data-view .grid-row .grid-col-80.stretch{-ms-flex-item-align:stretch;align-self:stretch}.no-data-view .grid-row .grid-col-90{-webkit-box-flex:1;-ms-flex:1;flex:1;-webkit-box-flex:0;-ms-flex-positive:0;flex-grow:0;-ms-flex-negative:0;flex-shrink:0;box-sizing:border-box;position:relative;-ms-flex-preferred-size:90%;flex-basis:90%;overflow:hidden}.no-data-view .grid-row .grid-col-90.enable-overflow{overflow:initial}.no-data-view .grid-row .grid-col-90:not(.vertical)>*:not(.grid-row){display:inline-block;vertical-align:top}.no-data-view .grid-row .grid-col-90.vertical>*:not(.grid-row){text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.no-data-view .grid-row .grid-col-90.left{text-align:left}.no-data-view .grid-row .grid-col-90.right{text-align:right}.no-data-view .grid-row .grid-col-90.center{text-align:center}.no-data-view .grid-row .grid-col-90.middle{-ms-flex-item-align:center;align-self:center}.no-data-view .grid-row .grid-col-90.top{-ms-flex-item-align:start;align-self:flex-start}.no-data-view .grid-row .grid-col-90.bottom{-ms-flex-item-align:end;align-self:flex-end}.no-data-view .grid-row .grid-col-90.stretch{-ms-flex-item-align:stretch;align-self:stretch}.no-data-view .grid-row .grid-col-100{-webkit-box-flex:1;-ms-flex:1;flex:1;-webkit-box-flex:0;-ms-flex-positive:0;flex-grow:0;-ms-flex-negative:0;flex-shrink:0;box-sizing:border-box;position:relative;-ms-flex-preferred-size:100%;flex-basis:100%;overflow:hidden}.no-data-view .grid-row .grid-col-100.enable-overflow{overflow:initial}.no-data-view .grid-row .grid-col-100:not(.vertical)>*:not(.grid-row){display:inline-block;vertical-align:top}.no-data-view .grid-row .grid-col-100.vertical>*:not(.grid-row){text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.no-data-view .grid-row .grid-col-100.left{text-align:left}.no-data-view .grid-row .grid-col-100.right{text-align:right}.no-data-view .grid-row .grid-col-100.center{text-align:center}.no-data-view .grid-row .grid-col-100.middle{-ms-flex-item-align:center;align-self:center}.no-data-view .grid-row .grid-col-100.top{-ms-flex-item-align:start;align-self:flex-start}.no-data-view .grid-row .grid-col-100.bottom{-ms-flex-item-align:end;align-self:flex-end}.no-data-view .grid-row .grid-col-100.stretch{-ms-flex-item-align:stretch;align-self:stretch}.no-data-view .no-data-header-bar{position:absolute;top:0;left:0;right:0;height:42px}.no-data-view .container{position:absolute;top:50%;left:50%;-webkit-transform:translate(-50%, -50%);-ms-transform:translate(-50%, -50%);transform:translate(-50%, -50%);text-align:center}.no-data-view .container .title .icon{display:inline-block;margin-bottom:6px;width:42px}.no-data-view .container .title .icon path{fill:#999}.no-data-view .container .title .label{display:inline-block;height:46px;padding-top:13px;font-size:20px;color:#999}.no-data-view .container .action{color:#999}.no-data-view .container .action a{color:#1ea3e6;border-bottom:1px dashed}\n", ""]);

	// exports


/***/ },
/* 622 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(623);
	var React = __webpack_require__(5);
	var index_1 = __webpack_require__(293);
	var NoDataHeaderBar = (function (_super) {
	    __extends(NoDataHeaderBar, _super);
	    function NoDataHeaderBar() {
	        _super.call(this);
	        this.state = {
	            userMenuOpenOn: null
	        };
	    }
	    NoDataHeaderBar.prototype.onUserMenuClick = function (e) {
	        var userMenuOpenOn = this.state.userMenuOpenOn;
	        if (userMenuOpenOn)
	            return this.onUserMenuClose();
	        this.setState({
	            userMenuOpenOn: e.target
	        });
	    };
	    NoDataHeaderBar.prototype.onUserMenuClose = function () {
	        this.setState({
	            userMenuOpenOn: null
	        });
	    };
	    NoDataHeaderBar.prototype.renderUserMenu = function () {
	        var _a = this.props, user = _a.user, customization = _a.customization;
	        var userMenuOpenOn = this.state.userMenuOpenOn;
	        if (!userMenuOpenOn)
	            return null;
	        return React.createElement(index_1.UserMenu, {openOn: userMenuOpenOn, onClose: this.onUserMenuClose.bind(this), user: user, customization: customization});
	    };
	    NoDataHeaderBar.prototype.render = function () {
	        var _a = this.props, user = _a.user, onNavClick = _a.onNavClick, customization = _a.customization, title = _a.title;
	        var userButton = null;
	        if (user) {
	            userButton = React.createElement("div", {className: "icon-button user", onClick: this.onUserMenuClick.bind(this)}, 
	                React.createElement(index_1.SvgIcon, {svg: __webpack_require__(503)})
	            );
	        }
	        var headerStyle = null;
	        if (customization && customization.headerBackground) {
	            headerStyle = {
	                background: customization.headerBackground
	            };
	        }
	        return React.createElement("header", {className: "no-data-header-bar", style: headerStyle}, 
	            React.createElement("div", {className: "left-bar", onClick: onNavClick}, 
	                React.createElement("div", {className: "menu-icon"}, 
	                    React.createElement(index_1.SvgIcon, {svg: __webpack_require__(507)})
	                ), 
	                React.createElement("div", {className: "title"}, title)), 
	            React.createElement("div", {className: "right-bar"}, 
	                this.props.children, 
	                userButton), 
	            this.renderUserMenu());
	    };
	    return NoDataHeaderBar;
	}(React.Component));
	exports.NoDataHeaderBar = NoDataHeaderBar;


/***/ },
/* 623 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(624);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../../node_modules/css-loader/index.js!./no-data-header-bar.css", function() {
				var newContent = require("!!./../../../../../node_modules/css-loader/index.js!./no-data-header-bar.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 624 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".no-data-header-bar .right-bar .icon-button::after{background:#fff;border-radius:2px;box-shadow:0 3px 10px 0 rgba(0,0,0,0.26),0 0 3px 0 rgba(0,0,0,0.16)}.no-data-header-bar{background:#1ea3e6;color:#fff;font-size:16px;z-index:11}.no-data-header-bar .left-bar{display:inline-block;height:100%;padding-left:12px;padding-right:12px;cursor:pointer}.no-data-header-bar .left-bar .menu-icon{display:inline-block;padding:11px 5px}.no-data-header-bar .left-bar .menu-icon svg path{fill:#fff}.no-data-header-bar .left-bar .title{display:inline-block;font-size:15px;margin-top:13px;padding:0 7px}.no-data-header-bar .right-bar{position:absolute;top:0;right:12px}.no-data-header-bar .right-bar .text-button{display:inline-block;font-size:12px;text-transform:uppercase;height:42px;line-height:42px;padding:0 5px;margin-right:2px;cursor:pointer;background-color:transparent;color:#fff}.no-data-header-bar .right-bar .icon-button{display:inline-block;padding:11px 5px;cursor:pointer}.no-data-header-bar .right-bar .icon-button:not(:first-child){margin-left:3px}.no-data-header-bar .right-bar .icon-button:active::after{display:none}.no-data-header-bar .right-bar .icon-button.help::after{content:'Google Groups'}.no-data-header-bar .right-bar .icon-button.auto-refresh::after{content:'Refresh options'}.no-data-header-bar .right-bar .icon-button.hiluk::after{content:'Share link'}.no-data-header-bar .right-bar .icon-button.user::after{content:'User'}.no-data-header-bar .right-bar .icon-button.github::after{content:'Pivot on Github'}.no-data-header-bar .right-bar .icon-button.settings::after{content:'Settings'}.no-data-header-bar .right-bar .icon-button:hover::after{opacity:1}.no-data-header-bar .right-bar .icon-button::after{opacity:0;pointer-events:none;position:absolute;display:block;bottom:-24px;right:0;padding:5px;color:#000;font-size:12px;white-space:nowrap}.no-data-header-bar .right-bar .icon-button svg path{fill:#fff}.no-data-header-bar .right-bar .button-group{display:inline-block;padding-top:6px;margin-left:8px}.no-data-header-bar .right-bar .button-group>*:not(:last-child){margin-right:8px}.no-data-header-bar .right-bar .button-group .cancel{color:#fff;background-color:rgba(255,255,255,0.28)}.no-data-header-bar .right-bar .button-group .cancel:hover{background-color:rgba(255,255,255,0.36)}.no-data-header-bar .right-bar .button-group .save{color:#1ea3e6;background-color:#fff}.no-data-header-bar .right-bar .button-group .save:hover{background-color:rgba(255,255,255,0.92)}.no-data-header-bar svg{height:19px;width:19px}\n", ""]);

	// exports


/***/ },
/* 625 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(626);
	var React = __webpack_require__(5);
	var index_1 = __webpack_require__(202);
	var constants_1 = __webpack_require__(292);
	var index_2 = __webpack_require__(288);
	var index_3 = __webpack_require__(293);
	var home_header_bar_1 = __webpack_require__(628);
	var item_card_1 = __webpack_require__(631);
	var HomeView = (function (_super) {
	    __extends(HomeView, _super);
	    function HomeView() {
	        _super.call(this);
	        this.state = {};
	    }
	    HomeView.prototype.goToItem = function (item) {
	        var fragments = item.name;
	        if (index_1.Collection.isCollection(item)) {
	            fragments = 'collection/' + fragments;
	        }
	        window.location.hash = '#' + fragments;
	    };
	    HomeView.prototype.goToSettings = function () {
	        window.location.hash = '#settings';
	    };
	    HomeView.prototype.renderSettingsIcon = function () {
	        var user = this.props.user;
	        if (!user || !user.allow['settings'])
	            return null;
	        return React.createElement("div", {className: "icon-button", onClick: this.goToSettings.bind(this)}, 
	            React.createElement(index_3.SvgIcon, {svg: __webpack_require__(501)})
	        );
	    };
	    HomeView.prototype.renderItem = function (item) {
	        return React.createElement(item_card_1.ItemCard, {key: item.name, title: item.title, count: index_1.Collection.isCollection(item) ? item.tiles.length : undefined, description: item.description, icon: item instanceof index_1.DataCube ? 'full-cube' : 'full-collection', onClick: this.goToItem.bind(this, item)});
	    };
	    HomeView.prototype.renderItems = function (items, adder) {
	        return React.createElement("div", {className: "items-container"}, 
	            items.map(this.renderItem, this), 
	            adder || React.createElement("div", {className: "item-card empty"}), 
	            React.createElement("div", {className: "item-card empty"}), 
	            React.createElement("div", {className: "item-card empty"}), 
	            React.createElement("div", {className: "item-card empty"}));
	    };
	    HomeView.prototype.createCollection = function () {
	        this.setState({
	            showAddCollectionModal: true
	        });
	    };
	    HomeView.prototype.renderAddCollectionModal = function () {
	        var _this = this;
	        var _a = this.props, collections = _a.collections, collectionsDelegate = _a.collectionsDelegate;
	        var closeModal = function () {
	            _this.setState({
	                showAddCollectionModal: false
	            });
	        };
	        var addCollection = function (collection) {
	            closeModal();
	            collectionsDelegate.addCollection(collection);
	        };
	        return React.createElement(index_2.AddCollectionModal, {collections: collections, onCancel: closeModal, onSave: addCollection});
	    };
	    HomeView.prototype.renderDataCubes = function () {
	        var dataCubes = this.props.dataCubes;
	        return React.createElement("div", {className: "datacubes"}, 
	            React.createElement("div", {className: "section-title"}, constants_1.STRINGS.dataCubes), 
	            this.renderItems(dataCubes));
	    };
	    HomeView.prototype.renderCollections = function () {
	        var _a = this.props, collections = _a.collections, collectionsDelegate = _a.collectionsDelegate;
	        if (!collectionsDelegate && collections.length === 0)
	            return null;
	        var create = this.createCollection.bind(this);
	        return React.createElement("div", {className: "collections"}, 
	            React.createElement("div", {className: "grid-row"}, 
	                React.createElement("div", {className: "grid-col-90 section-title"}, constants_1.STRINGS.collections), 
	                React.createElement("div", {className: "grid-col-10 right actions"}, collectionsDelegate && collections.length > 4 ?
	                    React.createElement("div", {className: "add", onClick: create}, 
	                        React.createElement(index_3.SvgIcon, {svg: __webpack_require__(476)})
	                    )
	                    : null)), 
	            this.renderItems(collections, collectionsDelegate ? item_card_1.ItemCard.getNewItemCard(create) : null));
	    };
	    HomeView.prototype.render = function () {
	        var _a = this.props, user = _a.user, onNavClick = _a.onNavClick, onOpenAbout = _a.onOpenAbout, customization = _a.customization;
	        var showAddCollectionModal = this.state.showAddCollectionModal;
	        return React.createElement("div", {className: "home-view"}, 
	            React.createElement(home_header_bar_1.HomeHeaderBar, {user: user, onNavClick: onNavClick, customization: customization, title: constants_1.STRINGS.home}, 
	                React.createElement("button", {className: "text-button", onClick: onOpenAbout}, constants_1.STRINGS.infoAndFeedback), 
	                this.renderSettingsIcon()), 
	            React.createElement("div", {className: "container"}, 
	                this.renderDataCubes(), 
	                this.renderCollections()), 
	            showAddCollectionModal ? this.renderAddCollectionModal() : null);
	    };
	    return HomeView;
	}(React.Component));
	exports.HomeView = HomeView;


/***/ },
/* 626 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(627);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./home-view.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./home-view.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 627 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".home-view .grid-row{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-ms-flex-negative:0;flex-shrink:0}.home-view .grid-row .grid-col-0{-webkit-box-flex:1;-ms-flex:1;flex:1;-webkit-box-flex:0;-ms-flex-positive:0;flex-grow:0;-ms-flex-negative:0;flex-shrink:0;box-sizing:border-box;position:relative;-ms-flex-preferred-size:0%;flex-basis:0%;overflow:hidden}.home-view .grid-row .grid-col-0.enable-overflow{overflow:initial}.home-view .grid-row .grid-col-0:not(.vertical)>*:not(.grid-row){display:inline-block;vertical-align:top}.home-view .grid-row .grid-col-0.vertical>*:not(.grid-row){text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.home-view .grid-row .grid-col-0.left{text-align:left}.home-view .grid-row .grid-col-0.right{text-align:right}.home-view .grid-row .grid-col-0.center{text-align:center}.home-view .grid-row .grid-col-0.middle{-ms-flex-item-align:center;align-self:center}.home-view .grid-row .grid-col-0.top{-ms-flex-item-align:start;align-self:flex-start}.home-view .grid-row .grid-col-0.bottom{-ms-flex-item-align:end;align-self:flex-end}.home-view .grid-row .grid-col-0.stretch{-ms-flex-item-align:stretch;align-self:stretch}.home-view .grid-row .grid-col-10{-webkit-box-flex:1;-ms-flex:1;flex:1;-webkit-box-flex:0;-ms-flex-positive:0;flex-grow:0;-ms-flex-negative:0;flex-shrink:0;box-sizing:border-box;position:relative;-ms-flex-preferred-size:10%;flex-basis:10%;overflow:hidden}.home-view .grid-row .grid-col-10.enable-overflow{overflow:initial}.home-view .grid-row .grid-col-10:not(.vertical)>*:not(.grid-row){display:inline-block;vertical-align:top}.home-view .grid-row .grid-col-10.vertical>*:not(.grid-row){text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.home-view .grid-row .grid-col-10.left{text-align:left}.home-view .grid-row .grid-col-10.right{text-align:right}.home-view .grid-row .grid-col-10.center{text-align:center}.home-view .grid-row .grid-col-10.middle{-ms-flex-item-align:center;align-self:center}.home-view .grid-row .grid-col-10.top{-ms-flex-item-align:start;align-self:flex-start}.home-view .grid-row .grid-col-10.bottom{-ms-flex-item-align:end;align-self:flex-end}.home-view .grid-row .grid-col-10.stretch{-ms-flex-item-align:stretch;align-self:stretch}.home-view .grid-row .grid-col-20{-webkit-box-flex:1;-ms-flex:1;flex:1;-webkit-box-flex:0;-ms-flex-positive:0;flex-grow:0;-ms-flex-negative:0;flex-shrink:0;box-sizing:border-box;position:relative;-ms-flex-preferred-size:20%;flex-basis:20%;overflow:hidden}.home-view .grid-row .grid-col-20.enable-overflow{overflow:initial}.home-view .grid-row .grid-col-20:not(.vertical)>*:not(.grid-row){display:inline-block;vertical-align:top}.home-view .grid-row .grid-col-20.vertical>*:not(.grid-row){text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.home-view .grid-row .grid-col-20.left{text-align:left}.home-view .grid-row .grid-col-20.right{text-align:right}.home-view .grid-row .grid-col-20.center{text-align:center}.home-view .grid-row .grid-col-20.middle{-ms-flex-item-align:center;align-self:center}.home-view .grid-row .grid-col-20.top{-ms-flex-item-align:start;align-self:flex-start}.home-view .grid-row .grid-col-20.bottom{-ms-flex-item-align:end;align-self:flex-end}.home-view .grid-row .grid-col-20.stretch{-ms-flex-item-align:stretch;align-self:stretch}.home-view .grid-row .grid-col-30{-webkit-box-flex:1;-ms-flex:1;flex:1;-webkit-box-flex:0;-ms-flex-positive:0;flex-grow:0;-ms-flex-negative:0;flex-shrink:0;box-sizing:border-box;position:relative;-ms-flex-preferred-size:30%;flex-basis:30%;overflow:hidden}.home-view .grid-row .grid-col-30.enable-overflow{overflow:initial}.home-view .grid-row .grid-col-30:not(.vertical)>*:not(.grid-row){display:inline-block;vertical-align:top}.home-view .grid-row .grid-col-30.vertical>*:not(.grid-row){text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.home-view .grid-row .grid-col-30.left{text-align:left}.home-view .grid-row .grid-col-30.right{text-align:right}.home-view .grid-row .grid-col-30.center{text-align:center}.home-view .grid-row .grid-col-30.middle{-ms-flex-item-align:center;align-self:center}.home-view .grid-row .grid-col-30.top{-ms-flex-item-align:start;align-self:flex-start}.home-view .grid-row .grid-col-30.bottom{-ms-flex-item-align:end;align-self:flex-end}.home-view .grid-row .grid-col-30.stretch{-ms-flex-item-align:stretch;align-self:stretch}.home-view .grid-row .grid-col-40{-webkit-box-flex:1;-ms-flex:1;flex:1;-webkit-box-flex:0;-ms-flex-positive:0;flex-grow:0;-ms-flex-negative:0;flex-shrink:0;box-sizing:border-box;position:relative;-ms-flex-preferred-size:40%;flex-basis:40%;overflow:hidden}.home-view .grid-row .grid-col-40.enable-overflow{overflow:initial}.home-view .grid-row .grid-col-40:not(.vertical)>*:not(.grid-row){display:inline-block;vertical-align:top}.home-view .grid-row .grid-col-40.vertical>*:not(.grid-row){text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.home-view .grid-row .grid-col-40.left{text-align:left}.home-view .grid-row .grid-col-40.right{text-align:right}.home-view .grid-row .grid-col-40.center{text-align:center}.home-view .grid-row .grid-col-40.middle{-ms-flex-item-align:center;align-self:center}.home-view .grid-row .grid-col-40.top{-ms-flex-item-align:start;align-self:flex-start}.home-view .grid-row .grid-col-40.bottom{-ms-flex-item-align:end;align-self:flex-end}.home-view .grid-row .grid-col-40.stretch{-ms-flex-item-align:stretch;align-self:stretch}.home-view .grid-row .grid-col-50{-webkit-box-flex:1;-ms-flex:1;flex:1;-webkit-box-flex:0;-ms-flex-positive:0;flex-grow:0;-ms-flex-negative:0;flex-shrink:0;box-sizing:border-box;position:relative;-ms-flex-preferred-size:50%;flex-basis:50%;overflow:hidden}.home-view .grid-row .grid-col-50.enable-overflow{overflow:initial}.home-view .grid-row .grid-col-50:not(.vertical)>*:not(.grid-row){display:inline-block;vertical-align:top}.home-view .grid-row .grid-col-50.vertical>*:not(.grid-row){text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.home-view .grid-row .grid-col-50.left{text-align:left}.home-view .grid-row .grid-col-50.right{text-align:right}.home-view .grid-row .grid-col-50.center{text-align:center}.home-view .grid-row .grid-col-50.middle{-ms-flex-item-align:center;align-self:center}.home-view .grid-row .grid-col-50.top{-ms-flex-item-align:start;align-self:flex-start}.home-view .grid-row .grid-col-50.bottom{-ms-flex-item-align:end;align-self:flex-end}.home-view .grid-row .grid-col-50.stretch{-ms-flex-item-align:stretch;align-self:stretch}.home-view .grid-row .grid-col-60{-webkit-box-flex:1;-ms-flex:1;flex:1;-webkit-box-flex:0;-ms-flex-positive:0;flex-grow:0;-ms-flex-negative:0;flex-shrink:0;box-sizing:border-box;position:relative;-ms-flex-preferred-size:60%;flex-basis:60%;overflow:hidden}.home-view .grid-row .grid-col-60.enable-overflow{overflow:initial}.home-view .grid-row .grid-col-60:not(.vertical)>*:not(.grid-row){display:inline-block;vertical-align:top}.home-view .grid-row .grid-col-60.vertical>*:not(.grid-row){text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.home-view .grid-row .grid-col-60.left{text-align:left}.home-view .grid-row .grid-col-60.right{text-align:right}.home-view .grid-row .grid-col-60.center{text-align:center}.home-view .grid-row .grid-col-60.middle{-ms-flex-item-align:center;align-self:center}.home-view .grid-row .grid-col-60.top{-ms-flex-item-align:start;align-self:flex-start}.home-view .grid-row .grid-col-60.bottom{-ms-flex-item-align:end;align-self:flex-end}.home-view .grid-row .grid-col-60.stretch{-ms-flex-item-align:stretch;align-self:stretch}.home-view .grid-row .grid-col-70{-webkit-box-flex:1;-ms-flex:1;flex:1;-webkit-box-flex:0;-ms-flex-positive:0;flex-grow:0;-ms-flex-negative:0;flex-shrink:0;box-sizing:border-box;position:relative;-ms-flex-preferred-size:70%;flex-basis:70%;overflow:hidden}.home-view .grid-row .grid-col-70.enable-overflow{overflow:initial}.home-view .grid-row .grid-col-70:not(.vertical)>*:not(.grid-row){display:inline-block;vertical-align:top}.home-view .grid-row .grid-col-70.vertical>*:not(.grid-row){text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.home-view .grid-row .grid-col-70.left{text-align:left}.home-view .grid-row .grid-col-70.right{text-align:right}.home-view .grid-row .grid-col-70.center{text-align:center}.home-view .grid-row .grid-col-70.middle{-ms-flex-item-align:center;align-self:center}.home-view .grid-row .grid-col-70.top{-ms-flex-item-align:start;align-self:flex-start}.home-view .grid-row .grid-col-70.bottom{-ms-flex-item-align:end;align-self:flex-end}.home-view .grid-row .grid-col-70.stretch{-ms-flex-item-align:stretch;align-self:stretch}.home-view .grid-row .grid-col-80{-webkit-box-flex:1;-ms-flex:1;flex:1;-webkit-box-flex:0;-ms-flex-positive:0;flex-grow:0;-ms-flex-negative:0;flex-shrink:0;box-sizing:border-box;position:relative;-ms-flex-preferred-size:80%;flex-basis:80%;overflow:hidden}.home-view .grid-row .grid-col-80.enable-overflow{overflow:initial}.home-view .grid-row .grid-col-80:not(.vertical)>*:not(.grid-row){display:inline-block;vertical-align:top}.home-view .grid-row .grid-col-80.vertical>*:not(.grid-row){text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.home-view .grid-row .grid-col-80.left{text-align:left}.home-view .grid-row .grid-col-80.right{text-align:right}.home-view .grid-row .grid-col-80.center{text-align:center}.home-view .grid-row .grid-col-80.middle{-ms-flex-item-align:center;align-self:center}.home-view .grid-row .grid-col-80.top{-ms-flex-item-align:start;align-self:flex-start}.home-view .grid-row .grid-col-80.bottom{-ms-flex-item-align:end;align-self:flex-end}.home-view .grid-row .grid-col-80.stretch{-ms-flex-item-align:stretch;align-self:stretch}.home-view .grid-row .grid-col-90{-webkit-box-flex:1;-ms-flex:1;flex:1;-webkit-box-flex:0;-ms-flex-positive:0;flex-grow:0;-ms-flex-negative:0;flex-shrink:0;box-sizing:border-box;position:relative;-ms-flex-preferred-size:90%;flex-basis:90%;overflow:hidden}.home-view .grid-row .grid-col-90.enable-overflow{overflow:initial}.home-view .grid-row .grid-col-90:not(.vertical)>*:not(.grid-row){display:inline-block;vertical-align:top}.home-view .grid-row .grid-col-90.vertical>*:not(.grid-row){text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.home-view .grid-row .grid-col-90.left{text-align:left}.home-view .grid-row .grid-col-90.right{text-align:right}.home-view .grid-row .grid-col-90.center{text-align:center}.home-view .grid-row .grid-col-90.middle{-ms-flex-item-align:center;align-self:center}.home-view .grid-row .grid-col-90.top{-ms-flex-item-align:start;align-self:flex-start}.home-view .grid-row .grid-col-90.bottom{-ms-flex-item-align:end;align-self:flex-end}.home-view .grid-row .grid-col-90.stretch{-ms-flex-item-align:stretch;align-self:stretch}.home-view .grid-row .grid-col-100{-webkit-box-flex:1;-ms-flex:1;flex:1;-webkit-box-flex:0;-ms-flex-positive:0;flex-grow:0;-ms-flex-negative:0;flex-shrink:0;box-sizing:border-box;position:relative;-ms-flex-preferred-size:100%;flex-basis:100%;overflow:hidden}.home-view .grid-row .grid-col-100.enable-overflow{overflow:initial}.home-view .grid-row .grid-col-100:not(.vertical)>*:not(.grid-row){display:inline-block;vertical-align:top}.home-view .grid-row .grid-col-100.vertical>*:not(.grid-row){text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.home-view .grid-row .grid-col-100.left{text-align:left}.home-view .grid-row .grid-col-100.right{text-align:right}.home-view .grid-row .grid-col-100.center{text-align:center}.home-view .grid-row .grid-col-100.middle{-ms-flex-item-align:center;align-self:center}.home-view .grid-row .grid-col-100.top{-ms-flex-item-align:start;align-self:flex-start}.home-view .grid-row .grid-col-100.bottom{-ms-flex-item-align:end;align-self:flex-end}.home-view .grid-row .grid-col-100.stretch{-ms-flex-item-align:stretch;align-self:stretch}.home-view .home-header-bar{position:absolute;top:0;left:0;right:0;height:42px}.home-view .container{position:absolute;top:42px;bottom:0;left:0;right:0;overflow-y:auto}.home-view .container .datacubes,.home-view .container .collections{margin-top:36px;margin-bottom:20px;padding:0 12%}.home-view .container .datacubes .section-title,.home-view .container .collections .section-title{text-transform:uppercase;color:#1ea3e6;margin-bottom:10px;font-size:15px}.home-view .container .datacubes .actions,.home-view .container .collections .actions{margin-top:-7px;padding-right:5px;display:none}.home-view .container .datacubes .actions>*,.home-view .container .collections .actions>*{cursor:pointer}.home-view .container .datacubes .actions>* .svg-icon,.home-view .container .collections .actions>* .svg-icon{height:20px;padding:1px 0 0 1px}.home-view .container .datacubes .actions>* .svg-icon path,.home-view .container .collections .actions>* .svg-icon path{fill:#1ea3e6}.home-view .container .datacubes .actions>*:hover .svg-icon path,.home-view .container .collections .actions>*:hover .svg-icon path{fill:#1795d3}.home-view .container .datacubes .items-container,.home-view .container .collections .items-container{display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap}.home-view .container .datacubes .items-container .item-card,.home-view .container .collections .items-container .item-card{-webkit-box-flex:1;-ms-flex:1 0 auto;flex:1 0 auto;min-width:310px}.home-view .container .datacubes .items-container .item-card.empty,.home-view .container .collections .items-container .item-card.empty{height:0;opacity:0;margin:0;padding:0}\n", ""]);

	// exports


/***/ },
/* 628 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(629);
	var React = __webpack_require__(5);
	var index_1 = __webpack_require__(293);
	var HomeHeaderBar = (function (_super) {
	    __extends(HomeHeaderBar, _super);
	    function HomeHeaderBar() {
	        _super.call(this);
	        this.state = {
	            userMenuOpenOn: null
	        };
	    }
	    HomeHeaderBar.prototype.onUserMenuClick = function (e) {
	        var userMenuOpenOn = this.state.userMenuOpenOn;
	        if (userMenuOpenOn)
	            return this.onUserMenuClose();
	        this.setState({
	            userMenuOpenOn: e.target
	        });
	    };
	    HomeHeaderBar.prototype.onUserMenuClose = function () {
	        this.setState({
	            userMenuOpenOn: null
	        });
	    };
	    HomeHeaderBar.prototype.renderUserMenu = function () {
	        var _a = this.props, user = _a.user, customization = _a.customization;
	        var userMenuOpenOn = this.state.userMenuOpenOn;
	        if (!userMenuOpenOn)
	            return null;
	        return React.createElement(index_1.UserMenu, {openOn: userMenuOpenOn, onClose: this.onUserMenuClose.bind(this), user: user, customization: customization});
	    };
	    HomeHeaderBar.prototype.render = function () {
	        var _a = this.props, user = _a.user, onNavClick = _a.onNavClick, customization = _a.customization, title = _a.title;
	        var userButton = null;
	        if (user) {
	            userButton = React.createElement("div", {className: "icon-button user", onClick: this.onUserMenuClick.bind(this)}, 
	                React.createElement(index_1.SvgIcon, {svg: __webpack_require__(503)})
	            );
	        }
	        var headerStyle = null;
	        if (customization && customization.headerBackground) {
	            headerStyle = {
	                background: customization.headerBackground
	            };
	        }
	        return React.createElement("header", {className: "home-header-bar", style: headerStyle}, 
	            React.createElement("div", {className: "left-bar", onClick: onNavClick}, 
	                React.createElement("div", {className: "menu-icon"}, 
	                    React.createElement(index_1.SvgIcon, {svg: __webpack_require__(507)})
	                ), 
	                React.createElement("div", {className: "title"}, title)), 
	            React.createElement("div", {className: "right-bar"}, 
	                this.props.children, 
	                userButton), 
	            this.renderUserMenu());
	    };
	    return HomeHeaderBar;
	}(React.Component));
	exports.HomeHeaderBar = HomeHeaderBar;


/***/ },
/* 629 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(630);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../../node_modules/css-loader/index.js!./home-header-bar.css", function() {
				var newContent = require("!!./../../../../../node_modules/css-loader/index.js!./home-header-bar.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 630 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".home-header-bar .right-bar .icon-button::after{background:#fff;border-radius:2px;box-shadow:0 3px 10px 0 rgba(0,0,0,0.26),0 0 3px 0 rgba(0,0,0,0.16)}.home-header-bar{background:#1ea3e6;color:#fff;font-size:16px;z-index:11}.home-header-bar .left-bar{display:inline-block;height:100%;padding-left:12px;padding-right:12px;cursor:pointer}.home-header-bar .left-bar .menu-icon{display:inline-block;padding:11px 5px}.home-header-bar .left-bar .menu-icon svg path{fill:#fff}.home-header-bar .left-bar .title{display:inline-block;font-size:15px;margin-top:13px;padding:0 7px}.home-header-bar .right-bar{position:absolute;top:0;right:12px}.home-header-bar .right-bar .text-button{display:inline-block;font-size:12px;text-transform:uppercase;height:42px;line-height:42px;padding:0 5px;margin-right:2px;cursor:pointer;background-color:transparent;color:#fff}.home-header-bar .right-bar .icon-button{display:inline-block;padding:11px 5px;cursor:pointer}.home-header-bar .right-bar .icon-button:not(:first-child){margin-left:3px}.home-header-bar .right-bar .icon-button:active::after{display:none}.home-header-bar .right-bar .icon-button.help::after{content:'Google Groups'}.home-header-bar .right-bar .icon-button.auto-refresh::after{content:'Refresh options'}.home-header-bar .right-bar .icon-button.hiluk::after{content:'Share link'}.home-header-bar .right-bar .icon-button.user::after{content:'User'}.home-header-bar .right-bar .icon-button.github::after{content:'Pivot on Github'}.home-header-bar .right-bar .icon-button.settings::after{content:'Settings'}.home-header-bar .right-bar .icon-button:hover::after{opacity:1}.home-header-bar .right-bar .icon-button::after{opacity:0;pointer-events:none;position:absolute;display:block;bottom:-24px;right:0;padding:5px;color:#000;font-size:12px;white-space:nowrap}.home-header-bar .right-bar .icon-button svg path{fill:#fff}.home-header-bar .right-bar .button-group{display:inline-block;padding-top:6px;margin-left:8px}.home-header-bar .right-bar .button-group>*:not(:last-child){margin-right:8px}.home-header-bar .right-bar .button-group .cancel{color:#fff;background-color:rgba(255,255,255,0.28)}.home-header-bar .right-bar .button-group .cancel:hover{background-color:rgba(255,255,255,0.36)}.home-header-bar .right-bar .button-group .save{color:#1ea3e6;background-color:#fff}.home-header-bar .right-bar .button-group .save:hover{background-color:rgba(255,255,255,0.92)}.home-header-bar svg{height:19px;width:19px}\n", ""]);

	// exports


/***/ },
/* 631 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(632);
	var React = __webpack_require__(5);
	var constants_1 = __webpack_require__(292);
	var svg_icon_1 = __webpack_require__(187);
	var ItemCard = (function (_super) {
	    __extends(ItemCard, _super);
	    function ItemCard() {
	        _super.apply(this, arguments);
	    }
	    ItemCard.getNewItemCard = function (onClick) {
	        return React.createElement("div", {className: "item-card new-one", onClick: onClick}, 
	            React.createElement("div", {className: "inner-container"}, 
	                React.createElement(svg_icon_1.SvgIcon, {svg: __webpack_require__(477)})
	            )
	        );
	    };
	    ItemCard.prototype.render = function () {
	        var _a = this.props, title = _a.title, description = _a.description, icon = _a.icon, onClick = _a.onClick, count = _a.count;
	        return React.createElement("div", {className: "item-card", onClick: onClick}, 
	            React.createElement("div", {className: "inner-container"}, 
	                React.createElement(svg_icon_1.SvgIcon, {svg: __webpack_require__(468)("./" + icon + ".svg")}), 
	                React.createElement("div", {className: "text"}, 
	                    React.createElement("div", {className: "title"}, 
	                        title, 
	                        " ", 
	                        count !== undefined ? React.createElement("span", {className: "count"}, count) : null), 
	                    React.createElement("div", {className: "description"}, description || constants_1.STRINGS.noDescription)))
	        );
	    };
	    return ItemCard;
	}(React.Component));
	exports.ItemCard = ItemCard;


/***/ },
/* 632 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(633);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../../node_modules/css-loader/index.js!./item-card.css", function() {
				var newContent = require("!!./../../../../../node_modules/css-loader/index.js!./item-card.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 633 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".item-card{width:280px;height:94px;padding:5px 5px 0 0;cursor:pointer}.item-card .inner-container{background-color:#fff;box-shadow:0 1px 1px 0 rgba(0,0,0,0.1);width:100%;height:100%;padding:16px 16px;border-radius:2px;white-space:nowrap}.item-card .inner-container>*{display:inline-block}.item-card .inner-container .svg-icon{height:19px;margin-right:9px;opacity:0.6}.item-card .inner-container .svg-icon path{fill:#1ea3e6}.item-card .inner-container .text{padding-top:3px;white-space:normal;width:calc(100% - 30px)}.item-card .inner-container .text .title{font-size:13px;color:#000;margin-bottom:6px;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.item-card .inner-container .text .description{font-size:12px;line-height:16px;color:#aaa;height:33px;overflow-y:hidden}.item-card .inner-container .count{margin-left:3px}.item-card .inner-container .count::before{content:'('}.item-card .inner-container .count::after{content:')'}.item-card.new-one{opacity:0.4}.item-card.new-one:hover{opacity:0.6}.item-card.new-one .inner-container{text-align:center;box-shadow:initial;background:#fff}.item-card.new-one .inner-container .svg-icon{margin-top:10px;height:36px}.item-card.new-one .inner-container .svg-icon path{fill:#777}.item-card:hover{z-index:1}.item-card:hover .inner-container .svg-icon{opacity:1}\n", ""]);

	// exports


/***/ },
/* 634 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(635);
	var React = __webpack_require__(5);
	var ReactDOM = __webpack_require__(39);
	var plywood_1 = __webpack_require__(199);
	var dom_1 = __webpack_require__(300);
	var index_1 = __webpack_require__(202);
	var localStorage = __webpack_require__(374);
	var constants_1 = __webpack_require__(292);
	var index_2 = __webpack_require__(293);
	var index_3 = __webpack_require__(637);
	var link_header_bar_1 = __webpack_require__(657);
	var $maxTime = plywood_1.$(index_1.FilterClause.MAX_TIME_REF_NAME);
	var latestPresets = [
	    { name: constants_1.STRINGS.last5Minutes, selection: $maxTime.timeRange('PT5M', -1) },
	    { name: constants_1.STRINGS.lastHour, selection: $maxTime.timeRange('PT1H', -1) },
	    { name: constants_1.STRINGS.lastDay, selection: $maxTime.timeRange('P1D', -1) },
	    { name: constants_1.STRINGS.lastWeek, selection: $maxTime.timeRange('P1W', -1) }
	];
	var MIN_PANEL_WIDTH = 240;
	var MAX_PANEL_WIDTH = 400;
	var LinkView = (function (_super) {
	    __extends(LinkView, _super);
	    function LinkView() {
	        var _this = this;
	        _super.call(this);
	        this.state = {
	            linkTile: null,
	            essence: null,
	            visualizationStage: null,
	            menuStage: null,
	            layout: this.getStoredLayout()
	        };
	        var clicker = {
	            changeFilter: function (filter, colors) {
	                var essence = _this.state.essence;
	                essence = essence.changeFilter(filter);
	                if (colors)
	                    essence = essence.changeColors(colors);
	                _this.setState({ essence: essence });
	            },
	            changeTimeSelection: function (selection) {
	                var essence = _this.state.essence;
	                _this.setState({ essence: essence.changeTimeSelection(selection) });
	            },
	            changeColors: function (colors) {
	                var essence = _this.state.essence;
	                _this.setState({ essence: essence.changeColors(colors) });
	            },
	            changePinnedSortMeasure: function (measure) {
	                var essence = _this.state.essence;
	                _this.setState({ essence: essence.changePinnedSortMeasure(measure) });
	            },
	            toggleMeasure: function (measure) {
	                var essence = _this.state.essence;
	                _this.setState({ essence: essence.toggleSelectedMeasure(measure) });
	            },
	            changeHighlight: function (owner, measure, delta) {
	                var essence = _this.state.essence;
	                _this.setState({ essence: essence.changeHighlight(owner, measure, delta) });
	            },
	            acceptHighlight: function () {
	                var essence = _this.state.essence;
	                _this.setState({ essence: essence.acceptHighlight() });
	            },
	            dropHighlight: function () {
	                var essence = _this.state.essence;
	                _this.setState({ essence: essence.dropHighlight() });
	            }
	        };
	        this.clicker = clicker;
	        this.globalResizeListener = this.globalResizeListener.bind(this);
	    }
	    LinkView.prototype.componentWillMount = function () {
	        var _a = this.props, hash = _a.hash, collection = _a.collection, updateViewHash = _a.updateViewHash;
	        var linkTile = collection.findByName(hash);
	        if (!linkTile) {
	            linkTile = collection.getDefaultTile();
	            updateViewHash(linkTile.name);
	        }
	        this.setState({
	            linkTile: linkTile,
	            essence: linkTile.essence
	        });
	    };
	    LinkView.prototype.componentDidMount = function () {
	        window.addEventListener('resize', this.globalResizeListener);
	        this.globalResizeListener();
	    };
	    LinkView.prototype.componentWillReceiveProps = function (nextProps) {
	        var _a = this.props, hash = _a.hash, collection = _a.collection;
	        if (hash !== nextProps.hash) {
	            var linkTile = collection.findByName(hash);
	            this.setState({ linkTile: linkTile });
	        }
	    };
	    LinkView.prototype.componentWillUpdate = function (nextProps, nextState) {
	        var updateViewHash = this.props.updateViewHash;
	        var linkTile = this.state.linkTile;
	        if (updateViewHash && !nextState.linkTile.equals(linkTile)) {
	            updateViewHash(nextState.linkTile.name);
	        }
	    };
	    LinkView.prototype.componentWillUnmount = function () {
	        window.removeEventListener('resize', this.globalResizeListener);
	    };
	    LinkView.prototype.globalResizeListener = function () {
	        var _a = this.refs, container = _a.container, visualization = _a.visualization;
	        var containerDOM = ReactDOM.findDOMNode(container);
	        var visualizationDOM = ReactDOM.findDOMNode(visualization);
	        if (!containerDOM || !visualizationDOM)
	            return;
	        var deviceSize = 'large';
	        if (window.innerWidth <= 1250)
	            deviceSize = 'medium';
	        if (window.innerWidth <= 1080)
	            deviceSize = 'small';
	        this.setState({
	            deviceSize: deviceSize,
	            menuStage: index_1.Stage.fromClientRect(containerDOM.getBoundingClientRect()),
	            visualizationStage: index_1.Stage.fromClientRect(visualizationDOM.getBoundingClientRect())
	        });
	    };
	    LinkView.prototype.selectLinkItem = function (linkTile) {
	        var essence = this.state.essence;
	        var newEssence = linkTile.essence;
	        if (essence.getTimeAttribute()) {
	            newEssence = newEssence.changeTimeSelection(essence.getTimeSelection());
	        }
	        this.setState({
	            linkTile: linkTile,
	            essence: newEssence
	        });
	    };
	    LinkView.prototype.goToCubeView = function () {
	        var _a = this.props, changeHash = _a.changeHash, getUrlPrefix = _a.getUrlPrefix;
	        var essence = this.state.essence;
	        changeHash(essence.dataCube.name + "/" + essence.toHash(), true);
	    };
	    LinkView.prototype.changeTimezone = function (newTimezone) {
	        var essence = this.state.essence;
	        var newEssence = essence.changeTimezone(newTimezone);
	        this.setState({ essence: newEssence });
	    };
	    LinkView.prototype.getStoredLayout = function () {
	        return localStorage.get('link-view-layout') || { linkPanelWidth: 240, pinboardWidth: 240 };
	    };
	    LinkView.prototype.storeLayout = function (layout) {
	        localStorage.set('link-view-layout', layout);
	    };
	    LinkView.prototype.onLinkPanelResize = function (value) {
	        var layout = this.state.layout;
	        layout.linkPanelWidth = value;
	        this.setState({ layout: layout });
	        this.storeLayout(layout);
	    };
	    LinkView.prototype.onPinboardPanelResize = function (value) {
	        var layout = this.state.layout;
	        layout.pinboardWidth = value;
	        this.setState({ layout: layout });
	        this.storeLayout(layout);
	    };
	    LinkView.prototype.onPanelResizeEnd = function () {
	        this.globalResizeListener();
	    };
	    LinkView.prototype.selectPreset = function (p) {
	        this.clicker.changeTimeSelection(p.selection);
	    };
	    LinkView.prototype.renderPresets = function () {
	        var essence = this.state.essence;
	        var PresetDropdown = index_2.Dropdown.specialize();
	        var selected = plywood_1.find(latestPresets, function (p) { return p.selection.equals(essence.getTimeSelection()); });
	        return React.createElement(PresetDropdown, {items: latestPresets, selectedItem: selected, equal: function (a, b) {
	            if (a === b)
	                return true;
	            if (!a !== !b)
	                return false;
	            return a.selection === b.selection;
	        }, renderItem: function (p) { return p ? p.name : ""; }, onSelect: this.selectPreset.bind(this)});
	    };
	    LinkView.prototype.renderLinkPanel = function (style) {
	        var _this = this;
	        var collection = this.props.collection;
	        var linkTile = this.state.linkTile;
	        var groupId = 0;
	        var lastGroup = null;
	        var items = [];
	        collection.tiles.forEach(function (li) {
	            if (lastGroup !== li.group) {
	                items.push(React.createElement("div", {className: "link-group-title", key: 'group_' + groupId}, li.group));
	                groupId++;
	                lastGroup = li.group;
	            }
	            items.push(React.createElement("div", {className: dom_1.classNames('link-item', { selected: li === linkTile }), key: 'li_' + li.name, onClick: _this.selectLinkItem.bind(_this, li)}, li.title));
	        });
	        return React.createElement("div", {className: "link-panel", style: style}, 
	            React.createElement("div", {className: "link-container"}, items)
	        );
	    };
	    LinkView.prototype.render = function () {
	        var clicker = this.clicker;
	        var _a = this.props, timekeeper = _a.timekeeper, getUrlPrefix = _a.getUrlPrefix, onNavClick = _a.onNavClick, collection = _a.collection, user = _a.user, customization = _a.customization, stateful = _a.stateful;
	        var _b = this.state, deviceSize = _b.deviceSize, linkTile = _b.linkTile, essence = _b.essence, visualizationStage = _b.visualizationStage, layout = _b.layout;
	        if (!linkTile)
	            return null;
	        var visualization = essence.visualization;
	        var visElement = null;
	        if (essence.visResolve.isReady() && visualizationStage) {
	            var visProps = {
	                clicker: clicker,
	                timekeeper: timekeeper,
	                essence: essence,
	                stage: visualizationStage
	            };
	            visElement = React.createElement(index_3.getVisualizationComponent(visualization), visProps);
	        }
	        var manualFallback = null;
	        if (essence.visResolve.isManual()) {
	            manualFallback = React.createElement(index_2.ManualFallback, {
	                clicker: clicker,
	                essence: essence
	            });
	        }
	        var styles = {
	            linkMeasurePanel: { width: layout.linkPanelWidth },
	            centerPanel: { left: layout.linkPanelWidth, right: layout.pinboardWidth },
	            pinboardPanel: { width: layout.pinboardWidth }
	        };
	        if (deviceSize === 'small') {
	            styles = {
	                linkMeasurePanel: { width: 200 },
	                centerPanel: { left: 200, right: 200 },
	                pinboardPanel: { width: 200 }
	            };
	        }
	        return React.createElement("div", {className: 'link-view'}, 
	            React.createElement(link_header_bar_1.LinkHeaderBar, {title: collection.title, user: user, onNavClick: onNavClick, onExploreClick: this.goToCubeView.bind(this), getUrlPrefix: getUrlPrefix, customization: customization, changeTimezone: this.changeTimezone.bind(this), timezone: essence.timezone, stateful: stateful}), 
	            React.createElement("div", {className: "container", ref: 'container'}, 
	                this.renderLinkPanel(styles.linkMeasurePanel), 
	                deviceSize !== 'small' ? React.createElement(index_2.ResizeHandle, {side: "left", initialValue: layout.linkPanelWidth, onResize: this.onLinkPanelResize.bind(this), onResizeEnd: this.onPanelResizeEnd.bind(this), min: MIN_PANEL_WIDTH, max: MAX_PANEL_WIDTH}) : null, 
	                React.createElement("div", {className: 'center-panel', style: styles.centerPanel}, 
	                    React.createElement("div", {className: 'center-top-bar'}, 
	                        React.createElement("div", {className: 'link-title'}, linkTile.title), 
	                        React.createElement("div", {className: 'link-description'}, linkTile.description), 
	                        React.createElement("div", {className: "right-align"}, this.renderPresets())), 
	                    React.createElement("div", {className: 'center-main'}, 
	                        React.createElement("div", {className: 'visualization', ref: 'visualization'}, visElement), 
	                        manualFallback)), 
	                deviceSize !== 'small' ? React.createElement(index_2.ResizeHandle, {side: "right", initialValue: layout.pinboardWidth, onResize: this.onPinboardPanelResize.bind(this), onResizeEnd: this.onPanelResizeEnd.bind(this), min: MIN_PANEL_WIDTH, max: MAX_PANEL_WIDTH}) : null, 
	                React.createElement(index_2.PinboardPanel, {style: styles.pinboardPanel, clicker: clicker, essence: essence, timekeeper: timekeeper, getUrlPrefix: getUrlPrefix})));
	    };
	    return LinkView;
	}(React.Component));
	exports.LinkView = LinkView;


/***/ },
/* 635 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(636);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./link-view.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./link-view.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 636 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".link-view .center-panel .center-top-bar,.link-view .center-panel .center-main .visualization{background:#fff;box-shadow:0 1px 1px 0 rgba(0,0,0,0.1)}.link-view .link-header-bar{position:absolute;top:0;left:0;right:0;height:42px}.link-view .container{position:absolute;top:42px;bottom:0;left:0;right:0}.link-view .link-panel{position:absolute;top:0;bottom:0;left:0;width:230px;padding:10px 10px}@media only screen and (max-width: 1080px){.link-view .link-panel{padding:0 1px 0 0;font-size:0.9em}}.link-view .link-panel .link-container{background:#fff;overflow:auto;padding-right:10px;height:100%}.link-view .link-panel .link-container .link-group-title{padding:0 18px;color:#999;font-size:12px;text-transform:uppercase;pointer-events:none;margin-top:8px;height:25px;line-height:25px}.link-view .link-panel .link-container .link-item{white-space:nowrap;overflow-x:hidden;text-overflow:ellipsis;height:25px;line-height:25px;padding:0 4px 0 38px;cursor:pointer;overflow:hidden}.link-view .link-panel .link-container .link-item.selected{background:rgba(30,163,230,0.16)}.link-view .link-panel .link-container .link-item:hover:not(.selected){background:rgba(30,163,230,0.12)}.link-view .center-panel{position:absolute;top:10px;bottom:10px;left:240px;right:240px}@media only screen and (max-width: 1080px){.link-view .center-panel{top:0;bottom:0}}.link-view .center-panel .center-top-bar{position:absolute;top:0;left:0;right:0;height:73px;border-radius:2px;padding:17px 20px;border-bottom:1px solid #eee}.link-view .center-panel .center-top-bar .link-title{white-space:nowrap;overflow-x:hidden;text-overflow:ellipsis;font-size:17px;margin-bottom:8px;padding-right:152px}.link-view .center-panel .center-top-bar .link-description{line-height:13px;max-height:26px;overflow:hidden;color:#999;padding-right:152px}.link-view .center-panel .center-top-bar .right-align{position:absolute;min-width:150px;right:18px;top:18px;bottom:18px}.link-view .center-panel .center-main{position:absolute;top:78px;bottom:0;left:0;right:0}@media only screen and (max-width: 1080px){.link-view .center-panel .center-main{position:absolute;top:74px;bottom:0;left:0;right:0}}.link-view .center-panel .center-main .visualization{position:absolute;top:0;bottom:0;left:0;right:0;border-radius:2px}.link-view .center-panel .center-main .visualization .line-chart,.link-view .center-panel .center-main .visualization .table{position:absolute;top:0;bottom:0;left:0;right:0}.link-view .center-panel .center-main .manual-fallback{position:absolute;top:0;bottom:0;left:0;right:0}.link-view .center-panel .center-main .drop-indicator{position:absolute;top:0;bottom:0;left:0;right:0;z-index:9}.link-view .pinboard-panel{position:absolute;top:0;bottom:0;right:0;width:240px;margin-bottom:9px}@media only screen and (max-width: 1080px){.link-view .pinboard-panel{margin-bottom:0}}.link-view .pinboard-panel .pinboard-measure-tile:first-child,.link-view .pinboard-panel .dimension-tile:first-child,.link-view .pinboard-panel .placeholder-tile:first-child{border-radius:2px 2px 0 0}.link-view .pinboard-panel .pinboard-measure-tile:last-child,.link-view .pinboard-panel .dimension-tile:last-child,.link-view .pinboard-panel .placeholder-tile:last-child{border-radius:0 0 2px 2px}\n", ""]);

	// exports


/***/ },
/* 637 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var plywood_1 = __webpack_require__(199);
	var totals_1 = __webpack_require__(638);
	var table_1 = __webpack_require__(644);
	var line_chart_1 = __webpack_require__(647);
	var bar_chart_1 = __webpack_require__(650);
	var geo_1 = __webpack_require__(654);
	var VIS_COMPONENTS = [
	    totals_1.Totals,
	    table_1.Table,
	    line_chart_1.LineChart,
	    bar_chart_1.BarChart,
	    geo_1.Geo
	];
	function getVisualizationComponent(manifest) {
	    var manifestName = manifest.name;
	    return plywood_1.find(VIS_COMPONENTS, function (v) { return v.id === manifestName; });
	}
	exports.getVisualizationComponent = getVisualizationComponent;


/***/ },
/* 638 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(639);
	var React = __webpack_require__(5);
	var plywood_1 = __webpack_require__(199);
	var totals_1 = __webpack_require__(277);
	var base_visualization_1 = __webpack_require__(641);
	var PADDING_H = 60;
	var TOTAL_WIDTH = 176;
	var Totals = (function (_super) {
	    __extends(Totals, _super);
	    function Totals() {
	        _super.call(this);
	    }
	    Totals.prototype.componentWillMount = function () {
	        this.precalculate(this.props);
	    };
	    Totals.prototype.componentDidMount = function () {
	        this._isMounted = true;
	        var _a = this.props, essence = _a.essence, timekeeper = _a.timekeeper;
	        this.fetchData(essence, timekeeper);
	    };
	    Totals.prototype.componentWillReceiveProps = function (nextProps) {
	        this.precalculate(nextProps);
	        var _a = this.props, essence = _a.essence, timekeeper = _a.timekeeper;
	        var nextEssence = nextProps.essence;
	        var nextTimekeeper = nextProps.timekeeper;
	        if (nextEssence.differentDataCube(essence) ||
	            nextEssence.differentEffectiveFilter(essence, timekeeper, nextTimekeeper, Totals.id) ||
	            nextEssence.newEffectiveMeasures(essence)) {
	            this.fetchData(nextEssence, nextTimekeeper);
	        }
	    };
	    Totals.prototype.componentWillUnmount = function () {
	        this._isMounted = false;
	    };
	    Totals.prototype.makeQuery = function (essence, timekeeper) {
	        var query = plywood_1.ply()
	            .apply('main', plywood_1.$('main').filter(essence.getEffectiveFilter(timekeeper, Totals.id).toExpression()));
	        essence.getEffectiveMeasures().forEach(function (measure) {
	            query = query.performAction(measure.toApplyAction());
	        });
	        return query;
	    };
	    Totals.prototype.precalculate = function (props, datasetLoad) {
	        if (datasetLoad === void 0) { datasetLoad = null; }
	        var registerDownloadableDataset = props.registerDownloadableDataset, essence = props.essence;
	        var splits = essence.splits;
	        var existingDatasetLoad = this.state.datasetLoad;
	        var newState = {};
	        if (datasetLoad) {
	            if (datasetLoad.loading)
	                datasetLoad.dataset = existingDatasetLoad.dataset;
	            newState.datasetLoad = datasetLoad;
	        }
	        else {
	            datasetLoad = existingDatasetLoad;
	        }
	        var dataset = datasetLoad.dataset;
	        if (dataset && splits.length()) {
	            if (registerDownloadableDataset)
	                registerDownloadableDataset(dataset);
	        }
	        this.setState(newState);
	    };
	    Totals.prototype.renderInternals = function () {
	        var _a = this.props, essence = _a.essence, stage = _a.stage;
	        var datasetLoad = this.state.datasetLoad;
	        var myDatum = datasetLoad.dataset ? datasetLoad.dataset.data[0] : null;
	        var measures = essence.getEffectiveMeasures();
	        var single = measures.size === 1;
	        var totals = measures.map(function (measure) {
	            var measureValueStr = '-';
	            if (myDatum) {
	                measureValueStr = measure.formatDatum(myDatum);
	            }
	            return React.createElement("div", {className: 'total' + (single ? ' single' : ''), key: measure.name}, 
	                React.createElement("div", {className: "measure-name"}, measure.title), 
	                React.createElement("div", {className: "measure-value"}, measureValueStr));
	        });
	        var totalContainerStyle = null;
	        if (!single) {
	            var numColumns = Math.min(totals.size, Math.max(1, Math.floor((stage.width - 2 * PADDING_H) / TOTAL_WIDTH)));
	            var containerWidth = numColumns * TOTAL_WIDTH;
	            totalContainerStyle = {
	                left: '50%',
	                width: containerWidth,
	                marginLeft: -containerWidth / 2
	            };
	        }
	        return React.createElement("div", {className: "internals"}, 
	            React.createElement("div", {className: "total-container", style: totalContainerStyle}, totals)
	        );
	    };
	    Totals.id = totals_1.TOTALS_MANIFEST.name;
	    return Totals;
	}(base_visualization_1.BaseVisualization));
	exports.Totals = Totals;


/***/ },
/* 639 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(640);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./totals.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./totals.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 640 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".totals .total-container{position:absolute;top:60px;padding-bottom:60px;width:100%}.totals .total{display:inline-block;width:176px;text-align:center;padding:0 10px;margin-bottom:34px}.totals .total .measure-name{white-space:nowrap;overflow-x:hidden;text-overflow:ellipsis;width:100%;cursor:default;font-size:15px;padding-bottom:8px;color:#999;-webkit-user-select:text;-moz-user-select:text;-ms-user-select:text;user-select:text}.totals .total .measure-value{width:100%;cursor:default;font-size:30px;-webkit-user-select:text;-moz-user-select:text;-ms-user-select:text;user-select:text}.totals .total.single{width:100%}.totals .total.single .measure-name{font-size:22px;padding-bottom:11px}.totals .total.single .measure-value{font-size:44px}\n", ""]);

	// exports


/***/ },
/* 641 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(642);
	var React = __webpack_require__(5);
	var plywood_1 = __webpack_require__(199);
	var constants_1 = __webpack_require__(292);
	var index_1 = __webpack_require__(293);
	var BaseVisualization = (function (_super) {
	    __extends(BaseVisualization, _super);
	    function BaseVisualization() {
	        _super.call(this);
	        this.lastRenderResult = null;
	        this.state = this.getDefaultState();
	    }
	    BaseVisualization.prototype.getDefaultState = function () {
	        return {
	            datasetLoad: {},
	            scrollLeft: 0,
	            scrollTop: 0,
	            hoverMeasure: null
	        };
	    };
	    Object.defineProperty(BaseVisualization.prototype, "id", {
	        get: function () {
	            return this.constructor.id;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    BaseVisualization.prototype.onScroll = function (e) {
	        var target = e.target;
	        this.setState({
	            scrollLeft: target.scrollLeft,
	            scrollTop: target.scrollTop
	        });
	    };
	    BaseVisualization.prototype.makeQuery = function (essence, timekeeper) {
	        var splits = essence.splits, colors = essence.colors, dataCube = essence.dataCube;
	        var measures = essence.getEffectiveMeasures();
	        var $main = plywood_1.$('main');
	        var query = plywood_1.ply()
	            .apply('main', $main.filter(essence.getEffectiveFilter(timekeeper, this.id).toExpression()));
	        measures.forEach(function (measure) {
	            query = query.performAction(measure.toApplyAction());
	        });
	        function makeSubQuery(i) {
	            var split = splits.get(i);
	            var splitDimension = dataCube.getDimensionByExpression(split.expression);
	            var sortAction = split.sortAction, limitAction = split.limitAction;
	            if (!sortAction) {
	                throw new Error('something went wrong during query generation');
	            }
	            var subQuery = $main.split(split.toSplitExpression(), splitDimension.name);
	            if (colors && colors.dimension === splitDimension.name) {
	                var havingFilter = colors.toHavingFilter(splitDimension.name);
	                if (havingFilter) {
	                    subQuery = subQuery.performAction(havingFilter);
	                }
	            }
	            measures.forEach(function (measure) {
	                subQuery = subQuery.performAction(measure.toApplyAction());
	            });
	            var applyForSort = essence.getApplyForSort(sortAction);
	            if (applyForSort) {
	                subQuery = subQuery.performAction(applyForSort);
	            }
	            subQuery = subQuery.performAction(sortAction);
	            if (colors && colors.dimension === splitDimension.name) {
	                subQuery = subQuery.performAction(colors.toLimitAction());
	            }
	            else if (limitAction) {
	                subQuery = subQuery.performAction(limitAction);
	            }
	            else if (splitDimension.kind === 'number') {
	                subQuery = subQuery.limit(5000);
	            }
	            if (i + 1 < splits.length()) {
	                subQuery = subQuery.apply(constants_1.SPLIT, makeSubQuery(i + 1));
	            }
	            return subQuery;
	        }
	        return query.apply(constants_1.SPLIT, makeSubQuery(0));
	    };
	    BaseVisualization.prototype.fetchData = function (essence, timekeeper) {
	        var _this = this;
	        var registerDownloadableDataset = this.props.registerDownloadableDataset;
	        var query = this.makeQuery(essence, timekeeper);
	        this.precalculate(this.props, { loading: true });
	        essence.dataCube.executor(query, { timezone: essence.timezone })
	            .then(function (dataset) {
	            if (!_this._isMounted)
	                return;
	            _this.precalculate(_this.props, {
	                loading: false,
	                dataset: dataset,
	                error: null
	            });
	        }, function (error) {
	            if (registerDownloadableDataset)
	                registerDownloadableDataset(null);
	            if (!_this._isMounted)
	                return;
	            _this.precalculate(_this.props, {
	                loading: false,
	                dataset: null,
	                error: error
	            });
	        }).done();
	    };
	    BaseVisualization.prototype.componentWillMount = function () {
	        this.precalculate(this.props);
	    };
	    BaseVisualization.prototype.componentDidMount = function () {
	        this._isMounted = true;
	        var _a = this.props, essence = _a.essence, timekeeper = _a.timekeeper;
	        this.fetchData(essence, timekeeper);
	    };
	    BaseVisualization.prototype.componentWillReceiveProps = function (nextProps) {
	        this.precalculate(nextProps);
	        var _a = this.props, essence = _a.essence, timekeeper = _a.timekeeper;
	        var nextEssence = nextProps.essence;
	        var nextTimekeeper = nextProps.timekeeper;
	        if (nextEssence.differentDataCube(essence) ||
	            nextEssence.differentEffectiveFilter(essence, timekeeper, nextTimekeeper, this.id) ||
	            nextEssence.differentEffectiveSplits(essence) ||
	            nextEssence.differentColors(essence) ||
	            nextEssence.newEffectiveMeasures(essence)) {
	            this.fetchData(nextEssence, nextTimekeeper);
	        }
	    };
	    BaseVisualization.prototype.componentWillUnmount = function () {
	        this._isMounted = false;
	    };
	    BaseVisualization.prototype.globalMouseMoveListener = function (e) { };
	    BaseVisualization.prototype.globalMouseUpListener = function (e) { };
	    BaseVisualization.prototype.globalKeyDownListener = function (e) { };
	    BaseVisualization.prototype.renderInternals = function () {
	        return null;
	    };
	    BaseVisualization.prototype.precalculate = function (props, datasetLoad) {
	        if (datasetLoad === void 0) { datasetLoad = null; }
	    };
	    BaseVisualization.prototype.render = function () {
	        var datasetLoad = this.state.datasetLoad;
	        if (!datasetLoad.loading || !this.lastRenderResult) {
	            this.lastRenderResult = this.renderInternals();
	        }
	        return React.createElement("div", {className: 'base-visualization ' + this.id}, 
	            React.createElement(index_1.GlobalEventListener, {mouseMove: this.globalMouseMoveListener.bind(this), mouseUp: this.globalMouseUpListener.bind(this), keyDown: this.globalKeyDownListener.bind(this)}), 
	            this.lastRenderResult, 
	            datasetLoad.error ? React.createElement(index_1.QueryError, {error: datasetLoad.error}) : null, 
	            datasetLoad.loading ? React.createElement(index_1.Loader, null) : null);
	    };
	    BaseVisualization.id = 'base-visualization';
	    return BaseVisualization;
	}(React.Component));
	exports.BaseVisualization = BaseVisualization;


/***/ },
/* 642 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(643);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./base-visualization.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./base-visualization.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 643 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".base-visualization{position:absolute;top:0;bottom:0;left:0;right:0;overflow:hidden}.base-visualization .internals{position:absolute;top:0;bottom:0;left:0;right:0;overflow:auto}.base-visualization .loader,.base-visualization .query-error{position:absolute;top:0;bottom:0;left:0;right:0}\n", ""]);

	// exports


/***/ },
/* 644 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(645);
	var immutable_1 = __webpack_require__(210);
	var React = __webpack_require__(5);
	var plywood_1 = __webpack_require__(199);
	var formatter_1 = __webpack_require__(233);
	var index_1 = __webpack_require__(202);
	var table_1 = __webpack_require__(278);
	var dom_1 = __webpack_require__(300);
	var svg_icon_1 = __webpack_require__(187);
	var segment_bubble_1 = __webpack_require__(560);
	var scroller_1 = __webpack_require__(557);
	var base_visualization_1 = __webpack_require__(641);
	var HEADER_HEIGHT = 38;
	var SEGMENT_WIDTH = 300;
	var THUMBNAIL_SEGMENT_WIDTH = 150;
	var INDENT_WIDTH = 25;
	var MEASURE_WIDTH = 130;
	var ROW_HEIGHT = 30;
	var SPACE_LEFT = 10;
	var SPACE_RIGHT = 10;
	var HIGHLIGHT_BUBBLE_V_OFFSET = -4;
	function formatSegment(value) {
	    if (plywood_1.TimeRange.isTimeRange(value)) {
	        return value.start.toISOString();
	    }
	    else if (plywood_1.NumberRange.isNumberRange(value)) {
	        return formatter_1.formatNumberRange(value);
	    }
	    return String(value);
	}
	function getFilterFromDatum(splits, flatDatum, dataCube) {
	    if (flatDatum['__nest'] === 0)
	        return null;
	    var segments = [];
	    while (flatDatum['__nest'] > 0) {
	        segments.unshift(flatDatum[splits.get(flatDatum['__nest'] - 1).getDimension(dataCube.dimensions).name]);
	        flatDatum = flatDatum['__parent'];
	    }
	    return new index_1.Filter(immutable_1.List(segments.map(function (segment, i) {
	        return new index_1.FilterClause({
	            expression: splits.get(i).expression,
	            selection: plywood_1.r(plywood_1.TimeRange.isTimeRange(segment) ? segment : plywood_1.Set.fromJS([segment]))
	        });
	    })));
	}
	var Table = (function (_super) {
	    __extends(Table, _super);
	    function Table() {
	        _super.call(this);
	    }
	    Table.prototype.getDefaultState = function () {
	        var s = _super.prototype.getDefaultState.call(this);
	        s.flatData = null;
	        s.hoverRow = null;
	        return s;
	    };
	    Table.prototype.getSegmentWidth = function () {
	        var isThumbnail = this.props.isThumbnail;
	        return isThumbnail ? THUMBNAIL_SEGMENT_WIDTH : SEGMENT_WIDTH;
	    };
	    Table.prototype.calculateMousePosition = function (x, y) {
	        var essence = this.props.essence;
	        var flatData = this.state.flatData;
	        if (x <= SPACE_LEFT)
	            return { what: 'space-left' };
	        x -= SPACE_LEFT;
	        if (y <= HEADER_HEIGHT) {
	            if (x <= this.getSegmentWidth())
	                return { what: 'corner' };
	            x = x - this.getSegmentWidth();
	            var measureWidth = this.getIdealMeasureWidth(this.props.essence);
	            var measureIndex = Math.floor(x / measureWidth);
	            var measure = essence.getEffectiveMeasures().get(measureIndex);
	            if (!measure)
	                return { what: 'whitespace' };
	            return { what: 'header', measure: measure };
	        }
	        y = y - HEADER_HEIGHT;
	        var rowIndex = Math.floor(y / ROW_HEIGHT);
	        var datum = flatData ? flatData[rowIndex] : null;
	        if (!datum)
	            return { what: 'whitespace' };
	        return { what: 'row', row: datum };
	    };
	    Table.prototype.onClick = function (x, y) {
	        var _a = this.props, clicker = _a.clicker, essence = _a.essence;
	        var splits = essence.splits, dataCube = essence.dataCube;
	        var pos = this.calculateMousePosition(x, y);
	        if (pos.what === 'corner' || pos.what === 'header') {
	            if (!clicker.changeSplits)
	                return;
	            var sortExpression = plywood_1.$(pos.what === 'corner' ? index_1.SplitCombine.SORT_ON_DIMENSION_PLACEHOLDER : pos.measure.name);
	            var commonSort = essence.getCommonSort();
	            var myDescending = (commonSort && commonSort.expression.equals(sortExpression) && commonSort.direction === plywood_1.SortAction.DESCENDING);
	            clicker.changeSplits(essence.splits.changeSortActionFromNormalized(new plywood_1.SortAction({
	                expression: sortExpression,
	                direction: myDescending ? plywood_1.SortAction.ASCENDING : plywood_1.SortAction.DESCENDING
	            }), essence.dataCube.dimensions), index_1.VisStrategy.KeepAlways);
	        }
	        else if (pos.what === 'row') {
	            if (!clicker.dropHighlight || !clicker.changeHighlight)
	                return;
	            var rowHighlight = getFilterFromDatum(essence.splits, pos.row, dataCube);
	            if (!rowHighlight)
	                return;
	            if (essence.highlightOn(Table.id)) {
	                if (rowHighlight.equals(essence.highlight.delta)) {
	                    clicker.dropHighlight();
	                    return;
	                }
	            }
	            clicker.changeHighlight(Table.id, null, rowHighlight);
	        }
	    };
	    Table.prototype.onMouseMove = function (x, y) {
	        var _a = this.state, hoverMeasure = _a.hoverMeasure, hoverRow = _a.hoverRow;
	        var pos = this.calculateMousePosition(x, y);
	        if (hoverMeasure !== pos.measure || hoverRow !== pos.row) {
	            this.setState({
	                hoverMeasure: pos.measure,
	                hoverRow: pos.row
	            });
	        }
	    };
	    Table.prototype.onMouseLeave = function () {
	        var _a = this.state, hoverMeasure = _a.hoverMeasure, hoverRow = _a.hoverRow;
	        if (hoverMeasure || hoverRow) {
	            this.setState({
	                hoverMeasure: null,
	                hoverRow: null
	            });
	        }
	    };
	    Table.prototype.precalculate = function (props, datasetLoad) {
	        if (datasetLoad === void 0) { datasetLoad = null; }
	        var registerDownloadableDataset = props.registerDownloadableDataset, essence = props.essence;
	        var splits = essence.splits;
	        var existingDatasetLoad = this.state.datasetLoad;
	        var newState = {};
	        if (datasetLoad) {
	            if (datasetLoad.loading)
	                datasetLoad.dataset = existingDatasetLoad.dataset;
	            newState.datasetLoad = datasetLoad;
	        }
	        else {
	            datasetLoad = this.state.datasetLoad;
	        }
	        var dataset = datasetLoad.dataset;
	        if (dataset && splits.length()) {
	            if (registerDownloadableDataset)
	                registerDownloadableDataset(dataset);
	            newState.flatData = dataset.flatten({
	                order: 'preorder',
	                nestingName: '__nest',
	                parentName: '__parent'
	            });
	        }
	        this.setState(newState);
	    };
	    Table.prototype.getScalesForColumns = function (essence, flatData) {
	        var measuresArray = essence.getEffectiveMeasures().toArray();
	        var splitLength = essence.splits.length();
	        return measuresArray.map(function (measure) {
	            var measureValues = flatData
	                .filter(function (d) { return d['__nest'] === splitLength; })
	                .map(function (d) { return d[measure.name]; });
	            measureValues.push(0);
	            return d3.scale.linear()
	                .domain(d3.extent(measureValues))
	                .range([0, 100]);
	        });
	    };
	    Table.prototype.getFormattersFromMeasures = function (essence, flatData) {
	        var measuresArray = essence.getEffectiveMeasures().toArray();
	        return measuresArray.map(function (measure) {
	            var measureName = measure.name;
	            var measureValues = flatData.map(function (d) { return d[measureName]; });
	            return formatter_1.formatterFromData(measureValues, measure.getFormat());
	        });
	    };
	    Table.prototype.getIdealMeasureWidth = function (essence) {
	        var availableWidth = this.props.stage.width - SPACE_LEFT - this.getSegmentWidth();
	        var columnsCount = essence.getEffectiveMeasures().size;
	        return columnsCount * MEASURE_WIDTH >= availableWidth ? MEASURE_WIDTH : availableWidth / columnsCount;
	    };
	    Table.prototype.makeMeasuresRenderer = function (essence, formatters, hScales) {
	        var measuresArray = essence.getEffectiveMeasures().toArray();
	        var idealWidth = this.getIdealMeasureWidth(essence);
	        var splitLength = essence.splits.length();
	        var isSingleMeasure = measuresArray.length === 1;
	        var className = dom_1.classNames('measure', { 'all-alone': !!isSingleMeasure });
	        return function (datum) {
	            return measuresArray.map(function (measure, i) {
	                var measureValue = datum[measure.name];
	                var measureValueStr = formatters[i](measureValue);
	                var background = null;
	                if (datum['__nest'] === splitLength) {
	                    var backgroundWidth = hScales[i](measureValue);
	                    background = React.createElement("div", {className: "background-container"}, 
	                        React.createElement("div", {className: "background", style: { width: backgroundWidth + '%' }})
	                    );
	                }
	                return React.createElement("div", {className: className, key: measure.name, style: { width: idealWidth }}, 
	                    background, 
	                    React.createElement("div", {className: "label"}, measureValueStr));
	            });
	        };
	    };
	    Table.prototype.renderRow = function (index, rowMeasures, style, rowClass) {
	        return React.createElement("div", {className: 'row ' + rowClass, key: '_' + index, style: style}, rowMeasures);
	    };
	    Table.prototype.renderHeaderColumns = function (essence, hoverMeasure, measureWidth) {
	        var commonSort = essence.getCommonSort();
	        var commonSortName = commonSort ? commonSort.expression.name : null;
	        var sortArrowIcon = commonSort ? React.createElement(svg_icon_1.SvgIcon, {
	            svg: __webpack_require__(510),
	            className: 'sort-arrow ' + commonSort.direction
	        }) : null;
	        return essence.getEffectiveMeasures().toArray().map(function (measure, i) {
	            var amISorted = commonSortName === measure.name;
	            return React.createElement("div", {className: dom_1.classNames('measure-name', { hover: measure === hoverMeasure, sorted: amISorted }), key: measure.name, style: { width: measureWidth }}, 
	                React.createElement("div", {className: "title-wrap"}, measure.title), 
	                amISorted ? sortArrowIcon : null);
	        });
	    };
	    Table.prototype.renderCornerSortArrow = function (essence) {
	        var commonSort = essence.getCommonSort();
	        if (!commonSort)
	            return null;
	        if (commonSort.refName() === index_1.SplitCombine.SORT_ON_DIMENSION_PLACEHOLDER) {
	            return React.createElement(svg_icon_1.SvgIcon, {svg: __webpack_require__(510), className: 'sort-arrow ' + commonSort.direction});
	        }
	        return null;
	    };
	    Table.prototype.onSimpleScroll = function (scrollTop, scrollLeft) {
	        this.setState({ scrollLeft: scrollLeft, scrollTop: scrollTop });
	    };
	    Table.prototype.getVisibleIndices = function (rowCount, height) {
	        var scrollTop = this.state.scrollTop;
	        return [
	            Math.max(0, Math.floor(scrollTop / ROW_HEIGHT)),
	            Math.min(rowCount, Math.ceil((scrollTop + height) / ROW_HEIGHT))
	        ];
	    };
	    Table.prototype.renderInternals = function () {
	        var _a = this.props, clicker = _a.clicker, essence = _a.essence, stage = _a.stage, openRawDataModal = _a.openRawDataModal, isThumbnail = _a.isThumbnail;
	        var _b = this.state, flatData = _b.flatData, scrollTop = _b.scrollTop, hoverMeasure = _b.hoverMeasure, hoverRow = _b.hoverRow;
	        var splits = essence.splits, dataCube = essence.dataCube;
	        var segmentTitle = splits.getTitle(essence.dataCube.dimensions);
	        var cornerSortArrow = this.renderCornerSortArrow(essence);
	        var idealWidth = this.getIdealMeasureWidth(essence);
	        var headerColumns = this.renderHeaderColumns(essence, hoverMeasure, idealWidth);
	        var rowWidth = idealWidth * headerColumns.length;
	        var segments = [];
	        var rows = [];
	        var highlighter = null;
	        var highlighterStyle = null;
	        var highlightBubble = null;
	        if (flatData) {
	            var formatters = this.getFormattersFromMeasures(essence, flatData);
	            var hScales = this.getScalesForColumns(essence, flatData);
	            var highlightDelta = null;
	            if (essence.highlightOn(Table.id)) {
	                highlightDelta = essence.highlight.delta;
	            }
	            var _c = this.getVisibleIndices(flatData.length, stage.height), skipNumber = _c[0], lastElementToShow = _c[1];
	            var measuresRenderer = this.makeMeasuresRenderer(essence, formatters, hScales);
	            var rowY = skipNumber * ROW_HEIGHT;
	            for (var i = skipNumber; i < lastElementToShow; i++) {
	                var d = flatData[i];
	                var nest = d['__nest'];
	                var split = nest > 0 ? splits.get(nest - 1) : null;
	                var dimension = split ? split.getDimension(dataCube.dimensions) : null;
	                var segmentValue = dimension ? d[dimension.name] : '';
	                var segmentName = nest ? formatSegment(segmentValue) : 'Total';
	                var left = Math.max(0, nest - 1) * INDENT_WIDTH;
	                var segmentStyle = { left: left, width: this.getSegmentWidth() - left, top: rowY };
	                var hoverClass = d === hoverRow ? 'hover' : null;
	                var selected = false;
	                var selectedClass = '';
	                if (highlightDelta) {
	                    selected = highlightDelta.equals(getFilterFromDatum(splits, d, dataCube));
	                    selectedClass = selected ? 'selected' : 'not-selected';
	                }
	                var nestClass = "nest" + nest;
	                segments.push(React.createElement("div", {className: dom_1.classNames('segment', nestClass, selectedClass, hoverClass), key: '_' + i, style: segmentStyle}, segmentName));
	                var rowMeasures = measuresRenderer(d);
	                var rowClass = dom_1.classNames(nestClass, selectedClass, hoverClass);
	                var rowStyle = { top: rowY, width: rowWidth };
	                rows.push(this.renderRow(i, rowMeasures, rowStyle, rowClass));
	                if (!highlighter && selected) {
	                    highlighterStyle = {
	                        top: rowY - scrollTop,
	                        left: left
	                    };
	                    var dimension = essence.dataCube.getDimensionByExpression(splits.splitCombines.get(nest - 1).expression);
	                    highlighter = React.createElement("div", {className: 'highlighter', key: 'highlight', style: highlighterStyle});
	                    highlightBubble = React.createElement(segment_bubble_1.SegmentBubble, {left: stage.x + stage.width / 2, top: stage.y + HEADER_HEIGHT + rowY - scrollTop - HIGHLIGHT_BUBBLE_V_OFFSET, segmentLabel: segmentName, dimension: dimension, clicker: clicker, openRawDataModal: openRawDataModal});
	                }
	                rowY += ROW_HEIGHT;
	            }
	        }
	        var measureWidth = this.getIdealMeasureWidth(essence);
	        var segmentLabels = React.createElement("div", {className: "segment-labels"}, segments);
	        var overlay = React.createElement("div", {className: "highlight-cont"}, 
	            React.createElement("div", {className: "highlight"}, highlighter)
	        );
	        var corner = React.createElement("div", {className: "corner"}, 
	            React.createElement("div", {className: "corner-wrap"}, segmentTitle), 
	            cornerSortArrow);
	        var scrollerLayout = {
	            bodyWidth: measureWidth * essence.getEffectiveMeasures().size + SPACE_RIGHT,
	            bodyHeight: flatData ? flatData.length * ROW_HEIGHT : 0,
	            top: HEADER_HEIGHT,
	            right: 0,
	            bottom: 0,
	            left: this.getSegmentWidth()
	        };
	        return React.createElement("div", {className: "internals table-inner"}, 
	            React.createElement(scroller_1.Scroller, {ref: "scroller", layout: scrollerLayout, topGutter: headerColumns, leftGutter: segmentLabels, topLeftCorner: corner, body: rows, overlay: overlay, onClick: this.onClick.bind(this), onMouseMove: this.onMouseMove.bind(this), onMouseLeave: this.onMouseLeave.bind(this), onScroll: this.onSimpleScroll.bind(this)}), 
	            highlightBubble);
	    };
	    Table.id = table_1.TABLE_MANIFEST.name;
	    return Table;
	}(base_visualization_1.BaseVisualization));
	exports.Table = Table;


/***/ },
/* 645 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(646);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./table.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./table.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 646 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".table .scroller{position:absolute;top:0;bottom:0;left:0;right:0}.table .scroller .measure-name{background-color:#fff;border-bottom:1px solid #e6e6e6;padding-top:12px;white-space:nowrap;padding-left:10px;display:inline-block;width:130px;height:100%}.table .scroller .measure-name>.title-wrap{white-space:nowrap;overflow-x:hidden;text-overflow:ellipsis;display:inline-block;height:100%;padding-left:4px;max-width:100%}.table .scroller .measure-name.sorted>.title-wrap{max-width:calc(100% - 15px)}.table .scroller .measure-name>.sort-arrow{width:8px;right:-4px}.table .scroller .measure-name>.sort-arrow.ascending{-webkit-transform:rotate(180deg);-ms-transform:rotate(180deg);transform:rotate(180deg)}.table .scroller.has-top-shadow .measure-name,.table .scroller.has-top-shadow .corner{border-bottom:0}.table .scroller .row{position:absolute;height:30px;border-bottom:1px solid #e6e6e6;left:0;white-space:nowrap}.table .scroller .row.hover{background:#e3f4fc}.table .scroller .row.selected{background:#e3f4fc}.table .scroller .row.not-selected{color:#a6a6a6}.table .scroller .row.hover>.measure>.background-container>.background,.table .scroller .row.selected>.measure>.background-container>.background{background-color:#a8dbf5;border-top:1px solid #98cbe5;border-bottom:1px solid #98cbe5}.table .scroller .row>.measure{white-space:nowrap;padding-left:10px;overflow:hidden;padding-top:8px;display:inline-block;width:130px;height:calc(100% + 2px);margin-top:-1px}.table .scroller .row>.measure.all-alone{width:100%}.table .scroller .row>.measure>.background-container{position:absolute;top:0;left:10px;right:0;bottom:0}.table .scroller .row>.measure>.background-container>.background{height:100%;background-color:#d2edfa;border-top:1px solid #bed9e6;border-bottom:1px solid #bed9e6}.table .scroller .row>.measure>.label{padding-left:4px}.table .scroller .highlight-cont{position:absolute;left:10px;right:0;top:38px;bottom:0;overflow:hidden}.table .scroller .highlight-cont .highlighter{right:0;height:31px;margin-top:-1px;border:1px solid #e3f4fc}.table .scroller .highlight-cont .highlighter::after{position:absolute;top:-1px;bottom:-1px;left:-1px;right:-1px;content:'';border:1px dashed #168bc5}.table .scroller .left-gutter,.table .scroller .top-left-corner{background-color:#fff;border-top-left-radius:2px;border-bottom-left-radius:2px}.table .scroller .corner{position:absolute;background-color:#fff;left:0;top:0;width:290px;height:38px;overflow:hidden;padding:12px 0 0 6px;margin-left:10px;border-bottom:1px solid #e6e6e6}.table .scroller .corner>.corner-wrap{display:inline-block;max-width:calc(100% - 10px)}.table .scroller .corner .sort-arrow{width:8px;right:-4px}.table .scroller .corner .sort-arrow.ascending{-webkit-transform:rotate(180deg);-ms-transform:rotate(180deg);transform:rotate(180deg)}.table .scroller .segment-labels{margin-left:10px}.table .scroller .segment-labels .segment{position:absolute;height:30px;border-bottom:1px solid #e6e6e6;left:0;background-color:#fff;white-space:nowrap;padding-left:6px;overflow:hidden;padding-top:8px}.table .scroller .segment-labels .segment.hover{background:#e3f4fc}.table .scroller .segment-labels .segment.selected{background:#e3f4fc}.table .scroller .segment-labels .segment.not-selected{color:#a6a6a6}\n", ""]);

	// exports


/***/ },
/* 647 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(648);
	var immutable_class_1 = __webpack_require__(193);
	var React = __webpack_require__(5);
	var ReactDOM = __webpack_require__(39);
	var d3 = __webpack_require__(222);
	var plywood_1 = __webpack_require__(199);
	var index_1 = __webpack_require__(202);
	var line_chart_1 = __webpack_require__(280);
	var time_1 = __webpack_require__(221);
	var formatter_1 = __webpack_require__(233);
	var granularity_1 = __webpack_require__(211);
	var constants_1 = __webpack_require__(292);
	var dom_1 = __webpack_require__(300);
	var index_2 = __webpack_require__(293);
	var base_visualization_1 = __webpack_require__(641);
	var TEXT_SPACER = 36;
	var X_AXIS_HEIGHT = 30;
	var Y_AXIS_WIDTH = 60;
	var MIN_CHART_HEIGHT = 140;
	var HOVER_BUBBLE_V_OFFSET = -7;
	var HOVER_MULTI_BUBBLE_V_OFFSET = -8;
	var MAX_HOVER_DIST = 50;
	var MAX_ASPECT_RATIO = 1;
	function findClosest(data, dragDate, scaleX, continuousDimension) {
	    var closestDatum = null;
	    var minDist = Infinity;
	    for (var _i = 0, data_1 = data; _i < data_1.length; _i++) {
	        var datum = data_1[_i];
	        var continuousSegmentValue = datum[continuousDimension.name];
	        if (!continuousSegmentValue || !plywood_1.Range.isRange(continuousSegmentValue))
	            continue;
	        var mid = continuousSegmentValue.midpoint();
	        var dist = Math.abs(mid.valueOf() - dragDate.valueOf());
	        var distPx = Math.abs(scaleX(mid) - scaleX(dragDate));
	        if ((!closestDatum || dist < minDist) && distPx < MAX_HOVER_DIST) {
	            closestDatum = datum;
	            minDist = dist;
	        }
	    }
	    return closestDatum;
	}
	function roundTo(v, roundTo) {
	    return Math.round(Math.floor(v / roundTo)) * roundTo;
	}
	var LineChart = (function (_super) {
	    __extends(LineChart, _super);
	    function LineChart() {
	        _super.call(this);
	    }
	    LineChart.prototype.getDefaultState = function () {
	        var s = _super.prototype.getDefaultState.call(this);
	        s.dragStartValue = null;
	        s.dragRange = null;
	        s.hoverRange = null;
	        return s;
	    };
	    LineChart.prototype.componentDidUpdate = function () {
	        var _a = this.state, containerYPosition = _a.containerYPosition, containerXPosition = _a.containerXPosition;
	        var node = ReactDOM.findDOMNode(this.refs['container']);
	        if (!node)
	            return;
	        var rect = node.getBoundingClientRect();
	        if (containerYPosition !== rect.top || containerXPosition !== rect.left) {
	            this.setState({
	                containerYPosition: rect.top,
	                containerXPosition: rect.left
	            });
	        }
	    };
	    LineChart.prototype.getMyEventX = function (e) {
	        var myDOM = ReactDOM.findDOMNode(this);
	        var rect = myDOM.getBoundingClientRect();
	        return dom_1.getXFromEvent(e) - (rect.left + constants_1.VIS_H_PADDING);
	    };
	    LineChart.prototype.onMouseDown = function (measure, e) {
	        var clicker = this.props.clicker;
	        var scaleX = this.state.scaleX;
	        if (!scaleX || !clicker.dropHighlight || !clicker.changeHighlight)
	            return;
	        var dragStartValue = scaleX.invert(this.getMyEventX(e));
	        this.setState({
	            dragStartValue: dragStartValue,
	            dragRange: null,
	            dragOnMeasure: measure
	        });
	    };
	    LineChart.prototype.onMouseMove = function (dataset, measure, scaleX, e) {
	        var essence = this.props.essence;
	        var _a = this.state, continuousDimension = _a.continuousDimension, hoverRange = _a.hoverRange, hoverMeasure = _a.hoverMeasure;
	        if (!dataset)
	            return;
	        var splitLength = essence.splits.length();
	        var myDOM = ReactDOM.findDOMNode(this);
	        var rect = myDOM.getBoundingClientRect();
	        var dragDate = scaleX.invert(dom_1.getXFromEvent(e) - (rect.left + constants_1.VIS_H_PADDING));
	        var closestDatum;
	        if (splitLength > 1) {
	            var flatData = dataset.flatten();
	            closestDatum = findClosest(flatData, dragDate, scaleX, continuousDimension);
	        }
	        else {
	            closestDatum = findClosest(dataset.data, dragDate, scaleX, continuousDimension);
	        }
	        var currentHoverRange = closestDatum ? (closestDatum[continuousDimension.name]) : null;
	        if (!hoverRange || !immutable_class_1.immutableEqual(hoverRange, currentHoverRange) || measure !== hoverMeasure) {
	            this.setState({
	                hoverRange: currentHoverRange,
	                hoverMeasure: measure
	            });
	        }
	    };
	    LineChart.prototype.getDragRange = function (e) {
	        var _a = this.state, dragStartValue = _a.dragStartValue, axisRange = _a.axisRange, scaleX = _a.scaleX;
	        var dragEndValue = scaleX.invert(this.getMyEventX(e));
	        var rangeJS = null;
	        if (dragStartValue.valueOf() === dragEndValue.valueOf()) {
	            dragEndValue = plywood_1.TimeRange.isTimeRange(axisRange) ? new Date(dragEndValue.valueOf() + 1) : dragEndValue + 1;
	        }
	        if (dragStartValue < dragEndValue) {
	            rangeJS = { start: dragStartValue, end: dragEndValue };
	        }
	        else {
	            rangeJS = { start: dragEndValue, end: dragStartValue };
	        }
	        return plywood_1.Range.fromJS(rangeJS).intersect(axisRange);
	    };
	    LineChart.prototype.floorRange = function (dragRange) {
	        var essence = this.props.essence;
	        var splits = essence.splits, timezone = essence.timezone;
	        var continuousSplit = splits.last();
	        if (!continuousSplit.bucketAction)
	            return dragRange;
	        if (plywood_1.TimeRange.isTimeRange(dragRange)) {
	            var timeBucketAction = continuousSplit.bucketAction;
	            var duration = timeBucketAction.duration;
	            return plywood_1.TimeRange.fromJS({
	                start: duration.floor(dragRange.start, timezone),
	                end: duration.shift(duration.floor(dragRange.end, timezone), timezone, 1)
	            });
	        }
	        else {
	            var numberBucketAction = continuousSplit.bucketAction;
	            var bucketSize = numberBucketAction.size;
	            var startFloored = roundTo(dragRange.start, bucketSize);
	            var endFloored = roundTo(dragRange.end, bucketSize);
	            if (endFloored - startFloored < bucketSize) {
	                endFloored += bucketSize;
	            }
	            return plywood_1.NumberRange.fromJS({
	                start: startFloored,
	                end: endFloored
	            });
	        }
	    };
	    LineChart.prototype.globalMouseMoveListener = function (e) {
	        var dragStartValue = this.state.dragStartValue;
	        if (dragStartValue === null)
	            return;
	        var dragRange = this.getDragRange(e);
	        this.setState({
	            dragRange: dragRange,
	            roundDragRange: this.floorRange(dragRange)
	        });
	    };
	    LineChart.prototype.globalMouseUpListener = function (e) {
	        var _a = this.props, clicker = _a.clicker, essence = _a.essence;
	        var _b = this.state, continuousDimension = _b.continuousDimension, dragStartValue = _b.dragStartValue, dragRange = _b.dragRange, dragOnMeasure = _b.dragOnMeasure;
	        if (dragStartValue === null)
	            return;
	        var highlightRange = this.floorRange(this.getDragRange(e));
	        this.resetDrag();
	        if (!dragRange && essence.highlightOn(LineChart.id)) {
	            var existingHighlightRange = essence.getSingleHighlightSet().elements[0];
	            if (existingHighlightRange.contains(highlightRange.start)) {
	                var highlight = essence.highlight;
	                if (highlight.measure === dragOnMeasure.name) {
	                    clicker.dropHighlight();
	                }
	                else {
	                    clicker.changeHighlight(LineChart.id, dragOnMeasure.name, highlight.delta);
	                }
	                return;
	            }
	        }
	        clicker.changeHighlight(LineChart.id, dragOnMeasure.name, index_1.Filter.fromClause(new index_1.FilterClause({
	            expression: continuousDimension.expression,
	            selection: plywood_1.r(highlightRange)
	        })));
	    };
	    LineChart.prototype.globalKeyDownListener = function (e) {
	        if (!dom_1.escapeKey(e))
	            return;
	        var dragStartValue = this.state.dragStartValue;
	        if (dragStartValue === null)
	            return;
	        this.resetDrag();
	    };
	    LineChart.prototype.resetDrag = function () {
	        this.setState({
	            dragStartValue: null,
	            dragRange: null,
	            roundDragRange: null,
	            dragOnMeasure: null
	        });
	    };
	    LineChart.prototype.onMouseLeave = function (measure, e) {
	        var hoverMeasure = this.state.hoverMeasure;
	        if (hoverMeasure === measure) {
	            this.setState({
	                hoverRange: null,
	                hoverMeasure: null
	            });
	        }
	    };
	    LineChart.prototype.renderHighlighter = function () {
	        var essence = this.props.essence;
	        var _a = this.state, dragRange = _a.dragRange, scaleX = _a.scaleX;
	        if (dragRange !== null) {
	            return React.createElement(index_2.Highlighter, {highlightRange: dragRange, scaleX: scaleX});
	        }
	        if (essence.highlightOn(LineChart.id)) {
	            var highlightRange = essence.getSingleHighlightSet().elements[0];
	            return React.createElement(index_2.Highlighter, {highlightRange: highlightRange, scaleX: scaleX});
	        }
	        return null;
	    };
	    LineChart.prototype.renderChartBubble = function (dataset, measure, chartIndex, containerStage, chartStage, extentY, scaleY) {
	        var _a = this.props, clicker = _a.clicker, essence = _a.essence, openRawDataModal = _a.openRawDataModal;
	        var colors = essence.colors, timezone = essence.timezone;
	        var _b = this.state, containerYPosition = _b.containerYPosition, containerXPosition = _b.containerXPosition, scrollTop = _b.scrollTop, dragRange = _b.dragRange, roundDragRange = _b.roundDragRange;
	        var _c = this.state, dragOnMeasure = _c.dragOnMeasure, hoverRange = _c.hoverRange, hoverMeasure = _c.hoverMeasure, scaleX = _c.scaleX, continuousDimension = _c.continuousDimension;
	        if (essence.highlightOnDifferentMeasure(LineChart.id, measure.name))
	            return null;
	        var topOffset = chartStage.height * chartIndex + scaleY(extentY[1]) + TEXT_SPACER - scrollTop;
	        if (topOffset < 0)
	            return null;
	        topOffset += containerYPosition;
	        if ((dragRange && dragOnMeasure === measure) || (!dragRange && essence.highlightOn(LineChart.id, measure.name))) {
	            var bubbleRange = dragRange || essence.getSingleHighlightSet().elements[0];
	            var shownRange = roundDragRange || bubbleRange;
	            var segmentLabel = formatter_1.formatValue(bubbleRange, timezone, time_1.DisplayYear.NEVER);
	            if (colors) {
	                var categoryDimension = essence.splits.get(0).getDimension(essence.dataCube.dimensions);
	                var leftOffset = containerXPosition + constants_1.VIS_H_PADDING + scaleX(bubbleRange.end);
	                var hoverDatums = dataset.data.map(function (d) { return d[constants_1.SPLIT].findDatumByAttribute(continuousDimension.name, bubbleRange); });
	                var colorValues = colors.getColors(dataset.data.map(function (d) { return d[categoryDimension.name]; }));
	                var colorEntries = dataset.data.map(function (d, i) {
	                    var segment = d[categoryDimension.name];
	                    var hoverDatum = hoverDatums[i];
	                    if (!hoverDatum)
	                        return null;
	                    return {
	                        color: colorValues[i],
	                        segmentLabel: String(segment),
	                        measureLabel: measure.formatDatum(hoverDatum)
	                    };
	                }).filter(Boolean);
	                return React.createElement(index_2.HoverMultiBubble, {left: leftOffset, top: topOffset + HOVER_MULTI_BUBBLE_V_OFFSET, segmentLabel: segmentLabel, colorEntries: colorEntries, clicker: dragRange ? null : clicker});
	            }
	            else {
	                var leftOffset = containerXPosition + constants_1.VIS_H_PADDING + scaleX(bubbleRange.midpoint());
	                var highlightDatum = dataset.findDatumByAttribute(continuousDimension.name, shownRange);
	                var segmentLabel = formatter_1.formatValue(shownRange, timezone, time_1.DisplayYear.NEVER);
	                return React.createElement(index_2.SegmentBubble, {left: leftOffset, top: topOffset + HOVER_BUBBLE_V_OFFSET, segmentLabel: segmentLabel, measureLabel: highlightDatum ? measure.formatDatum(highlightDatum) : null, clicker: dragRange ? null : clicker, openRawDataModal: openRawDataModal});
	            }
	        }
	        else if (!dragRange && hoverRange && hoverMeasure === measure) {
	            var leftOffset = containerXPosition + constants_1.VIS_H_PADDING + scaleX(hoverRange.midpoint());
	            var segmentLabel = formatter_1.formatValue(hoverRange, timezone, time_1.DisplayYear.NEVER);
	            if (colors) {
	                var categoryDimension = essence.splits.get(0).getDimension(essence.dataCube.dimensions);
	                var hoverDatums = dataset.data.map(function (d) { return d[constants_1.SPLIT].findDatumByAttribute(continuousDimension.name, hoverRange); });
	                var colorValues = colors.getColors(dataset.data.map(function (d) { return d[categoryDimension.name]; }));
	                var colorEntries = dataset.data.map(function (d, i) {
	                    var segment = d[categoryDimension.name];
	                    var hoverDatum = hoverDatums[i];
	                    if (!hoverDatum)
	                        return null;
	                    return {
	                        color: colorValues[i],
	                        segmentLabel: String(segment),
	                        measureLabel: measure.formatDatum(hoverDatum)
	                    };
	                }).filter(Boolean);
	                return React.createElement(index_2.HoverMultiBubble, {left: leftOffset, top: topOffset + HOVER_MULTI_BUBBLE_V_OFFSET, segmentLabel: segmentLabel, colorEntries: colorEntries});
	            }
	            else {
	                var hoverDatum = dataset.findDatumByAttribute(continuousDimension.name, hoverRange);
	                if (!hoverDatum)
	                    return null;
	                var segmentLabel = formatter_1.formatValue(hoverRange, timezone, time_1.DisplayYear.NEVER);
	                return React.createElement(index_2.SegmentBubble, {left: leftOffset, top: topOffset + HOVER_BUBBLE_V_OFFSET, segmentLabel: segmentLabel, measureLabel: measure.formatDatum(hoverDatum)});
	            }
	        }
	        return null;
	    };
	    LineChart.prototype.renderChart = function (dataset, measure, chartIndex, containerStage, chartStage) {
	        var _a = this.props, essence = _a.essence, isThumbnail = _a.isThumbnail;
	        var _b = this.state, hoverRange = _b.hoverRange, hoverMeasure = _b.hoverMeasure, dragRange = _b.dragRange, scaleX = _b.scaleX, xTicks = _b.xTicks, continuousDimension = _b.continuousDimension;
	        var splits = essence.splits, colors = essence.colors;
	        var splitLength = splits.length();
	        var lineStage = chartStage.within({ top: TEXT_SPACER, right: Y_AXIS_WIDTH, bottom: 1 });
	        var yAxisStage = chartStage.within({ top: TEXT_SPACER, left: lineStage.width, bottom: 1 });
	        var measureName = measure.name;
	        var getX = function (d) { return d[continuousDimension.name]; };
	        var getY = function (d) { return d[measureName]; };
	        var myDatum = dataset.data[0];
	        var mySplitDataset = myDatum[constants_1.SPLIT];
	        var extentY = null;
	        if (splitLength === 1) {
	            extentY = d3.extent(mySplitDataset.data, getY);
	        }
	        else {
	            var minY = 0;
	            var maxY = 0;
	            mySplitDataset.data.forEach(function (datum) {
	                var subDataset = datum[constants_1.SPLIT];
	                if (subDataset) {
	                    var tempExtentY = d3.extent(subDataset.data, getY);
	                    minY = Math.min(tempExtentY[0], minY);
	                    maxY = Math.max(tempExtentY[1], maxY);
	                }
	            });
	            extentY = [minY, maxY];
	        }
	        var horizontalGridLines;
	        var chartLines;
	        var verticalAxis;
	        var bubble;
	        if (!isNaN(extentY[0]) && !isNaN(extentY[1])) {
	            var scaleY_1 = d3.scale.linear()
	                .domain([Math.min(extentY[0] * 1.1, 0), Math.max(extentY[1] * 1.1, 0)])
	                .range([lineStage.height, 0]);
	            var yTicks = scaleY_1.ticks(5).filter(function (n) { return n !== 0; });
	            horizontalGridLines = React.createElement(index_2.GridLines, {orientation: "horizontal", scale: scaleY_1, ticks: yTicks, stage: lineStage});
	            verticalAxis = React.createElement(index_2.VerticalAxis, {stage: yAxisStage, ticks: yTicks, scale: scaleY_1});
	            if (splitLength === 1) {
	                chartLines = [];
	                chartLines.push(React.createElement(index_2.ChartLine, {key: 'single', dataset: mySplitDataset, getX: getX, getY: getY, scaleX: scaleX, scaleY: scaleY_1, stage: lineStage, showArea: true, hoverRange: (!dragRange && hoverMeasure === measure) ? hoverRange : null, color: "default"}));
	            }
	            else {
	                var colorValues = null;
	                var categoryDimension = essence.splits.get(0).getDimension(essence.dataCube.dimensions);
	                if (colors)
	                    colorValues = colors.getColors(mySplitDataset.data.map(function (d) { return d[categoryDimension.name]; }));
	                chartLines = mySplitDataset.data.map(function (datum, i) {
	                    var subDataset = datum[constants_1.SPLIT];
	                    if (!subDataset)
	                        return null;
	                    return React.createElement(index_2.ChartLine, {key: 'single' + i, dataset: subDataset, getX: getX, getY: getY, scaleX: scaleX, scaleY: scaleY_1, stage: lineStage, showArea: false, hoverRange: (!dragRange && hoverMeasure === measure) ? hoverRange : null, color: colorValues ? colorValues[i] : null});
	                });
	            }
	            bubble = this.renderChartBubble(mySplitDataset, measure, chartIndex, containerStage, chartStage, extentY, scaleY_1);
	        }
	        return React.createElement("div", {className: "measure-line-chart", key: measureName, onMouseDown: this.onMouseDown.bind(this, measure), onMouseMove: this.onMouseMove.bind(this, mySplitDataset, measure, scaleX), onMouseLeave: this.onMouseLeave.bind(this, measure)}, 
	            React.createElement("svg", {style: chartStage.getWidthHeight(), viewBox: chartStage.getViewBox()}, 
	                horizontalGridLines, 
	                React.createElement(index_2.GridLines, {orientation: "vertical", scale: scaleX, ticks: xTicks, stage: lineStage}), 
	                chartLines, 
	                verticalAxis, 
	                React.createElement("line", {className: "vis-bottom", x1: "0", y1: chartStage.height - 0.5, x2: chartStage.width, y2: chartStage.height - 0.5})), 
	            !isThumbnail ? React.createElement(index_2.VisMeasureLabel, {measure: measure, datum: myDatum}) : null, 
	            this.renderHighlighter(), 
	            bubble);
	    };
	    LineChart.prototype.precalculate = function (props, datasetLoad) {
	        if (datasetLoad === void 0) { datasetLoad = null; }
	        var registerDownloadableDataset = props.registerDownloadableDataset, essence = props.essence, timekeeper = props.timekeeper, stage = props.stage;
	        var splits = essence.splits, timezone = essence.timezone, dataCube = essence.dataCube;
	        var existingDatasetLoad = this.state.datasetLoad;
	        var newState = {};
	        if (datasetLoad) {
	            if (datasetLoad.loading)
	                datasetLoad.dataset = existingDatasetLoad.dataset;
	            newState.datasetLoad = datasetLoad;
	        }
	        else {
	            datasetLoad = this.state.datasetLoad;
	        }
	        if (splits.length()) {
	            var dataset = datasetLoad.dataset;
	            if (dataset) {
	                if (registerDownloadableDataset)
	                    registerDownloadableDataset(dataset);
	            }
	            var continuousSplit = splits.length() === 1 ? splits.get(0) : splits.get(1);
	            var continuousDimension = continuousSplit.getDimension(essence.dataCube.dimensions);
	            if (continuousDimension) {
	                newState.continuousDimension = continuousDimension;
	                var axisRange = essence.getEffectiveFilter(timekeeper, LineChart.id).getExtent(continuousDimension.expression);
	                if (axisRange) {
	                    var maxTime = dataCube.getMaxTime(timekeeper);
	                    var continuousBucketAction = continuousSplit.bucketAction;
	                    if (maxTime && continuousBucketAction instanceof plywood_1.TimeBucketAction) {
	                        var continuousDuration = continuousBucketAction.duration;
	                        var axisRangeEnd = axisRange.end;
	                        var axisRangeEndFloor = continuousDuration.floor(axisRangeEnd, timezone);
	                        var axisRangeEndCeil = continuousDuration.shift(axisRangeEndFloor, timezone);
	                        if (maxTime && axisRangeEndFloor < maxTime && maxTime < axisRangeEndCeil) {
	                            axisRange = plywood_1.Range.fromJS({ start: axisRange.start, end: axisRangeEndCeil });
	                        }
	                    }
	                }
	                else {
	                    axisRange = this.getXAxisRange(dataset, continuousDimension);
	                }
	                if (axisRange) {
	                    newState.axisRange = axisRange;
	                    var domain = [(axisRange).start, (axisRange).end];
	                    var range = [0, stage.width - constants_1.VIS_H_PADDING * 2 - Y_AXIS_WIDTH];
	                    var scaleFn = null;
	                    if (continuousDimension.kind === 'time') {
	                        scaleFn = d3.time.scale();
	                    }
	                    else {
	                        scaleFn = d3.scale.linear();
	                    }
	                    newState.scaleX = scaleFn.domain(domain).range(range);
	                    newState.xTicks = granularity_1.getLineChartTicks(axisRange, timezone);
	                }
	            }
	        }
	        this.setState(newState);
	    };
	    LineChart.prototype.getXAxisRange = function (dataset, continuousDimension) {
	        var _this = this;
	        if (!dataset)
	            return null;
	        var key = continuousDimension.name;
	        var firstDatum = dataset.data[0];
	        var ranges;
	        if (firstDatum['SPLIT']) {
	            ranges = dataset.data.map(function (d) { return _this.getXAxisRange(d['SPLIT'], continuousDimension); });
	        }
	        else {
	            ranges = dataset.data.map(function (d) { return d[key]; });
	        }
	        return ranges.reduce(function (a, b) { return (a && b) ? a.extend(b) : (a || b); });
	    };
	    LineChart.prototype.hideBubble = function () {
	        var _a = this.state, hoverRange = _a.hoverRange, hoverMeasure = _a.hoverMeasure;
	        if (!hoverRange || !hoverMeasure)
	            return;
	        this.setState({
	            hoverRange: null,
	            hoverMeasure: null
	        });
	    };
	    LineChart.prototype.renderInternals = function () {
	        var _this = this;
	        var _a = this.props, essence = _a.essence, stage = _a.stage;
	        var _b = this.state, datasetLoad = _b.datasetLoad, axisRange = _b.axisRange, scaleX = _b.scaleX, xTicks = _b.xTicks;
	        var splits = essence.splits, timezone = essence.timezone;
	        var measureCharts;
	        var bottomAxis;
	        if (datasetLoad.dataset && splits.length() && axisRange) {
	            var measures = essence.getEffectiveMeasures().toArray();
	            var chartWidth = stage.width - constants_1.VIS_H_PADDING * 2;
	            var chartHeight = Math.max(MIN_CHART_HEIGHT, Math.floor(Math.min(chartWidth / MAX_ASPECT_RATIO, (stage.height - X_AXIS_HEIGHT) / measures.length)));
	            var chartStage = new index_1.Stage({
	                x: constants_1.VIS_H_PADDING,
	                y: 0,
	                width: chartWidth,
	                height: chartHeight
	            });
	            measureCharts = measures.map(function (measure, chartIndex) {
	                return _this.renderChart(datasetLoad.dataset, measure, chartIndex, stage, chartStage);
	            });
	            var xAxisStage = index_1.Stage.fromSize(chartStage.width, X_AXIS_HEIGHT);
	            bottomAxis = React.createElement("svg", {className: "bottom-axis", width: xAxisStage.width, height: xAxisStage.height}, 
	                React.createElement(index_2.LineChartAxis, {stage: xAxisStage, ticks: xTicks, scale: scaleX, timezone: timezone})
	            );
	        }
	        var measureChartsStyle = {
	            maxHeight: stage.height - X_AXIS_HEIGHT
	        };
	        return React.createElement("div", {className: "internals line-chart-inner"}, 
	            React.createElement(index_2.GlobalEventListener, {scroll: this.hideBubble.bind(this)}), 
	            React.createElement("div", {className: "measure-line-charts", style: measureChartsStyle, ref: "container"}, measureCharts), 
	            bottomAxis);
	    };
	    LineChart.id = line_chart_1.LINE_CHART_MANIFEST.name;
	    return LineChart;
	}(base_visualization_1.BaseVisualization));
	exports.LineChart = LineChart;


/***/ },
/* 648 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(649);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./line-chart.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./line-chart.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 649 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".line-chart .measure-line-charts{overflow-x:hidden;overflow-y:auto;padding-left:10px}.line-chart .measure-line-chart .vis-measure-label{position:absolute;left:6px;top:12px}.line-chart .measure-line-chart .vis-bottom{pointer-events:none;stroke:#ccc}.line-chart .measure-line-chart .highlighter{position:absolute;top:0;bottom:0;left:0;right:0}.line-chart .measure-line-chart:nth-child(n+2) .highlighter .frame{border-top:0}.line-chart .bottom-axis{padding-left:10px}\n", ""]);

	// exports


/***/ },
/* 650 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(651);
	var React = __webpack_require__(5);
	var ReactDOM = __webpack_require__(39);
	var immutable_1 = __webpack_require__(210);
	var plywood_1 = __webpack_require__(199);
	var index_1 = __webpack_require__(202);
	var bar_chart_1 = __webpack_require__(281);
	var formatter_1 = __webpack_require__(233);
	var time_1 = __webpack_require__(221);
	var constants_1 = __webpack_require__(292);
	var dom_1 = __webpack_require__(300);
	var index_2 = __webpack_require__(293);
	var base_visualization_1 = __webpack_require__(641);
	var bar_coordinates_1 = __webpack_require__(653);
	var X_AXIS_HEIGHT = 84;
	var Y_AXIS_WIDTH = 60;
	var CHART_TOP_PADDING = 10;
	var CHART_BOTTOM_PADDING = 0;
	var MIN_CHART_HEIGHT = 200;
	var MAX_STEP_WIDTH = 140;
	var MIN_STEP_WIDTH = 20;
	var BAR_PROPORTION = 0.8;
	var BARS_MIN_PAD_LEFT = 30;
	var BARS_MIN_PAD_RIGHT = 6;
	var HOVER_BUBBLE_V_OFFSET = 8;
	var SELECTION_PAD = 4;
	function getFilterFromDatum(splits, dataPath, dataCube) {
	    return new index_1.Filter(immutable_1.List(dataPath.map(function (datum, i) {
	        var split = splits.get(i);
	        var segment = datum[split.getDimension(dataCube.dimensions).name];
	        return new index_1.FilterClause({
	            expression: split.expression,
	            selection: plywood_1.r(plywood_1.TimeRange.isTimeRange(segment) ? segment : plywood_1.Set.fromJS([segment]))
	        });
	    })));
	}
	function padDataset(originalDataset, dimension, measures) {
	    var data = originalDataset.data[0][constants_1.SPLIT].data;
	    var dimensionName = dimension.name;
	    var firstBucket = data[0][dimensionName];
	    if (!firstBucket)
	        return originalDataset;
	    var start = Number(firstBucket.start);
	    var end = Number(firstBucket.end);
	    var size = end - start;
	    var i = start;
	    var j = 0;
	    var filledData = [];
	    data.forEach(function (d) {
	        var segmentValue = d[dimensionName];
	        var segmentStart = segmentValue.start;
	        while (i < segmentStart) {
	            filledData[j] = {};
	            filledData[j][dimensionName] = plywood_1.NumberRange.fromJS({
	                start: i,
	                end: i + size
	            });
	            measures.forEach(function (m) {
	                filledData[j][m.name] = 0;
	            });
	            if (d[constants_1.SPLIT]) {
	                filledData[j][constants_1.SPLIT] = new plywood_1.Dataset({
	                    data: [],
	                    attributes: []
	                });
	            }
	            j++;
	            i += size;
	        }
	        filledData[j] = d;
	        i += size;
	        j++;
	    });
	    var value = originalDataset.valueOf();
	    value.data[0][constants_1.SPLIT].data = filledData;
	    return new plywood_1.Dataset(value);
	}
	function padDatasetLoad(datasetLoad, dimension, measures) {
	    var originalDataset = datasetLoad.dataset;
	    var newDataset = originalDataset ? padDataset(originalDataset, dimension, measures) : null;
	    datasetLoad.dataset = newDataset;
	    return datasetLoad;
	}
	var BarChart = (function (_super) {
	    __extends(BarChart, _super);
	    function BarChart() {
	        _super.call(this);
	        this.coordinatesCache = [];
	    }
	    BarChart.prototype.getDefaultState = function () {
	        var s = _super.prototype.getDefaultState.call(this);
	        s.hoverInfo = null;
	        return s;
	    };
	    BarChart.prototype.componentWillReceiveProps = function (nextProps) {
	        this.precalculate(nextProps);
	        var _a = this.props, essence = _a.essence, timekeeper = _a.timekeeper;
	        var nextEssence = nextProps.essence;
	        var nextTimekeeper = nextProps.timekeeper;
	        if (nextEssence.differentDataCube(essence) ||
	            nextEssence.differentEffectiveFilter(essence, timekeeper, nextTimekeeper, BarChart.id) ||
	            nextEssence.differentEffectiveSplits(essence) ||
	            nextEssence.newEffectiveMeasures(essence)) {
	            this.fetchData(nextEssence, nextTimekeeper);
	        }
	    };
	    BarChart.prototype.componentDidUpdate = function () {
	        var _a = this.state, scrollerYPosition = _a.scrollerYPosition, scrollerXPosition = _a.scrollerXPosition;
	        var node = ReactDOM.findDOMNode(this.refs['scroller']);
	        if (!node)
	            return;
	        var rect = node.getBoundingClientRect();
	        if (scrollerYPosition !== rect.top || scrollerXPosition !== rect.left) {
	            this.setState({ scrollerYPosition: rect.top, scrollerXPosition: rect.left });
	        }
	    };
	    BarChart.prototype.calculateMousePosition = function (x, y) {
	        var essence = this.props.essence;
	        var measures = essence.getEffectiveMeasures().toArray();
	        var chartStage = this.getSingleChartStage();
	        var chartHeight = this.getOuterChartHeight(chartStage);
	        if (y >= chartHeight * measures.length)
	            return null;
	        if (x >= chartStage.width)
	            return null;
	        var xScale = this.getPrimaryXScale();
	        var chartIndex = Math.floor(y / chartHeight);
	        var chartCoordinates = this.getBarsCoordinates(chartIndex, xScale);
	        var _a = this.findBarCoordinatesForX(x, chartCoordinates, []), path = _a.path, coordinates = _a.coordinates;
	        return {
	            path: this.findPathForIndices(path),
	            measure: measures[chartIndex],
	            chartIndex: chartIndex,
	            coordinates: coordinates
	        };
	    };
	    BarChart.prototype.findPathForIndices = function (indices) {
	        var datasetLoad = this.state.datasetLoad;
	        var mySplitDataset = datasetLoad.dataset.data[0][constants_1.SPLIT];
	        var path = [];
	        var currentData = mySplitDataset;
	        indices.forEach(function (i) {
	            var datum = currentData.data[i];
	            path.push(datum);
	            currentData = datum[constants_1.SPLIT];
	        });
	        return path;
	    };
	    BarChart.prototype.findBarCoordinatesForX = function (x, coordinates, currentPath) {
	        for (var i = 0; i < coordinates.length; i++) {
	            if (coordinates[i].isXWithin(x)) {
	                currentPath.push(i);
	                if (coordinates[i].hasChildren()) {
	                    return this.findBarCoordinatesForX(x, coordinates[i].children, currentPath);
	                }
	                else {
	                    return { path: currentPath, coordinates: coordinates[i] };
	                }
	            }
	        }
	        return { path: [], coordinates: null };
	    };
	    BarChart.prototype.onScrollerScroll = function (scrollTop, scrollLeft) {
	        this.setState({
	            hoverInfo: null,
	            scrollLeft: scrollLeft,
	            scrollTop: scrollTop
	        });
	    };
	    BarChart.prototype.onMouseMove = function (x, y) {
	        this.setState({ hoverInfo: this.calculateMousePosition(x, y) });
	    };
	    BarChart.prototype.onMouseLeave = function () {
	        this.setState({ hoverInfo: null });
	    };
	    BarChart.prototype.onClick = function (x, y) {
	        var _a = this.props, essence = _a.essence, clicker = _a.clicker;
	        if (!clicker.changeHighlight || !clicker.dropHighlight)
	            return;
	        var selectionInfo = this.calculateMousePosition(x, y);
	        if (!selectionInfo)
	            return;
	        if (!selectionInfo.coordinates) {
	            clicker.dropHighlight();
	            this.setState({ selectionInfo: null });
	            return;
	        }
	        var path = selectionInfo.path, chartIndex = selectionInfo.chartIndex;
	        var splits = essence.splits, dataCube = essence.dataCube;
	        var measures = essence.getEffectiveMeasures().toArray();
	        var rowHighlight = getFilterFromDatum(splits, path, dataCube);
	        if (essence.highlightOn(BarChart.id, measures[chartIndex].name)) {
	            if (rowHighlight.equals(essence.highlight.delta)) {
	                clicker.dropHighlight();
	                this.setState({ selectionInfo: null });
	                return;
	            }
	        }
	        this.setState({ selectionInfo: selectionInfo });
	        clicker.changeHighlight(BarChart.id, measures[chartIndex].name, rowHighlight);
	    };
	    BarChart.prototype.getYExtent = function (data, measure) {
	        var measureName = measure.name;
	        var getY = function (d) { return d[measureName]; };
	        return d3.extent(data, getY);
	    };
	    BarChart.prototype.getYScale = function (measure, yAxisStage) {
	        var essence = this.props.essence;
	        var flatData = this.state.flatData;
	        var splitLength = essence.splits.length();
	        var leafData = flatData.filter(function (d) { return d['__nest'] === splitLength - 1; });
	        var extentY = this.getYExtent(leafData, measure);
	        return d3.scale.linear()
	            .domain([Math.min(extentY[0] * 1.1, 0), Math.max(extentY[1] * 1.1, 0)])
	            .range([yAxisStage.height, yAxisStage.y]);
	    };
	    BarChart.prototype.hasValidYExtent = function (measure, data) {
	        var _a = this.getYExtent(data, measure), yMin = _a[0], yMax = _a[1];
	        return !isNaN(yMin) && !isNaN(yMax);
	    };
	    BarChart.prototype.getSingleChartStage = function () {
	        var xScale = this.getPrimaryXScale();
	        var _a = this.props, essence = _a.essence, stage = _a.stage, isThumbnail = _a.isThumbnail;
	        var stepWidth = this.getBarDimensions(xScale.rangeBand()).stepWidth;
	        var xTicks = xScale.domain();
	        var width = xTicks.length > 0 ? dom_1.roundToPx(xScale(xTicks[xTicks.length - 1])) + stepWidth : 0;
	        var measures = essence.getEffectiveMeasures();
	        var availableHeight = stage.height - X_AXIS_HEIGHT;
	        var minHeight = isThumbnail ? 1 : MIN_CHART_HEIGHT;
	        var height = Math.max(minHeight, Math.floor(availableHeight / measures.size));
	        return new index_1.Stage({
	            x: 0,
	            y: CHART_TOP_PADDING,
	            width: Math.max(width, stage.width - Y_AXIS_WIDTH - constants_1.VIS_H_PADDING * 2),
	            height: height - CHART_TOP_PADDING - CHART_BOTTOM_PADDING
	        });
	    };
	    BarChart.prototype.getOuterChartHeight = function (chartStage) {
	        return chartStage.height + CHART_TOP_PADDING + CHART_BOTTOM_PADDING;
	    };
	    BarChart.prototype.getAxisStages = function (chartStage) {
	        var _a = this.props, essence = _a.essence, stage = _a.stage;
	        var xHeight = Math.max(stage.height - (CHART_TOP_PADDING + CHART_BOTTOM_PADDING + chartStage.height) * essence.getEffectiveMeasures().size, X_AXIS_HEIGHT);
	        return {
	            xAxisStage: new index_1.Stage({ x: chartStage.x, y: 0, height: xHeight, width: chartStage.width }),
	            yAxisStage: new index_1.Stage({ x: 0, y: chartStage.y, height: chartStage.height, width: Y_AXIS_WIDTH + constants_1.VIS_H_PADDING })
	        };
	    };
	    BarChart.prototype.getScrollerLayout = function (chartStage, xAxisStage, yAxisStage) {
	        var essence = this.props.essence;
	        var measures = essence.getEffectiveMeasures().toArray();
	        var oneChartHeight = this.getOuterChartHeight(chartStage);
	        return {
	            bodyWidth: chartStage.width,
	            bodyHeight: oneChartHeight * measures.length - CHART_BOTTOM_PADDING,
	            top: 0,
	            right: yAxisStage.width,
	            bottom: xAxisStage.height,
	            left: 0
	        };
	    };
	    BarChart.prototype.getBubbleTopOffset = function (y, chartIndex, chartStage) {
	        var _a = this.state, scrollTop = _a.scrollTop, scrollerYPosition = _a.scrollerYPosition;
	        var oneChartHeight = this.getOuterChartHeight(chartStage);
	        var chartsAboveMe = oneChartHeight * chartIndex;
	        return chartsAboveMe - scrollTop + scrollerYPosition + y - HOVER_BUBBLE_V_OFFSET + CHART_TOP_PADDING;
	    };
	    BarChart.prototype.getBubbleLeftOffset = function (x) {
	        var stage = this.props.stage;
	        var _a = this.state, scrollLeft = _a.scrollLeft, scrollerXPosition = _a.scrollerXPosition;
	        return scrollerXPosition + x - scrollLeft;
	    };
	    BarChart.prototype.canShowBubble = function (leftOffset, topOffset) {
	        var stage = this.props.stage;
	        var _a = this.state, scrollLeft = _a.scrollLeft, scrollerYPosition = _a.scrollerYPosition, scrollerXPosition = _a.scrollerXPosition;
	        if (topOffset <= 0)
	            return false;
	        if (topOffset > scrollerYPosition + stage.height - X_AXIS_HEIGHT)
	            return false;
	        if (leftOffset <= 0)
	            return false;
	        if (leftOffset > scrollerXPosition + stage.width - Y_AXIS_WIDTH)
	            return false;
	        return true;
	    };
	    BarChart.prototype.renderSelectionBubble = function (hoverInfo) {
	        var _a = this.props, essence = _a.essence, stage = _a.stage, clicker = _a.clicker, openRawDataModal = _a.openRawDataModal;
	        var measure = hoverInfo.measure, path = hoverInfo.path, chartIndex = hoverInfo.chartIndex, segmentLabel = hoverInfo.segmentLabel, coordinates = hoverInfo.coordinates;
	        var chartStage = this.getSingleChartStage();
	        var splits = essence.splits, dataCube = essence.dataCube;
	        var dimension = splits.get(hoverInfo.splitIndex).getDimension(dataCube.dimensions);
	        var leftOffset = this.getBubbleLeftOffset(coordinates.middleX);
	        var topOffset = this.getBubbleTopOffset(coordinates.y, chartIndex, chartStage);
	        if (!this.canShowBubble(leftOffset, topOffset))
	            return null;
	        return React.createElement(index_2.SegmentBubble, {left: leftOffset, top: topOffset, dimension: dimension, segmentLabel: segmentLabel, measureLabel: measure.formatDatum(path[path.length - 1]), clicker: clicker, openRawDataModal: openRawDataModal, onClose: this.onBubbleClose.bind(this)});
	    };
	    BarChart.prototype.onBubbleClose = function () {
	        this.setState({ selectionInfo: null });
	    };
	    BarChart.prototype.renderHoverBubble = function (hoverInfo) {
	        var stage = this.props.stage;
	        var chartStage = this.getSingleChartStage();
	        var measure = hoverInfo.measure, path = hoverInfo.path, chartIndex = hoverInfo.chartIndex, segmentLabel = hoverInfo.segmentLabel, coordinates = hoverInfo.coordinates;
	        var leftOffset = this.getBubbleLeftOffset(coordinates.middleX);
	        var topOffset = this.getBubbleTopOffset(coordinates.y, chartIndex, chartStage);
	        if (!this.canShowBubble(leftOffset, topOffset))
	            return null;
	        return React.createElement(index_2.SegmentBubble, {top: topOffset, left: leftOffset, segmentLabel: segmentLabel, measureLabel: measure.formatDatum(path[path.length - 1])});
	    };
	    BarChart.prototype.isSelected = function (path, measure) {
	        var essence = this.props.essence;
	        var splits = essence.splits, dataCube = essence.dataCube;
	        if (essence.highlightOnDifferentMeasure(BarChart.id, measure.name))
	            return false;
	        if (essence.highlightOn(BarChart.id, measure.name)) {
	            return essence.highlight.delta.equals(getFilterFromDatum(splits, path, dataCube));
	        }
	        return false;
	    };
	    BarChart.prototype.isFaded = function () {
	        var essence = this.props.essence;
	        return essence.highlightOn(BarChart.id);
	    };
	    BarChart.prototype.hasAnySelectionGoingOn = function () {
	        return this.props.essence.highlightOn(BarChart.id);
	    };
	    BarChart.prototype.isHovered = function (path, measure) {
	        var essence = this.props.essence;
	        var hoverInfo = this.state.hoverInfo;
	        var splits = essence.splits, dataCube = essence.dataCube;
	        if (this.hasAnySelectionGoingOn())
	            return false;
	        if (!hoverInfo)
	            return false;
	        if (hoverInfo.measure !== measure)
	            return false;
	        var filter = function (p) { return getFilterFromDatum(splits, p, dataCube); };
	        return filter(hoverInfo.path).equals(filter(path));
	    };
	    BarChart.prototype.renderBars = function (data, measure, chartIndex, chartStage, xAxisStage, coordinates, splitIndex, path) {
	        var _this = this;
	        if (splitIndex === void 0) { splitIndex = 0; }
	        if (path === void 0) { path = []; }
	        var essence = this.props.essence;
	        var timezone = essence.timezone;
	        var bars = [];
	        var highlight;
	        var dimension = essence.splits.get(splitIndex).getDimension(essence.dataCube.dimensions);
	        var splitLength = essence.splits.length();
	        data.forEach(function (d, i) {
	            var segmentValue = d[dimension.name];
	            var segmentValueStr = formatter_1.formatValue(segmentValue, timezone, time_1.DisplayYear.NEVER);
	            var subPath = path.concat(d);
	            var bar;
	            var bubble = null;
	            var subCoordinates = coordinates[i];
	            var _a = coordinates[i], x = _a.x, y = _a.y, height = _a.height, barWidth = _a.barWidth, barOffset = _a.barOffset;
	            if (splitIndex < splitLength - 1) {
	                var subData = d[constants_1.SPLIT].data;
	                var subRender = _this.renderBars(subData, measure, chartIndex, chartStage, xAxisStage, subCoordinates.children, splitIndex + 1, subPath);
	                bar = subRender.bars;
	                if (!highlight && subRender.highlight)
	                    highlight = subRender.highlight;
	            }
	            else {
	                var bubbleInfo = {
	                    measure: measure,
	                    chartIndex: chartIndex,
	                    path: subPath,
	                    coordinates: subCoordinates,
	                    segmentLabel: segmentValueStr,
	                    splitIndex: splitIndex
	                };
	                var isHovered = _this.isHovered(subPath, measure);
	                if (isHovered) {
	                    bubble = _this.renderHoverBubble(bubbleInfo);
	                }
	                var selected = _this.isSelected(subPath, measure);
	                var faded = _this.isFaded();
	                if (selected) {
	                    bubble = _this.renderSelectionBubble(bubbleInfo);
	                    if (bubble)
	                        highlight = _this.renderSelectionHighlight(chartStage, subCoordinates, chartIndex);
	                }
	                bar = React.createElement("g", {className: dom_1.classNames('bar', { selected: selected, 'not-selected': (!selected && faded), isHovered: isHovered }), key: String(segmentValue), transform: "translate(" + dom_1.roundToPx(x) + ", 0)"}, 
	                    React.createElement("rect", {className: "background", width: dom_1.roundToPx(barWidth), height: dom_1.roundToPx(Math.abs(height)), x: barOffset, y: dom_1.roundToPx(y)}), 
	                    bubble);
	            }
	            bars.push(bar);
	        });
	        return { bars: bars, highlight: highlight };
	    };
	    BarChart.prototype.renderSelectionHighlight = function (chartStage, coordinates, chartIndex) {
	        var _a = this.state, scrollLeft = _a.scrollLeft, scrollTop = _a.scrollTop;
	        var chartHeight = this.getOuterChartHeight(chartStage);
	        var barWidth = coordinates.barWidth, height = coordinates.height, barOffset = coordinates.barOffset, y = coordinates.y, x = coordinates.x;
	        var leftOffset = dom_1.roundToPx(x) + barOffset - SELECTION_PAD + chartStage.x - scrollLeft;
	        var topOffset = dom_1.roundToPx(y) - SELECTION_PAD + chartStage.y - scrollTop + chartHeight * chartIndex;
	        var style = {
	            left: leftOffset,
	            top: topOffset,
	            width: dom_1.roundToPx(barWidth + SELECTION_PAD * 2),
	            height: dom_1.roundToPx(Math.abs(height) + SELECTION_PAD * 2)
	        };
	        return React.createElement("div", {className: "selection-highlight", style: style});
	    };
	    BarChart.prototype.renderXAxis = function (data, coordinates, xAxisStage) {
	        var essence = this.props.essence;
	        var xScale = this.getPrimaryXScale();
	        var xTicks = xScale.domain();
	        var split = essence.splits.get(0);
	        var dimension = split.getDimension(essence.dataCube.dimensions);
	        var labels = [];
	        if (dimension.canBucketByDefault()) {
	            var lastIndex = data.length - 1;
	            var ascending = split.sortAction.direction === plywood_1.SortAction.ASCENDING;
	            var leftThing = ascending ? 'start' : 'end';
	            var rightThing = ascending ? 'end' : 'start';
	            data.forEach(function (d, i) {
	                var segmentValue = d[dimension.name];
	                var segmentValueStr = String(plywood_1.Range.isRange(segmentValue) ? segmentValue[leftThing] : '');
	                var coordinate = coordinates[i];
	                labels.push(React.createElement("div", {className: "slanty-label continuous", key: i, style: { right: xAxisStage.width - coordinate.x }}, segmentValueStr));
	                if (i === lastIndex) {
	                    segmentValueStr = String(plywood_1.Range.isRange(segmentValue) ? segmentValue[rightThing] : '');
	                    labels.push(React.createElement("div", {className: "slanty-label continuous", key: "last-one", style: { right: xAxisStage.width - (coordinate.x + coordinate.stepWidth) }}, segmentValueStr));
	                }
	            });
	        }
	        else {
	            data.forEach(function (d, i) {
	                var segmentValueStr = String(d[dimension.name]);
	                var coordinate = coordinates[i];
	                labels.push(React.createElement("div", {className: "slanty-label categorical", key: segmentValueStr, style: { right: xAxisStage.width - (coordinate.x + coordinate.stepWidth / 2) }}, segmentValueStr));
	            });
	        }
	        return React.createElement("div", {className: "x-axis", style: { width: xAxisStage.width }}, 
	            React.createElement("svg", {style: xAxisStage.getWidthHeight(), viewBox: xAxisStage.getViewBox()}, 
	                React.createElement(index_2.BucketMarks, {stage: xAxisStage, ticks: xTicks, scale: xScale})
	            ), 
	            labels);
	    };
	    BarChart.prototype.getYAxisStuff = function (dataset, measure, chartStage, chartIndex) {
	        var yAxisStage = this.getAxisStages(chartStage).yAxisStage;
	        var yScale = this.getYScale(measure, yAxisStage);
	        var yTicks = yScale.ticks(5);
	        var yGridLines = React.createElement(index_2.GridLines, {orientation: "horizontal", scale: yScale, ticks: yTicks, stage: chartStage});
	        var axisStage = yAxisStage.changeY(yAxisStage.y + (chartStage.height + CHART_TOP_PADDING + CHART_BOTTOM_PADDING) * chartIndex);
	        var yAxis = React.createElement(index_2.VerticalAxis, {key: measure.name, stage: axisStage, ticks: yTicks, scale: yScale, hideZero: true});
	        return { yGridLines: yGridLines, yAxis: yAxis, yScale: yScale };
	    };
	    BarChart.prototype.isChartVisible = function (chartIndex, xAxisStage) {
	        var stage = this.props.stage;
	        var scrollTop = this.state.scrollTop;
	        var chartStage = this.getSingleChartStage();
	        var chartHeight = this.getOuterChartHeight(chartStage);
	        var topY = chartIndex * chartHeight;
	        var viewPortHeight = stage.height - xAxisStage.height;
	        var hiddenAtBottom = topY - scrollTop >= viewPortHeight;
	        var bottomY = topY + chartHeight;
	        var hiddenAtTop = bottomY < scrollTop;
	        return !hiddenAtTop && !hiddenAtBottom;
	    };
	    BarChart.prototype.renderChart = function (dataset, coordinates, measure, chartIndex, chartStage, getX) {
	        var isThumbnail = this.props.isThumbnail;
	        var mySplitDataset = dataset.data[0][constants_1.SPLIT];
	        var measureLabel = !isThumbnail ? React.createElement(index_2.VisMeasureLabel, {measure: measure, datum: dataset.data[0]}) : null;
	        if (!this.hasValidYExtent(measure, mySplitDataset.data)) {
	            return {
	                chart: React.createElement("div", {className: "measure-bar-chart", key: measure.name, style: { width: chartStage.width }}, 
	                    React.createElement("svg", {style: chartStage.getWidthHeight(0, CHART_BOTTOM_PADDING), viewBox: chartStage.getViewBox(0, CHART_BOTTOM_PADDING)}), 
	                    measureLabel),
	                yAxis: null,
	                highlight: null
	            };
	        }
	        var xAxisStage = this.getAxisStages(chartStage).xAxisStage;
	        var _a = this.getYAxisStuff(mySplitDataset, measure, chartStage, chartIndex), yAxis = _a.yAxis, yGridLines = _a.yGridLines;
	        var bars;
	        var highlight;
	        if (this.isChartVisible(chartIndex, xAxisStage)) {
	            var renderedChart = this.renderBars(mySplitDataset.data, measure, chartIndex, chartStage, xAxisStage, coordinates);
	            bars = renderedChart.bars;
	            highlight = renderedChart.highlight;
	        }
	        var chart = React.createElement("div", {className: "measure-bar-chart", key: measure.name, style: { width: chartStage.width }}, 
	            React.createElement("svg", {style: chartStage.getWidthHeight(0, CHART_BOTTOM_PADDING), viewBox: chartStage.getViewBox(0, CHART_BOTTOM_PADDING)}, 
	                yGridLines, 
	                React.createElement("g", {className: "bars", transform: chartStage.getTransform()}, bars)), 
	            measureLabel);
	        return { chart: chart, yAxis: yAxis, highlight: highlight };
	    };
	    BarChart.prototype.precalculate = function (props, datasetLoad) {
	        if (datasetLoad === void 0) { datasetLoad = null; }
	        var registerDownloadableDataset = props.registerDownloadableDataset, essence = props.essence;
	        var splits = essence.splits;
	        var split = splits.get(0);
	        var dimension = split.getDimension(essence.dataCube.dimensions);
	        var dimensionKind = dimension.kind;
	        var measures = essence.getEffectiveMeasures().toArray();
	        this.coordinatesCache = [];
	        var existingDatasetLoad = this.state.datasetLoad;
	        var newState = {};
	        if (datasetLoad) {
	            if (dimensionKind === 'number') {
	                datasetLoad = padDatasetLoad(datasetLoad, dimension, measures);
	            }
	            if (datasetLoad.loading)
	                datasetLoad.dataset = existingDatasetLoad.dataset;
	            newState.datasetLoad = datasetLoad;
	        }
	        else {
	            var stateDatasetLoad = this.state.datasetLoad;
	            if (dimensionKind === 'number') {
	                datasetLoad = padDatasetLoad(stateDatasetLoad, dimension, measures);
	            }
	            else {
	                datasetLoad = stateDatasetLoad;
	            }
	        }
	        var dataset = datasetLoad.dataset;
	        if (dataset && splits.length()) {
	            var firstSplitDataSet = dataset.data[0][constants_1.SPLIT];
	            if (registerDownloadableDataset)
	                registerDownloadableDataset(dataset);
	            var flatData = firstSplitDataSet.flatten({
	                order: 'preorder',
	                nestingName: '__nest',
	                parentName: '__parent'
	            });
	            var maxima = splits.toArray().map(function () { return 0; });
	            this.maxNumberOfLeaves(firstSplitDataSet.data, maxima, 0);
	            newState.maxNumberOfLeaves = maxima;
	            newState.flatData = flatData;
	        }
	        this.setState(newState);
	    };
	    BarChart.prototype.maxNumberOfLeaves = function (data, maxima, level) {
	        maxima[level] = Math.max(maxima[level], data.length);
	        if (data[0] && data[0][constants_1.SPLIT] !== undefined) {
	            var n = data.length;
	            for (var i = 0; i < n; i++) {
	                this.maxNumberOfLeaves(data[i][constants_1.SPLIT].data, maxima, level + 1);
	            }
	        }
	    };
	    BarChart.prototype.getPrimaryXScale = function () {
	        var _a = this.state, datasetLoad = _a.datasetLoad, maxNumberOfLeaves = _a.maxNumberOfLeaves;
	        var data = datasetLoad.dataset.data[0][constants_1.SPLIT].data;
	        var essence = this.props.essence;
	        var splits = essence.splits, dataCube = essence.dataCube;
	        var dimension = splits.get(0).getDimension(dataCube.dimensions);
	        var getX = function (d) { return d[dimension.name]; };
	        var _b = this.getXValues(maxNumberOfLeaves), usedWidth = _b.usedWidth, padLeft = _b.padLeft;
	        return d3.scale.ordinal()
	            .domain(data.map(getX))
	            .rangeBands([padLeft, padLeft + usedWidth]);
	    };
	    BarChart.prototype.getBarDimensions = function (xRangeBand) {
	        if (isNaN(xRangeBand))
	            xRangeBand = 0;
	        var stepWidth = xRangeBand;
	        var barWidth = Math.max(stepWidth * BAR_PROPORTION, 0);
	        var barOffset = (stepWidth - barWidth) / 2;
	        return { stepWidth: stepWidth, barWidth: barWidth, barOffset: barOffset };
	    };
	    BarChart.prototype.getXValues = function (maxNumberOfLeaves) {
	        var _a = this.props, essence = _a.essence, stage = _a.stage;
	        var overallWidth = stage.width - constants_1.VIS_H_PADDING * 2 - Y_AXIS_WIDTH;
	        var numPrimarySteps = maxNumberOfLeaves[0];
	        var minStepWidth = MIN_STEP_WIDTH * maxNumberOfLeaves.slice(1).reduce((function (a, b) { return a * b; }), 1);
	        var maxAvailableWidth = overallWidth - BARS_MIN_PAD_LEFT - BARS_MIN_PAD_RIGHT;
	        var stepWidth;
	        if (minStepWidth * numPrimarySteps < maxAvailableWidth) {
	            stepWidth = Math.max(Math.min(maxAvailableWidth / numPrimarySteps, MAX_STEP_WIDTH * essence.splits.length()), MIN_STEP_WIDTH);
	        }
	        else {
	            stepWidth = minStepWidth;
	        }
	        var usedWidth = stepWidth * maxNumberOfLeaves[0];
	        var padLeft = Math.max(BARS_MIN_PAD_LEFT, (overallWidth - usedWidth) / 2);
	        return { padLeft: padLeft, usedWidth: usedWidth };
	    };
	    BarChart.prototype.getBarsCoordinates = function (chartIndex, xScale) {
	        if (!!this.coordinatesCache[chartIndex]) {
	            return this.coordinatesCache[chartIndex];
	        }
	        var essence = this.props.essence;
	        var datasetLoad = this.state.datasetLoad;
	        var splits = essence.splits, dataCube = essence.dataCube;
	        var measure = essence.getEffectiveMeasures().toArray()[chartIndex];
	        var dataset = datasetLoad.dataset.data[0][constants_1.SPLIT];
	        var dimension = splits.get(0).getDimension(dataCube.dimensions);
	        var chartStage = this.getSingleChartStage();
	        var yScale = this.getYAxisStuff(dataset, measure, chartStage, chartIndex).yScale;
	        this.coordinatesCache[chartIndex] = this.getSubCoordinates(dataset.data, measure, chartStage, function (d) { return d[dimension.name]; }, xScale, yScale);
	        return this.coordinatesCache[chartIndex];
	    };
	    BarChart.prototype.getSubCoordinates = function (data, measure, chartStage, getX, xScale, scaleY, splitIndex) {
	        var _this = this;
	        if (splitIndex === void 0) { splitIndex = 1; }
	        var essence = this.props.essence;
	        var maxNumberOfLeaves = this.state.maxNumberOfLeaves;
	        var _a = this.getBarDimensions(xScale.rangeBand()), stepWidth = _a.stepWidth, barWidth = _a.barWidth, barOffset = _a.barOffset;
	        var coordinates = data.map(function (d, i) {
	            var x = xScale(getX(d, i));
	            var y = scaleY(d[measure.name]);
	            var h = scaleY(0) - y;
	            var children = [];
	            var coordinate = new bar_coordinates_1.BarCoordinates({
	                x: x,
	                y: h >= 0 ? y : scaleY(0),
	                width: dom_1.roundToPx(barWidth),
	                height: dom_1.roundToPx(Math.abs(h)),
	                stepWidth: stepWidth,
	                barWidth: barWidth,
	                barOffset: barOffset,
	                children: children
	            });
	            if (splitIndex < essence.splits.length()) {
	                var subStage = new index_1.Stage({ x: x, y: chartStage.y, width: barWidth, height: chartStage.height });
	                var subGetX = function (d, i) { return String(i); };
	                var subData = d[constants_1.SPLIT].data;
	                var subxScale = d3.scale.ordinal()
	                    .domain(d3.range(0, maxNumberOfLeaves[splitIndex]).map(String))
	                    .rangeBands([x + barOffset, x + subStage.width]);
	                coordinate.children = _this.getSubCoordinates(subData, measure, subStage, subGetX, subxScale, scaleY, splitIndex + 1);
	            }
	            return coordinate;
	        });
	        return coordinates;
	    };
	    BarChart.prototype.renderRightGutter = function (measures, yAxisStage, yAxes) {
	        var yAxesStage = yAxisStage.changeHeight((yAxisStage.height + CHART_TOP_PADDING + CHART_BOTTOM_PADDING) * measures.length);
	        return React.createElement("svg", {style: yAxesStage.getWidthHeight(), viewBox: yAxesStage.getViewBox()}, yAxes);
	    };
	    BarChart.prototype.renderSelectionContainer = function (selectionHighlight, chartIndex, chartStage) {
	        var _a = this.state, scrollLeft = _a.scrollLeft, scrollTop = _a.scrollTop;
	        var chartHeight = this.getOuterChartHeight(chartStage);
	        return React.createElement("div", {className: "selection-highlight-container"}, selectionHighlight);
	    };
	    BarChart.prototype.renderInternals = function () {
	        var _this = this;
	        var _a = this.props, essence = _a.essence, stage = _a.stage;
	        var datasetLoad = this.state.datasetLoad;
	        var splits = essence.splits, dataCube = essence.dataCube;
	        var dimension = splits.get(0).getDimension(dataCube.dimensions);
	        var scrollerLayout;
	        var measureCharts = [];
	        var xAxis;
	        var rightGutter;
	        var overlay;
	        if (datasetLoad.dataset && splits.length()) {
	            var xScale_1 = this.getPrimaryXScale();
	            var yAxes_1 = [];
	            var highlights = [];
	            var measures = essence.getEffectiveMeasures().toArray();
	            var getX_1 = function (d) { return d[dimension.name]; };
	            var chartStage_1 = this.getSingleChartStage();
	            var _b = this.getAxisStages(chartStage_1), xAxisStage = _b.xAxisStage, yAxisStage = _b.yAxisStage;
	            xAxis = this.renderXAxis(datasetLoad.dataset.data[0][constants_1.SPLIT].data, this.getBarsCoordinates(0, xScale_1), xAxisStage);
	            measures.forEach(function (measure, chartIndex) {
	                var coordinates = _this.getBarsCoordinates(chartIndex, xScale_1);
	                var _a = _this.renderChart(datasetLoad.dataset, coordinates, measure, chartIndex, chartStage_1, getX_1), yAxis = _a.yAxis, chart = _a.chart, highlight = _a.highlight;
	                measureCharts.push(chart);
	                yAxes_1.push(yAxis);
	                if (highlight) {
	                    overlay = _this.renderSelectionContainer(highlight, chartIndex, chartStage_1);
	                }
	            });
	            scrollerLayout = this.getScrollerLayout(chartStage_1, xAxisStage, yAxisStage);
	            rightGutter = this.renderRightGutter(measures, chartStage_1, yAxes_1);
	        }
	        return React.createElement("div", {className: "internals measure-bar-charts", style: { maxHeight: stage.height }}, 
	            React.createElement(index_2.Scroller, {layout: scrollerLayout, ref: "scroller", bottomGutter: xAxis, rightGutter: rightGutter, body: measureCharts, overlay: overlay, onClick: this.onClick.bind(this), onMouseMove: this.onMouseMove.bind(this), onMouseLeave: this.onMouseLeave.bind(this), onScroll: this.onScrollerScroll.bind(this)})
	        );
	    };
	    BarChart.id = bar_chart_1.BAR_CHART_MANIFEST.name;
	    return BarChart;
	}(base_visualization_1.BaseVisualization));
	exports.BarChart = BarChart;


/***/ },
/* 651 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(652);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./bar-chart.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./bar-chart.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 652 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".bar-chart .measure-bar-charts{overflow-x:hidden;overflow-y:auto;padding-left:10px}.bar-chart .scroller{position:relative;height:100%}.bar-chart .scroller .bottom-shadow{opacity:0}.bar-chart .selection-highlight-container{position:absolute}.bar-chart .selection-highlight-container .selection-highlight{pointer-events:none;border:1px dashed #1ea3e6}.bar-chart .vertical-axis .border{stroke-width:0}.bar-chart .x-axis{stroke:#ccc;stroke-width:1px}.bar-chart .x-axis .slanty-labels{position:absolute;overflow:hidden}.bar-chart .x-axis .slanty-label{white-space:nowrap;overflow-x:hidden;text-overflow:ellipsis;position:absolute;width:100px;height:20px;-webkit-transform:rotate(-43deg);-ms-transform:rotate(-43deg);transform:rotate(-43deg);-webkit-transform-origin:right top;-ms-transform-origin:right top;transform-origin:right top;text-align:right;cursor:default;overflow:hidden;font-size:12px}.bar-chart .x-axis .slanty-label.categorical{top:3px}.bar-chart .x-axis .slanty-label.continuous{top:6px}.bar-chart .measure-bar-chart::after{content:'';position:absolute;top:0;right:0;bottom:0;left:0;border-bottom:1px solid #ccc;border-right:1px solid #ccc}.bar-chart .measure-bar-chart:first-child::after{top:10px}.bar-chart .measure-bar-chart .vis-measure-label{position:absolute;left:6px;top:12px}.bar-chart .measure-bar-chart .vis-bottom{pointer-events:none;stroke:#ccc}.bar-chart .measure-bar-chart g.bars g.bar.not-selected{fill-opacity:0.5}.bar-chart .measure-bar-chart g.bars g.bar.hover{fill-opacity:0.9}.bar-chart .measure-bar-chart g.bars g.bar>rect.background{pointer-events:none;fill:#1ea3e6}.bar-chart .measure-bar-chart g.bars g.bar>rect.mouse-event-target{fill:#fff;fill-opacity:0.001}.bar-chart .measure-bar-chart .mask{fill:#fff}\n", ""]);

	// exports


/***/ },
/* 653 */
/***/ function(module, exports) {

	"use strict";
	var BarCoordinates = (function () {
	    function BarCoordinates(parameters) {
	        this.x = parameters.x;
	        this.y = parameters.y;
	        this.height = parameters.height;
	        this.width = parameters.width;
	        this.barOffset = parameters.barOffset;
	        this.barWidth = parameters.barWidth;
	        this.stepWidth = parameters.stepWidth;
	        this.children = parameters.children;
	        this.hitboxMin = this.x - this.barOffset;
	        this.hitboxMax = this.x + this.barWidth + this.barOffset * 2;
	    }
	    BarCoordinates.prototype.isXWithin = function (x) {
	        return x >= this.hitboxMin && x <= this.hitboxMax;
	    };
	    BarCoordinates.prototype.hasChildren = function () {
	        return this.children.length > 0;
	    };
	    Object.defineProperty(BarCoordinates.prototype, "middleX", {
	        get: function () {
	            return this.x + this.barWidth * .5 + this.barOffset;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    return BarCoordinates;
	}());
	exports.BarCoordinates = BarCoordinates;


/***/ },
/* 654 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(655);
	var React = __webpack_require__(5);
	var geo_1 = __webpack_require__(282);
	var base_visualization_1 = __webpack_require__(641);
	var Geo = (function (_super) {
	    __extends(Geo, _super);
	    function Geo() {
	        _super.call(this);
	    }
	    Geo.prototype.getDefaultState = function () {
	        return _super.prototype.getDefaultState.call(this);
	    };
	    Geo.prototype.componentWillMount = function () { };
	    Geo.prototype.componentDidMount = function () { };
	    Geo.prototype.componentWillReceiveProps = function (nextProps) { };
	    Geo.prototype.renderInternals = function () {
	        return React.createElement("div", {className: "internals"});
	    };
	    Geo.id = geo_1.GEO_MANIFEST.name;
	    return Geo;
	}(base_visualization_1.BaseVisualization));
	exports.Geo = Geo;


/***/ },
/* 655 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(656);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./geo.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./geo.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 656 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, "", ""]);

	// exports


/***/ },
/* 657 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(658);
	var React = __webpack_require__(5);
	var index_1 = __webpack_require__(293);
	var LinkHeaderBar = (function (_super) {
	    __extends(LinkHeaderBar, _super);
	    function LinkHeaderBar() {
	        _super.call(this);
	        this.state = {
	            settingsMenuOpenOn: null,
	            userMenuOpenOn: null
	        };
	    }
	    LinkHeaderBar.prototype.onUserMenuClick = function (e) {
	        var userMenuOpenOn = this.state.userMenuOpenOn;
	        if (userMenuOpenOn)
	            return this.onUserMenuClose();
	        this.setState({
	            userMenuOpenOn: e.target
	        });
	    };
	    LinkHeaderBar.prototype.onUserMenuClose = function () {
	        this.setState({
	            userMenuOpenOn: null
	        });
	    };
	    LinkHeaderBar.prototype.renderUserMenu = function () {
	        var _a = this.props, user = _a.user, customization = _a.customization;
	        var userMenuOpenOn = this.state.userMenuOpenOn;
	        if (!userMenuOpenOn)
	            return null;
	        return React.createElement(index_1.UserMenu, {openOn: userMenuOpenOn, onClose: this.onUserMenuClose.bind(this), user: user, customization: customization});
	    };
	    LinkHeaderBar.prototype.onSettingsMenuClick = function (e) {
	        var settingsMenuOpenOn = this.state.settingsMenuOpenOn;
	        if (settingsMenuOpenOn)
	            return this.onSettingsMenuClose();
	        this.setState({
	            settingsMenuOpenOn: e.target
	        });
	    };
	    LinkHeaderBar.prototype.onSettingsMenuClose = function () {
	        this.setState({
	            settingsMenuOpenOn: null
	        });
	    };
	    LinkHeaderBar.prototype.renderSettingsMenu = function () {
	        var _a = this.props, changeTimezone = _a.changeTimezone, timezone = _a.timezone, customization = _a.customization, user = _a.user, stateful = _a.stateful;
	        var settingsMenuOpenOn = this.state.settingsMenuOpenOn;
	        if (!settingsMenuOpenOn)
	            return null;
	        return React.createElement(index_1.SettingsMenu, {user: user, timezone: timezone, timezones: customization.getTimezones(), changeTimezone: changeTimezone, openOn: settingsMenuOpenOn, onClose: this.onSettingsMenuClose.bind(this), stateful: stateful});
	    };
	    LinkHeaderBar.prototype.render = function () {
	        var _a = this.props, title = _a.title, user = _a.user, onNavClick = _a.onNavClick, onExploreClick = _a.onExploreClick, customization = _a.customization;
	        var userButton = null;
	        if (user) {
	            userButton = React.createElement("div", {className: "icon-button user", onClick: this.onUserMenuClick.bind(this)}, 
	                React.createElement(index_1.SvgIcon, {svg: __webpack_require__(503)})
	            );
	        }
	        var headerStyle = null;
	        if (customization && customization.headerBackground) {
	            headerStyle = {
	                background: customization.headerBackground
	            };
	        }
	        return React.createElement("header", {className: "link-header-bar", style: headerStyle}, 
	            React.createElement("div", {className: "left-bar", onClick: onNavClick}, 
	                React.createElement("div", {className: "menu-icon"}, 
	                    React.createElement(index_1.SvgIcon, {svg: __webpack_require__(507)})
	                ), 
	                React.createElement("div", {className: "title"}, title)), 
	            React.createElement("div", {className: "right-bar"}, 
	                React.createElement("div", {className: "text-button", onClick: onExploreClick}, "Explore"), 
	                React.createElement("a", {className: "icon-button help", href: "https://groups.google.com/forum/#!forum/imply-user-group", target: "_blank"}, 
	                    React.createElement(index_1.SvgIcon, {className: "help-icon", svg: __webpack_require__(432)})
	                ), 
	                React.createElement("div", {className: "icon-button settings", onClick: this.onSettingsMenuClick.bind(this)}, 
	                    React.createElement(index_1.SvgIcon, {className: "settings-icon", svg: __webpack_require__(501)})
	                ), 
	                userButton), 
	            this.renderUserMenu());
	    };
	    return LinkHeaderBar;
	}(React.Component));
	exports.LinkHeaderBar = LinkHeaderBar;


/***/ },
/* 658 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(659);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../../node_modules/css-loader/index.js!./link-header-bar.css", function() {
				var newContent = require("!!./../../../../../node_modules/css-loader/index.js!./link-header-bar.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 659 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".link-header-bar .right-bar .icon-button::after{background:#fff;border-radius:2px;box-shadow:0 3px 10px 0 rgba(0,0,0,0.26),0 0 3px 0 rgba(0,0,0,0.16)}.link-header-bar{background:#1ea3e6;color:#fff;font-size:16px;z-index:11}.link-header-bar .left-bar{display:inline-block;height:100%;padding-left:12px;padding-right:12px;cursor:pointer}.link-header-bar .left-bar .menu-icon{display:inline-block;padding:11px 5px}.link-header-bar .left-bar .menu-icon svg path{fill:#fff}.link-header-bar .left-bar .title{display:inline-block;font-size:15px;margin-top:13px;padding:0 7px}.link-header-bar .right-bar{position:absolute;top:0;right:12px}.link-header-bar .right-bar .text-button{display:inline-block;font-size:12px;text-transform:uppercase;height:42px;line-height:42px;padding:0 5px;margin-right:2px;cursor:pointer;background-color:transparent;color:#fff}.link-header-bar .right-bar .icon-button{display:inline-block;padding:11px 5px;cursor:pointer}.link-header-bar .right-bar .icon-button:not(:first-child){margin-left:3px}.link-header-bar .right-bar .icon-button:active::after{display:none}.link-header-bar .right-bar .icon-button.help::after{content:'Google Groups'}.link-header-bar .right-bar .icon-button.auto-refresh::after{content:'Refresh options'}.link-header-bar .right-bar .icon-button.hiluk::after{content:'Share link'}.link-header-bar .right-bar .icon-button.user::after{content:'User'}.link-header-bar .right-bar .icon-button.github::after{content:'Pivot on Github'}.link-header-bar .right-bar .icon-button.settings::after{content:'Settings'}.link-header-bar .right-bar .icon-button:hover::after{opacity:1}.link-header-bar .right-bar .icon-button::after{opacity:0;pointer-events:none;position:absolute;display:block;bottom:-24px;right:0;padding:5px;color:#000;font-size:12px;white-space:nowrap}.link-header-bar .right-bar .icon-button svg path{fill:#fff}.link-header-bar .right-bar .button-group{display:inline-block;padding-top:6px;margin-left:8px}.link-header-bar .right-bar .button-group>*:not(:last-child){margin-right:8px}.link-header-bar .right-bar .button-group .cancel{color:#fff;background-color:rgba(255,255,255,0.28)}.link-header-bar .right-bar .button-group .cancel:hover{background-color:rgba(255,255,255,0.36)}.link-header-bar .right-bar .button-group .save{color:#1ea3e6;background-color:#fff}.link-header-bar .right-bar .button-group .save:hover{background-color:rgba(255,255,255,0.92)}.link-header-bar svg{height:19px;width:19px}.link-header-bar{background:#208b84}\n", ""]);

	// exports


/***/ },
/* 660 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(661);
	var React = __webpack_require__(5);
	var ReactDOM = __webpack_require__(39);
	var drag_manager_1 = __webpack_require__(349);
	var index_1 = __webpack_require__(202);
	var index_2 = __webpack_require__(276);
	var index_3 = __webpack_require__(293);
	var supervised_cube_header_bar_1 = __webpack_require__(663);
	var cube_header_bar_1 = __webpack_require__(666);
	var index_4 = __webpack_require__(637);
	var localStorage = __webpack_require__(374);
	var MIN_PANEL_WIDTH = 240;
	var MAX_PANEL_WIDTH = 400;
	var CubeView = (function (_super) {
	    __extends(CubeView, _super);
	    function CubeView() {
	        var _this = this;
	        _super.call(this);
	        this.state = {
	            essence: null,
	            dragOver: false,
	            showRawDataModal: false,
	            layout: this.getStoredLayout(),
	            updatingMaxTime: false
	        };
	        var clicker = {
	            changeFilter: function (filter, colors) {
	                var essence = _this.state.essence;
	                essence = essence.changeFilter(filter);
	                if (colors)
	                    essence = essence.changeColors(colors);
	                _this.setState({ essence: essence });
	            },
	            changeTimeSelection: function (selection) {
	                var essence = _this.state.essence;
	                _this.setState({ essence: essence.changeTimeSelection(selection) });
	            },
	            changeSplits: function (splits, strategy, colors) {
	                var essence = _this.state.essence;
	                if (colors)
	                    essence = essence.changeColors(colors);
	                _this.setState({ essence: essence.changeSplits(splits, strategy) });
	            },
	            changeSplit: function (split, strategy) {
	                var essence = _this.state.essence;
	                _this.setState({ essence: essence.changeSplit(split, strategy) });
	            },
	            addSplit: function (split, strategy) {
	                var essence = _this.state.essence;
	                _this.setState({ essence: essence.addSplit(split, strategy) });
	            },
	            removeSplit: function (split, strategy) {
	                var essence = _this.state.essence;
	                _this.setState({ essence: essence.removeSplit(split, strategy) });
	            },
	            changeColors: function (colors) {
	                var essence = _this.state.essence;
	                _this.setState({ essence: essence.changeColors(colors) });
	            },
	            changeVisualization: function (visualization) {
	                var essence = _this.state.essence;
	                _this.setState({ essence: essence.changeVisualization(visualization) });
	            },
	            pin: function (dimension) {
	                var essence = _this.state.essence;
	                _this.setState({ essence: essence.pin(dimension) });
	            },
	            unpin: function (dimension) {
	                var essence = _this.state.essence;
	                _this.setState({ essence: essence.unpin(dimension) });
	            },
	            changePinnedSortMeasure: function (measure) {
	                var essence = _this.state.essence;
	                _this.setState({ essence: essence.changePinnedSortMeasure(measure) });
	            },
	            toggleMultiMeasureMode: function () {
	                var essence = _this.state.essence;
	                _this.setState({ essence: essence.toggleMultiMeasureMode() });
	            },
	            toggleEffectiveMeasure: function (measure) {
	                var essence = _this.state.essence;
	                _this.setState({ essence: essence.toggleEffectiveMeasure(measure) });
	            },
	            changeHighlight: function (owner, measure, delta) {
	                var essence = _this.state.essence;
	                _this.setState({ essence: essence.changeHighlight(owner, measure, delta) });
	            },
	            acceptHighlight: function () {
	                var essence = _this.state.essence;
	                _this.setState({ essence: essence.acceptHighlight() });
	            },
	            dropHighlight: function () {
	                var essence = _this.state.essence;
	                _this.setState({ essence: essence.dropHighlight() });
	            }
	        };
	        this.clicker = clicker;
	    }
	    CubeView.prototype.refreshMaxTime = function () {
	        var _this = this;
	        var _a = this.state, essence = _a.essence, timekeeper = _a.timekeeper;
	        var dataCube = essence.dataCube;
	        this.setState({ updatingMaxTime: true });
	        index_1.DataCube.queryMaxTime(dataCube)
	            .then(function (updatedMaxTime) {
	            if (!_this.mounted)
	                return;
	            _this.setState({
	                timekeeper: timekeeper.updateTime(dataCube.name, updatedMaxTime),
	                updatingMaxTime: false
	            });
	        });
	    };
	    CubeView.prototype.componentWillMount = function () {
	        var _a = this.props, hash = _a.hash, dataCube = _a.dataCube, updateViewHash = _a.updateViewHash, initTimekeeper = _a.initTimekeeper;
	        var essence = this.getEssenceFromHash(dataCube, hash);
	        if (!essence) {
	            if (!dataCube)
	                throw new Error('must have data cube');
	            essence = this.getEssenceFromDataCube(dataCube);
	            updateViewHash(essence.toHash(), true);
	        }
	        this.setState({
	            essence: essence,
	            timekeeper: initTimekeeper || index_1.Timekeeper.EMPTY
	        });
	    };
	    CubeView.prototype.componentDidMount = function () {
	        var _this = this;
	        var transitionFnSlot = this.props.transitionFnSlot;
	        this.mounted = true;
	        drag_manager_1.DragManager.init();
	        this.globalResizeListener();
	        if (transitionFnSlot) {
	            transitionFnSlot.fill(function (oldDataCube, newDataCube) {
	                if (!index_1.DataCube.isDataCube(oldDataCube))
	                    return null;
	                if (!index_1.DataCube.isDataCube(newDataCube))
	                    return null;
	                if (newDataCube === oldDataCube || !newDataCube.sameGroup(oldDataCube))
	                    return null;
	                var essence = _this.state.essence;
	                if (!essence)
	                    return null;
	                return '#' + newDataCube.name + '/' + essence.updateDataCube(newDataCube).toHash();
	            });
	        }
	        !/* require.ensure */(function (require) {
	            _this.setState({
	                RawDataModalAsync: __webpack_require__(615).RawDataModal
	            });
	        }(__webpack_require__));
	    };
	    CubeView.prototype.componentWillReceiveProps = function (nextProps) {
	        var _a = this.props, hash = _a.hash, dataCube = _a.dataCube, updateViewHash = _a.updateViewHash;
	        if (!nextProps.dataCube)
	            throw new Error('must have data cube');
	        if (dataCube.name !== nextProps.dataCube.name || hash !== nextProps.hash) {
	            var hashEssence = this.getEssenceFromHash(nextProps.dataCube, nextProps.hash);
	            if (!hashEssence) {
	                hashEssence = this.getEssenceFromDataCube(nextProps.dataCube);
	                updateViewHash(hashEssence.toHash(), true);
	            }
	            this.setState({ essence: hashEssence });
	        }
	    };
	    CubeView.prototype.componentWillUpdate = function (nextProps, nextState) {
	        var updateViewHash = this.props.updateViewHash;
	        var essence = this.state.essence;
	        if (updateViewHash && !nextState.essence.equals(essence)) {
	            updateViewHash(nextState.essence.toHash());
	        }
	    };
	    CubeView.prototype.componentWillUnmount = function () {
	        var transitionFnSlot = this.props.transitionFnSlot;
	        this.mounted = false;
	        if (transitionFnSlot)
	            transitionFnSlot.clear();
	    };
	    CubeView.prototype.getEssenceFromDataCube = function (dataCube) {
	        var essence = index_1.Essence.fromDataCube(dataCube, { dataCube: dataCube, visualizations: index_2.MANIFESTS });
	        var isMulti = !!localStorage.get('is-multi-measure');
	        return essence.multiMeasureMode !== isMulti ? essence.toggleMultiMeasureMode() : essence;
	    };
	    CubeView.prototype.getEssenceFromHash = function (dataCube, hash) {
	        if (!dataCube || !hash)
	            return null;
	        return index_1.Essence.fromHash(hash, { dataCube: dataCube, visualizations: index_2.MANIFESTS });
	    };
	    CubeView.prototype.globalResizeListener = function () {
	        var _a = this.refs, container = _a.container, visualization = _a.visualization;
	        var containerDOM = ReactDOM.findDOMNode(container);
	        var visualizationDOM = ReactDOM.findDOMNode(visualization);
	        if (!containerDOM || !visualizationDOM)
	            return;
	        this.setState({
	            deviceSize: index_1.Device.getSize(),
	            menuStage: index_1.Stage.fromClientRect(containerDOM.getBoundingClientRect()),
	            visualizationStage: index_1.Stage.fromClientRect(visualizationDOM.getBoundingClientRect())
	        });
	    };
	    CubeView.prototype.canDrop = function (e) {
	        return Boolean(drag_manager_1.DragManager.getDragDimension());
	    };
	    CubeView.prototype.dragEnter = function (e) {
	        if (!this.canDrop(e))
	            return;
	        e.preventDefault();
	        this.setState({ dragOver: true });
	    };
	    CubeView.prototype.dragOver = function (e) {
	        if (!this.canDrop(e))
	            return;
	        e.dataTransfer.dropEffect = 'move';
	        e.preventDefault();
	    };
	    CubeView.prototype.dragLeave = function (e) {
	        this.setState({ dragOver: false });
	    };
	    CubeView.prototype.drop = function (e) {
	        if (!this.canDrop(e))
	            return;
	        e.preventDefault();
	        var dimension = drag_manager_1.DragManager.getDragDimension();
	        if (dimension) {
	            this.clicker.changeSplit(index_1.SplitCombine.fromExpression(dimension.expression), index_1.VisStrategy.FairGame);
	        }
	        this.setState({ dragOver: false });
	    };
	    CubeView.prototype.openRawDataModal = function () {
	        this.setState({
	            showRawDataModal: true
	        });
	    };
	    CubeView.prototype.onRawDataModalClose = function () {
	        this.setState({
	            showRawDataModal: false
	        });
	    };
	    CubeView.prototype.renderRawDataModal = function () {
	        var _a = this.state, RawDataModalAsync = _a.RawDataModalAsync, showRawDataModal = _a.showRawDataModal, essence = _a.essence, timekeeper = _a.timekeeper;
	        if (!RawDataModalAsync || !showRawDataModal)
	            return null;
	        return React.createElement(RawDataModalAsync, {essence: essence, timekeeper: timekeeper, onClose: this.onRawDataModalClose.bind(this)});
	    };
	    CubeView.prototype.triggerFilterMenu = function (dimension) {
	        if (!dimension)
	            return;
	        this.refs['filterTile'].filterMenuRequest(dimension);
	    };
	    CubeView.prototype.triggerSplitMenu = function (dimension) {
	        if (!dimension)
	            return;
	        this.refs['splitTile'].splitMenuRequest(dimension);
	    };
	    CubeView.prototype.changeTimezone = function (newTimezone) {
	        var essence = this.state.essence;
	        var newEssence = essence.changeTimezone(newTimezone);
	        this.setState({ essence: newEssence });
	    };
	    CubeView.prototype.getStoredLayout = function () {
	        return localStorage.get('cube-view-layout') || { dimensionPanelWidth: 240, pinboardWidth: 240 };
	    };
	    CubeView.prototype.storeLayout = function (layout) {
	        localStorage.set('cube-view-layout', layout);
	    };
	    CubeView.prototype.onDimensionPanelResize = function (value) {
	        var layout = this.state.layout;
	        layout.dimensionPanelWidth = value;
	        this.setState({ layout: layout });
	        this.storeLayout(layout);
	    };
	    CubeView.prototype.onPinboardPanelResize = function (value) {
	        var layout = this.state.layout;
	        layout.pinboardWidth = value;
	        this.setState({ layout: layout });
	        this.storeLayout(layout);
	    };
	    CubeView.prototype.onPanelResizeEnd = function () {
	        this.globalResizeListener();
	    };
	    CubeView.prototype.onAddEssenceToCollection = function () {
	        this.props.addEssenceToCollection(this.state.essence);
	    };
	    CubeView.prototype.render = function () {
	        var _this = this;
	        var clicker = this.clicker;
	        var _a = this.props, getUrlPrefix = _a.getUrlPrefix, onNavClick = _a.onNavClick, user = _a.user, customization = _a.customization, supervisor = _a.supervisor, stateful = _a.stateful;
	        var _b = this.state, deviceSize = _b.deviceSize, layout = _b.layout, essence = _b.essence, timekeeper = _b.timekeeper, menuStage = _b.menuStage, visualizationStage = _b.visualizationStage, dragOver = _b.dragOver, updatingMaxTime = _b.updatingMaxTime;
	        if (!essence)
	            return null;
	        var visualization = essence.visualization;
	        var visElement = null;
	        if (essence.visResolve.isReady() && visualizationStage) {
	            var visProps = {
	                clicker: clicker,
	                timekeeper: timekeeper,
	                essence: essence,
	                stage: visualizationStage,
	                deviceSize: deviceSize,
	                openRawDataModal: this.openRawDataModal.bind(this),
	                registerDownloadableDataset: function (dataset) { _this.downloadableDataset = dataset; }
	            };
	            visElement = React.createElement(index_4.getVisualizationComponent(visualization), visProps);
	        }
	        var manualFallback = null;
	        if (essence.visResolve.isManual()) {
	            manualFallback = React.createElement(index_3.ManualFallback, {
	                clicker: clicker,
	                essence: essence
	            });
	        }
	        var styles = {
	            dimensionMeasurePanel: { width: layout.dimensionPanelWidth },
	            centerPanel: { left: layout.dimensionPanelWidth, right: layout.pinboardWidth },
	            pinboardPanel: { width: layout.pinboardWidth }
	        };
	        if (deviceSize === 'small') {
	            styles = {
	                dimensionMeasurePanel: { width: 200 },
	                centerPanel: { left: 200, right: 200 },
	                pinboardPanel: { width: 200 }
	            };
	        }
	        var headerBar = React.createElement(cube_header_bar_1.CubeHeaderBar, {clicker: clicker, essence: essence, timekeeper: timekeeper, user: user, onNavClick: onNavClick, getUrlPrefix: getUrlPrefix, refreshMaxTime: this.refreshMaxTime.bind(this), openRawDataModal: this.openRawDataModal.bind(this), customization: customization, getDownloadableDataset: function () { return _this.downloadableDataset; }, changeTimezone: this.changeTimezone.bind(this), timezone: essence.timezone, updatingMaxTime: updatingMaxTime, addEssenceToCollection: this.onAddEssenceToCollection.bind(this), stateful: stateful});
	        if (supervisor) {
	            headerBar = React.createElement(supervised_cube_header_bar_1.SupervisedCubeHeaderBar, {essence: essence, customization: customization, changeTimezone: this.changeTimezone.bind(this), timezone: essence.timezone, supervisor: supervisor});
	        }
	        return React.createElement("div", {className: 'cube-view'}, 
	            React.createElement(index_3.GlobalEventListener, {resize: this.globalResizeListener.bind(this)}), 
	            headerBar, 
	            React.createElement("div", {className: "container", ref: 'container'}, 
	                React.createElement(index_3.DimensionMeasurePanel, {style: styles.dimensionMeasurePanel, clicker: clicker, essence: essence, menuStage: menuStage, triggerFilterMenu: this.triggerFilterMenu.bind(this), triggerSplitMenu: this.triggerSplitMenu.bind(this), getUrlPrefix: getUrlPrefix}), 
	                deviceSize !== 'small' ? React.createElement(index_3.ResizeHandle, {side: "left", initialValue: layout.dimensionPanelWidth, onResize: this.onDimensionPanelResize.bind(this), onResizeEnd: this.onPanelResizeEnd.bind(this), min: MIN_PANEL_WIDTH, max: MAX_PANEL_WIDTH}) : null, 
	                React.createElement("div", {className: 'center-panel', style: styles.centerPanel}, 
	                    React.createElement("div", {className: 'center-top-bar'}, 
	                        React.createElement("div", {className: 'filter-split-section'}, 
	                            React.createElement(index_3.FilterTile, {ref: "filterTile", clicker: clicker, essence: essence, timekeeper: timekeeper, menuStage: visualizationStage, getUrlPrefix: getUrlPrefix}), 
	                            React.createElement(index_3.SplitTile, {ref: "splitTile", clicker: clicker, essence: essence, menuStage: visualizationStage, getUrlPrefix: getUrlPrefix})), 
	                        React.createElement(index_3.VisSelector, {clicker: clicker, essence: essence})), 
	                    React.createElement("div", {className: 'center-main', onDragEnter: this.dragEnter.bind(this)}, 
	                        React.createElement("div", {className: 'visualization', ref: 'visualization'}, visElement), 
	                        manualFallback, 
	                        dragOver ? React.createElement(index_3.DropIndicator, null) : null, 
	                        dragOver ? React.createElement("div", {className: "drag-mask", onDragOver: this.dragOver.bind(this), onDragLeave: this.dragLeave.bind(this), onDragExit: this.dragLeave.bind(this), onDrop: this.drop.bind(this)}) : null)), 
	                deviceSize !== 'small' ? React.createElement(index_3.ResizeHandle, {side: "right", initialValue: layout.pinboardWidth, onResize: this.onPinboardPanelResize.bind(this), onResizeEnd: this.onPanelResizeEnd.bind(this), min: MIN_PANEL_WIDTH, max: MAX_PANEL_WIDTH}) : null, 
	                React.createElement(index_3.PinboardPanel, {style: styles.pinboardPanel, clicker: clicker, essence: essence, timekeeper: timekeeper, getUrlPrefix: getUrlPrefix})), 
	            this.renderRawDataModal());
	    };
	    CubeView.defaultProps = {
	        maxFilters: 20,
	        maxSplits: 3
	    };
	    return CubeView;
	}(React.Component));
	exports.CubeView = CubeView;


/***/ },
/* 661 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(662);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./cube-view.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./cube-view.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 662 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".cube-view .center-panel .center-main .visualization{background:#fff;box-shadow:0 1px 1px 0 rgba(0,0,0,0.1)}.cube-view .cube-header-bar,.cube-view .supervised-cube-header-bar{position:absolute;top:0;left:0;right:0;height:42px}.cube-view .container{position:absolute;top:42px;bottom:0;left:0;right:0}.cube-view .dimension-measure-panel{position:absolute;top:0;bottom:0;left:0;width:240px}.cube-view .center-panel{position:absolute;top:10px;bottom:10px;left:240px;right:240px}@media only screen and (max-width: 1080px){.cube-view .center-panel{top:0;bottom:0}}.cube-view .center-panel .center-top-bar{position:absolute;top:0;left:0;right:0;height:73px}.cube-view .center-panel .center-top-bar .filter-split-section{position:absolute;top:0;bottom:0;left:0;right:79px}.cube-view .center-panel .center-top-bar .filter-tile,.cube-view .center-panel .center-top-bar .split-tile{height:36px}.cube-view .center-panel .center-top-bar .filter-tile{margin-bottom:1px;border-radius:2px 0 0 0}.cube-view .center-panel .center-top-bar .split-tile{border-radius:0 0 0 2px}.cube-view .center-panel .center-top-bar .vis-selector{position:absolute;top:0;bottom:0;right:0;width:78px;z-index:8;border-radius:0 2px 2px 0}.cube-view .center-panel .center-main{position:absolute;top:78px;bottom:0;left:0;right:0}@media only screen and (max-width: 1080px){.cube-view .center-panel .center-main{position:absolute;top:74px;bottom:0;left:0;right:0}}.cube-view .center-panel .center-main .visualization{position:absolute;top:0;bottom:0;left:0;right:0;border-radius:2px}.cube-view .center-panel .center-main .manual-fallback{position:absolute;top:0;bottom:0;left:0;right:0}.cube-view .center-panel .center-main .drop-indicator{position:absolute;top:0;bottom:0;left:0;right:0;z-index:9}.cube-view .center-panel .center-main .drag-mask{position:absolute;top:0;bottom:0;left:0;right:0;z-index:10}.cube-view .pinboard-panel{position:absolute;top:0;bottom:0;right:0;width:240px;margin-bottom:9px}@media only screen and (max-width: 1080px){.cube-view .pinboard-panel{margin-bottom:0}}.cube-view .pinboard-panel .pinboard-measure-tile:first-child,.cube-view .pinboard-panel .dimension-tile:first-child,.cube-view .pinboard-panel .placeholder-tile:first-child{border-radius:2px 2px 0 0}.cube-view .pinboard-panel .pinboard-measure-tile:last-child,.cube-view .pinboard-panel .dimension-tile:last-child,.cube-view .pinboard-panel .placeholder-tile:last-child{border-radius:0 0 2px 2px}\n", ""]);

	// exports


/***/ },
/* 663 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(664);
	var React = __webpack_require__(5);
	var index_1 = __webpack_require__(293);
	var SupervisedCubeHeaderBar = (function (_super) {
	    __extends(SupervisedCubeHeaderBar, _super);
	    function SupervisedCubeHeaderBar() {
	        _super.call(this);
	        this.state = {};
	    }
	    SupervisedCubeHeaderBar.prototype.onSettingsMenuClick = function (e) {
	        var settingsMenuOpen = this.state.settingsMenuOpen;
	        if (settingsMenuOpen)
	            return this.onSettingsMenuClose();
	        this.setState({
	            settingsMenuOpen: e.target
	        });
	    };
	    SupervisedCubeHeaderBar.prototype.onSettingsMenuClose = function () {
	        this.setState({
	            settingsMenuOpen: null
	        });
	    };
	    SupervisedCubeHeaderBar.prototype.renderSettingsMenu = function () {
	        var _a = this.props, changeTimezone = _a.changeTimezone, timezone = _a.timezone, customization = _a.customization, essence = _a.essence;
	        var settingsMenuOpen = this.state.settingsMenuOpen;
	        if (!settingsMenuOpen)
	            return null;
	        return React.createElement(index_1.SettingsMenu, {dataCube: essence.dataCube, timezone: timezone, timezones: customization.getTimezones(), changeTimezone: changeTimezone, openOn: settingsMenuOpen, onClose: this.onSettingsMenuClose.bind(this), stateful: true});
	    };
	    SupervisedCubeHeaderBar.prototype.onSave = function () {
	        var _a = this.props, supervisor = _a.supervisor, essence = _a.essence;
	        if (supervisor.save) {
	            supervisor.save(essence);
	        }
	        else if (supervisor.getConfirmationModal) {
	            this.setState({ needsConfirmation: true });
	        }
	    };
	    SupervisedCubeHeaderBar.prototype.render = function () {
	        var _this = this;
	        var _a = this.props, supervisor = _a.supervisor, customization = _a.customization, essence = _a.essence;
	        var needsConfirmation = this.state.needsConfirmation;
	        var headerStyle = null;
	        if (customization && customization.headerBackground) {
	            headerStyle = {
	                background: customization.headerBackground
	            };
	        }
	        var modal = null;
	        if (needsConfirmation) {
	            modal = React.cloneElement(supervisor.getConfirmationModal(essence), { onCancel: function () { return _this.setState({ needsConfirmation: false }); } });
	        }
	        return React.createElement("header", {className: "supervised-cube-header-bar", style: headerStyle}, 
	            React.createElement("div", {className: "left-bar"}, 
	                React.createElement("div", {className: "title"}, supervisor.title)
	            ), 
	            React.createElement("div", {className: "right-bar"}, 
	                React.createElement("div", {className: "icon-button settings", onClick: this.onSettingsMenuClick.bind(this)}, 
	                    React.createElement(index_1.SvgIcon, {className: "settings-icon", svg: __webpack_require__(501)})
	                ), 
	                React.createElement("div", {className: "button-group"}, 
	                    React.createElement(index_1.Button, {className: "cancel", title: "Cancel", type: "secondary", onClick: supervisor.cancel}), 
	                    React.createElement(index_1.Button, {className: "save", title: supervisor.saveLabel || 'Save', type: "primary", onClick: this.onSave.bind(this)}))), 
	            this.renderSettingsMenu(), 
	            modal);
	    };
	    return SupervisedCubeHeaderBar;
	}(React.Component));
	exports.SupervisedCubeHeaderBar = SupervisedCubeHeaderBar;


/***/ },
/* 664 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(665);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../../node_modules/css-loader/index.js!./supervised-cube-header-bar.css", function() {
				var newContent = require("!!./../../../../../node_modules/css-loader/index.js!./supervised-cube-header-bar.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 665 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".supervised-cube-header-bar .right-bar .icon-button::after{background:#fff;border-radius:2px;box-shadow:0 3px 10px 0 rgba(0,0,0,0.26),0 0 3px 0 rgba(0,0,0,0.16)}.supervised-cube-header-bar{background:#1ea3e6;color:#fff;font-size:16px;z-index:11}.supervised-cube-header-bar .left-bar{display:inline-block;height:100%;padding-left:12px;padding-right:12px;cursor:pointer}.supervised-cube-header-bar .left-bar .menu-icon{display:inline-block;padding:11px 5px}.supervised-cube-header-bar .left-bar .menu-icon svg path{fill:#fff}.supervised-cube-header-bar .left-bar .title{display:inline-block;font-size:15px;margin-top:13px;padding:0 7px}.supervised-cube-header-bar .right-bar{position:absolute;top:0;right:12px}.supervised-cube-header-bar .right-bar .text-button{display:inline-block;font-size:12px;text-transform:uppercase;height:42px;line-height:42px;padding:0 5px;margin-right:2px;cursor:pointer;background-color:transparent;color:#fff}.supervised-cube-header-bar .right-bar .icon-button{display:inline-block;padding:11px 5px;cursor:pointer}.supervised-cube-header-bar .right-bar .icon-button:not(:first-child){margin-left:3px}.supervised-cube-header-bar .right-bar .icon-button:active::after{display:none}.supervised-cube-header-bar .right-bar .icon-button.help::after{content:'Google Groups'}.supervised-cube-header-bar .right-bar .icon-button.auto-refresh::after{content:'Refresh options'}.supervised-cube-header-bar .right-bar .icon-button.hiluk::after{content:'Share link'}.supervised-cube-header-bar .right-bar .icon-button.user::after{content:'User'}.supervised-cube-header-bar .right-bar .icon-button.github::after{content:'Pivot on Github'}.supervised-cube-header-bar .right-bar .icon-button.settings::after{content:'Settings'}.supervised-cube-header-bar .right-bar .icon-button:hover::after{opacity:1}.supervised-cube-header-bar .right-bar .icon-button::after{opacity:0;pointer-events:none;position:absolute;display:block;bottom:-24px;right:0;padding:5px;color:#000;font-size:12px;white-space:nowrap}.supervised-cube-header-bar .right-bar .icon-button svg path{fill:#fff}.supervised-cube-header-bar .right-bar .button-group{display:inline-block;padding-top:6px;margin-left:8px}.supervised-cube-header-bar .right-bar .button-group>*:not(:last-child){margin-right:8px}.supervised-cube-header-bar .right-bar .button-group .cancel{color:#fff;background-color:rgba(255,255,255,0.28)}.supervised-cube-header-bar .right-bar .button-group .cancel:hover{background-color:rgba(255,255,255,0.36)}.supervised-cube-header-bar .right-bar .button-group .save{color:#1ea3e6;background-color:#fff}.supervised-cube-header-bar .right-bar .button-group .save:hover{background-color:rgba(255,255,255,0.92)}.supervised-cube-header-bar svg{height:19px;width:19px}.supervised-cube-header-bar .left-bar .title{cursor:default;font-size:14px;margin-top:14px}\n", ""]);

	// exports


/***/ },
/* 666 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(667);
	var React = __webpack_require__(5);
	var immutable_class_1 = __webpack_require__(193);
	var chronoshift_1 = __webpack_require__(191);
	var dom_1 = __webpack_require__(300);
	var index_1 = __webpack_require__(293);
	var CubeHeaderBar = (function (_super) {
	    __extends(CubeHeaderBar, _super);
	    function CubeHeaderBar() {
	        _super.call(this);
	        this.state = {
	            hilukMenuOpenOn: null,
	            autoRefreshMenuOpenOn: null,
	            autoRefreshRate: null,
	            settingsMenuOpenOn: null,
	            userMenuOpenOn: null,
	            animating: false
	        };
	    }
	    CubeHeaderBar.prototype.componentDidMount = function () {
	        this.mounted = true;
	        var dataCube = this.props.essence.dataCube;
	        this.setAutoRefreshFromDataCube(dataCube);
	    };
	    CubeHeaderBar.prototype.componentWillReceiveProps = function (nextProps) {
	        var _this = this;
	        if (this.props.essence.dataCube.name !== nextProps.essence.dataCube.name) {
	            this.setAutoRefreshFromDataCube(nextProps.essence.dataCube);
	        }
	        if (!this.props.updatingMaxTime && nextProps.updatingMaxTime) {
	            this.setState({ animating: true });
	            setTimeout(function () {
	                if (!_this.mounted)
	                    return;
	                _this.setState({ animating: false });
	            }, 1000);
	        }
	    };
	    CubeHeaderBar.prototype.componentWillUnmount = function () {
	        this.mounted = false;
	        this.clearTimerIfExists();
	    };
	    CubeHeaderBar.prototype.setAutoRefreshFromDataCube = function (dataCube) {
	        var refreshRule = dataCube.refreshRule;
	        if (refreshRule.isFixed())
	            return;
	        this.setAutoRefreshRate(chronoshift_1.Duration.fromJS('PT5M'));
	    };
	    CubeHeaderBar.prototype.setAutoRefreshRate = function (rate) {
	        var autoRefreshRate = this.state.autoRefreshRate;
	        if (immutable_class_1.immutableEqual(autoRefreshRate, rate))
	            return;
	        this.clearTimerIfExists();
	        var refreshMaxTime = this.props.refreshMaxTime;
	        if (refreshMaxTime && rate) {
	            this.autoRefreshTimer = setInterval(function () {
	                refreshMaxTime();
	            }, rate.getCanonicalLength());
	        }
	        this.setState({
	            autoRefreshRate: rate
	        });
	    };
	    CubeHeaderBar.prototype.clearTimerIfExists = function () {
	        if (this.autoRefreshTimer) {
	            clearInterval(this.autoRefreshTimer);
	            this.autoRefreshTimer = null;
	        }
	    };
	    CubeHeaderBar.prototype.onHilukMenuClick = function (e) {
	        var hilukMenuOpenOn = this.state.hilukMenuOpenOn;
	        if (hilukMenuOpenOn)
	            return this.onHilukMenuClose();
	        this.setState({
	            hilukMenuOpenOn: e.target
	        });
	    };
	    CubeHeaderBar.prototype.onHilukMenuClose = function () {
	        this.setState({
	            hilukMenuOpenOn: null
	        });
	    };
	    CubeHeaderBar.prototype.renderHilukMenu = function () {
	        var _this = this;
	        var _a = this.props, essence = _a.essence, timekeeper = _a.timekeeper, getUrlPrefix = _a.getUrlPrefix, customization = _a.customization, openRawDataModal = _a.openRawDataModal, getDownloadableDataset = _a.getDownloadableDataset, addEssenceToCollection = _a.addEssenceToCollection, stateful = _a.stateful;
	        var hilukMenuOpenOn = this.state.hilukMenuOpenOn;
	        if (!hilukMenuOpenOn)
	            return null;
	        var externalViews = null;
	        if (customization && customization.externalViews) {
	            externalViews = customization.externalViews;
	        }
	        var onAddEssenceToCollectionClick = null;
	        if (stateful) {
	            onAddEssenceToCollectionClick = function () {
	                _this.setState({
	                    hilukMenuOpenOn: null
	                });
	                addEssenceToCollection();
	            };
	        }
	        return React.createElement(index_1.HilukMenu, {essence: essence, timekeeper: timekeeper, openOn: hilukMenuOpenOn, onClose: this.onHilukMenuClose.bind(this), getUrlPrefix: getUrlPrefix, openRawDataModal: openRawDataModal, externalViews: externalViews, getDownloadableDataset: getDownloadableDataset, addEssenceToCollection: onAddEssenceToCollectionClick});
	    };
	    CubeHeaderBar.prototype.onAutoRefreshMenuClick = function (e) {
	        var autoRefreshMenuOpenOn = this.state.autoRefreshMenuOpenOn;
	        if (autoRefreshMenuOpenOn)
	            return this.onAutoRefreshMenuClose();
	        this.setState({
	            autoRefreshMenuOpenOn: e.target
	        });
	    };
	    CubeHeaderBar.prototype.onAutoRefreshMenuClose = function () {
	        this.setState({
	            autoRefreshMenuOpenOn: null
	        });
	    };
	    CubeHeaderBar.prototype.renderAutoRefreshMenu = function () {
	        var _a = this.props, refreshMaxTime = _a.refreshMaxTime, essence = _a.essence, timekeeper = _a.timekeeper;
	        var _b = this.state, autoRefreshMenuOpenOn = _b.autoRefreshMenuOpenOn, autoRefreshRate = _b.autoRefreshRate;
	        if (!autoRefreshMenuOpenOn)
	            return null;
	        return React.createElement(index_1.AutoRefreshMenu, {timekeeper: timekeeper, openOn: autoRefreshMenuOpenOn, onClose: this.onAutoRefreshMenuClose.bind(this), autoRefreshRate: autoRefreshRate, setAutoRefreshRate: this.setAutoRefreshRate.bind(this), refreshMaxTime: refreshMaxTime, dataCube: essence.dataCube, timezone: essence.timezone});
	    };
	    CubeHeaderBar.prototype.onUserMenuClick = function (e) {
	        var userMenuOpenOn = this.state.userMenuOpenOn;
	        if (userMenuOpenOn)
	            return this.onUserMenuClose();
	        this.setState({
	            userMenuOpenOn: e.target
	        });
	    };
	    CubeHeaderBar.prototype.onUserMenuClose = function () {
	        this.setState({
	            userMenuOpenOn: null
	        });
	    };
	    CubeHeaderBar.prototype.renderUserMenu = function () {
	        var _a = this.props, user = _a.user, customization = _a.customization;
	        var userMenuOpenOn = this.state.userMenuOpenOn;
	        if (!userMenuOpenOn)
	            return null;
	        return React.createElement(index_1.UserMenu, {openOn: userMenuOpenOn, onClose: this.onUserMenuClose.bind(this), user: user, customization: customization});
	    };
	    CubeHeaderBar.prototype.onSettingsMenuClick = function (e) {
	        var settingsMenuOpenOn = this.state.settingsMenuOpenOn;
	        if (settingsMenuOpenOn)
	            return this.onSettingsMenuClose();
	        if (e.metaKey && e.altKey) {
	            console.log(this.props.essence.toJS());
	            return;
	        }
	        this.setState({
	            settingsMenuOpenOn: e.target
	        });
	    };
	    CubeHeaderBar.prototype.onSettingsMenuClose = function () {
	        this.setState({
	            settingsMenuOpenOn: null
	        });
	    };
	    CubeHeaderBar.prototype.renderSettingsMenu = function () {
	        var _a = this.props, changeTimezone = _a.changeTimezone, timezone = _a.timezone, customization = _a.customization, essence = _a.essence, user = _a.user, stateful = _a.stateful;
	        var settingsMenuOpenOn = this.state.settingsMenuOpenOn;
	        if (!settingsMenuOpenOn)
	            return null;
	        return React.createElement(index_1.SettingsMenu, {dataCube: essence.dataCube, user: user, timezone: timezone, timezones: customization.getTimezones(), changeTimezone: changeTimezone, openOn: settingsMenuOpenOn, onClose: this.onSettingsMenuClose.bind(this), stateful: stateful});
	    };
	    CubeHeaderBar.prototype.render = function () {
	        var _a = this.props, user = _a.user, onNavClick = _a.onNavClick, essence = _a.essence, customization = _a.customization;
	        var animating = this.state.animating;
	        var userButton = null;
	        if (user) {
	            userButton = React.createElement("div", {className: "icon-button user", onClick: this.onUserMenuClick.bind(this)}, 
	                React.createElement(index_1.SvgIcon, {svg: __webpack_require__(503)})
	            );
	        }
	        var headerStyle = null;
	        if (customization && customization.headerBackground) {
	            headerStyle = {
	                background: customization.headerBackground
	            };
	        }
	        return React.createElement("header", {className: "cube-header-bar", style: headerStyle}, 
	            React.createElement("div", {className: "left-bar", onClick: onNavClick}, 
	                React.createElement("div", {className: "menu-icon"}, 
	                    React.createElement(index_1.SvgIcon, {svg: __webpack_require__(507)})
	                ), 
	                React.createElement("div", {className: "title"}, essence.dataCube.title)), 
	            React.createElement("div", {className: "right-bar"}, 
	                React.createElement("div", {className: dom_1.classNames("icon-button", "auto-refresh", { "refreshing": animating }), onClick: this.onAutoRefreshMenuClick.bind(this)}, 
	                    React.createElement(index_1.SvgIcon, {className: "auto-refresh-icon", svg: __webpack_require__(499)})
	                ), 
	                React.createElement("div", {className: "icon-button hiluk", onClick: this.onHilukMenuClick.bind(this)}, 
	                    React.createElement(index_1.SvgIcon, {className: "hiluk-icon", svg: __webpack_require__(495)})
	                ), 
	                React.createElement("div", {className: "icon-button settings", onClick: this.onSettingsMenuClick.bind(this)}, 
	                    React.createElement(index_1.SvgIcon, {className: "settings-icon", svg: __webpack_require__(501)})
	                ), 
	                userButton), 
	            this.renderHilukMenu(), 
	            this.renderAutoRefreshMenu(), 
	            this.renderSettingsMenu(), 
	            this.renderUserMenu());
	    };
	    return CubeHeaderBar;
	}(React.Component));
	exports.CubeHeaderBar = CubeHeaderBar;


/***/ },
/* 667 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(668);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../../node_modules/css-loader/index.js!./cube-header-bar.css", function() {
				var newContent = require("!!./../../../../../node_modules/css-loader/index.js!./cube-header-bar.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 668 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".cube-header-bar .right-bar .icon-button::after{background:#fff;border-radius:2px;box-shadow:0 3px 10px 0 rgba(0,0,0,0.26),0 0 3px 0 rgba(0,0,0,0.16)}.cube-header-bar{background:#1ea3e6;color:#fff;font-size:16px;z-index:11}.cube-header-bar .left-bar{display:inline-block;height:100%;padding-left:12px;padding-right:12px;cursor:pointer}.cube-header-bar .left-bar .menu-icon{display:inline-block;padding:11px 5px}.cube-header-bar .left-bar .menu-icon svg path{fill:#fff}.cube-header-bar .left-bar .title{display:inline-block;font-size:15px;margin-top:13px;padding:0 7px}.cube-header-bar .right-bar{position:absolute;top:0;right:12px}.cube-header-bar .right-bar .text-button{display:inline-block;font-size:12px;text-transform:uppercase;height:42px;line-height:42px;padding:0 5px;margin-right:2px;cursor:pointer;background-color:transparent;color:#fff}.cube-header-bar .right-bar .icon-button{display:inline-block;padding:11px 5px;cursor:pointer}.cube-header-bar .right-bar .icon-button:not(:first-child){margin-left:3px}.cube-header-bar .right-bar .icon-button:active::after{display:none}.cube-header-bar .right-bar .icon-button.help::after{content:'Google Groups'}.cube-header-bar .right-bar .icon-button.auto-refresh::after{content:'Refresh options'}.cube-header-bar .right-bar .icon-button.hiluk::after{content:'Share link'}.cube-header-bar .right-bar .icon-button.user::after{content:'User'}.cube-header-bar .right-bar .icon-button.github::after{content:'Pivot on Github'}.cube-header-bar .right-bar .icon-button.settings::after{content:'Settings'}.cube-header-bar .right-bar .icon-button:hover::after{opacity:1}.cube-header-bar .right-bar .icon-button::after{opacity:0;pointer-events:none;position:absolute;display:block;bottom:-24px;right:0;padding:5px;color:#000;font-size:12px;white-space:nowrap}.cube-header-bar .right-bar .icon-button svg path{fill:#fff}.cube-header-bar .right-bar .button-group{display:inline-block;padding-top:6px;margin-left:8px}.cube-header-bar .right-bar .button-group>*:not(:last-child){margin-right:8px}.cube-header-bar .right-bar .button-group .cancel{color:#fff;background-color:rgba(255,255,255,0.28)}.cube-header-bar .right-bar .button-group .cancel:hover{background-color:rgba(255,255,255,0.36)}.cube-header-bar .right-bar .button-group .save{color:#1ea3e6;background-color:#fff}.cube-header-bar .right-bar .button-group .save:hover{background-color:rgba(255,255,255,0.92)}.cube-header-bar svg{height:19px;width:19px}.cube-header-bar .refreshing svg{-webkit-animation-name:rotate;animation-name:rotate;-webkit-animation-duration:1s;animation-duration:1s}@-webkit-keyframes rotate{from{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@keyframes rotate{from{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}\n", ""]);

	// exports


/***/ },
/* 669 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(670);
	var React = __webpack_require__(5);
	var index_1 = __webpack_require__(276);
	var constants_1 = __webpack_require__(292);
	var ajax_1 = __webpack_require__(198);
	var array_1 = __webpack_require__(605);
	var immutable_utils_1 = __webpack_require__(235);
	var dom_1 = __webpack_require__(300);
	var notifications_1 = __webpack_require__(539);
	var index_2 = __webpack_require__(293);
	var index_3 = __webpack_require__(288);
	var index_4 = __webpack_require__(202);
	var settings_header_bar_1 = __webpack_require__(672);
	var general_1 = __webpack_require__(675);
	var clusters_1 = __webpack_require__(678);
	var cluster_edit_1 = __webpack_require__(681);
	var data_cubes_1 = __webpack_require__(684);
	var data_cube_edit_1 = __webpack_require__(687);
	var VIEWS = [
	    { label: 'General', value: 'general', svg: __webpack_require__(501) },
	    { label: 'Clusters', value: 'clusters', svg: __webpack_require__(488) },
	    { label: 'Data Cubes', value: 'data-cubes', svg: __webpack_require__(490) }
	];
	var SettingsView = (function (_super) {
	    __extends(SettingsView, _super);
	    function SettingsView() {
	        _super.call(this);
	        this.state = {};
	    }
	    SettingsView.prototype.componentDidMount = function () {
	        var _this = this;
	        ajax_1.Ajax.query({ method: "GET", url: 'settings' })
	            .then(function (resp) {
	            _this.setState({
	                settings: index_4.AppSettings.fromJS(resp.appSettings, { visualizations: index_1.MANIFESTS })
	            });
	        }, function (xhr) { return notifications_1.Notifier.failure('Sorry', "The settings couldn't be loaded"); }).done();
	    };
	    SettingsView.prototype.onSave = function (settings, okMessage) {
	        var _this = this;
	        var onSettingsChange = this.props.onSettingsChange;
	        return ajax_1.Ajax.query({
	            method: "POST",
	            url: 'settings',
	            data: { appSettings: settings }
	        })
	            .then(function (status) {
	            _this.setState({ settings: settings });
	            notifications_1.Notifier.success(okMessage ? okMessage : 'Settings saved');
	            if (onSettingsChange) {
	                onSettingsChange(settings.toClientSettings().attachExecutors(function (dataCube) {
	                    return ajax_1.Ajax.queryUrlExecutorFactory(dataCube.name, 'plywood');
	                }));
	            }
	        }, function (xhr) { return notifications_1.Notifier.failure('Woops', 'Something bad happened'); });
	    };
	    SettingsView.prototype.selectTab = function (value) {
	        window.location.hash = "settings/" + value;
	        this.setState({
	            tempCluster: null,
	            tempDataCube: null
	        });
	    };
	    SettingsView.prototype.renderLeftButtons = function (breadCrumbs) {
	        var _this = this;
	        if (!breadCrumbs || !breadCrumbs.length)
	            return [];
	        return VIEWS.map(function (_a) {
	            var label = _a.label, value = _a.value, svg = _a.svg;
	            return React.createElement(index_2.Button, {className: dom_1.classNames({ active: breadCrumbs[0] === value }), title: label, type: "primary", svg: svg, key: value, onClick: _this.selectTab.bind(_this, value)});
	        });
	    };
	    SettingsView.prototype.onURLChange = function (breadCrumbs) {
	        this.setState({ breadCrumbs: breadCrumbs });
	    };
	    SettingsView.prototype.createCluster = function (newCluster) {
	        this.setState({
	            tempCluster: newCluster
	        });
	    };
	    SettingsView.prototype.addCluster = function (newCluster) {
	        this.onSave(immutable_utils_1.ImmutableUtils.addInArray(this.state.settings, 'clusters', newCluster), 'Cluster created').then(this.backToClustersView.bind(this));
	    };
	    SettingsView.prototype.backToClustersView = function () {
	        window.location.hash = '#settings/clusters';
	        this.setState({
	            tempCluster: null
	        });
	    };
	    SettingsView.prototype.updateCluster = function (newCluster) {
	        var settings = this.state.settings;
	        var index = array_1.indexByAttribute(settings.clusters, 'name', newCluster.name);
	        this.onSave(immutable_utils_1.ImmutableUtils.addInArray(settings, 'clusters', newCluster, index)).then(this.backToClustersView.bind(this));
	    };
	    SettingsView.prototype.createDataCube = function (newDataCube) {
	        this.setState({
	            tempDataCube: newDataCube
	        });
	    };
	    SettingsView.prototype.addDataCube = function (newDataCube) {
	        this.onSave(immutable_utils_1.ImmutableUtils.addInArray(this.state.settings, 'dataCubes', newDataCube), 'Cube created').then(this.backToDataCubesView.bind(this));
	    };
	    SettingsView.prototype.backToDataCubesView = function () {
	        window.location.hash = '#settings/data-cubes';
	        this.setState({
	            tempDataCube: null
	        });
	    };
	    SettingsView.prototype.updateDataCube = function (newDataCube) {
	        var settings = this.state.settings;
	        var index = array_1.indexByAttribute(settings.dataCubes, 'name', newDataCube.name);
	        this.onSave(immutable_utils_1.ImmutableUtils.addInArray(settings, 'dataCubes', newDataCube, index)).then(this.backToDataCubesView.bind(this));
	    };
	    SettingsView.prototype.render = function () {
	        var _a = this.props, user = _a.user, onNavClick = _a.onNavClick, customization = _a.customization;
	        var _b = this.state, settings = _b.settings, breadCrumbs = _b.breadCrumbs, tempCluster = _b.tempCluster, tempDataCube = _b.tempDataCube;
	        if (!settings)
	            return null;
	        var inflateCluster = function (key, value) {
	            if (key !== 'clusterId')
	                return { key: key, value: value };
	            return {
	                key: 'cluster',
	                value: settings.clusters.filter(function (d) { return d.name === value; })[0]
	            };
	        };
	        var inflateDataCube = function (key, value) {
	            if (key !== 'dataCubeId')
	                return { key: key, value: value };
	            return {
	                key: 'dataCube',
	                value: settings.dataCubes.filter(function (d) { return d.name === value; })[0]
	            };
	        };
	        return React.createElement("div", {className: "settings-view"}, 
	            React.createElement(settings_header_bar_1.SettingsHeaderBar, {user: user, onNavClick: onNavClick, customization: customization, title: constants_1.STRINGS.settings}), 
	            React.createElement("div", {className: "left-panel"}, this.renderLeftButtons(breadCrumbs)), 
	            React.createElement("div", {className: "main-panel"}, 
	                React.createElement(index_2.Router, {rootFragment: "settings", onURLChange: this.onURLChange.bind(this)}, 
	                    React.createElement(index_2.Route, {fragment: "general"}, 
	                        React.createElement(general_1.General, {settings: settings, onSave: this.onSave.bind(this)})
	                    ), 
	                    React.createElement(index_2.Route, {fragment: "clusters"}, 
	                        React.createElement(clusters_1.Clusters, {settings: settings, onSave: this.onSave.bind(this)}), 
	                        React.createElement(index_2.Route, {fragment: "new-cluster"}, 
	                            tempCluster ? null : React.createElement(clusters_1.Clusters, {settings: settings, onSave: this.onSave.bind(this)}), 
	                            tempCluster
	                                ? React.createElement(cluster_edit_1.ClusterEdit, {isNewCluster: true, cluster: tempCluster, onSave: this.addCluster.bind(this), onCancel: this.backToClustersView.bind(this)})
	                                : React.createElement(index_3.ClusterSeedModal, {onNext: this.createCluster.bind(this), onCancel: this.backToClustersView.bind(this), clusters: settings.clusters})), 
	                        React.createElement(index_2.Route, {fragment: ":clusterId", inflate: inflateCluster}, 
	                            React.createElement(cluster_edit_1.ClusterEdit, {onSave: this.updateCluster.bind(this)})
	                        )), 
	                    React.createElement(index_2.Route, {fragment: "data-cubes"}, 
	                        React.createElement(data_cubes_1.DataCubes, {settings: settings, onSave: this.onSave.bind(this)}), 
	                        React.createElement(index_2.Route, {fragment: "new-data-cube"}, 
	                            tempDataCube ? null : React.createElement(data_cubes_1.DataCubes, {settings: settings, onSave: this.onSave.bind(this)}), 
	                            tempDataCube
	                                ? React.createElement(data_cube_edit_1.DataCubeEdit, {clusters: settings.clusters, isNewDataCube: true, dataCube: tempDataCube, onSave: this.addDataCube.bind(this), onCancel: this.backToDataCubesView.bind(this)})
	                                : React.createElement(index_3.DataCubeSeedModal, {onNext: this.createDataCube.bind(this), onCancel: this.backToDataCubesView.bind(this), dataCubes: settings.dataCubes, clusters: settings.clusters})), 
	                        React.createElement(index_2.Route, {fragment: ":dataCubeId/:tab=general", inflate: inflateDataCube}, 
	                            React.createElement(data_cube_edit_1.DataCubeEdit, {onSave: this.updateDataCube.bind(this), clusters: settings.clusters})
	                        )))
	            ));
	    };
	    return SettingsView;
	}(React.Component));
	exports.SettingsView = SettingsView;


/***/ },
/* 670 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(671);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./settings-view.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./settings-view.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 671 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".settings-view form{width:448px}.settings-view form.vertical>*{display:block}.settings-view form .dropdown .dropdown-label{margin-bottom:8px}.settings-view form input:not(.actionable),.settings-view form .input:not(.actionable),.settings-view form .checkbox:not(.actionable){margin-bottom:25px}.settings-view form .checkbox{height:20px;width:100%}.settings-view form .checkbox .label{position:absolute;left:25px;top:5px}.settings-view form .checkbox .label{text-transform:uppercase;font-size:12px;color:#a6a6a6;margin-bottom:5px}.settings-view form input{border:1px solid #d4d4d4;border-radius:2px;box-shadow:inset 0 1px 1px rgba(0,0,0,0.13);padding-left:6px;padding-right:6px;width:100%;height:30px}.settings-view form input:hover{border-color:#b8b8b8}.settings-view form input:focus{border-color:#1ea3e6}.settings-view form input.error{border-color:#e24c4c}.settings-view .settings-header-bar{position:absolute;top:0;left:0;right:0;height:42px}.settings-view .left-panel{position:absolute;top:42px;bottom:0;left:0;right:0;width:170px;padding:10px 5px;background-color:#5dc3ef}.settings-view .left-panel button{background-color:transparent;display:block;width:100%;height:35px;text-align:left}.settings-view .left-panel button.icon{padding-left:38px}.settings-view .left-panel button.icon .svg-icon{position:absolute;top:8px;left:12px}.settings-view .left-panel button.icon .svg-icon path{fill:#fff}.settings-view .left-panel button:hover{background-color:rgba(30,163,230,0.4)}.settings-view .left-panel button:active{color:#fff}.settings-view .left-panel button.active{background-color:#1ea3e6;color:#fff}.settings-view .main-panel{position:absolute;top:42px;bottom:0;left:0;right:0;left:170px;background-color:#fff}.settings-view .title-bar{height:56px;background-color:#fff;border-bottom:1px solid #dedede;padding-left:24px}.settings-view .title-bar .title{font-size:17px;margin-top:18px}.settings-view .title-bar>.button-group,.settings-view .title-bar>.button.save,.settings-view .title-bar>.button.cancel,.settings-view .title-bar>.button.add{position:absolute;top:12px;right:24px}.settings-view .title-bar .button-group .button:not(:last-child){margin-right:10px}.settings-view .title-bar .button.back{cursor:pointer;width:30px;margin-top:12px;margin-right:15px}.settings-view .title-bar>*{display:inline-block}.settings-view .content{position:absolute;top:56px;bottom:0;left:0;right:0;overflow-y:auto;padding:24px 24px}.settings-view .content .tab-content{overflow:auto}\n", ""]);

	// exports


/***/ },
/* 672 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(673);
	var React = __webpack_require__(5);
	var index_1 = __webpack_require__(293);
	var SettingsHeaderBar = (function (_super) {
	    __extends(SettingsHeaderBar, _super);
	    function SettingsHeaderBar() {
	        _super.call(this);
	        this.state = {
	            userMenuOpenOn: null
	        };
	    }
	    SettingsHeaderBar.prototype.onUserMenuClick = function (e) {
	        var userMenuOpenOn = this.state.userMenuOpenOn;
	        if (userMenuOpenOn)
	            return this.onUserMenuClose();
	        this.setState({
	            userMenuOpenOn: e.target
	        });
	    };
	    SettingsHeaderBar.prototype.onUserMenuClose = function () {
	        this.setState({
	            userMenuOpenOn: null
	        });
	    };
	    SettingsHeaderBar.prototype.renderUserMenu = function () {
	        var _a = this.props, user = _a.user, customization = _a.customization;
	        var userMenuOpenOn = this.state.userMenuOpenOn;
	        if (!userMenuOpenOn)
	            return null;
	        return React.createElement(index_1.UserMenu, {openOn: userMenuOpenOn, onClose: this.onUserMenuClose.bind(this), user: user, customization: customization});
	    };
	    SettingsHeaderBar.prototype.render = function () {
	        var _a = this.props, user = _a.user, onNavClick = _a.onNavClick, customization = _a.customization, title = _a.title;
	        var userButton = null;
	        if (user) {
	            userButton = React.createElement("div", {className: "icon-button user", onClick: this.onUserMenuClick.bind(this)}, 
	                React.createElement(index_1.SvgIcon, {svg: __webpack_require__(503)})
	            );
	        }
	        var headerStyle = null;
	        if (customization && customization.headerBackground) {
	            headerStyle = {
	                background: customization.headerBackground
	            };
	        }
	        return React.createElement("header", {className: "settings-header-bar", style: headerStyle}, 
	            React.createElement("div", {className: "left-bar", onClick: onNavClick}, 
	                React.createElement("div", {className: "menu-icon"}, 
	                    React.createElement(index_1.SvgIcon, {svg: __webpack_require__(507)})
	                ), 
	                React.createElement("div", {className: "title"}, title)), 
	            React.createElement("div", {className: "right-bar"}, 
	                this.props.children, 
	                userButton), 
	            this.renderUserMenu());
	    };
	    return SettingsHeaderBar;
	}(React.Component));
	exports.SettingsHeaderBar = SettingsHeaderBar;


/***/ },
/* 673 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(674);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../../node_modules/css-loader/index.js!./settings-header-bar.css", function() {
				var newContent = require("!!./../../../../../node_modules/css-loader/index.js!./settings-header-bar.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 674 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".settings-header-bar .right-bar .icon-button::after{background:#fff;border-radius:2px;box-shadow:0 3px 10px 0 rgba(0,0,0,0.26),0 0 3px 0 rgba(0,0,0,0.16)}.settings-header-bar{background:#1ea3e6;color:#fff;font-size:16px;z-index:11}.settings-header-bar .left-bar{display:inline-block;height:100%;padding-left:12px;padding-right:12px;cursor:pointer}.settings-header-bar .left-bar .menu-icon{display:inline-block;padding:11px 5px}.settings-header-bar .left-bar .menu-icon svg path{fill:#fff}.settings-header-bar .left-bar .title{display:inline-block;font-size:15px;margin-top:13px;padding:0 7px}.settings-header-bar .right-bar{position:absolute;top:0;right:12px}.settings-header-bar .right-bar .text-button{display:inline-block;font-size:12px;text-transform:uppercase;height:42px;line-height:42px;padding:0 5px;margin-right:2px;cursor:pointer;background-color:transparent;color:#fff}.settings-header-bar .right-bar .icon-button{display:inline-block;padding:11px 5px;cursor:pointer}.settings-header-bar .right-bar .icon-button:not(:first-child){margin-left:3px}.settings-header-bar .right-bar .icon-button:active::after{display:none}.settings-header-bar .right-bar .icon-button.help::after{content:'Google Groups'}.settings-header-bar .right-bar .icon-button.auto-refresh::after{content:'Refresh options'}.settings-header-bar .right-bar .icon-button.hiluk::after{content:'Share link'}.settings-header-bar .right-bar .icon-button.user::after{content:'User'}.settings-header-bar .right-bar .icon-button.github::after{content:'Pivot on Github'}.settings-header-bar .right-bar .icon-button.settings::after{content:'Settings'}.settings-header-bar .right-bar .icon-button:hover::after{opacity:1}.settings-header-bar .right-bar .icon-button::after{opacity:0;pointer-events:none;position:absolute;display:block;bottom:-24px;right:0;padding:5px;color:#000;font-size:12px;white-space:nowrap}.settings-header-bar .right-bar .icon-button svg path{fill:#fff}.settings-header-bar .right-bar .button-group{display:inline-block;padding-top:6px;margin-left:8px}.settings-header-bar .right-bar .button-group>*:not(:last-child){margin-right:8px}.settings-header-bar .right-bar .button-group .cancel{color:#fff;background-color:rgba(255,255,255,0.28)}.settings-header-bar .right-bar .button-group .cancel:hover{background-color:rgba(255,255,255,0.36)}.settings-header-bar .right-bar .button-group .save{color:#1ea3e6;background-color:#fff}.settings-header-bar .right-bar .button-group .save:hover{background-color:rgba(255,255,255,0.92)}.settings-header-bar svg{height:19px;width:19px}\n", ""]);

	// exports


/***/ },
/* 675 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(676);
	var chronoshift_1 = __webpack_require__(191);
	var React = __webpack_require__(5);
	var form_label_1 = __webpack_require__(429);
	var button_1 = __webpack_require__(314);
	var immutable_input_1 = __webpack_require__(459);
	var labels_1 = __webpack_require__(272);
	var immutable_form_delegate_1 = __webpack_require__(598);
	var General = (function (_super) {
	    __extends(General, _super);
	    function General() {
	        _super.call(this);
	        this.delegate = new immutable_form_delegate_1.ImmutableFormDelegate(this);
	    }
	    General.prototype.componentWillReceiveProps = function (nextProps) {
	        if (nextProps.settings)
	            this.setState({
	                newInstance: nextProps.settings,
	                errors: {}
	            });
	    };
	    General.prototype.save = function () {
	        if (this.props.onSave) {
	            this.props.onSave(this.state.newInstance);
	        }
	    };
	    General.prototype.parseTimezones = function (str) {
	        return str.split(/\s*,\s*/)
	            .map(chronoshift_1.Timezone.fromJS);
	    };
	    General.prototype.render = function () {
	        var _a = this.state, canSave = _a.canSave, newInstance = _a.newInstance, errors = _a.errors;
	        if (!newInstance)
	            return null;
	        var makeLabel = form_label_1.FormLabel.simpleGenerator(labels_1.GENERAL, errors);
	        var makeTextInput = immutable_input_1.ImmutableInput.simpleGenerator(newInstance, this.delegate.onChange);
	        return React.createElement("div", {className: "general"}, 
	            React.createElement("div", {className: "title-bar"}, 
	                React.createElement("div", {className: "title"}, "General"), 
	                canSave ? React.createElement(button_1.Button, {className: "save", title: "Save", type: "primary", onClick: this.save.bind(this)}) : null), 
	            React.createElement("div", {className: "content"}, 
	                React.createElement("form", {className: "vertical"}, 
	                    makeLabel('customization.title'), 
	                    makeTextInput('customization.title', /^.+$/, true), 
	                    makeLabel('customization.timezones'), 
	                    React.createElement(immutable_input_1.ImmutableInput, {instance: newInstance, path: 'customization.timezones', onChange: this.delegate.onChange, valueToString: function (value) { return value ? value.join(', ') : undefined; }, stringToValue: this.parseTimezones.bind(this)}))
	            ));
	    };
	    return General;
	}(React.Component));
	exports.General = General;


/***/ },
/* 676 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(677);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../../node_modules/css-loader/index.js!./general.css", function() {
				var newContent = require("!!./../../../../../node_modules/css-loader/index.js!./general.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 677 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".general{height:100%}\n", ""]);

	// exports


/***/ },
/* 678 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(679);
	var React = __webpack_require__(5);
	var button_1 = __webpack_require__(314);
	var constants_1 = __webpack_require__(292);
	var simple_table_1 = __webpack_require__(570);
	var index_1 = __webpack_require__(293);
	var Clusters = (function (_super) {
	    __extends(Clusters, _super);
	    function Clusters() {
	        _super.call(this);
	        this.state = {};
	    }
	    Clusters.prototype.componentWillReceiveProps = function (nextProps) {
	        if (nextProps.settings)
	            this.setState({
	                newSettings: nextProps.settings
	            });
	    };
	    Clusters.prototype.editCluster = function (cluster) {
	        window.location.hash += "/" + cluster.name;
	    };
	    Clusters.prototype.startSeed = function () {
	        window.location.hash += '/new-cluster';
	    };
	    Clusters.prototype.renderEmpty = function () {
	        return React.createElement("div", {className: "clusters empty"}, 
	            React.createElement("div", {className: "title"}, constants_1.STRINGS.noClusters), 
	            React.createElement("div", {className: "subtitle"}, 
	                "Start by ", 
	                React.createElement("a", {onClick: this.startSeed.bind(this)}, "adding a new cluster")));
	    };
	    Clusters.prototype.removeCluster = function (cluster) {
	        var _this = this;
	        var remove = function () {
	            var settings = _this.state.newSettings;
	            var index = settings.clusters.indexOf(cluster);
	            if (index < 0)
	                return;
	            var newClusters = settings.clusters;
	            newClusters.splice(index, 1);
	            _this.props.onSave(settings.changeClusters(newClusters), 'Cluster removed');
	            index_1.Notifier.removeQuestion();
	        };
	        var cancel = function () {
	            index_1.Notifier.removeQuestion();
	        };
	        index_1.Notifier.ask({
	            title: 'Remove this cluster',
	            message: [
	                ("Are you sure you would like to delete the cluster \"" + cluster.title + "\"?"),
	                'This action is not reversible.'
	            ],
	            choices: [
	                { label: 'Remove', callback: remove, type: 'warn' },
	                { label: 'Cancel', callback: cancel, type: 'secondary' }
	            ],
	            onClose: index_1.Notifier.removeQuestion
	        });
	    };
	    Clusters.prototype.render = function () {
	        var newSettings = this.state.newSettings;
	        if (!newSettings)
	            return null;
	        if (!newSettings.clusters.length)
	            return this.renderEmpty();
	        var columns = [
	            { label: 'Title', field: 'title', width: 200, cellIcon: 'full-cluster' },
	            { label: 'Host', field: 'host', width: 200 },
	            { label: 'Type', field: 'type', width: 300 }
	        ];
	        var actions = [
	            { icon: 'full-edit', callback: this.editCluster.bind(this) },
	            { icon: 'full-remove', callback: this.removeCluster.bind(this) }
	        ];
	        return React.createElement("div", {className: "clusters"}, 
	            React.createElement("div", {className: "title-bar"}, 
	                React.createElement("div", {className: "title"}, "Clusters"), 
	                React.createElement(button_1.Button, {className: "add", title: constants_1.STRINGS.connectNewCluster, type: "primary", onClick: this.startSeed.bind(this)})), 
	            React.createElement("div", {className: "content"}, 
	                React.createElement(simple_table_1.SimpleTable, {columns: columns, rows: newSettings.clusters, actions: actions, onRowClick: this.editCluster.bind(this)})
	            ));
	    };
	    return Clusters;
	}(React.Component));
	exports.Clusters = Clusters;


/***/ },
/* 679 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(680);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../../node_modules/css-loader/index.js!./clusters.css", function() {
				var newContent = require("!!./../../../../../node_modules/css-loader/index.js!./clusters.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 680 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".clusters{height:100%}.clusters.empty{margin-top:280px;text-align:center;font-size:16px;color:#999}.clusters.empty .subtitle{font-size:12px;margin-top:10px}.clusters.empty .subtitle a{color:#1ea3e6;border-bottom:1px dashed;cursor:pointer}\n", ""]);

	// exports


/***/ },
/* 681 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(682);
	var React = __webpack_require__(5);
	var dom_1 = __webpack_require__(300);
	var string_1 = __webpack_require__(402);
	var constants_1 = __webpack_require__(292);
	var form_label_1 = __webpack_require__(429);
	var button_1 = __webpack_require__(314);
	var immutable_input_1 = __webpack_require__(459);
	var immutable_dropdown_1 = __webpack_require__(456);
	var immutable_form_delegate_1 = __webpack_require__(598);
	var index_1 = __webpack_require__(202);
	var labels_1 = __webpack_require__(272);
	var ClusterEdit = (function (_super) {
	    __extends(ClusterEdit, _super);
	    function ClusterEdit() {
	        _super.call(this);
	        this.delegate = new immutable_form_delegate_1.ImmutableFormDelegate(this);
	    }
	    ClusterEdit.prototype.componentWillReceiveProps = function (nextProps) {
	        if (nextProps.cluster) {
	            this.initFromProps(nextProps);
	        }
	    };
	    ClusterEdit.prototype.initFromProps = function (props) {
	        this.setState({
	            newInstance: new index_1.Cluster(props.cluster.valueOf()),
	            canSave: true,
	            errors: {}
	        });
	    };
	    ClusterEdit.prototype.componentDidMount = function () {
	        if (this.props.cluster)
	            this.initFromProps(this.props);
	    };
	    ClusterEdit.prototype.cancel = function () {
	        var _this = this;
	        var isNewCluster = this.props.isNewCluster;
	        if (isNewCluster) {
	            this.props.onCancel();
	            return;
	        }
	        this.setState({ newInstance: undefined }, function () { return _this.initFromProps(_this.props); });
	    };
	    ClusterEdit.prototype.save = function () {
	        if (this.props.onSave)
	            this.props.onSave(this.state.newInstance);
	    };
	    ClusterEdit.prototype.goBack = function () {
	        var cluster = this.props.cluster;
	        var hash = window.location.hash;
	        window.location.hash = hash.replace("/" + cluster.name, '');
	    };
	    ClusterEdit.prototype.renderGeneral = function () {
	        var _a = this.state, newInstance = _a.newInstance, errors = _a.errors;
	        var makeLabel = form_label_1.FormLabel.simpleGenerator(labels_1.CLUSTER, errors);
	        var makeTextInput = immutable_input_1.ImmutableInput.simpleGenerator(newInstance, this.delegate.onChange);
	        var makeDropDownInput = immutable_dropdown_1.ImmutableDropdown.simpleGenerator(newInstance, this.delegate.onChange);
	        var needsAuth = ['mysql', 'postgres'].indexOf(newInstance.type) > -1;
	        return React.createElement("form", {className: "general vertical"}, 
	            makeLabel('title'), 
	            makeTextInput('title', /.*/, true), 
	            makeLabel('host'), 
	            makeTextInput('host', string_1.IP_REGEX), 
	            makeLabel('type'), 
	            makeDropDownInput('type', index_1.Cluster.TYPE_VALUES.map(function (type) { return { value: type, label: type }; })), 
	            makeLabel('timeout'), 
	            makeTextInput('timeout', string_1.NUM_REGEX), 
	            makeLabel('version'), 
	            makeTextInput('version'), 
	            needsAuth ? makeLabel('database') : null, 
	            needsAuth ? makeTextInput('database') : null, 
	            needsAuth ? makeLabel('user') : null, 
	            needsAuth ? makeTextInput('user') : null, 
	            needsAuth ? makeLabel('password') : null, 
	            needsAuth ? makeTextInput('password') : null);
	    };
	    ClusterEdit.prototype.renderButtons = function () {
	        var _a = this.props, cluster = _a.cluster, isNewCluster = _a.isNewCluster;
	        var _b = this.state, canSave = _b.canSave, newInstance = _b.newInstance;
	        var hasChanged = !cluster.equals(newInstance);
	        var cancelButton = React.createElement(button_1.Button, {className: "cancel", title: isNewCluster ? "Cancel" : "Revert changes", type: "secondary", onClick: this.cancel.bind(this)});
	        var saveButton = React.createElement(button_1.Button, {className: dom_1.classNames("save", { disabled: !canSave || (!isNewCluster && !hasChanged) }), title: isNewCluster ? "Connect cluster" : "Save", type: "primary", onClick: this.save.bind(this)});
	        if (!isNewCluster && !hasChanged) {
	            return React.createElement("div", {className: "button-group"}, saveButton);
	        }
	        return React.createElement("div", {className: "button-group"}, 
	            cancelButton, 
	            saveButton);
	    };
	    ClusterEdit.prototype.getTitle = function () {
	        var isNewCluster = this.props.isNewCluster;
	        var newInstance = this.state.newInstance;
	        var lastBit = newInstance.title ? ": " + newInstance.title : '';
	        return (isNewCluster ? constants_1.STRINGS.createCluster : constants_1.STRINGS.editCluster) + lastBit;
	    };
	    ClusterEdit.prototype.render = function () {
	        var isNewCluster = this.props.isNewCluster;
	        var newInstance = this.state.newInstance;
	        if (!newInstance)
	            return null;
	        return React.createElement("div", {className: "cluster-edit"}, 
	            React.createElement("div", {className: "title-bar"}, 
	                isNewCluster
	                    ? null
	                    : React.createElement(button_1.Button, {className: "button back", type: "secondary", svg: __webpack_require__(478), onClick: this.goBack.bind(this)}), 
	                React.createElement("div", {className: "title"}, this.getTitle()), 
	                this.renderButtons()), 
	            React.createElement("div", {className: "content"}, this.renderGeneral()));
	    };
	    return ClusterEdit;
	}(React.Component));
	exports.ClusterEdit = ClusterEdit;


/***/ },
/* 682 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(683);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../../node_modules/css-loader/index.js!./cluster-edit.css", function() {
				var newContent = require("!!./../../../../../node_modules/css-loader/index.js!./cluster-edit.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 683 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".cluster-edit{height:100%}\n", ""]);

	// exports


/***/ },
/* 684 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(685);
	var React = __webpack_require__(5);
	var index_1 = __webpack_require__(293);
	var DataCubes = (function (_super) {
	    __extends(DataCubes, _super);
	    function DataCubes() {
	        _super.call(this);
	        this.state = {};
	    }
	    DataCubes.prototype.componentWillReceiveProps = function (nextProps) {
	        if (nextProps.settings)
	            this.setState({
	                newSettings: nextProps.settings,
	                hasChanged: false
	            });
	    };
	    DataCubes.prototype.editCube = function (cube) {
	        window.location.hash += "/" + cube.name;
	    };
	    DataCubes.prototype.removeCube = function (cube) {
	        var _this = this;
	        var remove = function () {
	            var settings = _this.state.newSettings;
	            var index = settings.dataCubes.indexOf(cube);
	            if (index < 0)
	                return;
	            var newCubes = settings.dataCubes;
	            newCubes.splice(index, 1);
	            _this.props.onSave(settings.changeDataCubes(newCubes), 'Cube removed');
	            index_1.Notifier.removeQuestion();
	        };
	        var cancel = function () {
	            index_1.Notifier.removeQuestion();
	        };
	        index_1.Notifier.ask({
	            title: 'Remove this cube',
	            message: [
	                ("Are you sure you would like to delete the data cube \"" + cube.title + "\"?"),
	                'This action is not reversible.'
	            ],
	            choices: [
	                { label: 'Remove', callback: remove, type: 'warn' },
	                { label: 'Cancel', callback: cancel, type: 'secondary' }
	            ],
	            onClose: index_1.Notifier.removeQuestion
	        });
	    };
	    DataCubes.prototype.startSeed = function () {
	        window.location.hash += '/new-data-cube';
	    };
	    DataCubes.prototype.renderEmpty = function () {
	        return React.createElement("div", {className: "data-cubes empty"}, 
	            React.createElement("div", {className: "title"}, "No data cubes"), 
	            React.createElement("div", {className: "subtitle actionable", onClick: this.startSeed.bind(this)}, "Create a new data cube"));
	    };
	    DataCubes.prototype.render = function () {
	        var newSettings = this.state.newSettings;
	        if (!newSettings)
	            return null;
	        if (!newSettings.dataCubes.length)
	            return this.renderEmpty();
	        var columns = [
	            { label: 'Name', field: 'title', width: 170, cellIcon: 'full-cube' },
	            { label: 'Source', field: 'source', width: 400 },
	            { label: 'Dimensions', field: function (cube) { return cube.dimensions.size; }, width: 120 },
	            { label: 'Measures', field: function (cube) { return cube.measures.size; }, width: 80 }
	        ];
	        var actions = [
	            { icon: 'full-edit', callback: this.editCube.bind(this) },
	            { icon: 'full-remove', callback: this.removeCube.bind(this) }
	        ];
	        return React.createElement("div", {className: "data-cubes"}, 
	            React.createElement("div", {className: "title-bar"}, 
	                React.createElement("div", {className: "title"}, "Data Cubes"), 
	                React.createElement(index_1.Button, {className: "save", title: "Add a cube", type: "primary", onClick: this.startSeed.bind(this)})), 
	            React.createElement("div", {className: "content"}, 
	                React.createElement(index_1.SimpleTable, {columns: columns, rows: newSettings.dataCubes, actions: actions, onRowClick: this.editCube.bind(this)})
	            ));
	    };
	    return DataCubes;
	}(React.Component));
	exports.DataCubes = DataCubes;


/***/ },
/* 685 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(686);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../../node_modules/css-loader/index.js!./data-cubes.css", function() {
				var newContent = require("!!./../../../../../node_modules/css-loader/index.js!./data-cubes.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 686 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".data-cubes{height:100%}.data-cubes.empty{margin-top:280px;text-align:center;font-size:16px;color:#999}.data-cubes.empty .subtitle{font-size:12px;margin-top:10px}.data-cubes.empty .subtitle.actionable{color:#1ea3e6;cursor:pointer}\n", ""]);

	// exports


/***/ },
/* 687 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(688);
	var React = __webpack_require__(5);
	var plywood_1 = __webpack_require__(199);
	var dom_1 = __webpack_require__(300);
	var constants_1 = __webpack_require__(292);
	var string_1 = __webpack_require__(402);
	var chronoshift_1 = __webpack_require__(191);
	var constants_2 = __webpack_require__(292);
	var index_1 = __webpack_require__(293);
	var index_2 = __webpack_require__(288);
	var index_3 = __webpack_require__(202);
	var labels_1 = __webpack_require__(272);
	var immutable_form_delegate_1 = __webpack_require__(598);
	var DataCubeEdit = (function (_super) {
	    __extends(DataCubeEdit, _super);
	    function DataCubeEdit() {
	        _super.call(this);
	        this.tabs = [
	            { label: 'General', value: 'general', render: this.renderGeneral },
	            { label: 'Attributes', value: 'attributes', render: this.renderAttributes },
	            { label: 'Dimensions', value: 'dimensions', render: this.renderDimensions },
	            { label: 'Measures', value: 'measures', render: this.renderMeasures }
	        ];
	        this.delegate = new immutable_form_delegate_1.ImmutableFormDelegate(this);
	    }
	    DataCubeEdit.prototype.componentWillReceiveProps = function (nextProps) {
	        if (nextProps.dataCube) {
	            this.initFromProps(nextProps);
	        }
	    };
	    DataCubeEdit.prototype.componentDidMount = function () {
	        if (this.props.dataCube)
	            this.initFromProps(this.props);
	    };
	    DataCubeEdit.prototype.initFromProps = function (props) {
	        this.setState({
	            newInstance: new index_3.DataCube(props.dataCube.valueOf()),
	            canSave: true,
	            errors: {},
	            tab: props.isNewDataCube ? this.tabs[0] : this.tabs.filter(function (tab) { return tab.value === props.tab; })[0]
	        });
	    };
	    DataCubeEdit.prototype.selectTab = function (tab) {
	        if (this.props.isNewDataCube) {
	            this.setState({ tab: tab });
	        }
	        else {
	            var hash = window.location.hash.split('/');
	            hash.splice(-1);
	            window.location.hash = hash.join('/') + '/' + tab;
	        }
	    };
	    DataCubeEdit.prototype.renderTabs = function (activeTab) {
	        var _this = this;
	        return this.tabs.map(function (tab) {
	            return React.createElement("button", {className: dom_1.classNames({ active: activeTab.value === tab.value }), key: tab.value, onClick: _this.selectTab.bind(_this, tab)}, tab.label);
	        });
	    };
	    DataCubeEdit.prototype.cancel = function () {
	        var _this = this;
	        var isNewDataCube = this.props.isNewDataCube;
	        if (isNewDataCube) {
	            this.props.onCancel();
	            return;
	        }
	        this.setState({ newInstance: undefined }, function () { return _this.initFromProps(_this.props); });
	    };
	    DataCubeEdit.prototype.save = function () {
	        if (this.props.onSave)
	            this.props.onSave(this.state.newInstance);
	    };
	    DataCubeEdit.prototype.goBack = function () {
	        var _a = this.props, dataCube = _a.dataCube, tab = _a.tab;
	        var hash = window.location.hash;
	        window.location.hash = hash.replace("/" + dataCube.name + "/" + tab, '');
	    };
	    DataCubeEdit.prototype.getIntrospectionStrategies = function () {
	        var labels = constants_2.DATA_CUBES_STRATEGIES_LABELS;
	        return [{
	                label: "Default (" + labels[index_3.DataCube.DEFAULT_INTROSPECTION] + ")",
	                value: undefined
	            }].concat(index_3.DataCube.INTROSPECTION_VALUES.map(function (value) {
	            return { value: value, label: labels[value] };
	        }));
	    };
	    DataCubeEdit.prototype.renderGeneral = function () {
	        var clusters = this.props.clusters;
	        var _a = this.state, newInstance = _a.newInstance, errors = _a.errors;
	        var makeLabel = index_1.FormLabel.simpleGenerator(labels_1.DATA_CUBE, errors);
	        var makeTextInput = index_1.ImmutableInput.simpleGenerator(newInstance, this.delegate.onChange);
	        var makeDropDownInput = index_1.ImmutableDropdown.simpleGenerator(newInstance, this.delegate.onChange);
	        var possibleClusters = [
	            { value: 'native', label: 'Load a file and serve it natively' }
	        ].concat(clusters.map(function (cluster) {
	            return { value: cluster.name, label: cluster.name };
	        }));
	        return React.createElement("form", {className: "general vertical"}, 
	            makeLabel('title'), 
	            makeTextInput('title', /.*/, true), 
	            makeLabel('description'), 
	            makeTextInput('description'), 
	            makeLabel('clusterName'), 
	            makeDropDownInput('clusterName', possibleClusters), 
	            makeLabel('source'), 
	            makeTextInput('source'), 
	            makeLabel('defaultTimezone'), 
	            React.createElement(index_1.ImmutableInput, {instance: newInstance, path: 'defaultTimezone', onChange: this.delegate.onChange, valueToString: function (value) { return value ? value.toJS() : undefined; }, stringToValue: function (str) { return str ? chronoshift_1.Timezone.fromJS(str) : undefined; }}));
	    };
	    DataCubeEdit.prototype.renderAttributes = function () {
	        var _a = this.state, newInstance = _a.newInstance, errors = _a.errors;
	        var makeLabel = index_1.FormLabel.simpleGenerator(labels_1.DATA_CUBE, errors);
	        return React.createElement("form", {className: "general vertical"}, 
	            makeLabel('attributeOverrides'), 
	            React.createElement(index_1.ImmutableInput, {instance: newInstance, path: 'attributeOverrides', onChange: this.delegate.onChange, valueToString: function (value) { return value ? JSON.stringify(plywood_1.AttributeInfo.toJSs(value), null, 2) : undefined; }, stringToValue: function (str) { return str ? plywood_1.AttributeInfo.fromJSs(JSON.parse(str)) : undefined; }, type: "textarea"}));
	    };
	    DataCubeEdit.prototype.renderDimensions = function () {
	        var _this = this;
	        var newInstance = this.state.newInstance;
	        var onChange = function (newDimensions) {
	            var newCube = newInstance.changeDimensions(newDimensions);
	            _this.setState({
	                newInstance: newCube
	            });
	        };
	        var getModal = function (item) { return React.createElement(index_2.DimensionModal, {dimension: item}); };
	        var getNewItem = function () { return index_3.Dimension.fromJS({
	            name: string_1.generateUniqueName('d', function (name) { return !newInstance.dimensions.find(function (m) { return m.name === name; }); }),
	            title: 'New dimension'
	        }); };
	        var getRows = function (items) { return items.toArray().map(function (dimension) {
	            return {
	                title: dimension.title,
	                description: dimension.expression.toString(),
	                icon: "dim-" + dimension.kind
	            };
	        }); };
	        var DimensionsList = index_1.ImmutableList.specialize();
	        return React.createElement(DimensionsList, {label: "Dimensions", items: newInstance.dimensions, onChange: onChange.bind(this), getModal: getModal, getNewItem: getNewItem, getRows: getRows});
	    };
	    DataCubeEdit.prototype.renderMeasures = function () {
	        var _this = this;
	        var newInstance = this.state.newInstance;
	        var onChange = function (newMeasures) {
	            var defaultSortMeasure = newInstance.defaultSortMeasure;
	            if (defaultSortMeasure) {
	                if (!newMeasures.find(function (measure) { return measure.name === defaultSortMeasure; })) {
	                    newInstance = newInstance.changeDefaultSortMeasure(newMeasures.get(0).name);
	                }
	            }
	            var newCube = newInstance.changeMeasures(newMeasures);
	            _this.setState({
	                newInstance: newCube
	            });
	        };
	        var getModal = function (item) { return React.createElement(index_2.MeasureModal, {measure: item}); };
	        var getNewItem = function () { return index_3.Measure.fromJS({
	            name: string_1.generateUniqueName('m', function (name) { return !newInstance.measures.find(function (m) { return m.name === name; }); }),
	            title: 'New measure'
	        }); };
	        var getRows = function (items) { return items.toArray().map(function (measure) {
	            return {
	                title: measure.title,
	                description: measure.expression.toString(),
	                icon: "measure"
	            };
	        }); };
	        var MeasuresList = index_1.ImmutableList.specialize();
	        return React.createElement(MeasuresList, {label: "Measures", items: newInstance.measures, onChange: onChange.bind(this), getModal: getModal, getNewItem: getNewItem, getRows: getRows});
	    };
	    DataCubeEdit.prototype.renderButtons = function () {
	        var _a = this.props, dataCube = _a.dataCube, isNewDataCube = _a.isNewDataCube;
	        var _b = this.state, canSave = _b.canSave, newInstance = _b.newInstance;
	        var hasChanged = !dataCube.equals(newInstance);
	        var cancelButton = React.createElement(index_1.Button, {className: "cancel", title: isNewDataCube ? "Cancel" : "Revert changes", type: "secondary", onClick: this.cancel.bind(this)});
	        var saveButton = React.createElement(index_1.Button, {className: dom_1.classNames("save", { disabled: !canSave || (!isNewDataCube && !hasChanged) }), title: isNewDataCube ? "Create cube" : "Save", type: "primary", onClick: this.save.bind(this)});
	        if (!isNewDataCube && !hasChanged) {
	            return React.createElement("div", {className: "button-group"}, saveButton);
	        }
	        return React.createElement("div", {className: "button-group"}, 
	            cancelButton, 
	            saveButton);
	    };
	    DataCubeEdit.prototype.getTitle = function () {
	        var isNewDataCube = this.props.isNewDataCube;
	        var newInstance = this.state.newInstance;
	        var lastBit = newInstance.title ? ": " + newInstance.title : '';
	        return (isNewDataCube ? constants_1.STRINGS.createDataCube : constants_1.STRINGS.editDataCube) + lastBit;
	    };
	    DataCubeEdit.prototype.render = function () {
	        var _a = this.props, dataCube = _a.dataCube, isNewDataCube = _a.isNewDataCube;
	        var _b = this.state, tab = _b.tab, newInstance = _b.newInstance;
	        if (!newInstance || !tab || !dataCube)
	            return null;
	        return React.createElement("div", {className: "data-cube-edit"}, 
	            React.createElement("div", {className: "title-bar"}, 
	                isNewDataCube
	                    ? null
	                    : React.createElement(index_1.Button, {className: "button back", type: "secondary", svg: __webpack_require__(478), onClick: this.goBack.bind(this)}), 
	                React.createElement("div", {className: "title"}, this.getTitle()), 
	                this.renderButtons()), 
	            React.createElement("div", {className: "content"}, 
	                React.createElement("div", {className: "tabs"}, this.renderTabs(tab)), 
	                React.createElement("div", {className: "tab-content"}, tab.render.bind(this)())));
	    };
	    return DataCubeEdit;
	}(React.Component));
	exports.DataCubeEdit = DataCubeEdit;


/***/ },
/* 688 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(689);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../../node_modules/css-loader/index.js!./data-cube-edit.css", function() {
				var newContent = require("!!./../../../../../node_modules/css-loader/index.js!./data-cube-edit.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 689 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".data-cube-edit .content .tabs button,.data-cube-edit .content .tabs .button{color:#000;background-color:transparent;cursor:pointer}.data-cube-edit .content .tabs button:hover,.data-cube-edit .content .tabs .button:hover{background-color:#e3f4fc}.data-cube-edit .content .tabs button.active,.data-cube-edit .content .tabs .active.button{background-color:#c3e7f8}.data-cube-edit{height:100%}.data-cube-edit .content{padding:0}.data-cube-edit .content .tabs{position:absolute;top:0;bottom:0;width:190px;border-right:1px solid #e6e6e6;padding:10px 5px}.data-cube-edit .content .tabs button,.data-cube-edit .content .tabs .button{display:block;width:100%;padding:10px 15px;text-align:left}.data-cube-edit .content .tab-content{position:absolute;top:0;bottom:0;left:190px;right:0}.data-cube-edit .content .tab-content form{width:448px;padding:24px 24px}.data-cube-edit .content .tab-content form textarea{height:calc(100% - 10px);outline:none;font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace;font-size:13px;line-height:16px;padding:6px}\n", ""]);

	// exports


/***/ },
/* 690 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(691);
	var React = __webpack_require__(5);
	var index_1 = __webpack_require__(202);
	var constants_1 = __webpack_require__(292);
	var url_1 = __webpack_require__(286);
	var array_1 = __webpack_require__(605);
	var index_2 = __webpack_require__(293);
	var collection_header_bar_1 = __webpack_require__(693);
	var collection_overview_1 = __webpack_require__(696);
	var collection_tile_lightbox_1 = __webpack_require__(702);
	var CollectionView = (function (_super) {
	    __extends(CollectionView, _super);
	    function CollectionView() {
	        _super.call(this);
	        this.state = {};
	    }
	    CollectionView.prototype.onURLChange = function (crumbs) {
	        var collections = this.props.collections;
	        var collection;
	        if (crumbs.length === 0) {
	            collection = collections[0];
	            url_1.replaceHash("#collection/" + collection.name);
	        }
	        else {
	            collection = collections.filter(function (_a) {
	                var name = _a.name;
	                return name === crumbs[0];
	            })[0];
	        }
	        this.setState({
	            collection: collection,
	            editingOverview: false
	        });
	    };
	    CollectionView.prototype.onTilesReorder = function (oldIndex, newIndex) {
	        var tempCollection = this.state.tempCollection;
	        var tiles = tempCollection.tiles.concat();
	        array_1.move(tiles, oldIndex, newIndex);
	        this.setState({
	            tempCollection: tempCollection.changeTiles(tiles)
	        });
	    };
	    CollectionView.prototype.onTilesDelete = function (collection, tile) {
	        var tempCollection = this.state.tempCollection;
	        this.setState({
	            tempCollection: tempCollection.deleteTile(tile)
	        });
	    };
	    CollectionView.prototype.editCollection = function () {
	        this.setState({
	            editingOverview: true,
	            tempCollection: new index_1.Collection(this.state.collection.valueOf())
	        });
	        this.stickerId = index_2.Notifier.stick(constants_1.STRINGS.dragToReorder);
	    };
	    CollectionView.prototype.onCollectionTitleChange = function (newTitle) {
	        this.setState({
	            tempCollection: this.state.tempCollection.changeTitle(newTitle)
	        });
	    };
	    CollectionView.prototype.saveEdition = function () {
	        var _this = this;
	        index_2.Notifier.removeSticker(this.stickerId);
	        var delegate = this.props.delegate;
	        var tempCollection = this.state.tempCollection;
	        delegate
	            .updateCollection(tempCollection)
	            .then(function () {
	            index_2.Notifier.success('Collection saved');
	            _this.setState({
	                editingOverview: false,
	                tempCollection: null,
	                collection: tempCollection
	            });
	        });
	    };
	    CollectionView.prototype.cancelEdition = function () {
	        index_2.Notifier.removeSticker(this.stickerId);
	        this.setState({
	            editingOverview: false,
	            tempCollection: null
	        });
	    };
	    CollectionView.prototype.render = function () {
	        var _a = this.props, user = _a.user, collections = _a.collections, timekeeper = _a.timekeeper, customization = _a.customization, onNavClick = _a.onNavClick, delegate = _a.delegate, dataCubes = _a.dataCubes;
	        var _b = this.state, collection = _b.collection, tempCollection = _b.tempCollection, editingOverview = _b.editingOverview;
	        var currentCollection = tempCollection || collection;
	        var removeCollection = function () { return delegate.deleteCollection(collection); };
	        return React.createElement("div", {className: "collection-view"}, 
	            React.createElement(collection_header_bar_1.CollectionHeaderBar, {user: user, onNavClick: onNavClick, customization: customization, title: currentCollection ? currentCollection.title : '', dataCubes: dataCubes, collections: collections, onAddItem: delegate ? delegate.createTile.bind(this, collection) : null, onEditCollection: delegate ? this.editCollection.bind(this) : null, onDeleteCollection: delegate ? removeCollection : null, editionMode: editingOverview, onSave: this.saveEdition.bind(this), onCancel: this.cancelEdition.bind(this), onCollectionTitleChange: this.onCollectionTitleChange.bind(this)}), 
	            React.createElement("div", {className: "main-panel"}, 
	                React.createElement(index_2.Router, {onURLChange: this.onURLChange.bind(this), rootFragment: "collection"}, 
	                    React.createElement(index_2.Route, {fragment: ":collectionId", alwaysShowOrphans: true}, 
	                        React.createElement(collection_overview_1.CollectionOverview, {collection: currentCollection, timekeeper: timekeeper, editionMode: editingOverview, onReorder: this.onTilesReorder.bind(this), onDelete: this.onTilesDelete.bind(this)}), 
	                        React.createElement(index_2.Route, {fragment: ":tileId"}, 
	                            React.createElement(collection_tile_lightbox_1.CollectionTileLightbox, {collection: currentCollection, timekeeper: timekeeper, onChange: delegate ? delegate.updateTile : null, onEdit: delegate ? delegate.editTile : null, onDelete: delegate ? delegate.deleteTile : null, onDuplicate: delegate ? delegate.duplicateTile : null})
	                        ))
	                )
	            ));
	    };
	    return CollectionView;
	}(React.Component));
	exports.CollectionView = CollectionView;


/***/ },
/* 691 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(692);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js!./collection-view.css", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js!./collection-view.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 692 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".collection-view{position:absolute;top:0;bottom:0;left:0;right:0}.collection-view .main-panel{position:absolute;top:40px;bottom:0;left:0;right:0;overflow:auto}.collection-view .collection-items{display:-webkit-box;display:-ms-flexbox;display:flex;width:80%;margin:0 auto;-ms-flex-wrap:wrap;flex-wrap:wrap}.collection-view .collection-items .collection-tile-card{-webkit-box-flex:1;-ms-flex:1 0;flex:1 0;-ms-flex-preferred-size:50%;flex-basis:50%}\n", ""]);

	// exports


/***/ },
/* 693 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(694);
	var React = __webpack_require__(5);
	var index_1 = __webpack_require__(202);
	var index_2 = __webpack_require__(293);
	var constants_1 = __webpack_require__(292);
	var CollectionHeaderBar = (function (_super) {
	    __extends(CollectionHeaderBar, _super);
	    function CollectionHeaderBar() {
	        _super.call(this);
	        this.state = {
	            userMenuOpenOn: null,
	            addMenuOpenOn: null,
	            settingsMenuOpenOn: null
	        };
	    }
	    CollectionHeaderBar.prototype.onUserMenuClick = function (e) {
	        var userMenuOpenOn = this.state.userMenuOpenOn;
	        if (userMenuOpenOn)
	            return this.onUserMenuClose();
	        this.setState({
	            userMenuOpenOn: e.target
	        });
	    };
	    CollectionHeaderBar.prototype.onUserMenuClose = function () {
	        this.setState({
	            userMenuOpenOn: null
	        });
	    };
	    CollectionHeaderBar.prototype.renderUserMenu = function () {
	        var _a = this.props, user = _a.user, customization = _a.customization;
	        var userMenuOpenOn = this.state.userMenuOpenOn;
	        if (!userMenuOpenOn)
	            return null;
	        return React.createElement(index_2.UserMenu, {customization: customization, openOn: userMenuOpenOn, onClose: this.onUserMenuClose.bind(this), user: user});
	    };
	    CollectionHeaderBar.prototype.onAddClick = function (e) {
	        var addMenuOpenOn = this.state.addMenuOpenOn;
	        if (addMenuOpenOn)
	            return this.onAddMenuClose();
	        this.setState({
	            addMenuOpenOn: e.target
	        });
	    };
	    CollectionHeaderBar.prototype.onAddMenuClose = function () {
	        this.setState({
	            addMenuOpenOn: null
	        });
	    };
	    CollectionHeaderBar.prototype.onSettingsClick = function (e) {
	        var settingsMenuOpenOn = this.state.settingsMenuOpenOn;
	        if (settingsMenuOpenOn)
	            return this.onSettingsMenuClose();
	        this.setState({
	            settingsMenuOpenOn: e.target
	        });
	    };
	    CollectionHeaderBar.prototype.onSettingsMenuClose = function () {
	        this.setState({
	            settingsMenuOpenOn: null
	        });
	    };
	    CollectionHeaderBar.prototype.goToSettings = function () {
	        window.location.hash = '#settings';
	    };
	    CollectionHeaderBar.prototype.renderSettingsMenu = function () {
	        var user = this.props.user;
	        var settingsMenuOpenOn = this.state.settingsMenuOpenOn;
	        if (!settingsMenuOpenOn)
	            return null;
	        var stage = index_1.Stage.fromSize(200, 200);
	        return React.createElement(index_2.BubbleMenu, {className: "collection-settings-menu", direction: "down", stage: stage, openOn: settingsMenuOpenOn, onClose: this.onSettingsMenuClose.bind(this)}, 
	            React.createElement("ul", {className: "bubble-list"}, 
	                React.createElement("li", {className: "delete", onClick: this.props.onDeleteCollection}, constants_1.STRINGS.deleteCollection), 
	                user && user.allow['settings'] ? React.createElement("li", {className: "general-settings", onClick: this.goToSettings.bind(this)}, constants_1.STRINGS.generalSettings)
	                    : null)
	        );
	    };
	    CollectionHeaderBar.prototype.renderAddMenu = function () {
	        var _this = this;
	        var dataCubes = this.props.dataCubes;
	        var addMenuOpenOn = this.state.addMenuOpenOn;
	        if (!addMenuOpenOn)
	            return null;
	        var stage = index_1.Stage.fromSize(200, 200);
	        var items = dataCubes.map(function (dataCube) {
	            return React.createElement("li", {className: "data-cube", key: dataCube.name, onClick: _this.props.onAddItem.bind(_this, dataCube)}, dataCube.title);
	        });
	        return React.createElement(index_2.BubbleMenu, {className: "add-menu", direction: "down", stage: stage, openOn: addMenuOpenOn, onClose: this.onAddMenuClose.bind(this)}, 
	            React.createElement("div", {className: "bubble-list-title"}, 
	                constants_1.STRINGS.addFromCube, 
	                ":"), 
	            React.createElement("ul", {className: "bubble-list"}, items));
	    };
	    CollectionHeaderBar.prototype.getHeaderStyle = function (customization) {
	        var headerStyle = null;
	        if (customization && customization.headerBackground) {
	            headerStyle = {
	                background: customization.headerBackground
	            };
	        }
	        return headerStyle;
	    };
	    CollectionHeaderBar.prototype.renderEditableBar = function () {
	        var _a = this.props, customization = _a.customization, title = _a.title, onSave = _a.onSave, onCancel = _a.onCancel, onCollectionTitleChange = _a.onCollectionTitleChange;
	        var onTitleChange = function (e) {
	            onCollectionTitleChange(e.target.value);
	        };
	        return React.createElement("header", {className: "collection-header-bar", style: this.getHeaderStyle(customization)}, 
	            React.createElement("div", {className: "left-bar"}, 
	                React.createElement("div", {className: "title"}, 
	                    React.createElement("input", {value: title, onChange: onTitleChange})
	                )
	            ), 
	            React.createElement("div", {className: "right-bar"}, 
	                React.createElement("div", {className: "button-group"}, 
	                    React.createElement(index_2.Button, {className: "cancel", title: "Cancel", type: "secondary", onClick: onCancel}), 
	                    React.createElement(index_2.Button, {className: "save", title: "Save", type: "primary", onClick: onSave}))
	            ));
	    };
	    CollectionHeaderBar.prototype.render = function () {
	        var _a = this.props, user = _a.user, onNavClick = _a.onNavClick, customization = _a.customization, title = _a.title, editionMode = _a.editionMode, onEditCollection = _a.onEditCollection, onAddItem = _a.onAddItem;
	        if (editionMode)
	            return this.renderEditableBar();
	        var userButton = null;
	        if (user) {
	            userButton = React.createElement("div", {className: "icon-button user", onClick: this.onUserMenuClick.bind(this)}, 
	                React.createElement(index_2.SvgIcon, {svg: __webpack_require__(503)})
	            );
	        }
	        return React.createElement("header", {className: "collection-header-bar", style: this.getHeaderStyle(customization)}, 
	            React.createElement("div", {className: "left-bar", onClick: onNavClick}, 
	                React.createElement("div", {className: "menu-icon"}, 
	                    React.createElement(index_2.SvgIcon, {svg: __webpack_require__(507)})
	                ), 
	                React.createElement("div", {className: "title"}, title)), 
	            React.createElement("div", {className: "right-bar"}, 
	                onAddItem ?
	                    React.createElement("div", {className: "icon-button add", onClick: this.onAddClick.bind(this)}, 
	                        React.createElement(index_2.SvgIcon, {svg: __webpack_require__(476)})
	                    )
	                    : null, 
	                onEditCollection ?
	                    React.createElement("div", {className: "icon-button edit", onClick: onEditCollection}, 
	                        React.createElement(index_2.SvgIcon, {svg: __webpack_require__(492)})
	                    )
	                    : null, 
	                React.createElement("div", {className: "icon-button settings", onClick: this.onSettingsClick.bind(this)}, 
	                    React.createElement(index_2.SvgIcon, {svg: __webpack_require__(501)})
	                ), 
	                userButton), 
	            this.renderUserMenu(), 
	            this.renderAddMenu(), 
	            this.renderSettingsMenu());
	    };
	    return CollectionHeaderBar;
	}(React.Component));
	exports.CollectionHeaderBar = CollectionHeaderBar;


/***/ },
/* 694 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(695);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../../node_modules/css-loader/index.js!./collection-header-bar.css", function() {
				var newContent = require("!!./../../../../../node_modules/css-loader/index.js!./collection-header-bar.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 695 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".collection-header-bar .right-bar .icon-button::after{background:#fff;border-radius:2px;box-shadow:0 3px 10px 0 rgba(0,0,0,0.26),0 0 3px 0 rgba(0,0,0,0.16)}.collection-header-bar{background:#1ea3e6;color:#fff;font-size:16px;z-index:11}.collection-header-bar .left-bar{display:inline-block;height:100%;padding-left:12px;padding-right:12px;cursor:pointer}.collection-header-bar .left-bar .menu-icon{display:inline-block;padding:11px 5px}.collection-header-bar .left-bar .menu-icon svg path{fill:#fff}.collection-header-bar .left-bar .title{display:inline-block;font-size:15px;margin-top:13px;padding:0 7px}.collection-header-bar .right-bar{position:absolute;top:0;right:12px}.collection-header-bar .right-bar .text-button{display:inline-block;font-size:12px;text-transform:uppercase;height:42px;line-height:42px;padding:0 5px;margin-right:2px;cursor:pointer;background-color:transparent;color:#fff}.collection-header-bar .right-bar .icon-button{display:inline-block;padding:11px 5px;cursor:pointer}.collection-header-bar .right-bar .icon-button:not(:first-child){margin-left:3px}.collection-header-bar .right-bar .icon-button:active::after{display:none}.collection-header-bar .right-bar .icon-button.help::after{content:'Google Groups'}.collection-header-bar .right-bar .icon-button.auto-refresh::after{content:'Refresh options'}.collection-header-bar .right-bar .icon-button.hiluk::after{content:'Share link'}.collection-header-bar .right-bar .icon-button.user::after{content:'User'}.collection-header-bar .right-bar .icon-button.github::after{content:'Pivot on Github'}.collection-header-bar .right-bar .icon-button.settings::after{content:'Settings'}.collection-header-bar .right-bar .icon-button:hover::after{opacity:1}.collection-header-bar .right-bar .icon-button::after{opacity:0;pointer-events:none;position:absolute;display:block;bottom:-24px;right:0;padding:5px;color:#000;font-size:12px;white-space:nowrap}.collection-header-bar .right-bar .icon-button svg path{fill:#fff}.collection-header-bar .right-bar .button-group{display:inline-block;padding-top:6px;margin-left:8px}.collection-header-bar .right-bar .button-group>*:not(:last-child){margin-right:8px}.collection-header-bar .right-bar .button-group .cancel{color:#fff;background-color:rgba(255,255,255,0.28)}.collection-header-bar .right-bar .button-group .cancel:hover{background-color:rgba(255,255,255,0.36)}.collection-header-bar .right-bar .button-group .save{color:#1ea3e6;background-color:#fff}.collection-header-bar .right-bar .button-group .save:hover{background-color:rgba(255,255,255,0.92)}.collection-header-bar svg{height:19px;width:19px}.collection-header-bar{height:41px}.collection-header-bar .title>input{color:#fff;border:1px solid rgba(255,255,255,0.5);background:rgba(255,255,255,0.2);border-radius:2px;margin-top:-8px;padding:4px 6px;cursor:text;width:300px;font-size:15px}.collection-header-bar .title>input::-moz-selection{background:#1584bc}.collection-header-bar .title>input::selection{background:#1584bc}\n", ""]);

	// exports


/***/ },
/* 696 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(697);
	var React = __webpack_require__(5);
	var index_1 = __webpack_require__(293);
	var collection_tile_card_1 = __webpack_require__(699);
	var dom_1 = __webpack_require__(300);
	var CollectionOverview = (function (_super) {
	    __extends(CollectionOverview, _super);
	    function CollectionOverview() {
	        _super.call(this);
	        this.state = {
	            dropIndex: -1
	        };
	    }
	    CollectionOverview.prototype.onExpand = function (tile) {
	        window.location.hash = "#collection/" + this.props.collection.name + "/" + tile.name;
	    };
	    CollectionOverview.prototype.dragStart = function (tile, e) {
	        this.setState({ draggedTile: tile });
	        var dataTransfer = e.dataTransfer;
	        dataTransfer.effectAllowed = 'move';
	        dataTransfer.setData("text/html", tile.title);
	        dom_1.setDragGhost(dataTransfer, tile.title);
	    };
	    CollectionOverview.prototype.shouldDropAfter = function (e) {
	        var targetRect = e.currentTarget.getBoundingClientRect();
	        return dom_1.getXFromEvent(e) - targetRect.left >= targetRect.width / 2;
	    };
	    CollectionOverview.prototype.dragOver = function (tile, e) {
	        e.preventDefault();
	        var collection = this.props.collection;
	        var _a = this.state, draggedTile = _a.draggedTile, dropIndex = _a.dropIndex, dropAfter = _a.dropAfter;
	        var tiles = collection.tiles;
	        if (dropIndex === -1 && tile === draggedTile)
	            return;
	        var sourceIndex = tiles.indexOf(draggedTile);
	        var targetIndex = tiles.indexOf(tile);
	        var newDropIndex = targetIndex;
	        var shouldDropAfter = this.shouldDropAfter(e);
	        if (newDropIndex === sourceIndex) {
	            newDropIndex = -1;
	        }
	        if (newDropIndex === sourceIndex + 1 && !shouldDropAfter) {
	            newDropIndex = -1;
	        }
	        if (newDropIndex === sourceIndex - 1 && shouldDropAfter) {
	            newDropIndex = -1;
	        }
	        if (newDropIndex !== dropIndex || shouldDropAfter !== dropAfter) {
	            this.setState({
	                dropIndex: newDropIndex,
	                dropAfter: shouldDropAfter
	            });
	        }
	    };
	    CollectionOverview.prototype.dragEnd = function (e) {
	        var _a = this.props, onReorder = _a.onReorder, collection = _a.collection;
	        var _b = this.state, draggedTile = _b.draggedTile, dropIndex = _b.dropIndex, dropAfter = _b.dropAfter;
	        dropIndex = dropAfter || dropIndex === 0 ? dropIndex : dropIndex - 1;
	        if (dropIndex > -1)
	            onReorder(collection.tiles.indexOf(draggedTile), dropIndex);
	        this.setState({
	            draggedTile: undefined,
	            dropIndex: -1,
	            dropAfter: undefined
	        });
	    };
	    CollectionOverview.prototype.renderTile = function (tile, i) {
	        var _a = this.props, timekeeper = _a.timekeeper, editionMode = _a.editionMode, onDelete = _a.onDelete, collection = _a.collection;
	        var _b = this.state, draggedTile = _b.draggedTile, dropIndex = _b.dropIndex, dropAfter = _b.dropAfter;
	        var onDeleteClick = function (tile) { return onDelete(collection, tile); };
	        var classes = dom_1.classNames({
	            dragged: draggedTile === tile,
	            'drop-before': dropIndex === i && !dropAfter,
	            'drop-after': dropIndex === i && dropAfter
	        });
	        return React.createElement(collection_tile_card_1.CollectionTileCard, {className: classes, tile: tile, timekeeper: timekeeper, key: tile.name, onExpand: this.onExpand.bind(this), onDragOver: this.dragOver.bind(this, tile), draggable: editionMode, onDragStart: this.dragStart.bind(this, tile), onDelete: onDeleteClick, editionMode: editionMode});
	    };
	    CollectionOverview.prototype.renderEmpty = function () {
	        return React.createElement("div", {className: "collection-overview empty"}, 
	            React.createElement("div", {className: "container"}, 
	                React.createElement(index_1.SvgIcon, {svg: __webpack_require__(489)}), 
	                React.createElement("div", {className: "placeholder"}, "There are no views in this collection"))
	        );
	    };
	    CollectionOverview.prototype.render = function () {
	        var collection = this.props.collection;
	        if (!collection)
	            return null;
	        if (!collection.tiles.length)
	            return this.renderEmpty();
	        return React.createElement("div", {className: "collection-overview", onDragEnd: this.dragEnd.bind(this)}, 
	            collection.tiles.map(this.renderTile, this), 
	            React.createElement("div", {className: "collection-tile-card empty"}));
	    };
	    return CollectionOverview;
	}(React.Component));
	exports.CollectionOverview = CollectionOverview;


/***/ },
/* 697 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(698);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../../node_modules/css-loader/index.js!./collection-overview.css", function() {
				var newContent = require("!!./../../../../../node_modules/css-loader/index.js!./collection-overview.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 698 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".collection-overview{width:80%;margin-left:auto;margin-right:auto;padding-top:50px;padding-bottom:40px}.collection-overview .collection-tile-card{display:inline-block;width:33.3333333333%;padding:10px}.collection-overview .collection-tile-card .content{height:12vw}.collection-overview.empty{height:100%;color:#bababa;text-align:center}.collection-overview.empty .container{position:absolute;left:50%;top:50%;-webkit-transform:translate(-50%, -50%);-ms-transform:translate(-50%, -50%);transform:translate(-50%, -50%)}.collection-overview.empty .container .svg-icon{width:60px}.collection-overview.empty .container .svg-icon path{fill:#bababa}.collection-overview.empty .container .placeholder{font-size:16px;font-style:italic;margin-top:14px}@media all and (max-width: 1800px){.collection-overview .collection-tile-card{width:50%}.collection-overview .collection-tile-card .content{height:20vw}}@media all and (max-width: 1080px){.collection-overview{width:86%}.collection-overview .collection-tile-card{padding:8px}.collection-overview .collection-tile-card .content{height:24vw}}@media all and (max-width: 900px){.collection-overview{width:80%}.collection-overview .collection-tile-card{width:100%}.collection-overview .collection-tile-card .content{height:40vw}}@media all and (max-width: 700px){.collection-overview{width:86%}.collection-overview .collection-tile-card{width:100%}}\n", ""]);

	// exports


/***/ },
/* 699 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(700);
	var React = __webpack_require__(5);
	var ReactDOM = __webpack_require__(39);
	var index_1 = __webpack_require__(293);
	var dom_1 = __webpack_require__(300);
	var index_2 = __webpack_require__(202);
	var index_3 = __webpack_require__(637);
	var CollectionTileCard = (function (_super) {
	    __extends(CollectionTileCard, _super);
	    function CollectionTileCard() {
	        _super.call(this);
	        this.state = {};
	    }
	    CollectionTileCard.prototype.componentDidMount = function () {
	        this.updateVisualizationStage();
	    };
	    CollectionTileCard.prototype.updateVisualizationStage = function () {
	        var visualization = this.refs.visualization;
	        var visualizationDOM = ReactDOM.findDOMNode(visualization);
	        if (!visualizationDOM)
	            return;
	        this.setState({
	            deviceSize: index_2.Device.getSize(),
	            visualizationStage: index_2.Stage.fromClientRect(visualizationDOM.getBoundingClientRect())
	        });
	    };
	    CollectionTileCard.prototype.expand = function () {
	        var _a = this.props, onExpand = _a.onExpand, tile = _a.tile;
	        if (!onExpand)
	            return;
	        onExpand(tile);
	    };
	    CollectionTileCard.prototype.remove = function () {
	        var _a = this.props, onDelete = _a.onDelete, tile = _a.tile;
	        if (!onDelete)
	            return;
	        onDelete(tile);
	    };
	    CollectionTileCard.prototype.render = function () {
	        var _this = this;
	        var _a = this.props, tile = _a.tile, timekeeper = _a.timekeeper, onDragOver = _a.onDragOver, draggable = _a.draggable, onDragStart = _a.onDragStart, editionMode = _a.editionMode, className = _a.className;
	        var _b = this.state, visualizationStage = _b.visualizationStage, deviceSize = _b.deviceSize;
	        if (!tile)
	            return null;
	        var essence = tile.essence;
	        var visElement = null;
	        if (essence.visResolve.isReady() && visualizationStage) {
	            if (essence.getEffectiveMultiMeasureMode()) {
	                essence = essence.toggleMultiMeasureMode();
	            }
	            var visProps = {
	                clicker: {},
	                essence: essence,
	                timekeeper: timekeeper,
	                stage: visualizationStage,
	                deviceSize: deviceSize,
	                isThumbnail: true
	            };
	            visElement = React.createElement(index_3.getVisualizationComponent(essence.visualization), visProps);
	        }
	        var onExpandClick = function () {
	            if (editionMode)
	                return;
	            _this.expand();
	        };
	        return React.createElement("div", {className: dom_1.classNames("collection-tile-card", { editing: editionMode }, className), onDragOver: onDragOver, draggable: draggable, onDragStart: onDragStart}, 
	            React.createElement(index_1.GlobalEventListener, {resize: this.updateVisualizationStage.bind(this)}), 
	            React.createElement("div", {className: "headband grid-row", onClick: onExpandClick}, 
	                React.createElement("div", {className: "grid-col-80 vertical"}, 
	                    React.createElement("div", {className: "title"}, tile.title), 
	                    React.createElement("div", {className: "description"}, tile.description)), 
	                React.createElement("div", {className: "grid-col-20 middle right"}, editionMode ?
	                    React.createElement("div", {className: "delete-button", onClick: this.remove.bind(this)}, 
	                        React.createElement(index_1.SvgIcon, {svg: __webpack_require__(491)})
	                    )
	                    :
	                        React.createElement("div", {className: "expand-button"}, 
	                            React.createElement(index_1.SvgIcon, {svg: __webpack_require__(494)})
	                        ))), 
	            React.createElement("div", {className: "content", ref: "visualization"}, visElement));
	    };
	    return CollectionTileCard;
	}(React.Component));
	exports.CollectionTileCard = CollectionTileCard;


/***/ },
/* 700 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(701);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../../node_modules/css-loader/index.js!./collection-tile-card.css", function() {
				var newContent = require("!!./../../../../../node_modules/css-loader/index.js!./collection-tile-card.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 701 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".collection-tile-card>*{background:#fff;box-shadow:0 1px 1px 0 rgba(0,0,0,0.1)}.collection-tile-card .grid-row{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-ms-flex-negative:0;flex-shrink:0}.collection-tile-card .grid-row .grid-col-0{-webkit-box-flex:1;-ms-flex:1;flex:1;-webkit-box-flex:0;-ms-flex-positive:0;flex-grow:0;-ms-flex-negative:0;flex-shrink:0;box-sizing:border-box;position:relative;-ms-flex-preferred-size:0%;flex-basis:0%;overflow:hidden}.collection-tile-card .grid-row .grid-col-0.enable-overflow{overflow:initial}.collection-tile-card .grid-row .grid-col-0:not(.vertical)>*:not(.grid-row){display:inline-block;vertical-align:top}.collection-tile-card .grid-row .grid-col-0.vertical>*:not(.grid-row){text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.collection-tile-card .grid-row .grid-col-0.left{text-align:left}.collection-tile-card .grid-row .grid-col-0.right{text-align:right}.collection-tile-card .grid-row .grid-col-0.center{text-align:center}.collection-tile-card .grid-row .grid-col-0.middle{-ms-flex-item-align:center;align-self:center}.collection-tile-card .grid-row .grid-col-0.top{-ms-flex-item-align:start;align-self:flex-start}.collection-tile-card .grid-row .grid-col-0.bottom{-ms-flex-item-align:end;align-self:flex-end}.collection-tile-card .grid-row .grid-col-0.stretch{-ms-flex-item-align:stretch;align-self:stretch}.collection-tile-card .grid-row .grid-col-10{-webkit-box-flex:1;-ms-flex:1;flex:1;-webkit-box-flex:0;-ms-flex-positive:0;flex-grow:0;-ms-flex-negative:0;flex-shrink:0;box-sizing:border-box;position:relative;-ms-flex-preferred-size:10%;flex-basis:10%;overflow:hidden}.collection-tile-card .grid-row .grid-col-10.enable-overflow{overflow:initial}.collection-tile-card .grid-row .grid-col-10:not(.vertical)>*:not(.grid-row){display:inline-block;vertical-align:top}.collection-tile-card .grid-row .grid-col-10.vertical>*:not(.grid-row){text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.collection-tile-card .grid-row .grid-col-10.left{text-align:left}.collection-tile-card .grid-row .grid-col-10.right{text-align:right}.collection-tile-card .grid-row .grid-col-10.center{text-align:center}.collection-tile-card .grid-row .grid-col-10.middle{-ms-flex-item-align:center;align-self:center}.collection-tile-card .grid-row .grid-col-10.top{-ms-flex-item-align:start;align-self:flex-start}.collection-tile-card .grid-row .grid-col-10.bottom{-ms-flex-item-align:end;align-self:flex-end}.collection-tile-card .grid-row .grid-col-10.stretch{-ms-flex-item-align:stretch;align-self:stretch}.collection-tile-card .grid-row .grid-col-20{-webkit-box-flex:1;-ms-flex:1;flex:1;-webkit-box-flex:0;-ms-flex-positive:0;flex-grow:0;-ms-flex-negative:0;flex-shrink:0;box-sizing:border-box;position:relative;-ms-flex-preferred-size:20%;flex-basis:20%;overflow:hidden}.collection-tile-card .grid-row .grid-col-20.enable-overflow{overflow:initial}.collection-tile-card .grid-row .grid-col-20:not(.vertical)>*:not(.grid-row){display:inline-block;vertical-align:top}.collection-tile-card .grid-row .grid-col-20.vertical>*:not(.grid-row){text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.collection-tile-card .grid-row .grid-col-20.left{text-align:left}.collection-tile-card .grid-row .grid-col-20.right{text-align:right}.collection-tile-card .grid-row .grid-col-20.center{text-align:center}.collection-tile-card .grid-row .grid-col-20.middle{-ms-flex-item-align:center;align-self:center}.collection-tile-card .grid-row .grid-col-20.top{-ms-flex-item-align:start;align-self:flex-start}.collection-tile-card .grid-row .grid-col-20.bottom{-ms-flex-item-align:end;align-self:flex-end}.collection-tile-card .grid-row .grid-col-20.stretch{-ms-flex-item-align:stretch;align-self:stretch}.collection-tile-card .grid-row .grid-col-30{-webkit-box-flex:1;-ms-flex:1;flex:1;-webkit-box-flex:0;-ms-flex-positive:0;flex-grow:0;-ms-flex-negative:0;flex-shrink:0;box-sizing:border-box;position:relative;-ms-flex-preferred-size:30%;flex-basis:30%;overflow:hidden}.collection-tile-card .grid-row .grid-col-30.enable-overflow{overflow:initial}.collection-tile-card .grid-row .grid-col-30:not(.vertical)>*:not(.grid-row){display:inline-block;vertical-align:top}.collection-tile-card .grid-row .grid-col-30.vertical>*:not(.grid-row){text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.collection-tile-card .grid-row .grid-col-30.left{text-align:left}.collection-tile-card .grid-row .grid-col-30.right{text-align:right}.collection-tile-card .grid-row .grid-col-30.center{text-align:center}.collection-tile-card .grid-row .grid-col-30.middle{-ms-flex-item-align:center;align-self:center}.collection-tile-card .grid-row .grid-col-30.top{-ms-flex-item-align:start;align-self:flex-start}.collection-tile-card .grid-row .grid-col-30.bottom{-ms-flex-item-align:end;align-self:flex-end}.collection-tile-card .grid-row .grid-col-30.stretch{-ms-flex-item-align:stretch;align-self:stretch}.collection-tile-card .grid-row .grid-col-40{-webkit-box-flex:1;-ms-flex:1;flex:1;-webkit-box-flex:0;-ms-flex-positive:0;flex-grow:0;-ms-flex-negative:0;flex-shrink:0;box-sizing:border-box;position:relative;-ms-flex-preferred-size:40%;flex-basis:40%;overflow:hidden}.collection-tile-card .grid-row .grid-col-40.enable-overflow{overflow:initial}.collection-tile-card .grid-row .grid-col-40:not(.vertical)>*:not(.grid-row){display:inline-block;vertical-align:top}.collection-tile-card .grid-row .grid-col-40.vertical>*:not(.grid-row){text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.collection-tile-card .grid-row .grid-col-40.left{text-align:left}.collection-tile-card .grid-row .grid-col-40.right{text-align:right}.collection-tile-card .grid-row .grid-col-40.center{text-align:center}.collection-tile-card .grid-row .grid-col-40.middle{-ms-flex-item-align:center;align-self:center}.collection-tile-card .grid-row .grid-col-40.top{-ms-flex-item-align:start;align-self:flex-start}.collection-tile-card .grid-row .grid-col-40.bottom{-ms-flex-item-align:end;align-self:flex-end}.collection-tile-card .grid-row .grid-col-40.stretch{-ms-flex-item-align:stretch;align-self:stretch}.collection-tile-card .grid-row .grid-col-50{-webkit-box-flex:1;-ms-flex:1;flex:1;-webkit-box-flex:0;-ms-flex-positive:0;flex-grow:0;-ms-flex-negative:0;flex-shrink:0;box-sizing:border-box;position:relative;-ms-flex-preferred-size:50%;flex-basis:50%;overflow:hidden}.collection-tile-card .grid-row .grid-col-50.enable-overflow{overflow:initial}.collection-tile-card .grid-row .grid-col-50:not(.vertical)>*:not(.grid-row){display:inline-block;vertical-align:top}.collection-tile-card .grid-row .grid-col-50.vertical>*:not(.grid-row){text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.collection-tile-card .grid-row .grid-col-50.left{text-align:left}.collection-tile-card .grid-row .grid-col-50.right{text-align:right}.collection-tile-card .grid-row .grid-col-50.center{text-align:center}.collection-tile-card .grid-row .grid-col-50.middle{-ms-flex-item-align:center;align-self:center}.collection-tile-card .grid-row .grid-col-50.top{-ms-flex-item-align:start;align-self:flex-start}.collection-tile-card .grid-row .grid-col-50.bottom{-ms-flex-item-align:end;align-self:flex-end}.collection-tile-card .grid-row .grid-col-50.stretch{-ms-flex-item-align:stretch;align-self:stretch}.collection-tile-card .grid-row .grid-col-60{-webkit-box-flex:1;-ms-flex:1;flex:1;-webkit-box-flex:0;-ms-flex-positive:0;flex-grow:0;-ms-flex-negative:0;flex-shrink:0;box-sizing:border-box;position:relative;-ms-flex-preferred-size:60%;flex-basis:60%;overflow:hidden}.collection-tile-card .grid-row .grid-col-60.enable-overflow{overflow:initial}.collection-tile-card .grid-row .grid-col-60:not(.vertical)>*:not(.grid-row){display:inline-block;vertical-align:top}.collection-tile-card .grid-row .grid-col-60.vertical>*:not(.grid-row){text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.collection-tile-card .grid-row .grid-col-60.left{text-align:left}.collection-tile-card .grid-row .grid-col-60.right{text-align:right}.collection-tile-card .grid-row .grid-col-60.center{text-align:center}.collection-tile-card .grid-row .grid-col-60.middle{-ms-flex-item-align:center;align-self:center}.collection-tile-card .grid-row .grid-col-60.top{-ms-flex-item-align:start;align-self:flex-start}.collection-tile-card .grid-row .grid-col-60.bottom{-ms-flex-item-align:end;align-self:flex-end}.collection-tile-card .grid-row .grid-col-60.stretch{-ms-flex-item-align:stretch;align-self:stretch}.collection-tile-card .grid-row .grid-col-70{-webkit-box-flex:1;-ms-flex:1;flex:1;-webkit-box-flex:0;-ms-flex-positive:0;flex-grow:0;-ms-flex-negative:0;flex-shrink:0;box-sizing:border-box;position:relative;-ms-flex-preferred-size:70%;flex-basis:70%;overflow:hidden}.collection-tile-card .grid-row .grid-col-70.enable-overflow{overflow:initial}.collection-tile-card .grid-row .grid-col-70:not(.vertical)>*:not(.grid-row){display:inline-block;vertical-align:top}.collection-tile-card .grid-row .grid-col-70.vertical>*:not(.grid-row){text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.collection-tile-card .grid-row .grid-col-70.left{text-align:left}.collection-tile-card .grid-row .grid-col-70.right{text-align:right}.collection-tile-card .grid-row .grid-col-70.center{text-align:center}.collection-tile-card .grid-row .grid-col-70.middle{-ms-flex-item-align:center;align-self:center}.collection-tile-card .grid-row .grid-col-70.top{-ms-flex-item-align:start;align-self:flex-start}.collection-tile-card .grid-row .grid-col-70.bottom{-ms-flex-item-align:end;align-self:flex-end}.collection-tile-card .grid-row .grid-col-70.stretch{-ms-flex-item-align:stretch;align-self:stretch}.collection-tile-card .grid-row .grid-col-80{-webkit-box-flex:1;-ms-flex:1;flex:1;-webkit-box-flex:0;-ms-flex-positive:0;flex-grow:0;-ms-flex-negative:0;flex-shrink:0;box-sizing:border-box;position:relative;-ms-flex-preferred-size:80%;flex-basis:80%;overflow:hidden}.collection-tile-card .grid-row .grid-col-80.enable-overflow{overflow:initial}.collection-tile-card .grid-row .grid-col-80:not(.vertical)>*:not(.grid-row){display:inline-block;vertical-align:top}.collection-tile-card .grid-row .grid-col-80.vertical>*:not(.grid-row){text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.collection-tile-card .grid-row .grid-col-80.left{text-align:left}.collection-tile-card .grid-row .grid-col-80.right{text-align:right}.collection-tile-card .grid-row .grid-col-80.center{text-align:center}.collection-tile-card .grid-row .grid-col-80.middle{-ms-flex-item-align:center;align-self:center}.collection-tile-card .grid-row .grid-col-80.top{-ms-flex-item-align:start;align-self:flex-start}.collection-tile-card .grid-row .grid-col-80.bottom{-ms-flex-item-align:end;align-self:flex-end}.collection-tile-card .grid-row .grid-col-80.stretch{-ms-flex-item-align:stretch;align-self:stretch}.collection-tile-card .grid-row .grid-col-90{-webkit-box-flex:1;-ms-flex:1;flex:1;-webkit-box-flex:0;-ms-flex-positive:0;flex-grow:0;-ms-flex-negative:0;flex-shrink:0;box-sizing:border-box;position:relative;-ms-flex-preferred-size:90%;flex-basis:90%;overflow:hidden}.collection-tile-card .grid-row .grid-col-90.enable-overflow{overflow:initial}.collection-tile-card .grid-row .grid-col-90:not(.vertical)>*:not(.grid-row){display:inline-block;vertical-align:top}.collection-tile-card .grid-row .grid-col-90.vertical>*:not(.grid-row){text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.collection-tile-card .grid-row .grid-col-90.left{text-align:left}.collection-tile-card .grid-row .grid-col-90.right{text-align:right}.collection-tile-card .grid-row .grid-col-90.center{text-align:center}.collection-tile-card .grid-row .grid-col-90.middle{-ms-flex-item-align:center;align-self:center}.collection-tile-card .grid-row .grid-col-90.top{-ms-flex-item-align:start;align-self:flex-start}.collection-tile-card .grid-row .grid-col-90.bottom{-ms-flex-item-align:end;align-self:flex-end}.collection-tile-card .grid-row .grid-col-90.stretch{-ms-flex-item-align:stretch;align-self:stretch}.collection-tile-card .grid-row .grid-col-100{-webkit-box-flex:1;-ms-flex:1;flex:1;-webkit-box-flex:0;-ms-flex-positive:0;flex-grow:0;-ms-flex-negative:0;flex-shrink:0;box-sizing:border-box;position:relative;-ms-flex-preferred-size:100%;flex-basis:100%;overflow:hidden}.collection-tile-card .grid-row .grid-col-100.enable-overflow{overflow:initial}.collection-tile-card .grid-row .grid-col-100:not(.vertical)>*:not(.grid-row){display:inline-block;vertical-align:top}.collection-tile-card .grid-row .grid-col-100.vertical>*:not(.grid-row){text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.collection-tile-card .grid-row .grid-col-100.left{text-align:left}.collection-tile-card .grid-row .grid-col-100.right{text-align:right}.collection-tile-card .grid-row .grid-col-100.center{text-align:center}.collection-tile-card .grid-row .grid-col-100.middle{-ms-flex-item-align:center;align-self:center}.collection-tile-card .grid-row .grid-col-100.top{-ms-flex-item-align:start;align-self:flex-start}.collection-tile-card .grid-row .grid-col-100.bottom{-ms-flex-item-align:end;align-self:flex-end}.collection-tile-card .grid-row .grid-col-100.stretch{-ms-flex-item-align:stretch;align-self:stretch}.collection-tile-card.editing .headband{cursor:default}.collection-tile-card.editing .content{pointer-events:none}.collection-tile-card.dragged{opacity:0.4}.collection-tile-card.drop-before::after{content:'';position:absolute;top:25px;bottom:25px;left:-2px;width:2px;border-right:2px dashed #1ea3e6}.collection-tile-card.drop-after::after{content:'';position:absolute;top:25px;bottom:25px;right:-2px;width:2px;border-right:2px dashed #1ea3e6}.collection-tile-card>*{width:100%;padding:10px 20px 10px 18px}.collection-tile-card .headband{height:66px;border-bottom:1px solid #e6e6e6;border-radius:2px 2px 0 0;cursor:pointer}.collection-tile-card .headband .title{color:#444;font-size:14px;margin-bottom:5px;margin-top:2px;height:18px}.collection-tile-card .headband .description{color:#bababa;font-size:12px;height:15px}.collection-tile-card .headband .expand-button{cursor:pointer;width:19px}.collection-tile-card .headband .expand-button path{fill:#bababa}.collection-tile-card .headband:hover .expand-button path{fill:#666}.collection-tile-card .headband .delete-button{cursor:pointer;width:19px}.collection-tile-card .headband .delete-button path{fill:#1ea3e6}.collection-tile-card .headband .delete-button:hover path{fill:#e24c4c}.collection-tile-card .content{border-radius:0 0 2px 2px}.collection-tile-card .content .glass{position:absolute;top:0;bottom:0;left:0;right:0;background-color:rgba(179,179,179,0.5);cursor:move}.collection-tile-card .content .glass .title{position:absolute;left:50%;top:50%;-webkit-transform:translate(-50%, -50%);-ms-transform:translate(-50%, -50%);transform:translate(-50%, -50%);font-size:23px;color:#232729}\n", ""]);

	// exports


/***/ },
/* 702 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	__webpack_require__(703);
	var React = __webpack_require__(5);
	var ReactDOM = __webpack_require__(39);
	var constants_1 = __webpack_require__(292);
	var dom_1 = __webpack_require__(300);
	var index_1 = __webpack_require__(293);
	var index_2 = __webpack_require__(202);
	var index_3 = __webpack_require__(637);
	var CollectionTileLightbox = (function (_super) {
	    __extends(CollectionTileLightbox, _super);
	    function CollectionTileLightbox() {
	        _super.call(this);
	        this.state = {};
	    }
	    CollectionTileLightbox.prototype.componentWillReceiveProps = function (nextProps) {
	        var collection = nextProps.collection, tileId = nextProps.tileId;
	        if (collection) {
	            var tile = collection.tiles.filter(function (_a) {
	                var name = _a.name;
	                return tileId === name;
	            })[0];
	            this.setState({
	                tile: tile
	            });
	        }
	    };
	    CollectionTileLightbox.prototype.updateStage = function () {
	        var visualization = this.refs.visualization;
	        var visualizationDOM = ReactDOM.findDOMNode(visualization);
	        if (!visualizationDOM)
	            return;
	        this.setState({
	            visualizationStage: index_2.Stage.fromClientRect(visualizationDOM.getBoundingClientRect())
	        });
	    };
	    CollectionTileLightbox.prototype.onExplore = function () {
	        var essence = this.state.tile.essence;
	        window.location.hash = '#' + essence.getURL(essence.dataCube.name + '/');
	    };
	    CollectionTileLightbox.prototype.onEditIconClick = function () {
	        this.setState({
	            editMenuOpen: !this.state.editMenuOpen,
	            moreMenuOpen: false
	        });
	    };
	    CollectionTileLightbox.prototype.onMoreIconClick = function () {
	        this.setState({
	            moreMenuOpen: !this.state.moreMenuOpen,
	            editMenuOpen: false
	        });
	    };
	    CollectionTileLightbox.prototype.closeModal = function () {
	        window.location.hash = "#collection/" + this.props.collection.name;
	    };
	    CollectionTileLightbox.prototype.onEscape = function () {
	        if (this.state.editionMode) {
	            this.setState({
	                editionMode: false,
	                tempTile: null
	            });
	            return;
	        }
	        if (this.state.editMenuOpen)
	            return;
	        this.closeModal();
	    };
	    CollectionTileLightbox.prototype.editTitleAndDesc = function () {
	        this.setState({
	            editMenuOpen: false,
	            editionMode: true,
	            tempTile: new index_2.CollectionTile(this.state.tile.valueOf())
	        });
	    };
	    CollectionTileLightbox.prototype.renderEditMenu = function () {
	        var _this = this;
	        var _a = this.props, onEdit = _a.onEdit, collection = _a.collection;
	        var tile = this.state.tile;
	        var onClose = function () { return _this.setState({ editMenuOpen: false }); };
	        var edit = function () { return onEdit(collection, tile); };
	        return React.createElement(index_1.BubbleMenu, {className: "edit-menu", direction: "down", stage: index_2.Stage.fromSize(200, 200), openOn: this.refs['edit-button'], onClose: onClose}, 
	            React.createElement("ul", {className: "bubble-list"}, 
	                React.createElement("li", {className: "edit-title-and-desc", onClick: this.editTitleAndDesc.bind(this)}, constants_1.STRINGS.editTitleAndDesc), 
	                React.createElement("li", {className: "edit-vizualization", onClick: edit}, constants_1.STRINGS.editVisualization))
	        );
	    };
	    CollectionTileLightbox.prototype.renderMoreMenu = function () {
	        var _this = this;
	        var _a = this.props, onDelete = _a.onDelete, collection = _a.collection, onDuplicate = _a.onDuplicate;
	        var tile = this.state.tile;
	        var onClose = function () { return _this.setState({ moreMenuOpen: false }); };
	        var remove = function () { return onDelete(collection, tile); };
	        var duplicate = function () {
	            onDuplicate(collection, tile).then(function (url) {
	                window.location.hash = url;
	                onClose();
	                index_1.Notifier.success('Tile duplicated');
	            });
	        };
	        return React.createElement(index_1.BubbleMenu, {className: "more-menu", direction: "down", stage: index_2.Stage.fromSize(200, 200), openOn: this.refs['more-button'], onClose: onClose}, 
	            React.createElement("ul", {className: "bubble-list"}, 
	                React.createElement("li", {className: "duplicate-tile", onClick: duplicate}, constants_1.STRINGS.duplicateCollectionTile), 
	                React.createElement("li", {className: "delete-tile", onClick: remove}, constants_1.STRINGS.deleteCollectionTile))
	        );
	    };
	    CollectionTileLightbox.prototype.onMouseDown = function (e) {
	        var _a = this.state, editMenuOpen = _a.editMenuOpen, moreMenuOpen = _a.moreMenuOpen;
	        var target = e.target;
	        var modal = this.refs['modal'];
	        var leftArrow = this.refs['left-arrow'];
	        var rightArrow = this.refs['right-arrow'];
	        if (dom_1.isInside(target, modal))
	            return;
	        if (dom_1.isInside(target, leftArrow))
	            return;
	        if (dom_1.isInside(target, rightArrow))
	            return;
	        if (editMenuOpen || moreMenuOpen)
	            return;
	        this.closeModal();
	    };
	    CollectionTileLightbox.prototype.swipe = function (direction) {
	        var collection = this.props.collection;
	        var tile = this.state.tile;
	        var tiles = collection.tiles;
	        var newIndex = tiles.indexOf(tile) + direction;
	        if (newIndex >= tiles.length)
	            newIndex = 0;
	        if (newIndex < 0)
	            newIndex = tiles.length - 1;
	        window.location.hash = "#collection/" + collection.name + "/" + tiles[newIndex].name;
	    };
	    CollectionTileLightbox.prototype.onEnter = function () {
	        if (this.state.editionMode)
	            this.saveEdition();
	    };
	    CollectionTileLightbox.prototype.saveEdition = function () {
	        var _this = this;
	        var collection = this.props.collection;
	        var tempTile = this.state.tempTile;
	        this.props.onChange(collection, tempTile).then(function () {
	            _this.setState({
	                tile: tempTile,
	                tempTile: null,
	                editionMode: false
	            });
	        });
	    };
	    CollectionTileLightbox.prototype.renderHeadBand = function () {
	        var _this = this;
	        var onEdit = this.props.onEdit;
	        var _a = this.state, editionMode = _a.editionMode, tempTile = _a.tempTile, tile = _a.tile, editMenuOpen = _a.editMenuOpen, moreMenuOpen = _a.moreMenuOpen;
	        var editButton = null;
	        var moreButton = null;
	        if (onEdit) {
	            editButton = React.createElement("div", {className: dom_1.classNames('edit-button icon', { active: editMenuOpen }), onClick: this.onEditIconClick.bind(this), ref: "edit-button"}, 
	                React.createElement(index_1.SvgIcon, {svg: __webpack_require__(492)})
	            );
	            moreButton = React.createElement("div", {className: dom_1.classNames('more-button icon', { active: moreMenuOpen }), onClick: this.onMoreIconClick.bind(this), ref: "more-button"}, 
	                React.createElement(index_1.SvgIcon, {svg: __webpack_require__(359)})
	            );
	        }
	        if (!editionMode) {
	            return React.createElement("div", {className: "headband grid-row"}, 
	                React.createElement("div", {className: "grid-col-70 vertical"}, 
	                    React.createElement("div", {className: "title actionable", onClick: this.editTitleAndDesc.bind(this)}, tile.title), 
	                    React.createElement("div", {className: "description actionable", onClick: this.editTitleAndDesc.bind(this)}, tile.description)), 
	                React.createElement("div", {className: "grid-col-30 right middle"}, 
	                    React.createElement("div", {className: "explore-button", onClick: this.onExplore.bind(this)}, constants_1.STRINGS.explore), 
	                    editButton, 
	                    moreButton, 
	                    React.createElement("div", {className: "separator"}), 
	                    React.createElement("div", {className: "close-button icon", onClick: this.closeModal.bind(this)}, 
	                        React.createElement(index_1.SvgIcon, {svg: __webpack_require__(383)})
	                    )));
	        }
	        var onChange = function (newItem) {
	            _this.setState({ tempTile: newItem });
	        };
	        var makeTextInput = index_1.ImmutableInput.simpleGenerator(tempTile, onChange);
	        var cancel = function () {
	            _this.setState({
	                editionMode: false,
	                tempTile: null
	            });
	        };
	        return React.createElement("div", {className: "headband grid-row"}, 
	            React.createElement("div", {className: "grid-col-70 vertical enable-overflow"}, 
	                makeTextInput('title', /.*/, true), 
	                makeTextInput('description')), 
	            React.createElement("div", {className: "grid-col-30 right middle"}, 
	                React.createElement("div", {className: "cancel-button", onClick: cancel}, constants_1.STRINGS.cancel), 
	                React.createElement("div", {className: "save-button", onClick: this.saveEdition.bind(this)}, constants_1.STRINGS.save)));
	    };
	    CollectionTileLightbox.prototype.render = function () {
	        var timekeeper = this.props.timekeeper;
	        var _a = this.state, tile = _a.tile, visualizationStage = _a.visualizationStage, editMenuOpen = _a.editMenuOpen, moreMenuOpen = _a.moreMenuOpen;
	        if (!tile)
	            return null;
	        var essence = tile.essence;
	        var visElement = null;
	        if (essence.visResolve.isReady() && visualizationStage) {
	            var visProps = {
	                clicker: {},
	                essence: essence,
	                timekeeper: timekeeper,
	                stage: visualizationStage
	            };
	            visElement = React.createElement(index_3.getVisualizationComponent(essence.visualization), visProps);
	        }
	        return React.createElement(index_1.BodyPortal, {fullSize: true, onMount: this.updateStage.bind(this)}, 
	            React.createElement("div", {className: "collection-tile-lightbox"}, 
	                React.createElement(index_1.GlobalEventListener, {resize: this.updateStage.bind(this), escape: this.onEscape.bind(this), enter: this.onEnter.bind(this), mouseDown: this.onMouseDown.bind(this), left: this.swipe.bind(this, -1), right: this.swipe.bind(this, 1)}), 
	                React.createElement("div", {className: "backdrop"}), 
	                React.createElement(index_1.GoldenCenter, null, 
	                    React.createElement("div", {className: "modal-window", ref: "modal"}, 
	                        this.renderHeadBand(), 
	                        React.createElement("div", {className: "content", ref: "visualization"}, visElement))
	                ), 
	                React.createElement("div", {className: "left-arrow", onClick: this.swipe.bind(this, -1), ref: "left-arrow"}, 
	                    React.createElement(index_1.SvgIcon, {svg: __webpack_require__(481)})
	                ), 
	                React.createElement("div", {className: "right-arrow", onClick: this.swipe.bind(this, 1), ref: "right-arrow"}, 
	                    React.createElement(index_1.SvgIcon, {svg: __webpack_require__(482)})
	                ), 
	                editMenuOpen ? this.renderEditMenu() : null, 
	                moreMenuOpen ? this.renderMoreMenu() : null)
	        );
	    };
	    return CollectionTileLightbox;
	}(React.Component));
	exports.CollectionTileLightbox = CollectionTileLightbox;


/***/ },
/* 703 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(704);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../../node_modules/css-loader/index.js!./collection-tile-lightbox.css", function() {
				var newContent = require("!!./../../../../../node_modules/css-loader/index.js!./collection-tile-lightbox.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 704 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, ".collection-tile-lightbox .golden-center .modal-window .headband [class*='-button'].save-button,.collection-tile-lightbox .golden-center .modal-window .headband [class*='-button'].cancel-button{display:inline-block;padding:6px 16px;font-size:13px;min-width:60px;text-align:center;cursor:pointer;border-radius:2px;outline:none;height:30px}.collection-tile-lightbox .golden-center .modal-window .headband .disabled[class*='-button'].save-button,.collection-tile-lightbox .golden-center .modal-window .headband .disabled[class*='-button'].cancel-button,.collection-tile-lightbox .golden-center .modal-window .headband [disabled][class*='-button'].save-button,.collection-tile-lightbox .golden-center .modal-window .headband [disabled][class*='-button'].cancel-button{opacity:.60;cursor:default;pointer-events:none}.collection-tile-lightbox .golden-center .modal-window .headband [class*='-button'].save-button{background:#1ea3e6;color:#fff}.collection-tile-lightbox .golden-center .modal-window .headband [class*='-button'].save-button svg path{fill:#fff}.collection-tile-lightbox .golden-center .modal-window .headband [class*='-button'].save-button:hover{background:#1795d3}.collection-tile-lightbox .golden-center .modal-window .headband .active[class*='-button'].save-button,.collection-tile-lightbox .golden-center .modal-window .headband [class*='-button'].save-button:active{background:#1584bc;color:#e0e0e0}.collection-tile-lightbox .golden-center .modal-window .headband .active[class*='-button'].save-button svg path,.collection-tile-lightbox .golden-center .modal-window .headband [class*='-button'].save-button:active svg path{fill:#e0e0e0}.collection-tile-lightbox .golden-center .modal-window .headband [class*='-button'].cancel-button{background:rgba(30,163,230,0.22);color:#1ea3e6}.collection-tile-lightbox .golden-center .modal-window .headband [class*='-button'].cancel-button svg path{fill:#1ea3e6}.collection-tile-lightbox .golden-center .modal-window .headband [class*='-button'].cancel-button:hover{background:rgba(30,163,230,0.3)}.collection-tile-lightbox .golden-center .modal-window .headband .active[class*='-button'].cancel-button,.collection-tile-lightbox .golden-center .modal-window .headband [class*='-button'].cancel-button:active{background:rgba(30,163,230,0.38)}.collection-tile-lightbox .golden-center .modal-window{background:#fff;border-radius:2px;box-shadow:0 5px 9px 0 rgba(0,0,0,0.3),0 0 5px 0 rgba(0,0,0,0.2)}.collection-tile-lightbox{position:absolute;top:0;bottom:0;left:0;right:0}.collection-tile-lightbox .grid-row{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-ms-flex-negative:0;flex-shrink:0}.collection-tile-lightbox .grid-row .grid-col-0{-webkit-box-flex:1;-ms-flex:1;flex:1;-webkit-box-flex:0;-ms-flex-positive:0;flex-grow:0;-ms-flex-negative:0;flex-shrink:0;box-sizing:border-box;position:relative;-ms-flex-preferred-size:0%;flex-basis:0%;overflow:hidden}.collection-tile-lightbox .grid-row .grid-col-0.enable-overflow{overflow:initial}.collection-tile-lightbox .grid-row .grid-col-0:not(.vertical)>*:not(.grid-row){display:inline-block;vertical-align:top}.collection-tile-lightbox .grid-row .grid-col-0.vertical>*:not(.grid-row){text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.collection-tile-lightbox .grid-row .grid-col-0.left{text-align:left}.collection-tile-lightbox .grid-row .grid-col-0.right{text-align:right}.collection-tile-lightbox .grid-row .grid-col-0.center{text-align:center}.collection-tile-lightbox .grid-row .grid-col-0.middle{-ms-flex-item-align:center;align-self:center}.collection-tile-lightbox .grid-row .grid-col-0.top{-ms-flex-item-align:start;align-self:flex-start}.collection-tile-lightbox .grid-row .grid-col-0.bottom{-ms-flex-item-align:end;align-self:flex-end}.collection-tile-lightbox .grid-row .grid-col-0.stretch{-ms-flex-item-align:stretch;align-self:stretch}.collection-tile-lightbox .grid-row .grid-col-10{-webkit-box-flex:1;-ms-flex:1;flex:1;-webkit-box-flex:0;-ms-flex-positive:0;flex-grow:0;-ms-flex-negative:0;flex-shrink:0;box-sizing:border-box;position:relative;-ms-flex-preferred-size:10%;flex-basis:10%;overflow:hidden}.collection-tile-lightbox .grid-row .grid-col-10.enable-overflow{overflow:initial}.collection-tile-lightbox .grid-row .grid-col-10:not(.vertical)>*:not(.grid-row){display:inline-block;vertical-align:top}.collection-tile-lightbox .grid-row .grid-col-10.vertical>*:not(.grid-row){text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.collection-tile-lightbox .grid-row .grid-col-10.left{text-align:left}.collection-tile-lightbox .grid-row .grid-col-10.right{text-align:right}.collection-tile-lightbox .grid-row .grid-col-10.center{text-align:center}.collection-tile-lightbox .grid-row .grid-col-10.middle{-ms-flex-item-align:center;align-self:center}.collection-tile-lightbox .grid-row .grid-col-10.top{-ms-flex-item-align:start;align-self:flex-start}.collection-tile-lightbox .grid-row .grid-col-10.bottom{-ms-flex-item-align:end;align-self:flex-end}.collection-tile-lightbox .grid-row .grid-col-10.stretch{-ms-flex-item-align:stretch;align-self:stretch}.collection-tile-lightbox .grid-row .grid-col-20{-webkit-box-flex:1;-ms-flex:1;flex:1;-webkit-box-flex:0;-ms-flex-positive:0;flex-grow:0;-ms-flex-negative:0;flex-shrink:0;box-sizing:border-box;position:relative;-ms-flex-preferred-size:20%;flex-basis:20%;overflow:hidden}.collection-tile-lightbox .grid-row .grid-col-20.enable-overflow{overflow:initial}.collection-tile-lightbox .grid-row .grid-col-20:not(.vertical)>*:not(.grid-row){display:inline-block;vertical-align:top}.collection-tile-lightbox .grid-row .grid-col-20.vertical>*:not(.grid-row){text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.collection-tile-lightbox .grid-row .grid-col-20.left{text-align:left}.collection-tile-lightbox .grid-row .grid-col-20.right{text-align:right}.collection-tile-lightbox .grid-row .grid-col-20.center{text-align:center}.collection-tile-lightbox .grid-row .grid-col-20.middle{-ms-flex-item-align:center;align-self:center}.collection-tile-lightbox .grid-row .grid-col-20.top{-ms-flex-item-align:start;align-self:flex-start}.collection-tile-lightbox .grid-row .grid-col-20.bottom{-ms-flex-item-align:end;align-self:flex-end}.collection-tile-lightbox .grid-row .grid-col-20.stretch{-ms-flex-item-align:stretch;align-self:stretch}.collection-tile-lightbox .grid-row .grid-col-30{-webkit-box-flex:1;-ms-flex:1;flex:1;-webkit-box-flex:0;-ms-flex-positive:0;flex-grow:0;-ms-flex-negative:0;flex-shrink:0;box-sizing:border-box;position:relative;-ms-flex-preferred-size:30%;flex-basis:30%;overflow:hidden}.collection-tile-lightbox .grid-row .grid-col-30.enable-overflow{overflow:initial}.collection-tile-lightbox .grid-row .grid-col-30:not(.vertical)>*:not(.grid-row){display:inline-block;vertical-align:top}.collection-tile-lightbox .grid-row .grid-col-30.vertical>*:not(.grid-row){text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.collection-tile-lightbox .grid-row .grid-col-30.left{text-align:left}.collection-tile-lightbox .grid-row .grid-col-30.right{text-align:right}.collection-tile-lightbox .grid-row .grid-col-30.center{text-align:center}.collection-tile-lightbox .grid-row .grid-col-30.middle{-ms-flex-item-align:center;align-self:center}.collection-tile-lightbox .grid-row .grid-col-30.top{-ms-flex-item-align:start;align-self:flex-start}.collection-tile-lightbox .grid-row .grid-col-30.bottom{-ms-flex-item-align:end;align-self:flex-end}.collection-tile-lightbox .grid-row .grid-col-30.stretch{-ms-flex-item-align:stretch;align-self:stretch}.collection-tile-lightbox .grid-row .grid-col-40{-webkit-box-flex:1;-ms-flex:1;flex:1;-webkit-box-flex:0;-ms-flex-positive:0;flex-grow:0;-ms-flex-negative:0;flex-shrink:0;box-sizing:border-box;position:relative;-ms-flex-preferred-size:40%;flex-basis:40%;overflow:hidden}.collection-tile-lightbox .grid-row .grid-col-40.enable-overflow{overflow:initial}.collection-tile-lightbox .grid-row .grid-col-40:not(.vertical)>*:not(.grid-row){display:inline-block;vertical-align:top}.collection-tile-lightbox .grid-row .grid-col-40.vertical>*:not(.grid-row){text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.collection-tile-lightbox .grid-row .grid-col-40.left{text-align:left}.collection-tile-lightbox .grid-row .grid-col-40.right{text-align:right}.collection-tile-lightbox .grid-row .grid-col-40.center{text-align:center}.collection-tile-lightbox .grid-row .grid-col-40.middle{-ms-flex-item-align:center;align-self:center}.collection-tile-lightbox .grid-row .grid-col-40.top{-ms-flex-item-align:start;align-self:flex-start}.collection-tile-lightbox .grid-row .grid-col-40.bottom{-ms-flex-item-align:end;align-self:flex-end}.collection-tile-lightbox .grid-row .grid-col-40.stretch{-ms-flex-item-align:stretch;align-self:stretch}.collection-tile-lightbox .grid-row .grid-col-50{-webkit-box-flex:1;-ms-flex:1;flex:1;-webkit-box-flex:0;-ms-flex-positive:0;flex-grow:0;-ms-flex-negative:0;flex-shrink:0;box-sizing:border-box;position:relative;-ms-flex-preferred-size:50%;flex-basis:50%;overflow:hidden}.collection-tile-lightbox .grid-row .grid-col-50.enable-overflow{overflow:initial}.collection-tile-lightbox .grid-row .grid-col-50:not(.vertical)>*:not(.grid-row){display:inline-block;vertical-align:top}.collection-tile-lightbox .grid-row .grid-col-50.vertical>*:not(.grid-row){text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.collection-tile-lightbox .grid-row .grid-col-50.left{text-align:left}.collection-tile-lightbox .grid-row .grid-col-50.right{text-align:right}.collection-tile-lightbox .grid-row .grid-col-50.center{text-align:center}.collection-tile-lightbox .grid-row .grid-col-50.middle{-ms-flex-item-align:center;align-self:center}.collection-tile-lightbox .grid-row .grid-col-50.top{-ms-flex-item-align:start;align-self:flex-start}.collection-tile-lightbox .grid-row .grid-col-50.bottom{-ms-flex-item-align:end;align-self:flex-end}.collection-tile-lightbox .grid-row .grid-col-50.stretch{-ms-flex-item-align:stretch;align-self:stretch}.collection-tile-lightbox .grid-row .grid-col-60{-webkit-box-flex:1;-ms-flex:1;flex:1;-webkit-box-flex:0;-ms-flex-positive:0;flex-grow:0;-ms-flex-negative:0;flex-shrink:0;box-sizing:border-box;position:relative;-ms-flex-preferred-size:60%;flex-basis:60%;overflow:hidden}.collection-tile-lightbox .grid-row .grid-col-60.enable-overflow{overflow:initial}.collection-tile-lightbox .grid-row .grid-col-60:not(.vertical)>*:not(.grid-row){display:inline-block;vertical-align:top}.collection-tile-lightbox .grid-row .grid-col-60.vertical>*:not(.grid-row){text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.collection-tile-lightbox .grid-row .grid-col-60.left{text-align:left}.collection-tile-lightbox .grid-row .grid-col-60.right{text-align:right}.collection-tile-lightbox .grid-row .grid-col-60.center{text-align:center}.collection-tile-lightbox .grid-row .grid-col-60.middle{-ms-flex-item-align:center;align-self:center}.collection-tile-lightbox .grid-row .grid-col-60.top{-ms-flex-item-align:start;align-self:flex-start}.collection-tile-lightbox .grid-row .grid-col-60.bottom{-ms-flex-item-align:end;align-self:flex-end}.collection-tile-lightbox .grid-row .grid-col-60.stretch{-ms-flex-item-align:stretch;align-self:stretch}.collection-tile-lightbox .grid-row .grid-col-70{-webkit-box-flex:1;-ms-flex:1;flex:1;-webkit-box-flex:0;-ms-flex-positive:0;flex-grow:0;-ms-flex-negative:0;flex-shrink:0;box-sizing:border-box;position:relative;-ms-flex-preferred-size:70%;flex-basis:70%;overflow:hidden}.collection-tile-lightbox .grid-row .grid-col-70.enable-overflow{overflow:initial}.collection-tile-lightbox .grid-row .grid-col-70:not(.vertical)>*:not(.grid-row){display:inline-block;vertical-align:top}.collection-tile-lightbox .grid-row .grid-col-70.vertical>*:not(.grid-row){text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.collection-tile-lightbox .grid-row .grid-col-70.left{text-align:left}.collection-tile-lightbox .grid-row .grid-col-70.right{text-align:right}.collection-tile-lightbox .grid-row .grid-col-70.center{text-align:center}.collection-tile-lightbox .grid-row .grid-col-70.middle{-ms-flex-item-align:center;align-self:center}.collection-tile-lightbox .grid-row .grid-col-70.top{-ms-flex-item-align:start;align-self:flex-start}.collection-tile-lightbox .grid-row .grid-col-70.bottom{-ms-flex-item-align:end;align-self:flex-end}.collection-tile-lightbox .grid-row .grid-col-70.stretch{-ms-flex-item-align:stretch;align-self:stretch}.collection-tile-lightbox .grid-row .grid-col-80{-webkit-box-flex:1;-ms-flex:1;flex:1;-webkit-box-flex:0;-ms-flex-positive:0;flex-grow:0;-ms-flex-negative:0;flex-shrink:0;box-sizing:border-box;position:relative;-ms-flex-preferred-size:80%;flex-basis:80%;overflow:hidden}.collection-tile-lightbox .grid-row .grid-col-80.enable-overflow{overflow:initial}.collection-tile-lightbox .grid-row .grid-col-80:not(.vertical)>*:not(.grid-row){display:inline-block;vertical-align:top}.collection-tile-lightbox .grid-row .grid-col-80.vertical>*:not(.grid-row){text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.collection-tile-lightbox .grid-row .grid-col-80.left{text-align:left}.collection-tile-lightbox .grid-row .grid-col-80.right{text-align:right}.collection-tile-lightbox .grid-row .grid-col-80.center{text-align:center}.collection-tile-lightbox .grid-row .grid-col-80.middle{-ms-flex-item-align:center;align-self:center}.collection-tile-lightbox .grid-row .grid-col-80.top{-ms-flex-item-align:start;align-self:flex-start}.collection-tile-lightbox .grid-row .grid-col-80.bottom{-ms-flex-item-align:end;align-self:flex-end}.collection-tile-lightbox .grid-row .grid-col-80.stretch{-ms-flex-item-align:stretch;align-self:stretch}.collection-tile-lightbox .grid-row .grid-col-90{-webkit-box-flex:1;-ms-flex:1;flex:1;-webkit-box-flex:0;-ms-flex-positive:0;flex-grow:0;-ms-flex-negative:0;flex-shrink:0;box-sizing:border-box;position:relative;-ms-flex-preferred-size:90%;flex-basis:90%;overflow:hidden}.collection-tile-lightbox .grid-row .grid-col-90.enable-overflow{overflow:initial}.collection-tile-lightbox .grid-row .grid-col-90:not(.vertical)>*:not(.grid-row){display:inline-block;vertical-align:top}.collection-tile-lightbox .grid-row .grid-col-90.vertical>*:not(.grid-row){text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.collection-tile-lightbox .grid-row .grid-col-90.left{text-align:left}.collection-tile-lightbox .grid-row .grid-col-90.right{text-align:right}.collection-tile-lightbox .grid-row .grid-col-90.center{text-align:center}.collection-tile-lightbox .grid-row .grid-col-90.middle{-ms-flex-item-align:center;align-self:center}.collection-tile-lightbox .grid-row .grid-col-90.top{-ms-flex-item-align:start;align-self:flex-start}.collection-tile-lightbox .grid-row .grid-col-90.bottom{-ms-flex-item-align:end;align-self:flex-end}.collection-tile-lightbox .grid-row .grid-col-90.stretch{-ms-flex-item-align:stretch;align-self:stretch}.collection-tile-lightbox .grid-row .grid-col-100{-webkit-box-flex:1;-ms-flex:1;flex:1;-webkit-box-flex:0;-ms-flex-positive:0;flex-grow:0;-ms-flex-negative:0;flex-shrink:0;box-sizing:border-box;position:relative;-ms-flex-preferred-size:100%;flex-basis:100%;overflow:hidden}.collection-tile-lightbox .grid-row .grid-col-100.enable-overflow{overflow:initial}.collection-tile-lightbox .grid-row .grid-col-100:not(.vertical)>*:not(.grid-row){display:inline-block;vertical-align:top}.collection-tile-lightbox .grid-row .grid-col-100.vertical>*:not(.grid-row){text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.collection-tile-lightbox .grid-row .grid-col-100.left{text-align:left}.collection-tile-lightbox .grid-row .grid-col-100.right{text-align:right}.collection-tile-lightbox .grid-row .grid-col-100.center{text-align:center}.collection-tile-lightbox .grid-row .grid-col-100.middle{-ms-flex-item-align:center;align-self:center}.collection-tile-lightbox .grid-row .grid-col-100.top{-ms-flex-item-align:start;align-self:flex-start}.collection-tile-lightbox .grid-row .grid-col-100.bottom{-ms-flex-item-align:end;align-self:flex-end}.collection-tile-lightbox .grid-row .grid-col-100.stretch{-ms-flex-item-align:stretch;align-self:stretch}.collection-tile-lightbox .backdrop{position:absolute;top:0;bottom:0;left:0;right:0;background:#000;opacity:0.5}.collection-tile-lightbox .golden-center{position:absolute;top:0;bottom:0;left:0;right:0;overflow-y:auto}.collection-tile-lightbox .golden-center .modal-window{width:calc(100% - 270px)}.collection-tile-lightbox .golden-center .modal-window .headband{padding:16px 20px;border-bottom:1px solid #e6e6e6}.collection-tile-lightbox .golden-center .modal-window .headband .actionable{cursor:pointer}.collection-tile-lightbox .golden-center .modal-window .headband .title{color:#444;font-size:16px;margin-bottom:7px;margin-top:5px;height:18px}.collection-tile-lightbox .golden-center .modal-window .headband .description{color:#bababa;height:15px;margin-bottom:1px}.collection-tile-lightbox .golden-center .modal-window .headband input.title,.collection-tile-lightbox .golden-center .modal-window .headband input.description{margin-left:-7px;font-size:13px;height:30px;color:#444}.collection-tile-lightbox .golden-center .modal-window .headband input.title{margin-top:-4px;margin-bottom:4px}.collection-tile-lightbox .golden-center .modal-window .headband input.description{margin-bottom:-4px}.collection-tile-lightbox .golden-center .modal-window .headband [class*='-button']{padding:5px 7px;line-height:20px;border-radius:2px;font-size:12px;text-transform:uppercase;color:#1ea3e6;cursor:pointer}.collection-tile-lightbox .golden-center .modal-window .headband [class*='-button'].cancel-button{height:auto;padding:0 12px;line-height:30px;border-radius:3px;font-size:13px;text-transform:none}.collection-tile-lightbox .golden-center .modal-window .headband [class*='-button'].save-button{height:auto;padding:0 12px;line-height:30px;border-radius:3px;font-size:13px;text-transform:none}.collection-tile-lightbox .golden-center .modal-window .headband [class*='-button'].icon{border-radius:50%;width:30px;padding:5px}.collection-tile-lightbox .golden-center .modal-window .headband [class*='-button'].icon path{fill:#1ea3e6}.collection-tile-lightbox .golden-center .modal-window .headband [class*='-button']:not(:last-child){margin-right:8px}.collection-tile-lightbox .golden-center .modal-window .headband [class*='-button'].close-button path{fill:#999}.collection-tile-lightbox .golden-center .modal-window .headband [class*='-button'].close-button:hover,.collection-tile-lightbox .golden-center .modal-window .headband [class*='-button'].close-button.active{background:none}.collection-tile-lightbox .golden-center .modal-window .headband [class*='-button'].close-button:hover path,.collection-tile-lightbox .golden-center .modal-window .headband [class*='-button'].close-button.active path{fill:#666}.collection-tile-lightbox .golden-center .modal-window .headband [class*='-button']:hover{background-color:#e3f4fc}.collection-tile-lightbox .golden-center .modal-window .headband [class*='-button'].active{background-color:#c3e7f8}.collection-tile-lightbox .golden-center .modal-window .headband .separator{border-left:1px solid #dedede;height:30px;margin:0 10px}.collection-tile-lightbox .golden-center .modal-window .content{min-height:calc(100vh - 200px)}.collection-tile-lightbox [class$='-arrow']{position:absolute;width:60px;padding:16px;top:50%;-webkit-transform:translate(0, -50%);-ms-transform:translate(0, -50%);transform:translate(0, -50%);border-radius:50%;background-color:rgba(255,255,255,0.18);cursor:pointer}.collection-tile-lightbox [class$='-arrow'] path{fill:#fff}.collection-tile-lightbox [class$='-arrow']:hover{background-color:rgba(255,255,255,0.26)}.collection-tile-lightbox [class$='-arrow']:active{background-color:rgba(255,255,255,0.34)}.collection-tile-lightbox [class$='-arrow'].left-arrow{left:50px}.collection-tile-lightbox [class$='-arrow'].right-arrow{right:50px}\n", ""]);

	// exports


/***/ },
/* 705 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var React = __webpack_require__(5);
	var Q = __webpack_require__(182);
	var ajax_1 = __webpack_require__(198);
	var index_1 = __webpack_require__(202);
	var string_1 = __webpack_require__(402);
	var constants_1 = __webpack_require__(292);
	var index_2 = __webpack_require__(288);
	var index_3 = __webpack_require__(293);
	var CollectionViewDelegate = (function () {
	    function CollectionViewDelegate(app) {
	        this.app = app;
	        this.addCollection = this.addCollection.bind(this);
	        this.addTile = this.addTile.bind(this);
	        this.createTile = this.createTile.bind(this);
	        this.deleteCollection = this.deleteCollection.bind(this);
	        this.deleteTile = this.deleteTile.bind(this);
	        this.duplicateTile = this.duplicateTile.bind(this);
	        this.editTile = this.editTile.bind(this);
	        this.updateCollection = this.updateCollection.bind(this);
	        this.updateTile = this.updateTile.bind(this);
	    }
	    CollectionViewDelegate.prototype.setState = function (state, callback) {
	        return this.app.setState.call(this.app, state, callback);
	    };
	    CollectionViewDelegate.prototype.save = function (appSettings) {
	        var _this = this;
	        var deferred = Q.defer();
	        ajax_1.Ajax.query({
	            method: "POST",
	            url: 'collections',
	            data: {
	                collections: appSettings.toJS().collections || []
	            }
	        })
	            .then(function (status) { return _this.setState({ appSettings: appSettings }, deferred.resolve); }, function (xhr) {
	            index_3.Notifier.failure('Woops', 'Something bad happened');
	            deferred.reject(xhr.response);
	        }).done();
	        return deferred.promise;
	    };
	    CollectionViewDelegate.prototype.getSettings = function () {
	        return this.app.state.appSettings;
	    };
	    CollectionViewDelegate.prototype.getTimekeeper = function () {
	        return this.app.state.timekeeper;
	    };
	    CollectionViewDelegate.prototype.addCollection = function (collection) {
	        return this
	            .save(this.getSettings().addOrUpdateCollection(collection))
	            .then(function () { return ("#collection/" + collection.name); });
	    };
	    CollectionViewDelegate.prototype.deleteTile = function (collection, tile) {
	        var _this = this;
	        var appSettings = this.getSettings();
	        var collectionURL = "#collection/" + collection.name;
	        var oldIndex = collection.tiles.indexOf(tile);
	        var newCollection = collection.deleteTile(tile);
	        var newSettings = appSettings.addOrUpdateCollection(newCollection);
	        var undo = function () { return _this.addTile(newCollection, tile, oldIndex); };
	        this.save(newSettings).then(function () {
	            window.location.hash = collectionURL;
	            index_3.Notifier.success('Tile removed', { label: constants_1.STRINGS.undo, callback: undo });
	        });
	    };
	    CollectionViewDelegate.prototype.addTile = function (collection, tile, index) {
	        var appSettings = this.getSettings();
	        var newTiles = collection.tiles;
	        if (index !== undefined) {
	            newTiles.splice(index, 0, tile);
	        }
	        else {
	            newTiles.push(tile);
	        }
	        return this
	            .save(appSettings.addOrUpdateCollection(collection.changeTiles(newTiles)))
	            .then(function () { return ("#collection/" + collection.name + "/" + tile.name); });
	    };
	    CollectionViewDelegate.prototype.duplicateTile = function (collection, tile) {
	        var newTile = new index_1.CollectionTile(tile.valueOf())
	            .changeName(string_1.generateUniqueName('i', collection.isNameAvailable))
	            .changeTitle(tile.title + ' (copy)');
	        return this.addTile(collection, newTile);
	    };
	    CollectionViewDelegate.prototype.createTile = function (collection, dataCube) {
	        var _this = this;
	        var timekeeper = this.getTimekeeper();
	        var collectionURL = "#collection/" + collection.name;
	        var onCancel = function () {
	            _this.setState({ cubeViewSupervisor: undefined });
	            window.location.hash = collectionURL;
	        };
	        var onSave = function (_collection, CollectionTile) {
	            _this.setState({ cubeViewSupervisor: undefined });
	            _this.addTile(_collection, CollectionTile).then(function (url) { return window.location.hash = url; });
	        };
	        var getConfirmationModal = function (newEssence) {
	            return React.createElement(index_2.AddCollectionTileModal, {collection: collection, timekeeper: timekeeper, essence: newEssence, dataCube: dataCube, onSave: onSave});
	        };
	        this.setState({
	            cubeViewSupervisor: {
	                title: constants_1.STRINGS.addVisualization + ': ' + collection.title,
	                cancel: onCancel,
	                getConfirmationModal: getConfirmationModal,
	                saveLabel: constants_1.STRINGS.add
	            }
	        }, function () { return window.location.hash = '#' + dataCube.name; });
	    };
	    CollectionViewDelegate.prototype.updateCollection = function (collection) {
	        var appSettings = this.getSettings();
	        return this.save(appSettings.addOrUpdateCollection(collection));
	    };
	    CollectionViewDelegate.prototype.deleteCollection = function (collection) {
	        var _this = this;
	        var appSettings = this.getSettings();
	        var oldIndex = appSettings.collections.indexOf(collection);
	        var undo = function () {
	            _this.save(_this.getSettings().addCollectionAt(collection, oldIndex));
	        };
	        return this.save(appSettings.deleteCollection(collection)).then(function () {
	            window.location.hash = "#/home";
	            index_3.Notifier.success('Collection removed', { label: constants_1.STRINGS.undo, callback: undo });
	        });
	    };
	    CollectionViewDelegate.prototype.updateTile = function (collection, tile) {
	        var appSettings = this.getSettings();
	        return this.save(appSettings.addOrUpdateCollection(collection.updateTile(tile)));
	    };
	    CollectionViewDelegate.prototype.editTile = function (collection, tile) {
	        var _this = this;
	        var appSettings = this.getSettings();
	        var collectionURL = "#collection/" + collection.name + "/" + tile.name;
	        var onCancel = function () { return window.location.hash = collectionURL; };
	        var onSave = function (newEssence) {
	            var newCollection = collection.updateTile(tile.changeEssence(newEssence));
	            _this.save(appSettings.addOrUpdateCollection(newCollection))
	                .then(function () { return window.location.hash = collectionURL; });
	        };
	        var essence = tile.essence;
	        this.setState({
	            cubeViewSupervisor: {
	                title: constants_1.STRINGS.editVisualization + ': ' + collection.title + ' / ' + tile.title,
	                cancel: onCancel,
	                save: onSave
	            }
	        }, function () { return window.location.hash = "#" + essence.dataCube.name + "/" + essence.toHash(); });
	    };
	    return CollectionViewDelegate;
	}());
	exports.CollectionViewDelegate = CollectionViewDelegate;


/***/ }
]));